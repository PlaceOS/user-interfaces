{"version":3,"file":"apps_workplace_src_app_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./apps/workplace/src/app/dashboard/dashboard-availability.component.ts","./apps/workplace/src/app/dashboard/dashboard-contacts.component.ts","./apps/workplace/src/app/dashboard/dashboard-deliveries.component.ts","./apps/workplace/src/app/dashboard/dashboard-delivery-modal.component.ts","./apps/workplace/src/app/dashboard/dashboard-schedule-item.component.ts","./apps/workplace/src/app/dashboard/dashboard-state.service.ts","./apps/workplace/src/app/dashboard/dashboard-upcoming.component.ts","./apps/workplace/src/app/dashboard/dashboard.component.ts","./apps/workplace/src/app/dashboard/dashboard.module.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { DashboardStateService } from './dashboard-state.service';\n\n@Component({\n    selector: 'a-dashboard-availability',\n    template: `\n        <h3 class=\"m-0 font-medium text-xl\">Available Now</h3>\n        <div\n            class=\"flex flex-col items-center p-2 bg-white dark:bg-neutral-600 shadow my-4 rounded-lg\"\n        >\n            <div class=\"flex items-center w-full mb-2\">\n                <div>Building Levels</div>\n            </div>\n            <div free-levels class=\"items space-y-2 w-full\">\n                <a\n                    button\n                    btn\n                    matRipple\n                    class=\"w-full\"\n                    *ngFor=\"let lvl of levels_free | async | slice: 0:2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ level: lvl.id }\"\n                >\n                    <div class=\"max-w-full truncate\">\n                        {{ lvl.display_name || lvl.name }}\n                    </div>\n                </a>\n                <span\n                    *ngIf=\"!(levels_free | async).length\"\n                    class=\"text-black/30 dark:text-white/30 text-sm mb-2\"\n                    >No free spaces in building</span\n                >\n            </div>\n        </div>\n        <div\n            free-spaces\n            class=\"flex items-center flex-col rounded-lg bg-white dark:bg-neutral-600 shadow my-4 p-2\"\n            *ngIf=\"(space_list | async)?.length\"\n        >\n            <div class=\"flex items-center w-full mb-2\">\n                <div>Spaces</div>\n            </div>\n            <div class=\"items space-y-2 w-full\">\n                <a\n                    button\n                    btn\n                    matRipple\n                    class=\"w-full\"\n                    *ngFor=\"let space of space_list | async | slice: 0:3\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ space: space.id }\"\n                >\n                    <div class=\"max-w-full truncate\">\n                        {{ space.display_name || space.name }}\n                    </div>\n                </a>\n                <span\n                    *ngIf=\"!(space_list | async).length\"\n                    class=\"text-dark-fade text-sm mb-2\"\n                    >No free spaces</span\n                >\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1em;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class DashboardAvailabilityComponent implements OnInit, OnDestroy {\n    public readonly space_list = this._state.free_spaces;\n    public readonly levels_free = this._state.level_occupancy;\n\n    constructor(private _state: DashboardStateService) {}\n\n    public async ngOnInit() {\n        this._state.pollFreeSpaces();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingFreeSpaces();\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DashboardStateService } from './dashboard-state.service';\n\n@Component({\n    selector: 'a-dashboard-contacts',\n    template: `\n        <h3 class=\"m-0 mb-2 font-medium text-xl\">Colleagues</h3>\n        <div\n            name=\"contact-list\"\n            class=\"bg-gray-400 dark:bg-neutral-600 border border-gray-200 dark:border-neutral-500 shadow rounded-lg p-2 pl-0 space-y-2 flex flex-wrap\"\n        >\n            <div\n                name=\"contact\"\n                *ngFor=\"let user of contacts | async\"\n                class=\"bg-white rounded-lg flex-1 flex flex-col items-center p-2 relative dark:bg-neutral-700\"\n            >\n                <a-user-avatar\n                    class=\"text-2xl mb-2\"\n                    [user]=\"user\"\n                ></a-user-avatar>\n                <div name=\"contact-name\" class=\"text-sm mb-2\">\n                    {{ user.name }}\n                </div>\n                <!-- <div name=\"location\" class=\"flex items-center text-sm\">\n                    <div name=\"dot\" class=\"mr-2\"></div>\n                    Level 12\n                </div> -->\n                <button icon name=\"close\" (click)=\"removeUser(user)\">\n                    <app-icon\n                        [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                    ></app-icon>\n                </button>\n            </div>\n            <button\n                name=\"contact\"\n                btn\n                matRipple\n                class=\"rounded-lg flex-1 w-full dark:bg-neutral-800\"\n                [matMenuTriggerFor]=\"menu\"\n                (menuOpened)=\"focusInput()\"\n                (menuClosed)=\"clearInput()\"\n            >\n                <div\n                    class=\"flex flex-col items-center p-4 text-black dark:text-white w-full\"\n                >\n                    <app-icon\n                        class=\"text-2xl\"\n                        [icon]=\"{\n                            class: 'material-icons',\n                            content: 'person_add'\n                        }\"\n                    ></app-icon>\n                    <span class=\"w-full leading-tight whitespace-normal\"\n                        >Click to add a person to contacts</span\n                    >\n                </div>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <div\n                mat-menu-item\n                class=\"p-0\"\n                (click)=\"$event.stopPropagation(); $event.preventDefault()\"\n            >\n                <input\n                    #input\n                    class=\"w-full p-2 text-base\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"updateSearch(search_str)\"\n                    placeholder=\"Search for user...\"\n                />\n            </div>\n            <button mat-menu-item *ngIf=\"!(search_results | async)?.length\">\n                {{\n                    !search_str\n                        ? 'Type to search for users...'\n                        : 'No matches for \"' + search_str + '\"'\n                }}\n            </button>\n            <button\n                mat-menu-item\n                *ngFor=\"let user of search_results | async | slice: 0:8\"\n                (click)=\"addUser(user)\"\n            >\n                <div class=\"flex items-center leading-tight\">\n                    <a-user-avatar\n                        class=\"text-xl mr-2\"\n                        [user]=\"user\"\n                    ></a-user-avatar>\n                    <div class=\"flex-1\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"text-xs text-dark-fade\">\n                            {{ user.email }}\n                        </div>\n                    </div>\n                </div>\n            </button>\n        </mat-menu>\n        <dashboard-deliveries *ngIf=\"can_deliver\"></dashboard-deliveries>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1em;\n                min-width: 16rem;\n            }\n\n            [name='contact-list'] {\n                padding: 0 0.5rem 0.5rem 0;\n            }\n\n            [name='contact'] {\n                min-width: 8rem;\n                width: 8rem;\n                margin-left: 0.5rem;\n                margin-top: 0.5rem;\n            }\n\n            [name='contact-name'] {\n                font-weight: 400;\n            }\n\n            [name='dot'] {\n                height: 8px;\n                width: 8px;\n                border-radius: 8px;\n                background-color: #22992e;\n            }\n\n            button[name='close'] {\n                position: absolute;\n                display: none;\n                top: 0.25rem;\n                right: 0.25rem;\n            }\n\n            [name='contact']:hover button[name='close'] {\n                display: initial;\n            }\n\n            button[name='contact'] {\n                background-color: #f0f0f0;\n                border: none;\n                min-width: calc(100% - 0.5rem) !important;\n            }\n        `,\n    ],\n})\nexport class DashboardContactsComponent extends AsyncHandler {\n    public readonly contacts = this._state.contacts;\n\n    public readonly search_results = this._state.search_results;\n\n    public readonly addUser = (u) => this._state.addContact(u);\n\n    public readonly removeUser = (u) => this._state.removeContact(u);\n\n    public readonly updateSearch = (s) => this._state.setOptions({ search: s });\n\n    public search_str: string = '';\n\n    @ViewChild('input') private _input_el: ElementRef;\n\n    public get can_deliver() {\n        return !!this._settings.get('app.can_deliver');\n    }\n\n    constructor(\n        private _state: DashboardStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.updateContacts();\n    }\n\n    public focusInput() {\n        this.timeout('focus', () => {\n            if (this._input_el) {\n                this._input_el.nativeElement.focus();\n            }\n        });\n    }\n\n    public clearInput() {\n        this.search_str = '';\n        this._state.setOptions({ search: '' });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport { DashboardDeliveryModalComponent } from './dashboard-delivery-modal.component';\n\n@Component({\n    selector: 'dashboard-deliveries',\n    template: `\n        <h3 class=\"m-0 my-2 font-medium text-xl\">Deliveries</h3>\n        <div class=\"bg-white shadow p-2 rounded dark:bg-neutral-700\">\n            <div class=\"divide-y\" *ngIf=\"deliveries?.length; else empty_state\">\n                <div\n                    class=\"flex items-center py-2\"\n                    *ngFor=\"let item of deliveries\"\n                >\n                    <div class=\"flex-1 pl-2\">\n                        <div class=\"\">\n                            {{ item?.name || 'Untitled Delivery' }}\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{\n                                item && item.received\n                                    ? (item.received | date: 'medium')\n                                    : 'Not received'\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"m-4 h-2 w-2 rounded-full\"\n                        [class.bg-pending]=\"!item.received\"\n                        [class.bg-success]=\"item.received\"\n                    ></div>\n                </div>\n                <button\n                    matRipple\n                    class=\"w-full mt-2\"\n                    (click)=\"registerDelivery()\"\n                >\n                    Register Delivery\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"p-8 flex items-center justify-center opacity-40\">\n                No registered deliveries\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DashboardDeliveriesComponent {\n    public deliveries = [\n        { name: 'USB-C Cables', received: Date.now() },\n        { name: 'Desk Fan' },\n    ];\n\n    constructor(private _dialog: MatDialog) {}\n\n    public async registerDelivery() {\n        const ref = this._dialog.open(DashboardDeliveryModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.events\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details.reason !== 'done') return;\n        this.deliveries.push(details.metadata);\n        ref.close();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent } from '@placeos/common';\n\n@Component({\n    selector: 'dashboard-delivery-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h3>Register Delivery</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-2 w-[24rem]\" [formGroup]=\"form\">\n            <div>\n                <label>Name<span>*</span>:</label>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <input\n                        matInput\n                        placeholder=\"Name of items being delivered\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div>\n                <label>Description:</label>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <textarea\n                        matInput\n                        placeholder=\"Description of items being delivered\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div>\n                <label>Sender:</label>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <input\n                        matInput\n                        placeholder=\"Name of sender\"\n                        formControlName=\"sender\"\n                    />\n                    <mat-error>Sender is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div>\n                <label>Priority:</label>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <mat-select placeholder=\"Low\" formControlName=\"priority\">\n                        <mat-option>Very Low</mat-option>\n                        <mat-option>Low</mat-option>\n                        <mat-option>Normal</mat-option>\n                        <mat-option>High</mat-option>\n                        <mat-option>Very Height</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"p-2 flex items-center justify-center border-t border-gray-100\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"register()\">\n                Register\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class DashboardDeliveryModalComponent {\n    @Output() public events = new EventEmitter<DialogEvent>();\n\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        description: new FormControl(''),\n        sender: new FormControl(''),\n        priority: new FormControl(''),\n    });\n\n    public register() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) return;\n        this.events.emit({ reason: 'done', metadata: this.form.value });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { isAfter } from 'date-fns';\nimport { BookingLike } from '../schedule/schedule-state.service';\n\n@Component({\n    selector: '[scheduled-item]',\n    template: `\n        <a\n            btn\n            matRipple\n            class=\"rounded-none my-1 mx-4 w-[calc(100%-2rem)] h-24 bg-white dark:bg-neutral-700 hover:shadow p-0\"\n            [class.opacity-50]=\"has_ended\"\n            [routerLink]=\"['/schedule', 'view', item?.id, type]\"\n        >\n            <div class=\"flex items-center border border-gray-200 rounded-lg\">\n                <div\n                    status\n                    class=\"h-24 w-20 flex flex-col items-center justify-center text-white leading-tight\"\n                    [class.bg-success]=\"status === 'approved'\"\n                    [class.bg-pending]=\"status === 'tentative'\"\n                    [class.bg-error]=\"status === 'declined'\"\n                >\n                    <app-icon class=\"text-2xl\">{{ icon }}</app-icon>\n                    <div class=\"font-normal\">\n                        {{\n                            item?.all_day\n                                ? 'All Day'\n                                : (item?.date | date: 'shortTime')\n                        }}\n                    </div>\n                    <div class=\"capitalize text-xs font-medium\">\n                        ({{ status }})\n                    </div>\n                </div>\n                <div class=\"flex-1 flex flex-col text-left p-2\">\n                    <div class=\"text-xl pl-1\">\n                        {{ item?.title || 'Untitled Event' }}\n                    </div>\n                    <div\n                        class=\"flex items-center font-normal leading-normal space-x-1\"\n                    >\n                        <app-icon class=\"text-lg\">today</app-icon>\n                        <span class=\"text-sm\">{{\n                            item?.date | date: 'MMMM d'\n                        }}</span>\n                    </div>\n                    <div\n                        class=\"flex items-center font-normal leading-normal space-x-1\"\n                        *ngIf=\"item?.location || item?.description\"\n                    >\n                        <app-icon class=\"text-lg\">place</app-icon>\n                        <span>\n                            {{\n                                item?.location || item?.description\n                                    | slice: 0:255\n                            }}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [],\n})\nexport class DashboardScheduledItemComponent {\n    @Input() public item: BookingLike;\n\n    public get type() {\n        return this.item instanceof Booking ? 'booking' : 'event';\n    }\n\n    public get has_ended() {\n        return (\n            !this.item ||\n            this.item.id === 'date' ||\n            isAfter(new Date(), this.item.date + this.item.duration * 60 * 1000)\n        );\n    }\n\n    public get icon() {\n        if (this.status === 'declined') return 'cancel';\n        if (this.item.asset_id) {\n            switch ((this.item as Booking).booking_type) {\n                case 'desk':\n                    return 'view_quilt';\n                case 'parking':\n                    return 'local_parking';\n            }\n        }\n        return 'event';\n    }\n\n    public get status() {\n        if (!this.item || this.item.id === 'date') return 'declined';\n        return this.item.status;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    getModule,\n    PlaceMetadata,\n    PlaceVariableBinding,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { differenceInMinutes, endOfDay } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport {\n    CalendarEvent,\n    EventFormService,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { searchStaff, User } from '@placeos/users';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { CalendarService } from '@placeos/calendar';\nimport { Booking, queryBookings } from '@placeos/bookings';\n\nexport interface DashboardOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DashboardStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<DashboardOptions>({});\n    /**  */\n    private _free_spaces = new BehaviorSubject<Space[]>([]);\n    /**  */\n    private _upcoming_events = new BehaviorSubject<(CalendarEvent | Booking)[]>(\n        []\n    );\n    /**  */\n    private _contacts = new BehaviorSubject<User[]>([]);\n    /**  */\n    private _level_occupancy = new BehaviorSubject<BuildingLevel[]>([]);\n    /**  */\n    private _occupancy_binding: PlaceVariableBinding;\n    /**  */\n    public free_spaces = this._free_spaces.asObservable();\n    /**  */\n    public upcoming_events = this._upcoming_events.asObservable();\n    /**  */\n    public contacts = this._contacts.asObservable();\n    /**  */\n    public options = this._options.asObservable();\n\n    public readonly search_results = this._options.pipe(\n        debounceTime(500),\n        switchMap(({ search }) => (search ? searchStaff(search) : of([]))),\n        catchError((_) => []),\n        shareReplay(1)\n    );\n    /**  */\n    public level_occupancy = this._level_occupancy.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _calendar: CalendarService,\n        private _org: OrganisationService,\n        private _event_form: EventFormService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'building',\n            this._org.active_building\n                .pipe(filter((bld) => !!bld))\n                .subscribe(() => this.updateBuildingMetadata())\n        );\n        let sys_id = this._org.binding('contact_tracing');\n        if (!sys_id) return;\n        const binding = getModule(sys_id, 'AreaManagement').binding('overview');\n        binding.listen().subscribe((d) => this.updateOccupancy(d || {}));\n        binding.bind();\n    }\n\n    public setOptions(options: Partial<DashboardOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public pollFreeSpaces(delay: number = 10 * 1000) {\n        this.updateFreeSpaces();\n        this.interval('free_spaces', () => this.updateFreeSpaces(), delay);\n    }\n\n    public stopPollingFreeSpaces() {\n        this.clearInterval('free_spaces');\n    }\n\n    public pollUpcomingEvents(delay: number = 10 * 1000) {\n        this.updateUpcomingEvents();\n        this.interval(\n            'upcoming_events',\n            () => this.updateUpcomingEvents(),\n            delay\n        );\n    }\n\n    public stopPollingUpcomingEvents() {\n        this.clearInterval('upcoming_events');\n    }\n\n    public async updateContacts() {\n        const metadata: PlaceMetadata = (await showMetadata(\n            currentUser().id,\n            'contacts'\n        ).toPromise()) as any;\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async addContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users.push(user);\n        users = unique(users, 'email');\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async removeContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users = users.filter((u) => u.email !== user.email);\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    private async updateOccupancy(map: HashMap<{ recommendation: number }>) {\n        const levels = [...this._org.levels];\n        levels.sort(\n            (a, b) => map[a.id]?.recommendation - map[b.id]?.recommendation\n        );\n        this._level_occupancy.next(levels);\n    }\n\n    private async updateFreeSpaces() {\n        if (!this._org.building) return;\n        const mins = Math.abs(\n            differenceInMinutes(Date.now(), endOfDay(Date.now()))\n        );\n        this._event_form.setOptions({\n            zone_ids: [],\n            capacity: 0,\n            features: [],\n            show_fav: false,\n        });\n        this._event_form.form.patchValue({ date: Date.now(), duration: mins });\n        const list = await this._event_form.available_spaces\n            .pipe(take(1))\n            .toPromise();\n        list.sort((a, b) => a.capacity - b.capacity);\n        this._free_spaces.next(list);\n    }\n\n    private async updateUpcomingEvents() {\n        const period_start = Math.floor(new Date().valueOf() / 1000);\n        const period_end = Math.floor(endOfDay(new Date()).valueOf() / 1000);\n        const events = await (this._settings.get('app.events.use_bookings')\n            ? queryBookings({\n                  period_start,\n                  period_end,\n                  type: 'room',\n                  email: currentUser().email,\n              }).pipe(map((_) => _.map((i) => newCalendarEventFromBooking(i))))\n            : queryEvents({\n                  period_start,\n                  period_end,\n                  calendars: currentUser().email,\n              })\n        )\n            .toPromise()\n            .catch((_) => []);\n        const bookings = await queryBookings({\n            period_start,\n            period_end,\n            type: 'desk',\n            user: currentUser().email,\n        })\n            .toPromise()\n            .catch((_) => []);\n        const event_list = [...events, ...bookings].sort(\n            (a, b) => a.date - b.date\n        );\n        this._upcoming_events.next(event_list);\n    }\n\n    private async updateBuildingMetadata() {\n        const building = this._org.building;\n        const metadata = await showMetadata(\n            building.id,\n            'bindings'\n        ).toPromise();\n        if (!(metadata.details as HashMap).occupancy) return;\n        const details = (metadata.details as HashMap).occupancy;\n        const module = getModule(details.sys, details.module, details.index);\n        if (!module) return;\n        if (this._occupancy_binding) {\n            this._occupancy_binding.unbind();\n        }\n        this._occupancy_binding = module.binding('occupancy');\n        this._occupancy_binding.bind();\n        this.subscription(\n            'occupancy_binding',\n            this._occupancy_binding.listen().subscribe((value) => {\n                const levels = Object.keys(value).map((key) => ({\n                    id: key,\n                    ...value[key],\n                }));\n                levels.sort(\n                    (a, b) => a.recommendation_factor - b.recommendation_factor\n                );\n                this._level_occupancy.next(\n                    levels.map((i) => this._org.levelWithID([i.id]))\n                );\n            })\n        );\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { addMonths } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { MapLocateModalComponent } from '@placeos/components';\nimport {\n    BookingLike,\n    ScheduleStateService,\n} from '../schedule/schedule-state.service';\nimport { DashboardStateService } from './dashboard-state.service';\n\n@Component({\n    selector: 'a-dashboard-upcoming',\n    template: `\n        <h3 class=\"m-0 mb-4 font-medium text-xl\">Your Bookings</h3>\n        <div\n            name=\"event\"\n            *ngFor=\"let event of event_list | async | slice: 0:3\"\n            class=\"flex bg-white shadow rounded-lg relative overflow-hidden mb-4 dark:bg-neutral-700\"\n        >\n            <div\n                name=\"status\"\n                class=\"absolute rounded-lg\"\n                [class.bg-primary]=\"event.asset_id\"\n            ></div>\n            <div name=\"details\" class=\"flex-1 mr-2\">\n                <div\n                    time\n                    class=\"text-primary dark:text-secondary text-sm font-bold mb-2\"\n                >\n                    {{ event.date | date: 'shortTime' }}\n                </div>\n                <div name=\"title\" class=\"text-sm font-bold mb-2\">\n                    {{ event.title }}\n                </div>\n                <div name=\"space\" class=\"text-xs flex items-center mb-2\">\n                    <app-icon class=\"mr-2\">room</app-icon>\n                    <a\n                        class=\"text-black dark:text-white\"\n                        [class.underline]=\"!!event.space || !!event.asset_id\"\n                        [matTooltip]=\"event.space ? 'Locate Space' : ''\"\n                        (click)=\"\n                            event.space || event.asset_id\n                                ? locateSpace(event.space || event)\n                                : ''\n                        \"\n                    >\n                        {{\n                            event.space?.display_name ||\n                                event.space?.name ||\n                                event.asset_name ||\n                                '&lt;No Location&gt;'\n                        }}\n                        {{\n                            event.space?.level?.display_name ||\n                            event.space?.level?.name\n                                ? ', ' + event.space.level.display_name ||\n                                  event.space.level.name\n                                : ''\n                        }}\n                    </a>\n                </div>\n                <div\n                    name=\"attendees\"\n                    class=\"text-xs flex items-center mb-2\"\n                    *ngIf=\"event.guests\"\n                >\n                    <app-icon\n                        class=\"mr-2\"\n                        [icon]=\"{ class: 'material-icons', content: 'group' }\"\n                    ></app-icon>\n                    {{ event.guests?.length }} Guest{{\n                        event.guests?.length === 1 ? '' : 's'\n                    }}\n                </div>\n                <div\n                    name=\"guests\"\n                    class=\"flex space-x-2 text-sm\"\n                    *ngIf=\"event.guests\"\n                >\n                    <a-user-avatar\n                        *ngFor=\"let guest of event.guests\"\n                        [user]=\"guest\"\n                    ></a-user-avatar>\n                </div>\n            </div>\n            <a\n                button\n                btn\n                matRipple\n                *ngIf=\"event.meeting_link\"\n                class=\"uppercase h-12\"\n                [href]=\"event.meeting_link\"\n                >Join Call</a\n            >\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1em;\n                min-width: 16rem;\n            }\n\n            [name='event'] {\n                padding: 1rem 1rem 1rem 2rem;\n            }\n\n            [name='status'] {\n                top: 1rem;\n                left: -0.8rem;\n                height: 2.5rem;\n                width: 1.6rem;\n                background-color: #00529b;\n            }\n\n            button {\n                height: 3em;\n            }\n\n            app-icon {\n                margin-left: -0.25rem;\n            }\n        `,\n    ],\n})\nexport class DashboardUpcomingComponent implements OnInit, OnDestroy {\n    public readonly today = new Date();\n    public readonly max_date = addMonths(this.today, 4);\n    public readonly upcoming_events = this._state.upcoming_events;\n    public readonly event_list = this._schedule.events.pipe(\n        map((list) => {\n            const updated_list = list\n                .filter((_) => _.state !== 'done' && _.is_done !== true)\n                .map((_) =>\n                    _.space\n                        ? _\n                        : {\n                              ..._,\n                              space: {\n                                  name: _.asset_name || _.asset_id,\n                                  map_id: _.asset_id,\n                                  level: this._org.levelWithID(_.zones),\n                                  zones: _.zones,\n                              },\n                          }\n                );\n            return updated_list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: DashboardStateService,\n        private _schedule: ScheduleStateService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit() {\n        this._state.pollUpcomingEvents();\n        this._schedule.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingUpcomingEvents();\n        this._schedule.stopPolling();\n    }\n\n    public locateSpace(space: Space) {\n        this._dialog.open(MapLocateModalComponent, {\n            data: { item: { ...space, level: null } },\n        });\n    }\n\n    public trackByFn(idx: number, event: BookingLike) {\n        return event ? `${event.id}|${event.date}` : undefined;\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[dashboard]',\n    template: `\n        <topbar></topbar>\n        <div class=\"flex-1 flex sm:flex-row flex-col-reverse h-1/2 bg-gray-200 dark:bg-neutral-600 dark:text-white\">\n            <div\n                class=\"relative z-0 flex flex-col flex-1 h-1/2 sm:h-auto overflow-hidden\"\n            >\n                <main\n                    class=\"flex flex-1 px-0 sm:px-8 flex-wrap overflow-auto h-px sm:h-auto\"\n                >\n                    <a-dashboard-availability\n                        *ngIf=\"!hide_availability\"\n                        class=\"flex-1 min-w-64\"\n                    ></a-dashboard-availability>\n                    <a-dashboard-upcoming\n                        class=\"flex-1 min-w-64\"\n                    ></a-dashboard-upcoming>\n                    <a-dashboard-contacts\n                        *ngIf=\"!hide_contacts\"\n                        class=\"flex-1 min-w-64\"\n                    ></a-dashboard-contacts>\n                </main>\n            </div>\n        </div>\n        <footer-menu></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n\n            .top {\n                background-color: #007ac8;\n            }\n\n            a[button].tile {\n                flex: 1;\n                border-radius: 0;\n                background-color: #fff;\n                color: rgba(0, 0, 0, 0.85);\n                border: none;\n                border-right: 1px solid #ccc;\n            }\n\n            a[button].tile:last-child {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class DashboardComponent {\n    constructor(private _settings: SettingsService) {}\n\n    public get hide_availability() {\n        return this._settings.get('app.hide_availability') !== false;\n    }\n\n    public get hide_contacts() {\n        return this._settings.get('app.hide_contacts') !== false;\n    }\n}\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { DashboardAvailabilityComponent } from './dashboard-availability.component';\nimport { DashboardContactsComponent } from './dashboard-contacts.component';\nimport { DashboardDeliveriesComponent } from './dashboard-deliveries.component';\nimport { DashboardDeliveryModalComponent } from './dashboard-delivery-modal.component';\nimport { DashboardScheduledItemComponent } from './dashboard-schedule-item.component';\nimport { DashboardUpcomingComponent } from './dashboard-upcoming.component';\nimport { DashboardComponent } from './dashboard.component';\n\nconst ROUTES: Route[] = [{ path: '', component: DashboardComponent }];\n\n@NgModule({\n    declarations: [\n        DashboardComponent,\n        DashboardAvailabilityComponent,\n        DashboardUpcomingComponent,\n        DashboardContactsComponent,\n        DashboardDeliveriesComponent,\n        DashboardDeliveryModalComponent,\n        DashboardScheduledItemComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        SharedComponentModule,\n        ReactiveFormsModule,\n        ScrollingModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DashboardModule {}\n"],"names":["DashboardStateService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c1","lvl_r3","id","ɵɵadvance","ɵɵtextInterpolate1","display_name","name","_c2","space_r6","ɵɵtemplate","DashboardAvailabilityComponent_div_12_a_5_Template","DashboardAvailabilityComponent_div_12_span_8_Template","ɵɵpipeBind3","ɵɵpipeBind1","ctx_r2","space_list","length","DashboardAvailabilityComponent","constructor","_state","free_spaces","levels_free","level_occupancy","ngOnInit","_this","_asyncToGenerator","pollFreeSpaces","ngOnDestroy","stopPollingFreeSpaces","ɵɵdirectiveInject","i1","selectors","decls","vars","consts","template","DashboardAvailabilityComponent_Template","rf","ctx","DashboardAvailabilityComponent_a_7_Template","DashboardAvailabilityComponent_span_10_Template","DashboardAvailabilityComponent_div_12_Template","tmp_2_0","ElementRef","AsyncHandler","SettingsService","ɵɵelement","ɵɵlistener","DashboardContactsComponent_div_3_Template_button_click_4_listener","restoredCtx","ɵɵrestoreView","_r8","user_r6","$implicit","ctx_r7","ɵɵnextContext","ɵɵresetView","removeUser","ctx_r3","search_str","DashboardContactsComponent_button_17_Template_button_click_0_listener","_r11","user_r9","ctx_r10","addUser","ɵɵtextInterpolate","email","DashboardContactsComponent","can_deliver","_settings","get","contacts","search_results","u","addContact","removeContact","updateSearch","s","setOptions","search","updateContacts","focusInput","timeout","_input_el","nativeElement","focus","clearInput","i2","viewQuery","DashboardContactsComponent_Query","DashboardContactsComponent_div_3_Template","DashboardContactsComponent_Template_button_menuOpened_5_listener","DashboardContactsComponent_Template_button_menuClosed_5_listener","DashboardContactsComponent_Template_div_click_12_listener","$event","stopPropagation","preventDefault","DashboardContactsComponent_Template_input_ngModelChange_13_listener","DashboardContactsComponent_button_15_Template","DashboardContactsComponent_button_17_Template","DashboardContactsComponent_dashboard_deliveries_20_Template","_r1","tmp_4_0","MatDialog","first","DashboardDeliveryModalComponent","item_r4","received","ɵɵpipeBind2","ɵɵclassProp","DashboardDeliveriesComponent_div_3_div_1_Template","DashboardDeliveriesComponent_div_3_Template_button_click_2_listener","_r6","ctx_r5","registerDelivery","ctx_r0","deliveries","DashboardDeliveriesComponent","_dialog","Date","now","ref","open","details","Promise","race","componentInstance","events","pipe","_","reason","toPromise","afterClosed","push","metadata","close","DashboardDeliveriesComponent_Template","DashboardDeliveriesComponent_div_3_Template","DashboardDeliveriesComponent_ng_template_4_Template","ɵɵtemplateRefExtractor","EventEmitter","FormControl","FormGroup","Validators","form","required","description","sender","priority","register","markAllAsTouched","valid","emit","value","outputs","DashboardDeliveryModalComponent_Template","DashboardDeliveryModalComponent_Template_button_click_45_listener","Booking","isAfter","item","location","DashboardScheduledItemComponent","type","has_ended","date","duration","icon","status","asset_id","booking_type","inputs","attrs","DashboardScheduledItemComponent_Template","DashboardScheduledItemComponent_div_19_Template","ɵɵpureFunction2","all_day","title","getModule","showMetadata","updateMetadata","BehaviorSubject","of","catchError","debounceTime","filter","map","shareReplay","switchMap","take","differenceInMinutes","endOfDay","currentUser","unique","EventFormService","newCalendarEventFromBooking","queryEvents","searchStaff","User","OrganisationService","CalendarService","queryBookings","_calendar","_org","_event_form","_options","_free_spaces","_upcoming_events","_contacts","_level_occupancy","asObservable","upcoming_events","options","init","initialised","subscription","active_building","bld","subscribe","updateBuildingMetadata","sys_id","binding","listen","d","updateOccupancy","bind","next","getValue","delay","updateFreeSpaces","interval","clearInterval","pollUpcomingEvents","updateUpcomingEvents","stopPollingUpcomingEvents","_this2","list","Array","i","user","_this3","users","_this4","_this5","levels","sort","a","b","recommendation","_this6","building","mins","Math","abs","zone_ids","capacity","features","show_fav","patchValue","available_spaces","_this7","period_start","floor","valueOf","period_end","calendars","catch","bookings","event_list","_this8","occupancy","module","sys","index","_occupancy_binding","unbind","Object","keys","key","recommendation_factor","levelWithID","ɵɵinject","i3","i4","factory","ɵfac","providedIn","addMonths","MapLocateModalComponent","ScheduleStateService","ɵɵtextInterpolate2","event_r1","guests","guest_r7","DashboardUpcomingComponent_div_2_div_14_a_user_avatar_1_Template","meeting_link","ɵɵsanitizeUrl","DashboardUpcomingComponent_div_2_Template_a_click_11_listener","space","locateSpace","DashboardUpcomingComponent_div_2_div_13_Template","DashboardUpcomingComponent_div_2_div_14_Template","DashboardUpcomingComponent_div_2_a_15_Template","asset_name","level","DashboardUpcomingComponent","_schedule","today","max_date","updated_list","state","is_done","map_id","zones","startPolling","stopPolling","data","trackByFn","idx","event","undefined","DashboardUpcomingComponent_Template","DashboardUpcomingComponent_div_2_Template","DashboardComponent","hide_availability","hide_contacts","DashboardComponent_Template","DashboardComponent_a_dashboard_availability_4_Template","DashboardComponent_a_dashboard_contacts_6_Template","ScrollingModule","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","SharedComponentModule","ROUTES","path","component","DashboardModule","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}