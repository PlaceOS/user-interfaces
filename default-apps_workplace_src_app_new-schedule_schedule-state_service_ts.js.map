{"version":3,"file":"default-apps_workplace_src_app_new-schedule_schedule-state_service_ts.js","mappings":"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","sources":["./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./node_modules/date-fns/endOfWeek.mjs"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    ParkingService,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    addWeeks,\n    differenceInMilliseconds,\n    differenceInMinutes,\n    endOfDay,\n    endOfWeek,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n    startOfWeek,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nexport interface ScheduleOptions {\n    period: 'day' | 'week' | 'month';\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _options = new BehaviorSubject<ScheduleOptions>({ period: 'day' });\n    private _filters = new BehaviorSubject({\n        shown_types: [\n            'event',\n            'desk',\n            'parking',\n            'visitor',\n            'locker',\n            'group-event',\n        ],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true)),\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings',\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource,\n                                            ),\n                                            system: space,\n                                        }),\n                                ),\n                            ),\n                            catchError((_) => of([])),\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind(),\n                            );\n                        }\n                        return obs;\n                    }),\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1),\n        );\n\n    public readonly options = this._options.asObservable();\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    public setOptions(options: ScheduleOptions) {\n        this._options.next(options);\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n    public readonly week_date = combineLatest([\n        this._org.active_building,\n        this.date,\n    ]).pipe(\n        map(([_, date]) =>\n            startOfWeek(date, {\n                weekStartsOn: this.offset_weekday as any,\n            }).valueOf(),\n        ),\n    );\n\n    public readonly week_options = combineLatest([\n        this._org.active_building,\n        this.date,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        map(([bld]) => {\n            const options = [];\n            let date = startOfDay(Date.now());\n            for (let i = -4; i < 48; i++) {\n                let day = addWeeks(date, i);\n                const week_s_date = startOfWeek(day, {\n                    weekStartsOn: this.offset_weekday as any,\n                });\n                const week_e_date = endOfWeek(day, {\n                    weekStartsOn: this.offset_weekday as any,\n                });\n                const this_week =\n                    isAfter(Date.now(), week_s_date) &&\n                    isBefore(Date.now(), week_e_date);\n                const week_start = format(week_s_date, 'dd MMM');\n                const week_end = format(week_e_date, 'dd MMM');\n                options.push({\n                    id: day.valueOf(),\n                    name: `${week_start} - ${week_end}`,\n                    this_week,\n                });\n            }\n            return options;\n        }),\n    );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase(),\n                        )) &&\n                    !_.linked_bookings?.find(\n                        (b) => b.booking_type === 'group-event',\n                    ),\n            );\n        }),\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = combineLatest([\n        this._update,\n        this._options,\n    ]).pipe(\n        switchMap(([[date], { period }]) => {\n            const query = {\n                period_start: getUnixTime(\n                    period === 'day'\n                        ? startOfDay(date)\n                        : startOfWeek(date, {\n                              weekStartsOn: this.offset_weekday as any,\n                          }),\n                ),\n                period_end: getUnixTime(\n                    period === 'day'\n                        ? endOfDay(date)\n                        : endOfWeek(date, {\n                              weekStartsOn: this.offset_weekday as any,\n                          }),\n                ),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([])),\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly raw_events = combineLatest([\n        this._poll_type,\n        this._options,\n    ]).pipe(\n        switchMap(([t, { period }]) =>\n            t === 'api' || period !== 'week' ? this.api_events : this.ws_events,\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = this.raw_events.pipe(\n        map((_) => _.filter((_) => !_.extension_data?.shared_event)),\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[]))),\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([]))),\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n                include_deleted: 'recurring',\n            }).pipe(catchError((_) => of([]))),\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly group_events = this.raw_events.pipe(\n        map((_) => _.filter((_) => _.extension_data?.shared_event)),\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (lkr) => lkr.id === i.locker_id,\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n        this.group_events,\n    ]).pipe(\n        map(\n            ([\n                events,\n                visitors,\n                desks,\n                parking,\n                lockers,\n                group_events,\n            ]: any) => {\n                const filtered_events = events.filter(\n                    (ev) =>\n                        !desks.find(\n                            (bkn) => `${ev.meeting_id}` === `${bkn.id}`,\n                        ) &&\n                        ev.linked_bookings[0]?.booking_type !== 'group-event',\n                );\n                return [\n                    ...filtered_events,\n                    ...visitors,\n                    ...desks,\n                    ...parking,\n                    ...lockers,\n                    ...group_events,\n                ].sort((a, b) => a.date - b.date);\n            },\n        ),\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter((_) => {\n                if (\n                    this._deleted.includes(\n                        _.instance ? `${_.id}|${_.instance}` : _.id,\n                    )\n                )\n                    return false;\n                if (\n                    _.extension_data?.shared_event &&\n                    !filters?.shown_types?.includes('group-event')\n                ) {\n                    return false;\n                }\n                if (\n                    _ instanceof CalendarEvent &&\n                    !_.extension_data?.shared_event &&\n                    !filters?.shown_types?.includes('event')\n                ) {\n                    return false;\n                } else if (_ instanceof CalendarEvent) return true;\n                return filters?.shown_types?.includes((_ as any).booking_type);\n            }),\n        ),\n    );\n\n    public get offset_weekday() {\n        return this._settings.get('app.week_start') || 0;\n    }\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                const time_before = Math.min(60, auto_release.time_before || 0);\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) + time_before,\n                            ),\n                        ),\n                        type,\n                    }).toPromise();\n                    const check_block =\n                        (auto_release.time_after || 0) + time_before;\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0,\n                            ),\n                            Date.now(),\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const time = addMinutes(\n                            booking.date,\n                            auto_release.time_after || 0,\n                        );\n                        const close_after = differenceInMilliseconds(\n                            time.getTime() + 60 * 1000,\n                            Date.now(),\n                        );\n                        const wording =\n                            type === 'parking' ? 'reservation' : 'booking';\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} ${wording}`,\n                                content: `You have indicated you are not in the office. \n                                Your  ${wording} for \"<i>${\n                                    booking.asset_name || booking.title\n                                }</i>\" at ${format(\n                                    booking.date,\n                                    this._settings.time_format,\n                                )} will be cancelled at ${format(\n                                    time,\n                                    this._settings.time_format,\n                                )}.<br/><br/>\n                                Do you wish to keep this ${wording}?`,\n                                icon: { content: 'event_busy' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                                close_delay: close_after,\n                            },\n                            this._dialog,\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        }),\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog,\n        private _parking: ParkingService,\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api',\n                ),\n            ),\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll()),\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]',\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(\n            item.instance ? `${item.id}|${item.instance}` : item.id,\n        );\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted),\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n"],"names":["MatDialog","Booking","LockersService","ParkingService","checkinBooking","queryBookings","AsyncHandler","current_user","currentUser","flatten","openConfirmModal","SettingsService","CalendarEvent","newCalendarEventFromBooking","queryEvents","OrganisationService","requestSpacesForZone","getModule","addMinutes","addWeeks","differenceInMilliseconds","differenceInMinutes","endOfDay","endOfWeek","format","getUnixTime","isAfter","isBefore","isSameDay","startOfDay","startOfMinute","startOfWeek","BehaviorSubject","combineLatest","interval","of","catchError","debounceTime","distinctUntilChanged","distinctUntilKeyChanged","filter","map","shareReplay","startWith","switchMap","tap","ScheduleStateService","setOptions","options","_options","next","getOptions","getValue","offset_weekday","_settings","get","constructor","_org","_lockers","_dialog","_parking","_this","this","_poll","_poll_type","_loading","period","_filters","shown_types","_date","Date","now","_update","pipe","_","_deleted","_space_bookings","active_building","unsubWith","id","s1","s2","list","space","binding","obs","listen","event_list","i","resources","attendees","email","resource","system","hasSubscription","subscription","bind","asObservable","filters","date","loading","week_date","weekStartsOn","valueOf","week_options","bld","day","week_s_date","week_e_date","this_week","week_start","week_end","push","name","ws_events","user","host","toLowerCase","find","a","linked_bookings","b","booking_type","api_events","query","period_start","period_end","type","raw_events","t","timeout","events","extension_data","shared_event","visitors","parent_id","linked_event","desks","include_checked_out","parking","include_deleted","group_events","lockers","lockers$","_ref","_asyncToGenerator","system_id","mod","my_lockers","execute","catch","_x","apply","arguments","locker","lkr","locker_id","level","building","level_id","levelWithID","duration","title","description","locker_name","all_day","asset_id","map_id","asset_name","zones","item","e","console","error","bookings","filtered_events","ev","bkn","meeting_id","sort","filtered_bookings","bkns","includes","instance","_ignore_cancel","_checkCancel","u","_ref2","is_home","location","auto_release","time_after","time_before","length","Math","min","toPromise","check_block","booking","checked_in","rejected","closeAll","diff","time","close_after","getTime","wording","result","content","time_format","icon","confirm_text","cancel_text","close_delay","reason","close","_x2","subscribe","triggerPoll","JSON","parse","sessionStorage","getItem","startPolling","delay","stopPolling","clearInterval","setDate","removeItem","setAsDeleted","setItem","stringify","toggleType","clear","_this2","i0","ɵɵinject","i1","i2","i3","i4","_2","factory","ɵfac","providedIn","toDate","getDefaultOptions","defaultOptions","locale","getDay","getDate","setHours"],"sourceRoot":"webpack:///","x_google_ignoreList":[1]}