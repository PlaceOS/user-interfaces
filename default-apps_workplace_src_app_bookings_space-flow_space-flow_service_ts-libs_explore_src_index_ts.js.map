{"version":3,"sources":["./apps/workplace/src/app/bookings/space-flow/space-flow.service.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./node_modules/@angular/material/fesm2015/slide-toggle.js"],"names":["clearEventFormState","sessionStorage","removeItem","localStorage","SpaceFlowService","_calendar","_org","_dialog","super","_event","_form","_filters","_loading_spaces","_loading_event","event","this","asObservable","form","filters","loading_spaces","loading_event","spaces","pipe","next","getValue","value","date","Date","valueOf","period_start","Math","floor","period_end","duration","zones","length","building","id","freeBusy","zone_ids","join","toPromise","then","list","filter","space","capacity","clearState","setEvent","nearestTo","controls","subscription","storeState","name","setValue","ref","open","width","height","data","componentInstance","_","reason","subscribe","attendees","push","metadata","close","setItem","JSON","stringify","toJSON","event_data","getItem","parse","form_data","patchValue","filter_data","markAllAsTouched","organiser","host","email","title","valid","key","invalid","Promise","reject","values","SharedExploreModule","ExploreBookingModalComponent","_data","_dialog_ref","loading","booking","resource","on_error","msg","disableClose","system_ids","resources","map","s","catch","e","display_name","ExploreDeskInfoComponent","_details","_element","map_id","user","start","end","tries","setTimeout","parent","nativeElement","parentElement","ngOnInit","position","parseInt","style","top","left","y_pos","x_pos","ExploreDesksService","_state","_settings","_desks_service","_in_use","_options","_desks","_reserved","_statuses","_poll","_desk_bookings","level","lvl","type","desk_list","i","details","Array","j","zone","_bind","unsubWith","buildings","find","bld","parent_id","system_id","bindings","area_management","organisation","binding","listen","d","processBindingChange","bind","_state_change","desks","in_use","reserved","bookable","is_used","some","is_reserved","processDesks","init","initialised","setOptions","enable_booking","get","delay","asset_id","interval","clearInterval","options","devices","v","includes","location","at_location","processDevices","timeout","updateStatus","style_map","colours","desk_id","fill","opacity","setStyles","device","x","map_width","y","map_height","coordinates_from","content","system","setFeatures","actions","desk","hover","status","book_fn","bookDesk","action","callback","setActions","ExploreDeviceInfoComponent","_overlay","username","mac","manufacturer","os","ssid","variance","toFixed","diameter","bg_color","distance_color","overlay_ref","onEnter","loadUser","onLeave","onClick","onTouch","last_seen","addSuffix","abs","distance","mod","execute","assigned_to","_portal","create","positionStrategy","flexibleConnectedTo","_dot","withPositions","originX","originY","overlayX","overlayY","attach","dispose","ExploreMapControlComponent","_router","_route","building_list","active_building","levels","active_levels","setLevel","navigate","relativeTo","queryParams","setBuilding","queryParamMap","params","has","ExploreMapViewComponent","_s","_zones","_spaces","url","map_url","styles","map_styles","positions","map_positions","features","map_features","map_actions","labels","map_labels","message","o","locateSpace","locateUser","levelWithID","feature","locate_details","location_services","module","locations","sort","a","b","priority","indexOf","pos","radius","ExploreSpaceInfoComponent","events","DEFAULT_COLOURS","free","pending","busy","unknown","ExploreSpacesService","_bookings","handleBookingsChange","handleStatusChange","updateActions","updateHoverElements","bookings","clearTimeout","bookSpace","ExploreStateService","_level","_positions","zoom","center","_styles","_features","_actions","_labels","_message","show_zones","show_devices","concat","show_contacts","Object","reduce","style_mappings","keys","h","display","level_list","levelsForBuilding","zone_id","feature_map","actions_map","labels_map","ExploreZonesService","_location","_capacity","console","log","parseData","zone_metadata","all","areas","area","properties","label_location","filled","count","area_id","setLabels","ExploreZoomControlComponent","zoomIn","setPositions","min","zoomOut","max","reset","_c0","_c1","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","MatSlideToggle","multi","MatSlideToggleChange","source","checked","MatSlideToggleBase","_elementRef","_MatSlideToggleMixinBase","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","_animationMode","_onChange","_onTouched","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","markForCheck","monitor","focusOrigin","_inputElement","focus","resolve","stopMonitoring","stopPropagation","emit","_emitChangeEvent","fn","isDisabled","disabled","origin","focusVia","detectChanges","ɵfac","t","ɵcmp","selectors","viewQuery","rf","ctx","_t","_thumbEl","first","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","required","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","$event","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","textContent","trim","toString","directives","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports"],"mappings":"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","file":"default-apps_workplace_src_app_bookings_space-flow_space-flow_service_ts-libs_explore_src_index_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { first, shareReplay, switchMap } from 'rxjs/operators';\nimport { addMinutes, roundToNearestMinutes, isAfter, endOfDay } from 'date-fns';\n\nimport { BaseClass, currentUser, notifyError, unique } from '@placeos/common';\nimport {\n    CalendarEvent,\n    generateEventForm,\n    saveEvent,\n} from '@placeos/events';\nimport { CalendarService } from '@placeos/calendar';\nimport { OrganisationService } from '@placeos/organisation';\nimport { NewUserModalComponent } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface EventFormFilters {\n    capacity?: number;\n    zones?: string[];\n}\n\nexport function clearEventFormState(): void {\n    sessionStorage.removeItem('PLACEOS.event');\n    sessionStorage.removeItem('PLACEOS.event_form');\n    localStorage.removeItem('PLACEOS.event_filters');\n}\n\n@Injectable()\nexport class SpaceFlowService extends BaseClass {\n    /** Active event being worked on */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    /** Form fields for the current flow */\n    private _form = new BehaviorSubject<FormGroup>(null);\n    /** Form fields for the current flow */\n    private _filters = new BehaviorSubject<EventFormFilters>({});\n    /** Whether space listing is being retrieved */\n    private _loading_spaces = new BehaviorSubject<boolean>(false);\n    /** Whether changes to event are being saved */\n    private _loading_event = new BehaviorSubject<boolean>(false);\n\n    public readonly event = this._event.asObservable();\n    public readonly form = this._form.asObservable();\n    public get event_form() {\n        return this._form.getValue();\n    }\n    public readonly filters = this._filters.asObservable();\n    public readonly loading_spaces = this._loading_spaces.asObservable();\n    public readonly loading_event = this._loading_event.asObservable();\n    public get event_filters() {\n        return this._filters.getValue();\n    }\n    public readonly spaces = this._filters.pipe(\n        switchMap((filters) => {\n            this._loading_spaces.next(true);\n            const form = this._form.getValue().value;\n            if (!form.date) form.date = new Date().valueOf();\n            const period_start = Math.floor(\n                new Date(form.date).valueOf() / 1000\n            );\n            const period_end = Math.floor(\n                addMinutes(new Date(form.date), form.duration || 60).valueOf() /\n                    1000\n            );\n            const zones = filters?.zones?.length\n                ? filters.zones\n                : [this._org.building?.id];\n            return this._calendar\n                .freeBusy({\n                    zone_ids: zones.join(','),\n                    period_start,\n                    period_end,\n                }).toPromise()\n                .then((list) => {\n                    this._loading_spaces.next(false);\n                    return list.filter(\n                        (space) =>\n                            !filters.capacity ||\n                            filters.capacity >= space.capacity\n                    );\n                });\n        }),\n        shareReplay()\n    );\n\n    public get is_future_date() {\n        const date = this._form.getValue()?.controls?.date.value || new Date().valueOf();\n        return isAfter(new Date(date), endOfDay(new Date()));\n    }\n\n    public readonly clearState = () => clearEventFormState();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.setEvent(\n            new CalendarEvent({\n                date: roundToNearestMinutes(addMinutes(new Date(), 2), {\n                    nearestTo: 5,\n                }).valueOf(),\n            })\n        );\n    }\n\n    /** Set the event being worked on */\n    public setEvent(event: CalendarEvent): void {\n        this._event.next(event);\n        const form = generateEventForm(event);\n        this._form.next(form);\n        this.subscription('form_change', () => this.storeState());\n    }\n\n    /** Set the value of the form control */\n    public setValue<T = any>(name: string, value: T): void {\n        const form = this._form.getValue();\n        if (form && form.controls[name]) {\n            form.controls[name].setValue(value);\n        }\n    }\n\n    public newAttendee() {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: {},\n            }\n        );\n        const form = this._form.getValue();\n        ref.componentInstance.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                const attendees = form.controls.attendees.value || [];\n                attendees.push(event.metadata);\n                form.controls.attendees.setValue(unique(attendees, 'email'));\n                ref.close();\n            });\n    }\n\n    /** Reset the form fields for the active event */\n    public clearForm(): void {\n        this.setEvent(this._event.getValue());\n        this._filters.next({});\n    }\n\n    /** Update the current form filters */\n    public updateFilters(filters: EventFormFilters) {\n        this._filters.next(filters);\n    }\n\n    /** Store current event details and form values */\n    public storeState(): void {\n        const form = this._form.getValue();\n        sessionStorage.setItem(\n            'PLACEOS.event',\n            JSON.stringify(this._event.getValue().toJSON())\n        );\n        sessionStorage.setItem('PLACEOS.event_form', JSON.stringify(form.value));\n        localStorage.setItem(\n            'PLACEOS.event_filters',\n            JSON.stringify(this._filters.getValue())\n        );\n    }\n\n    /** Load old event details and form values */\n    public loadState(): void {\n        const event_data = sessionStorage.getItem('PLACEOS.event') || '{}';\n        if (event_data) {\n            this._event.next(new CalendarEvent(JSON.parse(event_data)));\n        }\n        const form_data = sessionStorage.getItem('PLACEOS.event_form');\n        if (form_data) {\n            const form = generateEventForm(this._event.getValue());\n            form.patchValue(JSON.parse(form_data));\n            this._form.next(form);\n        }\n        const filter_data = localStorage.getItem('PLACEOS.event_filters');\n        if (filter_data) {\n            this._filters.next(JSON.parse(filter_data));\n        }\n    }\n\n    /** Save changes to event to the server */\n    public save(): Promise<void> {\n        const form = this._form.getValue();\n        form.markAllAsTouched();\n        if (!form.controls.organiser.value || !form.controls.host.value)\n            form.patchValue({\n                organiser: currentUser(),\n                host: currentUser().email,\n            });\n        if (!form.controls.title.value) {\n            form.patchValue({\n                title: currentUser().email\n            });\n        }\n        if (!form.valid) {\n            const list = [];\n            for (const key in form.controls) {\n                if (form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            return Promise.reject(\n                notifyError(\n                    `Some form fields are not valid: [${list.join(', ')}]`\n                )\n            );\n        }\n        this._loading_event.next(true);\n        const values = new CalendarEvent({\n            ...this._event.getValue(),\n            ...this._form.getValue().value,\n        });\n        return saveEvent(values).toPromise().then(\n            () => this._loading_event.next(false),\n            () => this._loading_event.next(false)\n        );\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { CalendarEvent, generateEventForm, saveEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { querySpaceAvailability } from '@placeos/calendar';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                        />\n                        <mat-error>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.duration\">\n                        <label>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button mat-button (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public booking: CalendarEvent;\n    public form: FormGroup;\n    public loading = '';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.booking = new CalendarEvent({\n            attendees: [{ ...(this._data.space || {}), resource: true } as any],\n        });\n        this.form = generateEventForm(this.booking);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        const on_error = (msg) => {\n            this.loading = '';\n            notifyError(msg);\n            this._dialog_ref.disableClose = false;\n        };\n        if (!this.form.valid) {\n            const list = [];\n            for (const key in this.form.controls) {\n                if (this.form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            throw on_error(\n                `Some form fields are not valid: [${list.join(', ')}]`\n            );\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = 'Checking space availability...';\n        const spaces = await querySpaceAvailability({\n            system_ids: this.form.controls.resources.value\n                ?.map((s) => s.id)\n                .join(','),\n            period_start: Math.floor(this.form.value.date / 1000),\n            period_end:\n                Math.floor(this.form.value.date / 1000) +\n                this.form.value.duration * 60,\n        })\n            .toPromise()\n            .catch((e) => {\n                on_error(\n                    'Space is unavailble for the selected time and duration'\n                );\n                throw e;\n            });\n        if (spaces.length <= 0) {\n            return on_error(\n                'Space is unavailble for the selected time and duration'\n            );\n        }\n        this.loading = 'Creating booking...';\n        await saveEvent(new CalendarEvent(this.form.value))\n            .toPromise()\n            .catch((e) => {\n                on_error('Error creating booking.');\n                throw e;\n            });\n        notifySuccess(\n            `Successfully created booking in ${\n                this._data.space.display_name || this._data.space.name\n            }`\n        );\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface DeskInfoData {\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            name=\"space-info\"\n            [id]=\"map_id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 map-id class=\"m-0 font-medium\">{{ map_id }}</h4>\n                <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                    {{ start | date: 'shortTime' }} &ndash;\n                    {{ end | date: 'shortTime' }}\n                </p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { catchError, first, map, switchMap } from 'rxjs/operators';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { DesksService, queryBookings } from '@placeos/bookings';\nimport { StaffUser } from '@placeos/users';\nimport { Desk, OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _desks = new BehaviorSubject<string[]>([]);\n    private _reserved = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._poll,\n    ]).pipe(\n        switchMap(([lvl]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(new Date())),\n                period_end: getUnixTime(endOfDay(new Date())),\n                type: 'desk',\n                zones: lvl.id,\n            })\n        )\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, { name: 'desks' }).pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: HashMap) => new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => [])\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings?.area_management ||\n                this._org.organisation.bindings?.area_management;\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.processBindingChange(d, system_id))\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n            binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:desk_ids`\n            );\n            this.subscription(\n                `lvl-desks_list`,\n                binding.listen().subscribe((d) => this._desks.next(d || []))\n            );\n            this.subscription('lvl-desk_list_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._reserved,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, reserved]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const is_reserved = reserved.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used\n                        ? 'free'\n                        : is_reserved\n                        ? 'reserved'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _desks_service: DesksService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking: this._settings.get('app.desks.enabled') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) =>\n                this._in_use.next(_.map((i) => i.asset_id))\n            )\n        );\n        this.interval(\n            'poll',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._reserved.next(\n            desks\n                .filter((v) => !v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                hover: true,\n                data: {\n                    map_id: desk.name,\n                    status: this._statuses[desk.map_id],\n                },\n            });\n            const book_fn = () =>\n                this._desks_service.bookDesk({\n                    desks: [desk as Desk],\n                    host: options.host,\n                    date: options.date as Date,\n                });\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n}\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            (mouseenter)=\"loadUser()\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-4 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-2 w-2 absolute center rounded-full pointer-events-auto shadow\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n\n        <ng-template cdk-portal>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white p-4 top-0 left-0 shadow pointer-events-none\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p><label>MAC:</label> {{ mac }}</p>\n                    <p><label>Accuracy:</label> {{ variance }}m</p>\n                    <p><label>Last Seen:</label> {{ last_seen }}</p>\n                    <p type *ngIf=\"manufacturer\">\n                        <label>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                    <p ssid *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                    <p username *ngIf=\"username\">\n                        <label>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user\">\n                        <label>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Diameter of the radius circle */\n    public readonly diameter = this._details.variance * 100;\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public overlay_ref: OverlayRef = null;\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n    @ViewChild('dot') private _dot: ElementRef<HTMLDivElement>;\n\n    @HostListener('mouseenter') public onEnter = () => this.loadUser();\n    @HostListener('mouseleave') public onLeave = () => this.close();\n    @HostListener('click') public onClick = () => this.loadUser();\n    @HostListener('touchend') public onTouch = () => this.loadUser();\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n        }, 200);\n    }\n\n    public async loadUser() {\n        this.open();\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (mod) {\n            this.username = 'Loading...';\n            const details = await mod\n                .execute('check_ownership_of', [this.mac])\n                .catch((_) => null);\n            this.username =\n                details && details.assigned_to ? details.assigned_to : '';\n        }\n    }\n\n    public open() {\n        if (this.overlay_ref) this.close();\n        if (!this._portal) return;\n        this.overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._dot)\n                .withPositions([\n                    {\n                        originX: this.x_pos === 'start' ? 'end' : 'start',\n                        originY: this.y_pos === 'top' ? 'bottom' : 'top',\n                        overlayX: this.x_pos || 'end',\n                        overlayY: this.y_pos || 'bottom',\n                    },\n                ]),\n        });\n        this.overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this.overlay_ref) {\n            this.overlay_ref.dispose();\n            this.overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 0.5rem;\n            }\n\n            mat-form-field {\n                min-width: 10rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends BaseClass implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, notifyError, SettingsService } from '@placeos/common';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { MapPinComponent, MapRadiusComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-0 right-0\"\n        ></explore-zoom-controls>\n        <explore-map-controls\n            class=\"absolute top-0 left-0\"\n        ></explore-map-controls>\n        <!-- <explore-search class=\"absolute top-0 right-0\"></explore-search> -->\n        <div\n            name=\"zones\"\n            class=\"p-2 bg-white border border-gray-400 absolute left-0 m-2 rounded flex items-center\"\n        >\n            Zones\n            <mat-slide-toggle\n                class=\"ml-2\"\n                [ngModel]=\"(options | async)?.show_zones\"\n                (ngModelChange)=\"setOptions({ show_zones: $event })\"\n            ></mat-slide-toggle>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            [name='zones'] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService, ExploreDesksService, ExploreZonesService],\n})\nexport class ExploreMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    const space = this._spaces.find(params.get('space'));\n                    if (!space) return;\n                    this.locateSpace(space);\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private locateSpace(space: Space) {\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.organisation.bindings\n            .location_services;\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [user.email, user.id])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            *ngIf=\"space\"\n            name=\"space-info\"\n            [id]=\"space.id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 mb-2\">{{ space.display_name || space.name }}</h4>\n                <div capacity class=\"text-sm\" *ngIf=\"space.capacity >= 0\">\n                    <span>Capacity: </span>{{ space.capacity }}\n                    {{ space.capacity === 1 ? 'person' : 'people' }}\n                </div>\n                <div class=\"flex flex-wrap my-2 text-sm\">\n                    <div\n                        status\n                        [class]=\"\n                            'capitalize rounded p-1 px-2 text-light ' + status\n                        \"\n                    >\n                        {{ status }}\n                    </div>\n                    <div available-until *ngIf=\"status !== 'not-bookable'\">\n                        {{ available_until }}\n                    </div>\n                </div>\n                <div features *ngIf=\"space.features?.length > 0\">\n                    <h4 class=\"m-0 mb-2\">Room Features</h4>\n                    <ul class=\"pl-2\">\n                        <li\n                            class=\"text-sm\"\n                            *ngFor=\"let feature of space.features\"\n                        >\n                            {{ feature }}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n\n                &.busy {\n                    background-color: #e53935;\n                }\n\n                &.pending {\n                    background-color: #ffb300;\n                }\n\n                &.not-bookable {\n                    background-color: #757575;\n                }\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    HashMap,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] === 'busy' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._dialog.open(ExploreBookingModalComponent, {\n            data: { space },\n        });\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            features.push({\n                location: space.map_id,\n                hover: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\n\nexport interface MapOptions {\n    show_zones?: boolean;\n    show_devices?: boolean;\n    show_contacts?: boolean;\n    show_levels?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({});\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._spaces.list,\n    ]).pipe(\n        map(([level, spaces]) =>\n            spaces.filter((space) => space.zones.includes(level.id))\n        )\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                switch (key) {\n                    case 'devices':\n                        options.show_zones && options.show_devices\n                            ? (list = list.concat(features[key]))\n                            : '';\n                        break;\n                    case 'contacts':\n                        options.show_contacts\n                            ? (list = list.concat(features[key]))\n                            : '';\n                        break;\n                    default:\n                        list = list.concat(features[key]);\n                }\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = this._actions.pipe(\n        debounceTime(200),\n        map((i) => Object.values(i).reduce((list, a) => list.concat(a), []))\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (key !== 'zones' || options.show_zones) {\n                    list = list.concat(labels[key]);\n                }\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            const style_mappings = Object.keys(styles).reduce(\n                (a, h) => ({ ...a, ...styles[h] }),\n                {}\n            );\n            if (!options.show_zones) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            style_mappings['text'] = { display: 'none' };\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            this.setOptions({\n                show_devices:\n                    this._settings.get('app.explore.display_devices') !== false,\n            });\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) {\n            this._level.next(lvl);\n        }\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends BaseClass {\n    private _statuses: HashMap<string> = {};\n    private _labels: HashMap<ViewerLabel> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings.area_management ||\n                this._org.organisation.bindings.area_management;\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            console.log('Bind:', binding);\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, { name: 'map_regions' }).toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (areas) {\n                for (const area of areas) {\n                    this._capacity[area.id] = area.properties?.capacity || 100;\n                    this._location[area.id] = area.properties\n                        ?.label_location || { x: 0.5, y: 0.5 };\n                }\n            }\n        }\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            this._labels[zone.area_id] = {\n                location: this._location[zone.area_id],\n                content: `${zone.count} ${\n                    zone.count === 1 ? 'Device' : 'Devices'\n                }`,\n            };\n            labels.push(this._labels[zone.area_id]);\n        }\n        this._state.setLabels('zones', labels);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            if (!this._statuses[zone_id]) continue;\n            style_map[`#${zone_id}`] = {\n                fill:\n                    colours[`zone-${this._statuses[zone_id]}`] ||\n                    colours[`${this._statuses[zone_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[zone_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('zones', style_map);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button z-in mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon>add</app-icon>\n        </button>\n        <button z-out mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon>remove</app-icon>\n        </button>\n        <button reset mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: 0.5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = /*@__PURE__*/ function () { let ɵMatSlideToggleRequiredValidator_BaseFactory; return function MatSlideToggleRequiredValidator_Factory(t) { return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator); }; }();\nMatSlideToggleRequiredValidator.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); };\n_MatSlideToggleRequiredValidatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); };\nMatSlideToggleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map"],"sourceRoot":"webpack:///"}