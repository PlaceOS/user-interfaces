{"version":3,"file":"apps_concierge_src_app_points_points_module_ts.js","mappings":"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","names":["startOfHour","dirtyDate","requiredArgs","arguments","date","toDate","setMinutes","i0","PointsAssetModalComponent","AsyncHandler","constructor","_spaces","_desks","_data","super","this","EventEmitter","FormGroup","id","FormControl","asset","asset_id","name","type","accept_points","discount_cap","unit_price","custom_rates","combineLatest","form","valueChanges","list","desks","pipe","map","spaces","loading","search","toLowerCase","filter","_","includes","tap","shareReplay","setFilters","zones","subscription","get","subscribe","v","field","enable","disable","renderPrice","value","toFixed","renderPercent","newRule","setValue","first","Date","second","addHours","rate","save","event","emit","reason","metadata","core","MAT_DIALOG_DATA","selectors","ctx","PointsStateService","_dialog","BehaviorSubject","_assets","asObservable","next","JSON","parse","localStorage","getItem","assets","setItem","stringify","newAsset","ref","_this","open","data","details","Promise","race","componentInstance","toPromise","afterClosed","close","getValue","randomInt","removeAsset","factory","PointsAssetsComponent","code","_org","currency_code","_state","d","PointsOverviewComponent","desk_checkin","room_checkin","booking_cancel","wellness_card","ngOnInit","loadPoints","points","storePoints","PointsTopbarComponent","initialised","PointsComponent","_router","events","url_parts","url","split","page","length","parts","ROUTES","path","component","children","redirectTo","pathMatch","PointsModule","CommonModule","FormsModule","ReactiveFormsModule","UIModule","MatTabsModule","MatChipsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./node_modules/date-fns/esm/startOfHour/index.js","./apps/concierge/src/app/points/asset-modal.component.ts","./apps/concierge/src/app/points/points-state.service.ts","./apps/concierge/src/app/points/points-assets.component.ts","./apps/concierge/src/app/points/points-overview.component.ts","./apps/concierge/src/app/points/points-topbar.component.ts","./apps/concierge/src/app/points/points.component.ts","./apps/concierge/src/app/points/points.module.ts"],"sourcesContent":["import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\nimport { SpacesService } from '@placeos/spaces';\nimport { addHours, startOfHour } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { DesksStateService } from '../desks/desks-state.service';\n\n@Component({\n    selector: 'points-asset-modal',\n    template: `\n        <header>\n            <h2 class=\"text-lg\">\n                {{ form?.value?.id ? 'Edit' : 'New' }} Points Asset\n            </h2>\n        </header>\n        <main\n            class=\"min-w-[24rem] overflow-hidden\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-2\">\n                <div class=\"flex items-center\">\n                    <label class=\"w-24\">Asset Type</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"flex-1 h-[3.25rem]\"\n                    >\n                        <mat-select\n                            formControlName=\"type\"\n                            placeholder=\"Select asset type\"\n                        >\n                            <mat-option value=\"space\">Space</mat-option>\n                            <mat-option value=\"desk\">Desk</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center\">\n                    <label class=\"w-24\">Asset</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"flex-1 h-[3.25rem]\"\n                    >\n                        <app-icon\n                            matPrefix\n                            class=\"text-2xl\"\n                            [class.opacity-30]=\"!form.get('type').value\"\n                            >search</app-icon\n                        >\n                        <input\n                            matInput\n                            formControlName=\"name\"\n                            placeholder=\"Search for asset...\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-spinner\n                            *ngIf=\"loading\"\n                            matSuffix\n                            [diameter]=\"32\"\n                        ></mat-spinner>\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let option of asset_options | async\"\n                            [value]=\"option?.display_name || option?.name\"\n                        >\n                            {{ option?.display_name || option?.name }}\n                        </mat-option>\n                        <mat-option\n                            [disabled]=\"true\"\n                            *ngIf=\"!(asset_options | async)?.length\"\n                        >\n                            No matching options\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n            </section>\n            <section class=\"border-t border-gray-200 p-2\">\n                <div class=\"flex items-center\">\n                    <label class=\"flex-1\">Standard hourly rate</label>\n                    <a-counter\n                        class=\"border border-gray-200 rounded\"\n                        formControlName=\"unit_price\"\n                        [min]=\"500\"\n                        [max]=\"80000\"\n                        [step]=\"500\"\n                        [render_fn]=\"renderPrice\"\n                    ></a-counter>\n                </div>\n                <div class=\"\">\n                    <h2>Rate Rules</h2>\n                    <div>\n                        <div\n                            rule\n                            class=\"flex items-center\"\n                            *ngFor=\"\n                                let rule of form.get('custom_rates')?.value ||\n                                    []\n                            \"\n                        >\n                            <div\n                                class=\"flex items-center flex-1 w-1/2 space-x-2\"\n                            >\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex-2 h-[3.25rem] w-32\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"rule.type\"\n                                        [ngModelOptions]=\"{ standalone: true }\"\n                                    >\n                                        <mat-option value=\"before\">\n                                            Before\n                                        </mat-option>\n                                        <mat-option value=\"between\">\n                                            Between\n                                        </mat-option>\n                                        <mat-option value=\"after\">\n                                            After\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                                <a-time-field\n                                    class=\"flex-1 mt-2 w-40\"\n                                    [(ngModel)]=\"rule.first\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                                <a-time-field\n                                    class=\"flex-1 mt-2 w-40\"\n                                    [(ngModel)]=\"rule.second\"\n                                    [from]=\"rule.first\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    *ngIf=\"rule.type === 'between'\"\n                                ></a-time-field>\n                            </div>\n                            <span class=\"mx-2\">@</span>\n                            <a-counter\n                                class=\"border border-gray-200 rounded\"\n                                [(ngModel)]=\"rule.rate\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [min]=\"0\"\n                                [max]=\"300\"\n                                [step]=\"5\"\n                                [render_fn]=\"renderPercent\"\n                            ></a-counter>\n                        </div>\n                    </div>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear w-full\"\n                        (click)=\"newRule()\"\n                    >\n                        <div class=\"flex items-center justify-center w-full\">\n                            <app-icon class=\"text-lg\">add</app-icon>\n                            <span class=\"underline\">Add new rule</span>\n                        </div>\n                    </button>\n                </div>\n            </section>\n            <section class=\"border-t border-gray-200 p-2\">\n                <div class=\"flex items-center\">\n                    <label>Accept Points?</label>\n                    <mat-checkbox\n                        formControlName=\"accept_points\"\n                    ></mat-checkbox>\n                </div>\n                <div class=\"flex items-center\">\n                    <label class=\"flex-1\">Discount Cap</label>\n                    <a-counter\n                        class=\"border border-gray-200 rounded\"\n                        formControlName=\"discount_cap\"\n                        [min]=\"0\"\n                        [max]=\"100\"\n                        [step]=\"5\"\n                        [render_fn]=\"renderPercent\"\n                    ></a-counter>\n                </div>\n            </section>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2 border-t border-gray-200\"\n        >\n            <button btn matRipple mat-dialog-close class=\"inverse flex-1\">\n                Cancel\n            </button>\n            <button\n                matRipple\n                class=\"flex-1\"\n                [disabled]=\"!form.value.name\"\n                (click)=\"save()\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            label {\n                width: auto;\n                min-width: 0;\n                margin: 0 1rem 0 0;\n            }\n        `,\n    ],\n})\nexport class PointsAssetModalComponent extends AsyncHandler {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        id: new FormControl(this._data.asset?.id || ''),\n        asset_id: new FormControl(this._data.asset?.asset_id || ''),\n        name: new FormControl(this._data.asset?.name || ''),\n        type: new FormControl(this._data.asset?.type || ''),\n        accept_points: new FormControl(\n            this._data.asset?.accept_points ?? false\n        ),\n        discount_cap: new FormControl(this._data.asset?.discount_cap || 50),\n        unit_price: new FormControl(this._data.asset?.unit_price || 1000),\n        custom_rates: new FormControl(this._data.asset?.custom_rates || []),\n    });\n\n    public loading: boolean;\n\n    public readonly asset_options = combineLatest([\n        this.form.valueChanges,\n        this._spaces.list,\n        this._desks.desks,\n    ]).pipe(\n        map(([{ type, name }, spaces, desks]) => {\n            this.loading = true;\n            const search = (name || '').toLowerCase();\n            return !type\n                ? []\n                : type === 'space'\n                ? spaces.filter((_) => _.name.toLowerCase().includes(search))\n                : desks.filter((_) => _.name.toLowerCase().includes(search));\n        }),\n        tap(() => (this.loading = false)),\n        shareReplay(1)\n    );\n\n    constructor(\n        private _spaces: SpacesService,\n        private _desks: DesksStateService,\n        @Inject(MAT_DIALOG_DATA) private _data: { asset?: any }\n    ) {\n        super();\n        this._desks.setFilters({ zones: ['All'] });\n        this.subscription(\n            'type_change',\n            this.form.get('type').valueChanges.subscribe((v) => {\n                const field = this.form.get('name');\n                v ? field.enable() : field.disable();\n            })\n        );\n    }\n\n    public renderPrice(value: number = 0) {\n        return `$${(value / 100)?.toFixed(2)}`;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public newRule() {\n        this.form.get('custom_rates').setValue([\n            ...this.form.get('custom_rates').value,\n            {\n                type: 'before',\n                first: startOfHour(new Date()),\n                second: addHours(startOfHour(new Date()), 1),\n                rate: 100,\n            },\n        ]);\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: { ...this.form.value } });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { PointsAssetModalComponent } from './asset-modal.component';\nimport { PointAsset } from './points-assets.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PointsStateService {\n    private _assets = new BehaviorSubject<PointAsset[]>([]);\n\n    public readonly assets = this._assets.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        this._assets.next(\n            JSON.parse(localStorage.getItem('PLACEOS.point_assets') || '[]')\n        );\n        this.assets.subscribe((list) => {\n            localStorage.setItem('PLACEOS.point_assets', JSON.stringify(list));\n        });\n    }\n\n    public async newAsset(asset?: Partial<PointAsset>) {\n        const ref = this._dialog.open(PointsAssetModalComponent, {\n            data: { asset },\n        });\n        const details: DialogEvent = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details.reason !== 'done') return ref.close();\n        this._assets.next([\n            ...this._assets.getValue().filter((_) => _.id !== asset?.id),\n            {\n                ...details.metadata,\n                id: details.metadata.id || `PA-${randomInt(999_999_999)}`,\n            },\n        ] as any);\n        ref.close();\n    }\n\n    public removeAsset(asset_id: string) {\n        this._assets.next(\n            this._assets.getValue().filter((_) => _.id !== asset_id)\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PointsStateService } from './points-state.service';\n\nexport interface CustomRate {\n    rate: number;\n    conditions: any;\n}\n\nexport interface PointAsset {\n    id: string;\n    name: string;\n    type: 'space' | 'desk' | 'parking';\n    accept_points: boolean;\n    discount_cap: number;\n    unit_price: number;\n    custom_rates: CustomRate[];\n}\n\n@Component({\n    selector: 'points-assets',\n    template: `\n        <custom-table\n            class=\"w-full h-full\"\n            [dataSource]=\"asset_list\"\n            [columns]=\"[\n                'name',\n                'type',\n                'unit_price',\n                'accept_points',\n                'discount_cap',\n                'actions'\n            ]\"\n            [display_column]=\"[\n                'Name',\n                'Type',\n                'Unit Price',\n                'Accepts Points',\n                'Discount %',\n                ' '\n            ]\"\n            [column_size]=\"['flex']\"\n            [template]=\"{\n                type: type_template,\n                unit_price: price_template,\n                accept_points: accept_template,\n                discount_cap: discount_template,\n                actions: action_template\n            }\"\n            empty=\"No priced assets\"\n        ></custom-table>\n        <ng-template #type_template let-data=\"data\">\n            <span\n                class=\"p-2 bg-gray-200 dark:bg-neutral-500 rounded capitalize\"\n                >{{ data }}</span\n            >\n        </ng-template>\n        <ng-template #price_template let-data=\"data\">\n            <span class=\"text-xs\">\n                {{ data / 100 | currency: code }} per hour\n            </span>\n        </ng-template>\n        <ng-template #accept_template let-data=\"data\">\n            <div class=\"flex justify-center h-px\">\n                <app-icon\n                    class=\"text-2xl\"\n                    [class.text-success]=\"data\"\n                    [class.text-error]=\"!data\"\n                >\n                    {{ data ? 'check_circle' : 'cancel' }}\n                </app-icon>\n            </div>\n        </ng-template>\n        <ng-template #discount_template let-data=\"data\">\n            <div class=\"text-right px-4\">{{ data }}%</div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"h-6 flex items-center justify-end\">\n                <button icon (click)=\"edit(row)\">\n                    <app-icon>edit</app-icon>\n                </button>\n                <button icon (click)=\"remove(row)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                overflow-x: auto;\n                overflow-y: hidden;\n            }\n        `,\n    ],\n})\nexport class PointsAssetsComponent {\n    public asset_list = this._state.assets;\n\n    public readonly edit = (d) => this._state.newAsset(d);\n    public readonly remove = (d) => this._state.removeAsset(d?.id);\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _state: PointsStateService,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'points-overview',\n    template: `\n        <h2 class=\"p-2 bg-secondary text-white w-full  font-medium text-lg\">\n            Point Overview\n        </h2>\n        <section class=\"bg-white dark:bg-neutral-700 w-full\">\n            <h2 class=\"p-2 underline font-medium text-lg\">Point Value</h2>\n            <div class=\"flex items-center space-x-2 p-2 mb-4\">\n                <span>1 point =</span>\n                <a-counter\n                    class=\"bg-white dark:bg-neutral-700 rounded border border-gray-200 dark:border-neutral-500\"\n                    [step]=\"0.1\"\n                    [(ngModel)]=\"points.value\"\n                    (ngModelChange)=\"storePoints()\"\n                    [render_fn]=\"renderPrice\"\n                ></a-counter>\n                <app-icon matTooltip=\"Set point redemption caps on menu items\">\n                    info\n                </app-icon>\n            </div>\n        </section>\n        <section class=\"bg-white dark:bg-neutral-700 w-full flex-1\">\n            <h2 class=\"p-2 underline font-medium text-lg\">Automatic Rewards</h2>\n            <div class=\"p-4\">\n                <div\n                    class=\"flex items-center space-x-2 p-2 border-b border-gray-200 dark:border-neutral-500\"\n                >\n                    <a-counter\n                        class=\"bg-white dark:bg-neutral-700 rounded border border-gray-200 dark:border-neutral-500\"\n                        [(ngModel)]=\"points.desk_checkin\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span>Points for desk check-in</span>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 p-2 border-b border-gray-200 dark:border-neutral-500\"\n                >\n                    <a-counter\n                        class=\"bg-white dark:bg-neutral-700 rounded border border-gray-200 dark:border-neutral-500\"\n                        [(ngModel)]=\"points.room_checkin\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span>Points for room check-in</span>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 p-2 border-b border-gray-200 dark:border-neutral-500\"\n                >\n                    <a-counter\n                        class=\"bg-white dark:bg-neutral-700 rounded border border-gray-200 dark:border-neutral-500\"\n                        [(ngModel)]=\"points.booking_cancel\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span\n                        >Points for booking cancellation with 24 hour\n                        notice</span\n                    >\n                </div>\n                <div class=\"flex items-center space-x-2 p-2 \">\n                    <a-counter\n                        class=\"bg-white dark:bg-neutral-700 rounded border border-gray-200 dark:border-neutral-500\"\n                        [(ngModel)]=\"points.wellness_card\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span>Points for completing wellness card</span>\n                </div>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class PointsOverviewComponent implements OnInit {\n    public points = {\n        value: 0.1,\n        desk_checkin: 2,\n        room_checkin: 2,\n        booking_cancel: 3,\n        wellness_card: 1,\n    };\n\n    public ngOnInit() {\n        this.loadPoints();\n    }\n\n    public renderPrice(value: number = 0) {\n        return `$${value?.toFixed(2)}`;\n    }\n\n    public loadPoints() {\n        this.points = {\n            ...this.points,\n            ...JSON.parse(\n                localStorage.getItem('PLACEOS.point_details') || '{}'\n            ),\n        };\n    }\n\n    public storePoints() {\n        localStorage.setItem(\n            'PLACEOS.point_details',\n            JSON.stringify(this.points)\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'points-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-white dark:bg-neutral-700 h-20 px-4 border-b border-gray-300 dark:border-neutral-500 space-x-2\"\n        >\n            <div class=\"flex-1 w-2\">\n                <ng-content></ng-content>\n            </div>\n            <!-- <searchbar class=\"mr-2\"></searchbar> -->\n            <date-options></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class PointsTopbarComponent extends AsyncHandler {\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { PointsStateService } from './points-state.service';\n\n@Component({\n    selector: 'placeos-points',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"relative w-full flex flex-col bg-gray-200 dark:bg-neutral-600\"\n        >\n            <points-topbar class=\"relative z-10\">\n                <button\n                    *ngIf=\"page === 'assets'\"\n                    btn\n                    matRipple\n                    (click)=\"newAsset()\"\n                >\n                    New Asset\n                </button>\n            </points-topbar>\n            <nav mat-tab-nav-bar>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/points', 'overview']\"\n                    [active]=\"page === 'overview'\"\n                >\n                    Overview\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/points', 'assets']\"\n                    [active]=\"page === 'assets'\"\n                >\n                    Assets\n                </a>\n            </nav>\n            <div class=\"flex-1 w-full h-1/2 overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class PointsComponent extends AsyncHandler implements OnInit {\n    /** Page being displayed */\n    public page: string;\n\n    public readonly newAsset = () => this._state.newAsset();\n\n    constructor(private _state: PointsStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._router.events.subscribe(() => {\n                const url_parts = this._router.url?.split('/') || [''];\n                this.page = url_parts[url_parts.length - 1];\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.page = parts[parts.length - 1];\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { UIModule } from '../ui/ui.module';\nimport { PointsAssetModalComponent } from './asset-modal.component';\nimport { PointsAssetsComponent } from './points-assets.component';\nimport { PointsOverviewComponent } from './points-overview.component';\nimport { PointsTopbarComponent } from './points-topbar.component';\nimport { PointsComponent } from './points.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: PointsComponent,\n        children: [\n            { path: 'assets', component: PointsAssetsComponent },\n            { path: 'overview', component: PointsOverviewComponent },\n            { path: '**', redirectTo: 'overview', pathMatch: 'full' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        PointsComponent,\n        PointsTopbarComponent,\n        PointsOverviewComponent,\n        PointsAssetsComponent,\n        PointsAssetModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        UIModule,\n        MatTabsModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class PointsModule {}\n"],"x_google_ignoreList":[0]}