{"version":3,"file":"apps_concierge_src_app_points_points_module_ts.js","mappings":"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","names":["startOfHour","dirtyDate","requiredArgs","arguments","date","toDate","setMinutes","i0","option_r6","display_name","name","$event","_r11","rule_r7","$implicit","second","first","_c0","_r14","type","PointsAssetModalComponent_main_3_div_34_a_time_field_11_Template","rate","ctx_r5","renderPercent","PointsAssetModalComponent_main_3_mat_spinner_18_Template","PointsAssetModalComponent_main_3_mat_option_21_Template","PointsAssetModalComponent_main_3_mat_option_23_Template","PointsAssetModalComponent_main_3_div_34_Template","_r18","ctx_r17","newRule","ctx_r0","form","get","value","_r2","loading","asset_options","tmp_5_0","length","renderPrice","tmp_10_0","_c1","PointsAssetModalComponent","AsyncHandler","constructor","_spaces","_desks","_data","super","this","event","EventEmitter","FormGroup","id","FormControl","asset","asset_id","accept_points","discount_cap","unit_price","custom_rates","combineLatest","valueChanges","list","desks","pipe","map","spaces","search","toLowerCase","filter","_","includes","tap","shareReplay","setFilters","zones","subscription","subscribe","v","field","enable","disable","toFixed","setValue","Date","addHours","save","emit","reason","metadata","static","t","i1","i2","MAT_DIALOG_DATA","core","Xpm","selectors","outputs","features","decls","vars","consts","template","rf","ctx","PointsAssetModalComponent_main_3_Template","PointsStateService","_dialog","_assets","BehaviorSubject","assets","asObservable","next","JSON","parse","localStorage","getItem","setItem","stringify","newAsset","_this","_asyncToGenerator","ref","open","data","details","Promise","race","componentInstance","toPromise","afterClosed","close","getValue","randomInt","removeAsset","Yz7","factory","ɵfac","providedIn","data_r10","data_r11","ctx_r2","code","data_r12","data_r13","row_r14","_r16","row","ctx_r15","edit","remove","PointsAssetsComponent","_org","currency_code","_state","asset_list","d","PointsAssetsComponent_ng_template_1_Template","PointsAssetsComponent_ng_template_3_Template","PointsAssetsComponent_ng_template_5_Template","PointsAssetsComponent_ng_template_7_Template","PointsAssetsComponent_ng_template_9_Template","_c2","_c3","_r1","_r3","_r5","_r7","_r9","PointsOverviewComponent","points","desk_checkin","room_checkin","booking_cancel","wellness_card","ngOnInit","loadPoints","storePoints","PointsTopbarComponent","initialised","ngContentSelectors","ctx_r1","PointsComponent","_router","events","url_parts","url","split","page","parts","PointsComponent_button_3_Template","ROUTES","path","component","children","redirectTo","pathMatch","NewPointsComponent","NewPointsComponent_button_5_Template","PointsModule","oAB","cJS","CommonModule","FormsModule","ReactiveFormsModule","UIModule","MatTabsModule","MatChipsModule","RouterModule","forChild"],"sourceRoot":"webpack:///","sources":["./node_modules/date-fns/esm/startOfHour/index.js","./apps/concierge/src/app/points/asset-modal.component.ts","./apps/concierge/src/app/points/points-state.service.ts","./apps/concierge/src/app/points/points-assets.component.ts","./apps/concierge/src/app/points/points-overview.component.ts","./apps/concierge/src/app/points/points-topbar.component.ts","./apps/concierge/src/app/points/points.component.ts","./apps/concierge/src/app/points/new-points.component.ts","./apps/concierge/src/app/points/points.module.ts"],"sourcesContent":["import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\nimport { SpacesService } from '@placeos/spaces';\nimport { addHours, startOfHour } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { DesksStateService } from '../desks/desks-state.service';\n\n@Component({\n    selector: 'points-asset-modal',\n    template: `\n        <header>\n            <h2 class=\"text-lg\">\n                {{ form?.value?.id ? 'Edit' : 'New' }} Points Asset\n            </h2>\n        </header>\n        <main\n            class=\"min-w-[24rem] overflow-hidden\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-2\">\n                <div class=\"flex items-center\">\n                    <label class=\"w-24\">Asset Type</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"flex-1 h-[3.25rem]\"\n                    >\n                        <mat-select\n                            formControlName=\"type\"\n                            placeholder=\"Select asset type\"\n                        >\n                            <mat-option value=\"space\">Space</mat-option>\n                            <mat-option value=\"desk\">Desk</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center\">\n                    <label class=\"w-24\">Asset</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"flex-1 h-[3.25rem]\"\n                    >\n                        <app-icon\n                            matPrefix\n                            class=\"text-2xl\"\n                            [class.opacity-30]=\"!form.get('type').value\"\n                            >search</app-icon\n                        >\n                        <input\n                            matInput\n                            formControlName=\"name\"\n                            placeholder=\"Search for asset...\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-spinner\n                            *ngIf=\"loading\"\n                            matSuffix\n                            [diameter]=\"32\"\n                        ></mat-spinner>\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let option of asset_options | async\"\n                            [value]=\"option?.display_name || option?.name\"\n                        >\n                            {{ option?.display_name || option?.name }}\n                        </mat-option>\n                        <mat-option\n                            [disabled]=\"true\"\n                            *ngIf=\"!(asset_options | async)?.length\"\n                        >\n                            No matching options\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n            </section>\n            <section class=\"border-t border-base-200 p-2\">\n                <div class=\"flex items-center\">\n                    <label class=\"flex-1\">Standard hourly rate</label>\n                    <a-counter\n                        class=\"border border-base-200 rounded\"\n                        formControlName=\"unit_price\"\n                        [min]=\"500\"\n                        [max]=\"80000\"\n                        [step]=\"500\"\n                        [render_fn]=\"renderPrice\"\n                    ></a-counter>\n                </div>\n                <div class=\"\">\n                    <h2>Rate Rules</h2>\n                    <div>\n                        <div\n                            rule\n                            class=\"flex items-center\"\n                            *ngFor=\"\n                                let rule of form.get('custom_rates')?.value ||\n                                    []\n                            \"\n                        >\n                            <div\n                                class=\"flex items-center flex-1 w-1/2 space-x-2\"\n                            >\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex-2 h-[3.25rem] w-32\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"rule.type\"\n                                        [ngModelOptions]=\"{ standalone: true }\"\n                                    >\n                                        <mat-option value=\"before\">\n                                            Before\n                                        </mat-option>\n                                        <mat-option value=\"between\">\n                                            Between\n                                        </mat-option>\n                                        <mat-option value=\"after\">\n                                            After\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                                <a-time-field\n                                    class=\"flex-1 mt-2 w-40\"\n                                    [(ngModel)]=\"rule.first\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                                <a-time-field\n                                    class=\"flex-1 mt-2 w-40\"\n                                    [(ngModel)]=\"rule.second\"\n                                    [from]=\"rule.first\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    *ngIf=\"rule.type === 'between'\"\n                                ></a-time-field>\n                            </div>\n                            <span class=\"mx-2\">&#64;</span>\n                            <a-counter\n                                class=\"border border-base-200 rounded\"\n                                [(ngModel)]=\"rule.rate\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [min]=\"0\"\n                                [max]=\"300\"\n                                [step]=\"5\"\n                                [render_fn]=\"renderPercent\"\n                            ></a-counter>\n                        </div>\n                    </div>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear w-full\"\n                        (click)=\"newRule()\"\n                    >\n                        <div class=\"flex items-center justify-center w-full\">\n                            <app-icon class=\"text-lg\">add</app-icon>\n                            <span class=\"underline\">Add new rule</span>\n                        </div>\n                    </button>\n                </div>\n            </section>\n            <section class=\"border-t border-base-200 p-2\">\n                <div class=\"flex items-center\">\n                    <label>Accept Points?</label>\n                    <mat-checkbox\n                        formControlName=\"accept_points\"\n                    ></mat-checkbox>\n                </div>\n                <div class=\"flex items-center\">\n                    <label class=\"flex-1\">Discount Cap</label>\n                    <a-counter\n                        class=\"border border-base-200 rounded\"\n                        formControlName=\"discount_cap\"\n                        [min]=\"0\"\n                        [max]=\"100\"\n                        [step]=\"5\"\n                        [render_fn]=\"renderPercent\"\n                    ></a-counter>\n                </div>\n            </section>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2 border-t border-base-200\"\n        >\n            <button btn matRipple mat-dialog-close class=\"inverse flex-1\">\n                Cancel\n            </button>\n            <button\n                matRipple\n                class=\"flex-1\"\n                [disabled]=\"!form.value.name\"\n                (click)=\"save()\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            label {\n                width: auto;\n                min-width: 0;\n                margin: 0 1rem 0 0;\n            }\n        `,\n    ],\n})\nexport class PointsAssetModalComponent extends AsyncHandler {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        id: new FormControl(this._data.asset?.id || ''),\n        asset_id: new FormControl(this._data.asset?.asset_id || ''),\n        name: new FormControl(this._data.asset?.name || ''),\n        type: new FormControl(this._data.asset?.type || ''),\n        accept_points: new FormControl(\n            this._data.asset?.accept_points ?? false\n        ),\n        discount_cap: new FormControl(this._data.asset?.discount_cap || 50),\n        unit_price: new FormControl(this._data.asset?.unit_price || 1000),\n        custom_rates: new FormControl(this._data.asset?.custom_rates || []),\n    });\n\n    public loading: boolean;\n\n    public readonly asset_options = combineLatest([\n        this.form.valueChanges,\n        this._spaces.list,\n        this._desks.desks,\n    ]).pipe(\n        map(([{ type, name }, spaces, desks]) => {\n            this.loading = true;\n            const search = (name || '').toLowerCase();\n            return !type\n                ? []\n                : type === 'space'\n                ? spaces.filter((_) => _.name.toLowerCase().includes(search))\n                : desks.filter((_) => _.name.toLowerCase().includes(search));\n        }),\n        tap(() => (this.loading = false)),\n        shareReplay(1)\n    );\n\n    constructor(\n        private _spaces: SpacesService,\n        private _desks: DesksStateService,\n        @Inject(MAT_DIALOG_DATA) private _data: { asset?: any }\n    ) {\n        super();\n        this._desks.setFilters({ zones: ['All'] });\n        this.subscription(\n            'type_change',\n            this.form.get('type').valueChanges.subscribe((v) => {\n                const field = this.form.get('name');\n                v ? field.enable() : field.disable();\n            })\n        );\n    }\n\n    public renderPrice(value: number = 0) {\n        return `$${(value / 100)?.toFixed(2)}`;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public newRule() {\n        this.form.get('custom_rates').setValue([\n            ...this.form.get('custom_rates').value,\n            {\n                type: 'before',\n                first: startOfHour(new Date()),\n                second: addHours(startOfHour(new Date()), 1),\n                rate: 100,\n            },\n        ]);\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: { ...this.form.value } });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { PointsAssetModalComponent } from './asset-modal.component';\nimport { PointAsset } from './points-assets.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PointsStateService {\n    private _assets = new BehaviorSubject<PointAsset[]>([]);\n\n    public readonly assets = this._assets.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        this._assets.next(\n            JSON.parse(localStorage.getItem('PLACEOS.point_assets') || '[]')\n        );\n        this.assets.subscribe((list) => {\n            localStorage.setItem('PLACEOS.point_assets', JSON.stringify(list));\n        });\n    }\n\n    public async newAsset(asset?: Partial<PointAsset>) {\n        const ref = this._dialog.open(PointsAssetModalComponent, {\n            data: { asset },\n        });\n        const details: DialogEvent = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details.reason !== 'done') return ref.close();\n        this._assets.next([\n            ...this._assets.getValue().filter((_) => _.id !== asset?.id),\n            {\n                ...details.metadata,\n                id: details.metadata.id || `PA-${randomInt(999_999_999)}`,\n            },\n        ] as any);\n        ref.close();\n    }\n\n    public removeAsset(asset_id: string) {\n        this._assets.next(\n            this._assets.getValue().filter((_) => _.id !== asset_id)\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PointsStateService } from './points-state.service';\n\nexport interface CustomRate {\n    rate: number;\n    conditions: any;\n}\n\nexport interface PointAsset {\n    id: string;\n    name: string;\n    type: 'space' | 'desk' | 'parking';\n    accept_points: boolean;\n    discount_cap: number;\n    unit_price: number;\n    custom_rates: CustomRate[];\n}\n\n@Component({\n    selector: 'points-assets',\n    template: `\n        <custom-table\n            class=\"w-full h-full\"\n            [dataSource]=\"asset_list\"\n            [columns]=\"[\n                'name',\n                'type',\n                'unit_price',\n                'accept_points',\n                'discount_cap',\n                'actions'\n            ]\"\n            [display_column]=\"[\n                'Name',\n                'Type',\n                'Unit Price',\n                'Accepts Points',\n                'Discount %',\n                ' '\n            ]\"\n            [column_size]=\"['flex']\"\n            [template]=\"{\n                type: type_template,\n                unit_price: price_template,\n                accept_points: accept_template,\n                discount_cap: discount_template,\n                actions: action_template\n            }\"\n            empty=\"No priced assets\"\n        ></custom-table>\n        <ng-template #type_template let-data=\"data\">\n            <span class=\"p-2 bg-base-200 rounded capitalize\">{{ data }}</span>\n        </ng-template>\n        <ng-template #price_template let-data=\"data\">\n            <span class=\"text-xs\">\n                {{ data / 100 | currency: code }} per hour\n            </span>\n        </ng-template>\n        <ng-template #accept_template let-data=\"data\">\n            <div class=\"flex justify-center h-px\">\n                <app-icon\n                    class=\"text-2xl\"\n                    [class.text-success]=\"data\"\n                    [class.text-error]=\"!data\"\n                >\n                    {{ data ? 'check_circle' : 'cancel' }}\n                </app-icon>\n            </div>\n        </ng-template>\n        <ng-template #discount_template let-data=\"data\">\n            <div class=\"text-right px-4\">{{ data }}%</div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"h-6 flex items-center justify-end\">\n                <button icon (click)=\"edit(row)\">\n                    <app-icon>edit</app-icon>\n                </button>\n                <button icon (click)=\"remove(row)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                overflow-x: auto;\n                overflow-y: hidden;\n            }\n        `,\n    ],\n})\nexport class PointsAssetsComponent {\n    public asset_list = this._state.assets;\n\n    public readonly edit = (d) => this._state.newAsset(d);\n    public readonly remove = (d) => this._state.removeAsset(d?.id);\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _state: PointsStateService,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'points-overview',\n    template: `\n        <h2 class=\"p-2 bg-secondary text-white w-full  font-medium text-lg\">\n            Point Overview\n        </h2>\n        <section class=\"bg-base-100 w-full\">\n            <h2 class=\"p-2 underline font-medium text-lg\">Point Value</h2>\n            <div class=\"flex items-center space-x-2 p-2 mb-4\">\n                <span>1 point =</span>\n                <a-counter\n                    class=\"bg-base-100 rounded border border-base-200\"\n                    [step]=\"0.1\"\n                    [(ngModel)]=\"points.value\"\n                    (ngModelChange)=\"storePoints()\"\n                    [render_fn]=\"renderPrice\"\n                ></a-counter>\n                <app-icon matTooltip=\"Set point redemption caps on menu items\">\n                    info\n                </app-icon>\n            </div>\n        </section>\n        <section class=\"bg-base-100 w-full flex-1\">\n            <h2 class=\"p-2 underline font-medium text-lg\">Automatic Rewards</h2>\n            <div class=\"p-4\">\n                <div\n                    class=\"flex items-center space-x-2 p-2 border-b border-base-200\"\n                >\n                    <a-counter\n                        class=\"bg-base-100 rounded border border-base-200\"\n                        [(ngModel)]=\"points.desk_checkin\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span>Points for desk check-in</span>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 p-2 border-b border-base-200\"\n                >\n                    <a-counter\n                        class=\"bg-base-100 rounded border border-base-200\"\n                        [(ngModel)]=\"points.room_checkin\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span>Points for room check-in</span>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 p-2 border-b border-base-200\"\n                >\n                    <a-counter\n                        class=\"bg-base-100 rounded border border-base-200\"\n                        [(ngModel)]=\"points.booking_cancel\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span\n                        >Points for booking cancellation with 24 hour\n                        notice</span\n                    >\n                </div>\n                <div class=\"flex items-center space-x-2 p-2 \">\n                    <a-counter\n                        class=\"bg-base-100 rounded border border-base-200\"\n                        [(ngModel)]=\"points.wellness_card\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span>Points for completing wellness card</span>\n                </div>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class PointsOverviewComponent implements OnInit {\n    public points = {\n        value: 0.1,\n        desk_checkin: 2,\n        room_checkin: 2,\n        booking_cancel: 3,\n        wellness_card: 1,\n    };\n\n    public ngOnInit() {\n        this.loadPoints();\n    }\n\n    public renderPrice(value: number = 0) {\n        return `$${value?.toFixed(2)}`;\n    }\n\n    public loadPoints() {\n        this.points = {\n            ...this.points,\n            ...JSON.parse(\n                localStorage.getItem('PLACEOS.point_details') || '{}'\n            ),\n        };\n    }\n\n    public storePoints() {\n        localStorage.setItem(\n            'PLACEOS.point_details',\n            JSON.stringify(this.points)\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'points-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <div class=\"flex-1 w-2\">\n                <ng-content></ng-content>\n            </div>\n            <!-- <searchbar class=\"mr-2\"></searchbar> -->\n            <date-options></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class PointsTopbarComponent extends AsyncHandler {\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { PointsStateService } from './points-state.service';\n\n@Component({\n    selector: 'placeos-points',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <points-topbar class=\"relative z-10\">\n                <button\n                    *ngIf=\"page === 'assets'\"\n                    btn\n                    matRipple\n                    (click)=\"newAsset()\"\n                >\n                    New Asset\n                </button>\n            </points-topbar>\n            <nav mat-tab-nav-bar>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/points', 'overview']\"\n                    [active]=\"page === 'overview'\"\n                >\n                    Overview\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/points', 'assets']\"\n                    [active]=\"page === 'assets'\"\n                >\n                    Assets\n                </a>\n            </nav>\n            <div class=\"flex-1 w-full h-1/2 overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class PointsComponent extends AsyncHandler implements OnInit {\n    /** Page being displayed */\n    public page: string;\n\n    public readonly newAsset = () => this._state.newAsset();\n\n    constructor(private _state: PointsStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._router.events.subscribe(() => {\n                const url_parts = this._router.url?.split('/') || [''];\n                this.page = url_parts[url_parts.length - 1];\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.page = parts[parts.length - 1];\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { PointsStateService } from './points-state.service';\n\n@Component({\n    selector: 'placeos-new-points',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <points-topbar class=\"relative z-10\">\n                    <button\n                        *ngIf=\"page === 'assets'\"\n                        btn\n                        matRipple\n                        (click)=\"newAsset()\"\n                    >\n                        New Asset\n                    </button>\n                </points-topbar>\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/entertainment', 'points', 'overview']\"\n                        [active]=\"page === 'overview'\"\n                    >\n                        Overview\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/entertainment', 'points', 'assets']\"\n                        [active]=\"page === 'assets'\"\n                    >\n                        Assets\n                    </a>\n                </nav>\n                <div class=\"flex-1 w-full h-1/2 overflow-auto\">\n                    <router-outlet></router-outlet>\n                </div>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewPointsComponent extends AsyncHandler implements OnInit {\n    /** Page being displayed */\n    public page: string;\n\n    public readonly newAsset = () => this._state.newAsset();\n\n    constructor(private _state: PointsStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._router.events.subscribe(() => {\n                const url_parts = this._router.url?.split('/') || [''];\n                this.page = url_parts[url_parts.length - 1];\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.page = parts[parts.length - 1];\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { UIModule } from '../ui/ui.module';\nimport { PointsAssetModalComponent } from './asset-modal.component';\nimport { PointsAssetsComponent } from './points-assets.component';\nimport { PointsOverviewComponent } from './points-overview.component';\nimport { PointsTopbarComponent } from './points-topbar.component';\nimport { PointsComponent } from './points.component';\nimport { NewPointsComponent } from './new-points.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: PointsComponent,\n        children: [\n            { path: 'assets', component: PointsAssetsComponent },\n            { path: 'overview', component: PointsOverviewComponent },\n            { path: '**', redirectTo: 'overview', pathMatch: 'full' },\n        ],\n    },\n    {\n        path: 'new',\n        component: NewPointsComponent,\n        children: [\n            { path: 'assets', component: PointsAssetsComponent },\n            { path: 'overview', component: PointsOverviewComponent },\n            { path: '**', redirectTo: 'overview', pathMatch: 'full' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        NewPointsComponent,\n        PointsComponent,\n        PointsTopbarComponent,\n        PointsOverviewComponent,\n        PointsAssetsComponent,\n        PointsAssetModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        UIModule,\n        MatTabsModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class PointsModule {}\n"],"x_google_ignoreList":[0]}