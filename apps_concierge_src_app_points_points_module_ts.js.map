{"version":3,"sources":["./node_modules/date-fns/esm/startOfHour/index.js","./apps/concierge/src/app/points/asset-modal.component.ts","./apps/concierge/src/app/points/points-state.service.ts","./apps/concierge/src/app/points/points-assets.component.ts","./apps/concierge/src/app/points/points-overview.component.ts","./apps/concierge/src/app/points/points-topbar.component.ts","./apps/concierge/src/app/points/points.component.ts","./apps/concierge/src/app/points/points.module.ts"],"names":["startOfHour","dirtyDate","requiredArgs","arguments","date","toDate","setMinutes","PointsAssetModalComponent","_spaces","_desks","_data","event","form","id","this","asset","asset_id","name","type","accept_points","discount_cap","unit_price","custom_rates","asset_options","combineLatest","valueChanges","list","desks","pipe","map","spaces","loading","search","toLowerCase","filter","_","includes","tap","shareReplay","setFilters","zones","value","toFixed","get","setValue","first","Date","second","addHours","rate","emit","reason","metadata","save","PointsStateService","_dialog","_assets","BehaviorSubject","assets","asObservable","next","JSON","parse","localStorage","getItem","subscribe","setItem","stringify","ref","open","data","details","Promise","race","componentInstance","toPromise","afterClosed","close","getValue","PointsAssetsComponent","_state","asset_list","edit","d","newAsset","remove","removeAsset","PointsOverviewComponent","points","desk_checkin","room_checkin","booking_cancel","wellness_card","loadPoints","storePoints","PointsTopbarComponent","_org","super","initialised","ROUTES","path","component","PointsComponent","_router","subscription","events","url_parts","url","split","page","length","parts","children","redirectTo","PointsModule"],"mappings":"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","file":"apps_concierge_src_app_points_points_module_ts.js","sourcesContent":["import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent } from '@placeos/common';\nimport { SpacesService } from '@placeos/spaces';\nimport { addHours, startOfHour } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { DesksStateService } from '../desks/desks-state.service';\n\n@Component({\n    selector: 'points-asset-modal',\n    template: `\n        <header>\n            <h2 class=\"text-lg\">\n                {{ form?.value?.id ? 'Edit' : 'New' }} Points Asset\n            </h2>\n        </header>\n        <main\n            class=\"min-w-[24rem] overflow-hidden\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-2\">\n                <div class=\"flex items-center\">\n                    <label class=\"w-24\">Asset Type</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"flex-1 h-[3.25rem]\"\n                    >\n                        <mat-select\n                            formControlName=\"type\"\n                            placeholder=\"Select asset type\"\n                        >\n                            <mat-option value=\"space\">Space</mat-option>\n                            <mat-option value=\"desk\">Desk</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center\">\n                    <label class=\"w-24\">Asset</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"flex-1 h-[3.25rem]\"\n                    >\n                        <app-icon\n                            matPrefix\n                            class=\"text-2xl\"\n                            [class.opacity-30]=\"!form.get('type').value\"\n                            >search</app-icon\n                        >\n                        <input\n                            matInput\n                            [disabled]=\"!form.get('type').value\"\n                            formControlName=\"name\"\n                            placeholder=\"Search for asset...\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-spinner\n                            *ngIf=\"loading\"\n                            matSuffix\n                            [diameter]=\"32\"\n                        ></mat-spinner>\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let option of asset_options | async\"\n                            [value]=\"option?.display_name || option?.name\"\n                        >\n                            {{ option?.display_name || option?.name }}\n                        </mat-option>\n                        <mat-option\n                            [disabled]=\"true\"\n                            *ngIf=\"!(asset_options | async)?.length\"\n                        >\n                            No matching options\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n            </section>\n            <section class=\"border-t border-gray-200 p-2\">\n                <div class=\"flex items-center\">\n                    <label class=\"flex-1\">Standard hourly rate</label>\n                    <a-counter\n                        class=\"border border-gray-200 rounded\"\n                        formControlName=\"unit_price\"\n                        [min]=\"500\"\n                        [max]=\"80000\"\n                        [step]=\"500\"\n                        [render_fn]=\"renderPrice\"\n                    ></a-counter>\n                </div>\n                <div class=\"\">\n                    <h2>Rate Rules</h2>\n                    <div>\n                        <div\n                            rule\n                            class=\"flex items-center\"\n                            *ngFor=\"\n                                let rule of form.get('custom_rates')?.value ||\n                                    []\n                            \"\n                        >\n                            <div\n                                class=\"flex items-center flex-1 w-1/2 space-x-2\"\n                            >\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex-2 h-[3.25rem] w-32\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"rule.type\"\n                                        [ngModelOptions]=\"{ standalone: true }\"\n                                    >\n                                        <mat-option value=\"before\">\n                                            Before\n                                        </mat-option>\n                                        <mat-option value=\"between\">\n                                            Between\n                                        </mat-option>\n                                        <mat-option value=\"after\">\n                                            After\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                                <a-time-field\n                                    class=\"flex-1 mt-2 w-40\"\n                                    [(ngModel)]=\"rule.first\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                                <a-time-field\n                                    class=\"flex-1 mt-2 w-40\"\n                                    [(ngModel)]=\"rule.second\"\n                                    [from]=\"rule.first\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    *ngIf=\"rule.type === 'between'\"\n                                ></a-time-field>\n                            </div>\n                            <span class=\"mx-2\">@</span>\n                            <a-counter\n                                class=\"border border-gray-200 rounded\"\n                                [(ngModel)]=\"rule.rate\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [min]=\"0\"\n                                [max]=\"300\"\n                                [step]=\"5\"\n                                [render_fn]=\"renderPercent\"\n                            ></a-counter>\n                        </div>\n                    </div>\n                    <button mat-button class=\"clear w-full\" (click)=\"newRule()\">\n                        <div class=\"flex items-center justify-center w-full\">\n                            <app-icon class=\"text-lg\">add</app-icon>\n                            <span class=\"underline\">Add new rule</span>\n                        </div>\n                    </button>\n                </div>\n            </section>\n            <section class=\"border-t border-gray-200 p-2\">\n                <div class=\"flex items-center\">\n                    <label>Accept Points?</label>\n                    <mat-checkbox\n                        formControlName=\"accept_points\"\n                    ></mat-checkbox>\n                </div>\n                <div class=\"flex items-center\">\n                    <label class=\"flex-1\">Discount Cap</label>\n                    <a-counter\n                        class=\"border border-gray-200 rounded\"\n                        formControlName=\"discount_cap\"\n                        [min]=\"0\"\n                        [max]=\"100\"\n                        [step]=\"5\"\n                        [render_fn]=\"renderPercent\"\n                    ></a-counter>\n                </div>\n            </section>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2 border-t border-gray-200\"\n        >\n            <button mat-button mat-dialog-close class=\"inverse flex-1\">\n                Cancel\n            </button>\n            <button\n                mat-button\n                class=\"flex-1\"\n                [disabled]=\"!form.value.name\"\n                (click)=\"save()\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            label {\n                width: auto;\n                min-width: 0;\n                margin: 0 1rem 0 0;\n            }\n        `,\n    ],\n})\nexport class PointsAssetModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form: FormGroup = new FormGroup({\n        id: new FormControl(this._data.asset?.id || ''),\n        asset_id: new FormControl(this._data.asset?.asset_id || ''),\n        name: new FormControl(this._data.asset?.name || ''),\n        type: new FormControl(this._data.asset?.type || ''),\n        accept_points: new FormControl(\n            this._data.asset?.accept_points ?? false\n        ),\n        discount_cap: new FormControl(this._data.asset?.discount_cap || 50),\n        unit_price: new FormControl(this._data.asset?.unit_price || 1000),\n        custom_rates: new FormControl(this._data.asset?.custom_rates || []),\n    });\n\n    public loading: boolean;\n\n    public readonly asset_options = combineLatest([\n        this.form.valueChanges,\n        this._spaces.list,\n        this._desks.desks,\n    ]).pipe(\n        map(([{ type, name }, spaces, desks]) => {\n            this.loading = true;\n            const search = (name || '').toLowerCase();\n            return !type\n                ? []\n                : type === 'space'\n                ? spaces.filter((_) => _.name.toLowerCase().includes(search))\n                : desks.filter((_) => _.name.toLowerCase().includes(search));\n        }),\n        tap(() => (this.loading = false)),\n        shareReplay(1)\n    );\n\n    constructor(\n        private _spaces: SpacesService,\n        private _desks: DesksStateService,\n        @Inject(MAT_DIALOG_DATA) private _data: { asset?: any }\n    ) {\n        this._desks.setFilters({ zones: ['All'] });\n    }\n\n    public renderPrice(value: number = 0) {\n        return `$${(value / 100)?.toFixed(2)}`;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public newRule() {\n        this.form.get('custom_rates').setValue([\n            ...this.form.get('custom_rates').value,\n            {\n                type: 'before',\n                first: startOfHour(new Date()),\n                second: addHours(startOfHour(new Date()), 1),\n                rate: 100,\n            },\n        ]);\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: { ...this.form.value } });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { PointsAssetModalComponent } from './asset-modal.component';\nimport { PointAsset } from './points-assets.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PointsStateService {\n    private _assets = new BehaviorSubject<PointAsset[]>([]);\n\n    public readonly assets = this._assets.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        this._assets.next(\n            JSON.parse(localStorage.getItem('PLACEOS.point_assets') || '[]')\n        );\n        this.assets.subscribe((list) => {\n            localStorage.setItem('PLACEOS.point_assets', JSON.stringify(list));\n        });\n    }\n\n    public async newAsset(asset?: Partial<PointAsset>) {\n        const ref = this._dialog.open(PointsAssetModalComponent, {\n            data: { asset },\n        });\n        const details: DialogEvent = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details.reason !== 'done') return ref.close();\n        this._assets.next([\n            ...this._assets.getValue().filter(_ => _.id !== asset?.id),\n            {\n                ...details.metadata,\n                id: details.metadata.id || `PA-${randomInt(999_999_999)}`,\n            },\n        ] as any);\n        ref.close();\n    }\n\n    public removeAsset(asset_id: string) {\n        this._assets.next(\n            this._assets.getValue().filter((_) => _.id !== asset_id)\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { PointsStateService } from './points-state.service';\n\nexport interface CustomRate {\n    rate: number;\n    conditions: any;\n}\n\nexport interface PointAsset {\n    id: string;\n    name: string;\n    type: 'space' | 'desk' | 'parking';\n    accept_points: boolean;\n    discount_cap: number;\n    unit_price: number;\n    custom_rates: CustomRate[];\n}\n\n@Component({\n    selector: 'points-assets',\n    template: `\n        <custom-table\n            class=\"w-full h-full\"\n            [dataSource]=\"asset_list\"\n            [columns]=\"[\n                'name',\n                'type',\n                'unit_price',\n                'accept_points',\n                'discount_cap',\n                'actions'\n            ]\"\n            [display_column]=\"[\n                'Name',\n                'Type',\n                'Unit Price',\n                'Accepts Points',\n                'Discount %',\n                ' '\n            ]\"\n            [column_size]=\"['flex']\"\n            [template]=\"{\n                type: type_template,\n                unit_price: price_template,\n                accept_points: accept_template,\n                discount_cap: discount_template,\n                actions: action_template\n            }\"\n            empty=\"No priced assets\"\n        ></custom-table>\n        <ng-template #type_template let-data=\"data\">\n            <span class=\"p-2 bg-gray-200 rounded capitalize\">{{ data }}</span>\n        </ng-template>\n        <ng-template #price_template let-data=\"data\">\n            <span class=\"text-xs\"> {{ data / 100 | currency }} per hour </span>\n        </ng-template>\n        <ng-template #accept_template let-data=\"data\">\n            <div class=\"flex justify-center h-px\">\n                <app-icon\n                    class=\"text-2xl\"\n                    [class.text-success]=\"data\"\n                    [class.text-error]=\"!data\"\n                >\n                    {{ data ? 'check_circle' : 'cancel' }}\n                </app-icon>\n            </div>\n        </ng-template>\n        <ng-template #discount_template let-data=\"data\">\n            <div class=\"text-right px-4\">{{ data }}%</div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"h-6 flex items-center justify-end\">\n                <button mat-icon-button (click)=\"edit(row)\"><app-icon>edit</app-icon></button>\n                <button mat-icon-button (click)=\"remove(row)\"><app-icon>delete</app-icon></button>\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        :host {\n            height: 100%;\n            width: 100%;\n            overflow-x: auto;\n            overflow-y: hidden;\n        }\n    `],\n})\nexport class PointsAssetsComponent {\n    public asset_list = this._state.assets;\n\n    public readonly edit = (d) => this._state.newAsset(d);\n    public readonly remove = (d) => this._state.removeAsset(d?.id);\n\n    constructor(private _state: PointsStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'points-overview',\n    template: `\n        <h2 class=\"p-2 bg-secondary text-white w-full  font-medium text-lg\">\n            Point Overview\n        </h2>\n        <section class=\"bg-white w-full\">\n            <h2 class=\"p-2 underline font-medium text-lg\">Point Value</h2>\n            <div class=\"flex items-center space-x-2 p-2 mb-4\">\n                <span>1 point =</span>\n                <a-counter\n                    class=\"bg-white rounded border border-gray-200\"\n                    [step]=\"0.1\"\n                    [(ngModel)]=\"points.value\"\n                    (ngModelChange)=\"storePoints()\"\n                    [render_fn]=\"renderPrice\"\n                ></a-counter>\n                <app-icon matTooltip=\"Set point redemption caps on menu items\">\n                    info\n                </app-icon>\n            </div>\n        </section>\n        <section class=\"bg-white w-full flex-1\">\n            <h2 class=\"p-2 underline font-medium text-lg\">Automatic Rewards</h2>\n            <div class=\"p-4\">\n                <div\n                    class=\"flex items-center space-x-2 p-2 border-b border-gray-200\"\n                >\n                    <a-counter\n                        class=\"bg-white rounded border border-gray-200\"\n                        [(ngModel)]=\"points.desk_checkin\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span>Points for desk check-in</span>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 p-2 border-b border-gray-200\"\n                >\n                    <a-counter\n                        class=\"bg-white rounded border border-gray-200\"\n                        [(ngModel)]=\"points.room_checkin\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span>Points for room check-in</span>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 p-2 border-b border-gray-200\"\n                >\n                    <a-counter\n                        class=\"bg-white rounded border border-gray-200\"\n                        [(ngModel)]=\"points.booking_cancel\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span\n                        >Points for booking cancellation with 24 hour\n                        notice</span\n                    >\n                </div>\n                <div class=\"flex items-center space-x-2 p-2 \">\n                    <a-counter\n                        class=\"bg-white rounded border border-gray-200\"\n                        [(ngModel)]=\"points.wellness_card\"\n                        (ngModelChange)=\"storePoints()\"\n                    ></a-counter>\n                    <span>Points for completing wellness card</span>\n                </div>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class PointsOverviewComponent implements OnInit {\n    public points = {\n        value: 0.1,\n        desk_checkin: 2,\n        room_checkin: 2,\n        booking_cancel: 3,\n        wellness_card: 1,\n    };\n\n    public ngOnInit() {\n        this.loadPoints();\n    }\n\n    public renderPrice(value: number = 0) {\n        return `$${value?.toFixed(2)}`;\n    }\n\n    public loadPoints() {\n        this.points = {\n            ...this.points,\n            ...JSON.parse(\n                localStorage.getItem('PLACEOS.point_details') || '{}'\n            ),\n        };\n    }\n\n    public storePoints() {\n        localStorage.setItem(\n            'PLACEOS.point_details',\n            JSON.stringify(this.points)\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'points-topbar',\n    template: `\n        <div class=\"flex-1 w-2\">\n            <ng-content></ng-content>\n        </div>\n        <!-- <searchbar class=\"mr-2\"></searchbar> -->\n        <date-options></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: .5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class PointsTopbarComponent extends BaseClass {\n\n    constructor(\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { PointsStateService } from './points-state.service';\n\n@Component({\n    selector: 'placeos-points',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col\">\n            <points-topbar class=\"relative z-10\">\n                <button\n                    *ngIf=\"page === 'assets'\"\n                    mat-button\n                    (click)=\"newAsset()\"\n                >\n                    New Asset\n                </button>\n            </points-topbar>\n            <nav mat-tab-nav-bar>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/points', 'overview']\"\n                    [active]=\"page === 'overview'\"\n                >\n                    Overview\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/points', 'assets']\"\n                    [active]=\"page === 'assets'\"\n                >\n                    Assets\n                </a>\n            </nav>\n            <div class=\"flex-1 w-full h-1/2 overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class PointsComponent extends BaseClass implements OnInit {\n    /** Page being displayed */\n    public page: string;\n\n    public readonly newAsset = () => this._state.newAsset();\n\n    constructor(private _state: PointsStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._router.events.subscribe(() => {\n                const url_parts = this._router.url?.split('/') || [''];\n                this.page = url_parts[url_parts.length - 1];\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.page = parts[parts.length - 1];\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { UIModule } from '../ui/ui.module';\nimport { PointsAssetModalComponent } from './asset-modal.component';\nimport { PointsAssetsComponent } from './points-assets.component';\nimport { PointsOverviewComponent } from './points-overview.component';\nimport { PointsTopbarComponent } from './points-topbar.component';\nimport { PointsComponent } from './points.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: PointsComponent,\n        children: [\n            { path: '', redirectTo: 'overview' },\n            { path: 'assets', component: PointsAssetsComponent },\n            { path: 'overview', component: PointsOverviewComponent },\n            { path: '*', redirectTo: 'overview' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        PointsComponent,\n        PointsTopbarComponent,\n        PointsOverviewComponent,\n        PointsAssetsComponent,\n        PointsAssetModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        UIModule,\n        MatTabsModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class PointsModule {}\n"],"sourceRoot":"webpack:///"}