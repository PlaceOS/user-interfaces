{"version":3,"mappings":"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","names":["i0","WeekViewTopbarComponent","BaseClass","constructor","_state","_org","_route","_router","super","this","active_levels","options","d","setDate","setUIOptions","show_weekends","newBooking","z","navigate","relativeTo","queryParams","zone_ids","join","setZones","ngOnInit","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","zones","get","split","length","level","levelWithID","building","buildings","find","bld","id","parent_id","levels","filter","zone","lvl","push","updateZones","selectors","ctx","WeekViewEventComponent","e","setEvent","WeekViewDayComponent","BehaviorSubject","date","map","addDays","startOfWeek","index","valueOf","combineLatest","filtered","_index","events","start","end","endOfDay","bkn","timePeriodsIntersect","duration","ngOnChanges","changes","next","WeekViewTimelineComponent","event","loading","startPolling","ngOnDestroy","stopPolling","ROUTES","path","component","WeekViewComponent","DayViewModule","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","RouterModule"],"sources":["./apps/concierge/src/app/week-view/week-view-topbar.component.ts","./apps/concierge/src/app/week-view/week-view-event.component.ts","./apps/concierge/src/app/week-view/week-view-day.component.ts","./apps/concierge/src/app/week-view/week-view-timeline.component.ts","./apps/concierge/src/app/week-view/week-view.module.ts","./apps/concierge/src/app/week-view/week-view.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { EventsStateService } from '../day-view/events-state.service';\n\n@Component({\n    selector: 'week-view-topbar',\n    template: `\n        <button mat-button new class=\"w-12 xl:w-auto\" (click)=\"newBooking()\">\n            <div class=\"flex items-center\">\n                <app-icon class=\"mr-2\">add</app-icon>\n                <div class=\"hidden xl:block\">New Booking</div>\n            </div>\n        </button>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(options | async)?.show_weekends\"\n            (ngModelChange)=\"setWeekends($event)\"\n            ><div class=\"text-xs\">Show weekends</div></mat-slide-toggle\n        >\n        <div class=\"flex-1 w-0\"></div>\n        <!-- <searchbar class=\"mr-2\"></searchbar> -->\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n            }\n\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n                margin-left: 1em;\n            }\n        `,\n    ],\n})\nexport class WeekViewTopbarComponent extends BaseClass implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** Options set for week view */\n    public readonly options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setDate(d);\n    /** Set filtered date */\n    public readonly setWeekends = (d) =>\n        this._state.setUIOptions({ show_weekends: d });\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { EventsStateService } from '../day-view/events-state.service';\n\n@Component({\n    selector: 'week-view-event',\n    template: `\n        <div\n            content\n            matRipple\n            (click)=\"view(event)\"\n            [class]=\"\n                'm-2 p-2 bg-white shadow rounded border-2 text-black text-left font-normal ' +\n                (event?.state === 'done' ? 'done' : event?.type)\n            \"\n        >\n            <div class=\"text-base\">{{ event?.title }}</div>\n            <div class=\"text-sm\">{{ event?.date | date: 'shortTime' }}</div>\n            <div class=\"text-sm\">\n                {{ event?.attendees.length }} Attendee{{\n                    event?.attendees.length === 1 ? '' : 's'\n                }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                background: none !important;\n                border: none !important;\n            }\n\n            [content] {\n                width: calc(100% - 1rem);\n            }\n\n            .done {\n                opacity: 0.5;\n            }\n\n            .done:hover {\n                opacity: 1;\n            }\n\n            .cancelled {\n                border-color: #626262;\n            }\n\n            .external {\n                border-color: #d85be0;\n            }\n\n            .internal {\n                border-color: #00a4c7;\n            }\n        `,\n    ],\n})\nexport class WeekViewEventComponent {\n    @Input() public event: CalendarEvent;\n\n    public readonly view = (e) => this._state.setEvent(e);\n\n    constructor(private _state: EventsStateService) {}\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { timePeriodsIntersect } from '@placeos/common';\nimport { addDays, endOfDay, startOfWeek } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EventsStateService } from '../day-view/events-state.service';\n\n@Component({\n    selector: 'week-view-day',\n    template: `\n        <header\n            class=\"flex items-center justify-center border-b border-gray-200 bg-gray-500 w-full py-3 text-white\"\n        >\n            {{ date | async | date: 'EEE, MMM d, y' }}\n        </header>\n        <div class=\"flex-1 h-1/2 overflow-auto w-full\">\n            <ng-container *ngIf=\"(events | async)?.length; else empty_state\">\n                <week-view-event\n                    *ngFor=\"let event of events | async\"\n                    [event]=\"event\"\n                ></week-view-event>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <p class=\"text-center p-2\">No events</p>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class WeekViewDayComponent implements OnChanges {\n    @Input() public index: number;\n\n    private _index = new BehaviorSubject<number>(0);\n\n    public readonly date = this._state.date.pipe(\n        map((date) => addDays(startOfWeek(date), this.index).valueOf())\n    );\n\n    public readonly events = combineLatest([\n        this._state.filtered,\n        this._state.date,\n        this._index,\n    ]).pipe(\n        map(([events, date, index]) => {\n            const start = addDays(startOfWeek(date), index).valueOf();\n            const end = endOfDay(start).valueOf();\n            return events.filter((bkn) =>\n                timePeriodsIntersect(\n                    start,\n                    end,\n                    bkn.date,\n                    bkn.date + bkn.duration * 60 * 1000\n                )\n            );\n        })\n    );\n\n    constructor(private _state: EventsStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.index) {\n            this._index.next(this.index);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { EventsStateService } from '../day-view/events-state.service';\n\n@Component({\n    selector: 'week-view-timeline',\n    template: `\n        <div class=\"flex divide-x border-gray-400 h-full\">\n            <ng-container *ngFor=\"let i of weekdays\">\n                <ng-container\n                    *ngIf=\"\n                        (i !== 0 && i !== 6) || (options | async).show_weekends\n                    \"\n                >\n                    <week-view-day\n                        class=\"h-full flex-1\"\n                        [index]=\"i\"\n                    ></week-view-day>\n                </ng-container>\n            </ng-container>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <view-event-details\n            *ngIf=\"event | async\"\n            [event]=\"event | async\"\n        ></view-event-details>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class WeekViewTimelineComponent implements OnInit, OnDestroy {\n    public readonly weekdays = [0, 1, 2, 3, 4, 5, 6];\n    public readonly options = this._state.options;\n    public readonly event = this._state.event;\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: EventsStateService) {}\n\n    public ngOnInit(): void {\n        this._state.startPolling('week');\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTopbarComponent } from './week-view-topbar.component';\nimport { WeekViewTimelineComponent } from './week-view-timeline.component';\nimport { WeekViewDayComponent } from './week-view-day.component';\nimport { WeekViewEventComponent } from './week-view-event.component';\n\nconst ROUTES: Route[] = [{ path: '', component: WeekViewComponent }];\n\n@NgModule({\n    declarations: [\n        WeekViewComponent,\n        WeekViewTopbarComponent,\n        WeekViewTimelineComponent,\n        WeekViewDayComponent,\n        WeekViewEventComponent\n    ],\n    imports: [CommonModule, FormsModule, UIModule, SharedSpacesModule, SharedUsersModule, RouterModule.forChild(ROUTES)],\n})\nexport class DayViewModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-weekview]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden\">\n            <week-view-topbar></week-view-topbar>\n            <week-view-timeline></week-view-timeline>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `\n    ],\n})\nexport class WeekViewComponent {}\n"],"sourceRoot":"webpack:///","file":"apps_concierge_src_app_week-view_week-view_module_ts.js"}