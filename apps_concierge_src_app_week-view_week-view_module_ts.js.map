{"version":3,"file":"apps_concierge_src_app_week-view_week-view_module_ts.js","mappings":"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","names":["i0","level_r1","id","display_name","name","WeekViewTopbarComponent","AsyncHandler","constructor","_state","_org","_route","_router","super","this","zones","levels","active_levels","options","setDate","d","setWeekends","setUIOptions","show_weekends","newBooking","updateZones","z","navigate","relativeTo","queryParams","zone_ids","join","setZones","ngOnInit","_this","_asyncToGenerator","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","get","split","length","level","levelWithID","building","buildings","find","bld","parent_id","filter","zone","lvl","push","static","t","i1","i2","i3","core","VBU","selectors","features","decls","vars","consts","template","rf","ctx","$event","WeekViewTopbarComponent_mat_option_8_Template","tmp_2_0","_r1","ctx_r1","view","event","state","type","title","date","time_format","attendees","WeekViewEventComponent","_settings","e","setEvent","inputs","WeekViewEventComponent_div_0_Template","WeekViewDayComponent_ng_container_5_week_view_event_1_Template","events","WeekViewDayComponent","_index","BehaviorSubject","map","addDays","startOfWeek","index","valueOf","combineLatest","filtered","start","end","endOfDay","bkn","timePeriodsIntersect","duration","ngOnChanges","changes","next","WeekViewDayComponent_ng_container_5_Template","WeekViewDayComponent_ng_template_7_Template","empty_state_r3","i_r1","WeekViewTimelineComponent_ng_container_1_ng_container_1_Template","WeekViewTimelineComponent","weekdays","loading","startPolling","ngOnDestroy","stopPolling","WeekViewTimelineComponent_ng_container_1_Template","WeekViewTimelineComponent_mat_progress_bar_2_Template","WeekViewTimelineComponent_view_event_details_4_Template","WeekViewComponent","attrs","_c0","ROUTES","path","component","WeekViewModule","$C","G2t","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","RouterModule","forChild","MapLocation","_data","location","position","map_id","asset_id","x","map_width","y","map_height","variance","last_seen","getUnixTime","Date","at_location","coordinates_from"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/week-view/week-view-topbar.component.ts","./apps/concierge/src/app/week-view/week-view-event.component.ts","./apps/concierge/src/app/week-view/week-view-day.component.ts","./apps/concierge/src/app/week-view/week-view-timeline.component.ts","./apps/concierge/src/app/week-view/week-view.component.ts","./apps/concierge/src/app/week-view/week-view.module.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { EventsStateService } from '../day-view/events-state.service';\n\n@Component({\n    selector: 'week-view-topbar',\n    template: `\n        <button btn matRipple new class=\"w-12 xl:w-auto\" (click)=\"newBooking()\">\n            <div class=\"flex items-center\">\n                <app-icon class=\"mr-2\">add</app-icon>\n                <div class=\"hidden xl:block\">New Booking</div>\n            </div>\n        </button>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(options | async)?.show_weekends\"\n            (ngModelChange)=\"setWeekends($event)\"\n            ><div class=\"text-xs\">Show weekends</div></mat-slide-toggle\n        >\n        <div class=\"flex-1 w-0\"></div>\n        <!-- <searchbar class=\"mr-2\"></searchbar> -->\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: var(--b1);\n                height: 5em;\n                padding: 0 1em;\n            }\n\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n                margin-left: 1em;\n            }\n        `,\n    ],\n})\nexport class WeekViewTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** Options set for week view */\n    public readonly options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setDate(d);\n    /** Set filtered date */\n    public readonly setWeekends = (d) =>\n        this._state.setUIOptions({ show_weekends: d });\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { EventsStateService } from '../day-view/events-state.service';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'week-view-event',\n    template: `\n        <div\n            content\n            matRipple\n            *ngIf=\"event\"\n            (click)=\"view(event)\"\n            [class]=\"\n                'm-2 p-2 bg-base-100 shadow rounded border-2 text-black text-left font-normal ' +\n                (event?.state === 'done' ? 'done' : event?.type)\n            \"\n        >\n            <div class=\"text-base\">{{ event?.title }}</div>\n            <div class=\"text-sm\">{{ event?.date | date: time_format }}</div>\n            <div class=\"text-sm\">\n                {{ event?.attendees.length }} Attendee{{\n                    event?.attendees.length === 1 ? '' : 's'\n                }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                background: none !important;\n                border: none !important;\n            }\n\n            [content] {\n                width: calc(100% - 1rem);\n            }\n\n            .done {\n                opacity: 0.5;\n            }\n\n            .done:hover {\n                opacity: 1;\n            }\n\n            .cancelled {\n                border-color: #626262;\n            }\n\n            .external {\n                border-color: #d85be0;\n            }\n\n            .internal {\n                border-color: #00a4c7;\n            }\n        `,\n    ],\n})\nexport class WeekViewEventComponent {\n    @Input() public event: CalendarEvent;\n\n    public readonly view = (e) => this._state.setEvent(e);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { timePeriodsIntersect } from '@placeos/common';\nimport { addDays, endOfDay, startOfWeek } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EventsStateService } from '../day-view/events-state.service';\n\n@Component({\n    selector: 'week-view-day',\n    template: `\n        <header\n            class=\"flex items-center justify-center border-b border-base-200 bg-base-300 w-full py-3 text-white\"\n        >\n            {{ date | async | date: 'EEE, MMM d, y' }}\n        </header>\n        <div class=\"flex-1 h-1/2 overflow-auto w-full\">\n            <ng-container *ngIf=\"(events | async)?.length; else empty_state\">\n                <week-view-event\n                    *ngFor=\"let event of events | async\"\n                    [event]=\"event\"\n                ></week-view-event>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <p class=\"text-center p-2\">No events</p>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class WeekViewDayComponent implements OnChanges {\n    @Input() public index: number;\n\n    private _index = new BehaviorSubject<number>(0);\n\n    public readonly date = this._state.date.pipe(\n        map((date) => addDays(startOfWeek(date), this.index).valueOf())\n    );\n\n    public readonly events = combineLatest([\n        this._state.filtered,\n        this._state.date,\n        this._index,\n    ]).pipe(\n        map(([events, date, index]) => {\n            const start = addDays(startOfWeek(date), index).valueOf();\n            const end = endOfDay(start).valueOf();\n            return events.filter((bkn) =>\n                timePeriodsIntersect(\n                    start,\n                    end,\n                    bkn.date,\n                    bkn.date + bkn.duration * 60 * 1000\n                )\n            );\n        })\n    );\n\n    constructor(private _state: EventsStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.index) {\n            this._index.next(this.index);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { EventsStateService } from '../day-view/events-state.service';\n\n@Component({\n    selector: 'week-view-timeline',\n    template: `\n        <div class=\"flex divide-x border-base-200 h-full\">\n            <ng-container *ngFor=\"let i of weekdays\">\n                <ng-container\n                    *ngIf=\"\n                        (i !== 0 && i !== 6) || (options | async).show_weekends\n                    \"\n                >\n                    <week-view-day\n                        class=\"h-full flex-1\"\n                        [index]=\"i\"\n                    ></week-view-day>\n                </ng-container>\n            </ng-container>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <view-event-details\n            *ngIf=\"event | async\"\n            [event]=\"event | async\"\n        ></view-event-details>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class WeekViewTimelineComponent implements OnInit, OnDestroy {\n    public readonly weekdays = [0, 1, 2, 3, 4, 5, 6];\n    public readonly options = this._state.options;\n    public readonly event = this._state.event;\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: EventsStateService) {}\n\n    public ngOnInit(): void {\n        this._state.startPolling('week');\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-weekview]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden\">\n            <week-view-topbar></week-view-topbar>\n            <week-view-timeline></week-view-timeline>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class WeekViewComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTopbarComponent } from './week-view-topbar.component';\nimport { WeekViewTimelineComponent } from './week-view-timeline.component';\nimport { WeekViewDayComponent } from './week-view-day.component';\nimport { WeekViewEventComponent } from './week-view-event.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: 'new', component: WeekViewComponent },\n];\n\n@NgModule({\n    declarations: [\n        WeekViewComponent,\n        WeekViewTopbarComponent,\n        WeekViewTimelineComponent,\n        WeekViewDayComponent,\n        WeekViewEventComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class WeekViewModule {}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[]}