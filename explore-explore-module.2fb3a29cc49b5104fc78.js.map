{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-space-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-booking-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-state.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-spaces.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-zones.service.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/compareAsc/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInCalendarMonths/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInMonths/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInSeconds/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/_lib/cloneObject/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/_lib/assign/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/formatDistance/index.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-device-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/formatDistanceToNow/index.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-desk-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-desks.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-zoom-control.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-map-control.component.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-map-view.component.ts","./src/app/explore/footer-legend/footer-legend.component.html","./src/app/explore/footer-legend/footer-legend.component.ts","./src/app/explore/explore.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore.module.ts","./src/app/explore/explore.module.ts"],"names":["ExploreSpaceInfoComponent","_details","_element","space","this","events","status","tries","setTimeout","parent","nativeElement","parentElement","ngOnInit","position","parseInt","style","top","left","y_pos","x_pos","ExploreBookingModalComponent","_data","_calendars","_events","_dialog_ref","booking","attendees","resource","form","markAllAsTouched","on_error","msg","loading","disableClose","valid","list","key","controls","invalid","push","Promise","reject","join","availability","system_ids","resources","value","map","s","id","period_start","Math","floor","date","period_end","duration","catch","e","length","save","display_name","name","close","ExploreStateService","_org","_spaces","_settings","super","_level","BehaviorSubject","_positions","zoom","center","x","y","_styles","_features","_actions","_labels","_options","level","asObservable","spaces","combineLatest","pipe","details","filter","zones","includes","map_url","lvl","map_id","map_positions","map_features","features","options","show_zones","get","concat","map_actions","i","Object","values","reduce","a","map_labels","labels","map_styles","styles","style_mappings","keys","h","display","initialised","first","_","subscribe","subscription","active_building","bld","getValue","level_list","levelsForBuilding","find","setLevel","next","zone_id","levelWithID","style_map","feature_map","actions","actions_map","labels_map","DEFAULT_COLOURS","free","pending","reserved","busy","unknown","ExploreSpacesService","_state","_dialog","_bookings","_bindings","_statuses","clearBindings","bindToSpaces","ngOnDestroy","unsub","forEach","b","unbind","binding","listen","d","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","open","data","bookings","timeout","bookable","clearTimeout","updateStatus","colours","fill","opacity","setStyles","location","hover","content","setFeatures","action","callback","bookSpace","setActions","ExploreZonesService","_location","_capacity","init","toPromise","zone_metadata","all","levels","zone","areas","area","properties","capacity","label_location","bindToZones","buildings","parent_id","system_id","organisation","bindings","area_management","parseData","filled","count","area_id","setLabels","hasOwnProperty","compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","differenceInCalendarMonths","yearDiff","getFullYear","monthDiff","getMonth","differenceInMonths","sign","difference","abs","setMonth","isLastMonthNotFull","result","differenceInSeconds","differenceInMilliseconds","ceil","cloneObject","dirtyObject","target","TypeError","property","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyDate","dirtyBaseDate","dirtyOptions","locale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","ExploreDeviceInfoComponent","username","mac","manufacturer","os","ssid","variance","toFixed","diameter","bg_color","onEnter","loadUser","onClick","onTouch","Date","now","formatDistanceToNow","last_seen","console","log","mod","system","execute","assigned_to","ExploreDeskInfoComponent","user","start","end","ExploreDesksService","_in_use","_desks","_reserved","_stats","occupied","total","bindToDesks","desks","in_use","is_used","some","is_reserved","building","devices","v","at_location","processDevices","desk_id","device","map_width","map_height","coordinates_from","sort","sqrt","pow","desk","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","zoomOut","max","reset","ExploreMapControlComponent","building_list","active_levels","setBuilding","_c0","_c1","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","multi","MatSlideToggleChange","source","checked","MatSlideToggleBase","_elementRef","_MatSlideToggleMixinBase","MatSlideToggle","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","_animationMode","_onChange","_onTouched","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","markForCheck","monitor","focusOrigin","_inputElement","focus","resolve","then","stopMonitoring","event","stopPropagation","emit","_emitChangeEvent","fn","isDisabled","disabled","focusVia","detectChanges","ɵfac","t","ɵcmp","type","selectors","viewQuery","rf","ctx","_t","_thumbEl","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","required","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","$event","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","textContent","trim","toString","directives","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","ExploreMapViewComponent","_s","_zones","_route","_users","url","setOptions","o","queryParamMap","params","has","locateSpace","show","locateUser","feature","message","locate_details","location_services","module","locations","email","priority","indexOf","radius","FooterLegendComponent","colour","dark","icon_list","icon","src","ExploreComponent","_router","title","localStorage","getItem","navigate","refreshKiosk","level_id","phone_numbers","emergency","closeAll","queryParams","post","SharedExploreModule","ROUTES","path","component","AppExploreModule","forChild"],"mappings":"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","file":"explore-explore-module.2fb3a29cc49b5104fc78.js","sourcesContent":["import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\nimport { CalendarEvent } from '@user-interfaces/events';\nimport { Space } from '@user-interfaces/spaces';\nimport { getViewer, coordinatesForElement } from '@yuion/svg-viewer';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            *ngIf=\"space\"\n            name=\"space-info\"\n            [id]=\"space.id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 mb-2\">{{ space.display_name || space.name }}</h4>\n                <div class=\"text-sm\" *ngIf=\"space.capacity >= 0\">\n                    <span>Capacity: </span>{{ space.capacity }}\n                    {{ space.capacity === 1 ? 'person' : 'people' }}\n                </div>\n                <div class=\"flex flex-wrap my-2 text-sm\">\n                    <div\n                        name=\"status\"\n                        [class]=\"\n                            'capitalize rounded p-1 px-2 text-light ' + status\n                        \"\n                    >\n                        {{ status }}\n                    </div>\n                    <div\n                        name=\"available-until\"\n                        *ngIf=\"status !== 'not-bookable'\"\n                    >\n                        {{ available_until }}\n                    </div>\n                </div>\n                <div class=\"features\" *ngIf=\"space.features?.length > 0\">\n                    <h4 class=\"m-0 mb-2\">Room Features</h4>\n                    <ul class=\"pl-2\">\n                        <li\n                            class=\"text-sm\"\n                            *ngFor=\"let feature of space.features\"\n                        >\n                            {{ feature }}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess } from '@user-interfaces/common';\nimport { CalendarEvent, EventsService, generateEventForm } from '@user-interfaces/events';\nimport { Space } from '@user-interfaces/spaces';\nimport { CalendarService } from '@user-interfaces/calendar';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" mat-icon-button mat-dialog-close>\n                <app-icon className=\"material-icons\">close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main [formGroup]=\"form\" class=\"p-4\">\n                <div class=\"flex flex-col\">\n                    <label>Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"title\" placeholder=\"Booking Title\" />\n                        <mat-error>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>Space:</label>\n                    <div class=\"sm:mt-4 mb-4\">{{ form.controls.resources?.value[0].display_name || form.controls.resources?.value[0].name }}</div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\">\n                        <label>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">{{ form.controls.date?.value | date:'medium' }}</div>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label>Duration:</label>\n                        <a-duration-field formControlName=\"duration\"></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button mat-button (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"w-full h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        header {\n            max-width: calc(100vw + 100%);\n        }\n    `],\n})\nexport class ExploreBookingModalComponent {\n    public booking: CalendarEvent;\n    public form: FormGroup;\n    public loading: string;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _calendars: CalendarService,\n        private _events: EventsService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.booking = new CalendarEvent({\n            attendees: [{ ...this._data.space, resource: true } as any],\n        });\n        this.form = generateEventForm(this.booking);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        const on_error = (msg) => {\n            this.loading = '';\n            notifyError(msg);\n            this._dialog_ref.disableClose = false;\n        }\n        if (!this.form.valid) {\n            const list = [];\n            for (const key in this.form.controls) {\n                if (this.form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            return Promise.reject(on_error(`Some form fields are not valid: [${list.join(', ')}]`));\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = 'Checking space availability...';\n        const spaces = await this._calendars.availability({\n            system_ids: this.form.controls.resources.value?.map(s => s.id).join(','),\n            period_start: Math.floor(this.form.value.date / 1000),\n            period_end: Math.floor(this.form.value.date / 1000) + this.form.value.duration * 60,\n        }).catch((e) => {\n            on_error('Space is unavailble for the selected time and duration');\n            throw e;\n        });\n        if (spaces.length <= 0) {\n            return on_error('Space is unavailble for the selected time and duration');\n        }\n        this.loading = 'Creating booking...';\n        await this._events.save(new CalendarEvent(this.form.value)).catch((e) => {\n            on_error('Error creating booking.');\n            throw e;\n        });\n        notifySuccess(`Successfully created booking in ${this._data.space.display_name || this._data.space.name}`);\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Point, ViewAction, ViewerFeature, ViewerLabel, ViewerStyles } from '@yuion/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\nimport { BuildingLevel, OrganisationService } from '@user-interfaces/organisation';\nimport { SpacesService } from '@user-interfaces/spaces';\n\n\nexport interface MapOptions {\n    show_zones?: boolean;\n    show_devices?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({});\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([this._level, this._spaces.list]).pipe(\n        map((details) => details[1].filter((space) => space.zones.includes(details[0].id)))\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(map((lvl) => (lvl ? lvl.map_id : '') || ''));\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([this._features, this._options]).pipe(map(details => {\n        const [features, options] = details;\n        let list = [];\n        for (const key in features) {\n            if (key !== 'devices' || (options.show_zones && this._settings.get('app.explore.display_devices') !== false)) {\n                list = list.concat(features[key]);\n            }\n        }\n        return list;\n    }));\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = this._actions.pipe(map(i => Object.values(i).reduce((list, a) => list.concat(a), [])));\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([this._labels, this._options]).pipe(map(details => {\n        const [labels, options] = details;\n        let list = [];\n        for (const key in labels) {\n            if (key !== 'zones' || options.show_zones) {\n                list = list.concat(labels[key]);\n            }\n        }\n        return list;\n    }));\n    /** Current map styles */\n    public readonly map_styles = combineLatest([this._styles, this._options]).pipe(\n        map((details) => {\n            const [styles, options] = details;\n            const style_mappings = Object.keys(styles).reduce(\n                (a, h) => ({ ...a, ...styles[h] }),\n                {}\n            );\n            if (!options.show_zones) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            style_mappings['text'] = { display: 'none' };\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    constructor(private _org: OrganisationService, private _spaces: SpacesService, private _settings: SettingsService) {\n        super();\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n                    const level = this._level.getValue();\n                    const level_list = this._org.levelsForBuilding(bld);\n                    const has_level = level_list.find((lvl) => level?.id === lvl.id);\n                    if (!has_level && level_list.length) {\n                        this.setLevel(level_list[0].id);\n                    }\n                })\n            );\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) {\n            this._level.next(lvl);\n        }\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@yuion/svg-viewer';\n\nimport { BaseClass, HashMap, notifyError, SettingsService } from '@user-interfaces/common';\nimport { Space } from '@user-interfaces/spaces';\nimport { CalendarEvent } from '@user-interfaces/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#3949ab',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _spaces: Space[] = [];\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _bindings: any[] = [];\n    private _statuses: HashMap<string> = {};\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            this._state.spaces.subscribe((list) => {\n                this.clearBindings();\n                this._spaces = list;\n                this.bindToSpaces();\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.clearBindings();\n    }\n\n    public clearBindings() {\n        if (!this._spaces) return;\n        for (const space of this._spaces) {\n            this.unsub(`bookings-${space.id}`);\n            this.unsub(`status-${space.id}`);\n        }\n        this._bindings.forEach((b) => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToSpaces() {\n        if (!this._spaces) return;\n        for (const space of this._spaces) {\n            let binding = getModule(space.id, 'Bookings').binding('bookings');\n            this.subscription(\n                `bookings-${space.id}`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.handleBookingsChange(space, d))\n            );\n            binding.bind();\n            this._bindings.push(binding);\n            binding = getModule(space.id, 'Bookings').binding('status');\n            this.subscription(\n                `status-${space.id}`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.handleStatusChange(space, d))\n            );\n            binding.bind();\n            this._bindings.push(binding);\n        }\n        this.updateActions();\n        this.updateHoverElements();\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] === 'busy') {\n            return notifyError(`${space.display_name || space.name} is unavailable at the current time`);\n        }\n        this._dialog.open(ExploreBookingModalComponent, {\n            data: { space }\n        });\n    }\n\n    private handleBookingsChange(space: Space, bookings: HashMap[]) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout('update_hover_els', () => this.updateHoverElements(), 100);\n    }\n\n    private handleStatusChange(space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus();\n                this.updateHoverElements();\n            },\n            100\n        );\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours =\n            this._settings.get('app.explore.colors') || {};\n        for (const space of this._spaces) {\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${this._statuses[space.id]}`] ||\n                    colours[`${this._statuses[space.id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[space.id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements() {\n        const features: ViewerFeature[] = [];\n        for (const space of this._spaces) {\n            features.push({\n                location: space.map_id,\n                hover: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions() {\n        const actions: ViewAction[] = [];\n        for (const space of this._spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point } from '@yuion/svg-viewer';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\nimport {\n    BuildingLevel,\n    OrganisationService,\n} from '@user-interfaces/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { first } from 'rxjs/operators';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\n@Injectable()\nexport class ExploreZonesService extends BaseClass {\n    private _level: BuildingLevel = null;\n    private _bindings: any[] = [];\n    private _statuses: HashMap<string> = {};\n    private _labels: HashMap<ViewerLabel> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        const zone_metadata = await Promise.all(this._org.levels.map(bld => showMetadata(bld.id, { name: 'map_regions' }).toPromise()));\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (areas) {\n                for (const area of areas) {\n                    this._capacity[area.id] = area.properties?.capacity || 100;\n                    this._location[area.id] = area.properties?.label_location || { x: .5, y: .5 };\n                }\n            }\n        }\n        this.subscription(\n            'spaces',\n            this._state.level.subscribe((level) => {\n                this.clearBindings();\n                this._level = level;\n                this.bindToZones();\n            })\n        );\n    }\n\n    public clearBindings() {\n        if (!this._level) return;\n        this.unsub('zones');\n        this._bindings.forEach(b => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToZones() {\n        if (!this._level) return;\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this._level.parent_id\n        );\n        if (!building) return;\n        const system_id = this._org.organisation.bindings.area_management;\n        if (!system_id) return;\n        const binding = getModule(system_id, 'AreaManagement').binding(`${this._level.id}:areas`);\n        this.subscription(\n            `zones`,\n            binding.listen().subscribe((d) => this.parseData(d))\n        );\n        binding.bind();\n        this._bindings.push(binding);\n    }\n\n    public parseData(d) {\n        const value = d?.value || [];\n        const labels = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < .4 ? 'free' : filled < .75 ? 'pending' : 'busy';\n            this._labels[zone.area_id] = {\n                location: this._location[zone.area_id],\n                content: `${zone.count} ${zone.count === 1 ? 'Device' : 'Devices'}`\n            };\n            labels.push(this._labels[zone.area_id]);\n        }\n        this._state.setLabels('zones', labels);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours =\n            this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            if (!this._statuses.hasOwnProperty(zone_id)) continue;\n            style_map[`#${zone_id}`] = {\n                fill:\n                    colours[`zone-${this._statuses[zone_id]}`] ||\n                    colours[`${this._statuses[zone_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[zone_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('zones', style_map);\n    }\n}\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import { Component, ElementRef, HostListener, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n}\n\n@Component({\n    selector: 'explore-device-info',\n    template: `\n        <div\n            name=\"radius\"\n            (mouseenter)=\"loadUser()\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-4 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            name=\"dot\"\n            class=\"h-2 w-2 absolute center rounded-full pointer-events-auto\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            name=\"device-info\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow pointer-events-none ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <p><label>MAC:</label> {{ mac }}</p>\n                <p><label>Variance:</label> {{ variance }}</p>\n                <p><label>Last Seen:</label> {{ last_seen }}</p>\n                <p *ngIf=\"manufacturer\"><label>Manufacturer:</label> {{ manufacturer }}</p>\n                <p *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                <p *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                <p *ngIf=\"username\"><label>Username:</label> {{ username }}</p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.35);\n                background-color: #616161;\n            }\n\n            :host:hover > [name='device-info'],\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n\n            [name='device-info'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                width: 16rem;\n                z-index: 999;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance.toFixed(2);\n    /** Diameter of the radius circle */\n    public readonly diameter = this._details.variance * 100;\n    /** Background color for the dot */\n    public readonly bg_color = this.ssid === 'Blue' ? '#1976d2' : this.ssid === 'Green' ? '#689f38' : '#616161'\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow(new Date(this._details.last_seen * 1000), {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    @HostListener('mouseenter') public onEnter = () => this.loadUser();\n    @HostListener('click') public onClick = () => this.loadUser();\n    @HostListener('touchend') public onTouch = () => this.loadUser();\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public async loadUser() {\n        console.log('Loading user...', this.username);\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (mod) {\n            this.username = 'Loading...'\n            const details = await mod.execute('check_ownership_of', [this.mac]).catch(_ => null);\n            console.log('Details:', details);\n            this.username = details && details.assigned_to ? details.assigned_to : '';\n        }\n    }\n\n}\n","import distanceInWords from '../formatDistance/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\n\nexport interface SpaceInfoData {\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            name=\"space-info\"\n            [id]=\"map_id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 font-medium\">{{ map_id }}</h4>\n                <p class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                <p class=\"mt-1 text-sm\" *ngIf=\"start\">\n                    {{ start | date: 'shortTime' }} &ndash;\n                    {{ end | date: 'shortTime' }}\n                </p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport {\n    BuildingLevel,\n    OrganisationService,\n} from '@user-interfaces/organisation';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _level: BuildingLevel = null;\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _desks = new BehaviorSubject<string[]>([]);\n    private _reserved = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _bindings: any[] = [];\n    private _stats = new BehaviorSubject<DesksStats>({\n        free: 0,\n        occupied: 0,\n        total: 0,\n    });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            this._state.level.subscribe((level) => {\n                this.clearBindings();\n                this._level = level;\n                this.bindToDesks();\n            })\n        );\n        this.subscription(\n            'changes',\n            combineLatest([\n                this._desks,\n                this._in_use,\n                this._reserved,\n            ]).subscribe((details) => {\n                const [desks, in_use, reserved] = details;\n                this._statuses = {};\n                for (const id of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const is_reserved = reserved.some((i) => id === i);\n                    this._statuses[id] = !is_used\n                        ? 'free'\n                        : is_reserved\n                        ? 'reserved'\n                        : 'busy';\n                }\n                this.timeout('update', () => this.updateStatus(), 100);\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.clearBindings();\n    }\n\n    public clearBindings() {\n        const bindings = [\n            'desks_in_use',\n            'desk_list'\n        ];\n        for (const id of bindings) {\n            this.unsub(id);\n        }\n        this._bindings.forEach((b) => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToDesks() {\n        if (!this._level) return;\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this._level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        const system_id = this._org.building.bindings.area_management || this._org.organisation.bindings.area_management;\n        if (!system_id) {\n            return;\n        }\n        let binding = getModule(system_id, 'AreaManagement').binding(\n            this._level.id\n        );\n        this.subscription(\n            `desks_in_use`,\n            binding.listen().subscribe((d) => {\n                const devices = (d?.value || []).filter(\n                    (v) => v.location !== 'desk'\n                );\n                const desks = (d?.value || []).filter(\n                    (v) => v.location === 'desk'\n                );\n                this._in_use.next(desks.map((v) => v.map_id));\n                this._reserved.next(\n                    desks.filter((v) => !v.at_location).map((v) => v.map_id)\n                );\n                this.processDevices(devices, system_id);\n                // this.processDesks(desks);\n            })\n        );\n        binding.bind();\n        this._bindings.push(binding);\n        binding = getModule(system_id, 'AreaManagement').binding(\n            `${this._level.id}:desk_ids`\n        );\n        this.subscription(\n            `desks_list`,\n            binding.listen().subscribe((d) => this._desks.next(d || []))\n        );\n        binding.bind();\n        this._bindings.push(binding);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours =\n            this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses.hasOwnProperty(desk_id)) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                data: { ...device, system: system_id }\n            });\n        }\n        list.sort((a, b) => {\n            const dist_a = 1 - Math.sqrt(Math.pow(a.x - .5, 2) + Math.pow(a.x - .5, 2));\n            const dist_b = 1 - Math.sqrt(Math.pow(b.x - .5, 2) + Math.pow(b.x - .5, 2));\n            return dist_a - dist_b;\n        });\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        for (const desk of desks) {\n            list.push({\n                location: desk.map_id,\n                content: ExploreDeskInfoComponent,\n                hover: true,\n                data: { map_id: desk.name, status: this._statuses[desk.map_id] }\n            });\n        }\n        this._state.setFeatures('desks', list);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon className=\"material-icons\">add</app-icon>\n        </button>\n        <button mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon className=\"material-icons\">remove</app-icon>\n        </button>\n        <button mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon className=\"material-icons\">autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: .5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () => this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2\">\n            <mat-form-field\n                overlay\n                class=\"flex-1\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                class=\"flex-1\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 0.5rem;\n            }\n\n            mat-form-field {\n                min-width: 10rem;\n            }\n\n            mat-form-field[has-bld=\"true\"] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent {\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService\n    ) {}\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Component, OnInit } from '@angular/core';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { BaseClass } from '@user-interfaces/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Space, SpacesService } from '@user-interfaces/spaces';\nimport { MapLocation, StaffService, User } from '@user-interfaces/users';\nimport { first } from 'rxjs/operators';\nimport { MapPinComponent, MapRadiusComponent } from '@user-interfaces/components';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async).zoom\"\n            [center]=\"(positions | async).center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-0 right-0\"\n        ></explore-zoom-controls>\n        <explore-map-controls\n            class=\"absolute top-0 left-0\"\n        ></explore-map-controls>\n        <!-- <explore-search class=\"absolute top-0 right-0\"></explore-search> -->\n        <div\n            name=\"zones\"\n            class=\"p-2 bg-white border border-gray-400 absolute left-0 m-2 rounded flex items-center\"\n        >\n            Zones\n            <mat-slide-toggle\n                class=\"ml-2\"\n                [ngModel]=\"(options | async)?.show_zones\"\n                (ngModelChange)=\"setOptions({ show_zones: $event })\"\n            ></mat-slide-toggle>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [name='zones'] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService, ExploreDesksService, ExploreZonesService],\n})\nexport class ExploreMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _route: ActivatedRoute,\n        private _spaces: SpacesService,\n        private _users: StaffService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                if (params.has('space')) {\n                    const space = this._spaces.find(params.get('space'));\n                    if (!space) return;\n                    this.locateSpace(space);\n                } else if (params.has('user')) {\n                    const user = await this._users.show(params.get('user'));\n                    if (!user) return;\n                    this.locateUser(user);\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private locateSpace(space: Space) {\n        this._state.setLevel(this._org.levelWithID(space.zones).id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    private async locateUser(user: User) {\n        const locate_details: any = this._org.organisation.bindings\n            .location_services;\n        if (!locate_details) return;\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [user.email, user.id])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        this._state.setLevel(this._org.levelWithID([locations[0].level]).id);\n        const feature: any = {\n            location: locations[0].position,\n            content: locations[0].type === 'wireless' ? MapRadiusComponent : MapPinComponent,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","<div class=\"footer-legend\">\n    <div class=\"tag\" (click)=\"show = !show\">\n        <button mat-button class=\"content\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_up' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"header\">\n        <div class=\"text\">Keys</div>\n    </div>\n    <div class=\"colour-legend\">\n        <div class=\"colour\" *ngFor=\"let item of colours\" [class.dark]=\"item.dark\" [style.background-color]=\"item.colour\">\n            {{ item.name }}\n        </div>\n    </div>\n    <div class=\"icon-legend\" [class.show]=\"show\">\n        <div class=\"icon\" *ngFor=\"let item of icon_list\">\n            <app-icon [icon]=\"item.icon\"></app-icon>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@user-interfaces/common';\n\n@Component({\n  selector: 'a-footer-legend',\n  templateUrl: './footer-legend.component.html',\n  styleUrls: ['./footer-legend.component.scss']\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        { id: 'not-bookable', name: 'Not Bookable', colour: '#7D7D7D', dark: true },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' }\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        { id: '', name: 'Lifts Up/Down', icon: { type: 'img', src: 'assets/img/lift.svg' } },\n        { id: '', name: 'Fire Extinguisher', icon: { type: 'img', src: 'assets/img/fireExt.svg' } },\n        { id: '', name: 'First Aid & AED', icon: { type: 'img', src: 'assets/img/aid.svg' } },\n        { id: '', name: 'Cafe/Service', icon: { type: 'img', src: 'assets/img/Cafe.svg' } },\n        { id: '', name: 'Mail/Noticeboard', icon: { type: 'img', src: 'assets/img/mail.svg' } },\n        { id: '', name: 'Restrooms M/F', icon: { type: 'img', src: 'assets/img/Restrooms.svg' } },\n        { id: '', name: 'Map Kiosk', icon: { type: 'img', src: 'assets/img/kiosk.svg' } },\n        { id: '', name: 'Screen', icon: { type: 'img', src: 'assets/img/Screen.svg' } },\n        { id: '', name: 'Projector', icon: { type: 'img', src: 'assets/img/Projector.svg' } },\n        { id: '', name: 'Showers', icon: { type: 'img', src: 'assets/img/shower.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair2.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table1.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table3.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table4.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table5.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table6.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table7.svg' } },\n        { id: '', name: 'Funzone Games', icon: { type: 'img', src: 'assets/img/Tennis.svg' } },\n        { id: '', name: 'Concierge Pods', icon: { type: 'img', src: 'assets/img/Pod.svg' } },\n        { id: '', name: 'Phone Booths', icon: { type: 'img', src: 'assets/img/booth.svg' } }\n    ];\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseClass, log, SettingsService } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends BaseClass implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        }\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            bld => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Reset the timeout for refreshing the kiosk view\n     */\n    public resetRefresh() {\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public refreshKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        this._dialog.closeAll();\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        } else {\n            this._router.navigate(['/explore', 'none'], { queryParams: { level } });\n        }\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', new Date().getTime());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@user-interfaces/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from '../ui/shared.module';\nimport { FooterLegendComponent } from './footer-legend/footer-legend.component';\nimport { FiltersComponent } from './filters/filters.component';\nimport { ComponentsModule } from '@user-interfaces/components';\nimport { SharedExploreModule } from '@user-interfaces/explore';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        FooterLegendComponent,\n        FiltersComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ComponentsModule,\n        FormsModule,\n        SharedExploreModule\n    ],\n    entryComponents: [\n        FiltersComponent\n    ]\n})\nexport class AppExploreModule {}\n"],"sourceRoot":"webpack:///"}