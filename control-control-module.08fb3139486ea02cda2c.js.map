{"version":3,"sources":["./src/app/bookings/space-flow/space-flow.service.ts","./src/app/control/list-item.component.ts","./src/app/control/space-list.component.ts","./src/app/control/control.component.ts","./src/app/control/control.module.ts"],"names":["clearEventFormState","sessionStorage","removeItem","localStorage","SpaceFlowService","_calendar","_org","_dialog","super","_event","_form","_filters","_loading_spaces","_loading_event","event","this","asObservable","form","filters","loading_spaces","loading_event","spaces","pipe","next","getValue","value","period_start","Math","floor","Date","date","valueOf","period_end","duration","zones","length","building","id","freeBusy","zone_ids","join","toPromise","then","list","filter","space","capacity","clearState","setEvent","nearestTo","controls","subscription","storeState","name","setValue","ref","open","width","height","data","componentInstance","_","reason","subscribe","attendees","push","metadata","close","setItem","JSON","stringify","toJSON","event_data","getItem","parse","form_data","patchValue","filter_data","markAllAsTouched","organiser","host","email","title","valid","key","invalid","Promise","reject","values","ControlSpaceListItemComponent","_settings","get","level","bld","buildings","find","parent_id","display_name","ControlSpaceListComponent","_spaces","space_list","initialised","first","support_url","sort","a","b","bld_a","space_a_name","toLowerCase","level_a_name","bld_a_name","bld_b","space_b_name","level_b_name","bld_b_name","localeCompare","search","search_str","space_name","level_name","bld_name","indexOf","ControlComponent","ROUTES","path","component","ControlModule","forChild"],"mappings":"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","file":"control-control-module.08fb3139486ea02cda2c.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { first, shareReplay, switchMap } from 'rxjs/operators';\nimport { addMinutes, roundToNearestMinutes, isAfter, endOfDay } from 'date-fns';\n\nimport { BaseClass, currentUser, notifyError, unique } from '@user-interfaces/common';\nimport {\n    CalendarEvent,\n    generateEventForm,\n    saveEvent,\n} from '@user-interfaces/events';\nimport { CalendarService } from '@user-interfaces/calendar';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { NewUserModalComponent } from '@user-interfaces/users';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface EventFormFilters {\n    capacity?: number;\n    zones?: string[];\n}\n\nexport function clearEventFormState(): void {\n    sessionStorage.removeItem('PLACEOS.event');\n    sessionStorage.removeItem('PLACEOS.event_form');\n    localStorage.removeItem('PLACEOS.event_filters');\n}\n\n@Injectable()\nexport class SpaceFlowService extends BaseClass {\n    /** Active event being worked on */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    /** Form fields for the current flow */\n    private _form = new BehaviorSubject<FormGroup>(null);\n    /** Form fields for the current flow */\n    private _filters = new BehaviorSubject<EventFormFilters>({});\n    /** Whether space listing is being retrieved */\n    private _loading_spaces = new BehaviorSubject<boolean>(false);\n    /** Whether changes to event are being saved */\n    private _loading_event = new BehaviorSubject<boolean>(false);\n\n    public readonly event = this._event.asObservable();\n    public readonly form = this._form.asObservable();\n    public get event_form() {\n        return this._form.getValue();\n    }\n    public readonly filters = this._filters.asObservable();\n    public readonly loading_spaces = this._loading_spaces.asObservable();\n    public readonly loading_event = this._loading_event.asObservable();\n    public get event_filters() {\n        return this._filters.getValue();\n    }\n    public readonly spaces = this._filters.pipe(\n        switchMap((filters) => {\n            this._loading_spaces.next(true);\n            const form = this._form.getValue().value;\n            const period_start = Math.floor(\n                new Date(form.date).valueOf() / 1000\n            );\n            const period_end = Math.floor(\n                addMinutes(new Date(form.date), form.duration || 60).valueOf() /\n                    1000\n            );\n            const zones = filters?.zones?.length\n                ? filters.zones\n                : [this._org.building?.id];\n            return this._calendar\n                .freeBusy({\n                    zone_ids: zones.join(','),\n                    period_start,\n                    period_end,\n                }).toPromise()\n                .then((list) => {\n                    this._loading_spaces.next(false);\n                    return list.filter(\n                        (space) =>\n                            !filters.capacity ||\n                            filters.capacity >= space.capacity\n                    );\n                });\n        }),\n        shareReplay()\n    );\n\n    public get is_future_date() {\n        const date = this._form.getValue()?.controls?.date.value || new Date().valueOf();\n        return isAfter(new Date(date), endOfDay(new Date()));\n    }\n\n    public readonly clearState = () => clearEventFormState();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.setEvent(\n            new CalendarEvent({\n                date: roundToNearestMinutes(addMinutes(new Date(), 2), {\n                    nearestTo: 5,\n                }).valueOf(),\n            })\n        );\n    }\n\n    /** Set the event being worked on */\n    public setEvent(event: CalendarEvent): void {\n        this._event.next(event);\n        const form = generateEventForm(event);\n        this._form.next(form);\n        this.subscription('form_change', () => this.storeState());\n    }\n\n    /** Set the value of the form control */\n    public setValue<T = any>(name: string, value: T): void {\n        const form = this._form.getValue();\n        if (form && form.controls[name]) {\n            form.controls[name].setValue(value);\n        }\n    }\n\n    public newAttendee() {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: {},\n            }\n        );\n        const form = this._form.getValue();\n        ref.componentInstance.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                const attendees = form.controls.attendees.value || [];\n                attendees.push(event.metadata);\n                form.controls.attendees.setValue(unique(attendees, 'email'));\n                ref.close();\n            });\n    }\n\n    /** Reset the form fields for the active event */\n    public clearForm(): void {\n        this.setEvent(this._event.getValue());\n        this._filters.next({});\n    }\n\n    /** Update the current form filters */\n    public updateFilters(filters: EventFormFilters) {\n        this._filters.next(filters);\n    }\n\n    /** Store current event details and form values */\n    public storeState(): void {\n        const form = this._form.getValue();\n        sessionStorage.setItem(\n            'PLACEOS.event',\n            JSON.stringify(this._event.getValue().toJSON())\n        );\n        sessionStorage.setItem('PLACEOS.event_form', JSON.stringify(form.value));\n        localStorage.setItem(\n            'PLACEOS.event_filters',\n            JSON.stringify(this._filters.getValue())\n        );\n    }\n\n    /** Load old event details and form values */\n    public loadState(): void {\n        const event_data = sessionStorage.getItem('PLACEOS.event') || '{}';\n        if (event_data) {\n            this._event.next(new CalendarEvent(JSON.parse(event_data)));\n        }\n        const form_data = sessionStorage.getItem('PLACEOS.event_form');\n        if (form_data) {\n            const form = generateEventForm(this._event.getValue());\n            form.patchValue(JSON.parse(form_data));\n            this._form.next(form);\n        }\n        const filter_data = localStorage.getItem('PLACEOS.event_filters');\n        if (filter_data) {\n            this._filters.next(JSON.parse(filter_data));\n        }\n    }\n\n    /** Save changes to event to the server */\n    public save(): Promise<void> {\n        const form = this._form.getValue();\n        form.markAllAsTouched();\n        if (!form.controls.organiser.value || !form.controls.host.value)\n            form.patchValue({\n                organiser: currentUser(),\n                host: currentUser().email,\n            });\n        if (!form.controls.title.value) {\n            form.patchValue({\n                title: currentUser().email\n            });\n        }\n        if (!form.valid) {\n            const list = [];\n            for (const key in form.controls) {\n                if (form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            return Promise.reject(\n                notifyError(\n                    `Some form fields are not valid: [${list.join(', ')}]`\n                )\n            );\n        }\n        this._loading_event.next(true);\n        const values = new CalendarEvent({\n            ...this._event.getValue(),\n            ...this._form.getValue().value,\n        });\n        return saveEvent(values).toPromise().then(\n            () => this._loading_event.next(false),\n            () => this._loading_event.next(false)\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { SettingsService } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { Space } from '@user-interfaces/spaces';\n\n@Component({\n    selector: 'a-control-space-list-item',\n    template: `\n        <div\n            class=\"flex flex-wrap items-center sm:space-x-4 bg-white hover:bg-gray-100 overflow-hidden p-2 pl-4 mb-2\"\n            *ngIf=\"space\"\n            [class.with-image]=\"show_image\"\n        >\n            <div class=\"flex flex-col flex-1\">\n                <div class=\"text-xl\">{{ space.name }}</div>\n                <div class=\"flex items-center w-full text-sm\">\n                    <div class=\"flex-1\">{{ location }}</div>\n                    <div class=\"flex items-center text-lg\">\n                        <app-icon>account_circle</app-icon>\n                        {{ space.capacity || '0' }}\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"flex w-full sm:w-auto sm:flex-col items-center space-x-2 sm:space-x-0 sm:space-y-2 mt-4 sm:mt-0\"\n            >\n                <a\n                    mat-button\n                    button\n                    class=\"w-32 flex-1 sm:flex-none\"\n                    [href]=\"space.support_url | safe: 'url'\"\n                >\n                    Control\n                </a>\n                <a\n                    mat-button\n                    button\n                    class=\"w-32 flex-1 sm:flex-none inverse\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ space: space.id }\"\n                >\n                    Find\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ControlSpaceListItemComponent {\n    /** Space to display */\n    @Input() public space: Space;\n\n    public get show_image() {\n        return this._settings.get('app.space_display.show_images');\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find(\n            (building) => building.id === level.parent_id\n        );\n        return `${bld ? (bld.display_name || bld.name) + ', ' : ''}${\n            level.display_name || level.name\n        }`;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { Space, SpacesService } from '@user-interfaces/spaces';\n\n@Component({\n    selector: 'a-control-space-list',\n    template: `\n        <div class=\"w-full flex items-center justify-center p-2\">\n            <a-searchbar\n                [(value)]=\"search_str\"\n                [loading]=\"loading\"\n                [autofocus]=\"true\"\n            ></a-searchbar>\n        </div>\n        <div\n            class=\"flex flex-col flex-1 overflow-auto w-full\"\n            *ngIf=\"filtered_list.length; else empty_state\"\n        >\n            <a-control-space-list-item\n                *ngFor=\"let space of filtered_list\"\n                [space]=\"space\"\n            ></a-control-space-list-item>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <app-icon>close</app-icon>\n                <p>\n                    {{\n                        search_str\n                            ? ' No matches for \"' + search_str + '\"'\n                            : 'No controllable spaces'\n                    }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ControlSpaceListComponent extends BaseClass implements OnInit {\n    /** List of controllable spaces */\n    public space_list: Space[] = [];\n    /** Filter string */\n    public search_str: string;\n    /** Whether space list is being filtered */\n    public loading: boolean;\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.space_list = this._spaces.filter(\n                (space) => !!space.support_url\n            );\n            this.space_list.sort((a, b) => {\n                const bld_a = this._org.buildings.find(\n                    (building) => building.id === a.level.parent_id\n                );\n                const space_a_name = (a.name || '').toLowerCase();\n                const level_a_name = (\n                    (a.level ? a.level.name : '') || ''\n                ).toLowerCase();\n                const bld_a_name = (\n                    (bld_a ? bld_a.name : '') || ''\n                ).toLowerCase();\n                const bld_b = this._org.buildings.find(\n                    (building) => building.id === b.level.parent_id\n                );\n                const space_b_name = (b.name || '').toLowerCase();\n                const level_b_name = (\n                    (b.level ? b.level.name : '') || ''\n                ).toLowerCase();\n                const bld_b_name = (\n                    (bld_b ? bld_b.name : '') || ''\n                ).toLowerCase();\n                return (\n                    bld_a_name.localeCompare(bld_b_name) ||\n                    level_a_name.localeCompare(level_b_name) ||\n                    space_a_name.localeCompare(space_b_name)\n                );\n            });\n        });\n    }\n\n    /** List of spaces filtered using the search string */\n    public get filtered_list(): Space[] {\n        const search = (this.search_str || '').toLowerCase();\n        return (this.space_list || []).filter((space) => {\n            const bld = this._org.buildings.find(\n                (building) => building.id === space.level.parent_id\n            );\n            const space_name = (space.name || '').toLowerCase();\n            const level_name = (\n                (space.level ? space.level.name : '') || ''\n            ).toLowerCase();\n            const bld_name = ((bld ? bld.name : '') || '').toLowerCase();\n            return (\n                space_name.indexOf(search) >= 0 ||\n                (level_name && level_name.indexOf(search) >= 0) ||\n                (bld_name && bld_name.indexOf(search) >= 0)\n            );\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseClass, SettingsService } from '@user-interfaces/common';\nimport { clearEventFormState } from '../bookings/space-flow/space-flow.service';\n\n@Component({\n    selector: 'app-control',\n    template: `\n        <a-topbar-header class=\"w-full\" [(menu)]=\"show_menu\"></a-topbar-header>\n        <main class=\"flex-1 h-1/2 w-full\">\n            <a-control-space-list></a-control-space-list>\n        </main>\n        <a-footer-menu></a-footer-menu>\n        <a-overlay-menu class=\"w-full\" [(show)]=\"show_menu\"></a-overlay-menu>\n    `,\n    styles: [`\n        :host {\n            display: flex;\n            flex-direction: column;\n            height: 100%;\n            width: 100%;\n        }\n    `],\n})\nexport class ControlComponent extends BaseClass implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Control';\n        clearEventFormState();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { ControlComponent } from './control.component';\nimport { SharedContentModule } from '../ui/shared.module';\nimport { ControlSpaceListComponent } from './space-list.component';\nimport { ControlSpaceListItemComponent } from './list-item.component';\n\nconst ROUTES: Route[] = [{ path: '', component: ControlComponent }];\n\n@NgModule({\n    declarations: [\n        ControlComponent,\n        ControlSpaceListComponent,\n        ControlSpaceListItemComponent,\n    ],\n    imports: [CommonModule, RouterModule.forChild(ROUTES), SharedContentModule],\n})\nexport class ControlModule {}\n"],"sourceRoot":"webpack:///"}