{"version":3,"file":"apps_concierge_src_app_poi-manager_poi-manager_module_ts.js","mappings":"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","names":["MapShowElementComponent","constructor","_data","this","hover","static","t","i0","MAP_FEATURE_DATA","core","VBU","selectors","decls","vars","consts","template","rf","ctx","lvl_r2","display_name","name","ctx_r2","page","tmp_2_0","search_results","length","poi_r5","location","_r4","$implicit","selected","next","id","hovered","SelectPOIMapModalComponent_ng_container_26_button_1_div_4_Template","value","SelectPOIMapModalComponent_ng_container_26_button_1_Template","_r6","last_page","SelectPOIMapModalComponent","AsyncHandler","poiItemFromMapsIndoorsItem","item","properties","externalId","roomId","building","floorName","area","Math","abs","geometry","bbox","_org","_maps_people","super","level","BuildingLevel","map_info","BehaviorSubject","search","changed","level_list","active_levels","actions","action","callback","e","p","selectID","features","combineLatest","pipe","map","s_id","h_id","unique","content","full_size","no_scale","data","filter","_","available$","debounceTime","switchMap","q","available","console","log","mapsindoors","services","LocationsService","getLocations","then","l","list","i","selected_item","unshift","of","Object","entries","w","h","toLowerCase","includes","sort","a","b","tap","floor","shareReplay","setMapInfo","info","ngOnInit","_this","_asyncToGenerator","levels","take","toPromise","level_id","find","onChange","Date","now","_this2","timeout","pos","short_list","x","y","push","MAT_DIALOG_DATA","i1","i2","i18n_0","$localize","$event","_r1","SelectPOIMapModalComponent_mat_option_14_Template","SelectPOIMapModalComponent_span_25_Template","SelectPOIMapModalComponent_ng_container_26_Template","SelectPOIMapModalComponent_div_28_Template","SelectPOIMapModalComponent_ng_template_29_Template","map_id","_c0","tmp_9_0","tmp_11_0","empty_state_r7","bld_r4","_r2","POIModalComponent_main_4_form_1_div_2_mat_option_6_Template","building_list","level_r5","POIModalComponent_main_4_form_1_div_4_mat_option_6_Template","selectPOIfromMap","_r7","form","patchValue","POIModalComponent_main_4_form_1_div_1_Template","POIModalComponent_main_4_form_1_div_2_Template","POIModalComponent_main_4_form_1_div_4_Template","location_type","POIModalComponent_main_4_form_1_div_15_Template","POIModalComponent_main_4_form_1_div_16_Template","controls","tmp_5_0","POIModalComponent_main_4_form_1_Template","_r8","save","POIModalComponent","_dialog_ref","_settings","_dialog","loading","Array","FormGroup","FormControl","Validators","required","ref","open","getRawValue","afterClosed","subscribe","d","componentInstance","valid","notifyError","getInvalidFields","join","randomString","short_link_id","path","get","public_key","uri","updateShortURL","description","window","origin","encodeURIComponent","createShortURL","metadata","showMetadata","organisation","details","lvl","localeCompare","resp","updateMetadata","catch","close","i3","POIModalComponent_button_3_Template","POIModalComponent_main_4_Template","POIModalComponent_footer_5_Template","POIModalComponent_ng_template_6_Template","load_state_r9","POIManagementService","_options","_change","options","asObservable","_features","active_building","catchError","mapping","levelsForBuilding","flatten","filtered_features","setFilters","getValue","setSearchString","editPointOfInterest","poi","removePointOfInterest","openConfirmModal","title","icon","confirm_text","reason","old_metadata","notifySuccess","jDH","factory","ɵfac","providedIn","tmp_4_0","row_r1","_r5","ctx_r3","print","row_r3","qr_link","qr_code","row","loadQrCode","loadPublicQrCode","POIListComponent_ng_template_5_ng_template_9_Template","edit","remove","qr_menu_r6","menu_r7","POIListComponent","kiosk_url","_manager","region","link","generateQRCode","split","POIListComponent_ng_template_3_Template","POIListComponent_ng_template_5_Template","_c4","_c1","level_template_r8","_c2","_c3","action_template_r9","bld_r3","ctx_r1","POIManagerComponent_div_10_mat_option_3_Template","buildings","POIManagerComponent","bld","use_region","_state","new","active_buildings","attrs","POIManagerComponent_div_10_Template","tmp_0_0","tmp_1_0","ROUTES","component","POIManagerModule","$C","G2t","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","RouterModule","forChild","MapLocation","type","position","asset_id","map_width","map_height","variance","last_seen","getUnixTime","at_location","coordinates_from"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/poi-manager/map-show-element.component.ts","./apps/concierge/src/app/poi-manager/select-poi-map-modal.component.ts","./apps/concierge/src/app/poi-manager/poi-modal.component.ts","./apps/concierge/src/app/poi-manager/poi-management.service.ts","./apps/concierge/src/app/poi-manager/poi-list.component.ts","./apps/concierge/src/app/poi-manager/poi-manager.component.ts","./apps/concierge/src/app/poi-manager/poi-manager.module.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'map-show-element',\n    template: `\n        <div\n            class=\"relative w-full h-full border-4\"\n            [class.border-warning]=\"hover\"\n            [class.border-success]=\"!hover\"\n        >\n            <div\n                class=\"opacity-40 absolute inset-0\"\n                [class.bg-warning]=\"hover\"\n                [class.bg-success]=\"!hover\"\n            ></div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MapShowElementComponent {\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: { hover: boolean }) {}\n\n    public get hover() {\n        return !!this._data?.hover;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, MapsPeopleService, unique } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { Rect } from '@placeos/svg-viewer/dist/types';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { MapShowElementComponent } from './map-show-element.component';\nimport { PointOfInterest } from './poi-management.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ntype BoundsMap = Record<string, Rect>;\n\ndeclare let mapsindoors: any;\n\n@Component({\n    selector: 'select-poi-map-modal',\n    template: `\n        <header>\n            <h2>Select Point of Interest from Map</h2>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex min-w-[80vw] max-w-[calc(100vw-2rem)] sm:max-w-[64rem] max-h-[75vh] h-[75vh] overflow-hidden\"\n        >\n            <div map class=\"relative h-full flex-1 w-1/2 bg-base-200\">\n                <interactive-map\n                    [src]=\"level?.map_id\"\n                    [actions]=\"actions\"\n                    [features]=\"features | async\"\n                    [options]=\"{ controls: true }\"\n                    [focus]=\"selected.value\"\n                    (mapInfo)=\"setMapInfo($event)\"\n                ></interactive-map>\n            </div>\n            <div\n                poi-list\n                class=\"relative flex flex-col h-full w-[20rem] border-l border-base-300 shadow\"\n            >\n                <div search class=\"flex flex-col border-b border-base-200 p-2\">\n                    <mat-form-field\n                        class=\"w-full no-subscript mb-2\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            name=\"level\"\n                            [(ngModel)]=\"level\"\n                            (ngModelChange)=\"onChange()\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of level_list | async\"\n                                [value]=\"lvl\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        class=\"w-full no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"search\"\n                            placeholder=\"Search\"\n                            [ngModel]=\"search | async\"\n                            (ngModelChange)=\"search.next($event)\"\n                            i18n-placeholder=\"@@searchPlaceholder\"\n                        />\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                    </mat-form-field>\n                </div>\n                <div\n                    list\n                    class=\"flex flex-col flex-1 h-1/2 overflow-auto space-y-2 px-2\"\n                >\n                    <div class=\"sticky top-0 w-full bg-base-100 px-1 py-3 z-10\">\n                        Results ({{ (search_results | async)?.length || 0 }})\n                        <span *ngIf=\"last_page\">\n                            {{ page * 100 + 1 }} -\n                            {{\n                                (search_results | async)?.length >\n                                page * 100 + 100\n                                    ? page * 100 + 100\n                                    : (search_results | async)?.length\n                            }}\n                        </span>\n                    </div>\n                    <ng-container\n                        *ngIf=\"\n                            (search_results | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            *ngFor=\"\n                                let poi of search_results\n                                    | async\n                                    | slice: page * 100:page * 100 + 100\n                            \"\n                            class=\"clear flex items-center text-left w-full hover:bg-base-200 rounded\"\n                            [class.!bg-primary]=\"poi.id === selected.value\"\n                            [class.!text-primary-content]=\"\n                                poi.id === selected.value\n                            \"\n                            (click)=\"selected.next(poi.id)\"\n                            (mouseover)=\"hovered.next(poi.id)\"\n                        >\n                            <div class=\"flex flex-col w-full\">\n                                <div class=\"\">{{ poi.name || poi.id }}</div>\n                                <div\n                                    class=\"text-xs opacity-30\"\n                                    *ngIf=\"poi.location\"\n                                >\n                                    {{ poi.location }}\n                                </div>\n                            </div>\n                        </button>\n                    </ng-container>\n                    <div\n                        pagination\n                        *ngIf=\"last_page > 0\"\n                        class=\"sticky flex items-center justify-center bottom-0 w-full bg-base-100 p-2 z-10 space-x-1\"\n                    >\n                        <button\n                            icon\n                            matRipple\n                            class=\"border border-base-200 rounded\"\n                            [disabled]=\"page === 0\"\n                            (click)=\"page = page - 1\"\n                        >\n                            <app-icon>chevron_left</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [class.!bg-secondary]=\"page === 0\"\n                            [class.text-secondary-content]=\"page === 0\"\n                            [class.!rounded-full]=\"page === 0\"\n                            (click)=\"page = 0\"\n                        >\n                            1\n                        </button>\n                        <button icon [class.opacity-0]=\"page < 2\">\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"!bg-secondary text-secondary-content\"\n                            [class.opacity-0]=\"page == 0 || page == last_page\"\n                        >\n                            {{ page + 1 }}\n                        </button>\n                        <button icon [class.opacity-0]=\"page > last_page - 2\">\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"border border-base-200 rounded\"\n                            [class.!bg-secondary]=\"page === last_page\"\n                            [class.text-secondary-content]=\"page === last_page\"\n                            [class.!rounded-full]=\"page === last_page\"\n                            (click)=\"page = last_page\"\n                        >\n                            {{ last_page + 1 }}\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"border border-base-200 rounded\"\n                            [disabled]=\"page === last_page\"\n                            (click)=\"page = page + 1\"\n                        >\n                            <app-icon>chevron_right</app-icon>\n                        </button>\n                    </div>\n                    <ng-template #empty_state>\n                        <div\n                            class=\"flex flex-col items-center justify-center h-full flex-1 space-y-4\"\n                        >\n                            <img\n                                src=\"assets/icons/no-results.svg\"\n                                class=\"w-36\"\n                            />\n                            <div class=\"text-center opacity-30\">\n                                No results found\n                            </div>\n                        </div>\n                    </ng-template>\n                </div>\n                <div actions class=\"p-2 border-t border-base-200\">\n                    <button\n                        btn\n                        matRipple\n                        [disabled]=\"!selected.value\"\n                        class=\"w-full\"\n                        [mat-dialog-close]=\"selected.value\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </div>\n        </main>\n    `,\n    styles: [``],\n})\nexport class SelectPOIMapModalComponent extends AsyncHandler {\n    public selected_item: any;\n    public level: BuildingLevel = new BuildingLevel();\n    public map_info: BoundsMap = {};\n    public page = 0;\n    public last_page = 0;\n    public readonly selected = new BehaviorSubject<string>('');\n    public readonly hovered = new BehaviorSubject<string>('');\n    public readonly search = new BehaviorSubject('');\n    public readonly changed = new BehaviorSubject(0);\n    public readonly level_list = this._org.active_levels;\n    public readonly actions = [\n        { id: '*', action: 'click', callback: (e, p) => this.selectID(p || e) },\n    ];\n    public readonly features = combineLatest([\n        this.selected,\n        this.hovered,\n    ]).pipe(\n        map(([s_id, h_id]) =>\n            unique(\n                [\n                    {\n                        location: s_id,\n                        content: MapShowElementComponent,\n                        full_size: true,\n                        no_scale: true,\n                    },\n                    {\n                        location: h_id,\n                        content: MapShowElementComponent,\n                        data: { hover: true },\n                        full_size: true,\n                        no_scale: true,\n                    },\n                ].filter((_) => _.location),\n                'location'\n            )\n        )\n    );\n\n    public poiItemFromMapsIndoorsItem(item: any) {\n        return {\n            id: item.properties.externalId || item.properties.roomId || item.id,\n            name: item.properties.name,\n            location: item.properties.building\n                ? `${item.properties.building}, Level ${item.properties.floorName}`\n                : '',\n            area:\n                Math.abs(item.geometry.bbox[0] - item.geometry.bbox[2]) *\n                Math.abs(item.geometry.bbox[1] - item.geometry.bbox[3]),\n        };\n    }\n\n    public readonly search_results = combineLatest([\n        this.search,\n        this._maps_people.available$,\n        this.changed,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([q, available]) => {\n            console.log('Search:', q, available);\n            return available\n                ? q.length > 2\n                    ? mapsindoors?.services.LocationsService.getLocations({\n                          q,\n                      }).then((l) => {\n                          const list = l.map((i) =>\n                              this.poiItemFromMapsIndoorsItem(i)\n                          );\n                          if (this.selected_item) {\n                              list.unshift(\n                                  this.poiItemFromMapsIndoorsItem(\n                                      this.selected_item\n                                  )\n                              );\n                          }\n                          return list;\n                      })\n                    : of(\n                          this.selected_item\n                              ? [\n                                    this.poiItemFromMapsIndoorsItem(\n                                        this.selected_item\n                                    ),\n                                ]\n                              : []\n                      )\n                : of(\n                      Object.entries(this.map_info)\n                          .map(([id, bbox]) => ({\n                              id,\n                              area: bbox.w * bbox.h,\n                          }))\n                          .filter(\n                              ({ id, area }) =>\n                                  id.toLowerCase().includes(q.toLowerCase()) &&\n                                  area < 0.5\n                          )\n                          .sort((a, b) => b.area - a.area)\n                  );\n        }),\n        tap((l: any[]) => {\n            this.page = 0;\n            this.last_page = Math.floor(l.length / 100);\n        }),\n        shareReplay(1)\n    );\n\n    public readonly setMapInfo = (info: BoundsMap) => (this.map_info = info);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PointOfInterest,\n        private _org: OrganisationService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.log('Data:', this._data);\n        if (this._data?.location && typeof this._data.location === 'string') {\n            this.selected.next(this._data.location as string);\n        }\n        const levels = await this.level_list.pipe(take(1)).toPromise();\n        if (levels.length) {\n            let level = levels[0];\n            if (this._data?.level_id) {\n                level =\n                    levels.find((_) => _.id === this._data.level_id) || level;\n            }\n            this.level = level;\n        }\n    }\n\n    public onChange() {\n        this.changed.next(Date.now());\n    }\n\n    public selectID(e: any) {\n        this.timeout('select_id', async () => {\n            const use_maps_indoors = await this._maps_people.available$\n                .pipe(take(1))\n                .toPromise();\n            if (!use_maps_indoors) {\n                const pos: { x: number; y: number } = e;\n                const short_list: [string, number][] = [];\n                for (const [id, bbox] of Object.entries(this.map_info)) {\n                    if (\n                        bbox.x <= pos.x &&\n                        pos.x <= bbox.x + bbox.w &&\n                        bbox.y <= pos.y &&\n                        pos.y <= bbox.y + bbox.h\n                    ) {\n                        short_list.push([id, bbox.h * bbox.w]);\n                    }\n                }\n                short_list.sort((a, b) => a[1] - b[1]);\n                short_list.filter(([_, a]) => a <= 0.5);\n                if (short_list.length) {\n                    console.log('Selected ID:', short_list[0][0]);\n                    this.selected.next(short_list[0][0]);\n                }\n            } else {\n                console.log('Item:', e);\n                const id =\n                    e.properties?.externalId || e.properties?.roomId || e.id;\n                console.log('Selected ID:', id);\n                this.selected_item = e;\n                if (id) this.selected.next(id);\n                this.changed.next(Date.now());\n            }\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    createShortURL,\n    getInvalidFields,\n    notifyError,\n    randomString,\n    updateShortURL,\n} from '@placeos/common';\nimport { OrganisationService, Building } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { PointOfInterest } from './poi-management.service';\nimport { take } from 'rxjs/operators';\nimport { SelectPOIMapModalComponent } from './select-poi-map-modal.component';\n\n@Component({\n    selector: 'poi-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Point Of Interest</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[28rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            i18n-placeholder=\"@@namePlaceholder\"\n                            formControlName=\"name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"(building_list | async)?.length > 1\"\n                >\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Building<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            [(ngModel)]=\"building\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Select Building\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of building_list | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.level_id\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Level<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"level_id\"\n                            placeholder=\"Select Level\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of level_list | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Location<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            [(ngModel)]=\"location_type\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Location Type\"\n                        >\n                            <mat-option value=\"map_id\">Map ID</mat-option>\n                            <mat-option value=\"coordinates\"\n                                >Coordinates</mat-option\n                            >\n                        </mat-select>\n                    </mat-form-field>\n                    <div\n                        class=\"flex items-center space-x-2 pb-2\"\n                        *ngIf=\"location_type === 'map_id'\"\n                    >\n                        <mat-form-field\n                            class=\"no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"location\"\n                                placeholder=\"Location\"\n                                i18n-placeholder=\"@@locationPlaceholder\"\n                                formControlName=\"location\"\n                            />\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"rounded border border-base-300 h-12 w-12\"\n                            (click)=\"selectPOIfromMap()\"\n                        >\n                            <app-icon>place</app-icon>\n                        </button>\n                    </div>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngIf=\"location_type === 'coordinates'\"\n                    >\n                        <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                            <input\n                                matInput\n                                name=\"latitude\"\n                                [ngModel]=\"form.value.location[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        location: [\n                                            $event,\n                                            form.value.location[1]\n                                        ]\n                                    })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            />\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                            <input\n                                matInput\n                                name=\"longitude\"\n                                [ngModel]=\"form.value.location[1]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        location: [\n                                            form.value.location[0],\n                                            $event\n                                        ]\n                                    })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Point Of Interest...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class POIModalComponent extends AsyncHandler {\n    public loading = false;\n    public location_type =\n        this._data?.location instanceof Array ? 'coordinates' : 'map_id';\n    public readonly building_list = this._org.building_list;\n    public readonly level_list = this._org.active_levels;\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public set building(value: Building) {\n        this._org.building = value;\n    }\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data?.id || ''),\n        name: new FormControl(this._data?.name || '', [Validators.required]),\n        level_id: new FormControl(this._data?.level_id || '', [\n            Validators.required,\n        ]),\n        location: new FormControl(this._data?.location || '', [\n            Validators.required,\n        ]),\n    });\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: PointOfInterest | undefined,\n        private _dialog_ref: MatDialogRef<POIModalComponent>,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        if (!this.form.value.level_id) {\n            const levels = await this.level_list.pipe(take(1)).toPromise();\n            if (levels.length) this.form.patchValue({ level_id: levels[0].id });\n        }\n    }\n\n    public selectPOIfromMap() {\n        const ref = this._dialog.open(SelectPOIMapModalComponent, {\n            data: {\n                ...this._data,\n                ...this.form.getRawValue(),\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                location: d,\n                level_id: ref.componentInstance.level?.id,\n            });\n        });\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const data: any = this.form.getRawValue();\n        if (!data.id) data.id = `POI-${randomString(8)}`;\n        data.short_link_id = this._data?.short_link_id;\n        const path = this._settings.get('app.kiosk_url_path') || '/map-kiosk';\n        const public_key = this._settings.get('app.short_url_public_key');\n        const location =\n            typeof data.location === 'string'\n                ? data.location\n                : data.location.join(',');\n        let uri = `${path}/#/explore?level=${data.level_id}&locate=${location}&public=true`;\n        if (public_key) uri += `&x-api-key=${public_key}`;\n        if (!data.short_link_id) {\n            const { id } = await createShortURL({\n                name: data.name,\n                description: `Point of Interest: ${data.name}`,\n                uri: `${\n                    window.location.origin\n                }/auth/login?continue=${encodeURIComponent(uri)}`,\n            } as any).toPromise();\n            data.short_link_id = id;\n        } else {\n            await updateShortURL(data.short_link_id, {\n                id: data.short_link_id,\n                name: data.name,\n                description: `Point of Interest: ${data.name}`,\n                uri: `${\n                    window.location.origin\n                }/auth/login?continue=${encodeURIComponent(uri)}`,\n            } as any).toPromise();\n        }\n        this.loading = true;\n        const old_metadata = await showMetadata(\n            this._org.organisation.id,\n            'points-of-interest',\n            {}\n        ).toPromise();\n        const metadata = old_metadata.details || {};\n        if (!metadata[data.level_id]) metadata[data.level_id] = [];\n        if (this._data?.id) {\n            for (const lvl in metadata) {\n                if (metadata[lvl])\n                    metadata[lvl] = metadata[lvl].filter(\n                        (_) => _.id !== data.id\n                    );\n            }\n        }\n        metadata[data.level_id] = [\n            ...metadata[data.level_id].filter((_) => _.id !== data.id),\n            data,\n        ].sort((a, b) => a.name.localeCompare(b.name));\n        const resp = await updateMetadata(this._org.organisation.id, {\n            name: 'points-of-interest',\n            details: metadata,\n            description: 'Point of Interests for maps',\n        })\n            .toPromise()\n            .catch((e) => notifyError(e));\n        if ((resp as any).id) this._dialog_ref.close(resp);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { POIModalComponent } from './poi-modal.component';\nimport {\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\n\nexport interface POIListOptions {\n    search?: string;\n}\n\nexport interface PointOfInterest {\n    id: string;\n    name: string;\n    level_id: string;\n    location: string | [number, number];\n    short_link_id: string;\n    qr_code?: string;\n    qr_link?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class POIManagementService {\n    private _options = new BehaviorSubject<POIListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    private _features = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        switchMap(() =>\n            showMetadata(this._org.organisation.id, 'points-of-interest').pipe(\n                catchError((_) => of({ details: {} }))\n            )\n        ),\n        map((_) => {\n            const mapping = _.details || {};\n            const levels = this._org.levelsForBuilding(this._org.building);\n            const list = flatten(levels.map((lvl) => mapping[lvl.id] || []));\n            return list as PointOfInterest[];\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<POIListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editPointOfInterest(poi?: PointOfInterest) {\n        const ref = this._dialog.open(POIModalComponent, {\n            data: poi,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async removePointOfInterest(poi: PointOfInterest) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Point of Interest',\n                content: `Are you sure you want to remove the point of interest \"${poi.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing point of interest...');\n        const old_metadata = await showMetadata(\n            this._org.organisation.id,\n            'points-of-interest'\n        ).toPromise();\n        const metadata = old_metadata.details || {};\n        console.log('Metadata:', old_metadata, metadata, poi);\n        for (const lvl in metadata) {\n            if (metadata[lvl])\n                metadata[lvl] = metadata[lvl].filter((_) => _.id !== poi.id);\n        }\n        await updateMetadata(this._org.organisation.id, {\n            name: 'points-of-interest',\n            details: metadata,\n            description: '',\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(e);\n                ref.close();\n                throw e;\n            });\n        notifySuccess('Successfully removed point of interest.');\n        ref.close();\n        this._change.next(Date.now());\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    POIManagementService,\n    PointOfInterest,\n} from './poi-management.service';\nimport { SettingsService } from '@placeos/common';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\n@Component({\n    selector: 'poi-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-8\">\n            <simple-table\n                class=\"min-w-[40rem] block text-sm\"\n                [data]=\"features\"\n                empty_message=\"No Points of Interest found.\"\n                [columns]=\"[\n                    { key: 'name', name: 'Name' },\n                    {\n                        key: 'level_id',\n                        name: 'Level',\n                        content: level_template,\n                        size: '12rem'\n                    },\n                    { key: 'location', name: 'Location', size: '10rem' },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        content: action_template,\n                        size: '9.5rem',\n                        sortable: false\n                    }\n                ]\"\n                [sortable]=\"true\"\n            ></simple-table>\n            <div class=\"w-full h-12\"></div>\n        </div>\n        <ng-template #level_template let-row=\"row\">\n            <div class=\"p-4\">\n                {{ (row.level_id | level)?.display_name || 'Unknown' }}\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2 px-4 py-2 mx-auto\">\n                <div matTooltip=\"Private QR Code\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                </div>\n                <div matTooltip=\"Public QR Code\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [disabled]=\"!row.short_link_id\"\n                        [content]=\"qr_menu\"\n                        (click)=\"loadPublicQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                </div>\n                <ng-template #qr_menu>\n                    <div class=\"bg-base-100 py-2 shadow rounded\">\n                        <div class=\"\" printable>\n                            <a\n                                [href]=\"row.qr_link | safe: 'url'\"\n                                target=\"_blank\"\n                                ref=\"noopener noreferrer\"\n                                class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                            >\n                                <img class=\"w-48\" [src]=\"row.qr_code\" />\n                            </a>\n                            <div\n                                class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                            >\n                                {{ row.name || row.id }}\n                            </div>\n                        </div>\n                        <button\n                            btn\n                            matRipple\n                            class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                            (click)=\"print()\"\n                        >\n                            Print QR Code\n                        </button>\n                    </div>\n                </ng-template>\n                <button btn icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"edit(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon>edit</app-icon>\n                            <span>Edit Point of Interest</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"remove(row)\">\n                        <div class=\"flex items-center space-x-2 text-red-500\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <span>Delete Point of Interest</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class POIListComponent {\n    public readonly features = this._manager.filtered_features;\n\n    public readonly edit = (region) =>\n        this._manager.editPointOfInterest(region);\n    public readonly remove = (region) =>\n        this._manager.removePointOfInterest(region);\n\n    public get kiosk_url() {\n        const path = this._settings.get('app.kiosk_url_path') || '/map-kiosk';\n        return `${window.location.origin}${path}`;\n    }\n\n    constructor(\n        private _manager: POIManagementService,\n        private _settings: SettingsService\n    ) {}\n\n    public loadQrCode(item: PointOfInterest) {\n        const location =\n            typeof item.location === 'string'\n                ? item.location\n                : item.location.join(',');\n        const link = `${this.kiosk_url}/#/explore?level=${encodeURIComponent(\n            item.level_id\n        )}&locate=${encodeURIComponent(location)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public loadPublicQrCode(item: PointOfInterest) {\n        const link = `${location.origin}/r/${item.short_link_id.split('-')[1]}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public print() {\n        window.print();\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { POIManagementService } from './poi-management.service';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-poi-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header\n                    class=\"flex items-center justify-between px-8 py-8\"\n                    [class.mb-2]=\"\n                        !use_region || (buildings | async)?.length <= 1\n                    \"\n                >\n                    <h2 class=\"text-2xl font-medium\">\n                        Point of Interest Management\n                    </h2>\n                    <button btn matRipple (click)=\"new()\">\n                        Add Point of Interest\n                    </button>\n                </header>\n                <div\n                    class=\"flex items-center justify-between mb-2 px-8\"\n                    *ngIf=\"use_region && (buildings | async)?.length > 1\"\n                >\n                    <mat-form-field appearance=\"outline\" class=\"w-64\">\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building\"\n                            (ngModelChange)=\"building = $event\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                building?.display_name || building?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <poi-list class=\"block w-full relative flex-1 h-1/2\"></poi-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class POIManagerComponent {\n    public readonly new = () => this._state.editPointOfInterest();\n\n    public readonly buildings = this._org.active_buildings;\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public set building(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: POIManagementService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { POIManagerComponent } from './poi-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { POIListComponent } from './poi-list.component';\nimport { POIModalComponent } from './poi-modal.component';\nimport { SelectPOIMapModalComponent } from './select-poi-map-modal.component';\nimport { MapShowElementComponent } from './map-show-element.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: POIManagerComponent },\n    { path: 'new', component: POIManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        POIManagerComponent,\n        POIListComponent,\n        POIModalComponent,\n        SelectPOIMapModalComponent,\n        MapShowElementComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class POIManagerModule {}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[]}