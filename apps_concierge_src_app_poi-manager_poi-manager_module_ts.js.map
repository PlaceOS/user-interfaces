{"version":3,"file":"apps_concierge_src_app_poi-manager_poi-manager_module_ts.js","mappings":"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","names":["MapShowElementComponent","constructor","_data","this","hover","static","t","i0","MAP_FEATURE_DATA","core","VBU","selectors","decls","vars","consts","template","rf","ctx","lvl_r2","display_name","name","ctx_r2","page","tmp_2_0","search_results","length","poi_r5","location","_r4","$implicit","selected","next","id","hovered","SelectPOIMapModalComponent_ng_container_26_button_1_div_4_Template","value","SelectPOIMapModalComponent_ng_container_26_button_1_Template","_r6","last_page","tmp_13_0","SelectPOIMapModalComponent","AsyncHandler","poiItemFromMapsIndoorsItem","item","properties","externalId","roomId","building","floorName","area","Math","abs","geometry","bbox","_org","_maps_people","super","level","BuildingLevel","map_info","BehaviorSubject","search","changed","level_list","active_levels","actions","action","callback","e","p","selectID","features","combineLatest","pipe","map","s_id","h_id","content","full_size","no_scale","data","filter","_","available$","debounceTime","switchMap","q","available","console","log","mapsindoors","services","LocationsService","getLocations","then","l","list","i","selected_item","unshift","of","Object","entries","w","h","toLowerCase","includes","sort","a","b","tap","floor","shareReplay","setMapInfo","info","ngOnInit","_this","_asyncToGenerator","levels","take","toPromise","onChange","Date","now","_this2","timeout","pos","short_list","x","y","push","i1","i2","i18n_0","$localize","$event","_r1","SelectPOIMapModalComponent_mat_option_14_Template","SelectPOIMapModalComponent_span_25_Template","SelectPOIMapModalComponent_ng_container_26_Template","SelectPOIMapModalComponent_div_28_Template","SelectPOIMapModalComponent_ng_template_29_Template","map_id","_c0","tmp_9_0","tmp_11_0","empty_state_r7","bld_r4","_r2","POIModalComponent_main_4_form_1_div_2_mat_option_6_Template","building_list","level_r5","POIModalComponent_main_4_form_1_div_4_mat_option_6_Template","selectPOIfromMap","_r7","form","patchValue","POIModalComponent_main_4_form_1_div_1_Template","POIModalComponent_main_4_form_1_div_2_Template","POIModalComponent_main_4_form_1_div_4_Template","location_type","POIModalComponent_main_4_form_1_div_15_Template","POIModalComponent_main_4_form_1_div_16_Template","controls","tmp_5_0","level_id","POIModalComponent_main_4_form_1_Template","_r8","save","POIModalComponent","_dialog_ref","_settings","_dialog","loading","Array","FormGroup","FormControl","Validators","required","open","afterClosed","subscribe","d","valid","notifyError","getInvalidFields","join","getRawValue","randomString","short_link_id","path","get","public_key","uri","updateShortURL","description","window","origin","encodeURIComponent","createShortURL","metadata","showMetadata","details","localeCompare","resp","updateMetadata","catch","close","MAT_DIALOG_DATA","i3","POIModalComponent_button_3_Template","POIModalComponent_main_4_Template","POIModalComponent_footer_5_Template","POIModalComponent_ng_template_6_Template","load_state_r9","POIManagementService","_options","_change","options","asObservable","_features","active_building","bld","filtered_features","values","reduce","acc","setFilters","getValue","setSearchString","editPointOfInterest","poi","removePointOfInterest","ref","openConfirmModal","title","icon","confirm_text","reason","notifySuccess","jDH","factory","ɵfac","providedIn","tmp_4_0","_r5","ctx_r3","print","row_r3","qr_link","qr_code","row","loadQrCode","loadPublicQrCode","POIListComponent_ng_template_4_ng_template_9_Template","edit","remove","qr_menu_r6","menu_r7","POIListComponent","kiosk_url","_manager","region","link","generateQRCode","split","POIListComponent_ng_template_2_Template","POIListComponent_ng_template_4_Template","_c1","_c2","_c3","level_template_r8","action_template_r9","bld_r3","ctx_r1","POIManagerComponent_div_10_mat_option_3_Template","buildings","POIManagerComponent","use_region","_state","new","active_buildings","attrs","POIManagerComponent_div_10_Template","tmp_0_0","tmp_1_0","ROUTES","component","POIManagerModule","$C","G2t","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","RouterModule","forChild","MapLocation","type","position","asset_id","map_width","map_height","variance","last_seen","getUnixTime","at_location","coordinates_from"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/poi-manager/map-show-element.component.ts","./apps/concierge/src/app/poi-manager/select-poi-map-modal.component.ts","./apps/concierge/src/app/poi-manager/poi-modal.component.ts","./apps/concierge/src/app/poi-manager/poi-management.service.ts","./apps/concierge/src/app/poi-manager/poi-list.component.ts","./apps/concierge/src/app/poi-manager/poi-manager.component.ts","./apps/concierge/src/app/poi-manager/poi-manager.module.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'map-show-element',\n    template: `\n        <div\n            class=\"relative w-full h-full border-2\"\n            [class.border-secondary]=\"hover\"\n            [class.border-primary]=\"!hover\"\n        >\n            <div\n                class=\"opacity-30 absolute inset-0\"\n                [class.bg-secondary]=\"hover\"\n                [class.bg-primary]=\"!hover\"\n            ></div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MapShowElementComponent {\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: { hover: boolean }) {}\n\n    public get hover() {\n        return !!this._data?.hover;\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { Rect } from '@placeos/svg-viewer/dist/types';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { MapShowElementComponent } from './map-show-element.component';\n\ntype BoundsMap = Record<string, Rect>;\n\ndeclare let mapsindoors: any;\n\n@Component({\n    selector: 'select-poi-map-modal',\n    template: `\n        <header>\n            <h2>Select Point of Interest from Map</h2>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex min-w-[80vw] max-w-[calc(100vw-2rem)] sm:max-w-[64rem] max-h-[75vh] h-[75vh] overflow-hidden\"\n        >\n            <div map class=\"relative h-full flex-1 w-1/2 bg-base-200\">\n                <interactive-map\n                    [src]=\"level?.map_id\"\n                    [actions]=\"actions\"\n                    [features]=\"features | async\"\n                    [options]=\"{ controls: true }\"\n                    [focus]=\"selected.value\"\n                    (mapInfo)=\"setMapInfo($event)\"\n                ></interactive-map>\n            </div>\n            <div\n                poi-list\n                class=\"relative flex flex-col h-full w-[20rem] border-l border-base-300 shadow\"\n            >\n                <div search class=\"flex flex-col border-b border-base-200 p-2\">\n                    <mat-form-field\n                        class=\"w-full no-subscript mb-2\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            name=\"level\"\n                            [(ngModel)]=\"level\"\n                            (ngModelChange)=\"onChange()\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of level_list | async\"\n                                [value]=\"lvl\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        class=\"w-full no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"search\"\n                            placeholder=\"Search\"\n                            [ngModel]=\"search | async\"\n                            (ngModelChange)=\"search.next($event)\"\n                            i18n-placeholder=\"@@searchPlaceholder\"\n                        />\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                    </mat-form-field>\n                </div>\n                <div list class=\"flex flex-col flex-1 h-1/2 overflow-auto\">\n                    <div class=\"sticky top-0 w-full bg-base-100 p-3 z-10\">\n                        Results ({{ (search_results | async)?.length || 0 }})\n                        <span *ngIf=\"last_page\">\n                            {{ page * 100 + 1 }} -\n                            {{\n                                (search_results | async)?.length >\n                                page * 100 + 100\n                                    ? page * 100 + 100\n                                    : (search_results | async)?.length\n                            }}\n                        </span>\n                    </div>\n                    <ng-container\n                        *ngIf=\"\n                            (search_results | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <button\n                            matRipple\n                            *ngFor=\"\n                                let poi of search_results\n                                    | async\n                                    | slice: page * 100:page * 100 + 100\n                            \"\n                            class=\"flex items-center text-left w-[calc(100%-1rem)] mx-2 my-1 p-2 rounded odd:border odd:border-base-200 even:bg-base-200 hover:bg-base-300 h-16 min-h-16\"\n                            [class.!bg-primary]=\"poi.id === selected.value\"\n                            [class.!text-primary-content]=\"\n                                poi.id === selected.value\n                            \"\n                            (click)=\"selected.next(poi.id)\"\n                            (mouseover)=\"hovered.next(poi.id)\"\n                        >\n                            <div class=\"flex flex-col\">\n                                <div class=\"\">{{ poi.name || poi.id }}</div>\n                                <div\n                                    class=\"text-xs opacity-30\"\n                                    *ngIf=\"poi.location\"\n                                >\n                                    {{ poi.location }}\n                                </div>\n                            </div>\n                        </button>\n                    </ng-container>\n                    <div\n                        pagination\n                        *ngIf=\"last_page > 0\"\n                        class=\"sticky flex items-center justify-center bottom-0 w-full bg-base-100 p-2 z-10 space-x-1\"\n                    >\n                        <button\n                            icon\n                            matRipple\n                            class=\"border border-base-200 rounded\"\n                            [disabled]=\"page === 0\"\n                            (click)=\"page = page - 1\"\n                        >\n                            <app-icon>chevron_left</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [class.!bg-secondary]=\"page === 0\"\n                            [class.text-secondary-content]=\"page === 0\"\n                            [class.!rounded-full]=\"page === 0\"\n                            (click)=\"page = 0\"\n                        >\n                            1\n                        </button>\n                        <button icon [class.opacity-0]=\"page < 1\">\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"!bg-secondary text-secondary-content\"\n                            [class.opacity-0]=\"page < 1 || page > last_page - 2\"\n                        >\n                            {{ page + 1 }}\n                        </button>\n                        <button icon [class.opacity-0]=\"page > last_page - 1\">\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"border border-base-200 rounded\"\n                            [class.!bg-secondary]=\"page === last_page\"\n                            [class.text-secondary-content]=\"page === last_page\"\n                            [class.!rounded-full]=\"page === last_page\"\n                            (click)=\"page = last_page\"\n                        >\n                            {{\n                                (search_results | async)?.length / 100\n                                    | number: '1.0-0'\n                            }}\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"border border-base-200 rounded\"\n                            [disabled]=\"page === last_page\"\n                            (click)=\"page = page + 1\"\n                        >\n                            <app-icon>chevron_right</app-icon>\n                        </button>\n                    </div>\n                    <ng-template #empty_state>\n                        <div\n                            class=\"flex flex-col items-center justify-center h-full flex-1 space-y-4\"\n                        >\n                            <img\n                                src=\"assets/icons/no-results.svg\"\n                                class=\"w-36\"\n                            />\n                            <div class=\"text-center opacity-30\">\n                                No results found\n                            </div>\n                        </div>\n                    </ng-template>\n                </div>\n                <div actions class=\"p-2 border-t border-base-200\">\n                    <button\n                        btn\n                        matRipple\n                        [disabled]=\"!selected.value\"\n                        class=\"w-full\"\n                        [mat-dialog-close]=\"selected.value\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </div>\n        </main>\n    `,\n    styles: [``],\n})\nexport class SelectPOIMapModalComponent extends AsyncHandler {\n    public selected_item: any;\n    public level: BuildingLevel = new BuildingLevel();\n    public map_info: BoundsMap = {};\n    public page = 0;\n    public last_page = 0;\n    public readonly selected = new BehaviorSubject<string>('');\n    public readonly hovered = new BehaviorSubject<string>('');\n    public readonly search = new BehaviorSubject('');\n    public readonly changed = new BehaviorSubject(0);\n    public readonly level_list = this._org.active_levels;\n    public readonly actions = [\n        { id: '*', action: 'click', callback: (e, p) => this.selectID(p || e) },\n    ];\n    public readonly features = combineLatest([\n        this.selected,\n        this.hovered,\n    ]).pipe(\n        map(([s_id, h_id]) =>\n            [\n                {\n                    location: s_id,\n                    content: MapShowElementComponent,\n                    full_size: true,\n                    no_scale: true,\n                },\n                {\n                    location: h_id,\n                    content: MapShowElementComponent,\n                    data: { hover: true },\n                    full_size: true,\n                    no_scale: true,\n                },\n            ].filter((_) => _.location)\n        )\n    );\n\n    public poiItemFromMapsIndoorsItem(item: any) {\n        return {\n            id: item.properties.externalId || item.properties.roomId || item.id,\n            name: item.properties.name,\n            location: item.properties.building\n                ? `${item.properties.building}, Level ${item.properties.floorName}`\n                : '',\n            area:\n                Math.abs(item.geometry.bbox[0] - item.geometry.bbox[2]) *\n                Math.abs(item.geometry.bbox[1] - item.geometry.bbox[3]),\n        };\n    }\n\n    public readonly search_results = combineLatest([\n        this.search,\n        this._maps_people.available$,\n        this.changed,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([q, available]) => {\n            console.log('Search:', q, available);\n            return available\n                ? q.length > 2\n                    ? mapsindoors?.services.LocationsService.getLocations({\n                          q,\n                      }).then((l) => {\n                          const list = l.map((i) =>\n                              this.poiItemFromMapsIndoorsItem(i)\n                          );\n                          if (this.selected_item) {\n                              list.unshift(\n                                  this.poiItemFromMapsIndoorsItem(\n                                      this.selected_item\n                                  )\n                              );\n                          }\n                          return list;\n                      })\n                    : of(\n                          this.selected_item\n                              ? [\n                                    this.poiItemFromMapsIndoorsItem(\n                                        this.selected_item\n                                    ),\n                                ]\n                              : []\n                      )\n                : of(\n                      Object.entries(this.map_info)\n                          .map(([id, bbox]) => ({\n                              id,\n                              area: bbox.w * bbox.h,\n                          }))\n                          .filter(\n                              ({ id, area }) =>\n                                  id.toLowerCase().includes(q.toLowerCase()) &&\n                                  area < 0.5\n                          )\n                          .sort((a, b) => b.area - a.area)\n                  );\n        }),\n        tap((l: any[]) => {\n            this.page = 0;\n            this.last_page = Math.floor(l.length / 100);\n        }),\n        shareReplay(1)\n    );\n\n    public readonly setMapInfo = (info: BoundsMap) => (this.map_info = info);\n\n    constructor(\n        private _org: OrganisationService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        const levels = await this.level_list.pipe(take(1)).toPromise();\n        if (levels.length) this.level = levels[0];\n    }\n\n    public onChange() {\n        this.changed.next(Date.now());\n    }\n\n    public selectID(e: any) {\n        this.timeout('select_id', async () => {\n            const use_maps_indoors = await this._maps_people.available$\n                .pipe(take(1))\n                .toPromise();\n            if (!use_maps_indoors) {\n                const pos: { x: number; y: number } = e;\n                const short_list: [string, number][] = [];\n                for (const [id, bbox] of Object.entries(this.map_info)) {\n                    if (\n                        bbox.x <= pos.x &&\n                        pos.x <= bbox.x + bbox.w &&\n                        bbox.y <= pos.y &&\n                        pos.y <= bbox.y + bbox.h\n                    ) {\n                        short_list.push([id, bbox.h * bbox.w]);\n                    }\n                }\n                short_list.sort((a, b) => a[1] - b[1]);\n                short_list.filter(([_, a]) => a <= 0.5);\n                if (short_list.length) {\n                    console.log('Selected ID:', short_list[0][0]);\n                    this.selected.next(short_list[0][0]);\n                }\n            } else {\n                console.log('Item:', e);\n                const id =\n                    e.properties?.externalId || e.properties?.roomId || e.id;\n                console.log('Selected ID:', id);\n                this.selected_item = e;\n                if (id) this.selected.next(id);\n                this.changed.next(Date.now());\n            }\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    createShortURL,\n    getInvalidFields,\n    notifyError,\n    randomString,\n    updateShortURL,\n} from '@placeos/common';\nimport { OrganisationService, Building } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { PointOfInterest } from './poi-management.service';\nimport { take } from 'rxjs/operators';\nimport { SelectPOIMapModalComponent } from './select-poi-map-modal.component';\n\n@Component({\n    selector: 'poi-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Point Of Interest</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[28rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            i18n-placeholder=\"@@namePlaceholder\"\n                            formControlName=\"name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"(building_list | async)?.length > 1\"\n                >\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Building<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            [(ngModel)]=\"building\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Select Building\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of building_list | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.level_id\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Level<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"level_id\"\n                            placeholder=\"Select Level\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of level_list | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Location<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            [(ngModel)]=\"location_type\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Location Type\"\n                        >\n                            <mat-option value=\"map_id\">Map ID</mat-option>\n                            <mat-option value=\"coordinates\"\n                                >Coordinates</mat-option\n                            >\n                        </mat-select>\n                    </mat-form-field>\n                    <div\n                        class=\"flex items-center space-x-2 pb-2\"\n                        *ngIf=\"location_type === 'map_id'\"\n                    >\n                        <mat-form-field\n                            class=\"no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"location\"\n                                placeholder=\"Location\"\n                                i18n-placeholder=\"@@locationPlaceholder\"\n                                formControlName=\"location\"\n                            />\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"rounded border border-base-300 h-12 w-12\"\n                            (click)=\"selectPOIfromMap()\"\n                        >\n                            <app-icon>place</app-icon>\n                        </button>\n                    </div>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngIf=\"location_type === 'coordinates'\"\n                    >\n                        <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                            <input\n                                matInput\n                                name=\"latitude\"\n                                [ngModel]=\"form.value.location[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        location: [\n                                            $event,\n                                            form.value.location[1]\n                                        ]\n                                    })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            />\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                            <input\n                                matInput\n                                name=\"longitude\"\n                                [ngModel]=\"form.value.location[1]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        location: [\n                                            form.value.location[0],\n                                            $event\n                                        ]\n                                    })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Point Of Interest...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class POIModalComponent extends AsyncHandler {\n    public loading = false;\n    public location_type =\n        this._data?.location instanceof Array ? 'coordinates' : 'map_id';\n    public readonly building_list = this._org.building_list;\n    public readonly level_list = this._org.active_levels;\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public set building(value: Building) {\n        this._org.building = value;\n    }\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data?.id || ''),\n        name: new FormControl(this._data?.name || '', [Validators.required]),\n        level_id: new FormControl(this._data?.level_id || '', [\n            Validators.required,\n        ]),\n        location: new FormControl(this._data?.location || '', [\n            Validators.required,\n        ]),\n    });\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: PointOfInterest | undefined,\n        private _dialog_ref: MatDialogRef<POIModalComponent>,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        if (!this.form.value.level_id) {\n            const levels = await this.level_list.pipe(take(1)).toPromise();\n            if (levels.length) this.form.patchValue({ level_id: levels[0].id });\n        }\n    }\n\n    public selectPOIfromMap() {\n        const ref = this._dialog.open(SelectPOIMapModalComponent, {\n            data: this._data,\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({ location: d });\n        });\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const data: any = this.form.getRawValue();\n        if (!data.id) data.id = `POI-${randomString(8)}`;\n        data.short_link_id = this._data?.short_link_id;\n        const path = this._settings.get('app.kiosk_url_path') || '/map-kiosk';\n        const public_key = this._settings.get('app.short_url_public_key');\n        const location =\n            typeof data.location === 'string'\n                ? data.location\n                : data.location.join(',');\n        let uri = `${path}/#/explore?level=${data.level_id}&locate=${location}&public=true`;\n        if (public_key) uri += `&x-api-key=${public_key}`;\n        if (!data.short_link_id) {\n            const { id } = await createShortURL({\n                name: data.name,\n                description: `Point of Interest: ${data.name}`,\n                uri: `${\n                    window.location.origin\n                }/auth/login?continue=${encodeURIComponent(uri)}`,\n            } as any).toPromise();\n            data.short_link_id = id;\n        } else {\n            await updateShortURL(data.short_link_id, {\n                id: data.short_link_id,\n                name: data.name,\n                description: `Point of Interest: ${data.name}`,\n                uri: `${\n                    window.location.origin\n                }/auth/login?continue=${encodeURIComponent(uri)}`,\n            } as any).toPromise();\n        }\n        this.loading = true;\n        const old_metadata = await showMetadata(\n            this._org.building.id,\n            'map_features',\n            {}\n        ).toPromise();\n        const metadata = old_metadata.details || {};\n        if (!metadata[data.level_id]) metadata[data.level_id] = [];\n        metadata[data.level_id] = [\n            ...metadata[data.level_id].filter((_) => _.id !== data.id),\n            data,\n        ].sort((a, b) => a.name.localeCompare(b.name));\n        const resp = await updateMetadata(this._org.building.id, {\n            name: 'map_features',\n            details: metadata,\n            description: '',\n        })\n            .toPromise()\n            .catch((e) => notifyError(e));\n        if ((resp as any).id) this._dialog_ref.close(resp);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { POIModalComponent } from './poi-modal.component';\nimport { notifyError, notifySuccess, openConfirmModal } from '@placeos/common';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\n\nexport interface POIListOptions {\n    search?: string;\n}\n\nexport interface PointOfInterest {\n    id: string;\n    name: string;\n    level_id: string;\n    location: string | [number, number];\n    short_link_id: string;\n    qr_code?: string;\n    qr_link?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class POIManagementService {\n    private _options = new BehaviorSubject<POIListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    private _features = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        switchMap(([bld]) => showMetadata(bld.id, 'map_features', {})),\n        map((_) => _.details || {}),\n        shareReplay(1)\n    );\n\n    public readonly filtered_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        map(([features, options]) => {\n            let list = Object.values(features).reduce(\n                (acc, _) => [...acc, ..._],\n                []\n            );\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<POIListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editPointOfInterest(poi?: PointOfInterest) {\n        const ref = this._dialog.open(POIModalComponent, {\n            data: poi,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async removePointOfInterest(poi: PointOfInterest) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Point of Interest',\n                content: `Are you sure you want to remove the point of interest \"${poi.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing point of interest...');\n        const old_metadata = await showMetadata(\n            this._org.building.id,\n            'map_features',\n            {}\n        ).toPromise();\n        const metadata = old_metadata.details || {};\n        if (metadata[poi.level_id]) {\n            metadata[poi.level_id] = metadata[poi.level_id].filter(\n                (_) => _.id !== poi.id\n            );\n        }\n        await updateMetadata(this._org.building.id, {\n            name: 'map_features',\n            details: metadata,\n            description: '',\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(e);\n                ref.close();\n                throw e;\n            });\n        notifySuccess('Successfully removed point of interest.');\n        ref.close();\n        this._change.next(Date.now());\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    POIManagementService,\n    PointOfInterest,\n} from './poi-management.service';\nimport { SettingsService } from '@placeos/common';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\n@Component({\n    selector: 'poi-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-4\">\n            <custom-table\n                class=\"block min-w-[32rem] w-full h-full\"\n                [dataSource]=\"features\"\n                [columns]=\"['name', 'level', 'location', 'actions']\"\n                [display_column]=\"['Name', 'Level', 'Location', ' ']\"\n                [column_size]=\"['flex', '10r', '10r', '9r']\"\n                [template]=\"{\n                    level: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No Points of Interest found.\"\n            ></custom-table>\n        </div>\n        <ng-template #level_template let-row=\"row\">\n            {{ (row.level_id | level)?.display_name || 'Unknown' }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <div matTooltip=\"Private QR Code\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                </div>\n                <div matTooltip=\"Public QR Code\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [disabled]=\"!row.short_link_id\"\n                        [content]=\"qr_menu\"\n                        (click)=\"loadPublicQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                </div>\n                <ng-template #qr_menu>\n                    <div class=\"bg-base-100 py-2 shadow rounded\">\n                        <div class=\"\" printable>\n                            <a\n                                [href]=\"row.qr_link | safe: 'url'\"\n                                target=\"_blank\"\n                                ref=\"noopener noreferrer\"\n                                class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                            >\n                                <img class=\"w-48\" [src]=\"row.qr_code\" />\n                            </a>\n                            <div\n                                class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                            >\n                                {{ row.name || row.id }}\n                            </div>\n                        </div>\n                        <button\n                            btn\n                            matRipple\n                            class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                            (click)=\"print()\"\n                        >\n                            Print QR Code\n                        </button>\n                    </div>\n                </ng-template>\n                <button btn icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"edit(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon>edit</app-icon>\n                            <span>Edit Point of Interest</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"remove(row)\">\n                        <div class=\"flex items-center space-x-2 text-red-500\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <span>Delete Point of Interest</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class POIListComponent {\n    public readonly features = this._manager.filtered_features;\n\n    public readonly edit = (region) =>\n        this._manager.editPointOfInterest(region);\n    public readonly remove = (region) =>\n        this._manager.removePointOfInterest(region);\n\n    public get kiosk_url() {\n        const path = this._settings.get('app.kiosk_url_path') || '/map-kiosk';\n        return `${window.location.origin}${path}`;\n    }\n\n    constructor(\n        private _manager: POIManagementService,\n        private _settings: SettingsService\n    ) {}\n\n    public loadQrCode(item: PointOfInterest) {\n        const location =\n            typeof item.location === 'string'\n                ? item.location\n                : item.location.join(',');\n        const link = `${this.kiosk_url}/#/explore?level=${encodeURIComponent(\n            item.level_id\n        )}&locate=${encodeURIComponent(location)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public loadPublicQrCode(item: PointOfInterest) {\n        const link = `${location.origin}/r/${item.short_link_id.split('-')[1]}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public print() {\n        window.print();\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { POIManagementService } from './poi-management.service';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-poi-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header\n                    class=\"flex items-center justify-between px-4 py-8\"\n                    [class.mb-2]=\"\n                        !use_region || (buildings | async)?.length <= 1\n                    \"\n                >\n                    <h2 class=\"text-2xl font-medium\">\n                        Point of Interest Management\n                    </h2>\n                    <button btn matRipple (click)=\"new()\">\n                        Add Point of Interest\n                    </button>\n                </header>\n                <div\n                    class=\"flex items-center justify-between mb-2 px-4\"\n                    *ngIf=\"use_region && (buildings | async)?.length > 1\"\n                >\n                    <mat-form-field appearance=\"outline\" class=\"w-64\">\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building\"\n                            (ngModelChange)=\"building = $event\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                building?.display_name || building?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <poi-list class=\"block w-full relative flex-1 h-1/2\"></poi-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class POIManagerComponent {\n    public readonly new = () => this._state.editPointOfInterest();\n\n    public readonly buildings = this._org.active_buildings;\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public set building(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: POIManagementService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { POIManagerComponent } from './poi-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { POIListComponent } from './poi-list.component';\nimport { POIModalComponent } from './poi-modal.component';\nimport { SelectPOIMapModalComponent } from './select-poi-map-modal.component';\nimport { MapShowElementComponent } from './map-show-element.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: POIManagerComponent },\n    { path: 'new', component: POIManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        POIManagerComponent,\n        POIListComponent,\n        POIModalComponent,\n        SelectPOIMapModalComponent,\n        MapShowElementComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class POIManagerModule {}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[]}