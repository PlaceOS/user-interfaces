{"version":3,"file":"apps_concierge_src_app_poi-manager_poi-manager_module_ts.js","mappings":"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","names":["MapShowElementComponent","constructor","_data","this","hover","static","t","i0","MAP_FEATURE_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","lvl_r6","display_name","name","ctx_r1","page","tmp_0_0","search_results","length","poi_r8","location","_r12","$implicit","ctx_r11","selected","next","id","ctx_r13","hovered","SelectPOIMapModalComponent_ng_container_26_button_1_div_4_Template","ctx_r7","value","SelectPOIMapModalComponent_ng_container_26_button_1_Template","ctx_r2","_r15","ctx_r14","ctx_r16","ctx_r17","last_page","ctx_r18","ctx_r3","tmp_11_0","SelectPOIMapModalComponent","AsyncHandler","poiItemFromMapsIndoorsItem","item","properties","externalId","roomId","building","floorName","area","Math","abs","geometry","bbox","_org","_maps_people","super","level","BuildingLevel","map_info","BehaviorSubject","search","changed","level_list","active_levels","actions","action","callback","e","p","selectID","features","combineLatest","pipe","map","s_id","h_id","content","full_size","no_scale","data","filter","_","available$","debounceTime","switchMap","q","available","console","log","mapsindoors","services","LocationsService","getLocations","then","l","list","i","selected_item","unshift","of","Object","entries","w","h","toLowerCase","includes","sort","a","b","tap","floor","shareReplay","setMapInfo","info","ngOnInit","_this","_asyncToGenerator","levels","take","toPromise","onChange","Date","now","_this2","timeout","pos","short_list","x","y","push","i1","i2","i18n_0","$localize","$event","SelectPOIMapModalComponent_mat_option_14_Template","SelectPOIMapModalComponent_span_25_Template","SelectPOIMapModalComponent_ng_container_26_Template","SelectPOIMapModalComponent_div_28_Template","SelectPOIMapModalComponent_ng_template_29_Template","map_id","_c0","tmp_8_0","tmp_10_0","_r5","bld_r12","_r14","POIModalComponent_main_4_form_1_div_2_mat_option_6_Template","building_list","level_r16","POIModalComponent_main_4_form_1_div_4_mat_option_6_Template","ctx_r8","_r18","selectPOIfromMap","_r20","ctx_r19","form","patchValue","ctx_r21","ctx_r10","POIModalComponent_main_4_form_1_div_1_Template","POIModalComponent_main_4_form_1_div_2_Template","POIModalComponent_main_4_form_1_div_4_Template","_r23","ctx_r22","location_type","POIModalComponent_main_4_form_1_div_15_Template","POIModalComponent_main_4_form_1_div_16_Template","ctx_r5","controls","tmp_2_0","level_id","POIModalComponent_main_4_form_1_Template","_r25","ctx_r24","save","POIModalComponent","_dialog_ref","_settings","_dialog","loading","Array","FormGroup","FormControl","Validators","required","open","afterClosed","subscribe","d","valid","notifyError","getInvalidFields","join","getRawValue","randomString","short_link_id","path","get","public_key","uri","updateShortURL","description","window","origin","encodeURIComponent","createShortURL","metadata","showMetadata","details","localeCompare","resp","updateMetadata","catch","close","MAT_DIALOG_DATA","i3","POIModalComponent_button_3_Template","POIModalComponent_main_4_Template","POIModalComponent_footer_5_Template","POIModalComponent_ng_template_6_Template","_r4","POIManagementService","_options","_change","options","asObservable","_features","active_building","bld","filtered_features","values","reduce","acc","setFilters","getValue","setSearchString","editPointOfInterest","poi","removePointOfInterest","ref","openConfirmModal","title","icon","confirm_text","reason","notifySuccess","Yz7","factory","ɵfac","providedIn","_r10","ctx_r9","print","row_r5","qr_link","qr_code","_r13","row","ctx_r12","loadQrCode","loadPublicQrCode","POIListComponent_ng_template_4_ng_template_9_Template","ctx_r15","edit","remove","_r7","_r8","POIListComponent","kiosk_url","_manager","region","link","generateQRCode","split","POIListComponent_ng_template_2_Template","POIListComponent_ng_template_4_Template","_c1","_c2","_c3","_r1","_r3","bld_r2","POIManagerComponent_div_10_mat_option_3_Template","ctx_r0","buildings","POIManagerComponent","use_region","_state","new","active_buildings","attrs","POIManagerComponent_div_10_Template","tmp_1_0","ROUTES","component","POIManagerModule","oAB","cJS","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","RouterModule","forChild","MapLocation","type","position","asset_id","map_width","map_height","variance","last_seen","getUnixTime","at_location","coordinates_from"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/poi-manager/map-show-element.component.ts","./apps/concierge/src/app/poi-manager/select-poi-map-modal.component.ts","./apps/concierge/src/app/poi-manager/poi-modal.component.ts","./apps/concierge/src/app/poi-manager/poi-management.service.ts","./apps/concierge/src/app/poi-manager/poi-list.component.ts","./apps/concierge/src/app/poi-manager/poi-manager.component.ts","./apps/concierge/src/app/poi-manager/poi-manager.module.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'map-show-element',\n    template: `\n        <div\n            class=\"relative w-full h-full border-2\"\n            [class.border-secondary]=\"hover\"\n            [class.border-primary]=\"!hover\"\n        >\n            <div\n                class=\"opacity-30 absolute inset-0\"\n                [class.bg-secondary]=\"hover\"\n                [class.bg-primary]=\"!hover\"\n            ></div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MapShowElementComponent {\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: { hover: boolean }) {}\n\n    public get hover() {\n        return !!this._data?.hover;\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { Rect } from '@placeos/svg-viewer/dist/types';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { MapShowElementComponent } from './map-show-element.component';\n\ntype BoundsMap = Record<string, Rect>;\n\ndeclare let mapsindoors: any;\n\n@Component({\n    selector: 'select-poi-map-modal',\n    template: `\n        <header>\n            <h2>Select Point of Interest from Map</h2>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex min-w-[80vw] max-w-[calc(100vw-2rem)] sm:max-w-[64rem] max-h-[75vh] h-[75vh] overflow-hidden\"\n        >\n            <div map class=\"relative h-full flex-1 w-1/2 bg-base-200\">\n                <interactive-map\n                    [src]=\"level?.map_id\"\n                    [actions]=\"actions\"\n                    [features]=\"features | async\"\n                    [options]=\"{ controls: true }\"\n                    [focus]=\"selected.value\"\n                    (mapInfo)=\"setMapInfo($event)\"\n                ></interactive-map>\n            </div>\n            <div\n                poi-list\n                class=\"relative flex flex-col h-full w-[20rem] border-l border-base-300 shadow\"\n            >\n                <div search class=\"flex flex-col border-b border-base-200 p-2\">\n                    <mat-form-field\n                        class=\"w-full no-subscript mb-2\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            name=\"level\"\n                            [(ngModel)]=\"level\"\n                            (ngModelChange)=\"onChange()\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of level_list | async\"\n                                [value]=\"lvl\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        class=\"w-full no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"search\"\n                            placeholder=\"Search\"\n                            [ngModel]=\"search | async\"\n                            (ngModelChange)=\"search.next($event)\"\n                            i18n-placeholder=\"@@searchPlaceholder\"\n                        />\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                    </mat-form-field>\n                </div>\n                <div list class=\"flex flex-col flex-1 h-1/2 overflow-auto\">\n                    <div class=\"sticky top-0 w-full bg-base-100 p-3 z-10\">\n                        Results ({{ (search_results | async)?.length || 0 }})\n                        <span *ngIf=\"last_page\">\n                            {{ page * 100 + 1 }} -\n                            {{\n                                (search_results | async)?.length >\n                                page * 100 + 100\n                                    ? page * 100 + 100\n                                    : (search_results | async)?.length\n                            }}\n                        </span>\n                    </div>\n                    <ng-container\n                        *ngIf=\"\n                            (search_results | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <button\n                            matRipple\n                            *ngFor=\"\n                                let poi of search_results\n                                    | async\n                                    | slice: page * 100:page * 100 + 100\n                            \"\n                            class=\"flex items-center text-left w-[calc(100%-1rem)] mx-2 my-1 p-2 rounded odd:border odd:border-base-200 even:bg-base-200 hover:bg-base-300 h-16 min-h-16\"\n                            [class.!bg-primary]=\"poi.id === selected.value\"\n                            [class.!text-primary-content]=\"\n                                poi.id === selected.value\n                            \"\n                            (click)=\"selected.next(poi.id)\"\n                            (mouseover)=\"hovered.next(poi.id)\"\n                        >\n                            <div class=\"flex flex-col\">\n                                <div class=\"\">{{ poi.name || poi.id }}</div>\n                                <div\n                                    class=\"text-xs opacity-30\"\n                                    *ngIf=\"poi.location\"\n                                >\n                                    {{ poi.location }}\n                                </div>\n                            </div>\n                        </button>\n                    </ng-container>\n                    <div\n                        pagination\n                        *ngIf=\"last_page > 0\"\n                        class=\"sticky flex items-center justify-center bottom-0 w-full bg-base-100 p-2 z-10 space-x-1\"\n                    >\n                        <button\n                            icon\n                            matRipple\n                            class=\"border border-base-200 rounded\"\n                            [disabled]=\"page === 0\"\n                            (click)=\"page = page - 1\"\n                        >\n                            <app-icon>chevron_left</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [class.!bg-secondary]=\"page === 0\"\n                            [class.text-secondary-content]=\"page === 0\"\n                            [class.!rounded-full]=\"page === 0\"\n                            (click)=\"page = 0\"\n                        >\n                            1\n                        </button>\n                        <button icon [class.opacity-0]=\"page < 1\">\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"!bg-secondary text-secondary-content\"\n                            [class.opacity-0]=\"page < 1 || page > last_page - 2\"\n                        >\n                            {{ page + 1 }}\n                        </button>\n                        <button icon [class.opacity-0]=\"page > last_page - 1\">\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"border border-base-200 rounded\"\n                            [class.!bg-secondary]=\"page === last_page\"\n                            [class.text-secondary-content]=\"page === last_page\"\n                            [class.!rounded-full]=\"page === last_page\"\n                            (click)=\"page = last_page\"\n                        >\n                            {{\n                                (search_results | async)?.length / 100\n                                    | number: '1.0-0'\n                            }}\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"border border-base-200 rounded\"\n                            [disabled]=\"page === last_page\"\n                            (click)=\"page = page + 1\"\n                        >\n                            <app-icon>chevron_right</app-icon>\n                        </button>\n                    </div>\n                    <ng-template #empty_state>\n                        <div\n                            class=\"flex flex-col items-center justify-center h-full flex-1 space-y-4\"\n                        >\n                            <img\n                                src=\"assets/icons/no-results.svg\"\n                                class=\"w-36\"\n                            />\n                            <div class=\"text-center opacity-30\">\n                                No results found\n                            </div>\n                        </div>\n                    </ng-template>\n                </div>\n                <div actions class=\"p-2 border-t border-base-200\">\n                    <button\n                        btn\n                        matRipple\n                        [disabled]=\"!selected.value\"\n                        class=\"w-full\"\n                        [mat-dialog-close]=\"selected.value\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </div>\n        </main>\n    `,\n    styles: [``],\n})\nexport class SelectPOIMapModalComponent extends AsyncHandler {\n    public selected_item: any;\n    public level: BuildingLevel = new BuildingLevel();\n    public map_info: BoundsMap = {};\n    public page = 0;\n    public last_page = 0;\n    public readonly selected = new BehaviorSubject<string>('');\n    public readonly hovered = new BehaviorSubject<string>('');\n    public readonly search = new BehaviorSubject('');\n    public readonly changed = new BehaviorSubject(0);\n    public readonly level_list = this._org.active_levels;\n    public readonly actions = [\n        { id: '*', action: 'click', callback: (e, p) => this.selectID(p || e) },\n    ];\n    public readonly features = combineLatest([\n        this.selected,\n        this.hovered,\n    ]).pipe(\n        map(([s_id, h_id]) =>\n            [\n                {\n                    location: s_id,\n                    content: MapShowElementComponent,\n                    full_size: true,\n                    no_scale: true,\n                },\n                {\n                    location: h_id,\n                    content: MapShowElementComponent,\n                    data: { hover: true },\n                    full_size: true,\n                    no_scale: true,\n                },\n            ].filter((_) => _.location)\n        )\n    );\n\n    public poiItemFromMapsIndoorsItem(item: any) {\n        return {\n            id: item.properties.externalId || item.properties.roomId || item.id,\n            name: item.properties.name,\n            location: item.properties.building\n                ? `${item.properties.building}, Level ${item.properties.floorName}`\n                : '',\n            area:\n                Math.abs(item.geometry.bbox[0] - item.geometry.bbox[2]) *\n                Math.abs(item.geometry.bbox[1] - item.geometry.bbox[3]),\n        };\n    }\n\n    public readonly search_results = combineLatest([\n        this.search,\n        this._maps_people.available$,\n        this.changed,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([q, available]) => {\n            console.log('Search:', q, available);\n            return available\n                ? q.length > 2\n                    ? mapsindoors?.services.LocationsService.getLocations({\n                          q,\n                      }).then((l) => {\n                          const list = l.map((i) =>\n                              this.poiItemFromMapsIndoorsItem(i)\n                          );\n                          if (this.selected_item) {\n                              list.unshift(\n                                  this.poiItemFromMapsIndoorsItem(\n                                      this.selected_item\n                                  )\n                              );\n                          }\n                          return list;\n                      })\n                    : of(\n                          this.selected_item\n                              ? [\n                                    this.poiItemFromMapsIndoorsItem(\n                                        this.selected_item\n                                    ),\n                                ]\n                              : []\n                      )\n                : of(\n                      Object.entries(this.map_info)\n                          .map(([id, bbox]) => ({\n                              id,\n                              area: bbox.w * bbox.h,\n                          }))\n                          .filter(\n                              ({ id, area }) =>\n                                  id.toLowerCase().includes(q.toLowerCase()) &&\n                                  area < 0.5\n                          )\n                          .sort((a, b) => b.area - a.area)\n                  );\n        }),\n        tap((l: any[]) => {\n            this.page = 0;\n            this.last_page = Math.floor(l.length / 100);\n        }),\n        shareReplay(1)\n    );\n\n    public readonly setMapInfo = (info: BoundsMap) => (this.map_info = info);\n\n    constructor(\n        private _org: OrganisationService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        const levels = await this.level_list.pipe(take(1)).toPromise();\n        if (levels.length) this.level = levels[0];\n    }\n\n    public onChange() {\n        this.changed.next(Date.now());\n    }\n\n    public selectID(e: any) {\n        this.timeout('select_id', async () => {\n            const use_maps_indoors = await this._maps_people.available$\n                .pipe(take(1))\n                .toPromise();\n            if (!use_maps_indoors) {\n                const pos: { x: number; y: number } = e;\n                const short_list: [string, number][] = [];\n                for (const [id, bbox] of Object.entries(this.map_info)) {\n                    if (\n                        bbox.x <= pos.x &&\n                        pos.x <= bbox.x + bbox.w &&\n                        bbox.y <= pos.y &&\n                        pos.y <= bbox.y + bbox.h\n                    ) {\n                        short_list.push([id, bbox.h * bbox.w]);\n                    }\n                }\n                short_list.sort((a, b) => a[1] - b[1]);\n                short_list.filter(([_, a]) => a <= 0.5);\n                if (short_list.length) {\n                    console.log('Selected ID:', short_list[0][0]);\n                    this.selected.next(short_list[0][0]);\n                }\n            } else {\n                console.log('Item:', e);\n                const id =\n                    e.properties?.externalId || e.properties?.roomId || e.id;\n                console.log('Selected ID:', id);\n                this.selected_item = e;\n                if (id) this.selected.next(id);\n                this.changed.next(Date.now());\n            }\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    createShortURL,\n    getInvalidFields,\n    notifyError,\n    randomString,\n    updateShortURL,\n} from '@placeos/common';\nimport { OrganisationService, Building } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { PointOfInterest } from './poi-management.service';\nimport { take } from 'rxjs/operators';\nimport { SelectPOIMapModalComponent } from './select-poi-map-modal.component';\n\n@Component({\n    selector: 'poi-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Point Of Interest</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[28rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            i18n-placeholder=\"@@namePlaceholder\"\n                            formControlName=\"name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"(building_list | async)?.length > 1\"\n                >\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Building<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            [(ngModel)]=\"building\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Select Building\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of building_list | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.level_id\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Level<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"level_id\"\n                            placeholder=\"Select Level\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of level_list | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Location<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            [(ngModel)]=\"location_type\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Location Type\"\n                        >\n                            <mat-option value=\"map_id\">Map ID</mat-option>\n                            <mat-option value=\"coordinates\"\n                                >Coordinates</mat-option\n                            >\n                        </mat-select>\n                    </mat-form-field>\n                    <div\n                        class=\"flex items-center space-x-2 pb-2\"\n                        *ngIf=\"location_type === 'map_id'\"\n                    >\n                        <mat-form-field\n                            class=\"no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"location\"\n                                placeholder=\"Location\"\n                                i18n-placeholder=\"@@locationPlaceholder\"\n                                formControlName=\"location\"\n                            />\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"rounded border border-base-300 h-12 w-12\"\n                            (click)=\"selectPOIfromMap()\"\n                        >\n                            <app-icon>place</app-icon>\n                        </button>\n                    </div>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngIf=\"location_type === 'coordinates'\"\n                    >\n                        <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                            <input\n                                matInput\n                                name=\"latitude\"\n                                [ngModel]=\"form.value.location[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        location: [\n                                            $event,\n                                            form.value.location[1]\n                                        ]\n                                    })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            />\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                            <input\n                                matInput\n                                name=\"longitude\"\n                                [ngModel]=\"form.value.location[1]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        location: [\n                                            form.value.location[0],\n                                            $event\n                                        ]\n                                    })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Point Of Interest...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class POIModalComponent extends AsyncHandler {\n    public loading = false;\n    public location_type =\n        this._data?.location instanceof Array ? 'coordinates' : 'map_id';\n    public readonly building_list = this._org.building_list;\n    public readonly level_list = this._org.active_levels;\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public set building(value: Building) {\n        this._org.building = value;\n    }\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data?.id || ''),\n        name: new FormControl(this._data?.name || '', [Validators.required]),\n        level_id: new FormControl(this._data?.level_id || '', [\n            Validators.required,\n        ]),\n        location: new FormControl(this._data?.location || '', [\n            Validators.required,\n        ]),\n    });\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: PointOfInterest | undefined,\n        private _dialog_ref: MatDialogRef<POIModalComponent>,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        if (!this.form.value.level_id) {\n            const levels = await this.level_list.pipe(take(1)).toPromise();\n            if (levels.length) this.form.patchValue({ level_id: levels[0].id });\n        }\n    }\n\n    public selectPOIfromMap() {\n        const ref = this._dialog.open(SelectPOIMapModalComponent, {\n            data: this._data,\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({ location: d });\n        });\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const data: any = this.form.getRawValue();\n        if (!data.id) data.id = `POI-${randomString(8)}`;\n        data.short_link_id = this._data?.short_link_id;\n        const path = this._settings.get('app.kiosk_url_path') || '/map-kiosk';\n        const public_key = this._settings.get('app.short_url_public_key');\n        const location =\n            typeof data.location === 'string'\n                ? data.location\n                : data.location.join(',');\n        let uri = `${path}/#/explore?level=${data.level_id}&locate=${location}&public=true`;\n        if (public_key) uri += `&x-api-key=${public_key}`;\n        if (!data.short_link_id) {\n            const { id } = await createShortURL({\n                name: data.name,\n                description: `Point of Interest: ${data.name}`,\n                uri: `${\n                    window.location.origin\n                }/auth/login?continue=${encodeURIComponent(uri)}`,\n            } as any).toPromise();\n            data.short_link_id = id;\n        } else {\n            await updateShortURL(data.short_link_id, {\n                id: data.short_link_id,\n                name: data.name,\n                description: `Point of Interest: ${data.name}`,\n                uri: `${\n                    window.location.origin\n                }/auth/login?continue=${encodeURIComponent(uri)}`,\n            } as any).toPromise();\n        }\n        this.loading = true;\n        const old_metadata = await showMetadata(\n            this._org.building.id,\n            'map_features',\n            {}\n        ).toPromise();\n        const metadata = old_metadata.details || {};\n        if (!metadata[data.level_id]) metadata[data.level_id] = [];\n        metadata[data.level_id] = [\n            ...metadata[data.level_id].filter((_) => _.id !== data.id),\n            data,\n        ].sort((a, b) => a.name.localeCompare(b.name));\n        const resp = await updateMetadata(this._org.building.id, {\n            name: 'map_features',\n            details: metadata,\n            description: '',\n        })\n            .toPromise()\n            .catch((e) => notifyError(e));\n        if ((resp as any).id) this._dialog_ref.close(resp);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { POIModalComponent } from './poi-modal.component';\nimport { notifyError, notifySuccess, openConfirmModal } from '@placeos/common';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\n\nexport interface POIListOptions {\n    search?: string;\n}\n\nexport interface PointOfInterest {\n    id: string;\n    name: string;\n    level_id: string;\n    location: string | [number, number];\n    short_link_id: string;\n    qr_code?: string;\n    qr_link?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class POIManagementService {\n    private _options = new BehaviorSubject<POIListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    private _features = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        switchMap(([bld]) => showMetadata(bld.id, 'map_features', {})),\n        map((_) => _.details || {}),\n        shareReplay(1)\n    );\n\n    public readonly filtered_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        map(([features, options]) => {\n            let list = Object.values(features).reduce(\n                (acc, _) => [...acc, ..._],\n                []\n            );\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<POIListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editPointOfInterest(poi?: PointOfInterest) {\n        const ref = this._dialog.open(POIModalComponent, {\n            data: poi,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async removePointOfInterest(poi: PointOfInterest) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Point of Interest',\n                content: `Are you sure you want to remove the point of interest \"${poi.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing point of interest...');\n        const old_metadata = await showMetadata(\n            this._org.building.id,\n            'map_features',\n            {}\n        ).toPromise();\n        const metadata = old_metadata.details || {};\n        if (metadata[poi.level_id]) {\n            metadata[poi.level_id] = metadata[poi.level_id].filter(\n                (_) => _.id !== poi.id\n            );\n        }\n        await updateMetadata(this._org.building.id, {\n            name: 'map_features',\n            details: metadata,\n            description: '',\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(e);\n                ref.close();\n                throw e;\n            });\n        notifySuccess('Successfully removed point of interest.');\n        ref.close();\n        this._change.next(Date.now());\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    POIManagementService,\n    PointOfInterest,\n} from './poi-management.service';\nimport { SettingsService } from '@placeos/common';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\n@Component({\n    selector: 'poi-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-4\">\n            <custom-table\n                class=\"block min-w-[32rem] w-full h-full\"\n                [dataSource]=\"features\"\n                [columns]=\"['name', 'level', 'location', 'actions']\"\n                [display_column]=\"['Name', 'Level', 'Location', ' ']\"\n                [column_size]=\"['flex', '10r', '10r', '9r']\"\n                [template]=\"{\n                    level: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No Points of Interest found.\"\n            ></custom-table>\n        </div>\n        <ng-template #level_template let-row=\"row\">\n            {{ (row.level_id | level)?.display_name || 'Unknown' }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <div matTooltip=\"Private QR Code\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                </div>\n                <div matTooltip=\"Public QR Code\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [disabled]=\"!row.short_link_id\"\n                        [content]=\"qr_menu\"\n                        (click)=\"loadPublicQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                </div>\n                <ng-template #qr_menu>\n                    <div class=\"bg-base-100 py-2 shadow rounded\">\n                        <div class=\"\" printable>\n                            <a\n                                [href]=\"row.qr_link | safe: 'url'\"\n                                target=\"_blank\"\n                                ref=\"noopener noreferrer\"\n                                class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                            >\n                                <img class=\"w-48\" [src]=\"row.qr_code\" />\n                            </a>\n                            <div\n                                class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                            >\n                                {{ row.name || row.id }}\n                            </div>\n                        </div>\n                        <button\n                            btn\n                            matRipple\n                            class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                            (click)=\"print()\"\n                        >\n                            Print QR Code\n                        </button>\n                    </div>\n                </ng-template>\n                <button btn icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"edit(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon>edit</app-icon>\n                            <span>Edit Point of Interest</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"remove(row)\">\n                        <div class=\"flex items-center space-x-2 text-red-500\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <span>Delete Point of Interest</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class POIListComponent {\n    public readonly features = this._manager.filtered_features;\n\n    public readonly edit = (region) =>\n        this._manager.editPointOfInterest(region);\n    public readonly remove = (region) =>\n        this._manager.removePointOfInterest(region);\n\n    public get kiosk_url() {\n        const path = this._settings.get('app.kiosk_url_path') || '/map-kiosk';\n        return `${window.location.origin}${path}`;\n    }\n\n    constructor(\n        private _manager: POIManagementService,\n        private _settings: SettingsService\n    ) {}\n\n    public loadQrCode(item: PointOfInterest) {\n        const location =\n            typeof item.location === 'string'\n                ? item.location\n                : item.location.join(',');\n        const link = `${this.kiosk_url}/#/explore?level=${encodeURIComponent(\n            item.level_id\n        )}&locate=${encodeURIComponent(location)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public loadPublicQrCode(item: PointOfInterest) {\n        const link = `${location.origin}/r/${item.short_link_id.split('-')[1]}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public print() {\n        window.print();\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { POIManagementService } from './poi-management.service';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-poi-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header\n                    class=\"flex items-center justify-between px-4 py-8\"\n                    [class.mb-2]=\"\n                        !use_region || (buildings | async)?.length <= 1\n                    \"\n                >\n                    <h2 class=\"text-2xl font-medium\">\n                        Point of Interest Management\n                    </h2>\n                    <button btn matRipple (click)=\"new()\">\n                        Add Point of Interest\n                    </button>\n                </header>\n                <div\n                    class=\"flex items-center justify-between mb-2 px-4\"\n                    *ngIf=\"use_region && (buildings | async)?.length > 1\"\n                >\n                    <mat-form-field appearance=\"outline\" class=\"w-64\">\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building\"\n                            (ngModelChange)=\"building = $event\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                building?.display_name || building?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <poi-list class=\"block w-full relative flex-1 h-1/2\"></poi-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class POIManagerComponent {\n    public readonly new = () => this._state.editPointOfInterest();\n\n    public readonly buildings = this._org.active_buildings;\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public set building(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: POIManagementService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { POIManagerComponent } from './poi-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { POIListComponent } from './poi-list.component';\nimport { POIModalComponent } from './poi-modal.component';\nimport { SelectPOIMapModalComponent } from './select-poi-map-modal.component';\nimport { MapShowElementComponent } from './map-show-element.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: POIManagerComponent },\n    { path: 'new', component: POIManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        POIManagerComponent,\n        POIListComponent,\n        POIModalComponent,\n        SelectPOIMapModalComponent,\n        MapShowElementComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class POIManagerModule {}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[]}