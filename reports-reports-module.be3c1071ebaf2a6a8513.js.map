{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInCalendarDays/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInDays/index.js","./src/app/reports/reports-state.service.ts","./src/app/reports/reports.utilities.ts","./src/app/reports/reports-options.component.ts","./src/app/reports/reports-menu.component.ts","./src/app/reports/reports.component.ts","./src/app/reports/report-spaces.component.ts","./src/app/reports/desks/report-desks-overall-list.component.ts","./src/app/reports/desks/report-desks-level-list.component.ts","./src/app/reports/desks/report-desks.component.ts","./src/app/reports/reports.module.ts"],"names":["MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","rf","ctx","pageSizeOption_r6","$implicit","MatPaginator_div_2_mat_form_field_3_Template","_r8","$event","_changePageSize","value","ctx_r3","_formFieldAppearance","color","pageSize","disabled","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r4","MatPaginator_div_2_Template","ctx_r0","length","MatPaginator_button_6_Template","_r10","firstPage","ctx_r1","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r12","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","this","changes","Subject","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","Math","max","min","ɵfac","t","ɵprov","factory","token","providedIn","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","parentIntl","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorMixinBase","_MatPaginatorMixinBase","_MatPaginatorBase","_changeDetectorRef","defaults","super","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_updateDisplayedPageSizeOptions","map","p","_initialized","_markInitialized","unsubscribe","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","push","sort","a","b","emit","undefined","ɵdir","type","inputs","outputs","features","MatPaginator","intl","changeDetectorRef","formFieldAppearance","ɵcmp","selectors","hostAttrs","exportAs","decls","vars","consts","template","previousPage","nextPage","directives","styles","encapsulation","changeDetection","MatPaginatorModule","ɵmod","ɵinj","providers","imports","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","startOfDayLeft","startOfDay","startOfDayRight","timestampLeft","getTime","getTimezoneOffsetInMilliseconds","timestampRight","round","compareLocalAsc","dateLeft","dateRight","diff","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","differenceInDays","toDate","sign","difference","abs","setDate","isLastDayNotFull","result","ReportsStateService","_org","_generate","_loading","BehaviorSubject","_active_bookings","_options","start","Date","end","_bookings_list","pipe","debounceTime","switchMap","_","console","log","options","getValue","next","zones","of","valueOf","endOfDay","filter","z","join","query","period_start","period_end","zone_ids","catchError","shareReplay","loading","asObservable","bookings","counts","filters","Promise","all","name","m","details","toPromise","list","forEach","id","count","stats","combineLatest","util_period","total_users","reduce","c","i","attendees","total_capacity","system","capacity","utilisation","duration","occupancy","avg_length","efficiency","events","generateReportForBookings","total","Object","keys","generateReportForDeskBookings","opts","includes","levelsForBuilding","building","lvl","format","bkn","toJSON","server_names","ReportsOptionsComponent","_state","_route","types","type_list","levels","active_levels","generateReport","downloadReport","setStartDate","date","setOptions","setEndDate","setZones","initialised","first","subscription","queryParamMap","params","has","get","split","level","levelWithID","buildings","find","bld","parent_id","ReportsMenuComponent","ReportsComponent","_router","parts","url","ReportSpacesComponent","total_count","formatDuration","minutes","toFixed","ReportDesksOverallListComponent","day_list","dates","isBefore","s","e","free","approved","addDays","download","data","take","d","ReportDesksLevelListComponent","level_list","zone","display_name","ROUTES","path","component","children","ReportDesksComponent","redirectTo","ReportsModule","forChild"],"mappings":"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","file":"reports-reports-module.be3c1071ebaf2a6a8513.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"appearance\", ctx_r3._formFieldAppearance)(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 6, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\nMatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nclass MatPaginatorMixinBase {\n}\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(MatPaginatorMixinBase));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons, } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() { return this._pageIndex; }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() { return this._length; }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() { return this._pageSize; }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() { return this._hidePageSize; }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = function _MatPaginatorBase_Factory(t) { return new (t || _MatPaginatorBase)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined)); };\n_MatPaginatorBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatPaginatorBase, inputs: { pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatPaginatorBase.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined }\n];\n_MatPaginatorBase.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatPaginatorBase, [{\n        type: Directive\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatCommonModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                    MatCommonModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n\n//# sourceMappingURL=paginator.js.map","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import { Injectable } from '@angular/core';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Booking, queryBookings } from '@user-interfaces/bookings';\nimport {\n    downloadFile,\n    HashMap,\n    jsonToCsv,\n    notifyError,\n} from '@user-interfaces/common';\nimport { CalendarEvent, queryEvents } from '@user-interfaces/events';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { differenceInDays, endOfDay, format, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport {\n    generateReportForBookings,\n    generateReportForDeskBookings,\n} from './reports.utilities';\n\nexport interface ReportOptions {\n    type?: 'desks' | 'events';\n    start?: number | Date;\n    end?: number | Date;\n    zones?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsStateService {\n    private _generate = new Subject<number>();\n    private _loading = new BehaviorSubject<string>('');\n    private _active_bookings = new BehaviorSubject<(CalendarEvent | Booking)[]>(\n        []\n    );\n\n    private _options = new BehaviorSubject<ReportOptions>({\n        start: new Date(),\n        end: new Date(),\n    });\n\n    private _bookings_list = this._generate.pipe(\n        debounceTime(500),\n        switchMap((_) => {\n            console.log('Report:', _);\n            const options = this._options.getValue();\n            this._loading.next('Loading report details...');\n            if (!options?.type && !options?.zones?.length) return of([]);\n            const start = startOfDay(\n                options?.start ? new Date(options.start) : new Date()\n            ).valueOf();\n            const end = endOfDay(\n                options?.end ? new Date(options.end) : start\n            ).valueOf();\n            const zones = options?.zones\n                ? options.zones.filter((z) => z !== 'All').join(',')\n                : '';\n            const query = {\n                period_start: Math.floor(start / 1000),\n                period_end: Math.floor(end / 1000),\n            };\n            return options.type === 'desks'\n                ? queryBookings({\n                      ...query,\n                      zones: zones,\n                      type: 'desk',\n                  })\n                : queryEvents({ ...query, zone_ids: zones });\n        }),\n        catchError((_) => []),\n        map((_) => {\n            this._loading.next('');\n            if (!_?.length) {\n                notifyError('No bookings for the selected levels and period');\n            }\n            this._active_bookings.next(_ || []);\n            return _;\n        }),\n        shareReplay()\n    );\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly options = this._options.asObservable();\n\n    public readonly bookings = this._active_bookings.asObservable();\n\n    public readonly counts = this._options.pipe(\n        debounceTime(500),\n        switchMap((filters) => {\n            const zones = (filters.zones || []).filter(\n                (z: any) => z !== -1 && z !== 'All'\n            );\n            return Promise.all(\n                zones.map((z) =>\n                    showMetadata(z, {\n                        name: 'desks',\n                    })\n                        .pipe(map((m) => [z, m.details.length]))\n                        .toPromise()\n                )\n            );\n        }),\n        catchError((_) => []),\n        map((list: [string, number][]) => {\n            const map: HashMap<number> = {};\n            this._active_bookings.next([]);\n            list.forEach(([id, count]) => (map[id] = count));\n            return map;\n        }),\n        shareReplay()\n    );\n\n    public readonly stats: Observable<HashMap> = combineLatest([\n        this.counts,\n        this.bookings,\n    ]).pipe(\n        map(([counts, list]) => {\n            return list[0] instanceof CalendarEvent\n                ? generateReportForBookings(\n                      list as CalendarEvent[],\n                      this.duration * 8\n                  )\n                : generateReportForDeskBookings(\n                      (list as Booking[]) || [],\n                      this.duration,\n                      counts\n                  );\n        })\n    );\n\n    public get duration() {\n        const opts = this._options.getValue();\n        return Math.abs(differenceInDays(opts.start, opts.end));\n    }\n\n    constructor(private _org: OrganisationService) {\n        this._bookings_list.subscribe((_) => _);\n    }\n\n    public generateReport() {\n        console.log('Report');\n        this._generate.next(new Date().valueOf());\n    }\n\n    public setOptions(options: ReportOptions) {\n        if (options.zones?.includes('All')) {\n            options.zones = [\n                'All',\n                ...this._org\n                    .levelsForBuilding(this._org.building)\n                    .map((lvl) => lvl.id),\n            ];\n        } else if (\n            options.zones &&\n            this._options.getValue()?.zones?.includes('All')\n        ) {\n            options.zones = [];\n        }\n        if (\n            options.start?.valueOf() ===\n                this._options.getValue().start?.valueOf() ||\n            options.end?.valueOf() === this._options.getValue().end?.valueOf()\n        )\n            return;\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public downloadReport() {\n        const options = this._options.getValue();\n        const bookings: HashMap[] = this._active_bookings.getValue();\n        downloadFile(\n            `report+${options.type}+${format(\n                options.start,\n                'yyyy-MM-dd'\n            )}+${format(options.end, 'yyyy-MM-dd')}.csv`,\n            jsonToCsv(\n                bookings.map((bkn) => {\n                    const details = bkn.toJSON();\n                    delete details.zones;\n                    delete details.server_names;\n                    return details;\n                })\n            )\n        );\n    }\n}\n","import { Booking } from '@user-interfaces/bookings';\nimport { HashMap } from '@user-interfaces/common';\nimport { CalendarEvent } from '@user-interfaces/events';\n\nexport function generateReportForDeskBookings(bookings: Booking[], util_period: number = 1, counts: HashMap<number> = {}) {\n    console.log('Counts:', counts);\n    const total = Object.keys(counts).reduce((c, i) => c + (counts[i] || 0), 0);\n    const utilisation = bookings.length / total;\n    return {\n        total,\n        count: bookings.length,\n        utilisation,\n        events: bookings\n    };\n}\n\nexport function generateReportForBookings(bookings: CalendarEvent[], util_period: number = 8) {\n    const total_users = bookings.reduce((c, i) => c + i.attendees.length, 0);\n    const total_capacity = bookings.reduce((c, i) => c + i.system.capacity, 0);\n    const utilisation = bookings.reduce((c, i) => c + i.duration, 0) / (util_period * 60);\n    const occupancy = total_users / total_capacity;\n    return {\n        count: bookings.length,\n        avg_length:\n            bookings.reduce((c, i) => c + i.duration, 0) / bookings.length,\n        efficiency: (utilisation + occupancy) / 2,\n        total_users,\n        total_capacity,\n        occupancy,\n        utilisation,\n        events: bookings\n    };\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, Identity } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { ReportsStateService } from './reports-state.service';\n\n@Component({\n    selector: 'reports-options',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-48\">\n            <mat-select\n                multiple\n                [ngModel]=\"(options | async)?.zones\"\n                (ngModelChange)=\"setZones($event)\"\n                placeholder=\"Select Levels...\"\n            >\n                <mat-option value=\"All\">All Levels</mat-option>\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"w-64\">\n            <mat-date-range-input [rangePicker]=\"picker\">\n                <input\n                    matStartDate\n                    [ngModel]=\"(options | async)?.start\"\n                    (ngModelChange)=\"$event ? setStartDate($event) : ''\"\n                    placeholder=\"Start date\"\n                />\n                <input\n                    matEndDate\n                    [ngModel]=\"(options | async)?.end\"\n                    (ngModelChange)=\"$event ? setEndDate($event) : ''\"\n                    placeholder=\"End date\"\n                />\n            </mat-date-range-input>\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-date-range-picker #picker></mat-date-range-picker>\n        </mat-form-field>\n        <button\n            mat-button\n            class=\"ml-4\"\n            [disabled]=\"!!(loading | async)\"\n            (click)=\"generateReport()\"\n        >\n            <mat-spinner *ngIf=\"loading | async\" [diameter]=\"32\"></mat-spinner>\n            <p *ngIf=\"!(loading | async)\">Generate Report</p>\n        </button>\n        <button\n            mat-button\n            class=\"ml-4\"\n            [disabled]=\"!(bookings | async)?.length\"\n            (click)=\"downloadReport()\"\n        >\n            <p>Download Report</p>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n            }\n\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                margin-left: 1em;\n            }\n\n            mat-slide-toggle div {\n                width: 5.5em;\n                white-space: initial;\n                line-height: 1.2em;\n            }\n        `,\n    ],\n})\nexport class ReportsOptionsComponent extends BaseClass {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly loading = this._state.loading;\n\n    public readonly bookings = this._state.bookings;\n\n    public readonly options = this._state.options;\n\n    public readonly generateReport = () => this._state.generateReport();\n\n    public readonly downloadReport = () => this._state.downloadReport();\n\n    public readonly setStartDate = (date) =>\n        this._state.setOptions({ start: new Date(date) });\n\n    public readonly setEndDate = (date) =>\n        this._state.setOptions({ end: new Date(date) });\n\n    public readonly setZones = (zones) => this._state.setOptions({ zones });\n\n    constructor(\n        private _state: ReportsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.setZones(zones);\n                    }\n                }\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'reports-menu,[reports-menu]',\n    template: `\n        <a\n            [routerLink]=\"['/reports', 'desks']\"\n            matRipple\n            class=\"h-64 w-64 m-4 p-4 flex flex-col items-center justify-center bg-white rounded shadow hover:bg-gray-100\"\n        >\n            <app-icon class=\"text-8xl\">room</app-icon>\n            <h3 class=\"text-xl font-bold mb-4\">Desks</h3>\n            <div class=\"flex items-center\">\n                <p>View Report</p>\n                <app-icon class=\"ml-2\">chevron_right</app-icon>\n            </div>\n        </a>\n        <a\n            [routerLink]=\"['/reports', 'spaces']\"\n            matRipple\n            class=\"h-64 w-64 m-4 p-4 flex flex-col items-center justify-center bg-white rounded shadow hover:bg-gray-100\"\n        >\n            <app-icon class=\"text-8xl\">meeting_room</app-icon>\n            <h3 class=\"text-xl font-bold mb-4\">Rooms</h3>\n            <div class=\"flex items-center\">\n                <p>View Report</p>\n                <app-icon class=\"ml-2\">chevron_right</app-icon>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class ReportsMenuComponent {\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: '[app-reports]',\n    template: `\n        <sidebar class=\"h-full\"></sidebar>\n        <main class=\"relative overflow-hidden flex flex-col flex-1 w-1/2 h-full\">\n            <reports-options></reports-options>\n            <div class=\"flex-1 h-1/2 w-full overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <div reports-menu *ngIf=\"path === 'reports'\" class=\"absolute inset-0\"></div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class ReportsComponent {\n\n    public get path() {\n        const parts = this._router.url.split('/');\n        return parts[parts.length - 1];\n    }\n\n    constructor(private _router: Router) {\n\n    }\n}\n","import { Component } from '@angular/core';\nimport { formatDuration } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { ReportsStateService } from './reports-state.service';\n\n@Component({\n    selector: '[report-spaces]',\n    template: `\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ng-container *ngIf=\"total_count | async; else empty_state\">\n                <div\n                    class=\"m-4 p-4 rounded bg-white shadow flex justify-center items-center space-x-2\"\n                >\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Total Bookings</h3>\n                        <p>{{ (total_count | async) || 0 }}</p>\n                    </div>\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Average Bookings Length</h3>\n                        <p>{{ (avg_length | async) || 'None' }}</p>\n                    </div>\n                </div>\n                <div\n                    class=\"m-4 p-4 rounded flex justify-center items-center space-x-4 text-center\"\n                >\n                    <div\n                        class=\"flex flex-col items-center justify-center bg-primary text-white shadow rounded p-4 w-48 h-48\"\n                    >\n                        <h3>Overall Efficiency</h3>\n                        <p>{{ (efficiency | async) || 0 }}%</p>\n                    </div>\n                    <div\n                        class=\"flex flex-col items-center bg-primary text-white border-4 border-primary shadow overflow-hidden rounded pb-4 w-48 h-48\"\n                    >\n                        <div class=\"flex divide-x-4 divide-primary mb-4\">\n                            <div\n                                class=\"flex flex-col items-center justify-center flex-1 bg-gray-200 text-black\"\n                            >\n                                <h3>Total Attendees</h3>\n                                <p>{{ (total_users | async) || 0 }}</p>\n                            </div>\n                            <div\n                                class=\"flex flex-col items-center justify-center flex-1 bg-gray-200 text-black\"\n                            >\n                                <h3>Total Capacity</h3>\n                                <p>{{ (total_capacity | async) || 0 }}</p>\n                            </div>\n                        </div>\n                        <h3>Occupancy</h3>\n                        <p>{{ (occupancy | async) || 0 }}%</p>\n                    </div>\n                    <div\n                        class=\"flex flex-col items-center justify-center bg-primary text-white rounded p-4 w-48 h-48\"\n                    >\n                        <h3>Utilisation</h3>\n                        <p>{{ (utilisation | async) || 0 }}%</p>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n                <p simple>Loading report data...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <p simple>\n                    Select levels and time period to generate a report.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            h3 {\n                font-weight: 500;\n            }\n\n            p:not([simple]) {\n                font-size: 1.75rem;\n            }\n        `,\n    ],\n})\nexport class ReportSpacesComponent {\n    public readonly total_count = this._state.stats.pipe(\n        map((i) => i.count || 0)\n    );\n    public readonly avg_length = this._state.stats.pipe(\n        map((i) => formatDuration({ minutes: i.avg_length || 0 }))\n    );\n    public readonly efficiency = this._state.stats.pipe(\n        map((i) => ((i.efficiency || 0) * 100).toFixed(1))\n    );\n    public readonly total_users = this._state.stats.pipe(\n        map((i) => i.total_users || 0)\n    );\n    public readonly total_capacity = this._state.stats.pipe(\n        map((i) => i.total_capacity || 0)\n    );\n    public readonly occupancy = this._state.stats.pipe(\n        map((i) => ((i.occupancy || 0) * 100).toFixed(1))\n    );\n    public readonly utilisation = this._state.stats.pipe(\n        map((i) => ((i.utilisation || 0) * 100).toFixed(1))\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: ReportsStateService) {}\n\n    public ngOnInit() {\n        this._state.setOptions({ type: 'events' });\n    }\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@user-interfaces/bookings';\nimport { downloadFile, jsonToCsv, timePeriodsIntersect } from '@user-interfaces/common';\nimport { addDays, endOfDay, format, isBefore, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay, take } from 'rxjs/operators';\n\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: 'report-desks-overall-list',\n    template: `\n        <div class=\"m-4 rounded bg-white shadow overflow-hidden\">\n            <div class=\"border-b border-gray-300 p-4 flex items-center\">\n                <h3 class=\"font-bold text-xl flex-1\">Daily Utilisation</h3>\n                <button mat-icon-button (click)=\"download()\">\n                    <app-icon>download</app-icon>\n                </button>\n            </div>\n            <div\n                table-head\n                class=\"flex items-center font-medium border-b border-gray-200\"\n            >\n                <div class=\"w-1/3 p-4\">Date</div>\n                <div class=\"w-1/6 p-4\">Free Desks</div>\n                <div class=\"w-1/6 p-4\">Approved Bookings</div>\n                <div class=\"w-1/6 p-4\">Total Requests</div>\n                <div class=\"w-1/6 p-4\">Utilisation</div>\n            </div>\n            <div table-body>\n                <div\n                    table-row\n                    class=\"flex items-center border-b border-gray-200\"\n                    *ngFor=\"\n                        let date of day_list\n                            | async\n                            | slice: page * 7:page * 7 + 7\n                    \"\n                >\n                    <div class=\"w-1/3 p-4\">\n                        {{ date.date | date: 'MMMM d, y(EEE)' }}\n                    </div>\n                    <div class=\"w-1/6 p-4\">\n                        {{ date.free || 0 }} / {{ date.total || 0 }}\n                    </div>\n                    <div class=\"w-1/6 p-4\">{{ date.approved || 0 }}</div>\n                    <div class=\"w-1/6 p-4\">{{ date.count || 0 }}</div>\n                    <div class=\"w-1/6 p-4\">{{ date.utilisation }}%</div>\n                </div>\n            </div>\n            <div table-footer>\n                <mat-paginator\n                    [length]=\"(day_list | async)?.length || 0\"\n                    [pageSize]=\"7\"\n                    (page)=\"page = $event.pageIndex\"\n                    [hidePageSize]=\"true\"\n                >\n                </mat-paginator>\n            </div>\n        </div>\n    `,\n})\nexport class ReportDesksOverallListComponent {\n    public page: number = 0;\n\n    public readonly day_list = combineLatest([\n        this._state.options,\n        this._state.stats,\n    ]).pipe(\n        map(([options, stats]) => {\n            const { start, end } = options;\n            this.page = 0;\n            let date = start;\n            const dates = [];\n            while (isBefore(date, end)) {\n                const s = startOfDay(date).valueOf();\n                const e = endOfDay(s).valueOf();\n                const events: Booking[] = stats.events.filter((bkn) =>\n                    timePeriodsIntersect(\n                        s,\n                        e,\n                        bkn.date,\n                        bkn.date + bkn.duration * 60 * 1000\n                    )\n                );\n                dates.push({\n                    date: s,\n                    total: stats.total,\n                    free: stats.total - events.length,\n                    approved: events.reduce(\n                        (c, e) => c + (e.approved ? 1 : 0),\n                        0\n                    ),\n                    count: events.length,\n                    utilisation: ((events.length / stats.total) * 100).toFixed(\n                        1\n                    ),\n                });\n                date = addDays(date, 1);\n            }\n            return dates;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly download = async () => {\n        let data = await this.day_list.pipe(take(1)).toPromise();\n        data = data.map(d => ({ ...d, date: format(d.date, 'MMMM d, y(EEE)') }))\n        downloadFile('desks-usage.csv', jsonToCsv(data));\n    }\n\n    constructor(private _state: ReportsStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@user-interfaces/bookings';\nimport { downloadFile, jsonToCsv, timePeriodsIntersect } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { addDays, differenceInDays, endOfDay, format, isBefore, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay, take } from 'rxjs/operators';\n\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: 'report-desks-levels-list',\n    template: `\n        <div class=\"m-4 rounded bg-white shadow overflow-hidden\">\n            <div class=\"border-b border-gray-300 p-4 flex items-center\">\n                <h3 class=\"font-bold text-xl flex-1\">Level Utilisation</h3>\n                <button mat-icon-button (click)=\"download()\">\n                    <app-icon>download</app-icon>\n                </button>\n            </div>\n            <div\n                table-head\n                class=\"flex items-center font-medium border-b border-gray-200\"\n            >\n                <div class=\"w-1/3 p-4\">Level</div>\n                <div class=\"w-1/6 p-4\">Avg. Free Desks</div>\n                <div class=\"w-1/6 p-4\">Approved Bookings</div>\n                <div class=\"w-1/6 p-4\">Total Requests</div>\n                <div class=\"w-1/6 p-4\">Utilisation</div>\n            </div>\n            <div table-body>\n                <div\n                    table-row\n                    class=\"flex items-center border-b border-gray-200\"\n                    *ngFor=\"\n                        let lvl of level_list\n                            | async\n                            | slice: page * 7:page * 7 + 7\n                    \"\n                >\n                    <div class=\"w-1/3 p-4\">\n                        {{ lvl.name }}\n                    </div>\n                    <div class=\"w-1/6 p-4\">\n                        {{ lvl.free || 0 }} / {{ lvl.total || 0 }}\n                    </div>\n                    <div class=\"w-1/6 p-4\">{{ lvl.approved || 0 }}</div>\n                    <div class=\"w-1/6 p-4\">{{ lvl.count || 0 }}</div>\n                    <div class=\"w-1/6 p-4\">{{ lvl.utilisation }}%</div>\n                </div>\n            </div>\n            <div table-footer>\n                <mat-paginator\n                    [length]=\"(level_list | async)?.length || 0\"\n                    [pageSize]=\"7\"\n                    (page)=\"page = $event.pageIndex\"\n                    [hidePageSize]=\"true\"\n                >\n                </mat-paginator>\n            </div>\n        </div>\n    `,\n})\nexport class ReportDesksLevelListComponent {\n    public page: number = 0;\n\n    public readonly level_list = combineLatest([\n        this._state.options,\n        this._state.stats,\n        this._state.counts\n    ]).pipe(\n        map(([options, stats, counts]) => {\n            const { start, end, zones } = options;\n            const duration = differenceInDays(end, start);\n            this.page = 0;\n            const levels = [];\n            console.log('Duration:', duration);\n            for (const zone of zones) {\n                if (zone === 'All') continue;\n                const lvl = this._org.levelWithID([zone]);\n                const count = counts[zone] || 0\n                const events = stats.events.filter(bkn => bkn.zones.includes(zone));\n                console.log('Evnets:', events.length)\n                let free: any = ((count * duration) - events.length) / duration;\n                if (free % 1 !== 0) { free = free.toFixed(2); }\n                levels.push({\n                    name: lvl?.display_name || lvl?.name,\n                    free,\n                    total: count,\n                    count: events.length,\n                    utilisation: (((events.length / (count * duration)) * 100) || 0).toFixed(2),\n                });\n            }\n            return levels;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly download = async () => {\n        let data = await this.level_list.pipe(take(1)).toPromise();\n        downloadFile('desks-levels-usage.csv', jsonToCsv(data));\n    }\n\n    constructor(private _state: ReportsStateService, private _org: OrganisationService) {}\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: '[report-desks]',\n    template: `\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ng-container *ngIf=\"total_count | async; else empty_state\">\n                <div\n                    class=\"m-4 p-4 rounded bg-white shadow flex justify-center items-center space-x-2\"\n                >\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Total Bookings</h3>\n                        <p>{{ (total_count | async) || 0 }}</p>\n                    </div>\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Utilisation</h3>\n                        <p>{{ (utilisation | async) || 0 }}%</p>\n                    </div>\n                </div>\n                <report-desks-overall-list></report-desks-overall-list>\n                <report-desks-levels-list></report-desks-levels-list>\n            </ng-container>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n                <p simple>Loading report data...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <p simple>\n                    Select levels and time period to generate a report.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            h3 {\n                font-weight: 500;\n            }\n\n            p:not([simple]) {\n                font-size: 1.75rem;\n            }\n        `,\n    ],\n})\nexport class ReportDesksComponent {\n    public readonly total_count = this._state.stats.pipe(\n        map((i) => i.count || 0)\n    );\n    public readonly utilisation = this._state.stats.pipe(\n        map((i) => ((i.utilisation || 0) * 100).toFixed(1))\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: ReportsStateService) {}\n\n    public ngOnInit() {\n        this._state.setOptions({ type: 'desks' });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedSpacesModule } from '@user-interfaces/spaces';\nimport { SharedUsersModule } from '@user-interfaces/users';\nimport { ReportsOptionsComponent } from './reports-options.component';\nimport { ReportSpacesComponent } from './report-spaces.component';\nimport { ReportDesksComponent } from './desks/report-desks.component';\nimport { ReportDesksOverallListComponent } from './desks/report-desks-overall-list.component';\nimport { ReportDesksLevelListComponent } from './desks/report-desks-level-list.component';\nimport { ReportsMenuComponent } from './reports-menu.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: ReportsComponent,\n        children: [\n            { path: '' },\n            { path: 'spaces', component: ReportSpacesComponent },\n            { path: 'desks', component: ReportDesksComponent },\n            { path: '**', redirectTo: 'desks' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        ReportsComponent,\n        ReportsOptionsComponent,\n        ReportSpacesComponent,\n        ReportDesksComponent,\n        ReportDesksOverallListComponent,\n        ReportDesksLevelListComponent,\n        ReportsMenuComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatPaginatorModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class ReportsModule {}\n"],"sourceRoot":"webpack:///"}