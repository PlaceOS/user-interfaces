{"version":3,"file":"default-libs_bookings_src_lib_group-event-details-modal_component_ts.js","mappings":"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","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","time_format","ctx_r5","type","ctx_r6","location","_r10","ctx_r9","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","_c0","_c1","ctx_r1","id","title","status","period","_r3","raw_description","asset_id","for_current_user","booking_type","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","is_done","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","ngOnChanges","changes","removeHtmlTags","description","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","html","DOMParser","parseFromString","body","textContent","timeout","ref","open","GroupEventDetailsModalComponent","BookingDetailsModalComponent","data","concierge","componentInstance","emit","static","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_5__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","ctx_r10","checked_in","_r14","ctx_r13","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","_r12","BookingDetailsModalComponent_div_10_button_1_Template","ctx_r2","checked_out_at","checked_out","auto_checkin","state","_r5","item_r18","quantity","request_r16","_r20","$implicit","ctx_r19","show_request","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","deliver_at","ctx_r15","items","BookingDetailsModalComponent_ng_container_36_div_5_Template","ctx_r3","valid_assets","length","map_id","_r22","ctx_r21","_r24","ctx_r23","_r26","ctx_r25","building","buildings","find","bld","includes","can_edit","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","hide_map","content","MapPinComponent","has_assets","linked_bookings","_","_this","_asyncToGenerator","checkinBooking","toPromise","catch","notifyError","notifySuccess","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","booking_rules","building_list","Promise","all","showMetadata","building_rules","rules","details","mapping","available_resources","merge","timer","filter","restrictions","user","startOfDay","valueOf","queryBookings","period_start","getUnixTime","period_end","zone_id","organisation","limit","bookings","user_name","asset","rulesForResource","host","zone","hidden","groups","some","grp","bookable","every","parent_id","bkn","assigned_to","catchError","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","event_id","result","saveBooking","user_id","phone","department","ical_uid","booking_id","error","assets","requests","validateAssetRequestsForResource","from_booking","booked_by_email","console","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","idx","unavailable","group_name","i","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","use_region","map_metadata","metadata","d","lockers","bank_id","forkJoin","listChildMetadata","flatten","map_url","count","nearby_resources","findNearbyFeature","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_33__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_4__","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","SharedSpacesModule","SharedEventsModule","SharedUsersModule","$event","_r9","ctx_r8","_r11","_r13","ctx_r12","ctx_r7","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","ctx_r14","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","selected_features","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","ctx_r11","changeResources","removeResource","toggleFavourite","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","_r4","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r2","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_2","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r12","setBuilding","DeskFiltersComponent_ng_container_12_mat_form_field_1_mat_option_5_Template","tmp_2_0","lvl_r16","_r18","ctx_r17","DeskFiltersComponent_ng_container_12_mat_form_field_3_mat_option_3_Template","tmp_0_0","levels","DeskFiltersComponent_ng_container_12_mat_form_field_1_Template","DeskFiltersComponent_ng_container_12_mat_form_field_3_Template","hide_levels","reg_r22","setRegion","DeskFiltersComponent_ng_container_13_mat_form_field_1_mat_option_2_Template","region","regions","level_r28","DeskFiltersComponent_ng_container_13_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r26","_r30","ctx_r29","DeskFiltersComponent_ng_container_13_mat_form_field_3_mat_optgroup_5_Template","ctx_r20","region_levels","DeskFiltersComponent_ng_container_13_mat_form_field_1_Template","DeskFiltersComponent_ng_container_13_mat_form_field_3_Template","_r32","ctx_r31","use_24hr","tmp_3_0","feat_r34","_r36","ctx_r35","tmp_1_0","ctx_r33","DeskFiltersComponent_section_32_div_3_Template","_r38","ctx_r37","reg","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","active_levels","region_list","active_region","l","tags","dismiss","setLevel","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_ng_container_12_Template","DeskFiltersComponent_ng_container_13_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r4","DeskMapComponent_mat_form_field_1_mat_option_2_Template","level_r11","DeskMapComponent_ng_template_2_mat_optgroup_2_mat_option_1_Template","bld_r9","DeskMapComponent_ng_template_2_mat_optgroup_2_Template","DeskMapComponent","is_displayed","zoom","center","x","y","coordinates","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","latitude","longitude","split","parseFloat","setZoom","new_zoom","max","min","resetMap","_angular_core__WEBPACK_IMPORTED_MODULE_6__","DeskMapComponent_mat_form_field_1_Template","DeskMapComponent_ng_template_2_Template","displayed","selected_ids","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","_r7","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_div_16_Template","GroupEventCardComponent_button_0_div_17_Template","attendees","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_div_30_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent","space_pipe","SpacePipe","transform","linked_event","system_id","featured","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","is_interested","is_going","is_onsite","GroupEventDetailsModalComponent_div_96_interactive_map_3_Template","GroupEventDetailsModalComponent_div_96_span_9_Template","GroupEventDetailsModalComponent_div_96_span_13_Template","GroupEventDetailsModalComponent_div_96_span_14_Template","showing_map","_r17","ctx_r16","show_attendees","ctx_r18","is_online","attendance_type","attendance","guest_details","locate","notifyInfo","toggleInterest","log","bookingRemoveGuest","bookingAddGuest","toggleAttendance","checkinBookingGuest","guest","_angular_core__WEBPACK_IMPORTED_MODULE_8__","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_11_Template","GroupEventDetailsModalComponent_div_82_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_span_95_Template","GroupEventDetailsModalComponent_div_96_Template","GroupEventDetailsModalComponent_div_97_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","company","item_r22","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","sent","InviteVisitorFormComponent","_service","done","last_count","visitors","initFormZone","setValidators","Validators","required","visitor_details","old_visitors","_bookForMany","_bookForOne","User","randomString","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","feat_r2","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","zone_ids","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","bld_r10","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r14","_r16","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r20","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r26","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r24","_r28","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r30","toggleFeature","ParkingSpaceFiltersComponent_section_40_div_3_Template","_r34","_form","max_duration","lvl","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_section_40_Template","ParkingSpaceFiltersComponent_div_42_Template","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","opt_r5","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","available_spaces","setCustomZone","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","style","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r1","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/group-event-card.component.ts","./libs/bookings/src/lib/group-event-details-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{ raw_description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit()\n                )\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    notifyError,\n    notifySuccess,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                rules[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n                limit: 1000,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[\n                                    asset.zone?.id || this._org.building.id\n                                ] || []\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                ) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            event_id\n                ? { ical_uid: value.ical_uid, event_id: event_id }\n                : parent_id\n                ? { booking_id: parent_id }\n                : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || []\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata)))\n                    )\n                )\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <label for=\"location\" i18n>Location</label>\n                <ng-container *ngIf=\"!use_region\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngIf=\"use_region\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option [value]=\"\">Any Level</mat-option>\n                            <mat-optgroup\n                                *ngFor=\"let bld of region_levels | async\"\n                                [label]=\"bld.name\"\n                            >\n                                <mat-option\n                                    [value]=\"level.id\"\n                                    *ngFor=\"let level of bld.levels\"\n                                >\n                                    {{ level.display_name || level.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full no-subscript\"\n                *ngIf=\"!use_region; else region_level_view\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <ng-template #region_level_view>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"level\"\n                        (ngModelChange)=\"setLevel($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Any Level\"\n                        i18n-placeholder\n                    >\n                        <mat-optgroup\n                            *ngFor=\"let bld of region_levels | async\"\n                            [label]=\"bld.name\"\n                        >\n                            <mat-option\n                                [value]=\"level\"\n                                *ngFor=\"let level of bld.levels\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-optgroup>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels;\n        })\n    );\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { GroupEventDetailsModalComponent } from '@placeos/bookings';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-h-full min-w-full\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div class=\"opacity-60\" *ngIf=\"space?.id\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!space?.id\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full w-1/2 max-w-[20rem] bg-base-200 overflow-hidden\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-h-full min-w-full\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div class=\"opacity-60\" *ngIf=\"space?.id\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!space?.id\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition: box-shadow 300ms, border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: any;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.event.linked_event?.system_id\n        );\n        this.raw_description = this.removeHtmlTags(this.event.description);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { booking: this.event, concierge: false },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    Booking,\n    bookingAddGuest,\n    bookingRemoveGuest,\n    checkinBookingGuest,\n} from '@placeos/bookings';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"booking.images?.length\"\n                    auth\n                    [source]=\"booking.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button icon mat-dialog-close class=\"absolute top-1 right-1\">\n                <app-icon>close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ booking.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"booking.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>Event by {{ booking.user_name }}</div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ booking.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ booking.date | date: time_format }} -\n                                {{\n                                    booking.date + booking.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ booking.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span\n                            [innerHTML]=\"booking.description | sanitize\"\n                        ></span>\n                        <span *ngIf=\"!booking.description\" class=\"opacity-30\">\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                    <div class=\"border border-base-300 w-full\">\n                        <button\n                            matRipple\n                            class=\"relative w-full h-40 bg-base-200\"\n                            (click)=\"viewLocation()\"\n                        >\n                            <interactive-map\n                                *ngIf=\"!showing_map\"\n                                [src]=\"level?.map_id\"\n                                [features]=\"features\"\n                                [styles]=\"styles\"\n                            ></interactive-map>\n                        </button>\n                        <div class=\" p-4 space-y-2\">\n                            <div>\n                                {{\n                                    (\n                                        booking.linked_event?.system_id\n                                        | space\n                                        | async\n                                    )?.display_name\n                                }}\n                                <span\n                                    *ngIf=\"\n                                        !(\n                                            booking.linked_event?.system_id\n                                            | space\n                                            | async\n                                        )?.display_name\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    Remote Event\n                                </span>\n                            </div>\n                            <div class=\"opacity-30 text-sm\">\n                                <span *ngIf=\"building && level\">\n                                    {{\n                                        building.display_name || building.name\n                                    }},\n                                    {{ level?.display_name || level?.name }}\n                                </span>\n                                <span\n                                    *ngIf=\"!building || !level\"\n                                    class=\"opacity-30\"\n                                >\n                                    No location set for this event\n                                </span>\n                            </div>\n                            <div class=\"flex items-center space-x-2 pt-4\">\n                                <div\n                                    class=\"flex items-center justify-center h-10 w-10 rounded-full bg-base-200\"\n                                    matTooltip=\"WiFi available\"\n                                >\n                                    <app-icon class=\"text-2xl\">wifi</app-icon>\n                                </div>\n                                <div\n                                    class=\"flex items-center justify-center h-10 w-10 rounded-full bg-base-200\"\n                                    matTooltip=\"Cafe available\"\n                                >\n                                    <app-icon class=\"text-2xl\"\n                                        >local_cafe</app-icon\n                                    >\n                                </div>\n                                <div\n                                    class=\"flex items-center justify-center h-10 w-10 rounded-full bg-base-200\"\n                                    matTooltip=\"Open spaces nearby\"\n                                >\n                                    <app-icon class=\"text-2xl\">chat</app-icon>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [list]=\"booking.attendees\"\n                    [host]=\"booking.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public booking: Booking = this._data.booking;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.booking as any).featured ||\n            this.booking.extension_data?.featured\n        );\n    }\n    public get is_onsite() {\n        return this.booking.linked_event?.system_id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.booking.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get attendance() {\n        return (\n            this.booking.attendees?.filter((_: any) => _.checked_in)?.length ||\n            0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.booking.linked_event?.system_id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.booking.attendees?.find((_) => _.email === user.email);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { booking: Booking; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.booking.linked_event?.system_id\n        );\n        const id = this.space?.map_id || this.booking.extension_data?.map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        this.level = this._org.levelWithID(this.booking.zones);\n        this.building =\n            this._org.buildings.find((_) =>\n                this.booking.zones.includes(_.id)\n            ) || this._org.building;\n        this.locate = this.booking.extension_data?.map_id || '';\n    }\n\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        console.log('User:', user, this.is_interested);\n        if (this.is_interested && user) {\n            await bookingRemoveGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = (\n                this.booking.attendees || []\n            ).filter((_: any) => _.email !== user.email);\n        } else {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinBookingGuest(\n            this.booking.id,\n            user.email,\n            !this.is_going\n        ).toPromise();\n        const guest = this.booking.attendees.find(\n            (_) => _.email === user.email\n        );\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n"],"x_google_ignoreList":[]}