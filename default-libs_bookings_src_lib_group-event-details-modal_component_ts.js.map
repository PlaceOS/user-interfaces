{"version":3,"file":"default-libs_bookings_src_lib_group-event-details-modal_component_ts.js","mappings":"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","names":["i0","ctx_r0","day","BookingCardComponent_h4_0_span_1_Template","show_day","booking","date","time_format","type","location","_r2","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","_c0","_c1","id","title","status","period","desk_icon_r3","raw_description","asset_id","for_current_user","booking_type","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","is_done","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","ngOnChanges","changes","removeHtmlTags","description","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","html","DOMParser","parseFromString","body","textContent","timeout","ref","open","GroupEventDetailsModalComponent","BookingDetailsModalComponent","data","concierge","componentInstance","emit","static","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_5__","VBU","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","ctx_r1","extension_data","images","checked_in","_r3","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","state","menu_r5","item_r8","quantity","request_r7","_r6","$implicit","show_request","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","deliver_at","items","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","length","map_id","_r9","_r10","_r11","building","buildings","find","bld","includes","can_edit","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","hide_map","content","MapPinComponent","has_assets","linked_bookings","_","_this","_asyncToGenerator","checkinBooking","toPromise","catch","notifyError","notifySuccess","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","_r1","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","booking_rules","building_list","Promise","all","showMetadata","building_rules","rules","details","mapping","available_resources","merge","timer","filter","restrictions","user","startOfDay","valueOf","queryBookings","period_start","getUnixTime","period_end","zone_id","organisation","limit","bookings","user_name","asset","rulesForResource","host","zone","hidden","groups","some","grp","bookable","every","parent_id","bkn","assigned_to","catchError","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","event_id","result","saveBooking","user_id","phone","department","ical_uid","booking_id","error","assets","requests","validateAssetRequestsForResource","from_booking","booked_by_email","console","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","idx","unavailable","group_name","i","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","use_region","map_metadata","metadata","d","lockers","bank_id","forkJoin","listChildMetadata","flatten","map_url","count","nearby_resources","findNearbyFeature","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_33__","jDH","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_4__","SharedBookingsModule","core","$C","G2t","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","SharedSpacesModule","SharedEventsModule","SharedUsersModule","$event","ctx_r2","_r4","_r5","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","load_state_r6","opt_r3","ctx_r3","selected_features","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r5","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","toggleFavourite","placeholder_r6","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","desk","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_1","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","reg_r4","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","region","regions","bld_r6","setBuilding","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","tmp_3_0","lvl_r8","tmp_4_0","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","levels","use_24hr","feat_r11","DeskFiltersComponent_section_36_div_3_Template","_r12","reg","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","region_list","active_region","levelsForRegion","levelsForBuilding","lvl","tags","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_6__","hide_levels","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","tmp_2_0","tmp_13_0","tmp_15_0","desk_r2","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","placeholder_r4","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","empty_state_r5","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","DeskMapComponent","is_displayed","zoom","center","x","y","coordinates","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","latitude","longitude","split","parseFloat","setZoom","new_zoom","max","min","resetMap","DeskMapComponent_mat_form_field_1_Template","tmp_0_0","displayed","selected_ids","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_div_16_Template","GroupEventCardComponent_button_0_div_17_Template","attendees","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_div_30_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent","space_pipe","SpacePipe","transform","linked_event","system_id","featured","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","featured_card_r4","is_interested","is_going","is_onsite","GroupEventDetailsModalComponent_div_96_interactive_map_3_Template","GroupEventDetailsModalComponent_div_96_span_9_Template","GroupEventDetailsModalComponent_div_96_span_13_Template","GroupEventDetailsModalComponent_div_96_span_14_Template","showing_map","show_attendees","is_online","attendance_type","attendance","guest_details","locate","notifyInfo","toggleInterest","log","bookingRemoveGuest","bookingAddGuest","toggleAttendance","checkinBookingGuest","guest","_angular_core__WEBPACK_IMPORTED_MODULE_8__","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_11_Template","GroupEventDetailsModalComponent_div_82_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_span_95_Template","GroupEventDetailsModalComponent_div_96_Template","GroupEventDetailsModalComponent_div_97_Template","concierge_menu_r5","menu_r6","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","setVisitor","company","item_r10","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r15","onDone","sent","InviteVisitorFormComponent","_service","done","visitors","initFormZone","setValidators","Validators","required","visitor_details","old_visitors","_bookForMany","_bookForOne","User","randomString","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","locker_r2","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","empty_state_r3","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","bld_r4","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r6","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r13","toggleFeature","ParkingSpaceFiltersComponent_section_40_div_3_Template","_r14","_form","max_duration","active_levels","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_section_40_Template","ParkingSpaceFiltersComponent_div_42_Template","tmp_10_0","tmp_12_0","space_r2","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","available_spaces","setCustomZone","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","style","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/group-event-card.component.ts","./libs/bookings/src/lib/group-event-details-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{ raw_description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit()\n                )\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    notifyError,\n    notifySuccess,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                rules[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n                limit: 1000,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[\n                                    asset.zone?.id || this._org.building.id\n                                ] || []\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                ) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            event_id\n                ? { ical_uid: value.ical_uid, event_id: event_id }\n                : parent_id\n                ? { booking_id: parent_id }\n                : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || []\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata)))\n                    )\n                )\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div class=\"opacity-30 text-xs\">\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { GroupEventDetailsModalComponent } from '@placeos/bookings';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-h-full min-w-full\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div class=\"opacity-60\" *ngIf=\"space?.id\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!space?.id\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full w-1/2 max-w-[20rem] bg-base-200 overflow-hidden\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-h-full min-w-full\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div class=\"opacity-60\" *ngIf=\"space?.id\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!space?.id\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition: box-shadow 300ms, border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: any;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.event.linked_event?.system_id\n        );\n        this.raw_description = this.removeHtmlTags(this.event.description);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { booking: this.event, concierge: false },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    Booking,\n    bookingAddGuest,\n    bookingRemoveGuest,\n    checkinBookingGuest,\n} from '@placeos/bookings';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"booking.images?.length\"\n                    auth\n                    [source]=\"booking.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button icon mat-dialog-close class=\"absolute top-1 right-1\">\n                <app-icon>close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ booking.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"booking.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>Event by {{ booking.user_name }}</div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ booking.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ booking.date | date: time_format }} -\n                                {{\n                                    booking.date + booking.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ booking.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span\n                            [innerHTML]=\"booking.description | sanitize\"\n                        ></span>\n                        <span *ngIf=\"!booking.description\" class=\"opacity-30\">\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                    <div class=\"border border-base-300 w-full\">\n                        <button\n                            matRipple\n                            class=\"relative w-full h-40 bg-base-200\"\n                            (click)=\"viewLocation()\"\n                        >\n                            <interactive-map\n                                *ngIf=\"!showing_map\"\n                                [src]=\"level?.map_id\"\n                                [features]=\"features\"\n                                [styles]=\"styles\"\n                            ></interactive-map>\n                        </button>\n                        <div class=\" p-4 space-y-2\">\n                            <div>\n                                {{\n                                    (\n                                        booking.linked_event?.system_id\n                                        | space\n                                        | async\n                                    )?.display_name\n                                }}\n                                <span\n                                    *ngIf=\"\n                                        !(\n                                            booking.linked_event?.system_id\n                                            | space\n                                            | async\n                                        )?.display_name\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    Remote Event\n                                </span>\n                            </div>\n                            <div class=\"opacity-30 text-sm\">\n                                <span *ngIf=\"building && level\">\n                                    {{\n                                        building.display_name || building.name\n                                    }},\n                                    {{ level?.display_name || level?.name }}\n                                </span>\n                                <span\n                                    *ngIf=\"!building || !level\"\n                                    class=\"opacity-30\"\n                                >\n                                    No location set for this event\n                                </span>\n                            </div>\n                            <div class=\"flex items-center space-x-2 pt-4\">\n                                <div\n                                    class=\"flex items-center justify-center h-10 w-10 rounded-full bg-base-200\"\n                                    matTooltip=\"WiFi available\"\n                                >\n                                    <app-icon class=\"text-2xl\">wifi</app-icon>\n                                </div>\n                                <div\n                                    class=\"flex items-center justify-center h-10 w-10 rounded-full bg-base-200\"\n                                    matTooltip=\"Cafe available\"\n                                >\n                                    <app-icon class=\"text-2xl\"\n                                        >local_cafe</app-icon\n                                    >\n                                </div>\n                                <div\n                                    class=\"flex items-center justify-center h-10 w-10 rounded-full bg-base-200\"\n                                    matTooltip=\"Open spaces nearby\"\n                                >\n                                    <app-icon class=\"text-2xl\">chat</app-icon>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [list]=\"booking.attendees\"\n                    [host]=\"booking.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public booking: Booking = this._data.booking;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.booking as any).featured ||\n            this.booking.extension_data?.featured\n        );\n    }\n    public get is_onsite() {\n        return this.booking.linked_event?.system_id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.booking.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get attendance() {\n        return (\n            this.booking.attendees?.filter((_: any) => _.checked_in)?.length ||\n            0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.booking.linked_event?.system_id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.booking.attendees?.find((_) => _.email === user.email);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { booking: Booking; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.booking.linked_event?.system_id\n        );\n        const id = this.space?.map_id || this.booking.extension_data?.map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        this.level = this._org.levelWithID(this.booking.zones);\n        this.building =\n            this._org.buildings.find((_) =>\n                this.booking.zones.includes(_.id)\n            ) || this._org.building;\n        this.locate = this.booking.extension_data?.map_id || '';\n    }\n\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        console.log('User:', user, this.is_interested);\n        if (this.is_interested && user) {\n            await bookingRemoveGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = (\n                this.booking.attendees || []\n            ).filter((_: any) => _.email !== user.email);\n        } else {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinBookingGuest(\n            this.booking.id,\n            user.email,\n            !this.is_going\n        ).toPromise();\n        const guest = this.booking.attendees.find(\n            (_) => _.email === user.email\n        );\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n"],"x_google_ignoreList":[]}