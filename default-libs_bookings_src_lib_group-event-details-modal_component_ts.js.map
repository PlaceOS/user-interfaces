{"version":3,"file":"default-libs_bookings_src_lib_group-event-details-modal_component_ts.js","mappings":"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","names":["i0","ctx_r0","day","BookingCardComponent_h4_0_span_1_Template","show_day","booking","date","time_format","type","location","_r2","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","_c0","_c1","id","title","status","period","desk_icon_r3","raw_description","asset_id","for_current_user","booking_type","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","is_done","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","ngOnChanges","changes","removeHtmlTags","description","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","html","DOMParser","parseFromString","body","textContent","timeout","ref","open","GroupEventDetailsModalComponent","BookingDetailsModalComponent","data","concierge","componentInstance","emit","static","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_5__","VBU","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","ctx_r1","extension_data","images","checked_in","_r3","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","state","menu_r5","item_r8","quantity","request_r7","_r6","$implicit","show_request","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","deliver_at","items","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","length","map_id","_r9","_r10","setDeskHeight","_r11","_r12","building","buildings","find","bld","includes","can_edit","is_checked_in","desk_height_enabled","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","hide_map","content","MapPinComponent","has_assets","linked_bookings","_","_this","_asyncToGenerator","checkinBooking","toPromise","catch","notifyError","notifySuccess","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","DeskSettingsModalComponent","asset_ids","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_8__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","_r1","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","BookingDetailsModalComponent_button_47_Template","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","booking_rules","building_list","Promise","all","showMetadata","building_rules","mapping","rules","details","available_resources","merge","timer","filter","restrictions","user","startOfDay","valueOf","queryBookings","period_start","getUnixTime","period_end","zone_id","organisation","limit","bookings","user_name","asset","rulesForResource","host","zone","parent_id","hidden","groups","some","grp","bookable","every","bkn","assigned_to","catchError","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","event_id","result","saveBooking","user_id","phone","department","ical_uid","booking_id","error","assets","requests","validateAssetRequestsForResource","from_booking","booked_by_email","console","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","idx","unavailable","group_name","i","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","active_bookings","allowed_bookings","current","use_region","map_metadata","metadata","d","lockers","bank_id","forkJoin","listChildMetadata","flatten","map_url","count","nearby_resources","findNearbyFeature","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_33__","jDH","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_4__","SharedBookingsModule","core","$C","G2t","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","SharedSpacesModule","SharedEventsModule","SharedUsersModule","$event","ctx_r2","_r4","_r5","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","load_state_r6","opt_r3","ctx_r3","selected_features","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r5","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","toggleFavourite","placeholder_r6","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","desk","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_1","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","reg_r4","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","region","regions","bld_r6","setBuilding","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","tmp_3_0","tmp_4_0","lvl_r8","DeskFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","levels","use_24hr","feat_r11","DeskFiltersComponent_section_36_div_3_Template","reg","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","region_list","active_region","levelsForRegion","levelsForBuilding","lvl","tags","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_6__","hide_levels","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","tmp_2_0","tmp_13_0","tmp_15_0","desk_r2","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","placeholder_r4","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","empty_state_r5","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","DeskMapComponent","is_displayed","zoom","center","x","y","coordinates","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","latitude","longitude","split","parseFloat","setZoom","new_zoom","max","min","resetMap","_angular_core__WEBPACK_IMPORTED_MODULE_7__","DeskMapComponent_mat_form_field_1_Template","tmp_0_0","displayed","selected_ids","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","height","sitting_height","standing_height","preset","setPreset","log","sys_id","binding","getModule","execute","formatLabel","toFixed","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_p_13_Template","GroupEventCardComponent_button_0_div_17_Template","GroupEventCardComponent_button_0_div_18_Template","GroupEventCardComponent_button_0_div_19_Template","trim","is_onsite","has_space","attendees","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_p_27_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent_ng_template_1_div_32_Template","GroupEventCardComponent_ng_template_1_div_33_Template","GroupEventCardComponent","attendance_type","linked_event","system_id","is_online","space_pipe","SpacePipe","transform","featured","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","featured_card_r4","is_interested","is_going","GroupEventDetailsModalComponent_div_99_interactive_map_3_Template","GroupEventDetailsModalComponent_div_99_span_9_Template","GroupEventDetailsModalComponent_div_99_span_13_Template","GroupEventDetailsModalComponent_div_99_span_14_Template","showing_map","show_attendees","attendance","guest_details","locate","notifyInfo","toggleInterest","bookingRemoveGuest","bookingAddGuest","toggleAttendance","checkinBookingGuest","guest","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_12_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_div_84_Template","GroupEventDetailsModalComponent_div_85_Template","GroupEventDetailsModalComponent_span_97_Template","GroupEventDetailsModalComponent_div_99_Template","GroupEventDetailsModalComponent_div_100_Template","concierge_menu_r5","menu_r6","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","setVisitor","company","item_r10","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r15","onDone","sent","InviteVisitorFormComponent","_service","done","visitors","initFormZone","setValidators","Validators","required","visitor_details","old_visitors","_bookForMany","_bookForOne","User","randomString","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","locker_r2","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","empty_state_r3","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","bld_r4","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r6","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r13","toggleFeature","ParkingSpaceFiltersComponent_section_40_div_3_Template","_r14","_form","max_duration","active_levels","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_section_40_Template","ParkingSpaceFiltersComponent_div_42_Template","tmp_10_0","tmp_12_0","space_r2","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","available_spaces","setCustomZone","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","style","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk-settings-modal.component.ts","./libs/bookings/src/lib/group-event-card.component.ts","./libs/bookings/src/lib/group-event-details-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{ raw_description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit()\n                )\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_checked_in && desk_height_enabled\"\n                (click)=\"setDeskHeight()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon className=\"material-symbols-rounded\">\n                        height\n                    </app-icon>\n                    <div i18n>Set Desk Height</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_checked_in() {\n        return this.booking.checked_in;\n    }\n\n    public get desk_height_enabled() {\n        return (\n            this.booking?.type === 'desk' &&\n            this._settings.get('app.desks.height_enabled')\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n\n    public setDeskHeight() {\n        this._dialog.open(DeskSettingsModalComponent, {\n            data: { id: this.booking.asset_ids[0] || this.booking.asset_id },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n                limit: 1000,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[asset.zone?.id] ||\n                                    restrictions[asset.zone?.parent_id] ||\n                                    restrictions[this._org.building.id] ||\n                                    []\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                ) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    group: value.group,\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            event_id\n                ? { ical_uid: value.ical_uid, event_id: event_id }\n                : parent_id\n                ? { booking_id: parent_id }\n                : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        let active_bookings = bookings.filter(\n            (_) =>\n                _.status !== 'declined' &&\n                _.status !== 'cancelled' &&\n                !_.rejected\n        );\n        if (\n            active_bookings.find((_) => _.asset_id === asset_id && id !== _.id)\n        ) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            active_bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || []\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata)))\n                    )\n                )\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'desk-settings-modal',\n    template: `\n        <div class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\">\n            <div class=\"text-lg\" i18n>Desk Height</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience\n            </div>\n            <div class=\"flex flex-col mt-2 mb-4\">\n                <label>Presets</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        placeholder=\"No selected preset\"\n                        [(ngModel)]=\"preset\"\n                        (ngModelChange)=\"setPreset($event)\"\n                    >\n                        <mat-option value=\"\">None</mat-option>\n                        <mat-option value=\"standing\">Standing</mat-option>\n                        <mat-option value=\"sitting\">Seated</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <label>Current Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input matSliderThumb [(ngModel)]=\"height\" />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button btn matRipple (click)=\"setDeskHeight()\" class=\"w-full\">\n                Apply Settings\n            </button>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 right-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [],\n})\nexport class DeskSettingsModalComponent {\n    public readonly desk_id = this._data.id;\n    public preset: string;\n    public height = 71;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { id: string },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<DeskSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        const sitting_height = this._settings.get('desk_sitting_height');\n        const standing_height = this._settings.get('desk_standing_height');\n        this.height = sitting_height || 71;\n        if (this.height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (this.height === standing_height) {\n            this.preset = 'standing';\n        }\n    }\n\n    public setPreset(value: string) {\n        console.log('Set preset:', value);\n        switch (value) {\n            case 'standing':\n                this.height = this._settings.get('desk_standing_height') || 102;\n                break;\n            case 'sitting':\n                this.height = this._settings.get('desk_sitting_height') || 71;\n                break;\n            default:\n                this.height = 70;\n                break;\n        }\n    }\n\n    public async setDeskHeight() {\n        const sys_id = this._org.binding('desks');\n        if (!sys_id) return this._dialog_ref.close();\n        const module = getModule(sys_id, 'DeskControl');\n        await module\n            .execute('set_desk_height', [this.desk_id, this.height])\n            .catch((_) => {\n                notifyError('Error setting desk height.' + _);\n                throw _;\n            });\n        notifySuccess('Successfully set desk height');\n        this._dialog_ref.close();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { GroupEventDetailsModalComponent } from '@placeos/bookings';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 min-h-28 w-full bg-base-200 overflow-hidden border-b border-base-200\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                    <p *ngIf=\"!raw_description.trim()\" class=\"opacity-30\">\n                        No description\n                    </p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div *ngIf=\"is_onsite && has_space\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div *ngIf=\"is_onsite && !has_space\" class=\"opacity-30\">\n                        Room to be confirmed\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full min-w-56 w-1/2 max-w-[20rem] bg-base-200 overflow-hidden border-r border-base-200\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30 text-left\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-3\">{{ raw_description }}</p>\n                            <p\n                                *ngIf=\"!raw_description.trim()\"\n                                class=\"opacity-30\"\n                            >\n                                No description\n                            </p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition: box-shadow 300ms, border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: any;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    public get is_onsite() {\n        return this.event?.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.event?.linked_event?.system_id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event?.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.event.linked_event?.system_id\n        );\n        this.raw_description = this.removeHtmlTags(this.event.description);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { booking: this.event, concierge: false },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    Booking,\n    bookingAddGuest,\n    bookingRemoveGuest,\n    checkinBookingGuest,\n} from '@placeos/bookings';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"booking.images?.length\"\n                    auth\n                    [source]=\"booking.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button\n                icon\n                mat-dialog-close\n                class=\"absolute top-1 right-1 overflow-hidden\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-30 z-0\"></div>\n                <app-icon class=\"z-10\">close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ booking.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"booking.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>Event by {{ booking.user_name }}</div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ booking.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ booking.date | date: time_format }} -\n                                {{\n                                    booking.date + booking.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ booking.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span\n                            [innerHTML]=\"booking.description | sanitize\"\n                        ></span>\n                        <span\n                            *ngIf=\"!booking.description.trim()\"\n                            class=\"opacity-30\"\n                        >\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                        <div class=\"border border-base-300 w-full\">\n                            <button\n                                matRipple\n                                class=\"relative w-full h-40 bg-base-200\"\n                                (click)=\"viewLocation()\"\n                            >\n                                <interactive-map\n                                    *ngIf=\"!showing_map\"\n                                    [src]=\"level?.map_id\"\n                                    [features]=\"features\"\n                                    [styles]=\"styles\"\n                                ></interactive-map>\n                            </button>\n                            <div class=\" p-4 space-y-2\">\n                                <div>\n                                    {{\n                                        (\n                                            booking.linked_event?.system_id\n                                            | space\n                                            | async\n                                        )?.display_name\n                                    }}\n                                    <span\n                                        *ngIf=\"\n                                            !(\n                                                booking.linked_event?.system_id\n                                                | space\n                                                | async\n                                            )?.display_name\n                                        \"\n                                        class=\"opacity-30\"\n                                    >\n                                        Remote Event\n                                    </span>\n                                </div>\n                                <div class=\"opacity-30 text-sm\">\n                                    <span *ngIf=\"building && level\">\n                                        {{\n                                            building.display_name ||\n                                                building.name\n                                        }},\n                                        {{ level?.display_name || level?.name }}\n                                    </span>\n                                    <span\n                                        *ngIf=\"!building || !level\"\n                                        class=\"opacity-30\"\n                                    >\n                                        No location set for this event\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [list]=\"booking.attendees\"\n                    [host]=\"booking.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public booking: Booking = this._data.booking;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.booking as any).featured ||\n            this.booking.extension_data?.featured\n        );\n    }\n\n    public get is_onsite() {\n        return this.booking.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.booking.linked_event?.system_id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.booking.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get attendance() {\n        return (\n            this.booking.attendees?.filter((_: any) => _.checked_in)?.length ||\n            0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.booking.linked_event?.system_id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.booking.attendees?.find((_) => _.email === user.email);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { booking: Booking; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        this.space = await space_pipe.transform(\n            this.booking.linked_event?.system_id\n        );\n        const id = this.space?.map_id || this.booking.extension_data?.map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        this.level = this._org.levelWithID(this.booking.zones);\n        this.building =\n            this._org.buildings.find((_) =>\n                this.booking.zones.includes(_.id)\n            ) || this._org.building;\n        this.locate = this.booking.extension_data?.map_id || '';\n    }\n\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        console.log('User:', user, this.is_interested);\n        if (this.is_interested && user) {\n            await bookingRemoveGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = (\n                this.booking.attendees || []\n            ).filter((_: any) => _.email !== user.email);\n        } else {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await bookingAddGuest(\n                this.booking.id,\n                currentUser() as any\n            ).toPromise();\n            (this.booking as any).attendees = unique(\n                [...(this.booking.attendees || []), user],\n                'email'\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinBookingGuest(\n            this.booking.id,\n            user.email,\n            !this.is_going\n        ).toPromise();\n        const guest = this.booking.attendees.find(\n            (_) => _.email === user.email\n        );\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n"],"x_google_ignoreList":[]}