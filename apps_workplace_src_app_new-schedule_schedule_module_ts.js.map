{"version":3,"file":"apps_workplace_src_app_new-schedule_schedule_module_ts.js","mappings":"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","names":["ScheduleFilterCardComponent","constructor","_state","_sheet_ref","this","filters","toggleType","t","dismiss","i0","i1","i2","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","tmp_3_0","shown_types","includes","tmp_6_0","tmp_9_0","tmp_12_0","_r11","ctx_r10","_r13","ctx_r12","_r15","ctx_r14","_r17","ctx_r16","_r19","ctx_r18","_r21","ctx_r20","_r23","ctx_r22","_r25","ctx_r24","_r27","ctx_r26","_r29","ctx_r28","ScheduleFiltersComponent","hasFeature","feature","_settings","get","_sheet","c","openFilters","open","i3","ScheduleFiltersComponent_div_5_Template","ScheduleFiltersComponent_div_7_Template","ScheduleFiltersComponent_div_9_Template","ScheduleFiltersComponent_div_11_Template","ScheduleFiltersComponent_div_13_Template","ScheduleFiltersComponent_div_20_Template","ScheduleFiltersComponent_div_22_Template","ScheduleFiltersComponent_div_24_Template","ScheduleFiltersComponent_div_26_Template","ScheduleFiltersComponent_div_28_Template","tmp_1_0","tmp_2_0","tmp_4_0","tmp_5_0","tmp_7_0","tmp_8_0","tmp_10_0","_r6","ctx_r5","ctx_r0","_r8","ctx_r7","ctx_r1","_r10","ctx_r9","ctx_r2","_r12","ctx_r11","ctx_r3","_r14","ctx_r13","ctx_r4","ScheduleSidebarComponent","date","setDate","d","i18n_0","$localize","$event","ScheduleSidebarComponent_button_6_Template","ScheduleSidebarComponent_button_7_Template","ScheduleSidebarComponent_button_8_Template","ScheduleSidebarComponent_button_9_Template","ScheduleSidebarComponent_button_10_Template","day_r2","id","day_r3","$implicit","setValue","ScheduleMobileCalendarComponent_button_19_div_1_Template","is_month","active_date","is_today","ScheduleMobileCalendarComponent","startOfDay","Date","now","valueOf","offset","date_list","short_list","show_shortlist","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","ngOnInit","generateDates","list","new_value","writeValue","value","resetMonth","changeMonth","change","addMonths","start","startOfWeek","startOfMonth","length","push","is_past","isBefore","isSameMonth","isSameDay","addDays","features","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ScheduleMobileCalendarComponent_div_16_Template","ScheduleMobileCalendarComponent_button_19_Template","item_r8","edit","ctx_r15","remove","_r20","editBooking","ctx_r21","ctx_r23","end","ScheduleComponent_ng_container_14_ng_container_1_event_card_1_Template","ScheduleComponent_ng_container_14_ng_container_1_ng_template_2_Template","isEvent","ScheduleComponent_ng_container_14_ng_container_1_Template","bookings","trackByFn","ctx_r6","ROUTES","path","component","ScheduleComponent","AsyncHandler","item","CalendarEvent","hide_nav","localStorage","getItem","_event_form","_booking_form","_router","_dialog","super","combineLatest","filtered_bookings","loading","pipe","map","_","triggerPoll","subscription","startPolling","index","event","_this","_asyncToGenerator","navigate","creator","mailbox","queryEvents","period_start","event_start","period_end","event_end","ical_uid","toPromise","find","newForm","type","setTimeout","form","patchValue","resources","asset_id","name","asset_name","description","remove_series","_this2","time","format","content","space","display_name","resp","openConfirmModal","title","icon","reason","removeEvent","removeBooking","recurring_event_id","calendar","currentUser","email","system_id","system","catch","e","notifyError","close","notifySuccess","removeItem","closeAll","_this3","checkinBooking","i4","i5","i6","ScheduleComponent_topbar_0_Template","ScheduleComponent_span_12_Template","ScheduleComponent_ng_container_14_Template","ScheduleComponent_mat_progress_bar_16_Template","ScheduleComponent_footer_menu_18_Template","ScheduleComponent_ng_template_19_Template","_r5","redirectTo","AppScheduleModule","oAB","cJS","CommonModule","SharedComponentModule","FormsModule","MatBottomSheetModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/new-schedule/schedule-filter-card.component.ts","./apps/workplace/src/app/new-schedule/schedule-filters.component.ts","./apps/workplace/src/app/new-schedule/schedule-sidebar.component.ts","./apps/workplace/src/app/new-schedule/schedule-mobile-calendar.component.ts","./apps/workplace/src/app/new-schedule/schedule.component.ts","./apps/workplace/src/app/new-schedule/schedule.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-filter-card',\n    template: `\n        <div\n            class=\"flex items-center border-b border-base-200 space-x-2 mb-4 text-xl\"\n        >\n            <button icon matRipple (click)=\"dismiss()\">\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <h2 class=\"flex-1 w-1/2 text-center\">\n                {{ 'WPA.BOOKING_TYPES' | translate }}\n            </h2>\n            <app-icon></app-icon>\n        </div>\n        <div class=\"space-y-4 border-b border-base-200 mb-4 pb-4\">\n            <button\n                name=\"schedule-toggle-event-filter\"\n                matRipple\n                class=\"flex items-center space-x-2 w-full text-left pr-2\"\n                (click)=\"toggleType('event')\"\n            >\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <app-icon>meeting_room</app-icon>\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">{{ 'WPA.ROOM' | translate }}</div>\n                    <div class=\"text-sm opacity-60\">\n                        {{ 'WPA.SCHEULD_ROOM_FILTER' | translate }}\n                    </div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"\n                        (filters | async)?.shown_types?.includes('event')\n                    \"\n                ></mat-checkbox>\n            </button>\n            <button\n                matRipple\n                name=\"schedule-toggle-desk-filter\"\n                class=\"flex items-center space-x-2 w-full text-left pr-2\"\n                (click)=\"toggleType('desk')\"\n            >\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <img src=\"assets/icons/desk-outline.svg\" class=\"w-6\" />\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">{{ 'WPA.DESK' | translate }}</div>\n                    <div class=\"text-sm opacity-60\">\n                        {{ 'WPA.SCHEDULE_DESK_FILTER' | translate }}\n                    </div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"(filters | async)?.shown_types?.includes('desk')\"\n                ></mat-checkbox>\n            </button>\n            <button\n                matRipple\n                name=\"schedule-toggle-parking-filter\"\n                class=\"flex items-center space-x-2 w-full text-left pr-2\"\n                (click)=\"toggleType('parking')\"\n            >\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <app-icon>drive_eta</app-icon>\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">{{ 'WPA.PARKING' | translate }}</div>\n                    <div class=\"text-sm opacity-60\">\n                        {{ 'WPA.SCHEDULE_PARKING_FILTER' | translate }}\n                    </div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"\n                        (filters | async)?.shown_types?.includes('parking')\n                    \"\n                ></mat-checkbox>\n            </button>\n            <button\n                matRipple\n                name=\"schedule-toggle-visitor-filter\"\n                class=\"flex items-center space-x-2 w-full text-left pr-2\"\n                (click)=\"toggleType('visitor')\"\n            >\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <app-icon>people</app-icon>\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">{{ 'WPA.VISITORS' | translate }}</div>\n                    <div class=\"text-sm opacity-60\">\n                        {{ 'WPA.SCHEDULE_VISITOR_FILTER' | translate }}s\n                    </div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"\n                        (filters | async)?.shown_types?.includes('visitor')\n                    \"\n                ></mat-checkbox>\n            </button>\n        </div>\n        <div class=\"px-2 pb-2\">\n            <button\n                btn\n                matRipple\n                name=\"schedule-apply-filter\"\n                class=\"w-full\"\n                (click)=\"dismiss()\"\n            >\n                {{ 'WPA.FILTERS_APPLY' | translate }}\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            mat-checkbox {\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ScheduleFilterCardComponent {\n    public readonly filters = this._state.filters;\n\n    public readonly toggleType = (t) => this._state.toggleType(t);\n    public readonly dismiss = () => this._sheet_ref.dismiss();\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _sheet_ref: MatBottomSheetRef<ScheduleFilterCardComponent>\n    ) {}\n}\n","import { Component } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { ScheduleFilterCardComponent } from './schedule-filter-card.component';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-filters',\n    template: `\n        <div\n            class=\"hidden sm:block bg-base-100 border border-base-200 rounded p-2\"\n        >\n            <h3 class=\"font-medium mb-2\">\n                {{ 'WPA.SCHEDULE_CAT_FILTERS' | translate }}\n            </h3>\n            <div class=\"flex flex-wrap space-x-2\">\n                <div\n                    class=\"flex items-center rounded-3xl border border-base-200\"\n                    *ngIf=\"(filters | async)?.shown_types?.includes('event')\"\n                >\n                    <div class=\" px-2\">{{ 'WPA.ROOMS' | translate }}</div>\n                    <button\n                        icon\n                        name=\"schedule-remove-event-filter\"\n                        (click)=\"toggleType('event', true)\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex items-center rounded-3xl border border-base-200\"\n                    *ngIf=\"\n                        (filters | async)?.shown_types?.includes('desk') &&\n                        hasFeature('desks')\n                    \"\n                >\n                    <div class=\"px-2\">{{ 'WPA.DESKS' | translate }}</div>\n                    <button\n                        icon\n                        name=\"schedule-remove-desk-filter\"\n                        (click)=\"toggleType('desk', true)\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex items-center rounded-3xl border border-base-200\"\n                    *ngIf=\"\n                        (filters | async)?.shown_types?.includes('parking') &&\n                        hasFeature('parking')\n                    \"\n                >\n                    <div class=\" px-2\">{{ 'WPA.PARKING' | translate }}</div>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-remove-parking-filter\"\n                        (click)=\"toggleType('parking', true)\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex items-center rounded-3xl border border-base-200\"\n                    *ngIf=\"\n                        (filters | async)?.shown_types?.includes('visitor') &&\n                        hasFeature('visitor-invite')\n                    \"\n                >\n                    <div class=\" px-2\">{{ 'WPA.VISITORS' | translate }}</div>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-remove-visitor-filter\"\n                        (click)=\"toggleType('visitor', true)\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex items-center rounded-3xl border border-base-200\"\n                    *ngIf=\"\n                        (filters | async)?.shown_types?.includes('locker') &&\n                        hasFeature('lockers')\n                    \"\n                >\n                    <div class=\" px-2\">{{ 'WPA.LOCKERS' | translate }}</div>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-remove-locker-filter\"\n                        (click)=\"toggleType('locker', true)\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"sm:hidden flex items-center space-x-2\">\n            <button\n                btn\n                matRipple\n                name=\"schedule-open-filter-edit\"\n                class=\"min-w-0 sm:w-24\"\n                (click)=\"openFilters()\"\n            >\n                <div class=\"flex items-center justify-center space-x-2\">\n                    <app-icon class=\"text-xl\">filter_list</app-icon>\n                    <!-- <div class=\"mr-2\">{{ \"WPA.FILTERS\" | translate }}</div> -->\n                </div>\n            </button>\n            <div\n                class=\"flex items-center rounded-3xl border border-base-200 bg-base-100 text-sm pl-2\"\n                *ngIf=\"(filters | async)?.shown_types?.includes('event')\"\n            >\n                <div>{{ 'WPA.ROOMS' | translate }}</div>\n                <button\n                    icon\n                    name=\"schedule-remove-event-filter-mobile\"\n                    (click)=\"toggleType('event', true)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex items-center rounded-3xl border border-base-200 bg-base-100 text-sm pl-2\"\n                *ngIf=\"\n                    (filters | async)?.shown_types?.includes('desk') &&\n                    hasFeature('desks')\n                \"\n            >\n                <div>{{ 'WPA.DESKS' | translate }}</div>\n                <button\n                    icon\n                    name=\"schedule-remove-desk-filter-mobile\"\n                    (click)=\"toggleType('desk', true)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex items-center rounded-3xl border border-base-200 bg-base-100 text-sm pl-2\"\n                *ngIf=\"\n                    (filters | async)?.shown_types?.includes('parking') &&\n                    hasFeature('parking')\n                \"\n            >\n                <div>{{ 'WPA.PARKING' | translate }}</div>\n                <button\n                    icon\n                    name=\"schedule-remove-parking-filter-mobile\"\n                    (click)=\"toggleType('parking', true)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex items-center rounded-3xl border border-base-200 bg-base-100 text-sm pl-2\"\n                *ngIf=\"\n                    (filters | async)?.shown_types?.includes('visitor') &&\n                    hasFeature('visitor-invite')\n                \"\n            >\n                <div>{{ 'WPA.VISITORS' | translate }}</div>\n                <button\n                    icon\n                    name=\"schedule-remove-visitor-filter-mobile\"\n                    (click)=\"toggleType('visitor', true)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex items-center rounded-3xl border border-base-200 bg-base-100 text-sm pl-2\"\n                *ngIf=\"\n                    (filters | async)?.shown_types?.includes('locker') &&\n                    hasFeature('lockers')\n                \"\n            >\n                <div>{{ 'WPA.LOCKERS' | translate }}</div>\n                <button\n                    icon\n                    name=\"schedule-remove-locker-filter-mobile\"\n                    (click)=\"toggleType('locker', true)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ScheduleFiltersComponent {\n    public readonly filters = this._state.filters;\n\n    public readonly toggleType = (t, c = false) => this._state.toggleType(t, c);\n\n    public hasFeature(feature: string) {\n        return this._settings.get('app.features')?.includes(feature);\n    }\n\n    constructor(\n        private _sheet: MatBottomSheet,\n        private _state: ScheduleStateService,\n        private _settings: SettingsService\n    ) {}\n\n    public openFilters() {\n        this._sheet.open(ScheduleFilterCardComponent);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-sidebar',\n    template: `\n        <div\n            class=\"flex flex-col w-[18rem] h-full overflow-hidden bg-base-100[#1F2021] border-r border-base-200\"\n        >\n            <date-calendar\n                class=\"border-b border-base-200\"\n                [ngModel]=\"date | async\"\n                (ngModelChange)=\"setDate($event)\"\n            ></date-calendar>\n            <h3 class=\"mx-4 mt-4 font-medium\" i18n>Filters</h3>\n            <div class=\"p-4 space-y-4\">\n                <button\n                    matRipple\n                    name=\"schedule-toggle-event-filter\"\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    *ngIf=\"hasFeature('spaces')\"\n                    (click)=\"toggleType('event')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-base-200 text-2xl\"\n                    >\n                        <app-icon>place</app-icon>\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\">{{ 'WPA.ROOM' | translate }}</div>\n                        <div class=\"text-sm opacity-60\">\n                            {{ 'WPA.SCHEDULE_ROOM_FILTER' | translate }}\n                        </div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('event')\n                        \"\n                    ></mat-checkbox>\n                </button>\n                <button\n                    matRipple\n                    name=\"schedule-toggle-desk-filter\"\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    *ngIf=\"hasFeature('desks')\"\n                    (click)=\"toggleType('desk')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-base-200 text-2xl\"\n                    >\n                        <img src=\"assets/icons/desk-outline.svg\" class=\"w-6\" />\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\">{{ 'WPA.DESK' | translate }}</div>\n                        <div class=\"text-sm opacity-60\">\n                            {{ 'WPA.SCHEDULE_DESK_FILTER' | translate }}\n                        </div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('desk')\n                        \"\n                    ></mat-checkbox>\n                </button>\n                <button\n                    matRipple\n                    name=\"schedule-toggle-parking-filter\"\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    *ngIf=\"hasFeature('parking')\"\n                    (click)=\"toggleType('parking')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-base-200 text-2xl\"\n                    >\n                        <app-icon>drive_eta</app-icon>\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\">{{ 'WPA.PARKING' | translate }}</div>\n                        <div class=\"text-sm opacity-60\">\n                            {{ 'WPA.SCHEDULE_PARKING_FILTER' | translate }}\n                        </div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('parking')\n                        \"\n                    ></mat-checkbox>\n                </button>\n                <button\n                    matRipple\n                    name=\"schedule-toggle-visitor-filter\"\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    *ngIf=\"hasFeature('visitor-invite')\"\n                    (click)=\"toggleType('visitor')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-base-200 text-2xl\"\n                    >\n                        <app-icon>people</app-icon>\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\" i18n>\n                            {{ 'WPA.VISITORS' | translate }}\n                        </div>\n                        <div class=\"text-sm opacity-60\" i18n>\n                            {{ 'WPA.SCHEDULE_VISITOR_FILTER' | translate }}\n                        </div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('visitor')\n                        \"\n                    ></mat-checkbox>\n                </button>\n                <button\n                    matRipple\n                    name=\"schedule-toggle-locker-filter\"\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    *ngIf=\"hasFeature('lockers')\"\n                    (click)=\"toggleType('locker')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-base-200 text-2xl\"\n                    >\n                        <app-icon>door_back</app-icon>\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\" i18n>\n                            {{ 'WPA.LOCKERS' | translate }}\n                        </div>\n                        <div class=\"text-sm opacity-60\" i18n>\n                            {{ 'WPA.SCHEDULE_LOCKER_FILTER' | translate }}\n                        </div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('locker')\n                        \"\n                    ></mat-checkbox>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            mat-checkbox {\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ScheduleSidebarComponent {\n    public readonly filters = this._state.filters;\n    public readonly date = this._state.date;\n    public readonly toggleType = (t) => this._state.toggleType(t);\n    public readonly setDate = (d) => this._state.setDate(d);\n\n    public hasFeature(feature: string) {\n        return this._settings.get('app.features')?.includes(feature);\n    }\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: 'schedule-mobile-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear font-medium\"\n                    (click)=\"resetMonth()\"\n                >\n                    {{ date_list[6]?.id || active_date | date: 'LLLL YYYY' }}\n                </button>\n                <div class=\"flex items-center\">\n                    <button icon matRipple (click)=\"changeMonth(-1)\">\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button icon matRipple (click)=\"changeMonth(1)\">\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"show_shortlist = !show_shortlist\"\n                    >\n                        <app-icon>arrow_drop_down</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-center text-sm mb-2\">\n                <div\n                    class=\"opacity-60 text-center w-10 mx-2\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    matRipple\n                    class=\"min-w-[calc(14%-1rem)] flex-1 mx-2 h-9 overflow-visible\"\n                    *ngFor=\"let day of list\"\n                    [class.text-opacity-30]=\"!day.is_month\"\n                    [class.text-white]=\"day.id === active_date\"\n                    [class.text-black]=\"day.id !== active_date\"\n                    [class.dark:text-white]=\"day.id !== active_date\"\n                    [class.dark:text-opacity-30]=\"!day.is_month\"\n                    [class.bg-primary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                >\n                    <div\n                        class=\"absolute -inset-0.5 border border-primary rounded-full\"\n                        *ngIf=\"day.is_today\"\n                    ></div>\n                    {{ day.id | date: 'd' }}\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ScheduleMobileCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ScheduleMobileCalendarComponent\n    implements OnInit, ControlValueAccessor\n{\n    public active_date = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list = [];\n    public short_list = [];\n    public show_shortlist = true;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    public get list() {\n        return this.show_shortlist ? this.short_list : this.date_list;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.active_date = startOfDay(new_value).valueOf();\n        this.offset = 0;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public resetMonth() {\n        this.changeMonth(-this.offset);\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const date = addMonths(this.active_date, this.offset);\n        let start = startOfWeek(startOfMonth(date));\n        const now = startOfDay(Date.now());\n        let list = [];\n        while (list.length < 7 * 6) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n                is_today: isSameDay(Date.now(), start),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n        start =\n            this.offset === 0\n                ? startOfWeek(date)\n                : startOfWeek(startOfMonth(date));\n        list = [];\n        while (list.length < 7) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n                is_today: isSameDay(Date.now(), start),\n            });\n            start = addDays(start, 1);\n        }\n        this.short_list = list;\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport {\n    Booking,\n    BookingFormService,\n    checkinBooking,\n    queryBookings,\n    removeBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    queryEvents,\n    removeEvent,\n} from '@placeos/events';\nimport { format, isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\nimport { ScheduleStateService } from './schedule-state.service';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'app-schedule',\n    template: `\n        <topbar *ngIf=\"!hide_nav\"></topbar>\n        <div\n            class=\"flex flex-col sm:flex-row flex-1 h-1/2 bg-base-200 relative\"\n        >\n            <schedule-sidebar\n                class=\"hidden sm:block bg-base-100\"\n            ></schedule-sidebar>\n            <div class=\"w-full bg-base-100 border-b border-neutral sm:hidden\">\n                <schedule-mobile-calendar\n                    [ngModel]=\"date | async\"\n                    (ngModelChange)=\"setDate($event)\"\n                ></schedule-mobile-calendar>\n            </div>\n            <div class=\"flex-1 h-full p-4 overflow-auto space-y-2\">\n                <schedule-filters></schedule-filters>\n                <h3 class=\"font-medium my-2\">\n                    {{ date | async | date: 'EEE dd LLL yyyy' }}\n                    <span *ngIf=\"is_today | async\"\n                        >({{ 'COMMON.TODAY' | translate }})</span\n                    >\n                </h3>\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"\n                            let item of bookings | async;\n                            trackBy: trackByFn\n                        \"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                            (edit)=\"edit(item)\"\n                            (remove)=\"remove(item, $event)\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card\n                                [booking]=\"item\"\n                                (edit)=\"editBooking(item)\"\n                                (remove)=\"remove(item)\"\n                                (end)=\"end(item)\"\n                            ></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n            <mat-progress-bar\n                *ngIf=\"loading | async\"\n                class=\"absolute inset-x-0 bottom-0\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </div>\n        <footer-menu *ngIf=\"!hide_nav\"></footer-menu>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\">\n                    {{ 'WPA.SCHEDULE_EMPTY' | translate }}\n                    {{ date | async | date: 'EEEE, dd LLL yyyy' }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleComponent extends AsyncHandler {\n    public readonly bookings = combineLatest([\n        this._state.filtered_bookings,\n        this._state.loading,\n    ]).pipe(map(([bookings, loading]) => (loading ? [] : bookings)));\n    public readonly date = this._state.date;\n    public readonly loading = this._state.loading;\n    public readonly is_today = this.date.pipe(\n        map((_) => isSameDay(_, Date.now()))\n    );\n    public readonly setDate = (d) => this._state.setDate(d);\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public get hide_nav() {\n        return localStorage.getItem('PlaceOS.hide_nav') === 'true';\n    }\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _event_form: EventFormService,\n        private _booking_form: BookingFormService,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.triggerPoll();\n        this.subscription('poll', this._state.startPolling());\n    }\n\n    public trackByFn(index: number, item: any) {\n        return item?.id;\n    }\n\n    public async edit(event: CalendarEvent) {\n        this._router.navigate(['/book', 'meeting', 'form']);\n        if (event.creator !== event.mailbox) {\n            event =\n                (\n                    await queryEvents({\n                        period_start: event.event_start,\n                        period_end: event.event_end,\n                        ical_uid: event.ical_uid,\n                    }).toPromise()\n                ).find((_) => _.ical_uid === event.ical_uid) || event;\n        }\n        this._event_form.newForm(event);\n    }\n\n    public editBooking(event: Booking) {\n        this._router.navigate(['/book', `new-${event.type}`]);\n        this._booking_form.newForm(event);\n        setTimeout(() => {\n            this._booking_form.form.patchValue({\n                resources: [\n                    {\n                        id: event.asset_id,\n                        name: event.asset_name || event.description,\n                    },\n                ],\n                asset_id: event.asset_id,\n            });\n        }, 100);\n    }\n\n    public async remove(item: CalendarEvent | Booking, remove_series = false) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name =\n            item instanceof CalendarEvent\n                ? item.space?.display_name\n                : item.asset_name || item.asset_id;\n        const content = `Delete the ${\n            remove_series ? 'recurring series of ' : ''\n        }booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n        if (item instanceof CalendarEvent && item.creator !== item.mailbox) {\n            item =\n                (\n                    await queryEvents({\n                        period_start: item.event_start,\n                        period_end: item.event_end,\n                        ical_uid: item.ical_uid,\n                    }).toPromise()\n                ).find((_) => _.ical_uid === (item as any).ical_uid) || item;\n        }\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await (item instanceof CalendarEvent ? removeEvent : removeBooking)(\n            remove_series ? (item as any).recurring_event_id : item.id,\n            {\n                calendar: this._settings.get('app.no_user_calendar')\n                    ? null\n                    : (item as any).calendar || currentUser()?.email,\n                system_id: (item as any).system?.id,\n            }\n        )\n            .toPromise()\n            .catch((e) => {\n                notifyError(`Unable to delete booking. ${e}`);\n                resp.close();\n                throw e;\n            });\n        notifySuccess('Successfully deleted booking.');\n        this._state.removeItem(item);\n        this._dialog.closeAll();\n    }\n\n    public async end(item: Booking) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name = item.asset_name || item.asset_id;\n        const content = `End the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `End booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n\n        if (resp.reason !== 'done') return;\n        resp.loading('Ending booking...');\n        await checkinBooking(item.id, false)\n            .toPromise()\n            .catch((e) => {\n                notifyError(`Unable to end booking. ${e}`);\n                resp.close();\n                throw e;\n            });\n        notifySuccess('Successfully ended booking.');\n        this._state.removeItem(item);\n        this._dialog.closeAll();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ScheduleFilterCardComponent } from './schedule-filter-card.component';\nimport { ScheduleFiltersComponent } from './schedule-filters.component';\nimport { ScheduleSidebarComponent } from './schedule-sidebar.component';\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleMobileCalendarComponent } from './schedule-mobile-calendar.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ScheduleComponent },\n    { path: '**', redirectTo: '' },\n];\n\nconst COMPONENTS = [\n    ScheduleComponent,\n    ScheduleSidebarComponent,\n    ScheduleFiltersComponent,\n    ScheduleFilterCardComponent,\n    ScheduleMobileCalendarComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        MatBottomSheetModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppScheduleModule {}\n"],"x_google_ignoreList":[]}