{"version":3,"mappings":"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","names":["matBottomSheetAnimations","bottomSheetState","trigger","state","style","transform","transition","group","animate","AnimationDurations","AnimationCurves","query","animateChild","optional","MAT_BOTTOM_SHEET_DATA","InjectionToken","constructor","this","data","hasBackdrop","disableClose","ariaLabel","closeOnNavigation","autoFocus","restoreFocus","MatBottomSheetContainer","BasePortalOutlet","_elementRef","_changeDetectorRef","_focusTrapFactory","_interactivityChecker","_ngZone","breakpointObserver","document","bottomSheetConfig","super","_animationState","_animationStateChanged","EventEmitter","_elementFocusedBeforeOpened","attachDomPortal","portal","_validatePortalAttached","_setPanelClass","_savePreviouslyFocusedElement","_portalOutlet","_document","_breakpointSubscription","observe","Breakpoints","subscribe","_toggleClass","isMatched","attachComponentPortal","attachTemplatePortal","enter","_destroyed","detectChanges","exit","markForCheck","ngOnDestroy","unsubscribe","_onAnimationDone","event","toState","_restoreFocus","_trapFocus","emit","_onAnimationStart","cssClass","add","nativeElement","classList","toggle","hasAttached","coerceArray","panelClass","_forceFocus","element","options","isFocusable","tabIndex","runOutsideAngular","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","selector","elementToFocus","querySelector","_focusTrap","create","activeElement","_getFocusedElementPierceShadowDom","contains","focusInitialElementWhenReady","toFocus","body","destroy","Promise","resolve","then","ɵfac","i0","i1","i2","DOCUMENT","MatBottomSheetConfig","ɵcmp","selectors","CdkPortalOutlet","i","n","decls","directives","i4","styles","MatBottomSheetModule","ɵmod","ɵinj","OverlayModule","MatCommonModule","PortalModule","containerInstance","_overlayRef","_afterDismissed","Subject","_afterOpened","pipe","filter","phaseName","take","next","complete","clearTimeout","_closeFallbackTimeout","dispose","detachments","_result","merge","backdropClick","keydownEvents","keyCode","ESCAPE","type","hasModifierKey","preventDefault","dismiss","result","closed","setTimeout","totalTime","detachBackdrop","afterDismissed","afterOpened","MAT_BOTTOM_SHEET_DEFAULT_OPTIONS","MatBottomSheet","_overlay","_injector","_parentBottomSheet","_defaultOptions","_bottomSheetRefAtThisLevel","_openedBottomSheetRef","parent","value","open","componentOrTemplateRef","config","_config","defaults","Object","assign","_applyConfigDefaults","overlayRef","_createOverlay","container","_attachContainer","ref","MatBottomSheetRef","TemplateRef","TemplatePortal","$implicit","bottomSheetRef","ComponentPortal","undefined","_createInjector","contentRef","instance","injector","Injector","viewContainerRef","providers","provide","useValue","containerPortal","attach","overlayConfig","OverlayConfig","direction","disposeOnNavigation","maxWidth","scrollStrategy","scrollStrategies","block","positionStrategy","position","global","centerHorizontally","bottom","backdropClass","userInjector","get","Directionality","InjectFlags","push","change","of","i1$1","ɵprov","factory","dirtyDate","dirtyOptions","requiredArgs","arguments","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","toInteger","RangeError","date","toDate","day","getDay","diff","setDate","getDate","setHours","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","getFullYear","getMonth","ctx_r4","oxw","ScheduleCalendarComponent","startOfDay","Date","now","valueOf","fn","_onChange","_onTouch","ngOnInit","generateDates","setValue","new_value","active_date","offset","writeValue","changeMonth","addMonths","start","startOfWeek","startOfMonth","list","length","id","is_past","isBefore","is_month","isSameMonth","addDays","date_list","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ctx","ScheduleStateService","BaseClass","BehaviorSubject","shown_types","combineLatest","_date","_poll","switchMap","queryEvents","period_start","getUnixTime","period_end","endOfDay","queryBookings","events","desks","parking","map","e","d","p","sort","a","b","tap","timeout","_loading","bookings","_filters","bkns","filters","_","CalendarEvent","_a","includes","r","_b","asObservable","subscription","toggleType","name","clear","getValue","ScheduleFilterCardComponent","_state","_sheet_ref","t","ctx_r6","ctx_r8","ctx_r10","ctx_r12","ctx_r14","ctx_r16","ScheduleFiltersComponent","_sheet","c","openFilters","ScheduleSidebarComponent","ScheduleMobileCalendarComponent","show_shortlist","short_list","ROUTES","path","component","filtered_bookings","loading","isSameDay","isEvent","item","trackByFn","index","ScheduleComponent","redirectTo","AppScheduleModule","CommonModule","SharedComponentModule","FormsModule","RouterModule"],"sources":["./node_modules/@angular/material/fesm2015/bottom-sheet.mjs","./node_modules/date-fns/esm/startOfWeek/index.js","./node_modules/date-fns/esm/startOfMonth/index.js","./node_modules/date-fns/esm/isSameMonth/index.js","./apps/workplace/src/app/new-schedule/schedule-calendar.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./apps/workplace/src/app/new-schedule/schedule-filter-card.component.ts","./apps/workplace/src/app/new-schedule/schedule-filters.component.ts","./apps/workplace/src/app/new-schedule/schedule-sidebar.component.ts","./apps/workplace/src/app/new-schedule/schedule-mobile-calendar.component.ts","./apps/workplace/src/app/new-schedule/schedule.component.ts","./apps/workplace/src/app/new-schedule/schedule.module.ts"],"sourcesContent":["import * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ViewChild, NgModule, TemplateRef, Injector, InjectFlags, Injectable, SkipSelf } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Animations used by the Material bottom sheet. */\nconst matBottomSheetAnimations = {\n    /** Animation that shows and hides a bottom sheet. */\n    bottomSheetState: trigger('state', [\n        state('void, hidden', style({ transform: 'translateY(100%)' })),\n        state('visible', style({ transform: 'translateY(0%)' })),\n        transition('visible => void, visible => hidden', group([\n            animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n        transition('void => visible', group([\n            animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n */\nclass MatBottomSheetConfig {\n    constructor() {\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** Whether the bottom sheet has a backdrop. */\n        this.hasBackdrop = true;\n        /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n        this.disableClose = false;\n        /** Aria label to assign to the bottom sheet element. */\n        this.ariaLabel = null;\n        /**\n         * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // Note that this is set to 'dialog' by default, because while the a11y recommendations\n        // are to focus the first focusable element, doing so prevents screen readers from reading out the\n        // rest of the bottom sheet content.\n        /**\n         * Where the bottom sheet should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'dialog';\n        /**\n         * Whether the bottom sheet should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n    }\n}\n\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n    constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, _interactivityChecker, _ngZone, breakpointObserver, document, \n    /** The bottom sheet configuration. */\n    bottomSheetConfig) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this.bottomSheetConfig = bottomSheetConfig;\n        /** The state of the bottom sheet animations. */\n        this._animationState = 'void';\n        /** Emits whenever the state of the animation changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the bottom sheet was opened. */\n        this._elementFocusedBeforeOpened = null;\n        /**\n         * Attaches a DOM portal to the bottom sheet container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._validatePortalAttached();\n            this._setPanelClass();\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._document = document;\n        this._breakpointSubscription = breakpointObserver\n            .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n            .subscribe(() => {\n            this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n            this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n            this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n        });\n    }\n    /** Attach a component portal as content to this bottom sheet container. */\n    attachComponentPortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this bottom sheet container. */\n    attachTemplatePortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Begin animation of bottom sheet entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Begin animation of the bottom sheet exiting from view. */\n    exit() {\n        if (!this._destroyed) {\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n        this._destroyed = true;\n    }\n    _onAnimationDone(event) {\n        if (event.toState === 'hidden') {\n            this._restoreFocus();\n        }\n        else if (event.toState === 'visible') {\n            this._trapFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    _toggleClass(cssClass, add) {\n        this._elementRef.nativeElement.classList.toggle(cssClass, add);\n    }\n    _validatePortalAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach bottom sheet content after content is already attached');\n        }\n    }\n    _setPanelClass() {\n        const element = this._elementRef.nativeElement;\n        element.classList.add(...coerceArray(this.bottomSheetConfig.panelClass || []));\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'bottom-sheet',\n     * if focus cannot be moved then focus will go to the bottom sheet container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        // If were to attempt to focus immediately, then the content of the bottom sheet would not\n        // yet be ready in instances where change detection has to run first. To deal with this,\n        // we simply wait for the microtask queue to be empty when setting focus when autoFocus\n        // isn't set to bottom sheet. If the element inside the bottom sheet can't be focused,\n        // then the container is focused so the user can't tab into other elements behind it.\n        switch (this.bottomSheetConfig.autoFocus) {\n            case false:\n            case 'dialog':\n                const activeElement = _getFocusedElementPierceShadowDom();\n                // Ensure that focus is on the bottom sheet container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the bottom sheet already, because it's possible that the\n                // consumer specified `autoFocus` in order to move focus themselves.\n                if (activeElement !== element && !element.contains(activeElement)) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady();\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.bottomSheetConfig.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the bottom sheet was opened. */\n    _restoreFocus() {\n        const toFocus = this._elementFocusedBeforeOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n    _savePreviouslyFocusedElement() {\n        this._elementFocusedBeforeOpened = _getFocusedElementPierceShadowDom();\n        // The `focus` method isn't available during server-side rendering.\n        if (this._elementRef.nativeElement.focus) {\n            this._ngZone.runOutsideAngular(() => {\n                Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n            });\n        }\n    }\n}\nMatBottomSheetContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetContainer, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusTrapFactory }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i2.BreakpointObserver }, { token: DOCUMENT, optional: true }, { token: MatBottomSheetConfig }], target: i0.ɵɵFactoryTarget.Component });\nMatBottomSheetContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatBottomSheetContainer, selector: \"mat-bottom-sheet-container\", host: { attributes: { \"tabindex\": \"-1\", \"role\": \"dialog\", \"aria-modal\": \"true\" }, listeners: { \"@state.start\": \"_onAnimationStart($event)\", \"@state.done\": \"_onAnimationDone($event)\" }, properties: { \"attr.aria-label\": \"bottomSheetConfig?.ariaLabel\", \"@state\": \"_animationState\" }, classAttribute: \"mat-bottom-sheet-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\", styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"], directives: [{ type: i4.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matBottomSheetAnimations.bottomSheetState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-bottom-sheet-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matBottomSheetAnimations.bottomSheetState], host: {\n                        'class': 'mat-bottom-sheet-container',\n                        'tabindex': '-1',\n                        'role': 'dialog',\n                        'aria-modal': 'true',\n                        '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n                        '[@state]': '_animationState',\n                        '(@state.start)': '_onAnimationStart($event)',\n                        '(@state.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\", styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusTrapFactory }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i2.BreakpointObserver }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatBottomSheetConfig }];\n    }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBottomSheetModule {\n}\nMatBottomSheetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatBottomSheetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, declarations: [MatBottomSheetContainer], imports: [OverlayModule, MatCommonModule, PortalModule], exports: [MatBottomSheetContainer, MatCommonModule] });\nMatBottomSheetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, imports: [[OverlayModule, MatCommonModule, PortalModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatCommonModule, PortalModule],\n                    exports: [MatBottomSheetContainer, MatCommonModule],\n                    declarations: [MatBottomSheetContainer],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\nclass MatBottomSheetRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the bottom sheet has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n        this._afterOpened = new Subject();\n        this.containerInstance = containerInstance;\n        this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n        // Emit when opening animation completes\n        containerInstance._animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'visible'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        containerInstance._animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            _overlayRef.dispose();\n        });\n        _overlayRef\n            .detachments()\n            .pipe(take(1))\n            .subscribe(() => {\n            this._afterDismissed.next(this._result);\n            this._afterDismissed.complete();\n        });\n        merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))).subscribe(event => {\n            if (!this.disableClose &&\n                (event.type !== 'keydown' || !hasModifierKey(event))) {\n                event.preventDefault();\n                this.dismiss();\n            }\n        });\n    }\n    /**\n     * Dismisses the bottom sheet.\n     * @param result Data to be passed back to the bottom sheet opener.\n     */\n    dismiss(result) {\n        if (!this._afterDismissed.closed) {\n            // Transition the backdrop in parallel to the bottom sheet.\n            this.containerInstance._animationStateChanged\n                .pipe(filter(event => event.phaseName === 'start'), take(1))\n                .subscribe(event => {\n                // The logic that disposes of the overlay depends on the exit animation completing, however\n                // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n                // timeout which will clean everything up if the animation hasn't fired within the specified\n                // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n                // vast majority of cases the timeout will have been cleared before it has fired.\n                this._closeFallbackTimeout = setTimeout(() => {\n                    this._overlayRef.dispose();\n                }, event.totalTime + 100);\n                this._overlayRef.detachBackdrop();\n            });\n            this._result = result;\n            this.containerInstance.exit();\n        }\n    }\n    /** Gets an observable that is notified when the bottom sheet is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default bottom sheet options. */\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n    constructor(_overlay, _injector, _parentBottomSheet, _defaultOptions) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentBottomSheet = _parentBottomSheet;\n        this._defaultOptions = _defaultOptions;\n        this._bottomSheetRefAtThisLevel = null;\n    }\n    /** Reference to the currently opened bottom sheet. */\n    get _openedBottomSheetRef() {\n        const parent = this._parentBottomSheet;\n        return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    set _openedBottomSheetRef(value) {\n        if (this._parentBottomSheet) {\n            this._parentBottomSheet._openedBottomSheetRef = value;\n        }\n        else {\n            this._bottomSheetRefAtThisLevel = value;\n        }\n    }\n    open(componentOrTemplateRef, config) {\n        const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n        const overlayRef = this._createOverlay(_config);\n        const container = this._attachContainer(overlayRef, _config);\n        const ref = new MatBottomSheetRef(container, overlayRef);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: _config.data,\n                bottomSheetRef: ref,\n            }));\n        }\n        else {\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n            const contentRef = container.attachComponentPortal(portal);\n            ref.instance = contentRef.instance;\n        }\n        // When the bottom sheet is dismissed, clear the reference to it.\n        ref.afterDismissed().subscribe(() => {\n            // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n            if (this._openedBottomSheetRef == ref) {\n                this._openedBottomSheetRef = null;\n            }\n        });\n        if (this._openedBottomSheetRef) {\n            // If a bottom sheet is already in view, dismiss it and enter the\n            // new bottom sheet after exit animation is complete.\n            this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n            this._openedBottomSheetRef.dismiss();\n        }\n        else {\n            // If no bottom sheet is in view, enter the new bottom sheet.\n            ref.containerInstance.enter();\n        }\n        this._openedBottomSheetRef = ref;\n        return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @param result Data to pass to the bottom sheet instance.\n     */\n    dismiss(result) {\n        if (this._openedBottomSheetRef) {\n            this._openedBottomSheetRef.dismiss(result);\n        }\n    }\n    ngOnDestroy() {\n        if (this._bottomSheetRefAtThisLevel) {\n            this._bottomSheetRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     */\n    _attachContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatBottomSheetConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified bottom sheet config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig({\n            direction: config.direction,\n            hasBackdrop: config.hasBackdrop,\n            disposeOnNavigation: config.closeOnNavigation,\n            maxWidth: '100%',\n            scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0'),\n        });\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @param config Config that was used to create the bottom sheet.\n     * @param bottomSheetRef Reference to the bottom sheet.\n     */\n    _createInjector(config, bottomSheetRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const providers = [\n            { provide: MatBottomSheetRef, useValue: bottomSheetRef },\n            { provide: MAT_BOTTOM_SHEET_DATA, useValue: config.data },\n        ];\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n}\nMatBottomSheet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheet, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: MatBottomSheet, optional: true, skipSelf: true }, { token: MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatBottomSheet.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheet, providedIn: MatBottomSheetModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheet, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatBottomSheetModule }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: MatBottomSheet, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: MatBottomSheetConfig, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults, config) {\n    return Object.assign(Object.assign({}, defaults), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };\n","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: 'schedule-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"px-2 font-medium\">\n                    {{ date_list[6]?.id || active_date | date: 'LLLL' }}\n                </div>\n                <div class=\"\">\n                    <button mat-icon-button (click)=\"changeMonth(-1)\">\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button mat-icon-button (click)=\"changeMonth(1)\">\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div class=\"flex items-center text-sm\">\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center flex-wrap\">\n                <button\n                    mat-icon-button\n                    class=\"min-w-[14%] flex-1\"\n                    *ngFor=\"let day of date_list\"\n                    [class.text-opacity-30]=\"!day.is_month\"\n                    [class.text-primary]=\"day.id === active_date\"\n                    [class.text-black]=\"day.id !== active_date\"\n                    [class.bg-gray-200]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                >\n                    {{ day.id | date: 'd' }}\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ScheduleCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ScheduleCalendarComponent implements OnInit, ControlValueAccessor {\n    public active_date = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.active_date = startOfDay(new_value).valueOf();\n        this.offset = 0;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const date = addMonths(this.active_date, this.offset);\n        let start = startOfWeek(startOfMonth(date));\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { queryBookings } from '@placeos/bookings';\nimport { BaseClass } from '@placeos/common';\nimport { CalendarEvent, queryEvents } from '@placeos/events';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends BaseClass {\n    private _poll = new BehaviorSubject(0);\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._date, this._poll]).pipe(\n        switchMap(([date]) =>\n            queryEvents({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            })\n        )\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks = combineLatest([this._date, this._poll]).pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'desk',\n            })\n        )\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking = combineLatest([this._date, this._poll]).pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            })\n        )\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.desks,\n        this.parking,\n    ]).pipe(\n        map(([e, d, p]) => [...e, ...d, ...p].sort((a, b) => a.date - b.date)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false)))\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (_ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes(_.type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor() {\n        super();\n        this.subscription(\n            'date',\n            combineLatest([this._date, this._poll]).subscribe((_) => this._loading.next(true))\n        );\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({ ...filters, shown_types: shown_types.filter(_ => _ !== name) });\n        } else {\n            this._filters.next({ ...filters, shown_types: [...shown_types, name] });\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-filter-card',\n    template: `\n        <div class=\"flex items-center border-b border-gray-300 space-x-2 mb-4\">\n            <button mat-icon-button (click)=\"dismiss()\">\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <h2 class=\"flex-1 w-1/2 text-center font-medium\">Booking Types</h2>\n            <app-icon></app-icon>\n        </div>\n        <div class=\"space-y-4 border-b border-gray-300 mb-4 pb-4\">\n            <button matRipple class=\"flex items-center space-x-2 w-full text-left\" (click)=\"toggleType('event')\">\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <app-icon>meeting_room</app-icon>\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">Room</div>\n                    <div class=\"text-sm opacity-60\">\n                        Room and meeting invites\n                    </div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"\n                        (filters | async)?.shown_types?.includes('event')\n                    \"\n                ></mat-checkbox>\n            </button>\n            <button matRipple class=\"flex items-center space-x-2 w-full text-left\" (click)=\"toggleType('desk')\">\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <img src=\"assets/icons/desk-outline.svg\" class=\"w-6\" />\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">Desk</div>\n                    <div class=\"text-sm opacity-60\">Desk bookings</div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"(filters | async)?.shown_types?.includes('desk')\"\n                ></mat-checkbox>\n            </button>\n            <button matRipple class=\"flex items-center space-x-2 w-full text-left\"  (click)=\"toggleType('parking')\">\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <app-icon>drive_eta</app-icon>\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">Parking</div>\n                    <div class=\"text-sm opacity-60\">Car space bookings</div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"\n                        (filters | async)?.shown_types?.includes('parking')\n                    \"\n                ></mat-checkbox>\n            </button>\n        </div>\n        <button mat-button class=\"w-full\" (click)=\"dismiss()\">\n            Apply Filters\n        </button>\n    `,\n    styles: [`\n        mat-checkbox {\n            pointer-events: none;\n        }\n    `],\n})\nexport class ScheduleFilterCardComponent {\n    public readonly filters = this._state.filters;\n\n    public readonly toggleType = (t) => this._state.toggleType(t);\n    public readonly dismiss = () => this._sheet_ref.dismiss();\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _sheet_ref: MatBottomSheetRef<ScheduleFilterCardComponent>\n    ) {}\n}\n","import { Component } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ScheduleFilterCardComponent } from './schedule-filter-card.component';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-filters',\n    template: `\n        <div\n            class=\"hidden sm:block bg-white border border-gray-300 rounded p-2\"\n        >\n            <h3 class=\"font-medium mb-2\">Category Filters</h3>\n            <div class=\"flex flex-wrap space-x-2\">\n                <div\n                    class=\"flex items-center rounded-3xl border border-gray-300\"\n                    *ngIf=\"(filters | async)?.shown_types?.includes('event')\"\n                >\n                    <div class=\" px-2\">Rooms</div>\n                    <button mat-icon-button (click)=\"toggleType('event', true)\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex items-center rounded-3xl border border-gray-300\"\n                    *ngIf=\"(filters | async)?.shown_types?.includes('desk')\"\n                >\n                    <div class=\"px-2\">Desks</div>\n                    <button mat-icon-button (click)=\"toggleType('desk', true)\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex items-center rounded-3xl border border-gray-300\"\n                    *ngIf=\"(filters | async)?.shown_types?.includes('parking')\"\n                >\n                    <div class=\" px-2\">Car Spaces</div>\n                    <button\n                        mat-icon-button\n                        (click)=\"toggleType('parking', true)\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"sm:hidden flex items-center space-x-2\">\n            <button mat-button class=\"w-24\" (click)=\"openFilters()\">\n                Filters\n            </button>\n            <div\n                class=\"flex items-center rounded-3xl border border-gray-300 bg-white text-sm pl-2\"\n                *ngIf=\"(filters | async)?.shown_types?.includes('event')\"\n            >\n                <div>Rooms</div>\n                <button mat-icon-button (click)=\"toggleType('event', true)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex items-center rounded-3xl border border-gray-300 bg-white text-sm pl-2\"\n                *ngIf=\"(filters | async)?.shown_types?.includes('desk')\"\n            >\n                <div>Desks</div>\n                <button mat-icon-button (click)=\"toggleType('desk', true)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex items-center rounded-3xl border border-gray-300 bg-white text-sm pl-2\"\n                *ngIf=\"(filters | async)?.shown_types?.includes('parking')\"\n            >\n                <div>Car</div>\n                <button mat-icon-button (click)=\"toggleType('parking', true)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ScheduleFiltersComponent {\n    public readonly filters = this._state.filters;\n\n    public readonly toggleType = (t, c = false) => this._state.toggleType(t, c);\n\n    constructor(\n        private _sheet: MatBottomSheet,\n        private _state: ScheduleStateService\n    ) {}\n\n    public openFilters() {\n        this._sheet.open(ScheduleFilterCardComponent);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-sidebar',\n    template: `\n        <div\n            class=\"flex flex-col w-[18rem] h-full overflow-hidden bg-white border-r border-gray-300\"\n        >\n            <schedule-calendar\n                class=\"border-b border-gray-200\"\n                [ngModel]=\"date | async\"\n                (ngModelChange)=\"setDate($event)\"\n            ></schedule-calendar>\n            <h3 class=\"mx-4 mt-4 font-medium\">Filters</h3>\n            <div class=\"p-4 space-y-4\">\n                <button\n                    matRipple\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    (click)=\"toggleType('event')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-gray-200 text-2xl\"\n                    >\n                        <app-icon>meeting_room</app-icon>\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\">Room</div>\n                        <div class=\"text-sm opacity-60\">\n                            Room and meeting invites\n                        </div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('event')\n                        \"\n                    ></mat-checkbox>\n                </button>\n                <button\n                    matRipple\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    (click)=\"toggleType('desk')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-gray-200 text-2xl\"\n                    >\n                        <img src=\"assets/icons/desk-outline.svg\" class=\"w-6\" />\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\">Desk</div>\n                        <div class=\"text-sm opacity-60\">Desk bookings</div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('desk')\n                        \"\n                    ></mat-checkbox>\n                </button>\n                <button\n                    matRipple\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    (click)=\"toggleType('parking')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-gray-200 text-2xl\"\n                    >\n                        <app-icon>drive_eta</app-icon>\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\">Parking</div>\n                        <div class=\"text-sm opacity-60\">Car space bookings</div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('parking')\n                        \"\n                    ></mat-checkbox>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            mat-checkbox {\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ScheduleSidebarComponent {\n    public readonly filters = this._state.filters;\n    public readonly date = this._state.date;\n    public readonly toggleType = (t) => this._state.toggleType(t);\n    public readonly setDate = (d) => this._state.setDate(d);\n\n    constructor(private _state: ScheduleStateService) {}\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: 'schedule-mobile-calendar',\n    template: `\n        <div class=\"p-2\">\n            <button\n                class=\"flex items-center w-full p-2\"\n                matRipple\n                (click)=\"show_shortlist = !show_shortlist\"\n            >\n                <div class=\"px-2 font-medium\">\n                    {{ date_list[6]?.id || active_date | date: 'LLLL' }}\n                </div>\n                <app-icon>arrow_drop_down</app-icon>\n            </button>\n            <div class=\"flex items-center justify-center text-sm mb-2\">\n                <div\n                    class=\"opacity-60 text-center w-10 mx-2\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    mat-icon-button\n                    class=\"min-w-10 h-10 mx-2\"\n                    *ngFor=\"let day of list\"\n                    [class.text-opacity-30]=\"!day.is_month\"\n                    [class.text-primary]=\"day.id === active_date\"\n                    [class.text-black]=\"day.id !== active_date\"\n                    [class.bg-gray-200]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                >\n                    {{ day.id | date: 'd' }}\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ScheduleMobileCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ScheduleMobileCalendarComponent\n    implements OnInit, ControlValueAccessor {\n    public active_date = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list = [];\n    public short_list = [];\n    public show_shortlist = true;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    public get list() {\n        return this.show_shortlist ? this.short_list : this.date_list;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.active_date = startOfDay(new_value).valueOf();\n        this.offset = 0;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const date = addMonths(this.active_date, this.offset);\n        let start = startOfWeek(startOfMonth(date));\n        const now = startOfDay(Date.now());\n        let list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n        start = startOfWeek(date);\n        list = [];\n        while (list.length < 7) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.short_list = list;\n    }\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'app-schedule',\n    template: `\n        <topbar></topbar>\n        <div class=\"flex flex-col sm:flex-row flex-1 h-1/2 bg-[#E5E5E5] relative\">\n            <schedule-sidebar class=\"hidden sm:block\"></schedule-sidebar>\n            <div class=\"w-full bg-white border-b border-gray-300 sm:hidden\">\n                <schedule-mobile-calendar\n                    [ngModel]=\"date | async\"\n                    (ngModelChange)=\"setDate($event)\"\n                ></schedule-mobile-calendar>\n            </div>\n            <div class=\"flex-1 h-full p-4 overflow-auto space-y-2\">\n                <schedule-filters></schedule-filters>\n                <h3 class=\"font-medium my-2\">\n                    {{ date | async | date: 'EEE dd LLL yyyy' }}\n                    <span *ngIf=\"is_today | async\">(Today)</span>\n                </h3>\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <ng-container *ngFor=\"let item of (loading | async) ? [] : bookings | async; trackBy: trackByFn\">\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n            <mat-progress-bar\n                *ngIf=\"loading | async\"\n                class=\"absolute inset-x-0 bottom-0\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </div>\n        <footer-menu></footer-menu>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\">\n                    No events and bookings for\n                    {{ date | async | date: 'EEEE, dd LLL yyyy' }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleComponent {\n    public readonly bookings = this._state.filtered_bookings;\n    public readonly date = this._state.date;\n    public readonly loading = this._state.loading;\n    public readonly is_today = this.date.pipe(\n        map((_) => isSameDay(_, Date.now()))\n    );\n    public readonly setDate = (d) => this._state.setDate(d);\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    constructor(private _state: ScheduleStateService) {}\n\n    public trackByFn(index: number, item: any) {\n        return item?.id;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ScheduleCalendarComponent } from './schedule-calendar.component';\nimport { ScheduleFilterCardComponent } from './schedule-filter-card.component';\nimport { ScheduleFiltersComponent } from './schedule-filters.component';\nimport { ScheduleSidebarComponent } from './schedule-sidebar.component';\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleMobileCalendarComponent } from './schedule-mobile-calendar.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ScheduleComponent },\n    { path: '**', redirectTo: '' },\n];\n\nconst COMPONENTS = [\n    ScheduleComponent,\n    ScheduleSidebarComponent,\n    ScheduleCalendarComponent,\n    ScheduleFiltersComponent,\n    ScheduleFilterCardComponent,\n    ScheduleMobileCalendarComponent\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        MatBottomSheetModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppScheduleModule {}\n"],"sourceRoot":"webpack:///","file":"apps_workplace_src_app_new-schedule_schedule_module_ts.js"}