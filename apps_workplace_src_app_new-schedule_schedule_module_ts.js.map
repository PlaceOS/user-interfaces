{"version":3,"sources":["./node_modules/@angular/material/fesm2015/bottom-sheet.js","./node_modules/date-fns/esm/isSameMonth/index.js","./apps/workplace/src/app/new-schedule/schedule-calendar.component.ts","./node_modules/date-fns/esm/startOfWeek/index.js","./node_modules/date-fns/esm/startOfMonth/index.js","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./apps/workplace/src/app/new-schedule/schedule-filter-card.component.ts","./apps/workplace/src/app/new-schedule/schedule-filters.component.ts","./apps/workplace/src/app/new-schedule/schedule-sidebar.component.ts","./apps/workplace/src/app/new-schedule/schedule.component.ts","./apps/workplace/src/app/new-schedule/schedule.module.ts"],"names":["MatBottomSheetContainer_ng_template_0_Template","rf","ctx","MAT_BOTTOM_SHEET_DATA","MatBottomSheetConfig","this","data","hasBackdrop","disableClose","ariaLabel","closeOnNavigation","autoFocus","restoreFocus","matBottomSheetAnimations","bottomSheetState","transform","MatBottomSheetContainer","_elementRef","_changeDetectorRef","_focusTrapFactory","breakpointObserver","document","bottomSheetConfig","super","_animationState","_animationStateChanged","_elementFocusedBeforeOpened","attachDomPortal","portal","_validatePortalAttached","_setPanelClass","_savePreviouslyFocusedElement","_portalOutlet","_document","_breakpointSubscription","observe","subscribe","_toggleClass","isMatched","attachComponentPortal","attachTemplatePortal","_destroyed","detectChanges","markForCheck","unsubscribe","event","toState","_restoreFocus","_trapFocus","emit","cssClass","add","classList","nativeElement","remove","hasAttached","element","panelClass","Array","isArray","forEach","_focusTrap","create","focusInitialElementWhenReady","activeElement","_getActiveElement","contains","focus","toFocus","body","destroy","Promise","resolve","then","_a","shadowRoot","ɵfac","t","ɵcmp","type","selectors","viewQuery","_t","first","hostAttrs","hostVars","hostBindings","$event","_onAnimationStart","_onAnimationDone","features","decls","vars","consts","template","directives","styles","encapsulation","animation","MatBottomSheetModule","ɵmod","ɵinj","imports","MatBottomSheetRef","containerInstance","_overlayRef","_afterDismissed","Subject","_afterOpened","pipe","filter","phaseName","take","next","complete","clearTimeout","_closeFallbackTimeout","dispose","detachments","_result","merge","backdropClick","keydownEvents","keyCode","preventDefault","dismiss","result","closed","setTimeout","totalTime","detachBackdrop","exit","MAT_BOTTOM_SHEET_DEFAULT_OPTIONS","MatBottomSheet","_overlay","_injector","_parentBottomSheet","_defaultOptions","_bottomSheetRefAtThisLevel","parent","_openedBottomSheetRef","value","componentOrTemplateRef","config","_config","defaults","Object","assign","_applyConfigDefaults","overlayRef","_createOverlay","container","_attachContainer","ref","$implicit","bottomSheetRef","undefined","_createInjector","contentRef","instance","afterDismissed","enter","injector","viewContainerRef","providers","provide","useValue","containerPortal","attach","overlayConfig","direction","disposeOnNavigation","maxWidth","scrollStrategy","scrollStrategies","block","positionStrategy","position","global","centerHorizontally","bottom","backdropClass","userInjector","get","push","change","of","ɵprov","factory","token","providedIn","isSameMonth","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","getFullYear","getMonth","ScheduleCalendarComponent","active_date","startOfDay","Date","now","valueOf","offset","date_list","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","generateDates","new_value","date","addMonths","start","dirtyDate","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","toInteger","RangeError","day","getDay","diff","setDate","getDate","setHours","startOfWeek","startOfMonth","list","length","id","is_past","isBefore","is_month","addDays","useExisting","multi","changeMonth","ScheduleStateService","_poll","BehaviorSubject","_loading","_filters","shown_types","_date","events","combineLatest","switchMap","period_start","getUnixTime","period_end","endOfDay","desks","parking","bookings","map","e","d","p","sort","a","b","tap","filtered_bookings","bkns","filters","_","includes","asObservable","loading","subscription","name","clear","getValue","ScheduleFilterCardComponent","_state","_sheet_ref","toggleType","ScheduleFiltersComponent","_sheet","c","open","openFilters","ScheduleSidebarComponent","ROUTES","path","component","ScheduleComponent","is_today","isSameDay","item","redirectTo","AppScheduleModule"],"mappings":"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","file":"apps_workplace_src_app_new-schedule_schedule_module_ts.js","sourcesContent":["import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, NgModule, TemplateRef, Injector, ɵɵdefineInjectable, ɵɵinject, INJECTOR, Injectable, SkipSelf } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/layout';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\n\nfunction MatBottomSheetContainer_ng_template_0_Template(rf, ctx) { }\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n */\nclass MatBottomSheetConfig {\n    constructor() {\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** Whether the bottom sheet has a backdrop. */\n        this.hasBackdrop = true;\n        /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n        this.disableClose = false;\n        /** Aria label to assign to the bottom sheet element. */\n        this.ariaLabel = null;\n        /**\n         * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // Note that this is disabled by default, because while the a11y recommendations are to focus\n        // the first focusable element, doing so prevents screen readers from reading out the\n        // rest of the bottom sheet content.\n        /** Whether the bottom sheet should focus the first focusable element on open. */\n        this.autoFocus = false;\n        /**\n         * Whether the bottom sheet should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Animations used by the Material bottom sheet. */\nconst matBottomSheetAnimations = {\n    /** Animation that shows and hides a bottom sheet. */\n    bottomSheetState: trigger('state', [\n        state('void, hidden', style({ transform: 'translateY(100%)' })),\n        state('visible', style({ transform: 'translateY(0%)' })),\n        transition('visible => void, visible => hidden', animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`)),\n        transition('void => visible', animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n    constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, breakpointObserver, document, \n    /** The bottom sheet configuration. */\n    bottomSheetConfig) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.bottomSheetConfig = bottomSheetConfig;\n        /** The state of the bottom sheet animations. */\n        this._animationState = 'void';\n        /** Emits whenever the state of the animation changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the bottom sheet was opened. */\n        this._elementFocusedBeforeOpened = null;\n        /**\n         * Attaches a DOM portal to the bottom sheet container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._validatePortalAttached();\n            this._setPanelClass();\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._document = document;\n        this._breakpointSubscription = breakpointObserver\n            .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n            .subscribe(() => {\n            this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n            this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n            this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n        });\n    }\n    /** Attach a component portal as content to this bottom sheet container. */\n    attachComponentPortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this bottom sheet container. */\n    attachTemplatePortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Begin animation of bottom sheet entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Begin animation of the bottom sheet exiting from view. */\n    exit() {\n        if (!this._destroyed) {\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n        this._destroyed = true;\n    }\n    _onAnimationDone(event) {\n        if (event.toState === 'hidden') {\n            this._restoreFocus();\n        }\n        else if (event.toState === 'visible') {\n            this._trapFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    _toggleClass(cssClass, add) {\n        const classList = this._elementRef.nativeElement.classList;\n        add ? classList.add(cssClass) : classList.remove(cssClass);\n    }\n    _validatePortalAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach bottom sheet content after content is already attached');\n        }\n    }\n    _setPanelClass() {\n        const element = this._elementRef.nativeElement;\n        const panelClass = this.bottomSheetConfig.panelClass;\n        if (Array.isArray(panelClass)) {\n            // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n            panelClass.forEach(cssClass => element.classList.add(cssClass));\n        }\n        else if (panelClass) {\n            element.classList.add(panelClass);\n        }\n    }\n    /** Moves the focus inside the focus trap. */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        if (this.bottomSheetConfig.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else {\n            const activeElement = this._getActiveElement();\n            // Otherwise ensure that focus is on the container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the bottom sheet already, because it's possible that the\n            // consumer turned off `autoFocus` in order to move focus themselves.\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n    /** Restores focus to the element that was focused before the bottom sheet was opened. */\n    _restoreFocus() {\n        const toFocus = this._elementFocusedBeforeOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            const activeElement = this._getActiveElement();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n    _savePreviouslyFocusedElement() {\n        this._elementFocusedBeforeOpened = this._getActiveElement();\n        // The `focus` method isn't available during server-side rendering.\n        if (this._elementRef.nativeElement.focus) {\n            Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n        }\n    }\n    /** Gets the currently-focused element on the page. */\n    _getActiveElement() {\n        var _a;\n        // If the `activeElement` is inside a shadow root, `document.activeElement` will\n        // point to the shadow root so we have to descend into it ourselves.\n        const activeElement = this._document.activeElement;\n        return ((_a = activeElement === null || activeElement === void 0 ? void 0 : activeElement.shadowRoot) === null || _a === void 0 ? void 0 : _a.activeElement) || activeElement;\n    }\n}\nMatBottomSheetContainer.ɵfac = function MatBottomSheetContainer_Factory(t) { return new (t || MatBottomSheetContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BreakpointObserver), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatBottomSheetConfig)); };\nMatBottomSheetContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatBottomSheetContainer, selectors: [[\"mat-bottom-sheet-container\"]], viewQuery: function MatBottomSheetContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-modal\", \"true\", 1, \"mat-bottom-sheet-container\"], hostVars: 2, hostBindings: function MatBottomSheetContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@state.start\", function MatBottomSheetContainer_animation_state_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@state.done\", function MatBottomSheetContainer_animation_state_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.bottomSheetConfig == null ? null : ctx.bottomSheetConfig.ariaLabel);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatBottomSheetContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatBottomSheetContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc3.CdkPortalOutlet], styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"], encapsulation: 2, data: { animation: [matBottomSheetAnimations.bottomSheetState] } });\nMatBottomSheetContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusTrapFactory },\n    { type: BreakpointObserver },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatBottomSheetConfig }\n];\nMatBottomSheetContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheetContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-bottom-sheet-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than where\n                // they were stamped out. This means that we can't have the bottom sheet container be OnPush,\n                // because it might cause the sheets that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matBottomSheetAnimations.bottomSheetState],\n                host: {\n                    'class': 'mat-bottom-sheet-container',\n                    'tabindex': '-1',\n                    'role': 'dialog',\n                    'aria-modal': 'true',\n                    '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n                    '[@state]': '_animationState',\n                    '(@state.start)': '_onAnimationStart($event)',\n                    '(@state.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc2.BreakpointObserver }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatBottomSheetConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBottomSheetModule {\n}\nMatBottomSheetModule.ɵfac = function MatBottomSheetModule_Factory(t) { return new (t || MatBottomSheetModule)(); };\nMatBottomSheetModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatBottomSheetModule });\nMatBottomSheetModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            OverlayModule,\n            MatCommonModule,\n            PortalModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheetModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatCommonModule,\n                    PortalModule,\n                ],\n                exports: [MatBottomSheetContainer, MatCommonModule],\n                declarations: [MatBottomSheetContainer],\n                entryComponents: [MatBottomSheetContainer]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBottomSheetModule, { declarations: function () { return [MatBottomSheetContainer]; }, imports: function () { return [OverlayModule,\n        MatCommonModule,\n        PortalModule]; }, exports: function () { return [MatBottomSheetContainer, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\nclass MatBottomSheetRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the bottom sheet has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n        this._afterOpened = new Subject();\n        this.containerInstance = containerInstance;\n        this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n        // Emit when opening animation completes\n        containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'visible'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        containerInstance._animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            _overlayRef.dispose();\n        });\n        _overlayRef.detachments().pipe(take(1)).subscribe(() => {\n            this._afterDismissed.next(this._result);\n            this._afterDismissed.complete();\n        });\n        merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))).subscribe(event => {\n            if (!this.disableClose &&\n                (event.type !== 'keydown' || !hasModifierKey(event))) {\n                event.preventDefault();\n                this.dismiss();\n            }\n        });\n    }\n    /**\n     * Dismisses the bottom sheet.\n     * @param result Data to be passed back to the bottom sheet opener.\n     */\n    dismiss(result) {\n        if (!this._afterDismissed.closed) {\n            // Transition the backdrop in parallel to the bottom sheet.\n            this.containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'start'), take(1)).subscribe(event => {\n                // The logic that disposes of the overlay depends on the exit animation completing, however\n                // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n                // timeout which will clean everything up if the animation hasn't fired within the specified\n                // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n                // vast majority of cases the timeout will have been cleared before it has fired.\n                this._closeFallbackTimeout = setTimeout(() => {\n                    this._overlayRef.dispose();\n                }, event.totalTime + 100);\n                this._overlayRef.detachBackdrop();\n            });\n            this._result = result;\n            this.containerInstance.exit();\n        }\n    }\n    /** Gets an observable that is notified when the bottom sheet is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default bottom sheet options. */\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n    constructor(_overlay, _injector, _parentBottomSheet, _defaultOptions) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentBottomSheet = _parentBottomSheet;\n        this._defaultOptions = _defaultOptions;\n        this._bottomSheetRefAtThisLevel = null;\n    }\n    /** Reference to the currently opened bottom sheet. */\n    get _openedBottomSheetRef() {\n        const parent = this._parentBottomSheet;\n        return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    set _openedBottomSheetRef(value) {\n        if (this._parentBottomSheet) {\n            this._parentBottomSheet._openedBottomSheetRef = value;\n        }\n        else {\n            this._bottomSheetRefAtThisLevel = value;\n        }\n    }\n    open(componentOrTemplateRef, config) {\n        const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n        const overlayRef = this._createOverlay(_config);\n        const container = this._attachContainer(overlayRef, _config);\n        const ref = new MatBottomSheetRef(container, overlayRef);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: _config.data,\n                bottomSheetRef: ref\n            }));\n        }\n        else {\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n            const contentRef = container.attachComponentPortal(portal);\n            ref.instance = contentRef.instance;\n        }\n        // When the bottom sheet is dismissed, clear the reference to it.\n        ref.afterDismissed().subscribe(() => {\n            // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n            if (this._openedBottomSheetRef == ref) {\n                this._openedBottomSheetRef = null;\n            }\n        });\n        if (this._openedBottomSheetRef) {\n            // If a bottom sheet is already in view, dismiss it and enter the\n            // new bottom sheet after exit animation is complete.\n            this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n            this._openedBottomSheetRef.dismiss();\n        }\n        else {\n            // If no bottom sheet is in view, enter the new bottom sheet.\n            ref.containerInstance.enter();\n        }\n        this._openedBottomSheetRef = ref;\n        return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @param result Data to pass to the bottom sheet instance.\n     */\n    dismiss(result) {\n        if (this._openedBottomSheetRef) {\n            this._openedBottomSheetRef.dismiss(result);\n        }\n    }\n    ngOnDestroy() {\n        if (this._bottomSheetRefAtThisLevel) {\n            this._bottomSheetRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     */\n    _attachContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatBottomSheetConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified bottom sheet config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig({\n            direction: config.direction,\n            hasBackdrop: config.hasBackdrop,\n            disposeOnNavigation: config.closeOnNavigation,\n            maxWidth: '100%',\n            scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0')\n        });\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @param config Config that was used to create the bottom sheet.\n     * @param bottomSheetRef Reference to the bottom sheet.\n     */\n    _createInjector(config, bottomSheetRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const providers = [\n            { provide: MatBottomSheetRef, useValue: bottomSheetRef },\n            { provide: MAT_BOTTOM_SHEET_DATA, useValue: config.data }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n}\nMatBottomSheet.ɵfac = function MatBottomSheet_Factory(t) { return new (t || MatBottomSheet)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(MatBottomSheet, 12), ɵngcc0.ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8)); };\nMatBottomSheet.ɵprov = ɵɵdefineInjectable({ factory: function MatBottomSheet_Factory() { return new MatBottomSheet(ɵɵinject(Overlay), ɵɵinject(INJECTOR), ɵɵinject(MatBottomSheet, 12), ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8)); }, token: MatBottomSheet, providedIn: MatBottomSheetModule });\nMatBottomSheet.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: MatBottomSheet, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatBottomSheetConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatBottomSheet, [{\n        type: Injectable,\n        args: [{ providedIn: MatBottomSheetModule }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.Injector }, { type: MatBottomSheet, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatBottomSheetConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults, config) {\n    return Object.assign(Object.assign({}, defaults), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };\n\n//# sourceMappingURL=bottom-sheet.js.map","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: 'schedule-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"px-2 font-medium\">\n                    {{ date_list[6]?.id || active_date | date: 'LLLL' }}\n                </div>\n                <div class=\"\">\n                    <button mat-icon-button (click)=\"changeMonth(-1)\">\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button mat-icon-button (click)=\"changeMonth(1)\">\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div class=\"flex items-center text-sm\">\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center flex-wrap\">\n                <button\n                    mat-icon-button\n                    class=\"min-w-[14%] flex-1\"\n                    *ngFor=\"let day of date_list\"\n                    [class.text-opacity-30]=\"!day.is_month\"\n                    [class.text-primary]=\"day.id === active_date\"\n                    [class.text-black]=\"day.id !== active_date\"\n                    [class.bg-gray-200]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                >\n                    {{ day.id | date: 'd' }}\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ScheduleCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ScheduleCalendarComponent implements OnInit, ControlValueAccessor {\n    public active_date = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.active_date = startOfDay(new_value).valueOf();\n        this.offset = 0;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const date = addMonths(this.active_date, this.offset);\n        let start = startOfWeek(startOfMonth(date));\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import { Injectable } from '@angular/core';\nimport { queryBookings } from '@placeos/bookings';\nimport { BaseClass } from '@placeos/common';\nimport { CalendarEvent, queryEvents } from '@placeos/events';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends BaseClass {\n    private _poll = new BehaviorSubject(0);\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._date, this._poll]).pipe(\n        switchMap(([date]) =>\n            queryEvents({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            })\n        )\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks = combineLatest([this._date, this._poll]).pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'desk',\n            })\n        )\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking = combineLatest([this._date, this._poll]).pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            })\n        )\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.desks,\n        this.parking,\n    ]).pipe(\n        map(([e, d, p]) => [...e, ...d, ...p].sort((a, b) => a.date - b.date)),\n        tap(() => this._loading.next(false))\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (_ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes(_.type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor() {\n        super();\n        this.subscription(\n            'date',\n            combineLatest([this._date, this._poll]).subscribe((_) => this._loading.next(true))\n        );\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({ ...filters, shown_types: shown_types.filter(_ => _ !== name) });\n        } else {\n            this._filters.next({ ...filters, shown_types: [...shown_types, name] });\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-filter-card',\n    template: `\n        <div class=\"flex items-center border-b border-gray-300 space-x-2 mb-4\">\n            <button mat-icon-button (click)=\"dismiss()\">\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <h2 class=\"flex-1 w-1/2 text-center font-medium\">Booking Types</h2>\n            <app-icon></app-icon>\n        </div>\n        <div class=\"space-y-4 border-b border-gray-300 mb-4 pb-4\">\n            <button matRipple class=\"flex items-center space-x-2 w-full text-left\" (click)=\"toggleType('event')\">\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <app-icon>meeting_room</app-icon>\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">Room</div>\n                    <div class=\"text-sm opacity-60\">\n                        Room and meeting invites\n                    </div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"\n                        (filters | async)?.shown_types?.includes('event')\n                    \"\n                ></mat-checkbox>\n            </button>\n            <button matRipple class=\"flex items-center space-x-2 w-full text-left\" (click)=\"toggleType('desk')\">\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <img src=\"assets/icons/desk-outline.svg\" class=\"w-6\" />\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">Desk</div>\n                    <div class=\"text-sm opacity-60\">Desk bookings</div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"(filters | async)?.shown_types?.includes('desk')\"\n                ></mat-checkbox>\n            </button>\n            <button matRipple class=\"flex items-center space-x-2 w-full text-left\"  (click)=\"toggleType('parking')\">\n                <div\n                    class=\"h-10 w-10 rounded-full flex items-center justify-center text-2xl\"\n                >\n                    <app-icon>drive_eta</app-icon>\n                </div>\n                <div class=\"flex-1\">\n                    <div class=\"\">Parking</div>\n                    <div class=\"text-sm opacity-60\">Car space bookings</div>\n                </div>\n                <mat-checkbox\n                    [ngModel]=\"\n                        (filters | async)?.shown_types?.includes('parking')\n                    \"\n                ></mat-checkbox>\n            </button>\n        </div>\n        <button mat-button class=\"w-full\" (click)=\"dismiss()\">\n            Apply Filters\n        </button>\n    `,\n    styles: [`\n        mat-checkbox {\n            pointer-events: none;\n        }\n    `],\n})\nexport class ScheduleFilterCardComponent {\n    public readonly filters = this._state.filters;\n\n    public readonly toggleType = (t) => this._state.toggleType(t);\n    public readonly dismiss = () => this._sheet_ref.dismiss();\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _sheet_ref: MatBottomSheetRef<ScheduleFilterCardComponent>\n    ) {}\n}\n","import { Component } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ScheduleFilterCardComponent } from './schedule-filter-card.component';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-filters',\n    template: `\n        <div\n            class=\"hidden sm:block bg-white border border-gray-300 rounded p-2\"\n        >\n            <h3 class=\"font-medium mb-2\">Category Filters</h3>\n            <div class=\"flex flex-wrap space-x-2\">\n                <div\n                    class=\"flex items-center rounded-3xl border border-gray-300\"\n                    *ngIf=\"(filters | async)?.shown_types?.includes('event')\"\n                >\n                    <div class=\" px-2\">Rooms</div>\n                    <button mat-icon-button (click)=\"toggleType('event', true)\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex items-center rounded-3xl border border-gray-300\"\n                    *ngIf=\"(filters | async)?.shown_types?.includes('desk')\"\n                >\n                    <div class=\"px-2\">Desks</div>\n                    <button mat-icon-button (click)=\"toggleType('desk', true)\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex items-center rounded-3xl border border-gray-300\"\n                    *ngIf=\"(filters | async)?.shown_types?.includes('parking')\"\n                >\n                    <div class=\" px-2\">Car Spaces</div>\n                    <button\n                        mat-icon-button\n                        (click)=\"toggleType('parking', true)\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"sm:hidden flex items-center space-x-2\">\n            <button mat-button class=\"w-24\" (click)=\"openFilters()\">\n                Filters\n            </button>\n            <div\n                class=\"flex items-center rounded-3xl border border-gray-300 bg-white text-sm pl-2\"\n                *ngIf=\"(filters | async)?.shown_types?.includes('event')\"\n            >\n                <div>Rooms</div>\n                <button mat-icon-button (click)=\"toggleType('event', true)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex items-center rounded-3xl border border-gray-300 bg-white text-sm pl-2\"\n                *ngIf=\"(filters | async)?.shown_types?.includes('desk')\"\n            >\n                <div>Desks</div>\n                <button mat-icon-button (click)=\"toggleType('desk', true)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex items-center rounded-3xl border border-gray-300 bg-white text-sm pl-2\"\n                *ngIf=\"(filters | async)?.shown_types?.includes('parking')\"\n            >\n                <div>Car</div>\n                <button mat-icon-button (click)=\"toggleType('parking', true)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ScheduleFiltersComponent {\n    public readonly filters = this._state.filters;\n\n    public readonly toggleType = (t, c = false) => this._state.toggleType(t, c);\n\n    constructor(\n        private _sheet: MatBottomSheet,\n        private _state: ScheduleStateService\n    ) {}\n\n    public openFilters() {\n        this._sheet.open(ScheduleFilterCardComponent);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-sidebar',\n    template: `\n        <div\n            class=\"flex flex-col w-[18rem] h-full overflow-hidden bg-white border-r border-gray-300\"\n        >\n            <schedule-calendar\n                class=\"border-b border-gray-200\"\n                [ngModel]=\"date | async\"\n                (ngModelChange)=\"setDate($event)\"\n            ></schedule-calendar>\n            <h3 class=\"mx-4 mt-4 font-medium\">Filters</h3>\n            <div class=\"p-4 space-y-4\">\n                <button\n                    matRipple\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    (click)=\"toggleType('event')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-gray-200 text-2xl\"\n                    >\n                        <app-icon>meeting_room</app-icon>\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\">Room</div>\n                        <div class=\"text-sm opacity-60\">\n                            Room and meeting invites\n                        </div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('event')\n                        \"\n                    ></mat-checkbox>\n                </button>\n                <button\n                    matRipple\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    (click)=\"toggleType('desk')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-gray-200 text-2xl\"\n                    >\n                        <img src=\"assets/icons/desk-outline.svg\" class=\"w-6\" />\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\">Desk</div>\n                        <div class=\"text-sm opacity-60\">Desk bookings</div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('desk')\n                        \"\n                    ></mat-checkbox>\n                </button>\n                <button\n                    matRipple\n                    class=\"flex items-center space-x-2 w-full text-left\"\n                    (click)=\"toggleType('parking')\"\n                >\n                    <div\n                        class=\"h-10 w-10 rounded-full flex items-center justify-center bg-gray-200 text-2xl\"\n                    >\n                        <app-icon>drive_eta</app-icon>\n                    </div>\n                    <div class=\"flex-1\">\n                        <div class=\"\">Parking</div>\n                        <div class=\"text-sm opacity-60\">Car space bookings</div>\n                    </div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            (filters | async)?.shown_types?.includes('parking')\n                        \"\n                    ></mat-checkbox>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            mat-checkbox {\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ScheduleSidebarComponent {\n    public readonly filters = this._state.filters;\n    public readonly date = this._state.date;\n    public readonly toggleType = (t) => this._state.toggleType(t);\n    public readonly setDate = (d) => this._state.setDate(d);\n\n    constructor(private _state: ScheduleStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'app-schedule',\n    template: `\n        <topbar></topbar>\n        <div class=\"flex flex-1 h-1/2 bg-[#E5E5E5]\">\n            <schedule-sidebar class=\"hidden sm:block\"></schedule-sidebar>\n            <div class=\"flex-1 h-full p-4 overflow-auto space-y-2\">\n                <schedule-filters></schedule-filters>\n                <h3 class=\"font-medium my-2\">\n                    {{ date | async | date: 'EEE dd LLL yyyy' }}\n                    <span *ngIf=\"is_today | async\">(Today)</span>\n                </h3>\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <ng-container *ngFor=\"let item of bookings | async\">\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n            <mat-progress-bar\n                *ngIf=\"loading | async\"\n                class=\"absolute inset-x-0 bottom-0\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </div>\n        <footer-menu></footer-menu>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\">\n                    No events and bookings for\n                    {{ date | async | date: 'EEEE, dd LLL yyyy' }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleComponent {\n    public readonly bookings = this._state.filtered_bookings;\n    public readonly date = this._state.date;\n    public readonly loading = this._state.loading;\n    public readonly is_today = this.date.pipe(\n        map((_) => isSameDay(_, Date.now()))\n    );\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    constructor(private _state: ScheduleStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ScheduleCalendarComponent } from './schedule-calendar.component';\nimport { ScheduleFilterCardComponent } from './schedule-filter-card.component';\nimport { ScheduleFiltersComponent } from './schedule-filters.component';\nimport { ScheduleSidebarComponent } from './schedule-sidebar.component';\nimport { ScheduleComponent } from './schedule.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ScheduleComponent },\n    { path: '**', redirectTo: '' },\n];\n\nconst COMPONENTS = [\n    ScheduleComponent,\n    ScheduleSidebarComponent,\n    ScheduleCalendarComponent,\n    ScheduleFiltersComponent,\n    ScheduleFilterCardComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        MatBottomSheetModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppScheduleModule {}\n"],"sourceRoot":"webpack:///"}