{"version":3,"sources":["./src/app/directory/user-list/item/item.component.html","./src/app/directory/user-list/item/item.component.ts","./src/app/directory/user-list/user-list.component.html","./src/app/directory/user-list/user-list.component.ts","./src/app/directory/directory.module.ts"],"names":["DirectoryUserListItemComponent","_settings","this","get","LETTERS","split","ROUTES","path","component","DirectoryUserListComponent","_users","super","user_list","search$","Subject","groupedUsers","length","search_results$","pipe","debounceTime","distinctUntilChanged","switchMap","query","loading","min_search_length","q","catch","Promise","resolve","map","list","subscription","subscribe","buildGroups","next","users","sorted","sort","a","b","name","localeCompare","letter","letters","filter","f","startsWith","DirectoryModule","forChild"],"mappings":"uYAEQ,iBACI,2BACJ,Q,qBADmB,6B,uCAqBnB,eAOI,mE,eAEA,iBACJ,O,wBAJI,uD,4GA9BZ,gBACI,gBACI,sBAGA,gBACI,gBAAkB,QAAe,OACjC,gBACI,c,eAA8D,QAAgB,OAClF,OACJ,OACJ,OACA,iBACI,eAOI,oEAEA,oBACJ,OACA,sBAWJ,OACJ,O,uBApCwC,gCAEX,kCAIC,0BAEE,iEAA8C,2BAUlE,sCAA2B,uCAW1B,mCCnBN,Y,MAAMA,EAgBT,YAAoBC,GAAA,KAAAA,YAZpB,iBACI,OAAOC,KAAKD,UAAUE,IAAI,8BAGvB,mBAIA,kB,6CAZEH,GAA8B,Y,uBAA9BA,EAA8B,imBDV3C,wB,KAA4B,qB,y7CCUrB,G,qCCWa,wC,KAEI,Y,sCAJR,QACI,iBAAoB,QAAY,OAChC,8CAIJ,Q,wCALwB,gBAEC,2C,yBAJ7B,QACI,gCAOJ,Q,mCAPmB,+C,yBAFvB,QACI,gCASJ,Q,oBATqC,mC,mGAgBzC,iBACI,iBACI,iBACI,sBAUJ,OACA,iBACI,QAKJ,OACJ,OACJ,Q,oBAlBgB,6GAWJ,oJC1ChB,MAAMI,EAAU,6BAA6BC,MAAM,ICC7CC,EAAkB,CAAC,CAAEC,KAAM,GAAIC,UDM9B,M,MAAMC,UAAmC,IAsB5C,YAAoBR,EAAoCS,GACpDC,QADgB,KAAAV,YAAoC,KAAAS,SApBjD,KAAAE,UAAoB,GAQX,KAAAC,QAAU,IAAIC,EAAA,EAIvB,KAAAC,aAAyC,GAGhD,wBACI,MAAMC,EAASd,KAAKD,UAAUE,IAAI,mCAClC,MAAyB,iBAAXa,GAAuBA,GAAU,EAAIA,EAAS,EAOzD,WAEHd,KAAKe,gBAAkBf,KAAKW,QAAQK,KAChC,OAAAC,EAAA,GAAa,KACb,OAAAC,EAAA,KACA,OAAAC,EAAA,GAAWC,IACPpB,KAAKqB,SAAU,EAEXD,EAAMN,QAAUd,KAAKsB,kBACftB,KAAKQ,OAAOY,MAAM,CAAEG,EAAGH,IAASI,MAAM,IAAM,IAC5CC,QAAQC,QAAQ1B,KAAKU,WAAa,MAGhD,OAAAiB,EAAA,GAAKC,IACD5B,KAAKqB,SAAU,EACRO,KAIf5B,KAAK6B,aACD,iBACA7B,KAAKe,gBAAgBe,UAAWF,IAC5B5B,KAAKU,UAAYkB,EACjB5B,KAAK+B,YAAY/B,KAAKU,cAG9BV,KAAKW,QAAQqB,KAAK,IAGtB,cACI,OAAO9B,EAGH,YAAY+B,GAChB,MAAMC,EAASD,EAAME,KAAK,CAACC,EAAGC,IAAMD,EAAEE,KAAKC,cAAcF,EAAEC,OAC3D,IAAK,MAAME,KAAUxC,KAAKyC,QACtBzC,KAAKa,aAAa2B,GAAUN,EAAOQ,OAAQC,GAAMA,EAAEL,KAAKM,WAAWJ,K,6CA9DlEjC,GAA0B,sB,uBAA1BA,EAA0B,+f,GAAA,MDdvC,gBACI,mBACI,4BAAiB,uDAAqB,OAC1C,OACA,gBACI,gBACI,wBACI,yDAAsB,kCACP,EAAAI,QAAA,WAKlB,OACL,OACJ,OACA,eACI,+BAWJ,OACA,mBACI,wBACJ,OACJ,OACA,yCAyBA,4BAAgB,uDAAqB,Q,sBAxDZ,iCAEA,yBAAqB,eAG9B,mCAAsB,oBAAtB,CAAsB,eAAtB,CAAsB,WAUf,wDAAwC,cAyC/C,mC,28EC5CT,KCAA,Y,MAAMkC,G,8BAAAA,I,oDAAAA,IAAe,SAFf,CAAC,IAAc,IAAaC,SAAS1C,GAAS,Q,GAEpD","file":"directory-directory-module.4261f712b8c6d788220e.js","sourcesContent":["<div class=\"space-details\" *ngIf=\"user\" [class.with-image]=\"show_image\">\n    <div class=\"group\">\n        <div class=\"avatar\" *ngIf=\"show_image\">\n            <a-user-avatar [user]=\"user\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"name\">{{ user.name }}</div>\n            <div class=\"info\">\n                <a name=\"email\" [href]=\"'mailto:' + user.email | safe: 'url'\">{{ user.email }}</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"actions\">\n        <a\n            mat-flat-button\n            color=\"primary\"\n            button\n            name=\"locate\"\n            [routerLink]=\"['/explore']\"\n            [queryParams]=\"{ user: user.email }\"\n            (click)=\"sendLocateEvent()\"\n        >\n            Locate\n        </a>\n        <a\n            mat-flat-button\n            color=\"primary\"\n            button\n            name=\"call\"\n            *ngIf=\"user.phone\"\n            [href]=\"'tel:' + user.phone | safe: 'url'\"\n            (click)=\"sendCallEvent()\"\n        >\n            Call\n        </a>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { SettingsService } from '@user-interfaces/common';\nimport { User } from '@user-interfaces/users';\n\n@Component({\n    selector: 'a-directory-user-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class DirectoryUserListItemComponent {\n    /** Space to display */\n    @Input() public user: User;\n\n    public get show_image() {\n        return this._settings.get('app.directory.show_avatars');\n    }\n\n    public sendLocateEvent() {\n        // this._service.Analytics.event('Locate', `locate_clicked_user_${this.user.name}`);\n    }\n\n    public sendCallEvent() {\n        // this._service.Analytics.event('Call', `call_clicked_user_${this.user.name}`);\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","<div class=\"directory page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <div class=\"actions\" [class.blank]=\"false\" [class.has-back]=\"false\">\n        <div class=\"search\">\n            <a-searchbar\n                [(value)]=\"search_str\"\n                (valueChange)=\"search$.next($event)\"\n                [loading]=\"loading\"\n                [autofocus]=\"true\"\n                [flat]=\"true\"\n                placeholder=\"Search for a person...\"\n            ></a-searchbar>\n        </div>\n    </div>\n    <main>\n        <ng-container *ngIf=\"groupedUsers && user_list.length; else empty_state\">\n            <ng-container *ngFor=\"let letter of letters\">\n                <ng-container *ngIf=\"groupedUsers[letter].length\">\n                    <div class=\"letter\">{{ letter }}</div>\n                    <a-directory-user-list-item\n                        *ngFor=\"let user of groupedUsers[letter]\"\n                        [user]=\"user\"\n                    ></a-directory-user-list-item>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<ng-template #empty_state>\n    <div class=\"list\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <app-icon\n                    [icon]=\"{\n                        type: 'icon',\n                        class: 'material-icons',\n                        content:\n                            search_str && search_str.length >= min_search_length\n                                ? 'close'\n                                : 'arrow_upward'\n                    }\"\n                ></app-icon>\n            </div>\n            <div class=\"text\">\n                {{\n                    search_str && search_str.length >= min_search_length\n                        ? ' No matches for \"' + search_str + '\"'\n                        : 'Type above to search for users'\n                }}\n            </div>\n        </div>\n    </div>\n</ng-template>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>\n","import { Component, OnInit} from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { BaseClass, SettingsService } from '@user-interfaces/common';\nimport { StaffService, User } from '@user-interfaces/users';\n\nconst LETTERS = `ABCDEFGHIJKLMNOPQRSTUVWXYZ`.split('');\n\n@Component({\n    selector: 'a-directory-user-list',\n    templateUrl: './user-list.component.html',\n    styleUrls: ['./user-list.component.scss'],\n})\nexport class DirectoryUserListComponent extends BaseClass implements OnInit {\n    /** List of controllable spaces */\n    public user_list: User[] = [];\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Whether space list is being filtered */\n    public loading: boolean;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** Whether to show menu */\n    public show_menu: boolean;\n\n    public groupedUsers: { [id: string]: User[] } = {};\n\n    /** Minimum length of the search string needed to initial a search */\n    public get min_search_length(): number {\n        const length = this._settings.get('app.directory.min_search_length');\n        return typeof length === 'number' && length >= 0 ? length : 3;\n    }\n\n    constructor(private _settings: SettingsService, private _users: StaffService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                const retVal =\n                    query.length >= this.min_search_length\n                        ? this._users.query({ q: query }).catch(() => [])\n                        : Promise.resolve(this.user_list || []);\n                return retVal;\n            }),\n            map((list: User[]) => {\n                this.loading = false;\n                return list;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.buildGroups(this.user_list);\n            })\n        );\n        this.search$.next('');\n    }\n\n    public get letters(): string[] {\n        return LETTERS;\n    }\n\n    private buildGroups(users: User[]) {\n        const sorted = users.sort((a, b) => a.name.localeCompare(b.name));\n        for (const letter of this.letters) {\n            this.groupedUsers[letter] = sorted.filter((f) => f.name.startsWith(letter));\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { SharedContentModule } from '../ui/shared.module';\nimport { DirectoryUserListComponent } from './user-list/user-list.component';\nimport { DirectoryUserListItemComponent } from './user-list/item/item.component';\n\nconst ROUTES: Route[] = [{ path: '', component: DirectoryUserListComponent }];\n\n@NgModule({\n    declarations: [DirectoryUserListComponent, DirectoryUserListItemComponent],\n    imports: [CommonModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DirectoryModule {}\n"],"sourceRoot":"webpack:///"}