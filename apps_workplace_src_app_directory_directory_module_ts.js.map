{"version":3,"sources":["./apps/workplace/src/app/directory/user-details.component.ts","./apps/workplace/src/app/directory/user-list.component.ts","./apps/workplace/src/app/directory/directory.module.ts"],"names":["DirectoryUserListItemComponent","_settings","this","get","LETTERS","split","DirectoryUserListComponent","super","user_list","search$","Subject","groupedUsers","length","search_results$","pipe","debounceTime","distinctUntilChanged","switchMap","query","loading","min_search_length","toPromise","catch","Promise","resolve","map","list","subscription","subscribe","buildGroups","next","users","sorted","sort","a","b","name","localeCompare","letter","letters","filter","f","startsWith","ROUTES","path","component","DirectoryModule"],"mappings":"8ZAaY,2B,sBAAkC,sB,wCAyB9B,gBAOI,oE,gBAEA,kBACJ,Q,yBAJI,0D,6GApCZ,iBAKI,iCACA,iBACI,iBAAkB,SAAe,QACjC,e,gBAKI,SACJ,QACJ,QACA,iBAGI,eAOI,qEAEA,qBACJ,QACA,sBAWJ,QACJ,Q,wBAvCI,iCAEgB,oCAEM,4BAId,qEAEA,qCAWA,yCAA2B,wCAW1B,qCAcd,Y,MAAMA,EAgBT,YAAoBC,GAAA,KAAAA,YAZpB,iBACI,OAAOC,KAAKD,UAAUE,IAAI,8BAGvB,mBAIA,kB,6CAZEH,GAA8B,c,wBAA9BA,EAA8B,i7BAjDnC,yB,KAEK,sB,6DA+CN,G,0DCrBiB,0B,KAII,qB,qBAgBI,yC,KAEI,a,sCANR,SACI,kBACI,SACJ,QACA,+CAIJ,S,0CANQ,0BAGiB,6C,yBAN7B,SACI,iCASJ,S,oCATmB,iD,yBAPvB,SAMI,iCAWJ,S,qBAXqC,qC,yBAgB7C,kBACI,uBAA2B,SAIzB,QACF,kBACI,SAKJ,QACJ,S,qBAZ+B,8FAMvB,sJA9DpB,MAAMI,EAAU,6BAA6BC,MAAM,IAwF5C,Y,MAAMC,UAAmC,KAsB5C,YAAoBL,GAChBM,QADgB,KAAAN,YApBb,KAAAO,UAAoB,GAQX,KAAAC,QAAU,IAAIC,EAAA,GAIvB,KAAAC,aAAyC,GAGhD,wBACI,MAAMC,EAASV,KAAKD,UAAUE,IAAI,mCAClC,MAAyB,iBAAXS,GAAuBA,GAAU,EAAIA,EAAS,EAOzD,WAEHV,KAAKW,gBAAkBX,KAAKO,QAAQK,MAChC,EAAAC,EAAA,GAAa,MACb,EAAAC,EAAA,MACA,EAAAC,EAAA,GAAWC,IACPhB,KAAKiB,SAAU,EAEXD,EAAMN,QAAUV,KAAKkB,mBACf,QAAYF,GACPG,YACAC,MAAM,IAAM,IACjBC,QAAQC,QAAQtB,KAAKM,WAAa,OAGhD,EAAAiB,EAAA,GAAKC,IACDxB,KAAKiB,SAAU,EACRO,KAIfxB,KAAKyB,aACD,iBACAzB,KAAKW,gBAAgBe,UAAWF,IAC5BxB,KAAKM,UAAYkB,EACjBxB,KAAK2B,YAAY3B,KAAKM,cAG9BN,KAAKO,QAAQqB,KAAK,IAGtB,cACI,OAAO1B,EAGH,YAAY2B,GAChB,MAAMC,EAASD,EAAME,KAAK,CAACC,EAAGC,IAAMD,EAAEE,KAAKC,cAAcF,EAAEC,OAC3D,IAAK,MAAME,KAAUpC,KAAKqC,QACtBrC,KAAKS,aAAa2B,GAAUN,EAAOQ,OAAQC,GACvCA,EAAEL,KAAKM,WAAWJ,K,6CAjErBhC,GAA0B,c,wBAA1BA,EAA0B,g1B,GAAA,MAnF/B,kBACA,iBACI,sBACA,iBAGI,iBACI,4BAKI,sBAAoC,kBAAM,QAC1C,mBAEI,0DAAwB,mCACP,EAAAG,QAAA,UAHrB,QAMA,+BAMJ,QACJ,QACA,mBACI,iCAkBJ,QACJ,QACJ,QACA,6C,uBAlCoB,uCAOC,iCAOJ,0DAGb,gB,sQAmDL,G,cC3FP,MAAMkC,EAAkB,CAAC,CAAEC,KAAM,GAAIC,UAAWvC,IAWzC,Y,MAAMwC,G,6CAAAA,I,wBAAAA,I,4BAPA,CACL,KACA,KACA,cAAsBH,GACtB,Q,GAGD","file":"apps_workplace_src_app_directory_directory_module_ts.js","sourcesContent":["import { Component, Input } from '@angular/core';\n\nimport { SettingsService } from '@placeos/common';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'a-directory-user-list-item',\n    template: `\n        <div\n            class=\"flex flex-wrap items-center sm:space-x-4 bg-white hover:bg-gray-100 overflow-hidden p-4 mb-2\"\n            *ngIf=\"user\"\n            [class.with-image]=\"show_image\"\n        >\n            <a-user-avatar *ngIf=\"show_image\" [user]=\"user\"></a-user-avatar>\n            <div class=\"flex flex-col flex-1 w-1/2 ml-4 sm:ml-0\">\n                <div class=\"name\">{{ user.name }}</div>\n                <a\n                    class=\"text-sm underline\"\n                    name=\"email\"\n                    [href]=\"'mailto:' + user.email | safe: 'url'\"\n                >\n                    {{ user.email }}\n                </a>\n            </div>\n            <div\n                class=\"flex w-full sm:w-auto sm:flex-col items-center space-x-2 sm:space-x-0 sm:space-y-2 mt-4 sm:mt-0\"\n            >\n                <a\n                    mat-button\n                    button\n                    class=\"w-32 flex-1 sm:flex-none\"\n                    name=\"locate\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ user: user.email }\"\n                    (click)=\"sendLocateEvent()\"\n                >\n                    Locate\n                </a>\n                <a\n                    mat-button\n                    button\n                    class=\"w-32 flex-1 sm:flex-nones\"\n                    name=\"call\"\n                    *ngIf=\"user.phone\"\n                    [href]=\"'tel:' + user.phone | safe: 'url'\"\n                    (click)=\"sendCallEvent()\"\n                >\n                    Call\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n        `,\n    ],\n})\nexport class DirectoryUserListItemComponent {\n    /** Space to display */\n    @Input() public user: User;\n\n    public get show_image() {\n        return this._settings.get('app.directory.show_avatars');\n    }\n\n    public sendLocateEvent() {\n        // this._service.Analytics.event('Locate', `locate_clicked_user_${this.user.name}`);\n    }\n\n    public sendCallEvent() {\n        // this._service.Analytics.event('Call', `call_clicked_user_${this.user.name}`);\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n} from 'rxjs/operators';\n\nimport { BaseClass, SettingsService } from '@placeos/common';\nimport { searchStaff, User } from '@placeos/users';\n\nconst LETTERS = `ABCDEFGHIJKLMNOPQRSTUVWXYZ`.split('');\n\n@Component({\n    selector: '[a-directory-user-list]',\n    template: `\n        <topbar></topbar>\n        <div class=\"flex-1 flex sm:flex-row flex-col-reverse h-1/2\">\n            <nav-menu class=\"relative z-10\"></nav-menu>\n            <div\n                class=\"relative z-0 flex flex-col flex-1 h-1/2 sm:h-auto overflow-hidden\"\n            >\n                <div class=\"w-full flex items-center justify-center p-2\">\n                    <mat-form-field\n                        overlay\n                        class=\"rounded\"\n                        appearance=\"outline\"\n                    >\n                        <app-icon class=\"text-xl\" matPrefix>search</app-icon>\n                        <input\n                            matInput\n                            [(ngModel)]=\"search_str\"\n                            (ngModelChange)=\"search$.next($event)\"\n                            placeholder=\"Search for a person...\"\n                        />\n                        <mat-spinner\n                            matSuffix\n                            class=\"top-2\"\n                            *ngIf=\"loading\"\n                            [diameter]=\"32\"\n                        ></mat-spinner>\n                    </mat-form-field>\n                </div>\n                <main class=\"flex-1 h-1/2 w-full\">\n                    <ng-container\n                        *ngIf=\"\n                            groupedUsers && user_list.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container *ngFor=\"let letter of letters\">\n                            <ng-container *ngIf=\"groupedUsers[letter].length\">\n                                <div class=\"py-2 px-4 font-medium\">\n                                    {{ letter }}\n                                </div>\n                                <a-directory-user-list-item\n                                    *ngFor=\"let user of groupedUsers[letter]\"\n                                    [user]=\"user\"\n                                ></a-directory-user-list-item>\n                            </ng-container>\n                        </ng-container>\n                    </ng-container>\n                </main>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <app-icon class=\"text-5xl\">{{\n                    search_str && search_str.length >= min_search_length\n                        ? 'close'\n                        : 'arrow_upward'\n                }}</app-icon>\n                <div class=\"text\">\n                    {{\n                        search_str && search_str.length >= min_search_length\n                            ? ' No matches for \"' + search_str + '\"'\n                            : 'Type above to search for users'\n                    }}\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background: #f0f0f0;\n            }\n\n            mat-form-field {\n                width: 768px;\n                max-width: calc(100% - 2rem);\n            }\n        `,\n    ],\n})\nexport class DirectoryUserListComponent extends BaseClass implements OnInit {\n    /** List of controllable spaces */\n    public user_list: User[] = [];\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Whether space list is being filtered */\n    public loading: boolean;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** Whether to show menu */\n    public show_menu: boolean;\n\n    public groupedUsers: { [id: string]: User[] } = {};\n\n    /** Minimum length of the search string needed to initial a search */\n    public get min_search_length(): number {\n        const length = this._settings.get('app.directory.min_search_length');\n        return typeof length === 'number' && length >= 0 ? length : 3;\n    }\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                const retVal =\n                    query.length >= this.min_search_length\n                        ? searchStaff(query)\n                              .toPromise()\n                              .catch(() => [])\n                        : Promise.resolve(this.user_list || []);\n                return retVal;\n            }),\n            map((list: User[]) => {\n                this.loading = false;\n                return list;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.buildGroups(this.user_list);\n            })\n        );\n        this.search$.next('');\n    }\n\n    public get letters(): string[] {\n        return LETTERS;\n    }\n\n    private buildGroups(users: User[]) {\n        const sorted = users.sort((a, b) => a.name.localeCompare(b.name));\n        for (const letter of this.letters) {\n            this.groupedUsers[letter] = sorted.filter((f) =>\n                f.name.startsWith(letter)\n            );\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DirectoryUserListComponent } from './user-list.component';\nimport { DirectoryUserListItemComponent } from './user-details.component';\nimport { FormsModule } from '@angular/forms';\nimport { SharedComponentModule } from '../components/shared.module';\n\nconst ROUTES: Route[] = [{ path: '', component: DirectoryUserListComponent }];\n\n@NgModule({\n    declarations: [DirectoryUserListComponent, DirectoryUserListItemComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n    ],\n})\nexport class DirectoryModule {}\n"],"sourceRoot":"webpack:///"}