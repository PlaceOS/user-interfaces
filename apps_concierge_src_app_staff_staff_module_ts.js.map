{"version":3,"file":"apps_concierge_src_app_staff_staff_module_ts.js","mappings":"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","names":["StaffStateService","AsyncHandler","constructor","_org","_this","super","this","_onsite","_events","_filters","BehaviorSubject","_search","_loading","_users","loading","asObservable","filters","users","filtered_users","combineLatest","pipe","map","details","filter","options","i","name","toLowerCase","includes","email","only_onsite","user_events","switchMap","_ref","_asyncToGenerator","_","next","bookings","queryBookings","period_start","getUnixTime","startOfDay","Date","now","period_end","endOfDay","type","toPromise","checkin_map","valueOf","bkn","timePeriodsIntersect","date","duration","asset_id","checked_in","_x","apply","arguments","shareReplay","loadUsers","subscribe","setFilters","getValue","setSearchString","search","startPolling","delay","interval","stopPolling","clearInterval","checkin","user","_this2","result","saveBooking","booking_start","Math","floor","booking_end","title","description","building","display_name","zones","id","booking_type","checkinBooking","checkout","_this3","event","toJSON","_this4","user_list","searchStaff","sort","a","b","localeCompare","t","i0","i1","core","Yz7","factory","ɵfac","providedIn","level_r1","StaffTopbarComponent","_state","_route","_router","levels","active_levels","setDate","setSearch","str","updateZones","navigate","relativeTo","queryParams","zone_ids","join","ngOnInit","initialised","first","subscription","queryParamMap","params","has","get","split","length","level","levelWithID","buildings","find","bld","parent_id","zone","lvl","push","i2","i3","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","$event","StaffTopbarComponent_mat_option_3_Template","tmp_2_0","StaffDetailsComponent_div_0_div_7_Template","_r3","ctx_r2","onsite","ctx_r0","phone","StaffDetailsComponent","catch","e","notifyError","inputs","StaffDetailsComponent_div_0_Template","group_r6","_r8","$implicit","ctx_r7","scrollTo","active_group","group_r10","i_r14","user_r13","ctx_r12","events","StaffListingComponent_ng_container_4_ng_container_1_ng_container_1_staff_details_3_Template","ctx_r11","StaffListingComponent_ng_container_4_ng_container_1_ng_container_1_Template","ctx_r9","StaffListingComponent_ng_container_4_ng_container_1_Template","groups","CHARS","StaffListingComponent","user_count","list","user_map","char","startsWith","timeout","onScroll","scroll_top","_el","nativeElement","scrollTop","group","el","document","querySelector","offsetTop","scrollIntoView","behavior","block","viewQuery","StaffListingComponent_div_1_Template","StaffListingComponent_ng_container_4_Template","StaffListingComponent_mat_progress_bar_6_Template","StaffListingComponent_ng_template_8_Template","_r4","StaffComponent","ngOnDestroy","attrs","_c0","StaffComponent_mat_progress_bar_4_Template","NewStaffComponent","NewStaffComponent_mat_progress_bar_6_Template","ROUTES","path","component","COMPONENTS","StaffModule","oAB","cJS","CommonModule","FormsModule","UIModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/staff/staff-state.service.ts","./apps/concierge/src/app/staff/staff-topbar.component.ts","./apps/concierge/src/app/staff/staff-details.component.ts","./apps/concierge/src/app/staff/staff-listing.component.ts","./apps/concierge/src/app/staff/staff.component.ts","./apps/concierge/src/app/staff/new-staff.component.ts","./apps/concierge/src/app/staff/staff.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { searchStaff, StaffUser } from '@placeos/users';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport {\n    Booking,\n    checkinBooking,\n    queryBookings,\n    saveBooking,\n} from '@placeos/bookings';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { AsyncHandler, timePeriodsIntersect } from '@placeos/common';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface StaffFilters {\n    date?: number;\n    zones?: string[];\n    only_onsite?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StaffStateService extends AsyncHandler {\n    private _onsite: HashMap<boolean> = {};\n    private _events: HashMap<Booking> = {};\n\n    private _filters = new BehaviorSubject<StaffFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    private _users = new BehaviorSubject<StaffUser[]>([]);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly users = this._filters.asObservable();\n\n    public readonly filtered_users = combineLatest([\n        this._search,\n        this._users,\n        this._filters,\n    ]).pipe(\n        map((details) => {\n            const [filter, users, options] = details;\n            return users.filter(\n                (i) =>\n                    (!filter ||\n                        i.name.toLowerCase().includes(filter) ||\n                        i.email.toLowerCase().includes(filter)) &&\n                    (!options.only_onsite || this._onsite[i.email])\n            );\n        })\n    );\n\n    public readonly user_events = combineLatest([this._filters]).pipe(\n        switchMap(async (_) => {\n            this._loading.next(true);\n            const bookings = await queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'staff',\n            }).toPromise();\n            const checkin_map = {};\n            const now = new Date().valueOf();\n            for (const bkn of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        now,\n                        now,\n                        bkn.date,\n                        bkn.date + bkn.duration * 60 * 1000\n                    )\n                ) {\n                    checkin_map[bkn.asset_id] = bkn.checked_in;\n                    this._events[bkn.asset_id] = bkn;\n                }\n            }\n            this._onsite = checkin_map;\n            this._loading.next(false);\n            return checkin_map;\n        }),\n        shareReplay()\n    );\n\n    constructor(private _org: OrganisationService) {\n        super();\n        this.loadUsers();\n        this.user_events.subscribe();\n    }\n\n    public setFilters(filters: StaffFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.setFilters(this._filters.getValue());\n        this.interval(\n            'poll',\n            () => this.setFilters(this._filters.getValue()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkin(user: StaffUser) {\n        const result = await saveBooking({\n            booking_start: Math.floor(new Date().valueOf() / 1000),\n            booking_end: Math.floor(endOfDay(new Date()).valueOf() / 1000),\n            asset_id: user.email,\n            title: 'Checked-in Onsite',\n            description:\n                this._org.building.display_name || this._org.building.name,\n            zones: [this._org.building.id],\n            booking_type: 'staff',\n        } as any).toPromise();\n        await checkinBooking(result.id, true).toPromise();\n        this._events[user.email] = result;\n        this._onsite[user.email] = true;\n    }\n\n    public async checkout(user: StaffUser) {\n        const event = this._events[user.email];\n        if (event) {\n            const result = await saveBooking({\n                ...event.toJSON(),\n                booking_end: Math.floor(new Date().valueOf() / 1000),\n            } as any).toPromise();\n            await checkinBooking(result.id, false).toPromise();\n            this._events[user.email] = result;\n            this._onsite[user.email] = false;\n        }\n    }\n\n    private async loadUsers() {\n        const user_list = await searchStaff('').toPromise();\n        user_list.sort((a, b) => a.name.localeCompare(b.name));\n        this._users.next(user_list);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: 'staff-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-white dark:bg-neutral-700 h-20 px-4 border-b border-gray-300 dark:border-neutral-500 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.only_onsite\"\n                (ngModelChange)=\"setFilters({ only_onsite: $event })\"\n                ><div class=\"text-xs\">Onsite Only</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class StaffTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: StaffStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { notifyError } from '@placeos/common';\nimport { StaffUser } from '@placeos/users';\n\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: 'staff-details',\n    template: `\n        <div\n            class=\"w-full flex items-center px-4 py-2 bg-white dark:bg-neutral-700 border-b border-gray-200 dark:border-neutral-500 hover:opacity-80\"\n            details\n            *ngIf=\"user\"\n        >\n            <a-user-avatar [user]=\"user\"></a-user-avatar>\n            <div class=\"flex flex-col flex-1\">\n                <div class=\"px-2\">{{ user?.name }}</div>\n                <div class=\"px-2 text-xs text-opacity-50\">\n                    {{ user?.email }}\n                </div>\n            </div>\n            <div *ngIf=\"onsite\" class=\"text-xs opacity-50 px-4\">Onsite</div>\n            <div class=\"flex items-center\">\n                <action-icon\n                    [matTooltip]=\"onsite ? 'Checkout Staff' : 'Checkin Staff'\"\n                    [loading]=\"loading\"\n                    [content]=\"onsite ? 'event_busy' : 'event_available'\"\n                    (click)=\"onsite ? checkout() : checkin()\"\n                >\n                </action-icon>\n                <a\n                    icon\n                    matRipple\n                    matTooltip=\"Email Staff\"\n                    [attr.disabled]=\"!user?.email\"\n                    [href]=\"'mailto:' + user?.email\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n                <a\n                    icon\n                    matRipple\n                    matTooltip=\"Phone Staff\"\n                    [attr.disabled]=\"!user?.phone\"\n                    [href]=\"'tel:' + user?.phone\"\n                >\n                    <app-icon>call</app-icon>\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StaffDetailsComponent {\n    @Input() public user: StaffUser;\n    @Input() public onsite: boolean;\n\n    public loading: boolean;\n\n    public readonly checkin = async () => {\n        this.loading = true;\n        await this._state\n            .checkin(this.user)\n            .catch((e) => notifyError('Error checking in Staff member'));\n        this.loading = false;\n    };\n    public readonly checkout = async () => {\n        this.loading = true;\n        await this._state\n            .checkout(this.user)\n            .catch((e) => notifyError('Error checking out Staff member'));\n        this.loading = false;\n    };\n\n    constructor(private _state: StaffStateService) {}\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { StaffStateService } from './staff-state.service';\n\nconst CHARS = '#abcdefghijklmnopqrstuvwxyz'.split('');\n\n@Component({\n    selector: 'staff-listings',\n    template: `\n        <div class=\"w-full p-2 flex items-center justify-center\">\n            <div\n                letter\n                *ngFor=\"let group of groups\"\n                class=\"capitalize h-6 w-6 flex items-center justify-center text-xs cursor-pointer\"\n                [class.disabled]=\"(user_list | async)[group].length <= 0\"\n                [class.active]=\"group === active_group\"\n                (click)=\"scrollTo(group)\"\n            >\n                {{ group }}\n            </div>\n        </div>\n        <div\n            class=\"flex-1 overflow-auto w-full relative bg-gray-100 dark:bg-neutral-600\"\n            style=\"height: 50%\"\n            #container\n            (scroll)=\"onScroll($event)\"\n        >\n            <ng-container *ngIf=\"user_count | async; else empty_state\">\n                <ng-container *ngFor=\"let group of groups\">\n                    <ng-container *ngIf=\"(user_list | async)[group].length\">\n                        <div\n                            group\n                            [id]=\"'letter-' + (group === '#' ? '0' : group)\"\n                            class=\"capitalize bg-gray-300 dark:bg-gray-700 border-b text-sm font-medium sticky top-0 z-10\"\n                        >\n                            {{ group }}\n                        </div>\n                        <staff-details\n                            *ngFor=\"\n                                let user of (user_list | async)[group];\n                                let i = index\n                            \"\n                            [id]=\"'letter-' + group + '-' + i\"\n                            [user]=\"user\"\n                            [onsite]=\"\n                                (events | async)\n                                    ? (events | async)[user.email]\n                                    : false\n                            \"\n                        ></staff-details>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <ng-template #empty_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center\"\n            >\n                <p>No matching staff members</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 50%;\n            }\n\n            [letter] {\n                transition: font-size 200ms, color 200ms;\n            }\n\n            [group] {\n                border-color: #ccc;\n                padding: 0.5rem 1.65rem;\n            }\n\n            .disabled {\n                opacity: 0.2;\n                pointer-events: none;\n            }\n\n            .active {\n                font-size: 1.25rem;\n                opacity: 1;\n                color: #d81b60;\n            }\n        `,\n    ],\n})\nexport class StaffListingComponent extends AsyncHandler {\n    public active_group = '#';\n\n    public readonly groups = CHARS;\n    public readonly events = this._state.user_events;\n    public readonly loading = this._state.loading;\n\n    public readonly user_count = this._state.filtered_users.pipe(\n        map((list) => list.length)\n    );\n\n    public readonly user_list = this._state.filtered_users.pipe(\n        map((list) => {\n            const user_map = {};\n            for (const char of CHARS) {\n                user_map[char] = (list || []).filter(\n                    (user) =>\n                        user.name.toLowerCase()[0].startsWith(char) ||\n                        (char === '#' &&\n                            !CHARS.includes(user.name.toLowerCase()[0]))\n                );\n            }\n            this.timeout('scroll', () => this.onScroll({}), 30);\n            return user_map;\n        })\n    );\n\n    @ViewChild('container') private _el: ElementRef<HTMLDivElement>;\n\n    constructor(private _state: StaffStateService) {\n        super();\n    }\n\n    public onScroll(_) {\n        const scroll_top = this._el.nativeElement.scrollTop;\n        for (const group of CHARS) {\n            const el: HTMLDivElement = document.querySelector(\n                `#letter-${group === '#' ? '0' : group}`\n            );\n            if (el) {\n                if (el.offsetTop - scroll_top > 0) {\n                    break;\n                }\n                this.active_group = group;\n            }\n        }\n    }\n\n    public scrollTo(group: string) {\n        const el = document.querySelector(`#letter-${group}-0`);\n        if (el) {\n            el.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            this.active_group = group;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: '[app-staff]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex-1 flex flex-col\">\n            <staff-topbar class=\"w-full\"></staff-topbar>\n            <staff-listings class=\"w-full flex-1 h-0\"></staff-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class StaffComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: StaffStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: '[app-new-staff]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <staff-topbar class=\"w-full\"></staff-topbar>\n                <staff-listings class=\"w-full flex-1 h-0\"></staff-listings>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: #fff;\n            }\n        `,\n    ],\n})\nexport class NewStaffComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: StaffStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { StaffComponent } from './staff.component';\nimport { StaffTopbarComponent } from './staff-topbar.component';\nimport { StaffListingComponent } from './staff-listing.component';\nimport { StaffDetailsComponent } from './staff-details.component';\nimport { UIModule } from '../ui/ui.module';\nimport { NewStaffComponent } from './new-staff.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: StaffComponent },\n    { path: 'new', component: NewStaffComponent },\n];\n\nexport const COMPONENTS: Type<any>[] = [\n    NewStaffComponent,\n    StaffComponent,\n    StaffTopbarComponent,\n    StaffListingComponent,\n    StaffDetailsComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class StaffModule {}\n"],"x_google_ignoreList":[]}