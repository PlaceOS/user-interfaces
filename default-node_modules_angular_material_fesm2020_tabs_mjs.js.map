{"version":3,"file":"default-node_modules_angular_material_fesm2020_tabs_mjs.js","mappings":"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","names":["i0","e","b","d","n","s","_MAT_INK_BAR_POSITIONER","InjectionToken","providedIn","factory","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","_animationMode","this","alignToElement","show","run","onStable","pipe","take","subscribe","positions","inkBar","nativeElement","style","visibility","hide","ɵfac","ANIMATION_MODULE_TYPE","ɵdir","selectors","MAT_TAB_CONTENT","MAT_TAB_LABEL","MAT_TAB","_MatTabBase","mixinDisabled","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","super","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","templateLabel","_templateLabel","value","_setTemplateLabelInput","content","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","TemplatePortal","_explicitContent","_implicitContent","_closestTab","ɵcmp","TemplateRef","a","provide","useExisting","ngContentSelectors","matTabsAnimations","translateTab","trigger","state","transform","minHeight","transition","animate","MatTabBodyPortal","CdkPortalOutlet","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","Subscription","_leavingSub","_beforeCentering","startWith","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","preserveContent","detach","unsubscribe","forwardRef","MatTabBody","DOCUMENT","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","EventEmitter","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","i1","inputs","elementRef","decls","styles","MAT_TABS_CONFIG","_MatTabLabelWrapperBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","MatPaginatedTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","_disablePagination","_selectedIndex","selectFocusedIndex","indexFocused","runOutsideAngular","fromEvent","takeUntil","_stopInterval","disablePagination","coerceBooleanProperty","selectedIndex","coerceNumberProperty","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","ngAfterContentInit","dirChange","of","resize","realign","updatePagination","_alignInkBarToSelectedTab","FocusKeyManager","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","merge","_itemsResized","Promise","resolve","then","Math","max","min","_getMaxScrollDistance","newFocusIndex","_setTabFocus","ResizeObserver","EMPTY","switchMap","tabItems","Observable","observer","resizeObserver","forEach","item","observe","disconnect","skip","ngAfterContentChecked","_tabLabelCount","length","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","hasModifierKey","keyCode","ENTER","SPACE","focusIndex","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","index","tab","toArray","disabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","_handlePaginatorClick","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","_tabListInner","beforeVisiblePos","afterVisiblePos","isEnabled","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","timer","maxScrollDistance","distance","i1$1","i3","_MatTabHeaderBase","viewportRuler","ngZone","platform","animationMode","_disableRipple","disableRipple","preventDefault","MatTabHeader","E","w","A","O","S","i4","i5","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","mixinColor","mixinDisableRipple","_MatTabGroupBase","defaultConfig","_tabs","QueryList","_indexToSelect","_lastFocusedTabIndex","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","_preserveContent","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","contentTabIndex","_animationDuration","test","_contentTabIndex","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","selectedTab","i","_allTabs","reset","filter","notifyOnChanges","destroy","realignInkBar","_tabHeader","focusTab","header","_focusChanged","map","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","_getTabIndex","_tabFocusChanged","focusOrigin","MatTabGroup","rt","lt","i1$2","i2","i7","nextUniqueId","_MatTabNavBase","color","updateActiveLink","items","active","tabPanel","_activeTabId","id","_getRole","getAttribute","MatTabNav","MatTabLink","attrs","_MatTabLinkMixinBase","mixinTabIndex","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","animation","enterDuration","exitDuration","newValue","rippleDisabled","monitor","stopMonitoring","_handleFocus","indexOf","click","_getAriaControls","_getAriaSelected","_getAriaCurrent","MAT_RIPPLE_GLOBAL_OPTIONS","tabNavBar","focusMonitor","_tabLinkRipple","RippleRenderer","setupTriggerEvents","_removeTriggerEvents","MatTabsModule","ɵmod","ɵinj","CommonModule","MatCommonModule","PortalModule","MatRippleModule","ObserversModule","A11yModule"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2020/tabs.mjs"],"sourcesContent":["import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i2 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i1$2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil, switchMap, skip } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, EMPTY, Observable, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY,\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        // `onStable` might not run for a while if the zone has already stabilized.\n        // Wrap the call in `NgZone.run` to ensure that it runs relatively soon.\n        this._ngZone.run(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const positions = this._inkBarPositioner(element);\n                const inkBar = this._elementRef.nativeElement;\n                inkBar.style.left = positions.left;\n                inkBar.style.width = positions.width;\n            });\n        });\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n}\nMatInkBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInkBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: _MAT_INK_BAR_POSITIONER }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInkBar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatInkBar, selector: \"mat-ink-bar\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-ink-bar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInkBar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_MAT_INK_BAR_POSITIONER]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(/** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabContent, selector: \"[matTabContent]\", providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabContent]',\n                    providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabel, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: MAT_TAB, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabLabel, selector: \"[mat-tab-label], [matTabLabel]\", providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                    providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n        return this._templateLabel;\n    }\n    set templateLabel(value) {\n        this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTab, deps: [{ token: i0.ViewContainerRef }, { token: MAT_TAB_GROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTab.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTab, selector: \"mat-tab\", inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], labelClass: \"labelClass\", bodyClass: \"bodyClass\" }, providers: [{ provide: MAT_TAB, useExisting: MatTab }], queries: [{ propertyName: \"templateLabel\", first: true, predicate: MAT_TAB_LABEL, descendants: true }, { propertyName: \"_explicitContent\", first: true, predicate: MAT_TAB_CONTENT, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"_implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"matTab\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\", changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTab, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab', inputs: ['disabled'], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, exportAs: 'matTab', providers: [{ provide: MAT_TAB, useExisting: MatTab }], template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB_GROUP]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { templateLabel: [{\n                type: ContentChild,\n                args: [MAT_TAB_LABEL]\n            }], _explicitContent: [{\n                type: ContentChild,\n                args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n            }], _implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], textLabel: [{\n                type: Input,\n                args: ['label']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], labelClass: [{\n                type: Input\n            }], bodyClass: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({\n            transform: 'translate3d(-100%, 0, 0)',\n            minHeight: '1px',\n            // Normally this is redundant since we detach the content from the DOM, but if the user\n            // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n            visibility: 'hidden',\n        })),\n        state('right', style({\n            transform: 'translate3d(100%, 0, 0)',\n            minHeight: '1px',\n            visibility: 'hidden',\n        })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            if (!this._host.preserveContent) {\n                this.detach();\n            }\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBodyPortal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: forwardRef(() => MatTabBody) }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabBodyPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBodyPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabBodyHost]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatTabBody)]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n        this.preserveContent = false;\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return (position == 'center' || position == 'left-origin-center' || position == 'right-origin-center');\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabBodyBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabBodyBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabBodyBase, inputs: { _content: [\"content\", \"_content\"], origin: \"origin\", animationDuration: \"animationDuration\", preserveContent: \"preserveContent\", position: \"position\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabBodyBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _onCentering: [{\n                type: Output\n            }], _beforeCentering: [{\n                type: Output\n            }], _afterLeavingCenter: [{\n                type: Output\n            }], _onCentered: [{\n                type: Output\n            }], _content: [{\n                type: Input,\n                args: ['content']\n            }], origin: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], preserveContent: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }] } });\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBody, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatTabBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabBody, selector: \"mat-tab-body\", host: { classAttribute: \"mat-tab-body\" }, viewQueries: [{ propertyName: \"_portalHost\", first: true, predicate: CdkPortalOutlet, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"], dependencies: [{ kind: \"directive\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\" }], animations: [matTabsAnimations.translateTab], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBody, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-body', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matTabsAnimations.translateTab], host: {\n                        'class': 'mat-tab-body',\n                    }, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _portalHost: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabelWrapper, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabelWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.mat-tab-disabled\": \"disabled\", \"attr.aria-disabled\": \"!!disabled\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabelWrapper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        this._disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    get disablePagination() {\n        return this._disablePagination;\n    }\n    set disablePagination(value) {\n        this._disablePagination = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n        // can hold up tests that are in a background tab.\n        this._ngZone.onStable.pipe(take(1)).subscribe(realign);\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes, this._itemsResized())\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => {\n                Promise.resolve().then(() => {\n                    // Clamp the scroll distance, because it can change with the number of tabs.\n                    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n                    realign();\n                });\n            });\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    /** Sends any changes that could affect the layout of the items. */\n    _itemsResized() {\n        if (typeof ResizeObserver !== 'function') {\n            return EMPTY;\n        }\n        return this._items.changes.pipe(startWith(this._items), switchMap((tabItems) => new Observable((observer) => this._ngZone.runOutsideAngular(() => {\n            const resizeObserver = new ResizeObserver(() => {\n                observer.next();\n            });\n            tabItems.forEach(item => {\n                resizeObserver.observe(item.elementRef.nativeElement);\n            });\n            return () => {\n                resizeObserver.disconnect();\n            };\n        }))), \n        // Skip the first emit since the resize observer emits when an item\n        // is observed for new items when the tab is already inserted\n        skip(1));\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n        return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = ((direction == 'before' ? -1 : 1) * viewLength) / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPaginatedTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatPaginatedTabHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPaginatedTabHeader, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disablePagination: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabHeaderBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabHeaderBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabHeaderBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disableRipple: [{\n                type: Input\n            }] } });\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\" }, classAttribute: \"mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: MatTabLabelWrapper }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}.mat-tab-label::before{margin:5px}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\"], dependencies: [{ kind: \"directive\", type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { kind: \"directive\", type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-header', inputs: ['selectedIndex'], outputs: ['selectFocusedIndex', 'indexFocused'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    }, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}.mat-tab-label::before{margin:5px}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatTabLabelWrapper, { descendants: false }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Index of the tab that was focused last. */\n        this._lastFocusedTabIndex = null;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        this._disablePagination = false;\n        this._preserveContent = false;\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration =\n            defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n        this.disablePagination =\n            defaultConfig && defaultConfig.disablePagination != null\n                ? defaultConfig.disablePagination\n                : false;\n        this.dynamicHeight =\n            defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n        this.preserveContent = !!defaultConfig?.preserveContent;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() {\n        return this._dynamicHeight;\n    }\n    set dynamicHeight(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n        return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    get disablePagination() {\n        return this._disablePagination;\n    }\n    set disablePagination(value) {\n        this._disablePagination = coerceBooleanProperty(value);\n    }\n    /**\n     * By default tabs remove their content from the DOM while it's off-screen.\n     * Setting this to `true` will keep it in the DOM which will prevent elements\n     * like iframes and videos from reloading next time it comes back into the view.\n     */\n    get preserveContent() {\n        return this._preserveContent;\n    }\n    set preserveContent(value) {\n        this._preserveContent = coerceBooleanProperty(value);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._lastFocusedTabIndex = null;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                let selectedTab;\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        this._lastFocusedTabIndex = null;\n                        selectedTab = tabs[i];\n                        break;\n                    }\n                }\n                // If we haven't found an active tab and a tab exists at the selected index, it means\n                // that the active tab was swapped out. Since this won't be picked up by the rendering\n                // loop in `ngAfterContentChecked`, we need to sync it up manually.\n                if (!selectedTab && tabs[indexToSelect]) {\n                    Promise.resolve().then(() => {\n                        tabs[indexToSelect].isActive = true;\n                        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                    });\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        if (this._tabHeader) {\n            this._tabHeader.updatePagination();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this._lastFocusedTabIndex = index;\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent();\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, index) {\n        if (tab.disabled) {\n            return null;\n        }\n        const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n        return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabGroupBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", contentTabIndex: \"contentTabIndex\", disablePagination: \"disablePagination\", preserveContent: \"preserveContent\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { dynamicHeight: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], contentTabIndex: [{\n                type: Input\n            }], disablePagination: [{\n                type: Input\n            }], preserveContent: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], selectedIndexChange: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], animationDone: [{\n                type: Output\n            }], selectedTabChange: [{\n                type: Output\n            }] } });\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: { color: \"color\", disableRipple: \"disableRipple\" }, host: { properties: { \"class.mat-tab-group-dynamic-height\": \"dynamicHeight\", \"class.mat-tab-group-inverted-header\": \"headerPosition === \\\"below\\\"\" }, classAttribute: \"mat-tab-group\" }, providers: [\n        {\n            provide: MAT_TAB_GROUP,\n            useExisting: MatTabGroup,\n        },\n    ], queries: [{ propertyName: \"_allTabs\", predicate: MatTab, descendants: true }], viewQueries: [{ propertyName: \"_tabBodyWrapper\", first: true, predicate: [\"tabBodyWrapper\"], descendants: true }, { propertyName: \"_tabHeader\", first: true, predicate: [\"tabHeader\"], descendants: true }], exportAs: [\"matTabGroup\"], usesInheritance: true, ngImport: i0, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               [preserveContent]=\\\"preserveContent\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"], dependencies: [{ kind: \"directive\", type: i1$2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1$2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1$2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { kind: \"directive\", type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i7.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { kind: \"directive\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: [\"disabled\"] }, { kind: \"component\", type: MatTabBody, selector: \"mat-tab-body\" }, { kind: \"component\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: [\"selectedIndex\"], outputs: [\"selectFocusedIndex\", \"indexFocused\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [\n                        {\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup,\n                        },\n                    ], host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    }, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               [preserveContent]=\\\"preserveContent\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _allTabs: [{\n                type: ContentChildren,\n                args: [MatTab, { descendants: true }]\n            }], _tabBodyWrapper: [{\n                type: ViewChild,\n                args: ['tabBodyWrapper']\n            }], _tabHeader: [{\n                type: ViewChild,\n                args: ['tabHeader']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                if (this.tabPanel) {\n                    this.tabPanel._activeTabId = items[i].id;\n                }\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n    _getRole() {\n        return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n}\n_MatTabNavBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabNavBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabNavBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\", tabPanel: \"tabPanel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabNavBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], tabPanel: [{\n                type: Input\n            }] } });\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNav, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabNav, selector: \"[mat-tab-nav-bar]\", inputs: { color: \"color\" }, host: { properties: { \"attr.role\": \"_getRole()\", \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\", \"class.mat-primary\": \"color !== \\\"warn\\\" && color !== \\\"accent\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\" }, classAttribute: \"mat-tab-nav-bar mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: i0.forwardRef(function () { return MatTabLink; }), descendants: true }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], exportAs: [\"matTabNavBar\", \"matTabNav\"], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}.mat-tab-link::before{margin:5px}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\"], dependencies: [{ kind: \"directive\", type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { kind: \"directive\", type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNav, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color'], host: {\n                        '[attr.role]': '_getRole()',\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}.mat-tab-link::before{margin:5px}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatTabLink), { descendants: true }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        /** Unique id for the tab. */\n        this.id = `mat-tab-link-${nextUniqueId++}`;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() {\n        return this._isActive;\n    }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = newValue;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n        if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n            this.elementRef.nativeElement.click();\n        }\n    }\n    _getAriaControls() {\n        return this._tabNavBar.tabPanel\n            ? this._tabNavBar.tabPanel?.id\n            : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n        if (this._tabNavBar.tabPanel) {\n            return this.active ? 'true' : 'false';\n        }\n        else {\n            return this.elementRef.nativeElement.getAttribute('aria-selected');\n        }\n    }\n    _getAriaCurrent() {\n        return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n        return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n        if (this._tabNavBar.tabPanel) {\n            return this._isActive && !this.disabled ? 0 : -1;\n        }\n        else {\n            return this.tabIndex;\n        }\n    }\n}\n_MatTabLinkBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabLinkBase, deps: [{ token: _MatTabNavBase }, { token: i0.ElementRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabLinkBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabLinkBase, inputs: { active: \"active\", id: \"id\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabLinkBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatTabNavBase }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { active: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLink, deps: [{ token: MatTabNav }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabLink, selector: \"[mat-tab-link], [matTabLink]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-controls\": \"_getAriaControls()\", \"attr.aria-current\": \"_getAriaCurrent()\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.id\": \"id\", \"attr.tabIndex\": \"_getTabIndex()\", \"attr.role\": \"_getRole()\", \"class.mat-tab-disabled\": \"disabled\", \"class.mat-tab-label-active\": \"active\" }, classAttribute: \"mat-tab-link mat-focus-indicator\" }, exportAs: [\"matTabLink\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-controls]': '_getAriaControls()',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.id]': 'id',\n                        '[attr.tabIndex]': '_getTabIndex()',\n                        '[attr.role]': '_getRole()',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(focus)': '_handleFocus()',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatTabNav }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n    constructor() {\n        /** Unique id for the tab panel. */\n        this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n    }\n}\nMatTabNavPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNavPanel, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatTabNavPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabNavPanel, selector: \"mat-tab-nav-panel\", inputs: { id: \"id\" }, host: { attributes: { \"role\": \"tabpanel\" }, properties: { \"attr.aria-labelledby\": \"_activeTabId\", \"attr.id\": \"id\" }, classAttribute: \"mat-tab-nav-panel\" }, exportAs: [\"matTabNavPanel\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNavPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-tab-nav-panel',\n                    exportAs: 'matTabNavPanel',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        '[attr.aria-labelledby]': '_activeTabId',\n                        '[attr.id]': 'id',\n                        'class': 'mat-tab-nav-panel',\n                        'role': 'tabpanel',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, declarations: [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent], imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule], exports: [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabContent] });\nMatTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };\n"],"x_google_ignoreList":[0]}