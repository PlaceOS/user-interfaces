{"version":3,"file":"default-libs_users_src_index_ts.js","mappings":"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","names":["User","i0","$event","i_r7","_r9","index","ctx_r8","settings","available_weekdays","ctx_r10","changed","day_r6","ctx_r5","WFHSettingsModalComponent_div_0_div_28_Template","_r12","ctx_r11","saveChanges","ctx_r0","user","name","email","phone","_r1","option","weekdays","type_r13","_r15","$implicit","ctx_r14","id","WFH_SETTING_KEY","WFHSettingsModalComponent","constructor","_settings","_dialog_ref","this","options","loading","_booking","Booking","type","asset_id","ngOnInit","get","_initWeekdays","_loadOptionForToday","currentUser","_this","_asyncToGenerator","disableClose","saveBooking","toPromise","catch","e","saveUserSetting","close","day","Date","map","_","setDay","dirtyDate","dirtyDay","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","requiredArgs","arguments","defaultOptions","getDefaultOptions","weekStartsOn","toInteger","locale","RangeError","date","toDate","currentDay","getDay","delta","addDays","valueOf","_this2","list","queryBookings","period_start","getUnixTime","startOfDay","now","period_end","endOfDay","length","t","i1","i2","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template","_r3","fromUnixTime","dirtyUnixTime","unixTime","user_r4","_r6","removeUser","ctx_r1","host","availability","_c1","offset","width","i_r8","ctx_r2","today","current_hour","ctx_r3","FindAvailabilityModalComponent","AsyncHandler","isSameDay","getHours","selection_left","getMinutes","selection_width","duration","_data","_renderer","super","users","BehaviorSubject","search","hours","Array","fill","pipe","debounceTime","switchMap","queryUserFreeBusy","calendars","join","catchError","of","availability_list","availability_map","item","filter","status","block","starts_at","differenceInMinutes","ends_at","start","size","defaultIfEmpty","shareReplay","move_time","_start_time","_move_last","_move_size","next","addUser","getValue","u","closeAndUpdate","ngAfterViewInit","timeout","el","_container_el","nativeElement","querySelector","rect","getBoundingClientRect","el_rect","scrollTo","left","updateWidth","updateScroll","container_size","user_list_size","Math","floor","scrollLeft","startMovePeriod","event","preventDefault","stopPropagation","MouseEvent","clientX","touches","subscription","listen","_onMovePeriod","_onMoveEnd","startMoveDuration","_onMoveDuration","change_px","change_min","abs","old_date","addMinutes","max","unsub","MAT_DIALOG_DATA","viewQuery","FindAvailabilityModalComponent_div_21_Template","FindAvailabilityModalComponent_div_23_Template","FindAvailabilityModalComponent_div_30_Template","event_r1","UserAvailabilityComponent","inputs","UserAvailabilityComponent_div_2_Template","i3","i4","i5","i6","i7","i8","i9","i10","i11","i12","MapLocation","location","position","map_id","x","map_width","y","map_height","variance","last_seen","level","building","at_location","coordinates_from"],"sourceRoot":"webpack:///","sources":["./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/wfh-settings-modal.component.ts","./node_modules/date-fns/esm/setDay/index.js","./node_modules/date-fns/esm/fromUnixTime/index.js","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Pipe } from \"@angular/core\";\nimport { showGuest } from \"./guests.fn\";\nimport { showStaff } from \"./staff.fn\";\nimport { User } from \"./user.class\";\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user'\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(({ id, email }) => id === user_id || email === user_id);\n        if (user) return user;\n        user = await showStaff(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n","import addDays from \"../addDays/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport default function setDay(dirtyDate, dirtyDay, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff);\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param {Number} unixTime - the given Unix timestamp (in seconds)\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh]\"\n            (window:resize)=\"updateWidth()\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                #container\n                class=\"flex flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-auto divide-x divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n                (scroll)=\"updateScroll()\"\n            >\n                <div\n                    users\n                    class=\"sticky left-0 min-h-full bg-white dark:bg-neutral-700 border-r border-gray-300 dark:border-neutral-500 z-30\"\n                >\n                    <div\n                        header\n                        class=\"h-10 w-[6rem] border-b border-gray-300 dark:border-neutral-500\"\n                    ></div>\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"user\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[user.email]\n                                    : []\n                            \"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                </div>\n                <div\n                    [attr.hour]=\"i\"\n                    class=\"min-w-[5rem] bg-gray-50 dark:bg-neutral-600 min-h-full pointer-events-none\"\n                    [attr.disabled]=\"today && i < current_hour\"\n                    *ngFor=\"let h of hours; let i = index\"\n                >\n                    <div\n                        header\n                        class=\"h-10 border-b border-gray-300 dark:border-neutral-500 p-2\"\n                    >\n                        {{ i % 12 ? i % 12 : '12' }}{{ i >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div\n                    selection\n                    class=\"absolute top-10 bottom-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                    [style.left]=\"selection_left + 'rem'\"\n                    [style.width]=\"selection_width + 'rem'\"\n                    (mousedown)=\"startMovePeriod($event)\"\n                    (touchstart)=\"startMovePeriod($event)\"\n                >\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                    ></div>\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                        (mousedown)=\"startMoveDuration($event)\"\n                        (touchstart)=\"startMoveDuration($event)\"\n                    ></div>\n                    <div\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ duration | duration }}\n                    </div>\n                    <div\n                        *ngIf=\"move_time\"\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ date | date: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [disabled='true'] {\n                background: rgba(0, 0, 0, 0.05) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset = 0;\n    public width = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n\n    public readonly availability = this.users.pipe(\n        debounceTime(300),\n        switchMap((users) => {\n            if (!users.length) return of([]);\n            return queryUserFreeBusy({\n                calendars: [this.host.email, ...users.map((_) => _.email)].join(\n                    ','\n                ),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5 + 6;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.updateWidth();\n                this.updateScroll();\n            },\n            300\n        );\n    }\n\n    public updateWidth() {\n        const container_size =\n            this._container_el.nativeElement.getBoundingClientRect().width;\n        const user_list_size = this._container_el.nativeElement\n            .querySelector('[users]')\n            .getBoundingClientRect().width;\n        this.width = Math.floor(container_size - user_list_size);\n        this._move_size =\n            this._container_el.nativeElement\n                .querySelector('[hour]')\n                .getBoundingClientRect().width * 24;\n    }\n\n    public updateScroll() {\n        this.offset = this._container_el.nativeElement.scrollLeft;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 0;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"overflow-hidden relative border-b border-gray-300 dark:border-neutral-500 h-full pointer-events-none\"\n            [style.width]=\"width + 'px'\"\n        >\n            <div\n                class=\"absolute w-[120rem] h-full inset-y-0\"\n                [style.left]=\"-offset + 'px'\"\n            >\n                <div\n                    event\n                    *ngFor=\"let event of availability\"\n                    class=\"absolute inset-y-0 bg-primary text-white p-2 overflow-hidden border border-white rounded\"\n                    [style.left]=\"event.start + '%'\"\n                    [style.width]=\"event.size + '%'\"\n                >\n                    <div class=\"text-xs\">Unavailable</div>\n                    <div class=\"text-xs max-w-full\">\n                        {{ event.date | date: 'shortTime' }} -\n                        {{\n                            event.date.valueOf() + event.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n    @Input() public offset = 0;\n    @Input() public width = 0;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[2,3]}