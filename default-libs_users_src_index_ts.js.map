{"version":3,"file":"default-libs_users_src_index_ts.js","mappings":"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","names":["USER_LIST","EMPTY_USER","User","UserPipe","transform","user_id","user","find","id","email","showStaff","toPromise","showGuest","push","pure","i0","WFH_SETTING_KEY","WFHSettingsModalComponent","constructor","_settings","_dialog_ref","this","name","options","Booking","type","asset_id","ngOnInit","settings","get","_initWeekdays","_loadOptionForToday","currentUser","saveChanges","_this","loading","disableClose","option","_booking","saveBooking","catch","e","saveUserSetting","close","day","Date","weekdays","available_weekdays","map","_","setDay","dirtyDate","dirtyDay","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","requiredArgs","arguments","defaultOptions","getDefaultOptions","weekStartsOn","toInteger","locale","RangeError","date","toDate","currentDay","getDay","dayIndex","delta","addDays","valueOf","list","queryBookings","period_start","getUnixTime","startOfDay","now","period_end","endOfDay","length","_this2","core","selectors","FindAvailabilityModalComponent","AsyncHandler","_data","_renderer","super","duration","users","host","Array","fill","today","isSameDay","current_hour","getHours","selection_left","getMinutes","selection_width","addUser","filter","u","closeAndUpdate","ngAfterViewInit","timeout","el","_container_el","nativeElement","querySelector","rect","getBoundingClientRect","el_rect","scrollTo","left","updateWidth","updateScroll","container_size","width","user_list_size","Math","floor","_move_size","offset","scrollLeft","startMovePeriod","event","preventDefault","stopPropagation","_move_last","MouseEvent","clientX","touches","move_time","_start_time","subscription","listen","_onMovePeriod","_onMoveEnd","startMoveDuration","_onMoveDuration","change_px","change_min","abs","old_date","addMinutes","max","unsub","MAT_DIALOG_DATA","ctx","UserAvailabilityComponent","BehaviorSubject","_user$","pipe","switchMap","queryEvents","calendars","i","start","size","shareReplay","ngOnChanges","changes","next","SharedUsersModule","CommonModule","FormsModule","ReactiveFormsModule","MatDialogModule","FormFieldsModule","ComponentsModule","MatCheckboxModule","MatProgressSpinnerModule","MatMenuModule","MapLocation","location","position","map_id","x","map_width","y","map_height","variance","last_seen","level","building","at_location","coordinates_from"],"sourceRoot":"webpack:///","sources":["./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/wfh-settings-modal.component.ts","./node_modules/date-fns/esm/setDay/index.js","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Pipe } from \"@angular/core\";\nimport { showGuest } from \"./guests.fn\";\nimport { showStaff } from \"./staff.fn\";\nimport { User } from \"./user.class\";\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user'\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(({ id, email }) => id === user_id || email === user_id);\n        if (user) return user;\n        user = await showStaff(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n","import addDays from \"../addDays/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setDay(dirtyDate, dirtyDay, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff);\n}","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport { addMinutes, isSameDay } from 'date-fns';\nimport { User } from '../user.class';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh]\"\n            (window:resize)=\"updateWidth()\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                #container\n                class=\"flex flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-auto divide-x divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n                (scroll)=\"updateScroll()\"\n            >\n                <div\n                    users\n                    class=\"sticky left-0 min-h-full bg-white dark:bg-neutral-700 border-r border-gray-300 dark:border-neutral-500 z-30\"\n                >\n                    <div\n                        header\n                        class=\"h-10 w-[6rem] border-b border-gray-300 dark:border-neutral-500\"\n                    ></div>\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        *ngFor=\"let user of users\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button icon class=\"absolute -top-1 -left-1\">\n                            <app-icon>close</app-icon>\n                        </button>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                </div>\n                <div\n                    [attr.hour]=\"i\"\n                    class=\"min-w-[5rem] bg-gray-50 dark:bg-neutral-600 min-h-full pointer-events-none\"\n                    [attr.disabled]=\"today && i < current_hour\"\n                    *ngFor=\"let h of hours; let i = index\"\n                >\n                    <div\n                        header\n                        class=\"h-10 border-b border-gray-300 dark:border-neutral-500 p-2\"\n                    >\n                        {{ i % 12 ? i % 12 : '12' }}{{ i >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div\n                    selection\n                    class=\"absolute top-10 bottom-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                    [style.left]=\"selection_left + 'rem'\"\n                    [style.width]=\"selection_width + 'rem'\"\n                    (mousedown)=\"startMovePeriod($event)\"\n                    (touchstart)=\"startMovePeriod($event)\"\n                >\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                    ></div>\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                        (mousedown)=\"startMoveDuration($event)\"\n                        (touchstart)=\"startMoveDuration($event)\"\n                    ></div>\n                    <div\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ duration | duration }}\n                    </div>\n                    <div\n                        *ngIf=\"move_time\"\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ date | date: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [disabled='true'] {\n                background: rgba(0, 0, 0, 0.05) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public users = [...this._data.users];\n    public user?: User;\n    public offset = 0;\n    public width = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5 + 6;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n    }\n\n    public addUser(user: User) {\n        this.users = [\n            ...this.users.filter((u) => u.email !== user.email),\n            user,\n        ];\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.updateWidth();\n                this.updateScroll();\n            },\n            300\n        );\n    }\n\n    public updateWidth() {\n        const container_size =\n            this._container_el.nativeElement.getBoundingClientRect().width;\n        const user_list_size = this._container_el.nativeElement\n            .querySelector('[users]')\n            .getBoundingClientRect().width;\n        this.width = Math.floor(container_size - user_list_size);\n        this._move_size =\n            this._container_el.nativeElement\n                .querySelector('[hour]')\n                .getBoundingClientRect().width * 24;\n    }\n\n    public updateScroll() {\n        this.offset = this._container_el.nativeElement.scrollLeft;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 0;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { endOfDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { User } from '../user.class';\nimport { queryEvents } from 'libs/events/src/lib/events.fn';\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div class=\"overflow-hidden relative border-b border-gray-300 dark:border-neutral-500 h-full pointer-events-none\" [style.width]=\"width + 'px'\">\n            <div class=\"w-[120rem] h-px\"></div>\n            <div\n                event\n                *ngFor=\"let event of availability | async\"\n                class=\"absolute inset-y-0 bg-primary rounded-lg text-white\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div>Unavailable</div>\n                <div>\n                    {{ event.date | date:'shortTime' }} - \n                    {{ event.date + event.duration * 60 * 1000 | date:'shortTime' }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public date: number = Date.now();\n    @Input() public offset = 0;\n    @Input() public width = 0;\n\n    private _user$ = new BehaviorSubject(null);\n\n    public readonly availability = this._user$.pipe(\n        filter((_) => _),\n        switchMap((user) =>\n            queryEvents({\n                calendars: user.email,\n                period_start: startOfDay(this.date).valueOf(),\n                period_end: endOfDay(this.date).valueOf(),\n            })\n        ),\n        map((_) =>\n            _.map((i) => ({\n                date: i.date,\n                duration: i.duration,\n                start:\n                    (new Date(i.date).getHours() +\n                        new Date(i.date).getMinutes() / 60) /\n                    24,\n                size: i.duration / 60 / 24,\n            }))\n        ),\n        shareReplay(1)\n    );\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.user && this.user) {\n            this._user$.next(this.user);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[2]}