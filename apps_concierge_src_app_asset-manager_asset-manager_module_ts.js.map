{"version":3,"file":"apps_concierge_src_app_asset-manager_asset-manager_module_ts.js","mappings":"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","names":["CdkStepperModule","static","this","ɵfac","t","ɵmod","i0","type","ɵinj","imports","BidiModule","MatStepperIntl","constructor","changes","Subject","optionalLabel","completedLabel","editableLabel","ɵprov","token","factory","providedIn","MAT_STEPPER_INTL_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","MAT_STEPPER_INTL_PROVIDER_FACTORY","parentIntl","MatStepperModule","providers","ErrorStateMatcher","MatCommonModule","CommonModule","PortalModule","MatIconModule","MatRippleModule","_r5","category_r1","$implicit","ctx_r3","edit","ctx_r6","remove","name","AssetCategoryManagementModalComponent_ng_container_12_div_1_Template","id","AssetCategoryManagementModalComponent","_data","_dialog_ref","_this","changed","EventEmitter","list","_ref","_asyncToGenerator","category","deleteAssetCategory","toPromise","emit","_x","apply","arguments","MAT_DIALOG_DATA","i1","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","AssetCategoryManagementModalComponent_ng_container_12_Template","category_r6","AssetCategoryFormComponent_main_4_mat_option_16_Template","ctx_r1","form","tmp_1_0","categories","length","_r8","ctx_r7","save","AssetCategoryFormComponent","_state","loading","generateAssetCategoryForm","pipe","map","filter","_","parent_category_id","value","patchValue","valid","disableClose","data","item","saveAssetCategory","catch","e","notifyError","message","reset","close","i2","AssetCategoryFormComponent_button_3_Template","AssetCategoryFormComponent_main_4_Template","AssetCategoryFormComponent_footer_5_Template","AssetCategoryFormComponent_ng_template_6_Template","_r4","AssetManagerStateService","AsyncHandler","_form","is_new_ui","location","hash","includes","pathname","base_route","_spaces","_org","_dialog","super","_options","BehaviorSubject","view","_change","_poll","_extra_assets","generateAssetForm","_loading","asObservable","options","extra_assets","products","combineLatest","active_building","switchMap","next","getGroupsWithAssets","zone_id","building","tap","shareReplay","purchase_orders","queryAssetPurchaseOrders","requests","initialised","debounceTime","date","bld","start","startOfDay","Date","now","valueOf","end","endOfDay","queryBookings","zones","period_start","getUnixTime","period_end","b","Booking","extension_data","space","find","space_id","event","linked_event","linked_bookings","request","AssetRequest","event_end","date_end","booking_end","deliver_at_time","filtered_requests","search","toLowerCase","i","user_name","title","location_name","assets","status","tracking","queryAssetCategories","AssetCategory","active_product","active_item","distinctUntilChanged","showGroupFull","active_product_requests","asset","asset_id","filtered_products","product_mapping","category_list","_count","forEach","category_id","unique","group","settings","showMetadata","catchError","of","details","availability","disabled_rooms","startPolling","delay","interval","stopPolling","clearInterval","resetForm","manageCategories","ref","open","editCategory","subscription","componentInstance","subscribe","afterClosed","unsub","result","setExtraAssets","setOptions","getValue","postChange","timeout","setStatus","_this2","rejectBooking","approveBooking","setTracking","_this3","updateBooking","toJSON","deleteActiveProduct","_this4","take","deleteAssetGroup","notifySuccess","postForm","_this5","other_data","drop_keys","key","cleanObject","undefined","saveAsset","editConfig","_this6","config","getConfig","items","types","flatten","AttachedResourceConfigModalComponent","resource_name","require_notes","Promise","race","first","reason","updateConfig","metadata","then","rules","Array","updateMetadata","description","saveSettings","_this7","old_settings","i3","Yz7","_c0","ctx_r0","_c1","$event","_r7","tmp_0_0","ctx_r2","_r9","ctx_r8","_r11","ctx_r10","setRoomAvailability","_r13","ctx_r12","AssetManagerTopbarComponent","active","o","AvailableRoomsStateModalComponent","change","inputs","features","AssetManagerTopbarComponent_a_1_Template","AssetManagerTopbarComponent_a_2_Template","AssetManagerTopbarComponent_mat_button_toggle_group_3_Template","AssetManagerTopbarComponent_button_5_Template","AssetManagerTopbarComponent_button_6_Template","AssetManagerTopbarComponent_button_7_Template","tmp_6_0","_r3","AssetListingComponent_nav_2_a_1_Template","ctx_r4","is_new","_c2","AssetListingComponent","_router","ngOnInit","url","events","NavigationEnd","AssetListingComponent_nav_2_Template","AssetManagerComponent","attrs","SplitJoinPipe","transform","split","join","Yjl","pure","level","selected","zone","display_name","map_id","selected_feature","data_r8","stopPropagation","row_r9","row","ctx_r14","ctx_r15","_r10","AssetLocationModalComponent","updateFeatures","_space","location_id","content","MapPinComponent","z_index","state","levelWithID","AssetLocationModalComponent_div_16_Template","AssetLocationModalComponent_i_map_17_Template","AssetLocationModalComponent_ng_template_18_Template","AssetLocationModalComponent_ng_template_20_Template","AssetLocationModalComponent_ng_template_22_Template","_c3","_c4","_c5","ctx_r11","row_r18","_r20","ctx_r19","removeAsset","row_r21","_r23","ctx_r22","removePurchaseOrder","ctx_r16","AssetViewComponent_div_0_ng_container_48_Template","AssetViewComponent_div_0_ng_template_50_Template","_r25","ctx_r24","viewLocations","AssetViewComponent_div_0_ng_template_80_Template","AssetViewComponent_div_0_ng_template_102_Template","tmp_2_0","tmp_3_0","images","tmp_4_0","_c6","_r6","tmp_8_0","asset_list","tmp_10_0","tmp_11_0","tmp_12_0","_c7","tmp_14_0","_c8","tmp_16_0","_c9","_c10","_c11","_c12","_r15","tmp_22_0","brand","tmp_24_0","tmp_25_0","_c13","_c14","_c15","_c16","_r17","AssetViewComponent_ng_template_4_span_2_Template","data_r26","_r32","ctx_r31","closeTooltip","ctx_r33","deleteAsset","AssetViewComponent_ng_template_6_div_0_Template","AssetViewComponent_ng_template_6_ng_template_1_Template","ctx_r5","deleting","_r30","AssetViewComponent","navigate","_tooltip_el","code","currency_code","_route","type_id","req","addMinutes","duration","paramMap","params","has","get","clearTimeout","resp","openConfirmModal","confirm_text","icon","removeAssetRequests","setTimeout","deleteAssetPurchaseOrder","i4","viewQuery","CustomTooltipComponent","AssetViewComponent_div_0_Template","AssetViewComponent_ng_template_2_Template","AssetViewComponent_ng_template_4_Template","AssetViewComponent_ng_template_6_Template","AssetViewComponent_ng_template_8_Template","AssetViewComponent_ng_template_10_Template","_r2","DurationFormatPipe","short","formatDuration","days","Math","floor","hours","minutes","replace","item_r4","quantity","requestChange","AssetRequestDetailsComponent_div_0_div_34_Template","ctx_r9","ctx_r13","user_email","user_phone","user_company","time_format","AssetRequestDetailsComponent","_settings","outputs","AssetRequestDetailsComponent_div_0_Template","row_r14","asset_r17","AssetRequestListComponent_ng_template_13_div_1_Template","row_r15","deliver_at","data_r19","row_r20","ctx_r26","_r22","row_r27","_r31","ctx_r30","ctx_r32","_r28","AssetRequestListComponent","booking","all_day","filters","setDate","AssetRequestListComponent_ng_template_11_Template","AssetRequestListComponent_ng_template_13_Template","AssetRequestListComponent_ng_template_15_Template","AssetRequestListComponent_ng_template_17_Template","AssetRequestListComponent_ng_template_19_Template","AssetRequestListComponent_ng_template_21_Template","AssetRequestListComponent_ng_template_23_Template","_r1","tmp_7_0","asset_r10","asset_count","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_div_8_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_Template","group_r5","asset_r19","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_div_8_Template","ctx_r18","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_Template","AssetItemListComponent_div_0_ng_container_1_div_1_Template","AssetItemListComponent_div_0_ng_container_1_Template","ctx_r28","AssetItemListComponent_ng_template_5_a_4_Template","AssetItemListComponent","AssetItemListComponent_div_0_Template","AssetItemListComponent_mat_progress_bar_3_Template","AssetItemListComponent_ng_template_5_Template","action_template","AssetPurchaseOrderFormComponent_div_1_h3_42_Template","AssetPurchaseOrderFormComponent_div_1_custom_table_43_Template","from","product_id","AssetPurchaseOrderFormComponent","generateAssetPurchaseOrderForm","_id","addYears","queryAssets","order_id","groups","queryAssetGroups","limit","asset_type_id","queryParamMap","_ref2","showAssetPurchaseOrder","order_number","purchase_order_number","purchase_date","expected_service_end_date","expected_service_start_date","_x2","saveAssetPurchaseOrder","AssetPurchaseOrderFormComponent_div_1_Template","AssetPurchaseOrderFormComponent_ng_template_2_Template","order_r5","invoice_number","AssetFormComponent_div_1_mat_option_30_Template","AssetFormComponent_div_1_mat_option_32_Template","product","AssetFormComponent","showAsset","showAssetGroup","getInvalidFields","d","AssetFormComponent_div_1_Template","AssetFormComponent_ng_template_2_Template","category_r4","current_category","AssetGroupFormComponent_div_1_mat_option_21_Template","newCategory","AssetGroupFormComponent","generateAssetGroupForm","new_category","saveAssetGroup","AssetGroupFormComponent_div_1_Template","AssetGroupFormComponent_ng_template_2_Template","AssetPurchaseOrderListComponent_ng_template_4_span_0_Template","data_r2","AssetPurchaseOrderListComponent","editOrder","order","queryParams","AssetPurchaseOrderListComponent_ng_template_4_Template","tmp_5_0","count","AssetBulkFormComponent_div_1_mat_option_28_Template","AssetBulkFormComponent_div_1_mat_option_30_Template","AssetBulkFormComponent","addAssetsInBulk","fill","AssetBulkFormComponent_div_1_Template","AssetBulkFormComponent_ng_template_2_Template","children","path","component","redirectTo","ROUTES","NewAssetManagerComponent","AppAssetManangerModule","oAB","cJS","UIModule","ComponentsModule","MatButtonToggleModule","MatProgressBarModule","MatTabsModule","RouterModule","forChild"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/cdk/fesm2022/stepper.mjs","./node_modules/@angular/material/fesm2022/stepper.mjs","./apps/concierge/src/app/asset-manager/asset-category-management-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-category-form.component.ts","./apps/concierge/src/app/asset-manager/asset-manager-state.service.ts","./apps/concierge/src/app/asset-manager/asset-manager-topbar.component.ts","./apps/concierge/src/app/asset-manager/asset-listing.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.component.ts","./apps/concierge/src/app/asset-manager/split-join.pipe.ts","./apps/concierge/src/app/asset-manager/asset-location-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-view.component.ts","./apps/concierge/src/app/asset-manager/duration.pipe.ts","./apps/concierge/src/app/asset-manager/asset-request-details.component.ts","./apps/concierge/src/app/asset-manager/asset-request-list.component.ts","./apps/concierge/src/app/asset-manager/asset-item-list.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-form.component.ts","./apps/concierge/src/app/asset-manager/asset-form.component.ts","./apps/concierge/src/app/asset-manager/asset-group-form.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-list.component.ts","./apps/concierge/src/app/asset-manager/asset-bulk-form.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.module.ts","./apps/concierge/src/app/asset-manager/new-asset-manager.component.ts"],"sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, booleanAttribute, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, numberAttribute, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkStepHeader, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkStepLabel, selector: \"[cdkStepLabel]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = value;\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = value;\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        /** Whether the user can return to this step once it has been marked as completed. */\n        this.editable = true;\n        /** Whether the completion of step is optional. */\n        this.optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return this._stepperOptions.showError ?? this._customError != null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.0.0\", type: CdkStep, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: [\"editable\", \"editable\", booleanAttribute], optional: [\"optional\", \"optional\", booleanAttribute], completed: [\"completed\", \"completed\", booleanAttribute], hasError: [\"hasError\", \"hasError\", booleanAttribute] }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: () => [{ type: CdkStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => CdkStepper)]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], optional: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], completed: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hasError: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\nclass CdkStepper {\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            this.selected?._markAsInteracted();\n            if (this._selectedIndex !== index &&\n                !this._anyControlsInvalidOrPending(index) &&\n                (index >= this._selectedIndex || this.steps.toArray()[index].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = index;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatStepper` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    constructor(_dir, _changeDetectorRef, _elementRef) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        /** Whether the validity of previous steps should be checked or not. */\n        this.linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        /** Output to support two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplication. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this.selectedIndexChange.emit(this._selectedIndex);\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.setFocusOrigin('keyboard').onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this.linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.0\", type: CdkStepper, selector: \"[cdkStepper]\", inputs: { linear: [\"linear\", \"linear\", booleanAttribute], selectedIndex: [\"selectedIndex\", \"selectedIndex\", numberAttribute], selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\", selectedIndexChange: \"selectedIndexChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: () => [{ type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }], propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectedIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], selectedIndexChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkStepperNext, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: CdkStepper }], propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkStepperPrevious, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: CdkStepper }], propDecorators: { type: [{\n                type: Input\n            }] } });\n\nclass CdkStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepperModule, declarations: [CdkStep,\n            CdkStepper,\n            CdkStepHeader,\n            CdkStepLabel,\n            CdkStepperNext,\n            CdkStepperPrevious], imports: [BidiModule], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import * as i2$1 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Inject, ContentChild, QueryList, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { mixinColor, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i4 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i2 from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\n\nclass MatStepLabel extends CdkStepLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatStepLabel, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                }]\n        }] });\n\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n        /** Label that is used to indicate step as completed to screen readers. */\n        this.completedLabel = 'Completed';\n        /** Label that is used to indicate step as editable to screen readers. */\n        this.editableLabel = 'Editable';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nconst _MatStepHeaderBase = mixinColor(class MatStepHeaderBase extends CdkStepHeader {\n    constructor(elementRef) {\n        super(elementRef);\n    }\n}, 'primary');\nclass MatStepHeader extends _MatStepHeaderBase {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional,\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepHeader, deps: [{ token: MatStepperIntl }, { token: i2.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.0\", type: MatStepHeader, selector: \"mat-step-header\", inputs: { color: \"color\", state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, host: { attributes: { \"role\": \"tab\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color)}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color)}@media(hover: none){.mat-step-header:hover{background:none}}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color)}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color);background-color:var(--mat-stepper-header-icon-background-color)}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color);color:var(--mat-stepper-header-error-state-icon-foreground-color)}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font);font-size:var(--mat-stepper-header-label-text-size);font-weight:var(--mat-stepper-header-label-text-weight);color:var(--mat-stepper-header-label-text-color)}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color)}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color);font-size:var(--mat-stepper-header-error-state-label-text-size)}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size);font-weight:var(--mat-stepper-header-selected-state-label-text-weight)}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color);color:var(--mat-stepper-header-selected-state-icon-foreground-color)}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color);color:var(--mat-stepper-header-edit-state-icon-foreground-color)}\"], dependencies: [{ kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: i4.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', inputs: ['color'], host: {\n                        'class': 'mat-step-header',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color)}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color)}@media(hover: none){.mat-step-header:hover{background:none}}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color)}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color);background-color:var(--mat-stepper-header-icon-background-color)}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color);color:var(--mat-stepper-header-error-state-icon-foreground-color)}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font);font-size:var(--mat-stepper-header-label-text-size);font-weight:var(--mat-stepper-header-label-text-weight);color:var(--mat-stepper-header-label-text-color)}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color)}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color);font-size:var(--mat-stepper-header-error-state-label-text-size)}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size);font-weight:var(--mat-stepper-header-selected-state-label-text-weight)}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color);color:var(--mat-stepper-header-selected-state-icon-foreground-color)}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color);color:var(--mat-stepper-header-edit-state-icon-foreground-color)}\"] }]\n        }], ctorParameters: () => [{ type: MatStepperIntl }, { type: i2.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }], propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }] } });\n\nconst DEFAULT_HORIZONTAL_ANIMATION_DURATION = '500ms';\nconst DEFAULT_VERTICAL_ANIMATION_DURATION = '225ms';\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', group([\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n            query('@*', animateChild(), { optional: true }),\n        ]), {\n            params: { 'animationDuration': DEFAULT_HORIZONTAL_ANIMATION_DURATION },\n        }),\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', group([\n            animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'),\n            query('@*', animateChild(), { optional: true }),\n        ]), {\n            params: { 'animationDuration': DEFAULT_VERTICAL_ANIMATION_DURATION },\n        }),\n    ]),\n};\n\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperIcon, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatStepperIcon, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatStepContent, selector: \"ng-template[matStepContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n        /** Content for step label given by `<ng-template matStepLabel>`. */\n        // We need an initializer here to avoid a TS error.\n        this.stepLabel = undefined;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStep, deps: [{ token: forwardRef(() => MatStepper) }, { token: i1.ErrorStateMatcher, skipSelf: true }, { token: i0.ViewContainerRef }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatStep, selector: \"mat-step\", inputs: { color: \"color\" }, providers: [\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i2$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], ctorParameters: () => [{ type: MatStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatStepper)]\n                }] }, { type: i1.ErrorStateMatcher, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\nclass MatStepper extends CdkStepper {\n    /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    constructor(dir, changeDetectorRef, elementRef) {\n        super(dir, changeDetectorRef, elementRef);\n        /** The list of step headers of the steps in the stepper. */\n        // We need an initializer here to avoid a TS error.\n        this._stepHeader = undefined;\n        /** Full list of steps inside the stepper, including inside nested steppers. */\n        // We need an initializer here to avoid a TS error.\n        this._steps = undefined;\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /**\n         * Position of the stepper's header.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.headerPosition = 'top';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        this._animationDuration = '';\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone\n            .pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n    _getAnimationDuration() {\n        if (this.animationDuration) {\n            return this.animationDuration;\n        }\n        return this.orientation === 'horizontal'\n            ? DEFAULT_HORIZONTAL_ANIMATION_DURATION\n            : DEFAULT_VERTICAL_ANIMATION_DURATION;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepper, deps: [{ token: i3$1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.0\", type: MatStepper, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { selectedIndex: \"selectedIndex\", disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\", \"ngSkipHydration\": \"\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"class.mat-stepper-header-position-bottom\": \"headerPosition === \\\"bottom\\\"\", \"attr.aria-orientation\": \"orientation\" } }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step; let i = $index, isLast = $last) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n          @if (!isLast) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step; let i = $index) {\\n          <div class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@horizontalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step; let i = $index, isLast = $last) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@verticalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font);background:var(--mat-stepper-container-color)}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color)}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color);top:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"color\", \"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\"] }], animations: [\n            matStepperAnimations.horizontalStepTransition,\n            matStepperAnimations.verticalStepTransition,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', inputs: ['selectedIndex'], host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                        'ngSkipHydration': '',\n                    }, animations: [\n                        matStepperAnimations.horizontalStepTransition,\n                        matStepperAnimations.verticalStepTransition,\n                    ], providers: [{ provide: CdkStepper, useExisting: MatStepper }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step; let i = $index, isLast = $last) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n          @if (!isLast) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step; let i = $index) {\\n          <div class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@horizontalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step; let i = $index, isLast = $last) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@verticalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font);background:var(--mat-stepper-container-color)}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color)}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color);top:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"] }]\n        }], ctorParameters: () => [{ type: i3$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }], propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatStepperNext, selector: \"button[matStepperNext]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatStepperPrevious, selector: \"button[matStepperPrevious]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n\nclass MatStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperModule, declarations: [MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent], imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule], exports: [MatCommonModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CommonModule,\n                        PortalModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    declarations: [\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n","import { Component, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { AssetCategory, deleteAssetCategory } from '@placeos/assets';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'asset-category-management-modal',\n    template: `\n        <header>\n            <h2>Manage Categories</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-y-auto min-w-[20rem] divide-y divide-base-200 max-h-[65vh]\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"flex items-center justify-center space-x-2 w-[calc(100%-1rem)] m-2\"\n                (click)=\"edit()\"\n            >\n                <div class=\"truncate\">New Category</div>\n                <app-icon>add</app-icon>\n            </button>\n            <ng-container *ngFor=\"let category of list | async\">\n                <div\n                    class=\"flex items-center space-x-2 hover:bg-base-200:bg-base-300 p-2\"\n                    *ngIf=\"category.id\"\n                >\n                    <div class=\"flex-1 truncate\">{{ category.name }}</div>\n                    <button btn icon matRipple (click)=\"edit(category)\">\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button btn icon matRipple (click)=\"remove(category)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </ng-container>\n        </main>\n    `,\n    styles: [``],\n})\nexport class AssetCategoryManagementModalComponent {\n    public readonly changed = new EventEmitter();\n    public readonly list = this._data.list;\n    public readonly edit = this._data.edit;\n\n    public readonly remove = async (category: AssetCategory) => {\n        await deleteAssetCategory(category.id).toPromise();\n        this.changed.emit();\n    };\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            list: Observable<AssetCategory[]>;\n            edit: (i?) => any;\n        },\n        private _dialog_ref: MatDialogRef<AssetCategoryManagementModalComponent>\n    ) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetCategoryForm,\n    saveAssetCategory,\n} from '@placeos/assets';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { map } from 'rxjs/operators';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'asset-category-form',\n    template: `\n        <header class=\"flex items-center p-2\">\n            <h2 class=\"text-center text-xl font-medium\">\n                {{ form.value.id ? 'Edit' : 'Add' }} Category\n            </h2>\n            <button btn icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex-1 h-1/2 overflow-auto p-2 w-[20rem] max-w-[80vw]\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Name<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Parent Category</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        formControlName=\"parent_category_id\"\n                        placeholder=\"No Parent\"\n                        [disabled]=\"!(categories | async)?.length\"\n                    >\n                        <mat-option\n                            *ngFor=\"let category of categories | async\"\n                            [value]=\"category.id\"\n                        >\n                            {{ category.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <a btn matRipple class=\"w-32 inverse\" mat-dialog-close>Cancel</a>\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Category...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetCategoryFormComponent {\n    public loading = false;\n    public readonly form = generateAssetCategoryForm();\n    public readonly categories = this._state.categories.pipe(\n        map((list) =>\n            list.filter((_) => _.parent_category_id !== this.form.value.id)\n        )\n    );\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) _data: { category?: AssetCategory },\n        private _state: AssetManagerStateService,\n        private _dialog_ref: MatDialogRef<AssetCategoryFormComponent>\n    ) {\n        if (_data?.category) this.form.patchValue(_data.category);\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data = this.form.value;\n        const item = await saveAssetCategory(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error saving category: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = false;\n        this._dialog_ref.close(item);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    approveBooking,\n    queryBookings,\n    rejectBooking,\n    updateBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    SettingsService,\n    flatten,\n    notifySuccess,\n    unique,\n} from '@placeos/common';\nimport { SpacesService } from '@placeos/spaces';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n    deleteAssetGroup,\n    generateAssetForm,\n    getGroupsWithAssets,\n    queryAssetCategories,\n    queryAssetPurchaseOrders,\n    saveAsset,\n    showGroupFull,\n} from '@placeos/assets';\nimport {\n    PlaceMetadata,\n    cleanObject,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssetCategoryManagementModalComponent } from './asset-category-management-modal.component';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceConfigModalData,\n    AttachedResourceRuleset,\n} from '@placeos/components';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport interface AssetOptions {\n    date?: number;\n    search?: string;\n    sort_by?: string;\n    view: 'grid' | 'list';\n    active_item?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetManagerStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<AssetOptions>({ view: 'grid' });\n    private _change = new BehaviorSubject(0);\n    private _poll = new BehaviorSubject(0);\n    private _extra_assets = new BehaviorSubject<Asset[]>([]);\n    private _form = generateAssetForm();\n    private _loading = new BehaviorSubject(false);\n    /** Whether asset list is loading */\n    public readonly loading = this._loading.asObservable();\n    /** List of options set for the view */\n    public readonly options = this._options.asObservable();\n    /** List of extra assets to display */\n    public readonly extra_assets = this._extra_assets.asObservable();\n    /** List of available assets */\n    public readonly products: Observable<AssetGroup[]> = combineLatest([\n        this._change,\n        this._org.active_building,\n    ]).pipe(\n        switchMap(() => {\n            this._loading.next(true);\n            return getGroupsWithAssets({ zone_id: this._org.building?.id });\n        }),\n        tap((_) => this._loading.next(false)),\n        shareReplay(1)\n    ) as any;\n    /** List of available assets */\n    public readonly purchase_orders: Observable<AssetPurchaseOrder[]> =\n        this._change.pipe(\n            switchMap(() => {\n                this._loading.next(true);\n                return queryAssetPurchaseOrders();\n            }),\n            tap(() => this._loading.next(false)),\n            shareReplay(1)\n        ) as any;\n    /** List of requests made by users for assets */\n    public readonly requests = combineLatest([\n        this._options,\n        this._org.active_building,\n        this._poll,\n        this._change,\n        this._spaces.initialised,\n    ]).pipe(\n        debounceTime(200),\n        switchMap(([{ date }, bld]) => {\n            const start = startOfDay(date || Date.now()).valueOf();\n            const end = endOfDay(date || Date.now()).valueOf();\n            return queryBookings({\n                zones: bld?.id,\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                type: 'asset-request',\n            }).pipe(\n                map((_) =>\n                    _.map(\n                        (b) =>\n                            new Booking({\n                                ...b,\n                                extension_data: {\n                                    ...b.extension_data,\n                                    space: this._spaces.find(\n                                        b.extension_data.space_id\n                                    ),\n                                },\n                            })\n                    ).filter((b) => {\n                        const event: any =\n                            b.linked_event || b.linked_bookings[0];\n                        const request = new AssetRequest({\n                            ...b.extension_data?.request,\n                            event,\n                        });\n                        const event_end =\n                            event?.date_end ||\n                            event?.event_end * 1000 ||\n                            event?.booking_end * 1000 ||\n                            end;\n                        return (\n                            request?.deliver_at_time >= start &&\n                            request?.deliver_at_time < end &&\n                            request?.deliver_at_time < event_end\n                        );\n                    })\n                )\n            );\n        }),\n        shareReplay(1)\n    );\n    /** Filtered list of asset requests */\n    public readonly filtered_requests = combineLatest([\n        this.requests,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            const search = (options.search || '').toLowerCase();\n            return search\n                ? list.filter(\n                      (i) =>\n                          i.user_name.toLowerCase().includes(search) ||\n                          i.title.toLowerCase().includes(search) ||\n                          i.extension_data.location_name\n                              ?.toLowerCase()\n                              .includes(search) ||\n                          i.extension_data.assets?.find((_) =>\n                              _.name.toLowerCase().includes(search)\n                          ) ||\n                          i.status.includes(search) ||\n                          i.extension_data.tracking?.includes(search)\n                  )\n                : list;\n        })\n    );\n    public readonly categories = combineLatest([\n        this._options,\n        this._change,\n    ]).pipe(\n        switchMap(() => queryAssetCategories()),\n        map((list) => [\n            new AssetCategory({ id: '', name: 'Uncategorised' }),\n            ...list,\n        ]),\n        shareReplay(1)\n    );\n    /** Currently active asset */\n    public readonly active_product = combineLatest([\n        this._options,\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([{ active_item }]) => !!active_item),\n        map(([options, t]) => [options.active_item, t] as any),\n        distinctUntilChanged(),\n        switchMap(([active_item]) =>\n            showGroupFull(active_item, { zone_id: this._org.building.id })\n        ),\n        shareReplay(1)\n    );\n    /** List of requests for the currently active asset */\n    public readonly active_product_requests = this.active_product.pipe(\n        switchMap((item) => {\n            return this.requests.pipe(\n                map((_) =>\n                    _.filter((i) =>\n                        item.assets.find((asset) => asset.id === i.asset_id)\n                    )\n                )\n            );\n        }),\n        map((_) => _.filter((i) => i.status !== 'declined'))\n    );\n    /** list of filtered assets */\n    public readonly filtered_products = combineLatest([\n        this.products,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            options.search\n                ? list.filter((i) =>\n                      i.name\n                          .toLowerCase()\n                          .includes(options.search.toLowerCase())\n                  )\n                : list\n        )\n    );\n    /** Mapping of available assets to categories */\n    public readonly product_mapping = combineLatest([\n        this.filtered_products,\n        this.categories,\n    ]).pipe(\n        map(([products, category_list]) => {\n            const map = { _count: products.length };\n            products.forEach(\n                (item) =>\n                    (item.category_id = category_list.find(\n                        (_) => _.id === item.category_id\n                    )\n                        ? item.category_id\n                        : '')\n            );\n            const categories = unique(products.map((i) => i.category_id));\n            for (const group of categories) {\n                map[group] = products.filter((i) => i.category_id === group);\n            }\n            return map;\n        })\n    );\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public get form() {\n        return this._form;\n    }\n\n    public get is_new_ui() {\n        return (\n            location.hash.includes('new') || location.pathname.includes('new')\n        );\n    }\n\n    public get base_route() {\n        return this.is_new_ui ? '/book/assets/new' : '/book/assets';\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public startPolling(delay = 15 * 1000) {\n        this.interval('polling', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    public resetForm() {\n        this._form = generateAssetForm();\n    }\n\n    public manageCategories() {\n        const ref = this._dialog.open(AssetCategoryManagementModalComponent, {\n            data: { list: this.categories, edit: (i) => this.editCategory(i) },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.changed.subscribe(() =>\n                this._change.next(Date.now())\n            )\n        );\n        ref.afterClosed().subscribe(() => this.unsub('category_modal'));\n    }\n\n    public async editCategory(\n        category: Partial<AssetCategory> = {}\n    ): Promise<AssetCategory | null> {\n        const ref = this._dialog.open(AssetCategoryFormComponent, {\n            data: { category },\n        });\n        const result = await ref.afterClosed().toPromise();\n        if (!result) return null;\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public setExtraAssets(list: Asset[]) {\n        this._extra_assets.next(list);\n    }\n\n    /** Update the set view options */\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public postChange() {\n        this.timeout('change', () => this._change.next(Date.now()), 1000);\n    }\n\n    public async setStatus(item: Booking, status: any) {\n        let result = item;\n        if (status === 'declined') {\n            result = await rejectBooking(item.id).toPromise();\n        } else if (status === 'approved') {\n            result = await approveBooking(item.id).toPromise();\n        }\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async setTracking(item: Booking, tracking: string) {\n        const result = await updateBooking(item.id, {\n            ...item.toJSON(),\n            extension_data: { ...item.extension_data, tracking },\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async deleteActiveProduct() {\n        const item = await this.active_product.pipe(take(1)).toPromise();\n        if (!item?.id) return;\n        await deleteAssetGroup(item.id).toPromise();\n        this._change.next(Date.now());\n        notifySuccess('Successfully deleted asset');\n    }\n\n    public async postForm() {\n        if (!this.form?.valid) return;\n        const data: any = this.form.value;\n        const other_data = { ...data };\n        const drop_keys = [\n            'other_data',\n            'id',\n            'name',\n            'quantity',\n            'category',\n            'purchase_date',\n            'brand',\n            'images',\n        ];\n        for (const key of drop_keys) {\n            delete other_data[key];\n        }\n        data.other_data = cleanObject(other_data, [undefined, null, '']);\n        const asset = await saveAsset(data as any).toPromise();\n        this._change.next(Date.now());\n        notifySuccess(`Successfully ${data.id ? 'updated' : 'created'} asset`);\n        this.resetForm();\n        return asset.id;\n    }\n\n    public async editConfig() {\n        const config = await this.getConfig(this._org.building.id);\n        const items = await this.products.pipe(take(1)).toPromise();\n        const types = unique(flatten(items.map((i) => [i.name])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                resource_name: 'Assets',\n                config,\n                types,\n                require_notes: false,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async getConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (await showMetadata(zone_id, 'assets_config').toPromise())\n            .details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'assets_config',\n            details: config,\n            description: `Assets config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: Record<string, any>) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'assets-settings',\n            details: { ...old_settings, ...settings },\n            description: `Assets settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { AvailableRoomsStateModalComponent } from '@placeos/components';\nimport { MatDialog } from '@angular/material/dialog';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'asset-manager-topbar',\n    template: `\n        <div class=\"w-full px-4 py-2 bg-base-100 flex items-center space-x-4\">\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                *ngIf=\"active === 'items'\"\n                [routerLink]=\"[base_route, 'manage', 'group']\"\n            >\n                Add Product\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                *ngIf=\"active === 'purchase-orders'\"\n                [routerLink]=\"[base_route, 'manage', 'purchase-order']\"\n            >\n                Add Purchase Order\n            </a>\n            <mat-button-toggle-group\n                [ngModel]=\"(options | async)?.view\"\n                (ngModelChange)=\"setOptions({ view: $event })\"\n                *ngIf=\"active === 'items'\"\n            >\n                <mat-button-toggle value=\"grid\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_module</app-icon>\n                    </div>\n                </mat-button-toggle>\n                <mat-button-toggle value=\"list\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_list</app-icon>\n                    </div>\n                </mat-button-toggle>\n            </mat-button-toggle-group>\n            <div class=\"flex-1\"></div>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"border border-base-200\"\n                matTooltip=\"Edit Config\"\n                (click)=\"editConfig()\"\n            >\n                <app-icon>menu_book</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"border border-base-200\"\n                matTooltip=\"Room Availability\"\n                (click)=\"setRoomAvailability()\"\n            >\n                <app-icon>event_available</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"border border-base-200\"\n                matTooltip=\"Manage Categories\"\n                (click)=\"manageCategories()\"\n            >\n                <app-icon>list_alt</app-icon>\n            </button>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.25rem]\">\n                <app-icon matPrefix class=\"text-2xl relative top-1 -left-1\">\n                    search\n                </app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(options | async)?.search\"\n                    (ngModelChange)=\"setOptions({ search: $event })\"\n                    placeholder=\"Search products and requests\"\n                />\n            </mat-form-field>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetManagerTopbarComponent extends AsyncHandler {\n    @Input() public active = '';\n\n    public readonly options = this._state.options;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly manageCategories = () => this._state.manageCategories();\n    public readonly editConfig = () => this._state.editConfig();\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async setRoomAvailability() {\n        const ref = this._dialog.open(AvailableRoomsStateModalComponent, {\n            data: {\n                type: 'Assets',\n                disabled_rooms: await this._state.availability\n                    .pipe(take(1))\n                    .toPromise(),\n            },\n        });\n        this.subscription(\n            'room-availability',\n            ref.componentInstance.change.subscribe(async (list) => {\n                await this._state\n                    .saveSettings({ disabled_rooms: list })\n                    .catch();\n                ref.componentInstance.loading = false;\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'asset-listing',\n    template: `\n        <asset-manager-topbar [active]=\"active\"></asset-manager-topbar>\n        <div class=\"flex flex-col flex-1 h-1/2 w-full px-4\">\n            <nav mat-tab-nav-bar *ngIf=\"!is_new || active !== 'requests'\">\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'requests']\"\n                    [routerLinkActive]=\"'active'\"\n                    [active]=\"active === 'requests'\"\n                    (click)=\"active = 'requests'\"\n                    *ngIf=\"!is_new\"\n                >\n                    Requests\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'items']\"\n                    [active]=\"active === 'items'\"\n                    (click)=\"active = 'items'\"\n                >\n                    Products\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'purchase-orders']\"\n                    [active]=\"active === 'purchase-orders'\"\n                    (click)=\"active = 'purchase-orders'\"\n                >\n                    Purchase Orders\n                </a>\n            </nav>\n            <div class=\"flex-1 h-1/2 w-full overflow-visible\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListingComponent extends AsyncHandler {\n    public active = 'requests';\n    public is_new = false;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _router: Router,\n        private _state: AssetManagerStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.is_new = this._router.url.includes('new');\n        this.active = this._router.url.includes('requests')\n            ? 'requests'\n            : this._router.url.includes('items')\n            ? 'items'\n            : 'purchase-orders';\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    this.is_new = this._router.url.includes('new');\n                    this.active = this._router.url.includes('requests')\n                        ? 'requests'\n                        : this._router.url.includes('items')\n                        ? 'items'\n                        : 'purchase-orders';\n                }\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-1/2 flex-1 bg-base-100 overflow-hidden\">\n            <router-outlet></router-outlet>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--b1);\n            }\n        `,\n    ],\n})\nexport class AssetManagerComponent {}\n","import { Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'splitjoin',\n})\nexport class SplitJoinPipe {\n    public transform(\n        value: string,\n        split: string = '_',\n        join: string = ' '\n    ): string {\n        return (value || '').split(split).join(join);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { MapPinComponent } from '@placeos/components';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'asset-location-modal',\n    template: `\n        <div class=\"p-6 relative\">\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-4 right-4\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <h2 class=\"font-medium mb-2\">\n                {{ (asset | async)?.name }} in use location:\n                {{ (requests | async)?.length }}\n            </h2>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.5rem] mb-2\">\n                <app-icon matPrefix>search</app-icon>\n                <input matInput placeholder=\"Search...\" />\n            </mat-form-field>\n            <div class=\"flex items-center space-x-4 w-[90vw] text-sm\">\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-base-200 bg-base-200 overflow-auto\"\n                >\n                    <custom-table\n                        [dataSource]=\"requests\"\n                        [columns]=\"[\n                            'zones',\n                            'description',\n                            'tracking',\n                            'user_name'\n                        ]\"\n                        [display_column]=\"[\n                            'Level',\n                            'Space',\n                            'Tracking',\n                            'Requestee'\n                        ]\"\n                        [column_size]=\"['4r', 'flex', '10r', '6r']\"\n                        [template]=\"{\n                            tracking: tracking_template,\n                            zones: level_template,\n                        }\"\n                        (row_clicked)=\"selected = $event; updateFeatures()\"\n                    ></custom-table>\n                </div>\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-base-200 bg-base-200 relative flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-4 left-4 bg-base-100 px-4 py-2 rounded-3xl border border-base-200\"\n                        *ngIf=\"selected\"\n                    >\n                        {{ level(selected.zone)?.display_name || 'N/A' }}\n                    </div>\n                    <i-map\n                        *ngIf=\"selected; else empty_state\"\n                        [src]=\"level(selected.zone)?.map_id || ''\"\n                        [styles]=\"{\n                            '#Zones': { display: 'none' },\n                            '#zones': { display: 'none' }\n                        }\"\n                        [features]=\"selected_feature\"\n                    ></i-map>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <p class=\"opacity-30\">\n                Select a space from the list to view map location\n            </p>\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ level(data)?.display_name || 'N/A' }}\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{\n                        (row.extension_data?.tracking | splitjoin) ||\n                            'In Storage'\n                    }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetLocationModalComponent {\n    public readonly asset = this._state.active_product;\n    public readonly requests = this._state.active_product_requests;\n\n    public selected: Booking;\n    public selected_feature;\n\n    public loading = {};\n\n    public async updateFeatures() {\n        const space = await this._space.transform(\n            this.selected.extension_data?.location_id\n        );\n        this.selected_feature = this.selected\n            ? [\n                  {\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      z_index: 99,\n                      data: {\n                          message: `${\n                              space.display_name || space.name\n                          } is here`,\n                      },\n                  },\n              ]\n            : [];\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _space: SpacePipe\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    flatten,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first, map } from 'rxjs/operators';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    Asset,\n    AssetPurchaseOrder,\n    deleteAsset,\n    deleteAssetPurchaseOrder,\n    removeAssetRequests,\n} from '@placeos/assets';\nimport { addMinutes } from 'date-fns';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'asset-view',\n    template: `\n        <div\n            class=\"h-full w-full flex flex-col\"\n            *ngIf=\"!loading && (item | async); else loading_state\"\n        >\n            <div\n                class=\"flex items-center space-x-4 p-2 bg-base-100 border-b border-base-200\"\n            >\n                <a\n                    btn\n                    matRipple\n                    class=\"inverse\"\n                    [routerLink]=\"[base_route, 'list', 'items']\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-2\">Back</div>\n                    </div>\n                </a>\n                <div class=\"flex items-center space-x-2 font-medium\">\n                    <span>Assets</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.category?.name }}</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.name }}</span>\n                </div>\n            </div>\n            <div class=\"flex items-center\">\n                <div class=\"bg-base-100 flex-1 w-1/2 h-[22.5rem]\">\n                    <image-carousel\n                        [images]=\"(item | async)?.images || []\"\n                    ></image-carousel>\n                </div>\n                <div class=\"w-[32rem] h-[22.5rem] px-4 flex flex-col\">\n                    <div\n                        class=\"w-full flex items-center justify-between border-b border-base-200\"\n                    >\n                        <div class=\"font-medium\">\n                            {{ (item | async)?.name }}\n                        </div>\n                        <div class=\"flex items-center text-sm \">\n                            <a\n                                btn\n                                matRipple\n                                class=\"clear\"\n                                [routerLink]=\"[base_route, 'manage', 'group']\"\n                                [queryParams]=\"{ id: (item | async)?.id }\"\n                            >\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                    <div class=\"mr-2 underline\">Edit</div>\n                                </div>\n                            </a>\n                            <div class=\"w-px h-4 bg-base-200\"></div>\n                            <button btn matRipple class=\"clear\">\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                    customTooltip\n                                    [content]=\"delete_tooltip\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                    <div class=\"mr-2 underline\">Delete</div>\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"py-4 w-full flex-1 h-1/2 overflow-auto\">\n                        <ng-container\n                            *ngIf=\"\n                                (item | async)?.description;\n                                else no_desc_state\n                            \"\n                        >\n                            {{\n                                (item | async)?.description ||\n                                    '~No Description~'\n                            }}\n                        </ng-container>\n                        <ng-template #no_desc_state>\n                            <span class=\"opacity-30\">No Description</span>\n                        </ng-template>\n                    </div>\n                    <div\n                        class=\"rounded bg-base-100 shadow border border-base-200 w-full divide-y divide-base-200\"\n                    >\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                Available:\n                                {{\n                                    (asset_list | async).length -\n                                        (requests | async)?.length || 0\n                                }}\n                            </div>\n                            <!-- <button\n                                btn\n                                matRipple\n                                [disabled]=\"\n                                    (asset_list | async).length -\n                                        (requests | async)?.length ===\n                                    0\n                                \"\n                            >\n                                Assign to Location\n                            </button> -->\n                        </div>\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                In Use:\n                                {{ (requests | async)?.length || 0 }}\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                (click)=\"viewLocations()\"\n                                [disabled]=\"\n                                    (asset_list | async).length -\n                                        (requests | async)?.length !==\n                                    0\n                                \"\n                            >\n                                View Locations\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <mat-tab-group class=\"flex-1 h-px\">\n                <mat-tab label=\"Assets\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">Assets</h3>\n                        <div class=\"flex w-full items-center space-x-2 mb-2\">\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[base_route, 'manage', 'asset']\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Add Asset\n                            </a>\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[\n                                    base_route,\n                                    'manage',\n                                    'asset-bulk'\n                                ]\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Bulk Add Asset\n                            </a>\n                        </div>\n                        <custom-table\n                            asset-view\n                            class=\"w-full block text-sm\"\n                            [dataSource]=\"(asset_list | async) || []\"\n                            [columns]=\"[\n                                'id',\n                                'identifier',\n                                'serial_number',\n                                'actions'\n                            ]\"\n                            [display_column]=\"[\n                                'ID',\n                                'Label/Friendly Name',\n                                'Serial Number',\n                                ' '\n                            ]\"\n                            [column_size]=\"['10r', '14r', '8r', 'flex']\"\n                            [template]=\"{\n                                actions: action_template,\n                            }\"\n                            empty=\"No assets for this product\"\n                        >\n                        </custom-table>\n                        <ng-template #action_template let-row=\"row\">\n                            <div class=\"flex w-full items-center justify-end\">\n                                <a\n                                    btn\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'manage',\n                                        'asset'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: (item | async)?.id\n                                    }\"\n                                    class=\"clear\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                </a>\n                                <button\n                                    btn\n                                    icon\n                                    matRipple\n                                    (click)=\"removeAsset(row)\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Specifications\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">General</h3>\n                        <div\n                            data-table\n                            class=\"bg-base-100 border border-base-200\"\n                        >\n                            <div class=\"flex items-center p-2\">\n                                <label>Brand</label>\n                                <div>\n                                    {{ (item | async)?.brand || '~None~' }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Purchase information\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">Purchase Orders</h3>\n                        <a\n                            btn\n                            matRipple\n                            class=\"mb-2\"\n                            [routerLink]=\"[\n                                base_route,\n                                'manage',\n                                'purchase-order'\n                            ]\"\n                            [queryParams]=\"{ group_id: (item | async)?.id }\"\n                        >\n                            Add Purchase Order\n                        </a>\n\n                        <custom-table\n                            asset-view\n                            class=\"w-full block text-sm\"\n                            [dataSource]=\"(item | async)?.purchase_orders || []\"\n                            [columns]=\"[\n                                'purchase_order_number',\n                                'invoice_number',\n                                'expected_service_start_date',\n                                'expected_service_end_date',\n                                'actions'\n                            ]\"\n                            [display_column]=\"[\n                                'Order Number',\n                                'Invoice Number',\n                                'Service Start',\n                                'Service End',\n                                ' '\n                            ]\"\n                            [column_size]=\"['10r', '10r', '10r', '10r', 'flex']\"\n                            [template]=\"{\n                                actions: po_action_template,\n                                expected_service_start_date: date_template,\n                                expected_service_end_date: date_template\n                            }\"\n                            empty=\"No assets for this product\"\n                        >\n                        </custom-table>\n                        <ng-template #po_action_template let-row=\"row\">\n                            <div class=\"flex w-full items-center justify-end\">\n                                <a\n                                    btn\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'manage',\n                                        'purchase-order'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: row?.id\n                                    }\"\n                                    class=\"clear\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                </a>\n                                <button\n                                    btn\n                                    icon\n                                    matRipple\n                                    (click)=\"removePurchaseOrder(row)\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading product details...</p>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-data=\"data\">\n            {{ data * 1000 | date: 'mediumDate' }}\n            <span *ngIf=\"!data\" class=\"opacity-30\"> No Date </span>\n        </ng-template>\n        <ng-template #delete_tooltip>\n            <div\n                class=\"p-4 bg-base-100 rounded my-2 text-center w-[18rem]\"\n                *ngIf=\"!deleting; else delete_loading\"\n            >\n                <p>Are you sure you want to permanently delete this product?</p>\n                <div class=\"flex items-center space-x-2 mt-6\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"inverse flex-1 w-24\"\n                        (click)=\"closeTooltip()\"\n                    >\n                        No\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"error flex-1 w-24\"\n                        (click)=\"deleteAsset()\"\n                    >\n                        Yes, delete\n                    </button>\n                </div>\n            </div>\n            <ng-template #delete_loading>\n                <div\n                    class=\"p-4 bg-base-100 rounded my-2 w-64 h-36 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <p>Deleting product details...</p>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #empty_invoices>\n            <div class=\"p-2 opacity-30\">No purchase orders</div>\n        </ng-template>\n        <ng-template #empty_items>\n            <div class=\"p-2 opacity-30\">No assets</div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n            }\n\n            [data-table] > div:nth-child(2n) {\n                background: #0001;\n            }\n\n            label {\n                width: 10rem;\n                min-width: 0;\n            }\n        `,\n    ],\n})\nexport class AssetViewComponent extends AsyncHandler {\n    public loading = false;\n    public deleting = false;\n    public readonly item = this._state.active_product;\n    public readonly asset_list = combineLatest([\n        this.item,\n        this._state.extra_assets,\n    ]).pipe(\n        map(([item, assets]) => {\n            if (!item) return [];\n            return unique(\n                [\n                    ...item.assets,\n                    ...assets.filter((_) => _.type_id === item.id),\n                ],\n                'id'\n            );\n        })\n    );\n    public readonly requests = this._state.active_product_requests.pipe(\n        map((req) =>\n            req.filter(\n                (_) =>\n                    _.date <= Date.now() &&\n                    addMinutes(_.date, _.duration).valueOf() >= Date.now()\n            )\n        )\n    );\n\n    @ViewChild(CustomTooltipComponent)\n    public _tooltip_el: CustomTooltipComponent;\n\n    public async deleteAsset() {\n        this.deleting = true;\n        await this._state.deleteActiveProduct();\n        this.deleting = false;\n        this._router.navigate([this._state.base_route, 'list', 'items']);\n        this.closeTooltip();\n    }\n\n    public closeTooltip() {\n        this._tooltip_el?.close();\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _state: AssetManagerStateService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public viewLocations() {\n        this._dialog.open(AssetLocationModalComponent);\n    }\n\n    public ngOnInit() {\n        this.loading = true;\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('id')) {\n                    this._state.setOptions({ active_item: params.get('id') });\n                }\n            })\n        );\n        this.timeout(\n            'no_asset',\n            () => this._router.navigate([this._state.base_route]),\n            1000\n        );\n        this._state.active_product.pipe(first((_) => !!_)).subscribe(() => {\n            this.clearTimeout('no_asset');\n            this.loading = false;\n        });\n    }\n\n    public async removeAsset(asset: Asset) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete asset',\n                content: `Are you sure you want to delete this asset?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting asset...');\n        await deleteAsset(asset.id).toPromise();\n        await removeAssetRequests(asset.id);\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n\n    public async removePurchaseOrder(asset: AssetPurchaseOrder) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete purchase order',\n                content: `Are you sure you want to delete this purchase order?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting purchase order...');\n        await deleteAssetPurchaseOrder(asset.id).toPromise();\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { formatDuration } from 'date-fns';\n\n@Pipe({\n    name: 'duration',\n})\nexport class DurationFormatPipe {\n    public transform(value: number, short = true): string {\n        let duration = formatDuration({\n            days: Math.floor(value / (24 * 60)),\n            hours: Math.floor((value / 60) % 24),\n            minutes: Math.floor(value % 60),\n        });\n        if (!short) return duration;\n        return duration\n            .replace(' day', 'd')\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'asset-request-details',\n    template: `\n        <div\n            class=\"fixed inset-0 z-50\"\n            *ngIf=\"request\"\n            (click)=\"request = null; requestChange.emit(request)\"\n        >\n            <div class=\"absolute inset-0 bg-black opacity-50\"></div>\n            <div\n                class=\"absolute inset-y-0 right-0 bg-base-100 w-[480px]\"\n                (click)=\"$event.stopPropagation()\"\n            >\n                <button\n                    icon\n                    matRipple\n                    (click)=\"request = null; requestChange.emit(request)\"\n                    class=\"absolute top-1 right-1\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"border-b border-base-200 px-2 py-4 flex space-x-4\">\n                    <a-user-avatar\n                        [user]=\"{ name: request.user_name }\"\n                        class=\"text-xl\"\n                    ></a-user-avatar>\n                    <div details class=\"space-y-1\">\n                        <div class=\"font-medium\">{{ request.user_name }}</div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>mail</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'mailto:' + request.user_email\"\n                            >\n                                {{ request.user_email || 'staff@place.tech' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>call</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'tel:' + request.user_phone\"\n                            >\n                                {{ request.user_phone || '04 1234 5678' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>work_outline</app-icon>\n                            <div>{{ request.user_company || 'PlaceOS' }}</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"px-3 py-4 relative\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">send</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Asset Requested</div>\n                    </div>\n                    <div class=\"pl-10 flex flex-col mt-1\">\n                        <div *ngFor=\"let item of items\">\n                            {{ item.name }}\n                            <span\n                                class=\"text-xs bg-success text-success-content px-2 py-1 rounded\"\n                            >\n                                x{{ item.quantity }}\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">event</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Date For</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'EEEE, MMMM d, y' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">schedule</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Period</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: time_format }} &ndash;\n                        {{\n                            request.date + request.duration * 60 * 1000\n                                | date: time_format\n                        }}\n                        ({{ request.duration | duration }})\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">place</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Floor</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ level(request.zones)?.display_name || 'N/A' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">meeting_room</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Room</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.description }}\n                    </div>\n                    <div class=\"absolute top-4 right-4 text-sm\">\n                        <button\n                            matRipple\n                            class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2 mb-4\"\n                            [class.bg-success]=\"request.status === 'approved'\"\n                            [class.bg-error]=\"request.status === 'declined'\"\n                            [class.bg-warning]=\"request.status === 'tentative'\"\n                            [matMenuTriggerFor]=\"menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <app-icon\n                                class=\"text-xl\"\n                                [class.text-green-600]=\"\n                                    request.status === 'approved'\n                                \"\n                                [class.text-red-600]=\"\n                                    request.status === 'declined'\n                                \"\n                                [class.text-yellow-400]=\"\n                                    request.status === 'tentative'\n                                \"\n                            >\n                                {{\n                                    request.status === 'approved'\n                                        ? 'done'\n                                        : request.status === 'declined'\n                                        ? 'close'\n                                        : 'warning'\n                                }}\n                            </app-icon>\n                            <div class=\"capitalize flex-1\">\n                                {{ request.status }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('approved')\"\n                            >\n                                Approve\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('declined')\"\n                            >\n                                Decline\n                            </button>\n                        </mat-menu>\n                        <button\n                            matRipple\n                            class=\"bg-none w-full flex items-center px-2 py-1 text-left border border-base-200 rounded-none\"\n                            [matMenuTriggerFor]=\"tracking_menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <div class=\"capitalize flex-1\">\n                                {{\n                                    (request.extension_data?.tracking\n                                        | splitjoin) || 'In Storage'\n                                }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_storage')\"\n                            >\n                                In Storage\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_transit')\"\n                            >\n                                In Transit\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('at_location')\"\n                            >\n                                At Location\n                            </button>\n                        </mat-menu>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetRequestDetailsComponent {\n    @Input() public request: any;\n    @Output() public requestChange = new EventEmitter<any>();\n\n    public loading = false;\n\n    public get items() {\n        return this.request?.extension_data?.request?.items || [];\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public async setStatus(status: string) {\n        this.loading = true;\n        await this._state.setStatus(this.request, status);\n        (this.request as any).status = status;\n        this.loading = false;\n    }\n\n    public async setTracking(state: string) {\n        this.loading = true;\n        await this._state.setTracking(this.request, state);\n        (this.request as any).extension_data.tracking = state;\n        this.loading = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'app-asset-request-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div\n                class=\"bg-base-100 px-4 border-t border-b border-base-200 flex items-center justify-between\"\n            >\n                <div class=\"opacity-60 text-sm\">\n                    {{ (requests | async)?.length }} asset request{{\n                        (requests | async)?.length === '1' ? '' : 's'\n                    }}\n                </div>\n                <date-options\n                    [date]=\"(filters | async)?.date\"\n                    (dateChange)=\"setDate($event)\"\n                ></date-options>\n            </div>\n            <div class=\"w-full overflow-auto h-1/2 flex-1 p-4\">\n                <custom-table\n                    asset-requests\n                    class=\"block min-w-[82rem] text-sm\"\n                    [dataSource]=\"requests\"\n                    [columns]=\"[\n                        'user',\n                        'assets',\n                        'date',\n                        'period',\n                        'zones',\n                        'description',\n                        'approval',\n                        'tracking'\n                    ]\"\n                    [display_column]=\"[\n                        'Requester',\n                        'Asset',\n                        'Deliver At',\n                        'Meeting Time',\n                        'Floor',\n                        'Location',\n                        'Approval',\n                        'Tracking'\n                    ]\"\n                    [column_size]=\"[\n                        'flex',\n                        '12r',\n                        '',\n                        '8r',\n                        '6r',\n                        '12r',\n                        '10r',\n                        '10r'\n                    ]\"\n                    [template]=\"{\n                        user: user_template,\n                        assets: assets_template,\n                        date: date_template,\n                        period: period_template,\n                        approval: approval_template,\n                        tracking: tracking_template,\n                        zones: level_template,\n                    }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching asset requests'\n                            : 'There are no asset requests for the currently selected date.'\n                    \"\n                    (row_clicked)=\"request = $event\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #user_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2\">\n                <a-user-avatar [user]=\"{ name: row.user_name }\"></a-user-avatar>\n                <div class=\"flex-1\">{{ row.user_name }}</div>\n            </div>\n        </ng-template>\n        <ng-template #assets_template let-row=\"row\">\n            <div class=\"flex flex-col\">\n                <div\n                    *ngFor=\"\n                        let asset of row.extension_data?.request?.items || []\n                    \"\n                >\n                    {{ asset.quantity || 1 }}× {{ asset.name }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.extension_data?.request?.deliver_at\n                    | date: 'MMM d, ' + time_format\n            }}\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ level(data)?.display_name || 'N/A' }}\n        </ng-template>\n        <ng-template #period_template let-row=\"row\">\n            {{ date(row) | date: 'MMM d, ' + time_format }} <br />\n            {{\n                date(row) + row.duration * 60 * 1000\n                    | date: 'MMM d, ' + time_format\n            }}\n        </ng-template>\n        <ng-template #approval_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2\"\n                [class.bg-success]=\"row.status === 'approved'\"\n                [class.bg-error]=\"row.status === 'declined'\"\n                [class.bg-warning]=\"row.status === 'tentative'\"\n                [class.text-success-content]=\"row.status === 'approved'\"\n                [class.text-error-content]=\"row.status === 'declined'\"\n                [class.text-warning-content]=\"row.status === 'tentative'\"\n                [matMenuTriggerFor]=\"menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <app-icon class=\"text-xl\">\n                    {{\n                        row.status === 'approved'\n                            ? 'done'\n                            : row.status === 'declined'\n                            ? 'close'\n                            : 'warning'\n                    }}\n                </app-icon>\n                <div class=\"capitalize flex-1\">{{ row.status }}</div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setStatus(row, 'approved')\">\n                    Approve\n                </button>\n                <button mat-menu-item (click)=\"setStatus(row, 'declined')\">\n                    Decline\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{\n                        (row.extension_data?.tracking | splitjoin) ||\n                            'In Storage'\n                    }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n        <asset-request-details [(request)]=\"request\"></asset-request-details>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetRequestListComponent extends AsyncHandler {\n    public readonly requests = this._state.filtered_requests;\n    public readonly filters = this._state.options;\n    public request;\n\n    public readonly loading: Record<string, boolean> = {};\n\n    public date(booking: any) {\n        return booking.all_day\n            ? startOfDay(booking.date).valueOf()\n            : booking.date;\n    }\n\n    public async setStatus(item: any, status: string) {\n        this.loading[item.id] = true;\n        await this._state.setStatus(item, status);\n        this.loading[item.id] = false;\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    public readonly setDate = (date) => this._state.setOptions({ date });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this.subscription('polling', this._state.startPolling());\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'app-asset-item-list',\n    template: `\n        <div\n            class=\"overflow-auto pb-2 w-full h-full\"\n            *ngIf=\"\n                (categories | async)?.length && (products | async)?._count;\n                else empty_state\n            \"\n        >\n            <ng-container *ngFor=\"let group of categories | async\">\n                <div class=\"\" *ngIf=\"(products | async)[group.id]?.length\">\n                    <h2 class=\"py-2\">\n                        <span class=\"font-medium\">{{ group?.name }}</span>\n                        <span class=\"text-xs\">\n                            ({{ (products | async)[group.id]?.length }} item{{\n                                (products | async)[group.id]?.length === 1\n                                    ? ''\n                                    : 's'\n                            }})\n                        </span>\n                    </h2>\n                    <ng-container [ngSwitch]=\"(options | async).view\">\n                        <ng-container *ngSwitchCase=\"'list'\">\n                            <div\n                                class=\"rounded overflow-hidden bg-base-100 border border-base-200 divide-y divide-base-200\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"flex items-center text-left space-x-4 p-4 border border-base-200 hover:border-indigo-400 rounded\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"h-12 w-12 flex items-center justify-center border border-base-200 bg-base-200 overflow-hidden\"\n                                    >\n                                        <img\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            auth\n                                            [source]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.asset_count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.asset_count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <div\n                                class=\"flex items-center overflow-hidden flex-wrap -mx-2 w-full\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"bg-base-100 rounded shadow w-40 h-44 text-left m-2 border border-base-200 hover:border-indigo-400 flex flex-col\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"w-full h-32 flex items-center justify-center bg-base-200 overflow-hidden\"\n                                    >\n                                        <img\n                                            auth\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            [source]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto w-16\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"border-t border-base-200 w-full px-3 py-1 flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.asset_count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.asset_count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <ng-template #empty_state>\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-4 h-full w-full\"\n            >\n                <p class=\"opacity-40\">\n                    {{\n                        (options | async)?.search\n                            ? 'No matching assets found'\n                            : 'No assets available. Create a new asset with the button below'\n                    }}\n                </p>\n                <a\n                    btn\n                    matRipple\n                    *ngIf=\"!(options | async)?.search\"\n                    [routerLink]=\"[base_route, 'manage', 'group']\"\n                >\n                    Create New Product\n                </a>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetItemListComponent {\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n    public readonly categories = this._state.categories;\n    public readonly products = this._state.product_mapping;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetPurchaseOrder,\n    generateAssetPurchaseOrderForm,\n    queryAssetGroups,\n    queryAssets,\n    saveAssetPurchaseOrder,\n    showAssetPurchaseOrder,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, notifyError, notifySuccess } from '@placeos/common';\nimport { addYears, getUnixTime } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, shareReplay, switchMap } from 'rxjs/operators';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-purchase-order-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Purchase Order\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"order-number\">\n                            Order Number<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"order-number\"\n                                placeholder=\"Order Number\"\n                                formControlName=\"order_number\"\n                            />\n                            <mat-error>Order number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"invoice-number\"> Invoice Number </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"invoice-number\"\n                                placeholder=\"Invoice Number\"\n                                formControlName=\"invoice_number\"\n                            />\n                            <mat-error>Invoice number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"purchase-date\"> Purchase Date </label>\n                            <a-date-field\n                                name=\"purchase-date\"\n                                [from]=\"from\"\n                                formControlName=\"purchase_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"unit-price\"> Purchase Price </label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <div matPrefix>$</div>\n                                <input\n                                    matInput\n                                    name=\"unit-price\"\n                                    [from]=\"from\"\n                                    formControlName=\"unit_price\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex flex-col space-y-2\">\n                            <label for=\"depreciation-start-date\">\n                                Expected Service Start Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-start-date\"\n                                [from]=\"from\"\n                                formControlName=\"expected_service_start_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex flex-col space-y-2\">\n                            <label for=\"depreciation-end-date\">\n                                Expected Service End Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-end-date\"\n                                formControlName=\"expected_service_end_date\"\n                            ></a-date-field>\n                        </div>\n                    </div>\n                    <h3 *ngIf=\"item?.id\" class=\"font-medium mb-2\">\n                        Associated Assets ({{\n                            (asset_list | async)?.length || '0'\n                        }})\n                    </h3>\n                    <custom-table\n                        asset-view\n                        class=\"w-full block text-sm\"\n                        *ngIf=\"item?.id\"\n                        [dataSource]=\"(asset_list | async) || []\"\n                        [columns]=\"[\n                            'name',\n                            'identifier',\n                            'serial_number',\n                            'actions'\n                        ]\"\n                        [display_column]=\"[\n                            'Name',\n                            'Label/Friendly Name',\n                            'Serial Number',\n                            ' '\n                        ]\"\n                        [column_size]=\"['10r', '11r', '8r', 'flex']\"\n                        [template]=\"{\n                            actions: action_template,\n                        }\"\n                        empty=\"No assets for this purchase order\"\n                    >\n                    </custom-table>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product_id\n                                ? [base_route, 'view', product_id]\n                                : [base_route, 'list', 'purchase-orders']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetPurchaseOrderFormComponent extends AsyncHandler {\n    public readonly form = generateAssetPurchaseOrderForm();\n    public loading: string = '';\n    public product_id: string;\n    public readonly _id = new BehaviorSubject('');\n    public item: AssetPurchaseOrder;\n    public readonly from = addYears(Date.now(), -5);\n    public readonly asset_list = combineLatest([\n        this._id,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!_ && !!bld),\n        switchMap(([id]) => queryAssets({ order_id: id })),\n        switchMap(async (asset_list) => {\n            const groups = await queryAssetGroups({\n                zone_id: this._org.building.id,\n                limit: 500,\n            }).toPromise();\n            return asset_list.map((asset) => ({\n                ...asset,\n                name:\n                    groups.find((_) => _.id === (asset as any).asset_type_id)\n                        ?.name || asset.id,\n            }));\n        }),\n        shareReplay(1)\n    );\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading purchase order details...';\n                    const asset = await showAssetPurchaseOrder(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load purchase order details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue({\n                        ...asset,\n                        order_number: asset.purchase_order_number,\n                        purchase_date: asset.purchase_date * 1000,\n                        expected_service_end_date:\n                            asset.expected_service_end_date * 1000,\n                        expected_service_start_date:\n                            asset.expected_service_start_date * 1000,\n                    });\n                    this.item = asset;\n                    this._id.next(asset.id);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.product_id = params.get('group_id');\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        data.purchase_date = getUnixTime(data.purchase_date) || null;\n        data.expected_service_start_date =\n            getUnixTime(data.expected_service_start_date) ||\n            this.item?.expected_service_start_date ||\n            null;\n        data.expected_service_end_date =\n            getUnixTime(data.expected_service_end_date) ||\n            this.item?.expected_service_end_date ||\n            null;\n        const item = await saveAssetPurchaseOrder(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving purchase order.: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        notifySuccess('Successfully saved purchase order.');\n        this._state.postChange();\n        if (this.product_id) {\n            this._router.navigate([this.base_route, 'view', this.product_id]);\n        } else {\n            this._router.navigate([this.base_route, 'list', 'purchase-orders']);\n        }\n        this.loading = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    generateAssetForm,\n    saveAsset,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport {\n    AsyncHandler,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"serial-number\"> Serial Number </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"serial-number\"\n                                    placeholder=\"Serial Number\"\n                                    formControlName=\"serial_number\"\n                                />\n                                <mat-error>Serial Number is required</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"identifier\">Label/Friendly Name</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"identifier\"\n                                    placeholder=\"Identifier, Asset ID or Barcode\"\n                                    formControlName=\"identifier\"\n                                />\n                                <mat-error>\n                                    Label/Friendly Name is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"serial-number\">Barcode</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"barcode\"\n                                placeholder=\"Barcode\"\n                                formControlName=\"barcode\"\n                            />\n                            <mat-error>Barcode is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? [base_route, 'view', product.id]\n                                : [base_route]\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public loading: string = '';\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAsset({\n            ...data,\n            zone_id: this._org.building.id,\n        } as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this._state.postChange();\n        this._state.setExtraAssets(\n            [item].map((d) => ({ ...d, type_id: this.product.id }))\n        );\n        notifySuccess('Asset saved successfully.');\n        this._router.navigate([this.base_route, 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetGroupForm,\n    saveAssetGroup,\n    showAssetGroup,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-group-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Product\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto p-2\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"name\"\n                                placeholder=\"Name of the product\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Category<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"category_id\"\n                                placeholder=\"Category of Product\"\n                                (click)=\"\n                                    current_category = form.value.category_id\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let category of categories | async\"\n                                    [value]=\"category.id\"\n                                >\n                                    {{ category.name }}\n                                </mat-option>\n                                <mat-option\n                                    (click)=\"newCategory()\"\n                                    class=\"relative\"\n                                >\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon>add</app-icon>\n                                        <p>New Category</p>\n                                    </div>\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>Category is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"brand\">Brand<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"brand\"\n                                placeholder=\"Brand of the product\"\n                                formControlName=\"brand\"\n                            />\n                            <mat-error>Brand is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"description\">Description</label>\n                        <mat-form-field appearance=\"outline\">\n                            <textarea\n                                matInput\n                                name=\"description\"\n                                placeholder=\"Description of the product\"\n                                formControlName=\"description\"\n                            ></textarea>\n                            <mat-error>Description is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"images\">Images</label>\n                        <image-list-field\n                            name=\"images\"\n                            formControlName=\"images\"\n                        ></image-list-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            form.value.id\n                                ? [base_route, 'view', form.value.id]\n                                : [base_route, 'list', 'items']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetGroupFormComponent extends AsyncHandler {\n    public readonly form = generateAssetGroupForm();\n    public readonly new_category = new BehaviorSubject<AssetCategory>(null);\n    public readonly categories = combineLatest([\n        this._state.categories,\n        this.new_category,\n    ]).pipe(\n        map(([list, item]) => (item ? unique([...list, item], 'id') : list))\n    );\n    public loading: string = '';\n    public current_category: string;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError('Unable to load product details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(product);\n                    this.loading = '';\n                }\n            })\n        );\n    }\n\n    public async newCategory() {\n        this.form.patchValue({ category_id: this.current_category });\n        const category = await this._state.editCategory();\n        if (!category) return;\n        this.new_category.next(category);\n        this.form.patchValue({ category_id: category.id });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAssetGroup(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving Product: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = '';\n        this._state.postChange();\n        this._router.navigate([this.base_route, 'view', item.id]);\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-asset-purchase-order-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div class=\"w-full overflow-auto h-1/2 flex-1 p-4\">\n                <custom-table\n                    purchase-orders\n                    class=\"block min-w-[52rem] text-sm\"\n                    [dataSource]=\"purchase_orders\"\n                    [columns]=\"[\n                        'purchase_order_number',\n                        'invoice_number',\n                        'purchase_date',\n                        'expected_service_start_date',\n                        'expected_service_end_date'\n                    ]\"\n                    [display_column]=\"[\n                        'Order Number',\n                        'Invoice Number',\n                        'Purchase Date',\n                        'Depreciation Start',\n                        'Depreciation End'\n                    ]\"\n                    [column_size]=\"['flex', '10r', '10r', '10r', '10r']\"\n                    [template]=\"{\n                    purchase_date: date_template,\n                    expected_service_start_date: date_template,\n                    expected_service_end_date: date_template,\n                }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching purchase orders found.'\n                            : 'There are purchase orders for this building.'\n                    \"\n                    (row_clicked)=\"editOrder($event)\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #date_template let-data=\"data\">\n            <span class=\"opacity-30\" *ngIf=\"!data\">No Date set</span>\n            {{ data ? (data * 1000 | date: 'mediumDate') : '' }}\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetPurchaseOrderListComponent {\n    public readonly now = Date.now();\n    public readonly purchase_orders = combineLatest([\n        this._state.options,\n        this._state.purchase_orders,\n    ]).pipe(\n        map(([{ search }, list]) =>\n            list.filter(\n                (_) =>\n                    !search ||\n                    (_ as any).purchase_order_number\n                        .toLowerCase()\n                        .includes(search.toLowerCase()) ||\n                    _.invoice_number\n                        ?.toLowerCase()\n                        .includes(search.toLowerCase())\n            )\n        )\n    );\n    public readonly filters = this._state.options;\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _router: Router\n    ) {}\n\n    public editOrder(order) {\n        this._router.navigate(\n            [this._state.base_route, 'manage', 'purchase-order'],\n            {\n                queryParams: { id: order.id },\n            }\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    addAssetsInBulk,\n    generateAssetForm,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport {\n    AsyncHandler,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-bulk-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        Bulk {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"count\">\n                                Number of Assets to create\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    [(ngModel)]=\"count\"\n                                    name=\"count\"\n                                    type=\"number\"\n                                    placeholder=\"Number of assets to add\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"identifier\">Label/Friendly Name</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"identifier\"\n                                placeholder=\"Identifier, Asset ID or Barcode\"\n                                formControlName=\"identifier\"\n                            />\n                            <mat-error>\n                                Label/Friendly Name is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? [base_route, 'view', product.id]\n                                : [base_route]\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetBulkFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public count = 2;\n    public loading: string = '';\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n        this.count = 2;\n    }\n\n    public async save() {\n        if (!this.count && this.count < 1) {\n            return notifyError('Please enter a valid number of assets to add.');\n        }\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const list = await addAssetsInBulk(\n            new Array(this.count).fill({\n                ...data,\n                zone_id: this._org.building.id,\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this._state.setExtraAssets(\n            list.map((d) => ({ ...d, type_id: this.product.id }))\n        );\n        this.form.reset();\n        this._state.postChange();\n        notifySuccess(`Asset added ${list.length} successfully.`);\n        this._router.navigate([this.base_route, 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { UIModule } from '../ui/ui.module';\n\nimport { AssetListingComponent } from './asset-listing.component';\nimport { AssetManagerTopbarComponent } from './asset-manager-topbar.component';\nimport { AssetManagerComponent } from './asset-manager.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AssetViewComponent } from './asset-view.component';\nimport { AssetRequestListComponent } from './asset-request-list.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { AssetItemListComponent } from './asset-item-list.component';\nimport { SplitJoinPipe } from './split-join.pipe';\nimport { AssetRequestDetailsComponent } from './asset-request-details.component';\nimport { DurationFormatPipe } from './duration.pipe';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetPurchaseOrderFormComponent } from './asset-purchase-order-form.component';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\nimport { AssetFormComponent } from './asset-form.component';\nimport { AssetGroupFormComponent } from './asset-group-form.component';\nimport { AssetPurchaseOrderListComponent } from './asset-purchase-order-list.component';\nimport { AssetBulkFormComponent } from './asset-bulk-form.component';\nimport { NewAssetManagerComponent } from './new-asset-manager.component';\nimport { AssetCategoryManagementModalComponent } from './asset-category-management-modal.component';\n\nconst COMPONENTS = [\n    NewAssetManagerComponent,\n    AssetManagerComponent,\n    AssetManagerTopbarComponent,\n    AssetListingComponent,\n    AssetViewComponent,\n    AssetRequestListComponent,\n    AssetItemListComponent,\n    AssetRequestDetailsComponent,\n    AssetLocationModalComponent,\n    SplitJoinPipe,\n    DurationFormatPipe,\n\n    AssetFormComponent,\n    AssetBulkFormComponent,\n    AssetGroupFormComponent,\n    AssetCategoryFormComponent,\n    AssetPurchaseOrderFormComponent,\n    AssetPurchaseOrderListComponent,\n    AssetCategoryManagementModalComponent,\n];\n\nconst children = [\n    {\n        path: 'list',\n        component: AssetListingComponent,\n        children: [\n            { path: 'items', component: AssetItemListComponent },\n            { path: 'requests', component: AssetRequestListComponent },\n            {\n                path: 'purchase-orders',\n                component: AssetPurchaseOrderListComponent,\n            },\n            { path: '**', redirectTo: 'requests' },\n        ],\n    },\n    { path: 'view/:id', component: AssetViewComponent },\n    {\n        path: 'manage',\n        children: [\n            { path: 'group', component: AssetGroupFormComponent },\n            { path: 'asset', component: AssetFormComponent },\n            { path: 'asset-bulk', component: AssetBulkFormComponent },\n            { path: 'category', component: AssetCategoryFormComponent },\n            {\n                path: 'purchase-order',\n                component: AssetPurchaseOrderFormComponent,\n            },\n        ],\n    },\n    { path: '**', redirectTo: 'list/requests' },\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewAssetManagerComponent,\n        children,\n    },\n    {\n        path: '',\n        component: AssetManagerComponent,\n        children,\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        ComponentsModule,\n        MatButtonToggleModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatStepperModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppAssetManangerModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewAssetManagerComponent {}\n"],"x_google_ignoreList":[0,1]}