{"version":3,"file":"apps_concierge_src_app_asset-manager_asset-manager_module_ts.js","mappings":"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","names":["_c0","CdkStep_ng_template_0_Template","rf","ctx","i0","CdkStepHeader","constructor","_elementRef","this","focus","nativeElement","static","ɵfac","__ngFactoryType__","ɵdir","type","selectors","hostAttrs","standalone","CdkStepLabel","template","nextId","STEPPER_GLOBAL_OPTIONS","InjectionToken","CdkStep","completed","_completedOverride","_getDefaultCompleted","value","stepControl","valid","interacted","hasError","_customError","_getDefaultError","invalid","_stepper","stepperOptions","interactedStream","EventEmitter","editable","optional","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","select","selected","reset","ngOnChanges","_stateChanged","_markAsInteracted","emit","_showError","showError","forwardRef","CdkStepper","ɵcmp","contentQueries","dirIndex","_t","stepLabel","first","viewQuery","TemplateRef","content","inputs","label","errorMessage","ariaLabel","ariaLabelledby","state","booleanAttribute","outputs","exportAs","features","ngContentSelectors","decls","vars","encapsulation","changeDetection","selectedIndex","_selectedIndex","index","steps","_steps","_isValidIndex","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","undefined","step","indexOf","orientation","_orientation","_keyManager","withVerticalOrientation","_dir","_changeDetectorRef","_destroyed","Subject","QueryList","_sortedHeaders","linear","selectionChange","selectedIndexChange","_groupId","ngAfterContentInit","changes","pipe","startWith","takeUntil","subscribe","filter","notifyOnChanges","ngAfterViewInit","_stepHeader","headers","sort","a","b","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","FocusKeyManager","withWrap","withHomeAndEnd","change","of","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","ngOnDestroy","destroy","next","complete","min","length","previous","forEach","_getStepLabelId","i","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","newIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","hasModifierKey","keyCode","manager","SPACE","ENTER","setFocusOrigin","onKeydown","preventDefault","slice","some","control","pending","stepperElement","focusedElement","_getFocusedElementPierceShadowDom","contains","i1","numberAttribute","CdkStepperModule","ɵmod","ɵinj","imports","BidiModule","MatStepHeader_Conditional_3_Template","ctx_r0","iconOverrides","_getIconContext","MatStepHeader_Conditional_4_Case_0_Template","_getDefaultTextForState","MatStepHeader_Conditional_4_Case_1_Conditional_0_Template","_intl","completedLabel","MatStepHeader_Conditional_4_Case_1_Conditional_1_Template","editableLabel","MatStepHeader_Conditional_4_Case_1_Template","MatStepHeader_Conditional_4_Template","tmp_1_0","MatStepHeader_Conditional_6_Template","MatStepHeader_Conditional_7_Template","MatStepHeader_Conditional_8_Template","optionalLabel","MatStepHeader_Conditional_9_Template","MatStep_ng_template_0_ng_template_1_Template","MatStep_ng_template_0_Template","_portal","_c1","a0","a1","_c2","animationDuration","_c3","params","MatStepper_Conditional_0_Template","MatStepper_Case_1_For_3_Conditional_1_Template","MatStepper_Case_1_For_3_Template","step_r1","$implicit","ɵ$index_8_r2","$index","ɵ$count_8_r3","$count","stepTemplate_r4","MatStepper_Case_1_For_6_Template","_r5","$event","ctx_r5","_animationDone","step_r7","ɵ$index_16_r8","_getAnimationDuration","MatStepper_Case_1_Template","MatStepper_Case_2_For_1_Template","_r9","step_r10","ɵ$index_22_r11","ɵ$count_22_r12","MatStepper_Case_2_Template","MatStepper_ng_template_3_Template","_r13","step_r14","i_r15","_stepIsNavigable","_iconOverrides","disableRipple","color","MatStepLabel","ɵMatStepLabel_BaseFactory","MatStepperIntl","ɵprov","token","factory","providedIn","MAT_STEPPER_INTL_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","MAT_STEPPER_INTL_PROVIDER_FACTORY","parentIntl","MatStepHeader","_focusMonitor","changeDetectorRef","super","_intlSubscription","monitor","unsubscribe","stopMonitoring","origin","options","focusVia","_stringLabel","_templateLabel","_getHostElement","active","i2","hostVars","hostBindings","consts","tmp_8_0","dependencies","MatRipple","NgTemplateOutlet","MatIcon","styles","matStepperAnimations","horizontalStepTransition","trigger","style","transform","visibility","transition","group","animate","query","animateChild","verticalStepTransition","height","MatStepperIcon","templateRef","name","MatStepContent","_template","MatStep","stepper","_errorStateMatcher","_viewContainerRef","_isSelected","Subscription","EMPTY","switchMap","map","isSelected","_lazyContent","TemplatePortal","isErrorState","form","MatStepper","ErrorStateMatcher","useExisting","CdkPortalOutlet","_animationDuration","test","dir","elementRef","animationDone","labelPosition","headerPosition","_isServer","inject","Platform","isBrowser","nodeName","toLowerCase","_icons","distinctUntilChanged","x","y","fromState","toState","i2$1","tmp_2_0","data","animation","MatStepperModule","providers","MatCommonModule","CommonModule","PortalModule","MatIconModule","MatRippleModule","_r1","category_r2","ctx_r2","edit","remove","AssetCategoryManagementModalComponent_ng_container_12_div_1_Template","id","AssetCategoryManagementModalComponent","_data","_dialog_ref","_this","changed","list","_ref","_asyncToGenerator","category","deleteAssetCategory","toPromise","_x","apply","arguments","MAT_DIALOG_DATA","core","VBU","AssetCategoryManagementModalComponent_ng_container_12_Template","category_r1","AssetCategoryFormComponent_main_4_mat_option_16_Template","ctx_r1","tmp_3_0","categories","_r3","save","AssetCategoryFormComponent","_state","loading","generateAssetCategoryForm","_","parent_category_id","patchValue","disableClose","item","saveAssetCategory","catch","e","notifyError","message","close","AssetCategoryFormComponent_button_3_Template","AssetCategoryFormComponent_main_4_Template","AssetCategoryFormComponent_footer_5_Template","AssetCategoryFormComponent_ng_template_6_Template","load_state_r4","AssetManagerStateService","AsyncHandler","_form","is_new_ui","location","hash","includes","pathname","base_route","_spaces","_org","_dialog","_settings","_options","BehaviorSubject","view","_change","_poll","_extra_assets","generateAssetForm","_loading","asObservable","extra_assets","products","combineLatest","active_building","getGroupsWithAssets","zone_id","building","tap","shareReplay","purchase_orders","queryAssetPurchaseOrders","requests","active_region","initialised","debounceTime","date","bld","region","start","startOfDay","Date","now","valueOf","end","endOfDay","zones","get","buildingsForRegion","join","queryBookings","period_start","getUnixTime","period_end","Booking","extension_data","space","find","space_id","linked_event","linked_bookings","request","AssetRequest","_time","event_start","booking_start","event_end","date_end","booking_end","deliver_at","filtered_requests","search","user_name","title","location_name","assets","status","tracking","queryAssetCategories","AssetCategory","active_product","active_item","t","showGroupFull","active_product_requests","asset","asset_id","filtered_products","product_mapping","category_list","_count","category_id","unique","settings","showMetadata","catchError","details","availability","disabled_rooms","startPolling","delay","interval","stopPolling","clearInterval","resetForm","manageCategories","ref","open","editCategory","subscription","componentInstance","afterClosed","unsub","result","setExtraAssets","setOptions","getValue","postChange","timeout","setStatus","_this2","rejectBooking","approveBooking","setTracking","_this3","updateBooking","toJSON","deleteActiveProduct","_this4","take","deleteAssetGroup","notifySuccess","postForm","_this5","other_data","drop_keys","key","cleanObject","saveAsset","editConfig","_this6","config","getConfig","items","types","flatten","AttachedResourceConfigModalComponent","resource_name","require_notes","Promise","race","reason","updateConfig","metadata","then","rules","Array","updateMetadata","description","saveSettings","_this7","old_settings","i3","i4","jDH","_r2","_r4","setRoomAvailability","bld_r7","display_name","_r6","setBuilding","AssetManagerTopbarComponent_div_13_mat_option_4_Template","buildings","AssetManagerTopbarComponent","use_region","active_buildings","o","AvailableRoomsStateModalComponent","AssetManagerTopbarComponent_a_1_Template","AssetManagerTopbarComponent_a_2_Template","AssetManagerTopbarComponent_mat_button_toggle_group_3_Template","AssetManagerTopbarComponent_button_5_Template","AssetManagerTopbarComponent_button_6_Template","AssetManagerTopbarComponent_button_7_Template","AssetManagerTopbarComponent_div_13_Template","tmp_6_0","tmp_7_0","AssetListingComponent_nav_2_a_1_Template","tabPanel_r4","is_new","AssetListingComponent","_router","ngOnInit","url","events","NavigationEnd","AssetListingComponent_nav_2_Template","AssetManagerComponent","attrs","SplitJoinPipe","split","EJ8","pure","tmp_4_0","level","zone","map_id","_c6","_c5","selected_feature","tmp_5_0","data_r3","stopPropagation","row_r5","row","tracking_menu_r6","AssetLocationModalComponent","updateFeatures","_space","location_id","MapPinComponent","z_index","SpacePipe","levelWithID","AssetLocationModalComponent_div_16_Template","AssetLocationModalComponent_interactive_map_17_Template","AssetLocationModalComponent_ng_template_18_Template","AssetLocationModalComponent_ng_template_20_Template","AssetLocationModalComponent_ng_template_22_Template","_c4","level_template_r8","tracking_template_r9","empty_state_r7","tmp_10_0","row_r4","removeAsset","_c18","tmp_12_0","row_r6","removePurchaseOrder","_c12","AssetViewComponent_div_0_ng_container_48_Template","AssetViewComponent_div_0_ng_template_50_Template","viewLocations","AssetViewComponent_div_0_ng_template_77_Template","AssetViewComponent_div_0_ng_template_97_Template","tmp_11_0","images","tmp_13_0","tmp_15_0","delete_tooltip_r11","tmp_17_0","no_desc_state_r7","asset_list","tmp_19_0","tmp_20_0","tmp_21_0","tmp_23_0","tmp_25_0","_c11","_c7","_c8","_c9","_c10","action_template_r8","tmp_29_0","brand","tmp_31_0","tmp_32_0","_c17","_c13","_c14","_c15","date_template_r10","_c16","po_action_template_r9","AssetViewComponent_ng_template_4_span_3_Template","data_r12","closeTooltip","deleteAsset","AssetViewComponent_ng_template_6_div_0_Template","AssetViewComponent_ng_template_6_ng_template_1_Template","deleting","delete_loading_r14","AssetViewComponent","navigate","_tooltip_el","code","currency_code","_route","type_id","req","addMinutes","duration","paramMap","has","clearTimeout","resp","openConfirmModal","confirm_text","icon","removeAssetRequests","setTimeout","deleteAssetPurchaseOrder","CustomTooltipComponent","AssetViewComponent_div_0_Template","AssetViewComponent_ng_template_2_Template","AssetViewComponent_ng_template_4_Template","AssetViewComponent_ng_template_6_Template","AssetViewComponent_ng_template_8_Template","AssetViewComponent_ng_template_10_Template","loading_state_r15","DurationFormatPipe","short","formatDuration","days","floor","hours","minutes","replace","item_r3","quantity","requestChange","AssetRequestDetailsComponent_div_0_div_34_Template","user_email","user_phone","user_company","time_format","menu_r4","tracking_menu_r5","AssetRequestDetailsComponent","AssetRequestDetailsComponent_div_0_Template","row_r2","asset_r4","AssetRequestListComponent_ng_template_15_div_1_Template","deliver_offset","deliver_day_offset","AssetRequestListComponent_ng_template_19_span_2_Template","data_r7","_r8","row_r9","menu_r10","_r11","row_r12","tracking_menu_r13","AssetRequestListComponent","booking","all_day","filters","setDate","AssetRequestListComponent_ng_template_13_Template","AssetRequestListComponent_ng_template_15_Template","AssetRequestListComponent_ng_template_17_Template","AssetRequestListComponent_ng_template_19_Template","AssetRequestListComponent_ng_template_21_Template","AssetRequestListComponent_ng_template_23_Template","tmp_9_0","user_template_r14","date_template_r16","assets_template_r15","level_template_r17","approval_template_r18","tracking_template_r19","asset_r1","asset_count","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_div_8_Template","placeholder_r2","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_Template","group_r4","asset_r5","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_div_8_Template","placeholder_r6","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_Template","AssetItemListComponent_div_0_ng_container_1_div_1_Template","AssetItemListComponent_div_0_ng_container_1_Template","AssetItemListComponent_ng_template_5_a_4_Template","AssetItemListComponent","AssetItemListComponent_div_0_Template","AssetItemListComponent_mat_progress_bar_3_Template","AssetItemListComponent_ng_template_5_Template","action_template","AssetPurchaseOrderFormComponent_div_1_h3_42_Template","AssetPurchaseOrderFormComponent_div_1_simple_table_43_Template","from","product_id","AssetPurchaseOrderFormComponent","generateAssetPurchaseOrderForm","_id","addYears","queryAssets","order_id","groups","queryAssetGroups","limit","asset_type_id","queryParamMap","_ref2","showAssetPurchaseOrder","order_number","purchase_order_number","purchase_date","expected_service_end_date","expected_service_start_date","_x2","unit_price","saveAssetPurchaseOrder","AssetPurchaseOrderFormComponent_div_1_Template","AssetPurchaseOrderFormComponent_ng_template_2_Template","load_state_r3","order_r2","invoice_number","AssetFormComponent_div_1_mat_option_30_Template","AssetFormComponent_div_1_mat_option_32_Template","product","AssetFormComponent","showAsset","showAssetGroup","getInvalidFields","d","AssetFormComponent_div_1_Template","AssetFormComponent_ng_template_2_Template","category_r3","current_category","AssetGroupFormComponent_div_1_mat_option_21_Template","newCategory","AssetGroupFormComponent","generateAssetGroupForm","new_category","saveAssetGroup","AssetGroupFormComponent_div_1_Template","AssetGroupFormComponent_ng_template_2_Template","AssetPurchaseOrderListComponent_ng_template_5_span_1_Template","data_r2","AssetPurchaseOrderListComponent","editOrder","order","queryParams","AssetPurchaseOrderListComponent_ng_template_5_Template","date_template_r3","order_r3","count","AssetBulkFormComponent_div_1_mat_option_28_Template","AssetBulkFormComponent_div_1_mat_option_30_Template","AssetBulkFormComponent","addAssetsInBulk","fill","AssetBulkFormComponent_div_1_Template","AssetBulkFormComponent_ng_template_2_Template","children","path","component","redirectTo","ROUTES","NewAssetManagerComponent","AppAssetManangerModule","$C","G2t","UIModule","ComponentsModule","MatButtonToggleModule","MatProgressBarModule","MatTabsModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/cdk/fesm2022/stepper.mjs","./node_modules/@angular/material/fesm2022/stepper.mjs","./apps/concierge/src/app/asset-manager/asset-category-management-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-category-form.component.ts","./apps/concierge/src/app/asset-manager/asset-manager-state.service.ts","./apps/concierge/src/app/asset-manager/asset-manager-topbar.component.ts","./apps/concierge/src/app/asset-manager/asset-listing.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.component.ts","./apps/concierge/src/app/asset-manager/split-join.pipe.ts","./apps/concierge/src/app/asset-manager/asset-location-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-view.component.ts","./apps/concierge/src/app/asset-manager/duration.pipe.ts","./apps/concierge/src/app/asset-manager/asset-request-details.component.ts","./apps/concierge/src/app/asset-manager/asset-request-list.component.ts","./apps/concierge/src/app/asset-manager/asset-item-list.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-form.component.ts","./apps/concierge/src/app/asset-manager/asset-form.component.ts","./apps/concierge/src/app/asset-manager/asset-group-form.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-list.component.ts","./apps/concierge/src/app/asset-manager/asset-bulk-form.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.module.ts","./apps/concierge/src/app/asset-manager/new-asset-manager.component.ts"],"sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, booleanAttribute, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, numberAttribute, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkStepHeader, isStandalone: true, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkStepLabel, isStandalone: true, selector: \"[cdkStepLabel]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = value;\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = value;\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        /** Whether the user can return to this step once it has been marked as completed. */\n        this.editable = true;\n        /** Whether the completion of step is optional. */\n        this.optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return this._stepperOptions.showError ?? this._customError != null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkStep, isStandalone: true, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: [\"editable\", \"editable\", booleanAttribute], optional: [\"optional\", \"optional\", booleanAttribute], completed: [\"completed\", \"completed\", booleanAttribute], hasError: [\"hasError\", \"hasError\", booleanAttribute] }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => CdkStepper)]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], optional: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], completed: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hasError: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\nclass CdkStepper {\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            this.selected?._markAsInteracted();\n            if (this._selectedIndex !== index &&\n                !this._anyControlsInvalidOrPending(index) &&\n                (index >= this._selectedIndex || this.steps.toArray()[index].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = index;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatStepper` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    constructor(_dir, _changeDetectorRef, _elementRef) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        /** Whether the validity of previous steps should be checked or not. */\n        this.linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        /** Output to support two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplication. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this.selectedIndexChange.emit(this._selectedIndex);\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.setFocusOrigin('keyboard').onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this.linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkStepper, isStandalone: true, selector: \"[cdkStepper]\", inputs: { linear: [\"linear\", \"linear\", booleanAttribute], selectedIndex: [\"selectedIndex\", \"selectedIndex\", numberAttribute], selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\", selectedIndexChange: \"selectedIndexChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }], propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectedIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], selectedIndexChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkStepperNext, isStandalone: true, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkStepper }], propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkStepperPrevious, isStandalone: true, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkStepper }], propDecorators: { type: [{\n                type: Input\n            }] } });\n\nclass CdkStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule,\n            CdkStep,\n            CdkStepper,\n            CdkStepHeader,\n            CdkStepLabel,\n            CdkStepperNext,\n            CdkStepperPrevious], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Inject, ContentChild, QueryList, EventEmitter, inject, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { MatRipple, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport * as i2 from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i2$1 from '@angular/cdk/bidi';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\n\nclass MatStepLabel extends CdkStepLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatStepLabel, isStandalone: true, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                    standalone: true,\n                }]\n        }] });\n\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n        /** Label that is used to indicate step as completed to screen readers. */\n        this.completedLabel = 'Completed';\n        /** Label that is used to indicate step as editable to screen readers. */\n        this.editableLabel = 'Editable';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\nclass MatStepHeader extends CdkStepHeader {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional,\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepHeader, deps: [{ token: MatStepperIntl }, { token: i2.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatStepHeader, isStandalone: true, selector: \"mat-step-header\", inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\", color: \"color\" }, host: { attributes: { \"role\": \"tab\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color);border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-app-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color);border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-app-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-app-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-app-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-app-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-app-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-app-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-app-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-app-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-app-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-app-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-app-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-app-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-app-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-app-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-app-on-primary))}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', host: {\n                        'class': 'mat-step-header',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatRipple, NgTemplateOutlet, MatIcon], template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color);border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-app-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color);border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-app-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-app-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-app-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-app-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-app-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-app-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-app-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-app-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-app-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-app-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-app-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-app-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-app-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-app-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-app-on-primary))}\"] }]\n        }], ctorParameters: () => [{ type: MatStepperIntl }, { type: i2.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }], propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }] } });\n\nconst DEFAULT_HORIZONTAL_ANIMATION_DURATION = '500ms';\nconst DEFAULT_VERTICAL_ANIMATION_DURATION = '225ms';\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', group([\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n            query('@*', animateChild(), { optional: true }),\n        ]), {\n            params: { 'animationDuration': DEFAULT_HORIZONTAL_ANIMATION_DURATION },\n        }),\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', group([\n            animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'),\n            query('@*', animateChild(), { optional: true }),\n        ]), {\n            params: { 'animationDuration': DEFAULT_VERTICAL_ANIMATION_DURATION },\n        }),\n    ]),\n};\n\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperIcon, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatStepperIcon, isStandalone: true, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatStepContent, isStandalone: true, selector: \"ng-template[matStepContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n        /** Content for step label given by `<ng-template matStepLabel>`. */\n        // We need an initializer here to avoid a TS error.\n        this.stepLabel = undefined;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStep, deps: [{ token: forwardRef(() => MatStepper) }, { token: i1.ErrorStateMatcher, skipSelf: true }, { token: i0.ViewContainerRef }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatStep, isStandalone: true, selector: \"mat-step\", inputs: { color: \"color\" }, host: { attributes: { \"hidden\": \"\" } }, providers: [\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'hidden': '', // Hide the steps so they don't affect the layout.\n                    }, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], ctorParameters: () => [{ type: MatStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatStepper)]\n                }] }, { type: i1.ErrorStateMatcher, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\nclass MatStepper extends CdkStepper {\n    /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    constructor(dir, changeDetectorRef, elementRef) {\n        super(dir, changeDetectorRef, elementRef);\n        /** The list of step headers of the steps in the stepper. */\n        // We need an initializer here to avoid a TS error.\n        this._stepHeader = undefined;\n        /** Full list of steps inside the stepper, including inside nested steppers. */\n        // We need an initializer here to avoid a TS error.\n        this._steps = undefined;\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /**\n         * Position of the stepper's header.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.headerPosition = 'top';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        this._animationDuration = '';\n        /** Whether the stepper is rendering on the server. */\n        this._isServer = !inject(Platform).isBrowser;\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone\n            .pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n    _getAnimationDuration() {\n        if (this.animationDuration) {\n            return this.animationDuration;\n        }\n        return this.orientation === 'horizontal'\n            ? DEFAULT_HORIZONTAL_ANIMATION_DURATION\n            : DEFAULT_VERTICAL_ANIMATION_DURATION;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepper, deps: [{ token: i2$1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatStepper, isStandalone: true, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"class.mat-stepper-header-position-bottom\": \"headerPosition === \\\"bottom\\\"\", \"attr.aria-orientation\": \"orientation\" } }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step; let i = $index, isLast = $last) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n          @if (!isLast) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step; let i = $index) {\\n          <div class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@horizontalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step; let i = $index, isLast = $last) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@verticalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-app-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-app-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-app-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-app-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-app-outline));top:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\", \"color\"] }], animations: [\n            matStepperAnimations.horizontalStepTransition,\n            matStepperAnimations.verticalStepTransition,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                    }, animations: [\n                        matStepperAnimations.horizontalStepTransition,\n                        matStepperAnimations.verticalStepTransition,\n                    ], providers: [{ provide: CdkStepper, useExisting: MatStepper }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgTemplateOutlet, MatStepHeader], template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step; let i = $index, isLast = $last) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n          @if (!isLast) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step; let i = $index) {\\n          <div class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@horizontalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step; let i = $index, isLast = $last) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@verticalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-app-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-app-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-app-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-app-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-app-outline));top:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"] }]\n        }], ctorParameters: () => [{ type: i2$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }], propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatStepperNext, isStandalone: true, selector: \"button[matStepperNext]\", host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                    standalone: true,\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatStepperPrevious, isStandalone: true, selector: \"button[matStepperPrevious]\", host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                    standalone: true,\n                }]\n        }] });\n\nclass MatStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperModule, imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent], exports: [MatCommonModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n            MatStepper,\n            MatStepHeader, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CommonModule,\n                        PortalModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n","import { Component, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { AssetCategory, deleteAssetCategory } from '@placeos/assets';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'asset-category-management-modal',\n    template: `\n        <header>\n            <h2>Manage Categories</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-y-auto min-w-[20rem] divide-y divide-base-200 max-h-[65vh]\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"flex items-center justify-center space-x-2 w-[calc(100%-1rem)] m-2\"\n                (click)=\"edit()\"\n            >\n                <div class=\"truncate\">New Category</div>\n                <app-icon>add</app-icon>\n            </button>\n            <ng-container *ngFor=\"let category of list | async\">\n                <div\n                    class=\"flex items-center space-x-2 hover:bg-base-200:bg-base-300 p-2\"\n                    *ngIf=\"category.id\"\n                >\n                    <div class=\"flex-1 truncate\">{{ category.name }}</div>\n                    <button btn icon matRipple (click)=\"edit(category)\">\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button btn icon matRipple (click)=\"remove(category)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </ng-container>\n        </main>\n    `,\n    styles: [``],\n})\nexport class AssetCategoryManagementModalComponent {\n    public readonly changed = new EventEmitter();\n    public readonly list = this._data.list;\n    public readonly edit = this._data.edit;\n\n    public readonly remove = async (category: AssetCategory) => {\n        await deleteAssetCategory(category.id).toPromise();\n        this.changed.emit();\n    };\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            list: Observable<AssetCategory[]>;\n            edit: (i?) => any;\n        },\n        private _dialog_ref: MatDialogRef<AssetCategoryManagementModalComponent>\n    ) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetCategoryForm,\n    saveAssetCategory,\n} from '@placeos/assets';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { map } from 'rxjs/operators';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'asset-category-form',\n    template: `\n        <header class=\"flex items-center p-2\">\n            <h2 class=\"text-center text-xl font-medium\">\n                {{ form.value.id ? 'Edit' : 'Add' }} Category\n            </h2>\n            <button btn icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex-1 h-1/2 overflow-auto p-2 w-[20rem] max-w-[80vw]\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Name<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Parent Category</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        formControlName=\"parent_category_id\"\n                        placeholder=\"No Parent\"\n                        [disabled]=\"!(categories | async)?.length\"\n                    >\n                        <mat-option\n                            *ngFor=\"let category of categories | async\"\n                            [value]=\"category.id\"\n                        >\n                            {{ category.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <a btn matRipple class=\"w-32 inverse\" mat-dialog-close>Cancel</a>\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Category...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetCategoryFormComponent {\n    public loading = false;\n    public readonly form = generateAssetCategoryForm();\n    public readonly categories = this._state.categories.pipe(\n        map((list) =>\n            list.filter((_) => _.parent_category_id !== this.form.value.id)\n        )\n    );\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) _data: { category?: AssetCategory },\n        private _state: AssetManagerStateService,\n        private _dialog_ref: MatDialogRef<AssetCategoryFormComponent>\n    ) {\n        if (_data?.category) this.form.patchValue(_data.category);\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data = this.form.value;\n        const item = await saveAssetCategory(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error saving category: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = false;\n        this._dialog_ref.close(item);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    approveBooking,\n    queryBookings,\n    rejectBooking,\n    updateBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    SettingsService,\n    flatten,\n    notifySuccess,\n    unique,\n} from '@placeos/common';\nimport { SpacesService } from '@placeos/spaces';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n    deleteAssetGroup,\n    generateAssetForm,\n    getGroupsWithAssets,\n    queryAssetCategories,\n    queryAssetPurchaseOrders,\n    saveAsset,\n    showGroupFull,\n} from '@placeos/assets';\nimport {\n    PlaceMetadata,\n    cleanObject,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssetCategoryManagementModalComponent } from './asset-category-management-modal.component';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceConfigModalData,\n    AttachedResourceRuleset,\n} from '@placeos/components';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport interface AssetOptions {\n    date?: number;\n    search?: string;\n    sort_by?: string;\n    view: 'grid' | 'list';\n    active_item?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetManagerStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<AssetOptions>({ view: 'grid' });\n    private _change = new BehaviorSubject(0);\n    private _poll = new BehaviorSubject(0);\n    private _extra_assets = new BehaviorSubject<Asset[]>([]);\n    private _form = generateAssetForm();\n    private _loading = new BehaviorSubject(false);\n    /** Whether asset list is loading */\n    public readonly loading = this._loading.asObservable();\n    /** List of options set for the view */\n    public readonly options = this._options.asObservable();\n    /** List of extra assets to display */\n    public readonly extra_assets = this._extra_assets.asObservable();\n    /** List of available assets */\n    public readonly products: Observable<AssetGroup[]> = combineLatest([\n        this._change,\n        this._org.active_building,\n    ]).pipe(\n        switchMap(() => {\n            this._loading.next(true);\n            return getGroupsWithAssets({ zone_id: this._org.building?.id });\n        }),\n        tap((_) => this._loading.next(false)),\n        shareReplay(1)\n    ) as any;\n    /** List of available assets */\n    public readonly purchase_orders: Observable<AssetPurchaseOrder[]> =\n        this._change.pipe(\n            switchMap(() => {\n                this._loading.next(true);\n                return queryAssetPurchaseOrders();\n            }),\n            tap(() => this._loading.next(false)),\n            shareReplay(1)\n        ) as any;\n    /** List of requests made by users for assets */\n    public readonly requests = combineLatest([\n        this._options,\n        this._org.active_building,\n        this._org.active_region,\n        this._poll,\n        this._change,\n        this._spaces.initialised,\n    ]).pipe(\n        debounceTime(200),\n        switchMap(([{ date }, bld, region]) => {\n            const start = startOfDay(date || Date.now()).valueOf();\n            const end = endOfDay(date || Date.now()).valueOf();\n            const zones = this._settings.get('app.use_region')\n                ? this._org\n                      .buildingsForRegion()\n                      .map((_) => _.id)\n                      .join(',')\n                : bld?.id;\n            return queryBookings({\n                zones,\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                type: 'asset-request',\n            }).pipe(\n                map((_) =>\n                    _.map(\n                        (b) =>\n                            new Booking({\n                                ...b,\n                                extension_data: {\n                                    ...b.extension_data,\n                                    space: this._spaces.find(\n                                        b.extension_data.space_id\n                                    ),\n                                },\n                            })\n                    ).filter((b) => {\n                        const event: any =\n                            b.linked_event || b.linked_bookings[0];\n                        if (!event) return false;\n                        const request = new AssetRequest({\n                            ...b.extension_data?.request,\n                        });\n                        const event_start =\n                            event.date ||\n                            event.event_start * 1000 ||\n                            event.booking_start * 1000 ||\n                            start;\n                        (request as any)._time = event_start;\n                        const event_end =\n                            event.date_end ||\n                            event.event_end * 1000 ||\n                            event.booking_end * 1000 ||\n                            end;\n                        return (\n                            request?.deliver_at >= start &&\n                            request?.deliver_at < end &&\n                            request?.deliver_at < event_end\n                        );\n                    })\n                )\n            );\n        }),\n        shareReplay(1)\n    );\n    /** Filtered list of asset requests */\n    public readonly filtered_requests = combineLatest([\n        this.requests,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            const search = (options.search || '').toLowerCase();\n            return search\n                ? list.filter(\n                      (i) =>\n                          i.user_name.toLowerCase().includes(search) ||\n                          i.title.toLowerCase().includes(search) ||\n                          i.extension_data.location_name\n                              ?.toLowerCase()\n                              .includes(search) ||\n                          i.extension_data.assets?.find((_) =>\n                              _.name.toLowerCase().includes(search)\n                          ) ||\n                          i.status.includes(search) ||\n                          i.extension_data.tracking?.includes(search)\n                  )\n                : list;\n        })\n    );\n    public readonly categories = combineLatest([\n        this._options,\n        this._change,\n    ]).pipe(\n        switchMap(() => queryAssetCategories()),\n        map((list) => [\n            new AssetCategory({ id: '', name: 'Uncategorised' }),\n            ...list,\n        ]),\n        shareReplay(1)\n    );\n    /** Currently active asset */\n    public readonly active_product = combineLatest([\n        this._options,\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([{ active_item }]) => !!active_item),\n        map(([options, t]) => [options.active_item, t] as any),\n        distinctUntilChanged(),\n        switchMap(([active_item]) =>\n            showGroupFull(active_item, { zone_id: this._org.building.id })\n        ),\n        shareReplay(1)\n    );\n    /** List of requests for the currently active asset */\n    public readonly active_product_requests = this.active_product.pipe(\n        switchMap((item) => {\n            return this.requests.pipe(\n                map((_) =>\n                    _.filter((i) =>\n                        item.assets.find((asset) => asset.id === i.asset_id)\n                    )\n                )\n            );\n        }),\n        map((_) => _.filter((i) => i.status !== 'declined'))\n    );\n    /** list of filtered assets */\n    public readonly filtered_products = combineLatest([\n        this.products,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            options.search\n                ? list.filter((i) =>\n                      i.name\n                          .toLowerCase()\n                          .includes(options.search.toLowerCase())\n                  )\n                : list\n        )\n    );\n    /** Mapping of available assets to categories */\n    public readonly product_mapping = combineLatest([\n        this.filtered_products,\n        this.categories,\n    ]).pipe(\n        map(([products, category_list]) => {\n            const map = { _count: products.length };\n            products.forEach(\n                (item) =>\n                    (item.category_id = category_list.find(\n                        (_) => _.id === item.category_id\n                    )\n                        ? item.category_id\n                        : '')\n            );\n            const categories = unique(products.map((i) => i.category_id));\n            for (const group of categories) {\n                map[group] = products.filter((i) => i.category_id === group);\n            }\n            return map;\n        })\n    );\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public get form() {\n        return this._form;\n    }\n\n    public get is_new_ui() {\n        return (\n            location.hash.includes('new') || location.pathname.includes('new')\n        );\n    }\n\n    public get base_route() {\n        return this.is_new_ui ? '/book/assets/new' : '/book/assets';\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startPolling(delay = 15 * 1000) {\n        this.interval('polling', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    public resetForm() {\n        this._form = generateAssetForm();\n    }\n\n    public manageCategories() {\n        const ref = this._dialog.open(AssetCategoryManagementModalComponent, {\n            data: { list: this.categories, edit: (i) => this.editCategory(i) },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.changed.subscribe(() =>\n                this._change.next(Date.now())\n            )\n        );\n        ref.afterClosed().subscribe(() => this.unsub('category_modal'));\n    }\n\n    public async editCategory(\n        category: Partial<AssetCategory> = {}\n    ): Promise<AssetCategory | null> {\n        const ref = this._dialog.open(AssetCategoryFormComponent, {\n            data: { category },\n        });\n        const result = await ref.afterClosed().toPromise();\n        if (!result) return null;\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public setExtraAssets(list: Asset[]) {\n        this._extra_assets.next(list);\n    }\n\n    /** Update the set view options */\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public postChange() {\n        this.timeout('change', () => this._change.next(Date.now()), 1000);\n    }\n\n    public async setStatus(item: Booking, status: any) {\n        let result = item;\n        if (status === 'declined') {\n            result = await rejectBooking(item.id).toPromise();\n        } else if (status === 'approved') {\n            result = await approveBooking(item.id).toPromise();\n        }\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async setTracking(item: Booking, tracking: string) {\n        const result = await updateBooking(item.id, {\n            ...item.toJSON(),\n            extension_data: { ...item.extension_data, tracking },\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async deleteActiveProduct() {\n        const item = await this.active_product.pipe(take(1)).toPromise();\n        if (!item?.id) return;\n        await deleteAssetGroup(item.id).toPromise();\n        this._change.next(Date.now());\n        notifySuccess('Successfully deleted asset');\n    }\n\n    public async postForm() {\n        if (!this.form?.valid) return;\n        const data: any = this.form.value;\n        const other_data = { ...data };\n        const drop_keys = [\n            'other_data',\n            'id',\n            'name',\n            'quantity',\n            'category',\n            'purchase_date',\n            'brand',\n            'images',\n        ];\n        for (const key of drop_keys) {\n            delete other_data[key];\n        }\n        data.other_data = cleanObject(other_data, [undefined, null, '']);\n        const asset = await saveAsset(data as any).toPromise();\n        this._change.next(Date.now());\n        notifySuccess(`Successfully ${data.id ? 'updated' : 'created'} asset`);\n        this.resetForm();\n        return asset.id;\n    }\n\n    public async editConfig() {\n        const config = await this.getConfig(this._org.building.id);\n        const items = await this.products.pipe(take(1)).toPromise();\n        const types = unique(flatten(items.map((i) => [i.name])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                resource_name: 'Assets',\n                config,\n                types,\n                require_notes: false,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async getConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (await showMetadata(zone_id, 'assets_config').toPromise())\n            .details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'assets_config',\n            details: config,\n            description: `Assets config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: Record<string, any>) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'assets-settings',\n            details: { ...old_settings, ...settings },\n            description: `Assets settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { AvailableRoomsStateModalComponent } from '@placeos/components';\nimport { MatDialog } from '@angular/material/dialog';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-manager-topbar',\n    template: `\n        <div\n            class=\"w-full px-8 pt-4 pb-2 bg-base-100 flex items-center space-x-2\"\n        >\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                *ngIf=\"active === 'items'\"\n                [routerLink]=\"[base_route, 'manage', 'group']\"\n            >\n                Add Product\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                *ngIf=\"active === 'purchase-orders'\"\n                [routerLink]=\"[base_route, 'manage', 'purchase-order']\"\n            >\n                Add Purchase Order\n            </a>\n            <mat-button-toggle-group\n                [ngModel]=\"(options | async)?.view\"\n                (ngModelChange)=\"setOptions({ view: $event })\"\n                *ngIf=\"active === 'items'\"\n            >\n                <mat-button-toggle value=\"grid\" matTooltip=\"View as Grid\">\n                    <div class=\"flex items-center justify-center h-12 w-8\">\n                        <app-icon class=\"text-2xl\">view_module</app-icon>\n                    </div>\n                </mat-button-toggle>\n                <mat-button-toggle value=\"list\" matTooltip=\"View as List\">\n                    <div class=\"flex items-center justify-center h-12 w-8\">\n                        <app-icon class=\"text-2xl\">view_list</app-icon>\n                    </div>\n                </mat-button-toggle>\n            </mat-button-toggle-group>\n            <div class=\"flex-1\"></div>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                matTooltip=\"Edit Config\"\n                (click)=\"editConfig()\"\n            >\n                <app-icon>menu_book</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                matTooltip=\"Room Availability\"\n                (click)=\"setRoomAvailability()\"\n            >\n                <app-icon>event_available</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                matTooltip=\"Manage Categories\"\n                (click)=\"manageCategories()\"\n            >\n                <app-icon>list_alt</app-icon>\n            </button>\n            <mat-form-field appearance=\"outline\" class=\"no-subscript\">\n                <app-icon matPrefix class=\"text-2xl relative top-1 -left-1\">\n                    search\n                </app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(options | async)?.search\"\n                    (ngModelChange)=\"setOptions({ search: $event })\"\n                    placeholder=\"Search products and requests\"\n                />\n            </mat-form-field>\n        </div>\n        <div\n            class=\"flex items-center space-x-2 px-4 pb-2\"\n            *ngIf=\"use_region && (building | async)?.length\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"no-subscript w-48\">\n                <mat-select\n                    [ngModel]=\"(building | async)?.id\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                    placeholder=\"All Buildings\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld.id\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetManagerTopbarComponent extends AsyncHandler {\n    @Input() public active = '';\n\n    public readonly options = this._state.options;\n    public readonly region = this._org.active_region;\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly manageCategories = () => this._state.manageCategories();\n    public readonly editConfig = () => this._state.editConfig();\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public setBuilding(id: string) {\n        const bld = this._org.buildings.find((_) => _.id === id);\n        if (!bld) return;\n        this._org.building = bld;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async setRoomAvailability() {\n        const ref = this._dialog.open(AvailableRoomsStateModalComponent, {\n            data: {\n                type: 'Assets',\n                disabled_rooms: await this._state.availability\n                    .pipe(take(1))\n                    .toPromise(),\n            },\n        });\n        this.subscription(\n            'room-availability',\n            ref.componentInstance.change.subscribe(async (list) => {\n                await this._state\n                    .saveSettings({ disabled_rooms: list })\n                    .catch();\n                ref.componentInstance.loading = false;\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'asset-listing',\n    template: `\n        <asset-manager-topbar [active]=\"active\"></asset-manager-topbar>\n        <div class=\"flex flex-col flex-1 h-1/2 w-full px-8\">\n            <nav\n                mat-tab-nav-bar\n                *ngIf=\"!is_new || active !== 'requests'\"\n                [tabPanel]=\"tabPanel\"\n            >\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'requests']\"\n                    [routerLinkActive]=\"'active'\"\n                    [active]=\"active === 'requests'\"\n                    (click)=\"active = 'requests'\"\n                    *ngIf=\"!is_new\"\n                >\n                    Requests\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'items']\"\n                    [active]=\"active === 'items'\"\n                    (click)=\"active = 'items'\"\n                >\n                    Products\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'purchase-orders']\"\n                    [active]=\"active === 'purchase-orders'\"\n                    (click)=\"active = 'purchase-orders'\"\n                >\n                    Purchase Orders\n                </a>\n            </nav>\n            <mat-tab-nav-panel\n                class=\"flex-1 h-1/2 w-full overflow-visible\"\n                #tabPanel\n            >\n                <router-outlet></router-outlet>\n            </mat-tab-nav-panel>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListingComponent extends AsyncHandler {\n    public active = 'requests';\n    public is_new = false;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _router: Router,\n        private _state: AssetManagerStateService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.is_new = this._router.url.includes('new');\n        this.active = this._router.url.includes('requests')\n            ? 'requests'\n            : this._router.url.includes('items')\n              ? 'items'\n              : 'purchase-orders';\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    this.is_new = this._router.url.includes('new');\n                    this.active = this._router.url.includes('requests')\n                        ? 'requests'\n                        : this._router.url.includes('items')\n                          ? 'items'\n                          : 'purchase-orders';\n                }\n            }),\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-1/2 flex-1 bg-base-100 overflow-hidden\">\n            <router-outlet></router-outlet>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--b1);\n            }\n        `,\n    ],\n})\nexport class AssetManagerComponent {}\n","import { Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'splitjoin',\n})\nexport class SplitJoinPipe {\n    public transform(\n        value: string,\n        split: string = '_',\n        join: string = ' '\n    ): string {\n        return (value || '').split(split).join(join);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { MapPinComponent } from '@placeos/components';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'asset-location-modal',\n    template: `\n        <div class=\"p-6 relative\">\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-4 right-4\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <h2 class=\"font-medium mb-2\">\n                {{ (asset | async)?.name }} in use location:\n                {{ (requests | async)?.length }}\n            </h2>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.5rem] mb-2\">\n                <app-icon matPrefix>search</app-icon>\n                <input matInput placeholder=\"Search...\" />\n            </mat-form-field>\n            <div class=\"flex items-center space-x-4 w-[90vw] text-sm\">\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-base-200 bg-base-200 overflow-auto\"\n                >\n                    <simple-table\n                        class=\"block w-full\"\n                        [data]=\"requests\"\n                        [columns]=\"[\n                            {\n                                key: 'zone',\n                                name: 'Level',\n                                content: level_template\n                            },\n                            { key: 'description', name: 'Space' },\n                            {\n                                key: 'tracking',\n                                name: 'Tracking',\n                                content: tracking_template\n                            },\n                            { key: 'user_name', name: 'Requestee' }\n                        ]\"\n                        [sortable]=\"true\"\n                        empty_message=\"No requested assets for this product\"\n                        (row_clicked)=\"selected = $event; updateFeatures()\"\n                    ></simple-table>\n                </div>\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-base-200 bg-base-200 relative flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-4 left-4 bg-base-100 px-4 py-2 rounded-3xl border border-base-200\"\n                        *ngIf=\"selected\"\n                    >\n                        {{ level(selected.zone)?.display_name || 'N/A' }}\n                    </div>\n                    <interactive-map\n                        *ngIf=\"selected; else empty_state\"\n                        [src]=\"level(selected.zone)?.map_id || ''\"\n                        [styles]=\"{\n                            '#Zones': { display: 'none' },\n                            '#zones': { display: 'none' }\n                        }\"\n                        [features]=\"selected_feature\"\n                    ></interactive-map>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <p class=\"opacity-30\">\n                Select a space from the list to view map location\n            </p>\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            <div class=\"p-4\">\n                {{ level(data)?.display_name || 'N/A' }}\n            </div>\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <button\n                    matRipple\n                    class=\"bg-none w-full flex items-center px-2 py-1 text-left rounded\"\n                    [matMenuTriggerFor]=\"tracking_menu\"\n                    (click)=\"$event.stopPropagation()\"\n                    [disabled]=\"loading[row.id]\"\n                >\n                    <div class=\"capitalize flex-1 min-w-32\">\n                        {{\n                            (row.extension_data?.tracking | splitjoin) ||\n                                'In Storage'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">expand_more</app-icon>\n                </button>\n            </div>\n            <mat-menu #tracking_menu=\"matMenu\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">inventory</app-icon>\n                        <div class=\"pr-2\">In Storage</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">trolley</app-icon>\n                        <div class=\"pr-2\">In Transit</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"pr-2\">At Location</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetLocationModalComponent {\n    public readonly asset = this._state.active_product;\n    public readonly requests = this._state.active_product_requests;\n\n    public readonly _space = new SpacePipe(this._org);\n\n    public selected: Booking;\n    public selected_feature;\n\n    public loading = {};\n\n    public async updateFeatures() {\n        const space = await this._space.transform(\n            this.selected.extension_data?.location_id\n        );\n        this.selected_feature = this.selected\n            ? [\n                  {\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      z_index: 99,\n                      data: {\n                          message: `${\n                              space.display_name || space.name\n                          } is here`,\n                      },\n                  },\n              ]\n            : [];\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    flatten,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first, map } from 'rxjs/operators';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    Asset,\n    AssetPurchaseOrder,\n    deleteAsset,\n    deleteAssetPurchaseOrder,\n    removeAssetRequests,\n} from '@placeos/assets';\nimport { addMinutes } from 'date-fns';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'asset-view',\n    template: `\n        <div\n            class=\"h-full w-full flex flex-col\"\n            *ngIf=\"!loading && (item | async); else loading_state\"\n        >\n            <div\n                class=\"flex items-center space-x-4 p-2 bg-base-100 border-b border-base-200\"\n            >\n                <a\n                    btn\n                    matRipple\n                    class=\"inverse\"\n                    [routerLink]=\"[base_route, 'list', 'items']\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-2\">Back</div>\n                    </div>\n                </a>\n                <div class=\"flex items-center space-x-2 font-medium\">\n                    <span>Assets</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.category?.name }}</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.name }}</span>\n                </div>\n            </div>\n            <div class=\"flex items-center\">\n                <div class=\"bg-base-100 flex-1 w-1/2 h-[22.5rem]\">\n                    <image-carousel\n                        [images]=\"(item | async)?.images || []\"\n                    ></image-carousel>\n                </div>\n                <div class=\"w-[32rem] h-[22.5rem] px-4 flex flex-col\">\n                    <div\n                        class=\"w-full flex items-center justify-between border-b border-base-200\"\n                    >\n                        <div class=\"font-medium\">\n                            {{ (item | async)?.name }}\n                        </div>\n                        <div class=\"flex items-center text-sm \">\n                            <a\n                                btn\n                                matRipple\n                                class=\"clear\"\n                                [routerLink]=\"[base_route, 'manage', 'group']\"\n                                [queryParams]=\"{ id: (item | async)?.id }\"\n                            >\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                    <div class=\"mr-2 underline\">Edit</div>\n                                </div>\n                            </a>\n                            <div class=\"w-px h-4 bg-base-200\"></div>\n                            <button btn matRipple class=\"clear\">\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                    customTooltip\n                                    [content]=\"delete_tooltip\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                    <div class=\"mr-2 underline\">Delete</div>\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"py-4 w-full flex-1 h-1/2 overflow-auto\">\n                        <ng-container\n                            *ngIf=\"\n                                (item | async)?.description;\n                                else no_desc_state\n                            \"\n                        >\n                            {{\n                                (item | async)?.description ||\n                                    '~No Description~'\n                            }}\n                        </ng-container>\n                        <ng-template #no_desc_state>\n                            <span class=\"opacity-30\">No Description</span>\n                        </ng-template>\n                    </div>\n                    <div\n                        class=\"rounded bg-base-100 shadow border border-base-200 w-full divide-y divide-base-200\"\n                    >\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                Available:\n                                {{\n                                    (asset_list | async).length -\n                                        (requests | async)?.length || 0\n                                }}\n                            </div>\n                            <!-- <button\n                                btn\n                                matRipple\n                                [disabled]=\"\n                                    (asset_list | async).length -\n                                        (requests | async)?.length ===\n                                    0\n                                \"\n                            >\n                                Assign to Location\n                            </button> -->\n                        </div>\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                In Use:\n                                {{ (requests | async)?.length || 0 }}\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                (click)=\"viewLocations()\"\n                                [disabled]=\"\n                                    (asset_list | async).length -\n                                        (requests | async)?.length !==\n                                    0\n                                \"\n                            >\n                                View Locations\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <mat-tab-group class=\"flex-1 h-px\">\n                <mat-tab label=\"Assets\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <div class=\"flex w-full items-center space-x-2 mb-2\">\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[base_route, 'manage', 'asset']\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Add Asset\n                            </a>\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[\n                                    base_route,\n                                    'manage',\n                                    'asset-bulk'\n                                ]\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Bulk Add Asset\n                            </a>\n                        </div>\n                        <simple-table\n                            class=\"min-w-[40rem] block text-sm\"\n                            [data]=\"asset_list\"\n                            [columns]=\"[\n                                { key: 'id', name: 'ID' },\n                                {\n                                    key: 'identifier',\n                                    name: 'Label/Friendly Name'\n                                },\n                                { key: 'serial_number', name: 'Serial Number' },\n                                {\n                                    key: 'actions',\n                                    name: ' ',\n                                    content: action_template,\n                                    size: '5.5rem',\n                                    sortable: false\n                                }\n                            ]\"\n                            empty_message=\"No assets for this product\"\n                            [sortable]=\"true\"\n                        ></simple-table>\n\n                        <ng-template #action_template let-row=\"row\">\n                            <div\n                                class=\"flex w-full items-center justify-end p-2\"\n                            >\n                                <a\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'manage',\n                                        'asset'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: (item | async)?.id\n                                    }\"\n                                    matTooltip=\"Edit Asset\"\n                                >\n                                    <app-icon>edit</app-icon>\n                                </a>\n                                <button\n                                    icon\n                                    matRipple\n                                    class=\"text-error\"\n                                    (click)=\"removeAsset(row)\"\n                                    matTooltip=\"Remove Asset\"\n                                >\n                                    <app-icon>delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Specifications\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">General</h3>\n                        <div\n                            data-table\n                            class=\"bg-base-100 border border-base-200\"\n                        >\n                            <div class=\"flex items-center p-2\">\n                                <label>Brand</label>\n                                <div>\n                                    {{ (item | async)?.brand || '~None~' }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Purchase information\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <a\n                            btn\n                            matRipple\n                            class=\"mb-2\"\n                            [routerLink]=\"[\n                                base_route,\n                                'manage',\n                                'purchase-order'\n                            ]\"\n                            [queryParams]=\"{ group_id: (item | async)?.id }\"\n                        >\n                            Add Purchase Order\n                        </a>\n                        <simple-table\n                            class=\"min-w-[40rem] block text-sm\"\n                            asset-purchases\n                            [data]=\"(item | async)?.purchase_orders\"\n                            [columns]=\"[\n                                {\n                                    key: 'purchase_order_number',\n                                    name: 'PO Number'\n                                },\n                                {\n                                    key: 'invoice_number',\n                                    name: 'Invoice Number'\n                                },\n                                {\n                                    key: 'expected_service_start_date',\n                                    name: 'Service Start',\n                                    content: date_template\n                                },\n                                {\n                                    key: 'expected_service_end_date',\n                                    name: 'Service End',\n                                    content: date_template\n                                },\n                                {\n                                    key: 'actions',\n                                    name: ' ',\n                                    content: po_action_template,\n                                    size: '5.5rem',\n                                    sortable: false\n                                }\n                            ]\"\n                            empty_message=\"No purchase orders for this product\"\n                            [sortable]=\"true\"\n                        ></simple-table>\n\n                        <ng-template #po_action_template let-row=\"row\">\n                            <div\n                                class=\"flex w-full items-center justify-end p-2\"\n                            >\n                                <a\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'manage',\n                                        'purchase-order'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: row?.id\n                                    }\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                </a>\n                                <button\n                                    icon\n                                    matRipple\n                                    class=\"text-error\"\n                                    (click)=\"removePurchaseOrder(row)\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading product details...</p>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-data=\"data\">\n            <div class=\"p-4\">\n                {{ data * 1000 | date: 'mediumDate' }}\n                <span *ngIf=\"!data\" class=\"opacity-30\"> No Date </span>\n            </div>\n        </ng-template>\n        <ng-template #delete_tooltip>\n            <div\n                class=\"p-4 bg-base-100 rounded my-2 text-center w-[18rem]\"\n                *ngIf=\"!deleting; else delete_loading\"\n            >\n                <p>Are you sure you want to permanently delete this product?</p>\n                <div class=\"flex items-center space-x-2 mt-6\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"inverse flex-1 w-24\"\n                        (click)=\"closeTooltip()\"\n                    >\n                        No\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"error flex-1 w-24\"\n                        (click)=\"deleteAsset()\"\n                    >\n                        Yes, delete\n                    </button>\n                </div>\n            </div>\n            <ng-template #delete_loading>\n                <div\n                    class=\"p-4 bg-base-100 rounded my-2 w-64 h-36 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <p>Deleting product details...</p>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #empty_invoices>\n            <div class=\"p-2 opacity-30\">No purchase orders</div>\n        </ng-template>\n        <ng-template #empty_items>\n            <div class=\"p-2 opacity-30\">No assets</div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n            }\n\n            [data-table] > div:nth-child(2n) {\n                background: #0001;\n            }\n\n            label {\n                width: 10rem;\n                min-width: 0;\n            }\n        `,\n    ],\n})\nexport class AssetViewComponent extends AsyncHandler {\n    public loading = false;\n    public deleting = false;\n    public readonly item = this._state.active_product;\n    public readonly asset_list = combineLatest([\n        this.item,\n        this._state.extra_assets,\n    ]).pipe(\n        map(([item, assets]) => {\n            if (!item) return [];\n            return unique(\n                [\n                    ...item.assets,\n                    ...assets.filter((_) => _.type_id === item.id),\n                ],\n                'id'\n            );\n        })\n    );\n    public readonly requests = this._state.active_product_requests.pipe(\n        map((req) =>\n            req.filter(\n                (_) =>\n                    _.date <= Date.now() &&\n                    addMinutes(_.date, _.duration).valueOf() >= Date.now()\n            )\n        )\n    );\n\n    @ViewChild(CustomTooltipComponent)\n    public _tooltip_el: CustomTooltipComponent;\n\n    public async deleteAsset() {\n        this.deleting = true;\n        await this._state.deleteActiveProduct();\n        this.deleting = false;\n        this._router.navigate([this._state.base_route, 'list', 'items']);\n        this.closeTooltip();\n    }\n\n    public closeTooltip() {\n        this._tooltip_el?.close();\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _state: AssetManagerStateService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public viewLocations() {\n        this._dialog.open(AssetLocationModalComponent);\n    }\n\n    public ngOnInit() {\n        this.loading = true;\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('id')) {\n                    this._state.setOptions({ active_item: params.get('id') });\n                }\n            })\n        );\n        this.timeout(\n            'no_asset',\n            () => this._router.navigate([this._state.base_route]),\n            1000\n        );\n        this._state.active_product.pipe(first((_) => !!_)).subscribe(() => {\n            this.clearTimeout('no_asset');\n            this.loading = false;\n        });\n    }\n\n    public async removeAsset(asset: Asset) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete asset',\n                content: `Are you sure you want to delete this asset?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting asset...');\n        await deleteAsset(asset.id).toPromise();\n        await removeAssetRequests(asset.id);\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n\n    public async removePurchaseOrder(asset: AssetPurchaseOrder) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete purchase order',\n                content: `Are you sure you want to delete this purchase order?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting purchase order...');\n        await deleteAssetPurchaseOrder(asset.id).toPromise();\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { formatDuration } from 'date-fns';\n\n@Pipe({\n    name: 'duration',\n})\nexport class DurationFormatPipe {\n    public transform(value: number, short = true): string {\n        let duration = formatDuration({\n            days: Math.floor(value / (24 * 60)),\n            hours: Math.floor((value / 60) % 24),\n            minutes: Math.floor(value % 60),\n        });\n        if (!short) return duration;\n        return duration\n            .replace(' day', 'd')\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'asset-request-details',\n    template: `\n        <div\n            class=\"fixed inset-0 z-50\"\n            *ngIf=\"request\"\n            (click)=\"request = null; requestChange.emit(request)\"\n        >\n            <div class=\"absolute inset-0 bg-black opacity-50\"></div>\n            <div\n                class=\"absolute inset-y-0 right-0 bg-base-100 w-[480px]\"\n                (click)=\"$event.stopPropagation()\"\n            >\n                <button\n                    icon\n                    matRipple\n                    (click)=\"request = null; requestChange.emit(request)\"\n                    class=\"absolute top-1 right-1\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"border-b border-base-200 px-2 py-4 flex space-x-4\">\n                    <a-user-avatar\n                        [user]=\"{ name: request.user_name }\"\n                        class=\"text-xl\"\n                    ></a-user-avatar>\n                    <div details class=\"space-y-1\">\n                        <div class=\"font-medium\">{{ request.user_name }}</div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>mail</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'mailto:' + request.user_email\"\n                            >\n                                {{ request.user_email || 'staff@place.tech' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>call</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'tel:' + request.user_phone\"\n                            >\n                                {{ request.user_phone || '04 1234 5678' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>work_outline</app-icon>\n                            <div>{{ request.user_company || 'PlaceOS' }}</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"px-3 py-4 relative\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">send</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Asset Requested</div>\n                    </div>\n                    <div class=\"pl-10 flex flex-col mt-1\">\n                        <div *ngFor=\"let item of items\">\n                            {{ item.name }}\n                            <span\n                                class=\"text-xs bg-success text-success-content px-2 py-1 rounded\"\n                            >\n                                x{{ item.quantity }}\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">event</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Date For</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'EEEE, MMMM d, y' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">schedule</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Period</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: time_format }} &ndash;\n                        {{\n                            request.date + request.duration * 60 * 1000\n                                | date: time_format\n                        }}\n                        ({{ request.duration | duration }})\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">place</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Floor</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ level(request.zones)?.display_name || 'N/A' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">meeting_room</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Room</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.description }}\n                    </div>\n                    <div class=\"absolute top-4 right-4 text-sm\">\n                        <button\n                            matRipple\n                            class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2 mb-4\"\n                            [class.bg-success]=\"request.status === 'approved'\"\n                            [class.bg-error]=\"request.status === 'declined'\"\n                            [class.bg-warning]=\"request.status === 'tentative'\"\n                            [matMenuTriggerFor]=\"menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <app-icon\n                                class=\"text-xl\"\n                                [class.text-green-600]=\"\n                                    request.status === 'approved'\n                                \"\n                                [class.text-red-600]=\"\n                                    request.status === 'declined'\n                                \"\n                                [class.text-yellow-400]=\"\n                                    request.status === 'tentative'\n                                \"\n                            >\n                                {{\n                                    request.status === 'approved'\n                                        ? 'done'\n                                        : request.status === 'declined'\n                                        ? 'close'\n                                        : 'warning'\n                                }}\n                            </app-icon>\n                            <div class=\"capitalize flex-1\">\n                                {{ request.status }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('approved')\"\n                            >\n                                Approve\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('declined')\"\n                            >\n                                Decline\n                            </button>\n                        </mat-menu>\n                        <button\n                            matRipple\n                            class=\"bg-none w-full flex items-center px-2 py-1 text-left border border-base-200 rounded-none\"\n                            [matMenuTriggerFor]=\"tracking_menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <div class=\"capitalize flex-1\">\n                                {{\n                                    (request.extension_data?.tracking\n                                        | splitjoin) || 'In Storage'\n                                }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_storage')\"\n                            >\n                                In Storage\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_transit')\"\n                            >\n                                In Transit\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('at_location')\"\n                            >\n                                At Location\n                            </button>\n                        </mat-menu>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetRequestDetailsComponent {\n    @Input() public request: any;\n    @Output() public requestChange = new EventEmitter<any>();\n\n    public loading = false;\n\n    public get items() {\n        return this.request?.extension_data?.request?.items || [];\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public async setStatus(status: string) {\n        this.loading = true;\n        await this._state.setStatus(this.request, status);\n        (this.request as any).status = status;\n        this.loading = false;\n    }\n\n    public async setTracking(state: string) {\n        this.loading = true;\n        await this._state.setTracking(this.request, state);\n        (this.request as any).extension_data.tracking = state;\n        this.loading = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'app-asset-request-list',\n    template: `\n        <div class=\"relative w-full h-[calc(100%-1rem)] flex flex-col\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"opacity-60 text-sm p-4\">\n                    {{ (requests | async)?.length }} asset request{{\n                        (requests | async)?.length === '1' ? '' : 's'\n                    }}\n                </div>\n                <date-options\n                    [date]=\"(filters | async)?.date\"\n                    (dateChange)=\"setDate($event)\"\n                ></date-options>\n            </div>\n            <div class=\"w-full overflow-auto h-1/2 flex-1 pt-2\">\n                <simple-table\n                    class=\"block min-w-[82rem] text-sm\"\n                    asset-requests\n                    [data]=\"requests\"\n                    [filter]=\"(filters | async)?.search\"\n                    [columns]=\"[\n                        {\n                            key: 'user_name',\n                            name: 'Requester',\n                            content: user_template\n                        },\n                        {\n                            key: 'date',\n                            name: 'Deliver At',\n                            content: date_template,\n                            size: '8rem'\n                        },\n                        {\n                            key: 'assets',\n                            name: 'Asset',\n                            content: assets_template,\n                            sortable: false\n                        },\n                        {\n                            key: 'zones',\n                            name: 'Floor',\n                            content: level_template,\n                            size: '9rem',\n                            sortable: false\n                        },\n                        { key: 'description', name: 'Location' },\n                        {\n                            key: 'status',\n                            name: 'Approval',\n                            content: approval_template,\n                            size: '11rem'\n                        },\n                        {\n                            key: 'tracking',\n                            name: 'Tracking',\n                            content: tracking_template,\n                            size: '12rem',\n                            sortable: false\n                        }\n                    ]\"\n                    [empty_message]=\"\n                        (filters | async)?.search\n                            ? 'No matching asset requests'\n                            : 'There are no asset requests for the currently selected date.'\n                    \"\n                    [sortable]=\"true\"\n                    (row_clicked)=\"request = $event\"\n                ></simple-table>\n                <div class=\"w-full h-20\"></div>\n            </div>\n        </div>\n        <ng-template #user_template let-row=\"row\">\n            <div class=\"flex flex-col px-4 py-2 text-left\">\n                <div>{{ row.user_name }}</div>\n                <div class=\"text-xs opacity-30\">\n                    {{ date(row) | date: 'MMM d, ' + time_format }} &ndash;\n                    {{\n                        date(row) + row.duration * 60 * 1000\n                            | date: 'MMM d, ' + time_format\n                    }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #assets_template let-row=\"row\">\n            <div class=\"flex flex-col p-4\">\n                <div\n                    *ngFor=\"\n                        let asset of row.extension_data?.request?.items || []\n                    \"\n                >\n                    <span class=\"font-mono text-sm\">\n                        {{ asset.quantity || 1 }}×\n                    </span>\n                    {{ asset.name }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            <div class=\"p-4\">\n                {{\n                    row.date +\n                        row.extension_data?.request?.deliver_offset *\n                            60 *\n                            1000 +\n                        row.extension_data?.request?.deliver_day_offset *\n                            24 *\n                            60 *\n                            60 *\n                            1000 | date: 'MMM d, ' + time_format\n                }}\n            </div>\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            <div class=\"p-4\">\n                {{ level(data)?.display_name }}\n                <span class=\"opacity-30\" *ngIf=\"!level(data)\">N/A</span>\n            </div>\n        </ng-template>\n        <ng-template #approval_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2\"\n                    [class.bg-success]=\"row.status === 'approved'\"\n                    [class.bg-error]=\"row.status === 'declined'\"\n                    [class.bg-warning]=\"row.status === 'tentative'\"\n                    [class.text-success-content]=\"row.status === 'approved'\"\n                    [class.text-error-content]=\"row.status === 'declined'\"\n                    [class.text-warning-content]=\"row.status === 'tentative'\"\n                    [matMenuTriggerFor]=\"menu\"\n                    (click)=\"$event.stopPropagation()\"\n                    [disabled]=\"loading[row.id]\"\n                >\n                    <app-icon class=\"text-xl\">\n                        {{\n                            row.status === 'approved'\n                                ? 'done'\n                                : row.status === 'declined'\n                                ? 'close'\n                                : 'warning'\n                        }}\n                    </app-icon>\n                    <div class=\"capitalize flex-1\">{{ row.status }}</div>\n                    <app-icon class=\"text-2xl\">expand_more</app-icon>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"setStatus(row, 'approved')\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_available</app-icon>\n                        <div class=\"pr-2\">Approve Asset Request</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"setStatus(row, 'declined')\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_busy</app-icon>\n                        <div class=\"pr-2\">Decline Asset Request</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <button\n                    matRipple\n                    class=\"bg-none w-full flex items-center px-2 py-1 text-left rounded\"\n                    [matMenuTriggerFor]=\"tracking_menu\"\n                    (click)=\"$event.stopPropagation()\"\n                    [disabled]=\"loading[row.id]\"\n                >\n                    <div class=\"capitalize flex-1 min-w-32\">\n                        {{\n                            (row.extension_data?.tracking | splitjoin) ||\n                                'In Storage'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">expand_more</app-icon>\n                </button>\n            </div>\n            <mat-menu #tracking_menu=\"matMenu\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">inventory</app-icon>\n                        <div class=\"pr-2\">In Storage</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">trolley</app-icon>\n                        <div class=\"pr-2\">In Transit</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"pr-2\">At Location</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n        <asset-request-details [(request)]=\"request\"></asset-request-details>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetRequestListComponent extends AsyncHandler {\n    public readonly requests = this._state.filtered_requests;\n    public readonly filters = this._state.options;\n    public request;\n\n    public readonly loading: Record<string, boolean> = {};\n\n    public date(booking: any) {\n        return booking.all_day\n            ? startOfDay(booking.date).valueOf()\n            : booking.date;\n    }\n\n    public async setStatus(item: any, status: string) {\n        this.loading[item.id] = true;\n        await this._state.setStatus(item, status);\n        this.loading[item.id] = false;\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    public readonly setDate = (date) => this._state.setOptions({ date });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this.subscription('polling', this._state.startPolling());\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'app-asset-item-list',\n    template: `\n        <div\n            class=\"overflow-auto pb-2 w-full h-full\"\n            *ngIf=\"\n                (categories | async)?.length && (products | async)?._count;\n                else empty_state\n            \"\n        >\n            <ng-container *ngFor=\"let group of categories | async\">\n                <div class=\"\" *ngIf=\"(products | async)[group.id]?.length\">\n                    <h2 class=\"py-2\">\n                        <span class=\"font-medium\">{{ group?.name }}</span>\n                        <span class=\"text-xs\">\n                            ({{ (products | async)[group.id]?.length }} item{{\n                                (products | async)[group.id]?.length === 1\n                                    ? ''\n                                    : 's'\n                            }})\n                        </span>\n                    </h2>\n                    <ng-container [ngSwitch]=\"(options | async).view\">\n                        <ng-container *ngSwitchCase=\"'list'\">\n                            <div\n                                class=\"rounded overflow-hidden bg-base-100 border border-base-200 divide-y divide-base-200\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"flex items-center text-left space-x-4 p-4 border border-base-200 hover:border-indigo-400 rounded\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"h-12 w-12 flex items-center justify-center border border-base-200 bg-base-200 overflow-hidden\"\n                                    >\n                                        <img\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            auth\n                                            [source]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.asset_count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.asset_count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <div\n                                class=\"flex items-center overflow-hidden flex-wrap -mx-2 w-full\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"bg-base-100 rounded shadow w-40 h-44 text-left m-2 border border-base-200 hover:border-indigo-400 flex flex-col\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"w-full h-32 flex items-center justify-center bg-base-200 overflow-hidden\"\n                                    >\n                                        <img\n                                            auth\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            [source]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto w-16\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"border-t border-base-200 w-full px-3 py-1 flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.asset_count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.asset_count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <ng-template #empty_state>\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-4 h-full w-full\"\n            >\n                <p class=\"opacity-40\">\n                    {{\n                        (options | async)?.search\n                            ? 'No matching assets found'\n                            : 'No assets available. Create a new asset with the button below'\n                    }}\n                </p>\n                <a\n                    btn\n                    matRipple\n                    *ngIf=\"!(options | async)?.search\"\n                    [routerLink]=\"[base_route, 'manage', 'group']\"\n                >\n                    Create New Product\n                </a>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetItemListComponent {\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n    public readonly categories = this._state.categories;\n    public readonly products = this._state.product_mapping;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetPurchaseOrder,\n    generateAssetPurchaseOrderForm,\n    queryAssetGroups,\n    queryAssets,\n    saveAssetPurchaseOrder,\n    showAssetPurchaseOrder,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, notifyError, notifySuccess } from '@placeos/common';\nimport { addYears, getUnixTime } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, shareReplay, switchMap } from 'rxjs/operators';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-purchase-order-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Purchase Order\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"order-number\">\n                            Order Number<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"order-number\"\n                                placeholder=\"Order Number\"\n                                formControlName=\"order_number\"\n                            />\n                            <mat-error>Order number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"invoice-number\"> Invoice Number </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"invoice-number\"\n                                placeholder=\"Invoice Number\"\n                                formControlName=\"invoice_number\"\n                            />\n                            <mat-error>Invoice number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"purchase-date\"> Purchase Date </label>\n                            <a-date-field\n                                name=\"purchase-date\"\n                                [from]=\"from\"\n                                formControlName=\"purchase_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"unit-price\"> Purchase Price </label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <div matPrefix>$</div>\n                                <input\n                                    matInput\n                                    name=\"unit-price\"\n                                    [from]=\"from\"\n                                    formControlName=\"unit_price\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex flex-col space-y-2 flex-1\">\n                            <label for=\"depreciation-start-date\">\n                                Expected Service Start Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-start-date\"\n                                [from]=\"from\"\n                                formControlName=\"expected_service_start_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex flex-col space-y-2 flex-1\">\n                            <label for=\"depreciation-end-date\">\n                                Expected Service End Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-end-date\"\n                                formControlName=\"expected_service_end_date\"\n                            ></a-date-field>\n                        </div>\n                    </div>\n                    <h3 *ngIf=\"item?.id\" class=\"font-medium mb-2\">\n                        Associated Assets ({{\n                            (asset_list | async)?.length || '0'\n                        }})\n                    </h3>\n                    <simple-table\n                        class=\"w-full block text-sm\"\n                        *ngIf=\"item?.id\"\n                        [data]=\"(asset_list | async) || []\"\n                        [columns]=\"[\n                            { key: 'name', name: 'Name' },\n                            { key: 'identifier', name: 'Label/Friendly Name' },\n                            { key: 'serial_number', name: 'Serial Number' },\n                            {\n                                key: 'actions',\n                                name: ' ',\n                                content: action_template,\n                            },\n                        ]\"\n                        empty_message=\"No assets for this purchase order\"\n                    ></simple-table>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product_id\n                                ? [base_route, 'view', product_id]\n                                : [base_route, 'list', 'purchase-orders']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetPurchaseOrderFormComponent extends AsyncHandler {\n    public readonly form = generateAssetPurchaseOrderForm();\n    public loading: string = '';\n    public product_id: string;\n    public readonly _id = new BehaviorSubject('');\n    public item: AssetPurchaseOrder;\n    public readonly from = addYears(Date.now(), -5);\n    public readonly asset_list = combineLatest([\n        this._id,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!_ && !!bld),\n        switchMap(([id]) => queryAssets({ order_id: id })),\n        switchMap(async (asset_list) => {\n            const groups = await queryAssetGroups({\n                zone_id: this._org.building.id,\n                limit: 500,\n            }).toPromise();\n            return asset_list.map((asset) => ({\n                ...asset,\n                name:\n                    groups.find((_) => _.id === (asset as any).asset_type_id)\n                        ?.name || asset.id,\n            }));\n        }),\n        shareReplay(1),\n    );\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading purchase order details...';\n                    const asset = await showAssetPurchaseOrder(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load purchase order details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue({\n                        ...asset,\n                        order_number: asset.purchase_order_number,\n                        purchase_date: asset.purchase_date * 1000,\n                        expected_service_end_date:\n                            asset.expected_service_end_date * 1000,\n                        expected_service_start_date:\n                            asset.expected_service_start_date * 1000,\n                    });\n                    this.item = asset;\n                    this._id.next(asset.id);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.product_id = params.get('group_id');\n                }\n            }),\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        data.purchase_date = getUnixTime(data.purchase_date) || null;\n        data.expected_service_start_date =\n            getUnixTime(data.expected_service_start_date) ||\n            this.item?.expected_service_start_date ||\n            null;\n        data.expected_service_end_date =\n            getUnixTime(data.expected_service_end_date) ||\n            this.item?.expected_service_end_date ||\n            null;\n        data.unit_price = +data.unit_price;\n        const item = await saveAssetPurchaseOrder(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving purchase order.: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        notifySuccess('Successfully saved purchase order.');\n        this._state.postChange();\n        if (this.product_id) {\n            this._router.navigate([this.base_route, 'view', this.product_id]);\n        } else {\n            this._router.navigate([this.base_route, 'list', 'purchase-orders']);\n        }\n        this.loading = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    generateAssetForm,\n    saveAsset,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport {\n    AsyncHandler,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"serial-number\"> Serial Number </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"serial-number\"\n                                    placeholder=\"Serial Number\"\n                                    formControlName=\"serial_number\"\n                                />\n                                <mat-error>Serial Number is required</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"identifier\">Label/Friendly Name</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"identifier\"\n                                    placeholder=\"Identifier, Asset ID or Barcode\"\n                                    formControlName=\"identifier\"\n                                />\n                                <mat-error>\n                                    Label/Friendly Name is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"serial-number\">Barcode</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"barcode\"\n                                placeholder=\"Barcode\"\n                                formControlName=\"barcode\"\n                            />\n                            <mat-error>Barcode is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? [base_route, 'view', product.id]\n                                : [base_route]\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public loading: string = '';\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAsset({\n            ...data,\n            zone_id: this._org.building.id,\n        } as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this._state.postChange();\n        this._state.setExtraAssets(\n            [item].map((d) => ({ ...d, type_id: this.product.id }))\n        );\n        notifySuccess('Asset saved successfully.');\n        this._router.navigate([this.base_route, 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetGroupForm,\n    saveAssetGroup,\n    showAssetGroup,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-group-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Product\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto p-2\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"name\"\n                                placeholder=\"Name of the product\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Category<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"category_id\"\n                                placeholder=\"Category of Product\"\n                                (click)=\"\n                                    current_category = form.value.category_id\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let category of categories | async\"\n                                    [value]=\"category.id\"\n                                >\n                                    {{ category.name }}\n                                </mat-option>\n                                <mat-option\n                                    (click)=\"newCategory()\"\n                                    class=\"relative\"\n                                >\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon>add</app-icon>\n                                        <p>New Category</p>\n                                    </div>\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>Category is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"brand\">Brand<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"brand\"\n                                placeholder=\"Brand of the product\"\n                                formControlName=\"brand\"\n                            />\n                            <mat-error>Brand is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"description\">Description</label>\n                        <mat-form-field appearance=\"outline\">\n                            <textarea\n                                matInput\n                                name=\"description\"\n                                placeholder=\"Description of the product\"\n                                formControlName=\"description\"\n                            ></textarea>\n                            <mat-error>Description is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"images\">Images</label>\n                        <image-list-field\n                            name=\"images\"\n                            formControlName=\"images\"\n                        ></image-list-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            form.value.id\n                                ? [base_route, 'view', form.value.id]\n                                : [base_route, 'list', 'items']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetGroupFormComponent extends AsyncHandler {\n    public readonly form = generateAssetGroupForm();\n    public readonly new_category = new BehaviorSubject<AssetCategory>(null);\n    public readonly categories = combineLatest([\n        this._state.categories,\n        this.new_category,\n    ]).pipe(\n        map(([list, item]) => (item ? unique([...list, item], 'id') : list))\n    );\n    public loading: string = '';\n    public current_category: string;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError('Unable to load product details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(product);\n                    this.loading = '';\n                }\n            })\n        );\n    }\n\n    public async newCategory() {\n        this.form.patchValue({ category_id: this.current_category });\n        const category = await this._state.editCategory();\n        if (!category) return;\n        this.new_category.next(category);\n        this.form.patchValue({ category_id: category.id });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAssetGroup(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving Product: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = '';\n        this._state.postChange();\n        this._router.navigate([this.base_route, 'view', item.id]);\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-asset-purchase-order-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div class=\"w-full overflow-auto h-1/2 flex-1 p-4\">\n                <simple-table\n                    class=\"min-w-[52rem] block text-sm\"\n                    purchase-orders\n                    [data]=\"purchase_orders\"\n                    [columns]=\"[\n                        {\n                            key: 'purchase_order_number',\n                            name: 'PO Number'\n                        },\n                        {\n                            key: 'invoice_number',\n                            name: 'Invoice Number'\n                        },\n                        {\n                            key: 'purchase_date',\n                            name: 'Purchase Date',\n                            content: date_template\n                        },\n                        {\n                            key: 'expected_service_start_date',\n                            name: 'Service Start',\n                            content: date_template\n                        },\n                        {\n                            key: 'expected_service_end_date',\n                            name: 'Service End',\n                            content: date_template\n                        }\n                    ]\"\n                    [empty_message]=\"\n                        (filters | async)?.search\n                            ? 'No matching purchase orders found.'\n                            : 'There are purchase orders for this building.'\n                    \"\n                    [filter]=\"(filters | async)?.search\"\n                    [sortable]=\"true\"\n                    (row_clicked)=\"editOrder($event)\"\n                ></simple-table>\n            </div>\n        </div>\n        <ng-template #date_template let-data=\"data\">\n            <div class=\"p-4\">\n                <span class=\"opacity-30\" *ngIf=\"!data\">No Date</span>\n                {{ data ? (data * 1000 | date: 'mediumDate') : '' }}\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetPurchaseOrderListComponent {\n    public readonly now = Date.now();\n    public readonly purchase_orders = combineLatest([\n        this._state.options,\n        this._state.purchase_orders,\n    ]).pipe(\n        map(([{ search }, list]) =>\n            list.filter(\n                (_) =>\n                    !search ||\n                    (_ as any).purchase_order_number\n                        .toLowerCase()\n                        .includes(search.toLowerCase()) ||\n                    _.invoice_number\n                        ?.toLowerCase()\n                        .includes(search.toLowerCase())\n            )\n        )\n    );\n    public readonly filters = this._state.options;\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _router: Router\n    ) {}\n\n    public editOrder(order) {\n        this._router.navigate(\n            [this._state.base_route, 'manage', 'purchase-order'],\n            {\n                queryParams: { id: order.id },\n            }\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    addAssetsInBulk,\n    generateAssetForm,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport {\n    AsyncHandler,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-bulk-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        Bulk {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"count\">\n                                Number of Assets to create\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    [(ngModel)]=\"count\"\n                                    name=\"count\"\n                                    type=\"number\"\n                                    placeholder=\"Number of assets to add\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"identifier\">Label/Friendly Name</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"identifier\"\n                                placeholder=\"Identifier, Asset ID or Barcode\"\n                                formControlName=\"identifier\"\n                            />\n                            <mat-error>\n                                Label/Friendly Name is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? [base_route, 'view', product.id]\n                                : [base_route]\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetBulkFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public count = 2;\n    public loading: string = '';\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n        this.count = 2;\n    }\n\n    public async save() {\n        if (!this.count && this.count < 1) {\n            return notifyError('Please enter a valid number of assets to add.');\n        }\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const list = await addAssetsInBulk(\n            new Array(this.count).fill({\n                ...data,\n                zone_id: this._org.building.id,\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this._state.setExtraAssets(\n            list.map((d) => ({ ...d, type_id: this.product.id }))\n        );\n        this.form.reset();\n        this._state.postChange();\n        notifySuccess(`Asset added ${list.length} successfully.`);\n        this._router.navigate([this.base_route, 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { UIModule } from '../ui/ui.module';\n\nimport { AssetListingComponent } from './asset-listing.component';\nimport { AssetManagerTopbarComponent } from './asset-manager-topbar.component';\nimport { AssetManagerComponent } from './asset-manager.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AssetViewComponent } from './asset-view.component';\nimport { AssetRequestListComponent } from './asset-request-list.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { AssetItemListComponent } from './asset-item-list.component';\nimport { SplitJoinPipe } from './split-join.pipe';\nimport { AssetRequestDetailsComponent } from './asset-request-details.component';\nimport { DurationFormatPipe } from './duration.pipe';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetPurchaseOrderFormComponent } from './asset-purchase-order-form.component';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\nimport { AssetFormComponent } from './asset-form.component';\nimport { AssetGroupFormComponent } from './asset-group-form.component';\nimport { AssetPurchaseOrderListComponent } from './asset-purchase-order-list.component';\nimport { AssetBulkFormComponent } from './asset-bulk-form.component';\nimport { NewAssetManagerComponent } from './new-asset-manager.component';\nimport { AssetCategoryManagementModalComponent } from './asset-category-management-modal.component';\n\nconst COMPONENTS = [\n    NewAssetManagerComponent,\n    AssetManagerComponent,\n    AssetManagerTopbarComponent,\n    AssetListingComponent,\n    AssetViewComponent,\n    AssetRequestListComponent,\n    AssetItemListComponent,\n    AssetRequestDetailsComponent,\n    AssetLocationModalComponent,\n    SplitJoinPipe,\n    DurationFormatPipe,\n\n    AssetFormComponent,\n    AssetBulkFormComponent,\n    AssetGroupFormComponent,\n    AssetCategoryFormComponent,\n    AssetPurchaseOrderFormComponent,\n    AssetPurchaseOrderListComponent,\n    AssetCategoryManagementModalComponent,\n];\n\nconst children = [\n    {\n        path: 'list',\n        component: AssetListingComponent,\n        children: [\n            { path: 'items', component: AssetItemListComponent },\n            { path: 'requests', component: AssetRequestListComponent },\n            {\n                path: 'purchase-orders',\n                component: AssetPurchaseOrderListComponent,\n            },\n            { path: '**', redirectTo: 'requests' },\n        ],\n    },\n    { path: 'view/:id', component: AssetViewComponent },\n    {\n        path: 'manage',\n        children: [\n            { path: 'group', component: AssetGroupFormComponent },\n            { path: 'asset', component: AssetFormComponent },\n            { path: 'asset-bulk', component: AssetBulkFormComponent },\n            { path: 'category', component: AssetCategoryFormComponent },\n            {\n                path: 'purchase-order',\n                component: AssetPurchaseOrderFormComponent,\n            },\n        ],\n    },\n    { path: '**', redirectTo: 'list/requests' },\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewAssetManagerComponent,\n        children,\n    },\n    {\n        path: '',\n        component: AssetManagerComponent,\n        children,\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        ComponentsModule,\n        MatButtonToggleModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatStepperModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppAssetManangerModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewAssetManagerComponent {}\n"],"x_google_ignoreList":[0,1]}