{"version":3,"file":"apps_concierge_src_app_asset-manager_asset-manager_module_ts.js","mappings":"oSASA,MAAAA,GAAA,WAAAC,GAAA,MAIMC,EAAoC,IAAIC,MAAe,qCAMvDC,EAA0B,IAAID,MAAe,wBAM7CE,GAAyC,CAC3CC,QAASC,KACTC,aAAaC,SAAW,IAAMC,IAC9BC,OAAO,GAGX,IAAIC,GAAkB,EAEtB,MAAMC,GACFC,YAEAC,EAEAC,GACIC,KAAKF,OAASA,EACdE,KAAKD,MAAQA,CACjB,EAEJ,IACMN,GAAoB,MAA1B,MAAMA,EAEEQ,WACA,OAAOD,KAAKE,KAChB,CACID,SAAKF,GACLC,KAAKE,MAAQH,EACbC,KAAKG,sBACT,CAEIC,eACA,OAAOJ,KAAKK,SAChB,CACID,aAASL,GACTC,KAAKK,aAAYC,MAAsBP,EAC3C,CAEIA,YACA,MAAMQ,EAAWP,KAAKQ,gBAAkBR,KAAKQ,gBAAgBD,SAAW,GACxE,OAAIP,KAAKS,SACEF,EAASG,IAAIC,GAAUA,EAAOZ,OAElCQ,EAAS,GAAKA,EAAS,GAAGR,WAAQa,CAC7C,CACIb,UAAMc,GACNb,KAAKc,qBAAqBD,GAC1Bb,KAAKe,YAAYC,KAAKhB,KAAKD,MAC/B,CAEIQ,eACA,MAAMA,EAAWP,KAAKQ,gBAAkBR,KAAKQ,gBAAgBD,SAAW,GACxE,OAAOP,KAAKS,SAAWF,EAAWA,EAAS,IAAM,IACrD,CAEIE,eACA,OAAOT,KAAKiB,SAChB,CACIR,aAASV,GACTC,KAAKiB,aAAYX,MAAsBP,GACvCC,KAAKG,sBACT,CAEIe,eACA,OAAOlB,KAAKmB,SAChB,CACID,aAASnB,GACTC,KAAKmB,aAAYb,MAAsBP,GACvCC,KAAKG,sBACT,CACAN,YAAYuB,EAAiBC,GACzBrB,KAAKoB,gBAAkBA,EACvBpB,KAAKK,WAAY,EACjBL,KAAKiB,WAAY,EACjBjB,KAAKmB,WAAY,EAKjBnB,KAAKsB,8BAAgC,OAErCtB,KAAKuB,WAAa,OAClBvB,KAAKE,MAAS,2BAA0BP,KAMxCK,KAAKe,YAAc,IAAIS,MAEvBxB,KAAKyB,OAAS,IAAID,MAClBxB,KAAK0B,WACDL,GAAkBA,EAAeK,WAAaL,EAAeK,WAAa,UAClF,CACAC,WACI3B,KAAKQ,gBAAkB,IAAIoB,MAAe5B,KAAKS,cAAUG,GAAW,EACxE,CACAiB,qBACI7B,KAAKQ,gBAAgBsB,UAAU9B,KAAK+B,eAAeC,OAAOrB,GAAUA,EAAOsB,SAC/E,CAKAC,WAAWnC,GACPC,KAAKD,MAAQA,EACbC,KAAKoB,gBAAgBe,cACzB,CAEAC,iBAAiBC,GACbrC,KAAKsB,8BAAgCe,CACzC,CAEAC,kBAAkBD,GACdrC,KAAKuB,WAAac,CACtB,CAEAE,iBAAiBC,GACbxC,KAAKkB,SAAWsB,CACpB,CAEAC,iBAAiB9B,GACb,MAAM+B,EAAQ,IAAI9C,GAAsBe,EAAQX,KAAKD,OACrDC,KAAKsB,8BAA8BoB,EAAM3C,OACzCC,KAAKyB,OAAOT,KAAK0B,EACrB,CAQAC,kBAAkBhC,EAAQmB,EAAQc,GAAc,EAAOC,GAAc,IAG5D7C,KAAKS,UAAYT,KAAKO,WAAaI,EAAOsB,UAC3CjC,KAAKO,SAAS0B,SAAU,GAExBjC,KAAKQ,gBACDsB,EACA9B,KAAKQ,gBAAgBsB,OAAOnB,GAG5BX,KAAKQ,gBAAgBsC,SAASnC,GAIlCkC,GAAc,EAKdA,EACAE,QAAQC,UAAUC,KAAK,IAAMjD,KAAKkD,kBAAkBvC,EAAQiC,IAG5D5C,KAAKkD,kBAAkBvC,EAAQiC,EAEvC,CAEAO,YAAYxC,GACR,OAAOX,KAAKQ,iBAAmBR,KAAKQ,gBAAgB4C,WAAWzC,EACnE,CAEA0C,cAAc1C,GACV,eAAWX,KAAKsD,UAAc,OAG1BtD,KAAKS,UAAY8C,MAAMC,QAAQxD,KAAKsD,WAC7BtD,KAAKsD,UAAUG,KAAK1D,GAAyB,MAAhBY,EAAOZ,OAAiBA,IAAUY,EAAOZ,OAE1EY,EAAOZ,QAAUC,KAAKsD,UACjC,CAEAxC,qBAAqBf,GACjBC,KAAKsD,UAAYvD,EACZC,KAAK+B,iBAGN/B,KAAKS,UAAYV,GACZwD,MAAMC,QAAQzD,GAGnBC,KAAK0D,kBACL3D,EAAM4D,QAASC,GAAiB5D,KAAK6D,aAAaD,MAGlD5D,KAAK0D,kBACL1D,KAAK6D,aAAa9D,IAE1B,CAEA2D,kBACI1D,KAAKQ,gBAAgBsD,QACrB9D,KAAK+B,eAAe4B,QAAQhD,GAAWA,EAAOsB,SAAU,EAC5D,CAEA4B,aAAa9D,GACT,MAAMgE,EAAsB/D,KAAK+B,eAAeiC,KAAKrD,GAC1B,MAAhBA,EAAOZ,OAAiBY,EAAOZ,QAAUA,GAEhDgE,IACAA,EAAoB9B,SAAU,EAC9BjC,KAAKQ,gBAAgBsB,OAAOiC,GAEpC,CAEAb,kBAAkBvC,EAAQiC,GAElBA,GACA5C,KAAKyC,iBAAiB9B,GAI1BX,KAAKe,YAAYC,KAAKhB,KAAKD,MAC/B,CAEAI,uBACIH,KAAK+B,gBAAgB4B,QAAQhD,GAAUA,EAAOsD,gBAClD,EAvMExE,SAwMYyE,UAAI,SAAAC,GAAA,WAAAA,GAAwF1E,GAAV2E,MAAgDA,OAAhDA,MAAiFnF,EAAiC,KAxMhNQ,EAyMY4E,UADkFD,MAAE,CAAAE,KACJ7E,EAAoB8E,UAAA,8BAAAC,eAAA,SAAAC,EAAAC,EAAAC,GAGF,GAHE,EAAAF,GADlBL,MAAEO,EAIDC,GAAe,KAAAH,EAAA,KAAAI,EAJhBT,MAAES,EAAFT,WAAEM,EAAA3C,eAAA8C,GAAA,EAAAC,UAAA,QACsR,QAAO,6BAAAC,SAAA,EAAAC,aAAA,SAAAP,EAAAC,GAAA,EAAAD,IAD/RL,MAAE,gBAAAM,EAAAxD,UAAFkD,MAAE,6BAAAM,EAAAtE,SAAFgE,CAAE,2DAAAM,EAAAhD,YAAA,EAAAuD,OAAA,CAAAvD,WAAA,aAAAzB,KAAA,OAAAG,SAAA,WAAAL,MAAA,QAAAU,SAAA,WAAAS,SAAA,YAAAgE,QAAA,CAAAnE,YAAA,cAAAU,OAAA,UAAA0D,SAAA,yBAAAC,SAAA,CAAFhB,MACihB,CACzmBhF,GACA,CAAEC,QAASF,EAAyBI,YAAaE,QA3MvDA,CAAoB,KA8P1B,MAAM4F,IAAuBC,QAAmB,SAEhD,IACMV,GAAe,MAArB,MAAMA,UAAwBS,GAEtBE,eACA,MAAQ,GAAEvF,KAAKwF,WACnB,CAEI9D,iBACA,OAAO1B,KAAKyF,kBAAoBzF,KAAKyF,kBAAkB/D,WAAa1B,KAAK0F,WAC7E,CACIhE,eAAW3B,GACXC,KAAK0F,YAAc3F,CACvB,CAEIkC,cACA,OAAOjC,KAAKyF,kBAAoBzF,KAAKyF,kBAAkBtC,YAAYnD,MAAQA,KAAK2F,QACpF,CACI1D,YAAQlC,GACR,MAAMc,KAAWP,MAAsBP,GACnCc,IAAab,KAAK2F,WAClB3F,KAAK2F,SAAW9E,EACZb,KAAKyF,mBACLzF,KAAKyF,kBAAkB9C,kBAAkB3C,KAAMA,KAAK2F,UAExD3F,KAAK4F,mBAAmBzD,eAEhC,CAEIjB,eACA,OAAOlB,KAAKmB,WAAcnB,KAAKyF,mBAAqBzF,KAAKyF,kBAAkBvE,QAC/E,CACIA,aAASnB,GACTC,KAAKmB,aAAYb,MAAsBP,EAC3C,CACAF,YAAYgG,EAAaD,EAAoBE,EAAaC,EAAeC,EAAiB3E,GACtF4E,QACAjG,KAAK4F,mBAAqBA,EAC1B5F,KAAK8F,YAAcA,EACnB9F,KAAK+F,cAAgBA,EACrB/F,KAAK2F,UAAW,EAIhB3F,KAAKkG,eAAiB,KACtBlG,KAAKmB,WAAY,EAEjBnB,KAAKyB,OAAS,IAAID,MAClB,MAAM2E,EAAiBC,OAAOJ,GAC9BhG,KAAKqG,SAAWF,GAAqC,IAAnBA,EAAuBA,EAAiB,KAC1EnG,KAAKyF,kBAAoBI,EACzB7F,KAAK0B,WACDL,GAAkBA,EAAeK,WAAaL,EAAeK,WAAa,UAClF,CACAC,WACI,MAAM2E,EAAQtG,KAAKyF,kBACnBzF,KAAKwF,GAAKxF,KAAKwF,IAAO,qBAAoB7F,KACtC2G,IACIA,EAAMjD,cAAcrD,MACpBA,KAAKiC,SAAU,EAEVqE,EAAMnD,YAAYnD,QAAUA,KAAK2F,UAKtCW,EAAM3D,kBAAkB3C,KAAMA,KAAK2F,UAG/C,CACAY,kBACIvG,KAAK+F,cAAcS,QAAQxG,KAAK8F,aAAa,EACjD,CACAW,cACI,MAAMH,EAAQtG,KAAKyF,kBACnBzF,KAAK+F,cAAcW,eAAe1G,KAAK8F,aAGnCQ,GAASA,EAAMnD,YAAYnD,OAC3BsG,EAAM3D,kBAAkB3C,MAAM,GAAO,GAAO,EAEpD,CAEA2G,MAAMC,GACF5G,KAAK6G,eAAeC,cAAcH,MAAMC,EAC5C,CAEAG,iBACI,MAAMC,IAAahH,KAAKiH,sBAA8BjH,KAAK2F,SACvDqB,IAAehH,KAAK2F,WACpB3F,KAAK2F,SAAWqB,EACZhH,KAAKyF,oBACLzF,KAAKyF,kBAAkB9C,kBAAkB3C,KAAMA,KAAK2F,UAAU,GAC9D3F,KAAKyF,kBAAkBlE,eAI/BvB,KAAKyB,OAAOT,KAAK,IAAIpB,GAAsBI,KAAMA,KAAKD,OAC1D,CAMAkE,gBAGIjE,KAAK4F,mBAAmBzD,cAC5B,CAEA+E,iBACI,OAAIlH,KAAKiH,oBACEjH,KAAKyF,kBAAkBxF,KAE3BD,KAAKC,MAAQ,IACxB,CAEAgH,oBACI,OAAOjH,KAAKyF,oBAAsBzF,KAAKyF,kBAAkBhF,QAC7D,EArHEmE,SAsHYV,UAAI,SAAAC,GAAA,WAAAA,GAAwFS,GA/KVR,MA+K2CjF,EAAuB,GA/KlEiF,MA+K+FA,OA/K/FA,MA+KgIA,OA/KhIA,MA+K0J+C,OA/K1J/C,MA+KsL,YA/KtLA,MA+K8NnF,EAAiC,KAtH7V2F,EAuHYwC,UAhLkFhD,MAAE,CAAAE,KAgLJM,EAAeL,UAAA,wBAAA8C,UAAA,SAAA5C,EAAAC,GAhLX,GAgLW,EAAAD,GAhLbL,KAAErF,GAAA,KAAA0F,EAAA,KAAAI,EAAFT,MAAES,EAAFT,WAAEM,EAAAmC,eAAAhC,EAAAyC,OAAA,EAAAxC,UAAA,QAgLsX,eAAc,uBAAAC,SAAA,GAAAC,aAAA,SAAAP,EAAAC,GAAA,EAAAD,GAhLtYL,MAAE,0BAgLJM,EAAAiC,OAAO,KAAAlC,IAhLLL,MAAE,kBAAFA,CAAE,uBAAFA,CAAE,KAAAM,EAAAc,GAAFpB,CAAE,aAAFA,MAAE,gCAAAM,EAAAe,kBAAFrB,CAAE,4BAAAM,EAAAzC,QAAFmC,CAAE,6BAAAM,EAAAxD,SAAFkD,CAAE,qDAAAM,EAAAhD,YAAA,EAAAuD,OAAA,CAAAsC,cAAA,gBAAAC,UAAA,2BAAAtB,eAAA,qCAAAV,GAAA,KAAAvF,KAAA,OAAAF,MAAA,QAAAsG,SAAA,WAAA3E,WAAA,aAAAO,QAAA,UAAAf,SAAA,YAAAgE,QAAA,CAAAzD,OAAA,UAAA0D,SAAA,oBAAAC,SAAA,CAAFhB,OAAEqD,mBAAAzI,GAAA0I,MAAA,EAAAC,KAAA,EAAAC,OAAA,kRAAAC,SAAA,SAAApD,EAAAC,GAgLujD,GAhLvjD,EAAAD,IAAFL,cAAE,gBAAFA,MAAE,0BAgLg4CM,EAAAqC,gBAAgB,GAhLl5C3C,MAAE,YAAFA,MAAE,GAAFA,gBAAE,WAAFA,CAgLyjD,eAAAK,EAAA,OAAAqD,EAhLzjD1D,MAAE,GAAFA,MAAE,KAAAM,EAAAa,SAAFnB,CAgLgmC,WAAAM,EAAAxD,UAAA,MAhLhmCkD,MAAE,WAAAM,EAAAxD,UAAA,EAAAwD,EAAA2B,SAAFjC,CAgLspC,eAAAM,EAAAzC,QAhLtpCmC,CAgLspC,OAAAM,EAAAwC,iBAhLtpC9C,CAgLspC,aAAAM,EAAA8C,UAhLtpCpD,CAgLspC,kBAAAM,EAAAwB,gBAhLtpC9B,MAAE,GAAFA,MAAE,mBAAA0D,EAAF1D,CAgLipD,oBAAAM,EAAA6C,eAAA7C,EAAAxD,SAAA,GAAA6G,aAAA,CAA2oFC,MAAYC,OAAA,ugFAAAC,cAAA,EAAAC,gBAAA,IAvHt4IvD,CAAe,KAgLfwD,GAAqB,MAA3B,MAAMA,YACYlE,UAAI,SAAAC,GAAA,WAAAA,GAAwFiE,EAAqB,EAD7HA,EAEYC,UA3OkFjE,MAAE,CAAAE,KA2OS8D,IAFzGA,EAGYE,UA5OkFlE,MAAE,CAAAmE,QAAA,CA4O0CC,KAAiBC,KAAiBD,QAH5KJ,CAAqB,0CClaiD,IAwdtEM,GAAgB,MAAtB,MAAMA,YACYxE,UAAI,SAAAC,GAAA,WAAAA,GAAwFuE,EAAgB,EADxHA,EAEYL,UAlgBkFjE,MAAE,CAAAE,KAkgBSoE,IAFzGA,EAQYJ,UAxgBkFlE,MAAE,CAAAmE,QAAA,CAwgBqCI,SARrID,CAAgB,uCChL2sI,IAtU3tIE,EAAc,MAApB,MAAMA,EACF/I,cAKIG,KAAK6I,QAAU,IAAIC,MAEnB9I,KAAK+I,cAAgB,WAErB/I,KAAKgJ,eAAiB,YAEtBhJ,KAAKiJ,cAAgB,UACzB,EAbEL,SAcY1E,UAAI,SAAAC,GAAA,WAAAA,GAAwFyE,EAAc,EAdtHA,EAeYM,WA1BkF9E,MAAE,CAAA+E,MA0BYP,EAAcQ,QAAdR,EAAc1E,UAAAmF,WAAc,SAfxIT,CAAc,KA0BpB,MAAMU,GAA4B,CAC9BjK,QAASuJ,EACTW,KAAM,CAAC,CAAC,IAAIC,MAAY,IAAIC,MAAYb,IACxCc,WAPJ,SAASC,GAAkCC,GACvC,OAAOA,GAAc,IAAIhB,CAC7B,GAoIA,IAwPMiB,GAAgB,MAAtB,MAAMA,YACY3F,UAAI,SAAAC,GAAA,WAAAA,GAAwF0F,EAAgB,EADxHA,EAEYxB,UAjakFjE,MAAE,CAAAE,KAiaSuF,IAFzGA,EAuBYvB,UAtbkFlE,MAAE,CAAA0F,UAsbsC,CAACR,GAA2BS,MAAkBxB,QAAA,CAAYC,KAC1LwB,KACAC,MACAvB,GACAwB,MACAzB,KAAiBD,QA5BvBqB,CAAgB,uOCpXTM,EAAyB,MAHtC,MAGaA,UAAiCC,KA2I/BC,WACP,OAAOrK,KAAKsK,KAChB,CAEAzK,YAAoB0K,GAChBtE,QADgBjG,KAAAuK,UA9IZvK,KAAAwK,SAAW,IAAIC,IAA8B,CAAEC,KAAM,SACrD1K,KAAA2K,QAAU,IAAIF,IAAgB,GAC9BzK,KAAA4K,MAAQ,IAAIH,IAAgB,GAC5BzK,KAAAsK,SAAQO,QACR7K,KAAA8K,SAAW,IAAIL,KAAgB,GAEvBzK,KAAA+K,QAAU/K,KAAK8K,SAASE,eAExBhL,KAAA4G,QAAU5G,KAAKwK,SAASQ,eAExBhL,KAAAiL,SAAqCjL,KAAK2K,QAAQO,QAC9DC,KAAU,KACNnL,KAAK8K,SAASM,MAAK,IAAI,EAChBC,WACV,EACDC,MAAKC,GAAMvL,KAAK8K,SAASM,MAAK,KAAM,EACpCI,KAAY,IAGAxL,KAAAyL,gBACZzL,KAAK2K,QAAQO,QACTC,KAAU,KACNnL,KAAK8K,SAASM,MAAK,IAAI,EAChBM,WACV,EACDJ,MAAI,IAAMtL,KAAK8K,SAASM,MAAK,KAAM,EACnCI,KAAY,IAGJxL,KAAA2L,YAAWC,MAAc,CACrC5L,KAAKwK,SACLxK,KAAK4K,MACL5K,KAAK2K,QACL3K,KAAKuK,QAAQsB,cACdX,QACCY,MAAa,MAAG,EAChBX,KAAU,GAAIY,YAAM,EAChBC,MAAc,CACVC,gBAAcC,QAAYC,MAAWJ,GAAQK,KAAKC,QAClDC,cAAYJ,QAAYK,MAASR,GAAQK,KAAKC,QAC9C/H,KAAM,oBACR,EAEN5D,KAAK6K,GACDA,EAAE7K,IACG8L,GACG,IAAIC,KAAQ,IACLD,EACHE,eAAgB,IACTF,EAAEE,eACLC,MAAO3M,KAAKuK,QAAQvG,KAAKwI,EAAEE,eAAeE,gBAGzD,EAELpB,KAAY,IAGAxL,KAAA6M,qBAAoBjB,MAAc,CAC9C5L,KAAK2L,SACL3L,KAAKwK,WACNU,QACCxK,KAAI,EAAEoM,EAAMlG,MACR,MAAMmG,GAAUnG,EAAQmG,QAAU,IAAIC,cACtC,OAAOD,EACDD,EAAK9K,OACAiL,GACGA,EAAEC,UAAUF,cAAcG,SAASJ,IACnCE,EAAEP,eAAeU,cACZJ,cACAG,SAASJ,IACdE,EAAEP,eAAeW,OAAOrJ,KAAMuH,GAC1BA,EAAEtL,KAAK+M,cAAcG,SAASJ,KAElCE,EAAEK,OAAOH,SAASJ,IAClBE,EAAEP,eAAea,SAASJ,SAASJ,IAE3CD,KAGE9M,KAAAwN,cAAa5B,MAAc,CACvC5L,KAAKwK,SACLxK,KAAK2K,UACNO,QACCC,KAAU,OAAMsC,UAAsB,EACtCjC,KAAY,IAGAxL,KAAA0N,kBAAiB9B,MAAc,CAC3C5L,KAAKwK,SACLxK,KAAK2K,UACNO,QACClJ,MAAO,GAAI2L,oBAAqBA,IAAW,EAC3CjN,KAAI,EAAEkG,EAASzC,KAAO,CAACyC,EAAQ+G,YAAaxJ,KAAS,EACrDyJ,SAAoB,EACpBzC,KAAU,EAAEwC,MAAW,EAAME,MAAcF,KAAY,EACvDnC,KAAY,IAGAxL,KAAA8N,wBAA0B9N,KAAK0N,eAAexC,QAC1DC,KAAW4C,GACA/N,KAAK2L,SAAST,QACjBxK,KAAK6K,GACDA,EAAEvJ,OAAQiL,GACNc,EAAKV,OAAOrJ,KAAMgK,GAAUA,EAAMxI,KAAOyH,EAAEgB,eAI1D,EACDvN,KAAK6K,GAAMA,EAAEvJ,OAAQiL,GAAmB,aAAbA,EAAEK,UAGjBtN,KAAAkO,qBAAoBtC,MAAc,CAC9C5L,KAAKiL,SACLjL,KAAKwK,WACNU,QACCxK,KAAI,EAAEoM,EAAMlG,KACRA,EAAQmG,OACFD,EAAK9K,OAAQiL,GACTA,EAAEhN,KACG+M,cACAG,SAASvG,EAAQmG,OAAOC,gBAEjCF,IAIE9M,KAAAmO,gBAAkBnO,KAAKkO,kBAAkBhD,QACrDxK,KAAK6K,IACD,MAAM7K,EAAM,CAAE0N,OAAQ7C,EAAE8C,QAClBb,KAAac,MAAO/C,EAAE7K,IAAKuM,GAAMA,EAAEsB,cACzC,UAAWjI,KAASkH,EAChB9M,EAAI4F,GAASiF,EAAEvJ,OAAQiL,GAAMA,EAAEsB,cAAgBjI,GAEnD,OAAO5F,IAUf,CAEO8N,aAAaC,EAAQ,MACxB,OAAAzO,KAAK0O,SAAS,UAAW,IAAM1O,KAAK4K,MAAMQ,KAAKgB,KAAKC,OAAQoC,GACrD,IAAMzO,KAAK2O,aACtB,CAEOA,cACH3O,KAAK4O,cAAc,UACvB,CAEOC,YACH7O,KAAKsK,SAAQO,OACjB,CAGOiE,WAAWlI,GACd5G,KAAKwK,SAASY,KAAK,IAAKpL,KAAKwK,SAASuE,cAAenI,GACzD,CAEOoI,aACHhP,KAAKiP,QAAQ,SAAU,IAAMjP,KAAK2K,QAAQS,KAAKgB,KAAKC,OAAQ,IAChE,CAEa6C,UAAUnB,EAAeT,GAAW,IAAA6B,EAAAnP,KAAA,SAAAoP,KAAA,YAC7C,IAAIC,EAAStB,EACb,MAAe,aAAXT,EACA+B,QAAM,EAASC,MAAcvB,EAAKvI,IAAI+J,YACpB,aAAXjC,IACP+B,QAAM,EAASG,MAAezB,EAAKvI,IAAI+J,aAE3CJ,EAAKxE,QAAQS,KAAKgB,KAAKC,OAChBgD,CAAO,EAR+B,EASjD,CAEaI,YAAY1B,EAAeR,GAAgB,IAAAmC,EAAA1P,KAAA,SAAAoP,KAAA,YACpD,MAAMC,QAAM,EAASM,MAAc5B,EAAKvI,GAAI,IACrCuI,EACHrB,eAAgB,IAAKqB,EAAKrB,eAAgBa,cAC3CgC,YACHG,SAAK/E,QAAQS,KAAKgB,KAAKC,OAChBgD,CAAO,EANsC,EAOxD,CAEaO,sBAAmB,IAAAC,EAAA7P,KAAA,SAAAoP,KAAA,YAC5B,MAAMrB,QAAa8B,EAAKnC,eAAexC,QAAK4E,MAAK,IAAIP,YAChDxB,GAAMvI,WACX,EAAMuK,MAAiBhC,EAAKvI,IAAI+J,YAChCM,EAAKlF,QAAQS,KAAKgB,KAAKC,QAAK,EAC5B2D,MAAc,8BAA8B,EALhB,EAMhC,CAEaC,WAAQ,IAAAC,EAAAlQ,KAAA,SAAAoP,KAAA,YACjB,IAAKc,EAAK7F,MAAM8F,MAAO,OACvB,MAAMC,EAAYF,EAAK7F,KAAKtK,MACtBsQ,EAAa,IAAKD,GAClBE,EAAY,CACd,aACA,KACA,OACA,WACA,WACA,gBACA,QACA,UAEJ,UAAWC,KAAOD,SACPD,EAAWE,GAEtBH,EAAKC,cAAaG,QAAYH,EAAY,MAACzP,EAAW,KAAM,KAC5D,MAAMoN,QAAK,EAASyC,KAAUL,GAAab,YAC3CW,SAAKvF,QAAQS,KAAKgB,KAAKC,QAAK,EAC5B2D,MAAc,gBAAgBI,EAAK5K,GAAK,UAAY,mBACpD0K,EAAKrB,YACEb,EAAMxI,EAAG,EAtBC,EAuBrB,EA5NS2E,SAAyB,mBAAAhG,iBAAzBgG,GAAwB/F,MAAA+C,OAAA,EAAxBgD,EAAyB,WAAAuG,EAAAC,IAAA,OAAzBxG,EAAwBf,QAAxBe,EAAwBjG,UAAAmF,WAFrB,SAEHc,CAAyB,qIC5C1B/F,MAAA,SAOIA,MAAA,0BACJA,cAHIA,MAAA,aAAAA,MAAA,EAAArF,8CAIJqF,MAAA,+BAEIA,MAAA,yBAAAwM,GAAAxM,MAAAyM,GAAA,MAAAC,EAAA1M,QAAA,OAAiBA,MAAA0M,EAAAhC,WAAA,CAAApE,KAAAkG,IAA4B,oBAG7CxM,MAAA,wBAAAA,CAAgC,WAAhCA,CAAgC,cAIdA,MAAA,iBAAWA,YAG7BA,MAAA,yBAAAA,CAAgC,WAAhCA,CAAgC,cAIdA,MAAA,eAASA,aAAW,+BAftCA,MAAA,iBAAA2M,EAAA3M,MAAA,IAAA4M,EAAApK,UAAA,KAAAmK,EAAArG,KAAA,qEAmCHuG,GAA2B,MA3DxC,MA2DaA,EAOTpR,YAAoBqR,GAAAlR,KAAAkR,SANJlR,KAAAmR,OAAS,GAETnR,KAAA4G,QAAU5G,KAAKkR,OAAOtK,QAEtB5G,KAAA8O,WAAcsC,GAAMpR,KAAKkR,OAAOpC,WAAWsC,EAEJ,EAP9CH,SAA2B,mBAAA9M,iBAA3B8M,GAA2B7M,MAAA+C,GAAA,EAA3B8J,EAA2B,UAAAP,EAAAW,IAAA,MAA3BJ,EAA2B1M,UAAA,2BAAAU,OAAA,CAAAkM,OAAA,UAAAzJ,MAAA,GAAAC,KAAA,EAAAC,OAAA,glBAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IAxDhCL,MAAA,UAAAA,CAEC,SAOOA,MAAA,mBACJA,QACAA,MAAA,EAAAkN,GAAA,WASAlN,MAAA,EAAAmN,GAAA,kCAoBAnN,MAAA,WACAA,MAAA,qBAAAA,CAAyD,gBAEjDA,MAAA,cACJA,QACAA,MAAA,aAGIA,MAAA,yBAAAwM,GAAA,OAAiBlM,EAAAoK,WAAA,CAAA/B,OAAA6D,GAA8B,qBAHnDxM,wBAtCAA,MAAA,GAAAA,MAAA,aAAAA,MAAA,EAAApF,KAQCoF,MAAA,GAAAA,MAAA,2BAAAM,EAAAyM,QAQA/M,MAAA,GAAAA,MAAA,iBAAAM,EAAAyM,QAwBG/M,MAAA,GAAAA,MAAA,iBAAAoN,EAAApN,MAAA,KAAAM,EAAAkC,UAAA,KAAA4K,EAAAzE,OAAA,gFASPkE,CAA2B,iMCV3BQ,GAAqB,MAhDlC,MAgDaA,EAGT5R,YAAoB6R,GAAA1R,KAAA0R,UAFb1R,KAAAmR,OAAS,UAEsB,CAE/BxP,WACH3B,KAAKmR,OAASnR,KAAK0R,QAAQC,IAAIxE,SAAS,YAClC,WACAnN,KAAK0R,QAAQC,IAAIxE,SAAS,SAC1B,QACA,iBACV,EAXSsE,SAAqB,mBAAAtN,iBAArBsN,GAAqBrN,MAAA+C,MAAA,EAArBsK,EAAqB,UAAAf,EAAAW,IAAA,MAArBI,EAAqBlN,UAAA,oBAAAmD,MAAA,GAAAC,KAAA,GAAAC,OAAA,yQAAAC,SAAA,SAAApD,EAAAC,GAAA,EAAAD,IA7C1BL,MAAA,4BACAA,MAAA,UAAAA,CAAoD,UAApDA,CAAoD,SAOxCA,MAAA,0BAAAM,EAAAyM,OAAkB,UAAU,GAE5B/M,MAAA,gBACJA,QACAA,MAAA,SAIIA,MAAA,0BAAAM,EAAAyM,OAAkB,OAAO,GAEzB/M,MAAA,gBACJA,QACAA,MAAA,SAIIA,MAAA,0BAAAM,EAAAyM,OAAkB,iBAAiB,GAEnC/M,MAAA,uBACJA,UAEJA,MAAA,WACIA,MAAA,oBACJA,iBA/BkBA,MAAA,SAAAM,EAAAyM,QAKV/M,MAAA,GAAAA,MAAA,aAAAA,MAAA,EAAArF,IAAAqF,CAAqD,4BAArDA,CAAqD,sBAAAM,EAAAyM,QASrD/M,MAAA,GAAAA,MAAA,aAAAA,MAAA,EAAApF,IAAAoF,CAAkD,mBAAAM,EAAAyM,QAQlD/M,MAAA,GAAAA,MAAA,aAAAA,MAAA,GAAAwN,IAAAxN,CAA4D,6BAAAM,EAAAyM,6NAuBnEM,CAAqB,sDC/BrBI,GAAqB,MAnBlC,MAmBaA,YAAqB,mBAAA1N,iBAArB0N,EAAqB,EAArBA,EAAqB,UAAAnB,EAAAW,IAAA,MAArBQ,EAAqBtN,UAAA,0BAAAuN,MAAA/S,GAAA2I,MAAA,EAAAC,KAAA,EAAAC,OAAA,wFAAAC,SAAA,SAAApD,EAAAC,GAAA,EAAAD,IAhB1BL,MAAA,aACAA,MAAA,YACIA,MAAA,mBACJA,0MAaKyN,CAAqB,+FChBrBE,EAAa,MAH1B,MAGaA,EACFC,UACHjS,EACAkS,EAAgB,IAChBC,EAAe,KAEf,OAAQnS,GAAS,IAAIkS,MAAMA,GAAOC,KAAKA,EAC3C,EAPSH,SAAa,mBAAA5N,iBAAb4N,EAAa,EAAbA,EAAa,WAAArB,EAAAyB,IAAA,uBAAbJ,EAAaK,MAAA,IAAbL,CAAa,+BCsDN3N,MAAA,YAIIA,MAAA,GACJA,oCADIA,MAAA,GAAAA,MAAA,YAAA2M,EAAAsB,EAAAC,MAAAD,EAAA9R,SAAAgS,OAAA,KAAAxB,EAAAyB,eAAA,iIAEJpO,MAAA,yCAEIA,MAAA,cAAA2M,EAAAC,EAAAsB,MAAAtB,EAAAzQ,SAAAgS,OAAA,KAAAxB,EAAA0B,SAAA,GAAArO,CAA0C,SAAAA,MAAA,EAAApF,GAAAoF,MAAA,EAAArF,IAAAqF,MAAA,EAAArF,KAA1CqF,CAA0C,WAAA4M,EAAA0B,iBAAA,yBAWtDtO,MAAA,UACIA,MAAA,yDACJA,kCAGAA,MAAA,uCAAAA,MAAA,YAAA2M,EAAA4B,EAAAL,MAAAM,IAAA,KAAA7B,EAAAyB,eAAA,qDAGApO,MAAA,eAIIA,MAAA,iBAAAwM,GAAA,OAASA,EAAAiC,iBAAwB,GAGjCzO,MAAA,YACIA,MAAA,wBAIJA,QACAA,MAAA,iBAA2BA,MAAA,iBAAWA,UAE1CA,MAAA,mBAAAA,CAAgD,eACtBA,MAAA,yBAAA0O,EAAA1O,MAAA2O,GAAAC,IAAAC,EAAA7O,QAAA,OAASA,MAAA6O,EAAAxD,YAAAqD,EAAiB,cAAa,GACzD1O,MAAA,kBACJA,QACAA,MAAA,gBAAsBA,MAAA,yBAAA0O,EAAA1O,MAAA2O,GAAAC,IAAAE,EAAA9O,QAAA,OAASA,MAAA8O,EAAAzD,YAAAqD,EAAiB,cAAa,GACzD1O,MAAA,mBACJA,QACAA,MAAA,gBAAsBA,MAAA,yBAAA0O,EAAA1O,MAAA2O,GAAAC,IAAAG,EAAA/O,QAAA,OAASA,MAAA+O,EAAA1D,YAAAqD,EAAiB,eAAc,GAC1D1O,MAAA,oBACJA,SAAS,4CArBTA,MAAA,oBAAAgP,EAAAhP,CAAmC,WAAAiP,EAAAtI,QAAA+H,EAAAtN,KAK/BpB,MAAA,GAAAA,MAAA,IAAAA,MAAA,UAAA0O,EAAApG,eAAA,KAAAoG,EAAApG,eAAAa,WAAA,0PAsBP+F,GAA2B,MA1GxC,MA0GaA,EASIC,iBAAc,IAAApE,EAAAnP,KAAA,SAAAoP,KAAA,YACvB,MAAMzC,QAAcwC,EAAKqE,OAAOxB,UAC5B7C,EAAK5O,SAASmM,gBAAgB+G,aAElCtE,EAAKuD,iBAAmBvD,EAAK5O,SACvB,CACI,CACImT,SAAU/G,EAAM8F,OAChBkB,QAASC,KACTC,QAAS,GACTzD,KAAM,CACF0D,QAAS,GACLnH,EAAM6F,cAAgB7F,EAAM1M,kBAK5C,EAAG,EAjBc,EAkB3B,CAEawP,YAAY1B,EAAWgG,GAAa,IAAArE,EAAA1P,KAAA,SAAAoP,KAAA,YAC7CM,EAAK3E,QAAQgD,EAAKvI,KAAM,QAClBkK,EAAKwB,OAAOzB,YAAY1B,EAAMgG,GACpCrE,EAAK3E,QAAQgD,EAAKvI,KAAM,CAAM,EAHe,EAIjD,CAEA3F,YACYqR,EACA8C,EACAR,GAFAxT,KAAAkR,SACAlR,KAAAgU,OACAhU,KAAAwT,SArCIxT,KAAAgO,MAAQhO,KAAKkR,OAAOxD,eACpB1N,KAAA2L,SAAW3L,KAAKkR,OAAOpD,wBAKhC9N,KAAA+K,QAAU,EAgCd,CAEIuH,MAAM2B,GACT,OAAOjU,KAAKgU,KAAKE,YAAYD,EACjC,EA3CSX,SAA2B,mBAAAnP,iBAA3BmP,GAA2BlP,MAAA+C,GAAA/C,MAAA4D,MAAA5D,MAAA+P,MAAA,EAA3Bb,EAA2B,UAAA5C,EAAAW,IAAA,MAA3BiC,EAA2B/O,UAAA,2BAAAmD,MAAA,GAAAC,KAAA,GAAAC,OAAA,+pCAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IAvGhCL,MAAA,UAAAA,CAA0B,aAA1BA,CAA0B,cAORA,MAAA,WAAKA,UAEnBA,MAAA,UACIA,MAAA,qCAEJA,QACAA,MAAA,qBAAAA,CAA6D,gBACrCA,MAAA,aAAMA,QAC1BA,MAAA,cACJA,QACAA,MAAA,WAAAA,CAA0D,WAA1DA,CAA0D,qBAuB9CA,MAAA,uBAAAwM,GAAAlM,SAAAnE,SAAAqQ,EAAkClM,EAAA6O,gBAAgB,GACrDnP,UAELA,MAAA,YAGIA,MAAA,GAAAgQ,GAAA,cAMAhQ,MAAA,GAAAiQ,GAAA,gBASJjQ,YAGRA,MAAA,GAAAkQ,GAAA,0BAAAlQ,OAKAA,MAAA,GAAAmQ,GAAA,0BAAAnQ,OAGAA,MAAA,GAAAoQ,GAAA,2BAAApQ,6DA9DQA,MAAA,GAAAA,MAAA,WAAA2M,EAAA3M,MAAA,KAAAM,EAAAsJ,QAAA,KAAA+C,EAAA9Q,KAAA,4BAAA8Q,EAAA3M,MAAA,KAAAM,EAAAiH,WAAA,KAAAoF,EAAA1C,OAAA,KAYQjK,MAAA,GAAAA,MAAA,aAAAM,EAAAiH,SAAAvH,CAAuB,UAAAA,MAAA,GAAAwN,IAAvBxN,CAAuB,iBAAAA,MAAA,GAAAqQ,IAAvBrQ,CAAuB,cAAAA,MAAA,GAAAsQ,IAAvBtQ,CAAuB,WAAAA,MAAA,GAAAuQ,GAAAC,EAAAC,IA0BtBzQ,MAAA,GAAAA,MAAA,OAAAM,EAAAnE,UAKA6D,MAAA,GAAAA,MAAA,OAAAM,EAAAnE,SAAA6D,CAAgB,WAAA0Q,EAAA,qFAkD5BxB,CAA2B,mEClBhBlP,MAAA,GAMIA,MAAA,oBAIJA,qCAJIA,MAAA,GAAAA,MAAA,YAAA2M,EAAA3M,MAAA,IAAA2Q,EAAAhH,OAAA,KAAAgD,EAAAiE,cAAA,gDAMA5Q,MAAA,aAAyBA,MAAA,oBAAcA,2JAwGvCA,MAAA,WAAAA,CAAkD,2BAgB1CA,MAAA,iBAA0BA,MAAA,UAAIA,UAElCA,MAAA,eAIIA,MAAA,yBAAA6Q,EAAA7Q,MAAA8Q,GAAAlC,IAAAmC,EAAA/Q,MAAA,UAASA,MAAA+Q,EAAAC,YAAAH,GAAgB,GAEzB7Q,MAAA,iBAA0BA,MAAA,YAAMA,WAAW,wCAnB3CA,MAAA,GAAAA,MAAA,aAAAA,MAAA,EAAArF,IAAAqF,CAIE,cAAAA,MAAA,EAAApF,GAAAiW,EAAAzP,GAAA,OAAA6P,EAAAjR,MAAA,IAAA+O,EAAApF,OAAA,KAAAsH,EAAA7P,IAAA,mHAkFVpB,MAAA,WAAAA,CAAkD,SAAlDA,CAAkD,iBAgBhBA,MAAA,UAAIA,UAElCA,MAAA,eAIIA,MAAA,yBAAAkR,EAAAlR,MAAAmR,GAAAvC,IAAAwC,EAAApR,MAAA,UAASA,MAAAoR,EAAAC,oBAAAH,GAAwB,GAEjClR,MAAA,iBAA0BA,MAAA,YAAMA,WAAW,uBAnB3CA,MAAA,GAAAA,MAAA,aAAAA,MAAA,EAAAwN,IAAAxN,CAIE,cAAAA,MAAA,EAAApF,GAAAsW,EAAA9P,GAAA,MAAA8P,EAAA,KAAAA,EAAA9P,IAAA,k4BAvS9BpB,MAAA,UAAAA,CAGC,UAHDA,CAGC,QAHDA,CAGC,UAHDA,CAGC,iBAWyCA,MAAA,gBAAUA,QACpCA,MAAA,YAAkBA,MAAA,UAAIA,YAG9BA,MAAA,WAAAA,CAAqD,UAC3CA,MAAA,aAAMA,QACZA,MAAA,UAAAA,CAAM,kBACyBA,MAAA,oBAAaA,UAE5CA,MAAA,WAAMA,MAAA,sBAAoCA,QAC1CA,MAAA,UAAAA,CAAM,kBACyBA,MAAA,oBAAaA,UAE5CA,MAAA,WAAMA,MAAA,sBAA0BA,YAGxCA,MAAA,WAAAA,CAA+B,aAIvBA,MAAA,0CAGJA,QACAA,MAAA,YAAAA,CAAsD,YAAtDA,CAAsD,aAK1CA,MAAA,sBACJA,QACAA,MAAA,YAAAA,CAAwC,6BAahCA,MAAA,YAAAA,CAEC,kBAC6BA,MAAA,WAAIA,QAC9BA,MAAA,aAA4BA,MAAA,WAAIA,YAGxCA,MAAA,aACAA,MAAA,eAAAA,CAAoC,YAApCA,CAAoC,kBAMFA,MAAA,aAAMA,QAChCA,MAAA,aAA4BA,MAAA,aAAMA,gBAKlDA,MAAA,aACIA,MAAA,GAAAsR,GAAA,yCAWAtR,MAAA,GAAAuR,GAAA,0BAAAvR,OAGJA,QACAA,MAAA,YAAAA,CAEC,YAFDA,CAEC,aAGWA,MAAA,wCAKJA,UAaJA,MAAA,YAAAA,CAAmD,aAE3CA,MAAA,sBAEJA,QACAA,MAAA,gBAGIA,MAAA,mBAAAA,MAAAwR,GAAA,MAAAC,EAAAzR,QAAA,OAASA,MAAAyR,EAAAC,gBAAe,uCAOxB1R,MAAA,uBACJA,gBAMhBA,MAAA,sBAAAA,CAAmC,gBAAnCA,CAAmC,YAAnCA,CAAmC,YAGPA,MAAA,aAAMA,QACtBA,MAAA,YAAAA,CAAqD,6BAY7CA,MAAA,kBACJA,QACAA,MAAA,6BAWIA,MAAA,uBACJA,UAEJA,MAAA,wCAuBAA,MAAA,GAAA2R,GAAA,0BAAA3R,OA6BJA,UAEJA,MAAA,gBAAAA,CAAgC,YAAhCA,CAAgC,YAERA,MAAA,cAAOA,QACvBA,MAAA,YAAAA,CAGC,YAHDA,CAGC,YAEcA,MAAA,YAAKA,QACZA,MAAA,UACIA,MAAA,sBACJA,gBAKhBA,MAAA,gBAAAA,CAAsC,YAAtCA,CAAsC,YAEdA,MAAA,sBAAeA,QAC/BA,MAAA,6BAWIA,MAAA,2BACJA,QAEAA,MAAA,0CA2BAA,MAAA,IAAA4R,GAAA,0BAAA5R,OA6BJA,aAAM,8HA/SNA,MAAA,GAAAA,MAAA,aAAAA,MAAA,GAAAqQ,KAYMrQ,MAAA,IAAAA,MAAA,OAAAiR,EAAAjR,MAAA,MAAAiO,EAAAtE,QAAA,MAAAsH,EAAAY,SAAA,KAAAZ,EAAAY,SAAAhW,MAIAmE,MAAA,GAAAA,MAAA,OAAA8R,EAAA9R,MAAA,MAAAiO,EAAAtE,OAAA,KAAAmI,EAAAjW,MAQFmE,MAAA,GAAAA,MAAA,iBAAAoN,EAAApN,MAAA,MAAAiO,EAAAtE,OAAA,KAAAyD,EAAA2E,SAAA/R,MAAA,GAAAsQ,IAQItQ,MAAA,GAAAA,MAAA,WAAAgS,EAAAhS,MAAA,MAAAiO,EAAAtE,OAAA,KAAAqI,EAAAnW,KAAA,KAQImE,MAAA,GAAAA,MAAA,aAAAA,MAAA,GAAAuQ,IAAAvQ,CAIE,cAAAA,MAAA,GAAAiS,GAAA,OAAAC,EAAAlS,MAAA,MAAAiO,EAAAtE,OAAA,KAAAuI,EAAA9Q,KAeEpB,MAAA,GAAAA,MAAA,UAAAmS,GAUPnS,MAAA,GAAAA,MAAA,cAAAoS,GAAApS,MAAA,MAAAiO,EAAAtE,OAAA,KAAAyI,GAAAxB,YAAA5Q,CAGf,WAAAqS,GAgBkBrS,MAAA,GAAAA,MAAA,uBAAAsS,EAAAtS,MAAA,MAAAiO,EAAAtE,OAAA,KAAA2I,EAAArJ,OAAAgB,SAAA,OAAAqI,EAAAtS,MAAA,MAAAiO,EAAA1G,WAAA,KAAA+K,EAAArI,SAAA,OAoBAjK,MAAA,GAAAA,MAAA,oBAAAuS,GAAAvS,MAAA,MAAAiO,EAAA1G,WAAA,KAAAgL,GAAAtI,SAAA,OAOAjK,MAAA,GAAAA,MAAA,mBAAAwS,EAAAxS,MAAA,MAAAiO,EAAAtE,OAAA,KAAA6I,EAAAvJ,OAAAgB,SAAA,OAAAuI,EAAAxS,MAAA,MAAAiO,EAAA1G,WAAA,KAAAiL,EAAAvI,SAAA,GAsBAjK,MAAA,IAAAA,MAAA,aAAAA,MAAA,GAAArF,IAAAqF,CAIE,cAAAA,MAAA,GAAAyS,EAAA,OAAAC,GAAA1S,MAAA,MAAAiO,EAAAtE,OAAA,KAAA+I,GAAAtR,KASFpB,MAAA,GAAAA,MAAA,aAAAA,MAAA,GAAA2S,IAAA3S,CAIE,cAAAA,MAAA,GAAAyS,EAAA,OAAAG,GAAA5S,MAAA,MAAAiO,EAAAtE,OAAA,KAAAiJ,GAAAxR,KASNpB,MAAA,GAAAA,MAAA,qBAAA6S,GAAA7S,MAAA,MAAAiO,EAAAtE,OAAA,KAAAkJ,GAAA5J,SAAAjJ,MAAA,GAAAsQ,GAAAtQ,CAA2C,UAAAA,MAAA,GAAA8S,IAA3C9S,CAA2C,iBAAAA,MAAA,GAAA+S,IAA3C/S,CAA2C,cAAAA,MAAA,GAAAgT,IAA3ChT,CAA2C,WAAAA,MAAA,GAAAiT,GAAAC,IA6DnClT,MAAA,IAAAA,MAAA,YAAAmT,GAAAnT,MAAA,MAAAiO,EAAAtE,OAAA,KAAAwJ,GAAAC,QAAA,cAaRpT,MAAA,GAAAA,MAAA,aAAAA,MAAA,GAAAwN,IAAAxN,CAIE,cAAAA,MAAA,GAAAyS,EAAA,OAAAY,GAAArT,MAAA,MAAAiO,EAAAtE,OAAA,KAAA0J,GAAAjS,KASFpB,MAAA,GAAAA,MAAA,qBAAAsT,GAAAtT,MAAA,OAAAiO,EAAAtE,OAAA,KAAA2J,GAAAjM,kBAAArH,MAAA,GAAAsQ,GAAAtQ,CAAoD,UAAAA,MAAA,GAAAuT,IAApDvT,CAAoD,iBAAAA,MAAA,GAAAwT,IAApDxT,CAAoD,cAAAA,MAAA,GAAAyT,IAApDzT,CAAoD,WAAAA,MAAA,GAAA0T,GAAAC,EAAAlH,KAAA,yBA0DpEzM,MAAA,YAGIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,gCAA0BA,iBADhBA,MAAA,GAAAA,MAAA,uCAMjBA,MAAA,aAAwCA,MAAA,eAAQA,mCADhDA,MAAA,mBACAA,MAAA,EAAA4T,GAAA,oCADA5T,MAAA,IAAAA,MAAA,QAAA6T,EAAA,mBACO7T,MAAA,GAAAA,MAAA,QAAA6T,EAAA,2CAGP7T,MAAA,WAAAA,CAGC,OACMA,MAAA,+DAAyDA,QAC5DA,MAAA,WAAAA,CAA8C,eAKtCA,MAAA,mBAAAA,MAAA8T,GAAA,MAAAC,EAAA/T,MAAA,UAASA,MAAA+T,EAAAC,eAAc,GAEvBhU,MAAA,UACJA,QACAA,MAAA,eAIIA,MAAA,mBAAAA,MAAA8T,GAAA,MAAAG,EAAAjU,MAAA,UAASA,MAAAiU,EAAAC,cAAa,GAEtBlU,MAAA,mBACJA,WAAS,yBAIbA,MAAA,YAGIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,iCAA2BA,iBADjBA,MAAA,GAAAA,MAAA,0CA5BrBA,MAAA,EAAAmU,GAAA,cAwBAnU,MAAA,EAAAoU,GAAA,0BAAApU,wCAtBKA,MAAA,QAAAqU,EAAAC,SAAAtU,CAAiB,WAAAuU,EAAA,yBAgCtBvU,MAAA,YAA4BA,MAAA,wBAAkBA,gCAG9CA,MAAA,YAA4BA,MAAA,eAASA,aAgBpCwU,GAAmB,MAnYhC,MAmYaA,UAA2BxO,KASvBkO,cAAW,IAAAnJ,EAAAnP,KAAA,SAAAoP,KAAA,YACpBD,EAAKuJ,UAAW,QACVvJ,EAAK+B,OAAOtB,sBAClBT,EAAKuJ,UAAW,EAChBvJ,EAAKuC,QAAQmH,SAAS,CAAC,iBAAkB,OAAQ,UACjD1J,EAAKiJ,cAAe,EALA,EAMxB,CAEOA,eACHpY,KAAK8Y,aAAaC,OACtB,CAEWC,WACP,OAAOhZ,KAAKgU,KAAKiF,aACrB,CAEApZ,YACYqZ,EACAxH,EACAR,EACAiI,EACAnF,GAER/N,QANQjG,KAAAkZ,SACAlZ,KAAA0R,UACA1R,KAAAkR,SACAlR,KAAAmZ,UACAnZ,KAAAgU,OA7BLhU,KAAA+K,SAAU,EACV/K,KAAA0Y,UAAW,EACF1Y,KAAA+N,KAAO/N,KAAKkR,OAAOxD,eACnB1N,KAAA2L,SAAW3L,KAAKkR,OAAOpD,uBA6BvC,CAEOgI,gBACH9V,KAAKmZ,QAAQC,KAAK9F,GACtB,CAEO3R,WACH3B,KAAK+K,SAAU,EACf/K,KAAKqZ,aACD,eACArZ,KAAKkZ,OAAOI,SAASC,UAAWC,IACxBA,EAAOC,IAAI,OACXzZ,KAAKkR,OAAOpC,WAAW,CAAEnB,YAAa6L,EAAOE,IAAI,OAAO,IAIpE1Z,KAAKiP,QACD,WACA,IAAMjP,KAAK0R,QAAQmH,SAAS,CAAC,oBAC7B,KAEJ7Y,KAAKkR,OAAOxD,eAAexC,QAAK5D,KAAOiE,KAAQA,IAAIgO,UAAU,KACzDvZ,KAAK2Z,aAAa,YAClB3Z,KAAK+K,SAAU,GAEvB,CAEaqK,YAAYpH,GAAY,IAAA0B,EAAA1P,KAAA,SAAAoP,KAAA,YACjC,MAAMwK,QAAI,EAASC,MACf,CACIC,MAAO,eACPnG,QAAS,8CACToG,aAAc,SACdC,KAAM,CAAErG,QAAS,WAErBjE,EAAKyJ,SAET,GAAoB,SAAhBS,EAAKK,OAAmB,OAC5BL,EAAK7O,QAAQ,2BACb,EAAMuN,MAAYtK,EAAMxI,IAAI+J,YAC5B,MAAMxB,QAAa2B,EAAKwB,OAAOxD,eAAexC,QAAK5D,QAASiI,YAC5DG,EAAKwB,OAAOpC,WAAW,CAAEnB,YAAa,KACtCuM,WACI,IAAMxK,EAAKwB,OAAOpC,WAAW,CAAEnB,YAAaI,EAAKvI,KACjD,KAEJoU,EAAKb,OAAQ,EAnBoB,EAoBrC,CAEatD,oBAAoBzH,GAAyB,IAAA6B,EAAA7P,KAAA,SAAAoP,KAAA,YACtD,MAAMwK,QAAI,EAASC,MACf,CACIC,MAAO,wBACPnG,QAAS,uDACToG,aAAc,SACdC,KAAM,CAAErG,QAAS,WAErB9D,EAAKsJ,SAET,GAAoB,SAAhBS,EAAKK,OAAmB,OAC5BL,EAAK7O,QAAQ,oCACb,EAAMoP,MAAyBnM,EAAMxI,IAAI+J,YACzC,MAAMxB,QAAa8B,EAAKqB,OAAOxD,eAAexC,QAAK5D,QAASiI,YAC5DM,EAAKqB,OAAOpC,WAAW,CAAEnB,YAAa,KACtCuM,WACI,IAAMrK,EAAKqB,OAAOpC,WAAW,CAAEnB,YAAaI,EAAKvI,KACjD,KAEJoU,EAAKb,OAAQ,EAnByC,EAoB1D,EAtGSH,SAAmB,mBAAAzU,iBAAnByU,GAAkBxU,MAAA+C,MAAA/C,MAAA+C,MAAA/C,MAAA4D,GAAA5D,MAAA+P,MAAA/P,MAAAgW,MAAA,EAAlBxB,EAAmB,UAAAlI,EAAAW,IAAA,MAAnBuH,EAAkBrU,UAAA,iBAAA8C,UAAA,SAAA5C,EAAAC,MAAA,EAAAD,QAMhB4V,KAAsB,8iGAtY7BjW,MAAA,EAAAkW,GAAA,iCA8TAlW,MAAA,EAAAmW,GAAA,yBAAAnW,OAQAA,MAAA,EAAAoW,GAAA,yBAAApW,OAIAA,MAAA,EAAAqW,GAAA,yBAAArW,OAkCAA,MAAA,EAAAsW,GAAA,yBAAAtW,OAGAA,MAAA,GAAAuW,GAAA,yBAAAvW,8BA7WKA,MAAA,QAAAM,EAAAqG,SAAA3G,MAAA,IAAAM,EAAAqJ,MAAA3J,CAAkC,WAAAwW,EAAA,0RA8XlChC,CAAmB,8CC7YnBiC,GAAkB,MAH/B,MAGaA,EACF7I,UAAUjS,EAAe+a,GAAQ,GACpC,IAAIC,KAAWC,MAAe,CAC1BC,KAAMC,KAAKC,MAAMpb,EAAS,MAC1Bqb,MAAOF,KAAKC,MAAOpb,EAAQ,GAAM,IACjCsb,QAASH,KAAKC,MAAMpb,EAAQ,MAEhC,OAAK+a,EACEC,EACFO,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OAJLP,CAKvB,EAZSF,SAAkB,mBAAA1W,iBAAlB0W,EAAkB,EAAlBA,EAAkB,WAAAnK,EAAAyB,IAAA,sBAAlB0I,EAAkBzI,MAAA,IAAlByI,CAAkB,mFCIvBzW,MAAA,WAGIA,MAAA,mBAAAA,MAAAyQ,GAAA,MAAA0G,EAAAnX,QAAAmX,SAAAC,QAAmB,KAAMpX,MAAAmX,EAAAE,cAAAza,KAAAua,EAAAC,SAA2B,GAEpDpX,MAAA,WAEIA,MAAA,iBAAAwM,GAAA,OAASA,EAAAiC,iBAAwB,GAEjCzO,MAAA,cAGIA,MAAA,mBAAAA,MAAAyQ,GAAA,MAAA4D,EAAArU,QAAAqU,SAAA+C,QAAmB,KAAMpX,MAAAqU,EAAAgD,cAAAza,KAAAyX,EAAA+C,SAA2B,GAGpDpX,MAAA,cAAUA,MAAA,WAAKA,UAEnBA,MAAA,WAGIA,MAAA,qBAIAA,MAAA,UAAAA,CAA+B,WACFA,MAAA,GAAuBA,QAChDA,MAAA,WAAAA,CAAiD,eACnCA,MAAA,WAAIA,QACdA,MAAA,UAIIA,MAAA,IACJA,UAEJA,MAAA,WAAAA,CAAiD,eACnCA,MAAA,WAAIA,QACdA,MAAA,UAIIA,MAAA,IACJA,UAEJA,MAAA,WAAAA,CAAiD,eACnCA,MAAA,mBAAYA,QACtBA,MAAA,UAAKA,MAAA,IAAuCA,cAIxDA,MAAA,YAAAA,CAAgC,YAAhCA,CAAgC,YAAhCA,CAAgC,kBAKMA,MAAA,WAAIA,UAElCA,MAAA,YAAyBA,MAAA,sBAAeA,UAE5CA,MAAA,aACIA,MAAA,IACJA,QACAA,MAAA,YAAAA,CAA8C,YAA9CA,CAA8C,kBAIZA,MAAA,YAAKA,UAEnCA,MAAA,YAAyBA,MAAA,eAAQA,UAErCA,MAAA,aACIA,MAAA,qBACJA,QACAA,MAAA,YAAAA,CAA8C,YAA9CA,CAA8C,kBAIZA,MAAA,eAAQA,UAEtCA,MAAA,YAAyBA,MAAA,aAAMA,UAEnCA,MAAA,aACIA,MAAA,2DAMJA,QACAA,MAAA,YAAAA,CAA8C,YAA9CA,CAA8C,kBAIZA,MAAA,YAAKA,UAEnCA,MAAA,YAAyBA,MAAA,YAAKA,UAElCA,MAAA,aACIA,MAAA,IACJA,QACAA,MAAA,YAAAA,CAA8C,YAA9CA,CAA8C,kBAIZA,MAAA,mBAAYA,UAE1CA,MAAA,YAAyBA,MAAA,WAAIA,UAEjCA,MAAA,aACIA,MAAA,IACJA,QACAA,MAAA,YAAAA,CAA4C,eAA5CA,CAA4C,kBAwBhCA,MAAA,IAOJA,QACAA,MAAA,aACIA,MAAA,IACJA,QACAA,MAAA,kBAA2BA,MAAA,kBAAWA,UAE1CA,MAAA,oBAAAA,CAAuC,gBAG/BA,MAAA,mBAAAA,MAAAyQ,GAAA,MAAAxB,EAAAjP,QAAA,OAASA,MAAAiP,EAAAnE,UAAU,YAAW,GAE9B9K,MAAA,gBACJA,QACAA,MAAA,gBAEIA,MAAA,mBAAAA,MAAAyQ,GAAA,MAAA6G,EAAAtX,QAAA,OAASA,MAAAsX,EAAAxM,UAAU,YAAW,GAE9B9K,MAAA,gBACJA,UAEJA,MAAA,eAAAA,CAKC,aAEOA,MAAA,0BAIJA,QACAA,MAAA,kBAA2BA,MAAA,kBAAWA,UAE1CA,MAAA,oBAAAA,CAAgD,gBAGxCA,MAAA,mBAAAA,MAAAyQ,GAAA,MAAA8G,EAAAvX,QAAA,OAASA,MAAAuX,EAAAlM,YAAY,cAAa,GAElCrL,MAAA,mBACJA,QACAA,MAAA,gBAEIA,MAAA,mBAAAA,MAAAyQ,GAAA,MAAA+G,EAAAxX,QAAA,OAASA,MAAAwX,EAAAnM,YAAY,cAAa,GAElCrL,MAAA,mBACJA,QACAA,MAAA,gBAEIA,MAAA,mBAAAA,MAAAyQ,GAAA,MAAAE,EAAA3Q,QAAA,OAASA,MAAA2Q,EAAAtF,YAAY,eAAc,GAEnCrL,MAAA,oBACJA,iBAAS,uDA7KbA,MAAA,GAAAA,MAAA,OAAAA,MAAA,GAAArF,GAAAsT,EAAAmJ,QAAAtO,YAIyB9I,MAAA,GAAAA,MAAAiO,EAAAmJ,QAAAtO,WAKjB9I,MAAA,GAAAA,MAAA,iBAAAiO,EAAAmJ,QAAAK,WAAAzX,OAEAA,MAAA,GAAAA,MAAA,IAAAiO,EAAAmJ,QAAAK,YAAA,wBAOAzX,MAAA,GAAAA,MAAA,cAAAiO,EAAAmJ,QAAAM,WAAA1X,OAEAA,MAAA,GAAAA,MAAA,IAAAiO,EAAAmJ,QAAAM,YAAA,oBAKC1X,MAAA,GAAAA,MAAAiO,EAAAmJ,QAAAO,cAAA,WAcT3X,MAAA,GAAAA,MAAA,IAAAiO,EAAAmJ,QAAA1B,MAAA,KAWA1V,MAAA,GAAAA,MAAA,IAAAA,MAAA,MAAAiO,EAAAmJ,QAAAzP,KAAA,wBAWA3H,MAAA,GAAAA,MAAA,IAAAA,MAAA,MAAAiO,EAAAmJ,QAAAzP,KAAA,wBAAA3H,MAAA,MAAAiO,EAAAmJ,QAAAzP,KAAA,GAAAsG,EAAAmJ,QAAAT,SAAA,sBAAA3W,MAAA,MAAAiO,EAAAmJ,QAAAT,UAAA,MAgBA3W,MAAA,IAAAA,MAAA,YAAAsS,EAAArE,EAAAC,MAAAD,EAAAmJ,QAAAvH,QAAA,KAAAyC,EAAAlE,eAAA,WAWApO,MAAA,GAAAA,MAAA,IAAAiO,EAAAmJ,QAAAxG,YAAA,KAMI5Q,MAAA,GAAAA,MAAA,4BAAAiO,EAAAmJ,QAAAlO,OAAAlJ,CAAoD,0BAAAiO,EAAAmJ,QAAAlO,OAApDlJ,CAAoD,8BAAAiO,EAAAmJ,QAAAlO,QAKpDlJ,MAAA,oBAAAwW,EAAAxW,CAA0B,WAAAiO,EAAAtH,SAKtB3G,MAAA,GAAAA,MAAA,8BAAAiO,EAAAmJ,QAAAlO,OAAAlJ,CAEC,4BAAAiO,EAAAmJ,QAAAlO,OAFDlJ,CAEC,gCAAAiO,EAAAmJ,QAAAlO,QAQDlJ,MAAA,GAAAA,MAAA,iBAAAiO,EAAAmJ,QAAAlO,OAAA,oBAAA+E,EAAAmJ,QAAAlO,OAAA,uBASAlJ,MAAA,GAAAA,MAAA,IAAAiO,EAAAmJ,QAAAlO,OAAA,KAqBJlJ,MAAA,GAAAA,MAAA,oBAAA0Q,EAAA1Q,CAAmC,WAAAiO,EAAAtH,SAI/B3G,MAAA,GAAAA,MAAA,IAAAA,MAAA,YAAAiO,EAAAmJ,QAAA9O,eAAA,KAAA2F,EAAAmJ,QAAA9O,eAAAa,WAAA,uBAkCnByO,GAA4B,MA9MzC,MA8MaA,EAMTnc,YACYqR,EACA8C,GADAhU,KAAAkR,SACAlR,KAAAgU,OANKhU,KAAAyb,cAAgB,IAAIja,MAE9BxB,KAAA+K,SAAU,CAKd,CAEIuH,MAAM2B,GACT,OAAOjU,KAAKgU,KAAKE,YAAYD,EACjC,CAEa/E,UAAU5B,GAAc,IAAA6B,EAAAnP,KAAA,SAAAoP,KAAA,YACjCD,EAAKpE,SAAU,QACToE,EAAK+B,OAAOhC,UAAUC,EAAKqM,QAASlO,GACzC6B,EAAKqM,QAAgBlO,OAASA,EAC/B6B,EAAKpE,SAAU,CAAM,EAJY,EAKrC,CAEa0E,YAAYsE,GAAa,IAAArE,EAAA1P,KAAA,SAAAoP,KAAA,YAClCM,EAAK3E,SAAU,QACT2E,EAAKwB,OAAOzB,YAAYC,EAAK8L,QAASzH,GAC3CrE,EAAK8L,QAAgB9O,eAAea,SAAWwG,EAChDrE,EAAK3E,SAAU,CAAM,EAJa,EAKtC,EA3BSiR,SAA4B,mBAAA7X,iBAA5B6X,GAA4B5X,MAAA+C,GAAA/C,MAAA4D,MAAA,EAA5BgU,EAA4B,UAAAtL,EAAAW,IAAA,MAA5B2K,EAA4BzX,UAAA,4BAAAU,OAAA,CAAAuW,QAAA,WAAAtW,QAAA,CAAAuW,cAAA,iBAAA/T,MAAA,EAAAC,KAAA,EAAAC,OAAA,s0CAAAC,SAAA,SAAApD,EAAAC,GAAA,EAAAD,GA3MjCL,MAAA,EAAA6X,GAAA,oBAEK7X,MAAA,OAAAM,EAAA8W,uEAyMAQ,CAA4B,oEC1I7B5X,MAAA,YACIA,MAAA,sBACAA,MAAA,YAAoBA,MAAA,GAAmBA,8BADxBA,MAAA,GAAAA,MAAA,OAAAA,MAAA,EAAArF,GAAAmd,EAAAhP,YACK9I,MAAA,GAAAA,MAAA8X,EAAAhP,UAAA,4BAKpB9I,MAAA,SACIA,MAAA,GACJA,kCADIA,MAAA,GAAAA,MAAA,IAAA+X,EAAAC,QAAA,UAAAD,EAAAlc,KAAA,8DAFRmE,MAAA,YACIA,MAAA,EAAAiY,GAAA,cAGJjY,4BAH2BA,MAAA,GAAAA,MAAA,iBAAAkY,EAAA5P,eAAA,KAAA4P,EAAA5P,eAAAW,SAAAjJ,MAAA,EAAApF,IAAA,yBAM3BoF,MAAA,yBAAAA,MAAA,IAAAA,MAAA,UAAA2H,KAAA,4CAGA3H,MAAA,uCAAAA,MAAA,YAAA2M,EAAAsC,EAAAf,MAAAiK,IAAA,KAAAxL,EAAAyB,eAAA,sCAGApO,MAAA,uDAAAA,MAAA,IAAAA,MAAA,IAAAoY,EAAAzQ,KAAA,wBAAA3H,MAAA,IAAAoY,EAAAzQ,KAAA,GAAAyQ,EAAAzB,SAAA,gEAIA3W,MAAA,eAOIA,MAAA,iBAAAwM,GAAA,OAASA,EAAAiC,iBAAwB,GAGjCzO,MAAA,iBAMIA,MAAA,GAOJA,QACAA,MAAA,YAA+BA,MAAA,GAAgBA,QAC/CA,MAAA,iBAA2BA,MAAA,iBAAWA,UAE1CA,MAAA,mBAAAA,CAAuC,eACbA,MAAA,yBAAAkR,EAAAlR,MAAAwR,GAAA5C,IAAA6C,EAAAzR,QAAA,OAASA,MAAAyR,EAAA3G,UAAAoG,EAAe,YAAW,GACrDlR,MAAA,gBACJA,QACAA,MAAA,gBAAsBA,MAAA,yBAAAkR,EAAAlR,MAAAwR,GAAA5C,IAAAyJ,EAAArY,QAAA,OAASA,MAAAqY,EAAAvN,UAAAoG,EAAe,YAAW,GACrDlR,MAAA,gBACJA,SAAS,4CA9BTA,MAAA,4BAAAkR,EAAAhI,OAAAlJ,CAAgD,0BAAAkR,EAAAhI,OAAhDlJ,CAAgD,8BAAAkR,EAAAhI,QAGhDlJ,MAAA,oBAAAsY,EAAAtY,CAA0B,WAAA2Q,EAAAhK,QAAAuK,EAAA9P,KAMtBpB,MAAA,GAAAA,MAAA,8BAAAkR,EAAAhI,OAAAlJ,CAAkD,4BAAAkR,EAAAhI,OAAlDlJ,CAAkD,gCAAAkR,EAAAhI,QAIlDlJ,MAAA,GAAAA,MAAA,iBAAAkR,EAAAhI,OAAA,oBAAAgI,EAAAhI,OAAA,uBAQ2BlJ,MAAA,GAAAA,MAAAkR,EAAAhI,OAAA,2CAanClJ,MAAA,eAIIA,MAAA,iBAAAwM,GAAA,OAASA,EAAAiC,iBAAwB,GAGjCzO,MAAA,YACIA,MAAA,wBAIJA,QACAA,MAAA,iBAA2BA,MAAA,iBAAWA,UAE1CA,MAAA,mBAAAA,CAAgD,eACtBA,MAAA,yBAAAuY,EAAAvY,MAAAwY,GAAA5J,IAAA6J,EAAAzY,QAAA,OAASA,MAAAyY,EAAApN,YAAAkN,EAAiB,cAAa,GACzDvY,MAAA,kBACJA,QACAA,MAAA,gBAAsBA,MAAA,yBAAAuY,EAAAvY,MAAAwY,GAAA5J,IAAA8J,EAAA1Y,QAAA,OAASA,MAAA0Y,EAAArN,YAAAkN,EAAiB,cAAa,GACzDvY,MAAA,mBACJA,QACAA,MAAA,gBAAsBA,MAAA,yBAAAuY,EAAAvY,MAAAwY,GAAA5J,IAAAqF,EAAAjU,QAAA,OAASA,MAAAiU,EAAA5I,YAAAkN,EAAiB,eAAc,GAC1DvY,MAAA,oBACJA,SAAS,4CArBTA,MAAA,oBAAA2Y,EAAA3Y,CAAmC,WAAA4Y,EAAAjS,QAAA4R,EAAAnX,KAK/BpB,MAAA,GAAAA,MAAA,IAAAA,MAAA,UAAAuY,EAAAjQ,eAAA,KAAAiQ,EAAAjQ,eAAAa,WAAA,wYA+BP0P,GAA0B,MAzKvC,MAyKaA,UAAkC7S,KAO9B8E,UAAUnB,EAAWT,GAAc,IAAA6B,EAAAnP,KAAA,SAAAoP,KAAA,YAC5CD,EAAKpE,QAAQgD,EAAKvI,KAAM,QAClB2J,EAAK+B,OAAOhC,UAAUnB,EAAMT,GAClC6B,EAAKpE,QAAQgD,EAAKvI,KAAM,CAAM,EAHc,EAIhD,CAEaiK,YAAY1B,EAAWgG,GAAa,IAAArE,EAAA1P,KAAA,SAAAoP,KAAA,YAC7CM,EAAK3E,QAAQgD,EAAKvI,KAAM,QAClBkK,EAAKwB,OAAOzB,YAAY1B,EAAMgG,GACpCrE,EAAK3E,QAAQgD,EAAKvI,KAAM,CAAM,EAHe,EAIjD,CAIA3F,YACYqR,EACA8C,GAER/N,QAHQjG,KAAAkR,SACAlR,KAAAgU,OAtBIhU,KAAA2L,SAAW3L,KAAKkR,OAAOrE,kBACvB7M,KAAAkd,QAAUld,KAAKkR,OAAOtK,QAGtB5G,KAAA+K,QAAmC,GAcnC/K,KAAAmd,QAAWpR,GAAS/L,KAAKkR,OAAOpC,WAAW,CAAE/C,QAO7D,CAEOuG,MAAM2B,GACT,OAAOjU,KAAKgU,KAAKE,YAAYD,EACjC,CAEOtS,WACH3B,KAAKqZ,aAAa,UAAWrZ,KAAKkR,OAAO1C,eAC7C,EAlCSyO,SAA0B,mBAAA9Y,iBAA1B8Y,GAAyB7Y,MAAA+C,GAAA/C,MAAA4D,MAAA,EAAzBiV,EAA0B,UAAAvM,EAAAW,IAAA,MAA1B4L,EAAyB1Y,UAAA,6BAAAa,SAAA,CAAAhB,OAAAsD,MAAA,GAAAC,KAAA,GAAAC,OAAA,0rCAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IAtK9BL,MAAA,UAAAA,CAEC,UAFDA,CAEC,WAKWA,MAAA,qCAGJA,QACAA,MAAA,oBAAcA,MAAA,sBAAAwM,GAAA,OAAclM,EAAAyY,QAAAvM,EAAe,GAAExM,UAEjDA,MAAA,UAAAA,CAA+C,oBAiDvCA,MAAA,uBAAAwM,GAAA,OAAAlM,EAAA8W,QAAA5K,CAAA,oBACHxM,YAGTA,MAAA,GAAAgZ,GAAA,yBAAAhZ,OAMAA,MAAA,GAAAiZ,GAAA,yBAAAjZ,OAOAA,MAAA,GAAAkZ,GAAA,yBAAAlZ,OAGAA,MAAA,GAAAmZ,GAAA,yBAAAnZ,OAGAA,MAAA,GAAAoZ,GAAA,0BAAApZ,OAIAA,MAAA,GAAAqZ,GAAA,4BAAArZ,OAqCAA,MAAA,GAAAsZ,GAAA,2BAAAtZ,OA4BAA,MAAA,+BAAuBA,MAAA,yBAAAwM,GAAA,OAAAlM,EAAA8W,QAAA5K,CAAA,GAAsBxM,gHAnJjCA,MAAA,GAAAA,MAAA,WAAA2M,EAAA3M,MAAA,IAAAM,EAAAiH,WAAA,KAAAoF,EAAA1C,OAAA,+BAAA0C,EAAA3M,MAAA,KAAAM,EAAAiH,WAAA,KAAAoF,EAAA1C,QAAA,YAUAjK,MAAA,GAAAA,MAAA,aAAAM,EAAAiH,SAAAvH,CAAuB,UAAAA,MAAA,GAAAwN,IAAvBxN,CAAuB,iBAAAA,MAAA,GAAAqQ,IAAvBrQ,CAAuB,cAAAA,MAAA,GAAAsQ,IAAvBtQ,CAAuB,WAAAA,MAAA,GAAAuQ,GAAA7M,EAAAgN,EAAAD,EAAA8I,EAAAvK,EAAAqD,EAAA7B,GAAvBxQ,CAAuB,eAAAkS,EAAAlS,MAAA,KAAAM,EAAAwY,WAAA5G,EAAAvJ,OAAA,6FAyIZ3I,MAAA,IAAAA,MAAA,UAAAM,EAAA8W,QAAA,oOAYlByB,CAA0B,8BC/HC7Y,MAAA,2CAKIA,MAAA,MAAAwZ,EAAAzH,OAAA,GAAA/R,MAAA,wBAIAA,MAAA,sCAYJA,MAAA,YAOIA,MAAA,GAMJA,wCANIA,MAAA,GAAAA,MAAA,YAAAwZ,EAAAC,QAAA,MAAAD,EAAAvQ,OAAA,KAAAuQ,EAAAvQ,OAAAgB,SAAA,0FA7CZjK,MAAA,SAAAA,CAaC,YAIOA,MAAA,EAAA0Z,GAAA,cAQA1Z,MAAA,EAAA2Z,GAAA,0BAAA3Z,OAMJA,QACAA,MAAA,WAAAA,CAEC,YAEOA,MAAA,GACJA,QACAA,MAAA,EAAA4Z,GAAA,cAcJ5Z,+CA5CAA,MAAA,aAAAA,MAAA,EAAArF,GAAA6e,EAAApY,KAUSpB,MAAA,GAAAA,MAAA,aAAAwZ,EAAAzH,OAAA,KAAAyH,EAAAzH,OAAA9H,OAAAjK,CAGb,WAAAqS,GAeYrS,MAAA,GAAAA,MAAA,IAAAwZ,EAAA3d,KAAA,KAICmE,MAAA,GAAAA,MAAA,OAAAwZ,EAAAC,QAAA,MAAAD,EAAAvQ,OAAA,KAAAuQ,EAAAvQ,OAAAgB,QAAA,4BA5CrBjK,MAAA,GACIA,MAAA,YAGIA,MAAA,EAAA6Z,GAAA,6BAsDJ7Z,QACJA,oDAlDNA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAiP,EAAApI,UAAAiT,EAAA1Y,IAAA,2BAwEsBpB,MAAA,2CAKIA,MAAA,MAAA+Z,EAAAhI,OAAA,GAAA/R,MAAA,wBAIAA,MAAA,sCAYJA,MAAA,YAOIA,MAAA,GAMJA,wCANIA,MAAA,GAAAA,MAAA,YAAA+Z,EAAAN,QAAA,MAAAM,EAAA9Q,OAAA,KAAA8Q,EAAA9Q,OAAAgB,SAAA,kCA7CZjK,MAAA,SAAAA,CAaC,YAIOA,MAAA,EAAAga,GAAA,cAQAha,MAAA,EAAAia,GAAA,0BAAAja,OAMJA,QACAA,MAAA,WAAAA,CAEC,YAEOA,MAAA,GACJA,QACAA,MAAA,EAAAka,GAAA,cAcJla,+CA5CAA,MAAA,aAAAA,MAAA,EAAArF,GAAAof,EAAA3Y,KAUSpB,MAAA,GAAAA,MAAA,aAAA+Z,EAAAhI,OAAA,KAAAgI,EAAAhI,OAAA9H,OAAAjK,CAGb,WAAAma,GAeYna,MAAA,GAAAA,MAAA,IAAA+Z,EAAAle,KAAA,KAICmE,MAAA,GAAAA,MAAA,OAAA+Z,EAAAN,QAAA,MAAAM,EAAA9Q,OAAA,KAAA8Q,EAAA9Q,OAAAgB,QAAA,4BA5CrBjK,MAAA,GACIA,MAAA,YAGIA,MAAA,EAAAoa,GAAA,6BAsDJpa,QACJA,oDAlDNA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAsX,EAAAzQ,UAAAiT,EAAA1Y,IAAA,4BAjFFpB,MAAA,UAAAA,CAA2D,SAA3DA,CAA2D,YAEzBA,MAAA,GAAiBA,QAC3CA,MAAA,YACIA,MAAA,qCAKJA,UAEJA,MAAA,uBACIA,MAAA,GAAAqa,GAAA,uBA4DAra,MAAA,GAAAsa,GAAA,uBA4DJta,QACJA,mDAnIkCA,MAAA,GAAAA,MAAA,MAAA8Z,EAAA,KAAAA,EAAAje,MAEtBmE,MAAA,GAAAA,MAAA,WAAAA,MAAA,IAAAqU,EAAAxN,UAAAiT,EAAA1Y,IAAA,KAAApB,MAAA,IAAAqU,EAAAxN,UAAAiT,EAAA1Y,IAAA6I,OAAA,mBAAAjK,MAAA,IAAAqU,EAAAxN,UAAAiT,EAAA1Y,IAAA,KAAApB,MAAA,IAAAqU,EAAAxN,UAAAiT,EAAA1Y,IAAA6I,QAAA,aAOMjK,MAAA,GAAAA,MAAA,WAAAA,MAAA,IAAAqU,EAAA7R,SAAA8D,MACKtG,MAAA,GAAAA,MAAA,kDAb3BA,MAAA,GACIA,MAAA,EAAAua,GAAA,gCAsIJva,6CAtImBA,MAAA,GAAAA,MAAA,aAAAA,MAAA,IAAAwa,EAAA3T,UAAAiT,EAAA1Y,IAAA,KAAApB,MAAA,IAAAwa,EAAA3T,UAAAiT,EAAA1Y,IAAA6I,OAAA,4BARvBjK,MAAA,WAOIA,MAAA,EAAAya,GAAA,uCAwIJza,8BAxIoCA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAiO,EAAA7E,YAAA,wBAyIpCpJ,MAAA,+GAeQA,MAAA,UAOIA,MAAA,0BACJA,cAHIA,MAAA,aAAAA,MAAA,EAAApF,+BAfRoF,MAAA,WAAAA,CAEC,UAEOA,MAAA,oBAKJA,QACAA,MAAA,EAAA0a,GAAA,6BASJ1a,sCAfQA,MAAA,GAAAA,MAAA,WAAA2M,EAAA3M,MAAA,IAAAmX,EAAA3U,WAAAmK,EAAAhE,OAAA,gGAUC3I,MAAA,GAAAA,MAAA,gBAAAiR,EAAAjR,MAAA,IAAAmX,EAAA3U,WAAAyO,EAAAtI,QAAA,MAkBRgS,GAAsB,MAxLnC,MAwLaA,EAMTlf,YAAoBqR,GAAAlR,KAAAkR,SALJlR,KAAA+K,QAAU/K,KAAKkR,OAAOnG,QACtB/K,KAAA4G,QAAU5G,KAAKkR,OAAOtK,QACtB5G,KAAAwN,WAAaxN,KAAKkR,OAAO1D,WACzBxN,KAAAiL,SAAWjL,KAAKkR,OAAO/C,eAEgB,EAN9C4Q,SAAsB,mBAAA5a,iBAAtB4a,GAAsB3a,MAAA+C,GAAA,EAAtB4X,EAAsB,UAAArO,EAAAW,IAAA,MAAtB0N,EAAsBxa,UAAA,0BAAAmD,MAAA,EAAAC,KAAA,EAAAC,OAAA,+qEAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IArL3BL,MAAA,EAAA4a,GAAA,+CAgJA5a,MAAA,EAAA6a,GAAA,2CAIA7a,MAAA,EAAA8a,GAAA,yBAAA9a,oCAlJKA,MAAA,eAAA2M,EAAA3M,MAAA,IAAAM,EAAA8I,aAAA,KAAAuD,EAAA1C,UAAA,OAAA0C,EAAA3M,MAAA,IAAAM,EAAAuG,WAAA,KAAA8F,EAAA3C,QAAAhK,CAGb,WAAA0Q,GA4Ia1Q,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAAM,EAAAqG,SAAA,qNAoCAgU,CAAsB,iMC3KvB3a,MAAA,UAAAA,CAGC,aAHDA,CAGC,UAGWA,MAAA,GACJA,UAEJA,MAAA,WAAAA,CAA4D,UAA5DA,CAA4D,aAGhDA,MAAA,mBAAYA,MAAA,UAAMA,MAAA,OAACA,UAEvBA,MAAA,uBACIA,MAAA,eAMAA,MAAA,gBAAWA,MAAA,+BAAwBA,YAG3CA,MAAA,WAAAA,CAAqC,eACJA,MAAA,uBAAeA,QAC5CA,MAAA,uBACIA,MAAA,eAMAA,MAAA,gBAAWA,MAAA,iCAA0BA,YAG7CA,MAAA,YAAAA,CAA4B,YAA5BA,CAA4B,eAEQA,MAAA,sBAAcA,QAC1CA,MAAA,sBAKJA,QACAA,MAAA,YAAAA,CAA4C,eACfA,MAAA,uBAAeA,QACxCA,MAAA,uBAAAA,CAAoD,aACjCA,MAAA,QAACA,QAChBA,MAAA,eAMJA,YAGRA,MAAA,YAAAA,CAA4B,WAA5BA,CAA4B,eAGhBA,MAAA,oCACJA,QACAA,MAAA,sBAKJA,QACAA,MAAA,WAAAA,CAAqC,eAE7BA,MAAA,kCACJA,QACAA,MAAA,sBAIJA,YAGRA,MAAA,eAAAA,CAEC,WAWOA,MAAA,eACJA,QACAA,MAAA,gBAAmCA,MAAA,mBAAAA,MAAAyQ,GAAA,MAAA0G,EAAAnX,QAAA,OAASA,MAAAmX,EAAA4D,OAAM,GAC9C/a,MAAA,aACJA,WAAS,yBA3FLA,MAAA,GAAAA,MAAA,IAAAiO,EAAAhI,KAAAtK,MAAAyF,GAAA,iCAGiCpB,MAAA,GAAAA,MAAA,YAAAiO,EAAAhI,MAgCzBjG,MAAA,IAAAA,MAAA,OAAAiO,EAAA+M,MAWIhb,MAAA,GAAAA,MAAA,OAAAiO,EAAA+M,MAaJhb,MAAA,GAAAA,MAAA,OAAAiO,EAAA+M,MAsBRhb,MAAA,GAAAA,MAAA,aAAAiO,EAAAgN,WAAAjb,MAAA,EAAArF,GAAAsT,EAAAgN,YAAAjb,MAAA,EAAApF,IAAA,4BAeZoF,MAAA,YAGIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,GAAaA,gCADHA,MAAA,GAAAA,MAAA,eACVA,MAAA,GAAAA,MAAA0M,EAAA/F,QAAA,MAMNuU,GAAgC,MApH7C,MAoHaA,UAAwClV,KAOjDvK,YACYqR,EACAgI,EACAxH,GAERzL,QAJQjG,KAAAkR,SACAlR,KAAAkZ,SACAlZ,KAAA0R,UATI1R,KAAAqK,QAAOkV,QAChBvf,KAAA+K,QAAkB,GAGT/K,KAAAof,QAAOI,MAASpT,KAAKC,OAAO,EAQ5C,CAEO1K,WAAQ,IAAAwN,EAAAnP,KACXA,KAAKqZ,aACD,cACArZ,KAAKkZ,OAAOuG,cAAclG,UAAS,eAAAmG,KAAAtQ,KAAC,UAAOoK,GACvC,GAAIA,EAAOE,IAAI,MAAO,CAClBvK,EAAKpE,QAAU,oCACf,MAAMiD,QAAK,EAAS2R,MAAuBnG,EAAOE,IAAI,OACjDnK,YACAqQ,MAAM,IAAM,MACZ5R,OACD6R,MAAY,0CACZ1Q,EAAKuC,QAAQmH,SAAS,CAAC,oBAE3B1J,EAAK9E,KAAKyV,WAAW,IACd9R,EACH+R,aAAc/R,EAAMgS,sBACpBC,cAAqC,IAAtBjS,EAAMiS,cACrBC,0BACsC,IAAlClS,EAAMkS,0BACVC,4BACwC,IAApCnS,EAAMmS,8BAEdhR,EAAKpB,KAAOC,EACZmB,EAAKpE,QAAU,GAEfyO,EAAOE,IAAI,cACXvK,EAAKkQ,WAAa7F,EAAOE,IAAI,YAErC,GAAC,gBAAA0G,GAAA,OAAAV,EAAAW,MAAArgB,KAAAsgB,UAAA,EAzBkC,KA2BvCtgB,KAAKkR,OAAOpC,WAAW,CAAEnB,YAAa,MAC1C,CAEawR,OAAI,IAAAzP,EAAA1P,KAAA,SAAAoP,KAAA,YACb,IAAKM,EAAKrF,KAAK8F,MAAO,OACtBT,EAAK3E,QAAU,oBACf,MAAMqF,EAAOV,EAAKrF,KAAKtK,MACvBqQ,EAAK6P,iBAAgB/T,KAAYkE,EAAK6P,gBAAkB,KACxD7P,EAAK+P,+BACDjU,KAAYkE,EAAK+P,8BACjBzQ,EAAK3B,MAAMoS,6BACX,KACJ/P,EAAK8P,6BACDhU,KAAYkE,EAAK8P,4BACjBxQ,EAAK3B,MAAMmS,2BACX,WACM,EAASK,MAAuBnQ,GACrCb,YACAqQ,MAAOY,IACJ9Q,QAAK3E,QAAU,MACf8U,MAAY,iCAAiCW,EAAE1M,WACzC0M,IAEd9Q,EAAKrF,KAAKoW,SAAK,EACfzQ,MAAc,sCACdN,EAAKwB,OAAOlC,aAERU,EAAKgC,QAAQmH,SADbnJ,EAAK2P,WACiB,CAAC,iBAAkB,OAAQ3P,EAAK2P,YAEhC,CAClB,iBACA,OACA,oBAGR3P,EAAK3E,QAAU,EAAG,EAhCL,EAiCjB,EAjFSuU,SAAgC,mBAAAnb,iBAAhCmb,GAA+Blb,MAAA+C,GAAA/C,MAAA4D,MAAA5D,MAAA4D,MAAA,EAA/BsX,EAAgC,UAAA5O,EAAAW,IAAA,MAAhCiO,EAA+B/a,UAAA,gCAAAa,SAAA,CAAAhB,OAAAsD,MAAA,EAAAC,KAAA,EAAAC,OAAA,o5CAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IAjHpCL,MAAA,WACIA,MAAA,EAAAsc,GAAA,cAoGJtc,QACAA,MAAA,EAAAuc,GAAA,yBAAAvc,8BAnGSA,MAAA,GAAAA,MAAA,QAAAM,EAAAqG,QAAA3G,CAAgB,WAAAwW,EAAA,yFA8GpB0E,CAAgC,0CC9GjClb,MAAA,aAAAA,CAA6D,cAC/CA,MAAA,WAAKA,qCA4BPA,MAAA,mBAIIA,MAAA,GACJA,kCAHIA,MAAA,QAAAwc,EAAApb,IAEApB,MAAA,GAAAA,MAAA,IAAAwc,EAAA3gB,KAAA,gCA7BpBmE,MAAA,WAAAA,CAIC,UAJDA,CAIC,aAEyBA,MAAA,UAAIA,MAAA,UAAMA,MAAA,OAACA,UAC7BA,MAAA,uBACIA,MAAA,cAMAA,MAAA,eAAWA,MAAA,sBAAgBA,YAGnCA,MAAA,WAAAA,CAAqC,cACfA,MAAA,sBAAeA,QACjCA,MAAA,uBAAAA,CAAqC,sCAM7BA,MAAA,GAAAyc,GAAA,uCAMJzc,0CA7BRA,MAAA,YAAA4M,EAAA3G,MAqBYjG,MAAA,IAAAA,MAAA,oBAAAiR,EAAAjR,MAAA,KAAA4M,EAAAxD,cAAA6H,EAAAhH,SAGyBjK,MAAA,GAAAA,MAAA,UAAAA,MAAA,KAAA4M,EAAAxD,YAAA,2CASzCpJ,MAAA,cAAAA,CAGC,UAC0DA,MAAA,YAAMA,QAC7DA,MAAA,eAAmCA,MAAA,mBAAAA,MAAAuZ,GAAA,MAAAtK,EAAAjP,QAAA,OAASA,MAAAiP,EAAA8L,OAAM,GAAE/a,MAAA,UAAIA,SAAS,yBAGjEA,MAAA,YACIA,MAAA,oBACAA,MAAA,UAAgBA,MAAA,wBAAkBA,iBADrBA,MAAA,GAAAA,MAAA,oBAOhB0c,EAA0B,MA9DvC,MA8DaA,EASTjhB,YAC6BkhB,EACjB7P,EACA8P,GADAhhB,KAAAkR,SACAlR,KAAAghB,cAXLhhB,KAAA+K,SAAU,EACD/K,KAAAqK,QAAO4W,QACPjhB,KAAAwN,WAAaxN,KAAKkR,OAAO1D,WAAWtC,QAChDxK,KAAKoM,GACDA,EAAK9K,OAAQuJ,GAAMA,EAAE2V,qBAAuBlhB,KAAKqK,KAAKtK,MAAMyF,MAS5Dub,GAAO9K,UAAUjW,KAAKqK,KAAKyV,WAAWiB,EAAM9K,SACpD,CAEakJ,OAAI,IAAAhQ,EAAAnP,KAAA,SAAAoP,KAAA,YACb,IAAKD,EAAK9E,KAAK8F,MAAO,OACtBhB,EAAKpE,SAAU,EACfoE,EAAK6R,YAAYG,cAAe,EAChC,MAAM/Q,EAAOjB,EAAK9E,KAAKtK,MACjBgO,QAAI,EAASqT,MAAkBhR,GAChCb,YACAqQ,MAAOY,IACJrR,QAAKpE,SAAU,EACfoE,EAAK6R,YAAYG,cAAe,KAChCtB,MAAY,0BAA0BW,EAAE1M,WAClC0M,IAEdrR,EAAK9E,KAAKoW,QACVtR,EAAKpE,SAAU,EACfoE,EAAK6R,YAAYjI,MAAMhL,EAAM,EAfhB,EAgBjB,EAjCS+S,SAA0B,mBAAA3c,iBAA1B2c,GAA0B1c,MAUvBid,MAAejd,MAAA+C,GAAA/C,MAAA4D,MAAA,EAVlB8Y,EAA0B,UAAApQ,EAAAW,IAAA,MAA1ByP,EAA0Bvc,UAAA,0BAAAmD,MAAA,EAAAC,KAAA,EAAAC,OAAA,ygCAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IA3D/BL,MAAA,aAAAA,CAAsC,UAE9BA,MAAA,GACJA,QACAA,MAAA,EAAAkd,GAAA,gBAGJld,QACAA,MAAA,EAAAmd,GAAA,eAmCAnd,MAAA,EAAAod,GAAA,gBAOApd,MAAA,EAAAqd,GAAA,yBAAArd,8BAhDQA,MAAA,GAAAA,MAAA,IAAAM,EAAA2F,KAAAtK,MAAAyF,GAAA,2BAEyCpB,MAAA,GAAAA,MAAA,QAAAM,EAAAqG,SAO5C3G,MAAA,GAAAA,MAAA,QAAAM,EAAAqG,QAAA3G,CAAgB,WAAAyM,GAkChBzM,MAAA,GAAAA,MAAA,QAAAM,EAAAqG,QAAA,uGAcA+V,CAA0B,+BCCP1c,MAAA,mBAMIA,MAAA,GAIJA,kCANIA,MAAA,QAAAsd,EAAAlc,IAEApB,MAAA,GAAAA,MAAA,IAAAsd,EAAA1B,uBAAA0B,EAAAC,eAAA,6BAKJvd,MAAA,mBAKIA,MAAA,0BACJA,cAHIA,MAAA,6LAxExBA,MAAA,UAAAA,CAGC,aAHDA,CAGC,UAGWA,MAAA,GACJA,UAEJA,MAAA,WAAAA,CAA4D,UAA5DA,CAA4D,aAElCA,MAAA,aAAOA,QACzBA,MAAA,sBACIA,MAAA,cAMJA,UAEJA,MAAA,YAAAA,CAAyC,WAAzCA,CAAyC,eAELA,MAAA,sBAAcA,QAC1CA,MAAA,uBACIA,MAAA,eAMAA,MAAA,gBAAWA,MAAA,gCAAyBA,YAG5CA,MAAA,WAAAA,CAA4C,eAChBA,MAAA,0BAAmBA,QAC3CA,MAAA,uBACIA,MAAA,eAMAA,MAAA,gBACIA,MAAA,wCACJA,cAIZA,MAAA,WAAAA,CAA4C,eAEpCA,MAAA,0BACJA,QACAA,MAAA,sBAAAA,CAAqC,oBAK7BA,MAAA,GAAAwd,GAAA,uCAWAxd,MAAA,GAAAyd,GAAA,uCAOJzd,QACAA,MAAA,gBACIA,MAAA,sCACJA,cAIZA,MAAA,eAAAA,CAEC,WAWOA,MAAA,eACJA,QACAA,MAAA,gBAAmCA,MAAA,mBAAAA,MAAA0d,GAAA,MAAArJ,EAAArU,QAAA,OAASA,MAAAqU,EAAA0G,OAAM,GAC9C/a,MAAA,aACJA,WAAS,+BA9FLA,MAAA,GAAAA,MAAA,IAAAiO,EAAAhI,KAAAtK,MAAAyF,GAAA,wBAGiCpB,MAAA,GAAAA,MAAA,YAAAiO,EAAAhI,MAMzBjG,MAAA,GAAAA,MAAA,iBAAAiO,EAAA0P,QAAA,KAAA1P,EAAA0P,QAAA9hB,OAAA,aAAAmE,CAAyC,iBAAAA,MAAA,GAAArF,IAAzCqF,CAAyC,eA8C3DA,MAAA,IAAAA,MAAA,UAAAA,MAAA,KAAAiO,EAAA5G,kBASuBrH,MAAA,GAAAA,MAAA,gBAAAkS,EAAAlS,MAAA,MAAAiO,EAAA5G,mBAAA6K,EAAAjI,SAoBbjK,MAAA,GAAAA,MAAA,aAAAiO,EAAA0P,QAAA3d,MAAA,GAAApF,GAAAqT,EAAA0P,QAAAvc,IAAApB,MAAA,GAAAwN,IAAA,4BAeZxN,MAAA,YAGIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,GAAaA,gCADHA,MAAA,GAAAA,MAAA,eACVA,MAAA,GAAAA,MAAA0M,EAAA/F,QAAA,MAMNiX,GAAmB,MAvHhC,MAuHaA,UAA2B5X,KAMpCvK,YACYqR,EACAgI,EACAxH,GAERzL,QAJQjG,KAAAkR,SACAlR,KAAAkZ,SACAlZ,KAAA0R,UARI1R,KAAAqK,QAAOQ,QACP7K,KAAAyL,gBAAkBzL,KAAKkR,OAAOzF,gBAEvCzL,KAAA+K,QAAkB,EAQzB,CAEOpJ,WAAQ,IAAAwN,EAAAnP,KACXA,KAAKqZ,aACD,cACArZ,KAAKkZ,OAAOuG,cAAclG,UAAS,eAAAmG,KAAAtQ,KAAC,UAAOoK,GACvC,GAAIA,EAAOE,IAAI,MAAO,CAClBvK,EAAKpE,QAAU,2BACf,MAAMiD,QAAK,EAASiU,MAAUzI,EAAOE,IAAI,OACpCnK,YACAqQ,MAAM,IAAM,MACZ5R,OACD6R,MAAY,iCACZ1Q,EAAKuC,QAAQmH,SAAS,CAAC,oBAE3B1J,EAAK9E,KAAKyV,WAAW9R,GACrBmB,EAAKpE,QAAU,GAEnB,GAAIyO,EAAOE,IAAI,YAAa,CACxBvK,EAAKpE,QAAU,6BACf,MAAMgX,QAAO,EAASG,KAAe1I,EAAOE,IAAI,aAC3CnK,YACAqQ,MAAM,IAAM,MACZmC,OACDlC,MACI,8CAEJ1Q,EAAKuC,QAAQmH,SAAS,CAAC,oBAE3B1J,EAAK4S,QAAUA,EACf5S,EAAK9E,KAAKyV,WAAW,CAAEqC,QAASJ,EAAQvc,KACxC2J,EAAKpE,QAAU,GAEvB,GAAC,gBAAAqV,GAAA,OAAAV,EAAAW,MAAArgB,KAAAsgB,UAAA,EA5BkC,KA8BvCtgB,KAAKkR,OAAOpC,WAAW,CAAEnB,YAAa,MAC1C,CAEawR,OAAI,IAAAzP,EAAA1P,KAAA,SAAAoP,KAAA,YACb,IAAKM,EAAKrF,KAAK8F,MACX,SAAO0P,MACH,gCAA6BuC,MAAiB1S,EAAKrF,UAG3DqF,EAAK3E,QAAU,oBACf,MAAMqF,EAAOV,EAAKrF,KAAKtK,YACb,EAAS0Q,KAAUL,GACxBb,YACAqQ,MAAOY,IACJ9Q,QAAK3E,QAAU,MACf8U,MAAY,uBAAuBW,EAAE1M,WAC/B0M,IAEd9Q,EAAKrF,KAAKoW,QACV/Q,EAAKwB,OAAOlC,aACZU,EAAKgC,QAAQmH,SAAS,CAAC,iBAAkB,OAAQnJ,EAAKqS,SAASvc,KAC/DkK,EAAK3E,QAAU,EAAG,EAlBL,EAmBjB,EArESiX,SAAmB,mBAAA7d,iBAAnB6d,GAAkB5d,MAAA+C,GAAA/C,MAAA4D,MAAA5D,MAAA4D,MAAA,EAAlBga,EAAmB,UAAAtR,EAAAW,IAAA,MAAnB2Q,EAAkBzd,UAAA,iBAAAa,SAAA,CAAAhB,OAAAsD,MAAA,EAAAC,KAAA,EAAAC,OAAA,mtCAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IApHvBL,MAAA,WACIA,MAAA,EAAAie,GAAA,eAuGJje,QACAA,MAAA,EAAAke,GAAA,yBAAAle,8BAtGSA,MAAA,GAAAA,MAAA,QAAAM,EAAAqG,QAAA3G,CAAgB,WAAAwW,EAAA,wGAiHpBoH,CAAmB,8CChFA5d,MAAA,mBAIIA,MAAA,GACJA,kCAHIA,MAAA,QAAAme,EAAA/c,IAEApB,MAAA,GAAAA,MAAA,IAAAme,EAAAtiB,KAAA,8JApCxBmE,MAAA,UAAAA,CAGC,aAHDA,CAGC,UAGWA,MAAA,GACJA,UAEJA,MAAA,WAAAA,CAAgE,UAAhEA,CAAgE,aAEtCA,MAAA,UAAIA,MAAA,UAAMA,MAAA,OAACA,UAC7BA,MAAA,uBACIA,MAAA,eAMAA,MAAA,gBAAWA,MAAA,uBAAgBA,YAGnCA,MAAA,WAAAA,CAAqC,cACfA,MAAA,eAAQA,MAAA,WAAMA,MAAA,QAACA,UACjCA,MAAA,sBAAAA,CAAqC,oBAI7BA,MAAA,mBAAAA,MAAAwQ,GAAA,MAAAjC,EAAAvO,QAAA,OAAAA,MAAAuO,EAAA6P,iBAAA7P,EAAAtI,KAAAtK,MAAAwO,YAAA,GAIAnK,MAAA,GAAAqe,GAAA,uCAMAre,MAAA,oBACIA,MAAA,mBAAAA,MAAAwQ,GAAA,MAAAvB,EAAAjP,QAAA,OAASA,MAAAiP,EAAAqP,cAAa,GAGtBte,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,UAAGA,QACbA,MAAA,QAAGA,MAAA,mBAAYA,cAI3BA,MAAA,gBAAWA,MAAA,2BAAoBA,YAGvCA,MAAA,WAAAA,CAAqC,eACdA,MAAA,YAAKA,MAAA,WAAMA,MAAA,QAACA,UAC/BA,MAAA,uBACIA,MAAA,eAMAA,MAAA,gBAAWA,MAAA,wBAAiBA,YAGpCA,MAAA,WAAAA,CAAqC,eACRA,MAAA,kBAAWA,QACpCA,MAAA,uBACIA,MAAA,kBAMAA,MAAA,gBAAWA,MAAA,8BAAuBA,YAG1CA,MAAA,WAAAA,CAAqC,eACbA,MAAA,aAAMA,QAC1BA,MAAA,0BAIJA,UAEJA,MAAA,eAAAA,CAEC,WAWOA,MAAA,eACJA,QACAA,MAAA,gBAAmCA,MAAA,mBAAAA,MAAAwQ,GAAA,MAAA8G,EAAAtX,QAAA,OAASA,MAAAsX,EAAAyD,OAAM,GAC9C/a,MAAA,aACJA,WAAS,yBA9FLA,MAAA,GAAAA,MAAA,IAAAiO,EAAAhI,KAAAtK,MAAAyF,GAAA,0BAGqCpB,MAAA,GAAAA,MAAA,YAAAiO,EAAAhI,MAwBJjG,MAAA,IAAAA,MAAA,UAAAA,MAAA,KAAAiO,EAAA7E,aAyDjCpJ,MAAA,IAAAA,MAAA,aAAAiO,EAAAhI,KAAAtK,MAAAyF,GAAApB,MAAA,EAAArF,GAAAsT,EAAAhI,KAAAtK,MAAAyF,IAAApB,MAAA,EAAApF,IAAA,4BAeZoF,MAAA,YAGIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,GAAaA,gCADHA,MAAA,GAAAA,MAAA,eACVA,MAAA,GAAAA,MAAA0M,EAAA/F,QAAA,MAMN4X,GAAwB,MAvHrC,MAuHaA,UAAgCvY,KAYzCvK,YACYqR,EACAgI,EACAxH,EACAyH,GAERlT,QALQjG,KAAAkR,SACAlR,KAAAkZ,SACAlZ,KAAA0R,UACA1R,KAAAmZ,UAfInZ,KAAAqK,QAAOuY,QACP5iB,KAAA6iB,aAAe,IAAIpY,IAA+B,MAClDzK,KAAAwN,cAAa5B,MAAc,CACvC5L,KAAKkR,OAAO1D,WACZxN,KAAK6iB,eACN3X,QACCxK,KAAI,EAAEoM,EAAMiB,KAAWA,KAAOO,MAAO,IAAIxB,EAAMiB,GAAO,MAAQjB,IAE3D9M,KAAA+K,QAAkB,EAUzB,CAEOpJ,WAAQ,IAAAwN,EAAAnP,KACXA,KAAKqZ,aACD,cACArZ,KAAKkZ,OAAOuG,cAAclG,UAAS,eAAAmG,KAAAtQ,KAAC,UAAOoK,GACvC,GAAIA,EAAOE,IAAI,MAAO,CAClBvK,EAAKpE,QAAU,6BACf,MAAMgX,QAAO,EAASG,KAAe1I,EAAOE,IAAI,OAC3CnK,YACAqQ,MAAM,IAAM,MACZmC,OACDlC,MAAY,mCACZ1Q,EAAKuC,QAAQmH,SAAS,CAAC,oBAE3B1J,EAAK9E,KAAKyV,WAAWiC,GACrB5S,EAAKpE,QAAU,GAEvB,GAAC,gBAAAqV,GAAA,OAAAV,EAAAW,MAAArgB,KAAAsgB,UAAA,EAbkC,IAe3C,CAEOoC,cACH1iB,KAAKqK,KAAKyV,WAAW,CAAEvR,YAAavO,KAAKwiB,mBAC7BxiB,KAAKmZ,QAAQC,KAAK0H,GAC1BgC,cAAcvJ,UAAWtD,IACrBA,IACAjW,KAAKkR,OAAOlC,aACZhP,KAAK6iB,aAAazX,KAAK6K,GACvBjW,KAAKqK,KAAKyV,WAAW,CAAEvR,YAAa0H,EAASzQ,KAAI,EAG7D,CAEa2Z,OAAI,IAAAzP,EAAA1P,KAAA,SAAAoP,KAAA,YACb,IAAKM,EAAKrF,KAAK8F,MAAO,OACtBT,EAAK3E,QAAU,oBACf,MAAMqF,EAAOV,EAAKrF,KAAKtK,MACjBgO,QAAI,EAASgV,MAAe3S,GAC7Bb,YACAqQ,MAAOY,IACJ9Q,QAAK3E,QAAU,MACf8U,MAAY,yBAAyBW,EAAE1M,WACjC0M,IAEd9Q,EAAKrF,KAAKoW,QACV/Q,EAAK3E,QAAU,GACf2E,EAAKwB,OAAOlC,aACZU,EAAKgC,QAAQmH,SAAS,CAAC,iBAAkB,OAAQ9K,EAAKvI,IAAK,EAd9C,EAejB,EApESmd,SAAwB,mBAAAxe,iBAAxBwe,GAAuBve,MAAA+C,GAAA/C,MAAA4D,MAAA5D,MAAA4D,MAAA5D,MAAA+P,MAAA,EAAvBwO,EAAwB,UAAAjS,EAAAW,IAAA,MAAxBsR,EAAuBpe,UAAA,uBAAAa,SAAA,CAAAhB,OAAAsD,MAAA,EAAAC,KAAA,EAAAC,OAAA,ktCAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IApH5BL,MAAA,WACIA,MAAA,EAAA4e,GAAA,cAuGJ5e,QACAA,MAAA,EAAA6e,GAAA,yBAAA7e,8BAtGSA,MAAA,GAAAA,MAAA,QAAAM,EAAAqG,QAAA3G,CAAgB,WAAAwW,EAAA,4GAiHpB+H,CAAwB,4BCvFzBve,MAAA,YAAuCA,MAAA,iBAAWA,mCAAlDA,MAAA,EAAA8e,GAAA,cACA9e,MAAA,wCAD0BA,MAAA,QAAA+e,GAC1B/e,MAAA,GAAAA,MAAA,IAAA+e,EAAA/e,MAAA,QAAA+e,EAAA,4cC8BoB/e,MAAA,mBAMIA,MAAA,GAIJA,kCANIA,MAAA,QAAAsd,EAAAlc,IAEApB,MAAA,GAAAA,MAAA,IAAAsd,EAAA1B,uBAAA0B,EAAAC,eAAA,6BAKJvd,MAAA,mBAKIA,MAAA,0BACJA,cAHIA,MAAA,6LA3ExBA,MAAA,UAAAA,CAGC,aAHDA,CAGC,UAGWA,MAAA,GACJA,UAEJA,MAAA,WAAAA,CAA4D,UAA5DA,CAA4D,aAElCA,MAAA,aAAOA,QACzBA,MAAA,sBACIA,MAAA,cAMJA,UAEJA,MAAA,YAAAA,CAAyC,WAAzCA,CAAyC,eAG7BA,MAAA,mCACJA,QACAA,MAAA,sBAAAA,CAAqC,eAG7BA,MAAA,yBAAAwM,GAAAxM,MAAA0d,GAAA,MAAArJ,EAAArU,QAAA,OAAAA,MAAAqU,EAAAoF,MAAAjN,EAAA,GAFJxM,cAWZA,MAAA,WAAAA,CAA4C,eAChBA,MAAA,0BAAmBA,QAC3CA,MAAA,uBACIA,MAAA,eAMAA,MAAA,gBACIA,MAAA,wCACJA,YAGRA,MAAA,WAAAA,CAA4C,eAEpCA,MAAA,0BACJA,QACAA,MAAA,sBAAAA,CAAqC,oBAK7BA,MAAA,GAAAgf,GAAA,uCAWAhf,MAAA,GAAAif,GAAA,uCAOJjf,QACAA,MAAA,gBACIA,MAAA,sCACJA,cAIZA,MAAA,eAAAA,CAEC,WAWOA,MAAA,eACJA,QACAA,MAAA,gBAAmCA,MAAA,mBAAAA,MAAA0d,GAAA,MAAApG,EAAAtX,QAAA,OAASA,MAAAsX,EAAAyD,OAAM,GAC9C/a,MAAA,aACJA,WAAS,+BAjGLA,MAAA,GAAAA,MAAA,SAAAiO,EAAAhI,KAAAtK,MAAAyF,GAAA,wBAGiCpB,MAAA,GAAAA,MAAA,YAAAiO,EAAAhI,MAMzBjG,MAAA,GAAAA,MAAA,iBAAAiO,EAAA0P,QAAA,KAAA1P,EAAA0P,QAAA9hB,OAAA,aAAAmE,CAAyC,iBAAAA,MAAA,GAAArF,IAAzCqF,CAAyC,eAcrCA,MAAA,GAAAA,MAAA,UAAAiO,EAAAwL,MAAAzZ,CAAmB,iBAAAA,MAAA,GAAArF,KAmCzCqF,MAAA,IAAAA,MAAA,UAAAA,MAAA,MAAAiO,EAAA5G,kBASuBrH,MAAA,GAAAA,MAAA,gBAAAoS,EAAApS,MAAA,MAAAiO,EAAA5G,mBAAA+K,EAAAnI,SAoBbjK,MAAA,GAAAA,MAAA,aAAAiO,EAAA0P,QAAA3d,MAAA,GAAApF,GAAAqT,EAAA0P,QAAAvc,IAAApB,MAAA,GAAAwN,IAAA,4BAeZxN,MAAA,YAGIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,GAAaA,gCADHA,MAAA,GAAAA,MAAA,eACVA,MAAA,GAAAA,MAAA0M,EAAA/F,QAAA,ECtGnB,MAoBMuY,GAAkB,CACpB,CACIC,KAAM,GACNC,UAAW3R,GACX4R,SAAU,CACN,CACIF,KAAM,OACNC,UAAW/R,GACXgS,SAAU,CACN,CAAEF,KAAM,QAASC,UAAWzE,IAC5B,CAAEwE,KAAM,WAAYC,UAAWvG,IAC/B,CACIsG,KAAM,kBACNC,UFCoB,MAvD5C,MAuDaE,EAqBT7jB,YACYqR,EACAQ,GADA1R,KAAAkR,SACAlR,KAAA0R,UAtBI1R,KAAAqM,IAAMD,KAAKC,MACXrM,KAAAyL,mBAAkBG,MAAc,CAC5C5L,KAAKkR,OAAOtK,QACZ5G,KAAKkR,OAAOzF,kBACbP,QACCxK,KAAI,GAAIqM,UAAUD,KACdA,EAAK9K,OACAuJ,IACIwB,GACAxB,EAAUyU,sBACNhT,cACAG,SAASJ,EAAOC,gBACrBzB,EAAEoW,gBACI3U,cACDG,SAASJ,EAAOC,kBAIrBhN,KAAAkd,QAAUld,KAAKkR,OAAOtK,OAKnC,CAEI+c,UAAUC,GACb5jB,KAAK0R,QAAQmH,SAAS,CAAC,iBAAkB,SAAU,kBAAmB,CAClEgL,YAAa,CAAEre,GAAIoe,EAAMpe,KAEjC,EA9BSke,SAA+B,mBAAAvf,iBAA/Buf,GAA+Btf,MAAA+C,GAAA/C,MAAA4D,MAAA,EAA/B0b,EAA+B,UAAAhT,EAAAW,IAAA,MAA/BqS,EAA+Bnf,UAAA,oCAAAmD,MAAA,EAAAC,KAAA,GAAAC,OAAA,wWAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IApDpCL,MAAA,UAAAA,CAEC,UAFDA,CAEC,oBA+BWA,MAAA,uBAAAwM,GAAA,OAAelM,EAAAif,UAAA/S,EAAiB,oBACnCxM,YAGTA,MAAA,EAAA0f,GAAA,yBAAA1f,oCA9BYA,MAAA,GAAAA,MAAA,aAAAM,EAAA+G,gBAAArH,CAA8B,UAAAA,MAAA,EAAArF,IAA9BqF,CAA8B,iBAAAA,MAAA,EAAApF,IAA9BoF,CAA8B,cAAAA,MAAA,GAAAwN,IAA9BxN,CAA8B,WAAAA,MAAA,GAAAqQ,GAAA3M,OAA9B1D,CAA8B,eAAA2f,EAAA3f,MAAA,IAAAM,EAAAwY,WAAA6G,EAAAhX,OAAA,wRA6CrC2W,CAA+B,MECxB,CAAEH,KAAM,KAAMS,WAAY,cAGlC,CAAET,KAAM,WAAYC,UAAW5K,IAC/B,CACI2K,KAAM,SACNE,SAAU,CACN,CAAEF,KAAM,QAASC,UAAWb,IAC5B,CAAEY,KAAM,QAASC,UAAWxB,IAC5B,CAAEuB,KAAM,aAAcC,UDgEN,MA1HpC,MA0HaS,UAA+B7Z,KAOxCvK,YACYqR,EACAgI,EACAxH,GAERzL,QAJQjG,KAAAkR,SACAlR,KAAAkZ,SACAlZ,KAAA0R,UATI1R,KAAAqK,QAAOQ,QACP7K,KAAAyL,gBAAkBzL,KAAKkR,OAAOzF,gBAEvCzL,KAAA6d,MAAQ,EACR7d,KAAA+K,QAAkB,EAQzB,CAEOpJ,WAAQ,IAAAwN,EAAAnP,KACXA,KAAKqZ,aACD,cACArZ,KAAKkZ,OAAOuG,cAAclG,UAAS,eAAAmG,KAAAtQ,KAAC,UAAOoK,GACvC,GAAIA,EAAOE,IAAI,MAAO,CAClBvK,EAAKpE,QAAU,2BACf,MAAMiD,QAAK,EAASiU,MAAUzI,EAAOE,IAAI,OACpCnK,YACAqQ,MAAM,IAAM,MACZ5R,OACD6R,MAAY,iCACZ1Q,EAAKuC,QAAQmH,SAAS,CAAC,oBAE3B1J,EAAK9E,KAAKyV,WAAW9R,GACrBmB,EAAKpE,QAAU,GAEnB,GAAIyO,EAAOE,IAAI,YAAa,CACxBvK,EAAKpE,QAAU,6BACf,MAAMgX,QAAO,EAASG,KAAe1I,EAAOE,IAAI,aAC3CnK,YACAqQ,MAAM,IAAM,MACZmC,OACDlC,MACI,8CAEJ1Q,EAAKuC,QAAQmH,SAAS,CAAC,oBAE3B1J,EAAK4S,QAAUA,EACf5S,EAAK9E,KAAKyV,WAAW,CAAEqC,QAASJ,EAAQvc,KACxC2J,EAAKpE,QAAU,GAEvB,GAAC,gBAAAqV,GAAA,OAAAV,EAAAW,MAAArgB,KAAAsgB,UAAA,EA5BkC,KA8BvCtgB,KAAKkR,OAAOpC,WAAW,CAAEnB,YAAa,OACtC3N,KAAK6d,MAAQ,CACjB,CAEasB,OAAI,IAAAzP,EAAA1P,KAAA,SAAAoP,KAAA,YACb,IAAKM,EAAKmO,OAASnO,EAAKmO,MAAQ,EAC5B,SAAOgC,MAAY,iDAEvB,IAAKnQ,EAAKrF,KAAK8F,MACX,SAAO0P,MACH,gCAA6BuC,MAAiB1S,EAAKrF,UAG3DqF,EAAK3E,QAAU,oBACf,MAAMqF,EAAOV,EAAKrF,KAAKtK,YACb,EAASmkB,MAAgB,IAAI3gB,MAAMmM,EAAKmO,OAAOsG,KAAK/T,IACzDb,YACAqQ,MAAOY,IACJ9Q,QAAK3E,QAAU,MACf8U,MAAY,uBAAuBW,EAAE1M,WAC/B0M,IAEd9Q,EAAKrF,KAAKoW,QACV/Q,EAAKwB,OAAOlC,aACZU,EAAKgC,QAAQmH,SAAS,CAAC,iBAAkB,OAAQnJ,EAAKqS,SAASvc,KAC/DkK,EAAK3E,QAAU,EAAG,EArBL,EAsBjB,EA1ESkZ,SAAuB,mBAAA9f,iBAAvB8f,GAAsB7f,MAAA+C,GAAA/C,MAAA4D,MAAA5D,MAAA4D,MAAA,EAAtBic,EAAuB,UAAAvT,EAAAW,IAAA,MAAvB4S,EAAsB1f,UAAA,sBAAAa,SAAA,CAAAhB,OAAAsD,MAAA,EAAAC,KAAA,EAAAC,OAAA,wuCAAAC,SAAA,SAAApD,EAAAC,MAAA,EAAAD,IAvH3BL,MAAA,WACIA,MAAA,EAAAggB,GAAA,eA0GJhgB,QACAA,MAAA,EAAAigB,GAAA,yBAAAjgB,8BAzGSA,MAAA,GAAAA,MAAA,QAAAM,EAAAqG,QAAA3G,CAAgB,WAAAwW,EAAA,6GAoHpBqJ,CAAuB,MC/DhB,CAAEV,KAAM,WAAYC,UAAW1C,GAC/B,CACIyC,KAAM,iBACNC,UAAWlE,MAIvB,CAAEiE,KAAM,KAAMS,WAAY,mBAGlC,CAAET,KAAM,KAAMS,WAAY,KAC5B,IAeWM,GAAsB,MAbnC,MAaaA,YAAsB,mBAAAngB,iBAAtBmgB,EAAsB,EAAtBA,EAAsB,UAAA5T,EAAA6T,IAAA,MAAtBD,MAAsB,UAAA5T,EAAA8T,IAAA,UAV3Bxa,KACAya,KACAC,KACAtc,GACAuc,MACAC,KACA/a,GACAgb,cAAsBvB,OAGjBgB,CAAsB","names":["_c0","_c1","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatButtonToggleGroup","multi","uniqueIdCounter","MatButtonToggleChange","constructor","source","value","this","name","_name","_markButtonsForCheck","vertical","_vertical","coerceBooleanProperty","selected","_selectionModel","multiple","map","toggle","undefined","newValue","_setSelectionByValue","valueChange","emit","_multiple","disabled","_disabled","_changeDetector","defaultOptions","_controlValueAccessorChangeFn","_onTouched","EventEmitter","change","appearance","ngOnInit","SelectionModel","ngAfterContentInit","select","_buttonToggles","filter","checked","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_emitChangeEvent","event","_syncButtonToggle","isUserInput","deferEvents","deselect","Promise","resolve","then","_updateModelValue","_isSelected","isSelected","_isPrechecked","_rawValue","Array","isArray","some","_clearSelection","forEach","currentValue","_selectValue","clear","correspondingOption","find","_markForCheck","ɵfac","t","i0","ɵdir","type","selectors","contentQueries","rf","ctx","dirIndex","MatButtonToggle","_t","hostAttrs","hostVars","hostBindings","inputs","outputs","exportAs","features","_MatButtonToggleBase","mixinDisableRipple","buttonId","id","buttonToggleGroup","_appearance","_checked","_changeDetectorRef","toggleGroup","_elementRef","_focusMonitor","defaultTabIndex","super","ariaLabelledby","parsedTabIndex","Number","tabIndex","group","ngAfterViewInit","monitor","ngOnDestroy","stopMonitoring","focus","options","_buttonElement","nativeElement","_onButtonClick","newChecked","_isSingleSelector","_getButtonName","i1","ɵcmp","viewQuery","first","disableRipple","ariaLabel","ngContentSelectors","decls","vars","consts","template","_r0","dependencies","i2","styles","encapsulation","changeDetection","MatButtonToggleModule","ɵmod","ɵinj","imports","MatCommonModule","MatRippleModule","CdkStepperModule","BidiModule","MatStepperIntl","changes","Subject","optionalLabel","completedLabel","editableLabel","ɵprov","token","factory","providedIn","MAT_STEPPER_INTL_PROVIDER","deps","Optional","SkipSelf","useFactory","MAT_STEPPER_INTL_PROVIDER_FACTORY","parentIntl","MatStepperModule","providers","ErrorStateMatcher","CommonModule","PortalModule","MatIconModule","AssetManagerStateService","AsyncHandler","form","_form","_spaces","_options","BehaviorSubject","view","_change","_poll","generateAssetForm","_loading","loading","asObservable","products","pipe","switchMap","next","getGroupsWithAssets","tap","_","shareReplay","purchase_orders","queryAssetPurchaseOrders","requests","combineLatest","initialised","debounceTime","date","queryBookings","period_start","getUnixTime","startOfDay","Date","now","period_end","endOfDay","b","Booking","extension_data","space","space_id","filtered_requests","list","search","toLowerCase","i","user_name","includes","location_name","assets","status","tracking","categories","queryAssetCategories","active_product","active_item","distinctUntilChanged","showGroupFull","active_product_requests","item","asset","asset_id","filtered_products","product_mapping","_count","length","unique","category_id","startPolling","delay","interval","stopPolling","clearInterval","resetForm","setOptions","getValue","postChange","timeout","setStatus","_this","_asyncToGenerator","result","rejectBooking","toPromise","approveBooking","setTracking","_this2","updateBooking","deleteActiveProduct","_this3","take","deleteAssetGroup","notifySuccess","postForm","_this4","valid","data","other_data","drop_keys","key","cleanObject","saveAsset","core","Yz7","$event","_r3","ctx_r2","tmp_0_0","ctx_r1","AssetManagerTopbarComponent","_state","active","o","Xpm","AssetManagerTopbarComponent_a_3_Template","AssetManagerTopbarComponent_mat_button_toggle_group_4_Template","tmp_3_0","AssetListingComponent","_router","url","_c2","AssetManagerComponent","attrs","SplitJoinPipe","transform","split","join","Yjl","pure","ctx_r0","level","zone","display_name","map_id","selected_feature","ctx_r5","data_r8","stopPropagation","row_r9","_r13","row","ctx_r12","ctx_r14","ctx_r15","_r10","ctx_r7","AssetLocationModalComponent","updateFeatures","_space","location_id","location","content","MapPinComponent","z_index","message","state","_org","zones","levelWithID","i3","AssetLocationModalComponent_div_16_Template","AssetLocationModalComponent_i_map_17_Template","AssetLocationModalComponent_ng_template_18_Template","AssetLocationModalComponent_ng_template_20_Template","AssetLocationModalComponent_ng_template_22_Template","_c3","_c4","_c5","_r6","_r4","_r2","ctx_r11","description","row_r18","_r20","ctx_r19","removeAsset","tmp_1_0","row_r21","_r23","ctx_r22","removePurchaseOrder","AssetViewComponent_div_0_ng_container_48_Template","AssetViewComponent_div_0_ng_template_50_Template","_r25","ctx_r24","viewLocations","AssetViewComponent_div_0_ng_template_80_Template","AssetViewComponent_div_0_ng_template_102_Template","category","tmp_2_0","images","tmp_4_0","_c6","tmp_6_0","_r5","tmp_8_0","_r12","tmp_10_0","tmp_11_0","tmp_12_0","_c7","tmp_14_0","_c8","tmp_16_0","tmp_17_0","_c9","_c10","_c11","_c12","_r14","tmp_22_0","brand","tmp_24_0","tmp_25_0","_c13","_c14","_c15","_c16","_r16","AssetViewComponent_ng_template_4_span_2_Template","data_r26","_r32","ctx_r31","closeTooltip","ctx_r33","deleteAsset","AssetViewComponent_ng_template_6_div_0_Template","AssetViewComponent_ng_template_6_ng_template_1_Template","ctx_r6","deleting","_r29","AssetViewComponent","navigate","_tooltip_el","close","code","currency_code","_route","_dialog","open","subscription","paramMap","subscribe","params","has","get","clearTimeout","resp","openConfirmModal","title","confirm_text","icon","reason","setTimeout","deleteAssetPurchaseOrder","i4","CustomTooltipComponent","AssetViewComponent_div_0_Template","AssetViewComponent_ng_template_2_Template","AssetViewComponent_ng_template_4_Template","AssetViewComponent_ng_template_6_Template","AssetViewComponent_ng_template_8_Template","AssetViewComponent_ng_template_10_Template","_r1","DurationFormatPipe","short","duration","formatDuration","days","Math","floor","hours","minutes","replace","ctx_r3","request","requestChange","ctx_r8","ctx_r9","ctx_r10","user_email","user_phone","user_company","AssetRequestDetailsComponent","AssetRequestDetailsComponent_div_0_Template","row_r14","asset_r17","amount","AssetRequestListComponent_ng_template_12_div_1_Template","row_r15","data_r19","row_r20","ctx_r26","_r22","row_r27","_r31","ctx_r30","ctx_r32","_r28","ctx_r13","AssetRequestListComponent","filters","setDate","AssetRequestListComponent_ng_template_10_Template","AssetRequestListComponent_ng_template_12_Template","AssetRequestListComponent_ng_template_14_Template","AssetRequestListComponent_ng_template_16_Template","AssetRequestListComponent_ng_template_18_Template","AssetRequestListComponent_ng_template_20_Template","AssetRequestListComponent_ng_template_22_Template","_r8","asset_r10","count","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_div_8_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_Template","group_r5","asset_r19","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_div_8_Template","_r21","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_Template","AssetItemListComponent_div_0_ng_container_1_div_1_Template","ctx_r4","AssetItemListComponent_div_0_ng_container_1_Template","AssetItemListComponent_ng_template_5_a_4_Template","AssetItemListComponent","AssetItemListComponent_div_0_Template","AssetItemListComponent_mat_progress_bar_3_Template","AssetItemListComponent_ng_template_5_Template","save","from","product_id","AssetPurchaseOrderFormComponent","generateAssetPurchaseOrderForm","addYears","queryParamMap","_ref","showAssetPurchaseOrder","catch","notifyError","patchValue","order_number","purchase_order_number","purchase_date","expected_service_end_date","expected_service_start_date","_x","apply","arguments","saveAssetPurchaseOrder","e","reset","AssetPurchaseOrderFormComponent_div_1_Template","AssetPurchaseOrderFormComponent_ng_template_2_Template","category_r6","AssetCategoryFormComponent_main_4_mat_option_16_Template","AssetCategoryFormComponent","_data","_dialog_ref","generateAssetCategoryForm","parent_category_id","disableClose","saveAssetCategory","MAT_DIALOG_DATA","AssetCategoryFormComponent_button_3_Template","AssetCategoryFormComponent_main_4_Template","AssetCategoryFormComponent_footer_5_Template","AssetCategoryFormComponent_ng_template_6_Template","order_r5","invoice_number","AssetFormComponent_div_1_mat_option_30_Template","AssetFormComponent_div_1_mat_option_32_Template","_r7","product","AssetFormComponent","showAsset","showAssetGroup","type_id","getInvalidFields","AssetFormComponent_div_1_Template","AssetFormComponent_ng_template_2_Template","category_r4","current_category","AssetGroupFormComponent_div_1_mat_option_21_Template","newCategory","AssetGroupFormComponent","generateAssetGroupForm","new_category","afterClosed","saveAssetGroup","AssetGroupFormComponent_div_1_Template","AssetGroupFormComponent_ng_template_2_Template","AssetPurchaseOrderListComponent_ng_template_4_span_0_Template","data_r2","AssetBulkFormComponent_div_1_mat_option_28_Template","AssetBulkFormComponent_div_1_mat_option_30_Template","ROUTES","path","component","children","AssetPurchaseOrderListComponent","editOrder","order","queryParams","AssetPurchaseOrderListComponent_ng_template_4_Template","tmp_5_0","redirectTo","AssetBulkFormComponent","addAssetsInBulk","fill","AssetBulkFormComponent_div_1_Template","AssetBulkFormComponent_ng_template_2_Template","AppAssetManangerModule","oAB","cJS","UIModule","ComponentsModule","MatProgressBarModule","MatTabsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2022/button-toggle.mjs","./node_modules/@angular/cdk/fesm2022/stepper.mjs","./node_modules/@angular/material/fesm2022/stepper.mjs","./apps/concierge/src/app/asset-manager/asset-manager-state.service.ts","./apps/concierge/src/app/asset-manager/asset-manager-topbar.component.ts","./apps/concierge/src/app/asset-manager/asset-listing.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.component.ts","./apps/concierge/src/app/asset-manager/split-join.pipe.ts","./apps/concierge/src/app/asset-manager/asset-location-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-view.component.ts","./apps/concierge/src/app/asset-manager/duration.pipe.ts","./apps/concierge/src/app/asset-manager/asset-request-details.component.ts","./apps/concierge/src/app/asset-manager/asset-request-list.component.ts","./apps/concierge/src/app/asset-manager/asset-item-list.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-form.component.ts","./apps/concierge/src/app/asset-manager/asset-category-form.component.ts","./apps/concierge/src/app/asset-manager/asset-form.component.ts","./apps/concierge/src/app/asset-manager/asset-group-form.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-list.component.ts","./apps/concierge/src/app/asset-manager/asset-bulk-form.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.module.ts"],"sourcesContent":["import * as i1 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true,\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by button toggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The button toggle that emits the event. */\n    source, \n    /** The value assigned to the button toggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    /** `name` attribute for the underlying `input` element. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._markButtonsForCheck();\n    }\n    /** Whether the toggle group is vertical. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : selected[0] || null;\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._markButtonsForCheck();\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markButtonsForCheck();\n    }\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent(toggle) {\n        const event = new MatButtonToggleChange(toggle, this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n        }\n        else {\n            this._updateModelValue(toggle, isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => (toggle.checked = false));\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(toggle, isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent(toggle);\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n    /** Marks all of the child button toggles to be checked. */\n    _markButtonsForCheck() {\n        this._buttonToggles?.forEach(toggle => toggle._markForCheck());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatButtonToggleGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatButtonToggleGroup, selector: \"mat-button-toggle-group\", inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"attr.aria-disabled\": \"disabled\", \"class.mat-button-toggle-vertical\": \"vertical\", \"class.mat-button-toggle-group-appearance-standard\": \"appearance === \\\"standard\\\"\" }, classAttribute: \"mat-button-toggle-group\" }, providers: [\n            MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n            { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n        ], queries: [{ propertyName: \"_buttonToggles\", predicate: i0.forwardRef(function () { return MatButtonToggle; }), descendants: true }], exportAs: [\"matButtonToggleGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatButtonToggleGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-button-toggle-group',\n                    providers: [\n                        MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                        { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                    ],\n                    host: {\n                        'role': 'group',\n                        'class': 'mat-button-toggle-group',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[class.mat-button-toggle-vertical]': 'vertical',\n                        '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"',\n                    },\n                    exportAs: 'matButtonToggleGroup',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { _buttonToggles: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatButtonToggle), {\n                        // Note that this would technically pick up toggles\n                        // from nested groups, but that's not a case that we support.\n                        descendants: true,\n                    }]\n            }], appearance: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], multiple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nconst _MatButtonToggleBase = mixinDisableRipple(class {\n});\n/** Single button inside of a toggle group. */\nclass MatButtonToggle extends _MatButtonToggleBase {\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() {\n        return `${this.id}-button`;\n    }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        const newChecked = this._isSingleSelector() ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Gets the name that should be assigned to the inner DOM node. */\n    _getButtonName() {\n        if (this._isSingleSelector()) {\n            return this.buttonToggleGroup.name;\n        }\n        return this.name || null;\n    }\n    /** Whether the toggle is in single selection mode. */\n    _isSingleSelector() {\n        return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatButtonToggle, deps: [{ token: MAT_BUTTON_TOGGLE_GROUP, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: 'tabindex', attribute: true }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatButtonToggle, selector: \"mat-button-toggle\", inputs: { disableRipple: \"disableRipple\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", name: \"name\", value: \"value\", tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\" }, outputs: { change: \"change\" }, host: { attributes: { \"role\": \"presentation\" }, listeners: { \"focus\": \"focus()\" }, properties: { \"class.mat-button-toggle-standalone\": \"!buttonToggleGroup\", \"class.mat-button-toggle-checked\": \"checked\", \"class.mat-button-toggle-disabled\": \"disabled\", \"class.mat-button-toggle-appearance-standard\": \"appearance === \\\"standard\\\"\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.id\": \"id\", \"attr.name\": \"null\" }, classAttribute: \"mat-button-toggle\" }, viewQueries: [{ propertyName: \"_buttonElement\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matButtonToggle\"], usesInheritance: true, ngImport: i0, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatButtonToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-button-toggle', encapsulation: ViewEncapsulation.None, exportAs: 'matButtonToggle', changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disableRipple'], host: {\n                        '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                        '[class.mat-button-toggle-checked]': 'checked',\n                        '[class.mat-button-toggle-disabled]': 'disabled',\n                        '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                        'class': 'mat-button-toggle',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.name]': 'null',\n                        '(focus)': 'focus()',\n                        'role': 'presentation',\n                    }, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"] }]\n        }], ctorParameters: function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_GROUP]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], _buttonElement: [{\n                type: ViewChild,\n                args: ['button']\n            }], id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n\nclass MatButtonToggleModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatButtonToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatButtonToggleModule, declarations: [MatButtonToggleGroup, MatButtonToggle], imports: [MatCommonModule, MatRippleModule], exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatButtonToggleModule, imports: [MatCommonModule, MatRippleModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatButtonToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule],\n                    exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                    declarations: [MatButtonToggleGroup, MatButtonToggle],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepHeader, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepLabel, selector: \"[cdkStepLabel]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return this._stepperOptions.showError ?? this._customError != null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStep, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\" }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => CdkStepper)]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }]; }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], completed: [{\n                type: Input\n            }], hasError: [{\n                type: Input\n            }] } });\nclass CdkStepper {\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(newIndex) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            this.selected?._markAsInteracted();\n            if (this._selectedIndex !== newIndex &&\n                !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(newIndex);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatStepper` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    constructor(_dir, _changeDetectorRef, _elementRef) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplication. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.setFocusOrigin('keyboard').onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepper, selector: \"[cdkStepper]\", inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepperNext, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepperPrevious, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n\nclass CdkStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperModule, declarations: [CdkStep,\n            CdkStepper,\n            CdkStepHeader,\n            CdkStepLabel,\n            CdkStepperNext,\n            CdkStepperPrevious], imports: [BidiModule], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import * as i2$1 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Inject, ContentChild, QueryList, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { mixinColor, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i4 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i2 from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nclass MatStepLabel extends CdkStepLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepLabel, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                }]\n        }] });\n\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n        /** Label that is used to indicate step as completed to screen readers. */\n        this.completedLabel = 'Completed';\n        /** Label that is used to indicate step as editable to screen readers. */\n        this.editableLabel = 'Editable';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nconst _MatStepHeaderBase = mixinColor(class MatStepHeaderBase extends CdkStepHeader {\n    constructor(elementRef) {\n        super(elementRef);\n    }\n}, 'primary');\nclass MatStepHeader extends _MatStepHeaderBase {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional,\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepHeader, deps: [{ token: MatStepperIntl }, { token: i2.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepHeader, selector: \"mat-step-header\", inputs: { color: \"color\", state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, host: { attributes: { \"role\": \"tab\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i3.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"component\", type: i4.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', inputs: ['color'], host: {\n                        'class': 'mat-step-header',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n        }], ctorParameters: function () { return [{ type: MatStepperIntl }, { type: i2.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }] } });\n\nconst DEFAULT_HORIZONTAL_ANIMATION_DURATION = '500ms';\nconst DEFAULT_VERTICAL_ANIMATION_DURATION = '225ms';\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'), {\n            params: { 'animationDuration': DEFAULT_HORIZONTAL_ANIMATION_DURATION },\n        }),\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'), {\n            params: { 'animationDuration': DEFAULT_VERTICAL_ANIMATION_DURATION },\n        }),\n    ]),\n};\n\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIcon, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepperIcon, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepContent, selector: \"ng-template[matStepContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n        /** Content for step label given by `<ng-template matStepLabel>`. */\n        // We need an initializer here to avoid a TS error.\n        this.stepLabel = undefined;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStep, deps: [{ token: forwardRef(() => MatStepper) }, { token: i1.ErrorStateMatcher, skipSelf: true }, { token: i0.ViewContainerRef }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStep, selector: \"mat-step\", inputs: { color: \"color\" }, providers: [\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i2$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: MatStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatStepper)]\n                }] }, { type: i1.ErrorStateMatcher, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }]; }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\nclass MatStepper extends CdkStepper {\n    /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    constructor(dir, changeDetectorRef, elementRef) {\n        super(dir, changeDetectorRef, elementRef);\n        /** The list of step headers of the steps in the stepper. */\n        // We need an initializer here to avoid a TS error.\n        this._stepHeader = undefined;\n        /** Full list of steps inside the stepper, including inside nested steppers. */\n        // We need an initializer here to avoid a TS error.\n        this._steps = undefined;\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /**\n         * Position of the stepper's header.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.headerPosition = 'top';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        this._animationDuration = '';\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone\n            .pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n    _getAnimationDuration() {\n        if (this.animationDuration) {\n            return this.animationDuration;\n        }\n        return this.orientation === 'horizontal'\n            ? DEFAULT_HORIZONTAL_ANIMATION_DURATION\n            : DEFAULT_VERTICAL_ANIMATION_DURATION;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepper, deps: [{ token: i3$1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepper, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { selectedIndex: \"selectedIndex\", disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\", \"ngSkipHydration\": \"true\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"class.mat-stepper-header-position-bottom\": \"headerPosition === \\\"bottom\\\"\", \"attr.aria-orientation\": \"orientation\" } }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <div class=\\\"mat-horizontal-stepper-wrapper\\\" *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"{\\n              'value': _getAnimationDirection(i),\\n              'params': {'animationDuration': _getAnimationDuration()}\\n            }\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"{\\n                'value': _getAnimationDirection(i),\\n                'params': {'animationDuration': _getAnimationDuration()}\\n              }\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"component\", type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"color\", \"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\"] }], animations: [\n            matStepperAnimations.horizontalStepTransition,\n            matStepperAnimations.verticalStepTransition,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', inputs: ['selectedIndex'], host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                        'ngSkipHydration': 'true',\n                    }, animations: [\n                        matStepperAnimations.horizontalStepTransition,\n                        matStepperAnimations.verticalStepTransition,\n                    ], providers: [{ provide: CdkStepper, useExisting: MatStepper }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <div class=\\\"mat-horizontal-stepper-wrapper\\\" *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"{\\n              'value': _getAnimationDirection(i),\\n              'params': {'animationDuration': _getAnimationDuration()}\\n            }\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"{\\n                'value': _getAnimationDirection(i),\\n                'params': {'animationDuration': _getAnimationDuration()}\\n              }\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i3$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepperNext, selector: \"button[matStepperNext]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepperPrevious, selector: \"button[matStepperPrevious]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n\nclass MatStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperModule, declarations: [MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent], imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule], exports: [MatCommonModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CommonModule,\n                        PortalModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    declarations: [\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    approveBooking,\n    queryBookings,\n    rejectBooking,\n    updateBooking,\n} from '@placeos/bookings';\nimport { AsyncHandler, notifySuccess, unique } from '@placeos/common';\nimport { SpacesService } from '@placeos/spaces';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport {\n    AssetGroup,\n    AssetPurchaseOrder,\n    deleteAssetGroup,\n    generateAssetForm,\n    getGroupsWithAssets,\n    queryAssetCategories,\n    queryAssetPurchaseOrders,\n    saveAsset,\n    showGroupFull,\n} from '@placeos/assets';\nimport { cleanObject } from '@placeos/ts-client';\n\nexport interface AssetOptions {\n    date?: number;\n    search?: string;\n    sort_by?: string;\n    view: 'grid' | 'list';\n    active_item?: string;\n}\n\nexport interface AssetRequest {\n    id: string;\n    assets: { id: string; name: string; amount?: number }[];\n    date: number;\n    duration: number;\n    user_id: string;\n    user_name: string;\n    location_id: string;\n    location_name: string;\n    location_floor: string;\n    status: 'approved' | 'pending' | 'declined';\n    tracking: 'in_storage' | 'in_transit' | 'at_location' | 'unknown';\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetManagerStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<AssetOptions>({ view: 'grid' });\n    private _change = new BehaviorSubject(0);\n    private _poll = new BehaviorSubject(0);\n    private _form = generateAssetForm();\n    private _loading = new BehaviorSubject(false);\n    /** Whether asset list is loading */\n    public readonly loading = this._loading.asObservable();\n    /** List of options set for the view */\n    public readonly options = this._options.asObservable();\n    /** List of available assets */\n    public readonly products: Observable<AssetGroup[]> = this._change.pipe(\n        switchMap(() => {\n            this._loading.next(true);\n            return getGroupsWithAssets();\n        }),\n        tap((_) => this._loading.next(false)),\n        shareReplay(1)\n    ) as any;\n    /** List of available assets */\n    public readonly purchase_orders: Observable<AssetPurchaseOrder[]> =\n        this._change.pipe(\n            switchMap(() => {\n                this._loading.next(true);\n                return queryAssetPurchaseOrders();\n            }),\n            tap(() => this._loading.next(false)),\n            shareReplay(1)\n        ) as any;\n    /** List of requests made by users for assets */\n    public readonly requests = combineLatest([\n        this._options,\n        this._poll,\n        this._change,\n        this._spaces.initialised,\n    ]).pipe(\n        debounceTime(200),\n        switchMap(([{ date }]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date || Date.now())),\n                period_end: getUnixTime(endOfDay(date || Date.now())),\n                type: 'asset-request',\n            })\n        ),\n        map((_) =>\n            _.map(\n                (b) =>\n                    new Booking({\n                        ...b,\n                        extension_data: {\n                            ...b.extension_data,\n                            space: this._spaces.find(b.extension_data.space_id),\n                        },\n                    })\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Filtered list of asset requests */\n    public readonly filtered_requests = combineLatest([\n        this.requests,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            const search = (options.search || '').toLowerCase();\n            return search\n                ? list.filter(\n                      (i) =>\n                          i.user_name.toLowerCase().includes(search) ||\n                          i.extension_data.location_name\n                              .toLowerCase()\n                              .includes(search) ||\n                          i.extension_data.assets.find((_) =>\n                              _.name.toLowerCase().includes(search)\n                          ) ||\n                          i.status.includes(search) ||\n                          i.extension_data.tracking.includes(search)\n                  )\n                : list;\n        })\n    );\n    public readonly categories = combineLatest([\n        this._options,\n        this._change,\n    ]).pipe(\n        switchMap(() => queryAssetCategories()),\n        shareReplay(1)\n    );\n    /** Currently active asset */\n    public readonly active_product = combineLatest([\n        this._options,\n        this._change,\n    ]).pipe(\n        filter(([{ active_item }]) => !!active_item),\n        map(([options, t]) => [options.active_item, t] as any),\n        distinctUntilChanged(),\n        switchMap(([active_item]) => showGroupFull(active_item)),\n        shareReplay(1)\n    );\n    /** List of requests for the currently active asset */\n    public readonly active_product_requests = this.active_product.pipe(\n        switchMap((item) => {\n            return this.requests.pipe(\n                map((_) =>\n                    _.filter((i) =>\n                        item.assets.find((asset) => asset.id === i.asset_id)\n                    )\n                )\n            );\n        }),\n        map((_) => _.filter((i) => i.status !== 'declined'))\n    );\n    /** list of filtered assets */\n    public readonly filtered_products = combineLatest([\n        this.products,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            options.search\n                ? list.filter((i) =>\n                      i.name\n                          .toLowerCase()\n                          .includes(options.search.toLowerCase())\n                  )\n                : list\n        )\n    );\n    /** Mapping of available assets to categories */\n    public readonly product_mapping = this.filtered_products.pipe(\n        map((_) => {\n            const map = { _count: _.length };\n            const categories = unique(_.map((i) => i.category_id));\n            for (const group of categories) {\n                map[group] = _.filter((i) => i.category_id === group);\n            }\n            return map;\n        })\n    );\n\n    public get form() {\n        return this._form;\n    }\n\n    constructor(private _spaces: SpacesService) {\n        super();\n    }\n\n    public startPolling(delay = 15 * 1000) {\n        this.interval('polling', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    public resetForm() {\n        this._form = generateAssetForm();\n    }\n\n    /** Update the set view options */\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public postChange() {\n        this.timeout('change', () => this._change.next(Date.now()), 1000);\n    }\n\n    public async setStatus(item: Booking, status: any) {\n        let result = item;\n        if (status === 'declined') {\n            result = await rejectBooking(item.id).toPromise();\n        } else if (status === 'approved') {\n            result = await approveBooking(item.id).toPromise();\n        }\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async setTracking(item: Booking, tracking: string) {\n        const result = await updateBooking(item.id, {\n            ...item,\n            extension_data: { ...item.extension_data, tracking },\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async deleteActiveProduct() {\n        const item = await this.active_product.pipe(take(1)).toPromise();\n        if (!item?.id) return;\n        await deleteAssetGroup(item.id).toPromise();\n        this._change.next(Date.now());\n        notifySuccess('Successfully deleted asset');\n    }\n\n    public async postForm() {\n        if (!this.form?.valid) return;\n        const data: any = this.form.value;\n        const other_data = { ...data };\n        const drop_keys = [\n            'other_data',\n            'id',\n            'name',\n            'quantity',\n            'category',\n            'purchase_date',\n            'brand',\n            'images',\n        ];\n        for (const key of drop_keys) {\n            delete other_data[key];\n        }\n        data.other_data = cleanObject(other_data, [undefined, null, '']);\n        const asset = await saveAsset(data as any).toPromise();\n        this._change.next(Date.now());\n        notifySuccess(`Successfully ${data.id ? 'updated' : 'created'} asset`);\n        this.resetForm();\n        return asset.id;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-manager-topbar',\n    template: `\n        <div\n            class=\"w-full px-4 py-2 bg-white dark:bg-neutral-700 flex items-center space-x-4\"\n        >\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                [routerLink]=\"['/asset-manager', 'manage', 'group']\"\n            >\n                Add Product\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                *ngIf=\"active === 'purchase-orders'\"\n                [routerLink]=\"['/asset-manager', 'manage', 'purchase-order']\"\n            >\n                Add Purchase Order\n            </a>\n            <mat-button-toggle-group\n                [ngModel]=\"(options | async)?.view\"\n                (ngModelChange)=\"setOptions({ view: $event })\"\n                *ngIf=\"active === 'items'\"\n            >\n                <mat-button-toggle value=\"grid\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_module</app-icon>\n                    </div>\n                </mat-button-toggle>\n                <mat-button-toggle value=\"list\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_list</app-icon>\n                    </div>\n                </mat-button-toggle>\n            </mat-button-toggle-group>\n            <div class=\"flex-1\"></div>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.25rem]\">\n                <app-icon matPrefix class=\"text-2xl relative top-1 -left-1\">\n                    search\n                </app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(options | async)?.search\"\n                    (ngModelChange)=\"setOptions({ search: $event })\"\n                    placeholder=\"Search products and requests\"\n                />\n            </mat-form-field>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetManagerTopbarComponent {\n    @Input() public active = '';\n\n    public readonly options = this._state.options;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-listing',\n    template: `\n        <asset-manager-topbar [active]=\"active\"></asset-manager-topbar>\n        <div class=\"flex flex-col flex-1 h-1/2 w-full px-4\">\n            <nav mat-tab-nav-bar>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/asset-manager', 'list', 'requests']\"\n                    [routerLinkActive]=\"'active'\"\n                    [active]=\"active === 'requests'\"\n                    (click)=\"active = 'requests'\"\n                >\n                    Requests\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/asset-manager', 'list', 'items']\"\n                    [active]=\"active === 'items'\"\n                    (click)=\"active = 'items'\"\n                >\n                    Products\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/asset-manager', 'list', 'purchase-orders']\"\n                    [active]=\"active === 'purchase-orders'\"\n                    (click)=\"active = 'purchase-orders'\"\n                >\n                    Purchase Orders\n                </a>\n            </nav>\n            <div class=\"flex-1 h-1/2 w-full overflow-visible\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListingComponent {\n    public active = 'requests';\n\n    constructor(private _router: Router) {}\n\n    public ngOnInit() {\n        this.active = this._router.url.includes('requests')\n            ? 'requests'\n            : this._router.url.includes('items')\n            ? 'items'\n            : 'purchase-orders';\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-1/2 flex-1 bg-gray-200 dark:bg-neutral-600 overflow-hidden\">\n            <router-outlet></router-outlet>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class AssetManagerComponent {}\n","import { Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'splitjoin',\n})\nexport class SplitJoinPipe {\n    public transform(\n        value: string,\n        split: string = '_',\n        join: string = ' '\n    ): string {\n        return (value || '').split(split).join(join);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { MapPinComponent } from '@placeos/components';\nimport {\n    AssetManagerStateService,\n    AssetRequest,\n} from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'asset-location-modal',\n    template: `\n        <div class=\"p-6 relative\">\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-4 right-4\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <h2 class=\"font-medium mb-2\">\n                {{ (asset | async)?.name }} in use location:\n                {{ (requests | async)?.length }}\n            </h2>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.5rem] mb-2\">\n                <app-icon matPrefix>search</app-icon>\n                <input matInput placeholder=\"Search...\" />\n            </mat-form-field>\n            <div class=\"flex items-center space-x-4 w-[90vw] text-sm\">\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-gray-300 bg-gray-50 overflow-auto\"\n                >\n                    <custom-table\n                        [dataSource]=\"requests\"\n                        [columns]=\"[\n                            'zones',\n                            'description',\n                            'tracking',\n                            'user_name'\n                        ]\"\n                        [display_column]=\"[\n                            'Level',\n                            'Space',\n                            'Tracking',\n                            'Requestee'\n                        ]\"\n                        [column_size]=\"['4r', 'flex', '10r', '6r']\"\n                        [template]=\"{\n                            tracking: tracking_template,\n                            zones: level_template,\n                        }\"\n                        (row_clicked)=\"selected = $event; updateFeatures()\"\n                    ></custom-table>\n                </div>\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-gray-300 bg-gray-100 relative flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-4 left-4 bg-white px-4 py-2 rounded-3xl border border-gray-300\"\n                        *ngIf=\"selected\"\n                    >\n                        {{ level(selected.zone)?.display_name || 'N/A' }}\n                    </div>\n                    <i-map\n                        *ngIf=\"selected; else empty_state\"\n                        [src]=\"level(selected.zone)?.map_id || ''\"\n                        [styles]=\"{\n                            '#Zones': { display: 'none' },\n                            '#zones': { display: 'none' }\n                        }\"\n                        [features]=\"selected_feature\"\n                    ></i-map>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <p class=\"opacity-30\">\n                Select a space from the list to view map location\n            </p>\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ level(data)?.display_name || 'N/A' }}\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{\n                        (row.extension_data?.tracking | splitjoin) ||\n                            'In Storage'\n                    }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetLocationModalComponent {\n    public readonly asset = this._state.active_product;\n    public readonly requests = this._state.active_product_requests;\n\n    public selected: Booking;\n    public selected_feature;\n\n    public loading = {};\n\n    public async updateFeatures() {\n        const space = await this._space.transform(\n            this.selected.extension_data?.location_id\n        );\n        this.selected_feature = this.selected\n            ? [\n                  {\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      z_index: 99,\n                      data: {\n                          message: `${\n                              space.display_name || space.name\n                          } is here`,\n                      },\n                  },\n              ]\n            : [];\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _space: SpacePipe\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, flatten, openConfirmModal } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first, map } from 'rxjs/operators';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    Asset,\n    AssetPurchaseOrder,\n    deleteAsset,\n    deleteAssetPurchaseOrder,\n} from '@placeos/assets';\n\n@Component({\n    selector: 'asset-view',\n    template: `\n        <div\n            class=\"h-full w-full flex flex-col\"\n            *ngIf=\"!loading && (item | async); else loading_state\"\n        >\n            <div\n                class=\"flex items-center space-x-4 p-2 bg-white border-b border-gray-200\"\n            >\n                <a\n                    btn\n                    matRipple\n                    class=\"inverse\"\n                    [routerLink]=\"['/asset-manager', 'list', 'items']\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-2\">Back</div>\n                    </div>\n                </a>\n                <div class=\"flex items-center space-x-2 font-medium\">\n                    <span>Assets</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.category?.name }}</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.name }}</span>\n                </div>\n            </div>\n            <div class=\"flex items-center\">\n                <div\n                    class=\"bg-white dark:bg-neutral-700 flex-1 w-1/2 h-[22.5rem]\"\n                >\n                    <image-carousel\n                        [images]=\"(item | async)?.images || []\"\n                    ></image-carousel>\n                </div>\n                <div class=\"w-[32rem] h-[22.5rem] px-4 flex flex-col\">\n                    <div\n                        class=\"w-full flex items-center justify-between border-b border-gray-300 dark:border-neutral-500\"\n                    >\n                        <div class=\"font-medium\">\n                            {{ (item | async)?.name }}\n                        </div>\n                        <div class=\"flex items-center text-sm \">\n                            <a\n                                button\n                                btn\n                                matRipple\n                                class=\"clear\"\n                                [routerLink]=\"[\n                                    '/asset-manager',\n                                    'manage',\n                                    'group'\n                                ]\"\n                                [queryParams]=\"{ id: (item | async)?.id }\"\n                            >\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                    <div class=\"mr-2 underline\">Edit</div>\n                                </div>\n                            </a>\n                            <div class=\"w-px h-4 bg-gray-300\"></div>\n                            <button btn matRipple class=\"clear\">\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                    customTooltip\n                                    [content]=\"delete_tooltip\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                    <div class=\"mr-2 underline\">Delete</div>\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"py-4 w-full flex-1 h-1/2 overflow-auto\">\n                        <ng-container\n                            *ngIf=\"\n                                (item | async)?.description;\n                                else no_desc_state\n                            \"\n                        >\n                            {{\n                                (item | async)?.description ||\n                                    '~No Description~'\n                            }}\n                        </ng-container>\n                        <ng-template #no_desc_state>\n                            <span class=\"opacity-30\">No Description</span>\n                        </ng-template>\n                    </div>\n                    <div\n                        class=\"rounded bg-white dark:bg-neutral-700 shadow border border-gray-300 dark:border-neutral-500 w-full divide-y divide-gray-200 dark:divide-neutral-500\"\n                    >\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                Available:\n                                {{\n                                    (item | async)?.assets.length -\n                                        (requests | async)?.length || 0\n                                }}\n                            </div>\n                            <!-- <button\n                                btn\n                                matRipple\n                                [disabled]=\"\n                                    (item | async)?.assets.length -\n                                        (requests | async)?.length ===\n                                    0\n                                \"\n                            >\n                                Assign to Location\n                            </button> -->\n                        </div>\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                In Use:\n                                {{ (requests | async)?.length || 0 }}\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                (click)=\"viewLocations()\"\n                                [disabled]=\"\n                                    (item | async)?.assets.length -\n                                        (requests | async)?.length !==\n                                    0\n                                \"\n                            >\n                                View Locations\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <mat-tab-group class=\"flex-1 h-px\">\n                <mat-tab label=\"Assets\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">Assets</h3>\n                        <div class=\"flex w-full items-center space-x-2 mb-2\">\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[\n                                    '/asset-manager',\n                                    'manage',\n                                    'asset'\n                                ]\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Add Asset\n                            </a>\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[\n                                    '/asset-manager',\n                                    'manage',\n                                    'asset-bulk'\n                                ]\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Bulk Add Asset\n                            </a>\n                        </div>\n                        <custom-table\n                            asset-view\n                            class=\"w-full block text-sm\"\n                            [dataSource]=\"(item | async)?.assets || []\"\n                            [columns]=\"[\n                                'id',\n                                'identifier',\n                                'serial_number',\n                                'actions'\n                            ]\"\n                            [display_column]=\"[\n                                'ID',\n                                'Label/Friendly Name',\n                                'Serial Number',\n                                ' '\n                            ]\"\n                            [column_size]=\"['10r', '14r', '8r', 'flex']\"\n                            [template]=\"{\n                                actions: action_template,\n                            }\"\n                            empty=\"No assets for this product\"\n                        >\n                        </custom-table>\n                        <ng-template #action_template let-row=\"row\">\n                            <div class=\"flex w-full items-center justify-end\">\n                                <a\n                                    btn\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        '/asset-manager',\n                                        'manage',\n                                        'asset'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: (item | async)?.id\n                                    }\"\n                                    class=\"clear\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                </a>\n                                <button\n                                    btn\n                                    icon\n                                    matRipple\n                                    (click)=\"removeAsset(row)\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Specifications\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">General</h3>\n                        <div\n                            data-table\n                            class=\"bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500\"\n                        >\n                            <div class=\"flex items-center p-2\">\n                                <label>Brand</label>\n                                <div>\n                                    {{ (item | async)?.brand || '~None~' }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Purchase information\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">Purchase Orders</h3>\n                        <a\n                            btn\n                            matRipple\n                            class=\"mb-2\"\n                            [routerLink]=\"[\n                                '/asset-manager',\n                                'manage',\n                                'purchase-order'\n                            ]\"\n                            [queryParams]=\"{ group_id: (item | async)?.id }\"\n                        >\n                            Add Purchase Order\n                        </a>\n\n                        <custom-table\n                            asset-view\n                            class=\"w-full block text-sm\"\n                            [dataSource]=\"(item | async)?.purchase_orders || []\"\n                            [columns]=\"[\n                                'purchase_order_number',\n                                'invoice_number',\n                                'expected_service_start_date',\n                                'expected_service_end_date',\n                                'actions'\n                            ]\"\n                            [display_column]=\"[\n                                'Order Number',\n                                'Invoice Number',\n                                'Service Start',\n                                'Service End',\n                                ' '\n                            ]\"\n                            [column_size]=\"['10r', '10r', '10r', '10r', 'flex']\"\n                            [template]=\"{\n                                actions: po_action_template,\n                                expected_service_start_date: date_template,\n                                expected_service_end_date: date_template\n                            }\"\n                            empty=\"No assets for this product\"\n                        >\n                        </custom-table>\n                        <ng-template #po_action_template let-row=\"row\">\n                            <div class=\"flex w-full items-center justify-end\">\n                                <a\n                                    btn\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        '/asset-manager',\n                                        'manage',\n                                        'purchase-order'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: row?.id\n                                    }\"\n                                    class=\"clear\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                </a>\n                                <button\n                                    btn\n                                    icon\n                                    matRipple\n                                    (click)=\"removePurchaseOrder(row)\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading product details...</p>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-data=\"data\">\n            {{ data * 1000 | date: 'mediumDate' }}\n            <span *ngIf=\"!data\" class=\"opacity-30\"> No Date </span>\n        </ng-template>\n        <ng-template #delete_tooltip>\n            <div\n                class=\"p-4 bg-white dark:bg-neutral-700 rounded my-2 text-center w-[18rem]\"\n                *ngIf=\"!deleting; else delete_loading\"\n            >\n                <p>Are you sure you want to permanently delete this product?</p>\n                <div class=\"flex items-center space-x-2 mt-6\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"inverse flex-1 w-24\"\n                        (click)=\"closeTooltip()\"\n                    >\n                        No\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"error flex-1 w-24\"\n                        (click)=\"deleteAsset()\"\n                    >\n                        Yes, delete\n                    </button>\n                </div>\n            </div>\n            <ng-template #delete_loading>\n                <div\n                    class=\"p-4 bg-white dark:bg-neutral-700 rounded my-2 w-64 h-36 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <p>Deleting product details...</p>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #empty_invoices>\n            <div class=\"p-2 opacity-30\">No purchase orders</div>\n        </ng-template>\n        <ng-template #empty_items>\n            <div class=\"p-2 opacity-30\">No assets</div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [data-table] > div:nth-child(2n) {\n                background: #0001;\n            }\n\n            label {\n                width: 10rem;\n                min-width: 0;\n            }\n        `,\n    ],\n})\nexport class AssetViewComponent extends AsyncHandler {\n    public loading = false;\n    public deleting = false;\n    public readonly item = this._state.active_product;\n    public readonly requests = this._state.active_product_requests;\n\n    @ViewChild(CustomTooltipComponent)\n    public _tooltip_el: CustomTooltipComponent;\n\n    public async deleteAsset() {\n        this.deleting = true;\n        await this._state.deleteActiveProduct();\n        this.deleting = false;\n        this._router.navigate(['/asset-manager', 'list', 'items']);\n        this.closeTooltip();\n    }\n\n    public closeTooltip() {\n        this._tooltip_el?.close();\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _state: AssetManagerStateService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public viewLocations() {\n        this._dialog.open(AssetLocationModalComponent);\n    }\n\n    public ngOnInit() {\n        this.loading = true;\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('id')) {\n                    this._state.setOptions({ active_item: params.get('id') });\n                }\n            })\n        );\n        this.timeout(\n            'no_asset',\n            () => this._router.navigate(['/asset-mananger']),\n            1000\n        );\n        this._state.active_product.pipe(first((_) => !!_)).subscribe(() => {\n            this.clearTimeout('no_asset');\n            this.loading = false;\n        });\n    }\n\n    public async removeAsset(asset: Asset) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete asset',\n                content: `Are you sure you want to delete this asset?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting asset...');\n        await deleteAsset(asset.id).toPromise();\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n\n    public async removePurchaseOrder(asset: AssetPurchaseOrder) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete purchase order',\n                content: `Are you sure you want to delete this purchase order?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting purchase order...');\n        await deleteAssetPurchaseOrder(asset.id).toPromise();\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { formatDuration } from 'date-fns';\n\n@Pipe({\n    name: 'duration',\n})\nexport class DurationFormatPipe {\n    public transform(value: number, short = true): string {\n        let duration = formatDuration({\n            days: Math.floor(value / (24 * 60)),\n            hours: Math.floor((value / 60) % 24),\n            minutes: Math.floor(value % 60),\n        });\n        if (!short) return duration;\n        return duration\n            .replace(' day', 'd')\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    AssetManagerStateService,\n    AssetRequest,\n} from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-request-details',\n    template: `\n        <div\n            class=\"fixed inset-0 bg-black/50 z-50\"\n            *ngIf=\"request\"\n            (click)=\"request = null; requestChange.emit(request)\"\n        >\n            <div\n                class=\"absolute inset-y-0 right-0 bg-white dark:bg-neutral-700 w-[480px]\"\n                (click)=\"$event.stopPropagation()\"\n            >\n                <button\n                    icon\n                    matRipple\n                    (click)=\"request = null; requestChange.emit(request)\"\n                    class=\"absolute top-1 right-1\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div\n                    class=\"border-b border-gray-200 dark:border-neutral-500 px-2 py-4 flex space-x-4\"\n                >\n                    <a-user-avatar\n                        [user]=\"{ name: request.user_name }\"\n                        class=\"text-xl\"\n                    ></a-user-avatar>\n                    <div details class=\"space-y-1\">\n                        <div class=\"font-medium\">{{ request.user_name }}</div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>mail</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'mailto:' + request.user_email\"\n                            >\n                                {{ request.user_email || 'staff@place.tech' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>call</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'tel:' + request.user_phone\"\n                            >\n                                {{ request.user_phone || '04 1234 5678' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>work_outline</app-icon>\n                            <div>{{ request.user_company || 'PlaceOS' }}</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"px-3 py-4 relative\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">send</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Asset Requested</div>\n                    </div>\n                    <div class=\"pl-10 flex flex-col mt-1\">\n                        {{ request.title }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">event</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Date For</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'EEEE, MMMM d, y' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">schedule</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Period</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'shortTime' }} &ndash;\n                        {{\n                            request.date + request.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                        ({{ request.duration | duration }})\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">place</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Floor</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ level(request.zones)?.display_name || 'N/A' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">meeting_room</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Room</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.description }}\n                    </div>\n                    <div class=\"absolute top-4 right-4 text-sm\">\n                        <button\n                            matRipple\n                            class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2 mb-4\"\n                            [class.bg-green-600]=\"request.status === 'approved'\"\n                            [class.bg-red-600]=\"request.status === 'declined'\"\n                            [class.bg-yellow-400]=\"\n                                request.status === 'tentative'\n                            \"\n                            [matMenuTriggerFor]=\"menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <app-icon\n                                class=\"text-xl\"\n                                [class.text-green-600]=\"\n                                    request.status === 'approved'\n                                \"\n                                [class.text-red-600]=\"\n                                    request.status === 'declined'\n                                \"\n                                [class.text-yellow-400]=\"\n                                    request.status === 'tentative'\n                                \"\n                            >\n                                {{\n                                    request.status === 'approved'\n                                        ? 'done'\n                                        : request.status === 'declined'\n                                        ? 'close'\n                                        : 'warning'\n                                }}\n                            </app-icon>\n                            <div class=\"capitalize flex-1\">\n                                {{ request.status }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('approved')\"\n                            >\n                                Approve\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('declined')\"\n                            >\n                                Decline\n                            </button>\n                        </mat-menu>\n                        <button\n                            matRipple\n                            class=\"bg-none w-full flex items-center px-2 py-1 text-left border border-gray-200 dark:border-neutral-700 rounded-none\"\n                            [matMenuTriggerFor]=\"tracking_menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <div class=\"capitalize flex-1\">\n                                {{\n                                    (request.extension_data?.tracking\n                                        | splitjoin) || 'In Storage'\n                                }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_storage')\"\n                            >\n                                In Storage\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_transit')\"\n                            >\n                                In Transit\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('at_location')\"\n                            >\n                                At Location\n                            </button>\n                        </mat-menu>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetRequestDetailsComponent {\n    @Input() public request: any;\n    @Output() public requestChange = new EventEmitter<any>();\n\n    public loading = false;\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public async setStatus(status: string) {\n        this.loading = true;\n        await this._state.setStatus(this.request, status);\n        (this.request as any).status = status;\n        this.loading = false;\n    }\n\n    public async setTracking(state: string) {\n        this.loading = true;\n        await this._state.setTracking(this.request, state);\n        (this.request as any).extension_data.tracking = state;\n        this.loading = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-asset-request-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div\n                class=\"bg-white dark:bg-neutral-700 px-4 border-t border-b border-gray-300 dark:border-neutral-500 flex items-center justify-between\"\n            >\n                <div class=\"opacity-60 text-sm\">\n                    {{ (requests | async)?.length }} asset request{{\n                        (requests | async)?.length === '1' ? '' : 's'\n                    }}\n                </div>\n                <date-options (dateChange)=\"setDate($event)\"></date-options>\n            </div>\n            <div class=\"w-full overflow-auto h-1/2 flex-1\">\n                <custom-table\n                    asset-requests\n                    class=\"block min-w-[82rem] text-sm\"\n                    [dataSource]=\"requests\"\n                    [columns]=\"[\n                        'user',\n                        'title',\n                        'date',\n                        'period',\n                        'zones',\n                        'description',\n                        'approval',\n                        'tracking'\n                    ]\"\n                    [display_column]=\"[\n                        'Requester',\n                        'Asset',\n                        'Date',\n                        'Time',\n                        'Floor',\n                        'Location',\n                        'Approval',\n                        'Tracking'\n                    ]\"\n                    [column_size]=\"[\n                        'flex',\n                        '12r',\n                        '',\n                        '9.5r',\n                        '6r',\n                        '12r',\n                        '10r',\n                        '10r'\n                    ]\"\n                    [template]=\"{\n                        user: user_template,\n                        assets: assets_template,\n                        date: date_template,\n                        period: period_template,\n                        approval: approval_template,\n                        tracking: tracking_template,\n                        zones: level_template,\n                    }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching asset requests'\n                            : 'There are no asset requests for the currently selected date.'\n                    \"\n                    (row_clicked)=\"request = $event\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #user_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2\">\n                <a-user-avatar [user]=\"{ name: row.user_name }\"></a-user-avatar>\n                <div class=\"flex-1\">{{ row.user_name }}</div>\n            </div>\n        </ng-template>\n        <ng-template #assets_template let-row=\"row\">\n            <div class=\"flex flex-col\">\n                <div *ngFor=\"let asset of row.extension_data?.assets || []\">\n                    {{ asset.amount || 1 }}× {{ asset.name }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{ row.date | date: 'mediumDate' }}\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ level(data)?.display_name || 'N/A' }}\n        </ng-template>\n        <ng-template #period_template let-row=\"row\">\n            {{ row.date | date: 'shortTime' }} &ndash;\n            {{ row.date + row.duration * 60 * 1000 | date: 'shortTime' }}\n        </ng-template>\n        <ng-template #approval_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2\"\n                [class.bg-green-600]=\"row.status === 'approved'\"\n                [class.bg-red-600]=\"row.status === 'declined'\"\n                [class.bg-yellow-400]=\"row.status === 'tentative'\"\n                [matMenuTriggerFor]=\"menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <app-icon\n                    class=\"text-xl\"\n                    [class.text-green-600]=\"row.status === 'approved'\"\n                    [class.text-red-600]=\"row.status === 'declined'\"\n                    [class.text-yellow-400]=\"row.status === 'tentative'\"\n                >\n                    {{\n                        row.status === 'approved'\n                            ? 'done'\n                            : row.status === 'declined'\n                            ? 'close'\n                            : 'warning'\n                    }}\n                </app-icon>\n                <div class=\"capitalize flex-1\">{{ row.status }}</div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setStatus(row, 'approved')\">\n                    Approve\n                </button>\n                <button mat-menu-item (click)=\"setStatus(row, 'declined')\">\n                    Decline\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{\n                        (row.extension_data?.tracking | splitjoin) ||\n                            'In Storage'\n                    }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n        <asset-request-details [(request)]=\"request\"></asset-request-details>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetRequestListComponent extends AsyncHandler {\n    public readonly requests = this._state.filtered_requests;\n    public readonly filters = this._state.options;\n    public request;\n\n    public readonly loading: Record<string, boolean> = {};\n\n    public async setStatus(item: any, status: string) {\n        this.loading[item.id] = true;\n        await this._state.setStatus(item, status);\n        this.loading[item.id] = false;\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    public readonly setDate = (date) => this._state.setOptions({ date });\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this.subscription('polling', this._state.startPolling());\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'app-asset-item-list',\n    template: `\n        <div\n            class=\"overflow-auto pb-2 w-full h-full\"\n            *ngIf=\"\n                (categories | async)?.length && (products | async)?._count;\n                else empty_state\n            \"\n        >\n            <ng-container *ngFor=\"let group of categories | async\">\n                <div class=\"\" *ngIf=\"(products | async)[group.id]?.length\">\n                    <h2 class=\"py-2\">\n                        <span class=\"font-medium\">{{ group?.name }}</span>\n                        <span class=\"text-xs\">\n                            ({{ (products | async)[group.id]?.length }} item{{\n                                (products | async)[group.id]?.length === 1\n                                    ? ''\n                                    : 's'\n                            }})\n                        </span>\n                    </h2>\n                    <ng-container [ngSwitch]=\"(options | async).view\">\n                        <ng-container *ngSwitchCase=\"'list'\">\n                            <div\n                                class=\"rounded overflow-hidden bg-white dark:bg-neutral-700 border border-gray-300 divide-y divide-gray-200 dark:border-neutral-500\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"flex items-center text-left space-x-4 p-4 border border-black/0 hover:border-indigo-400 rounded\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        '/asset-manager',\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"h-12 w-12 flex items-center justify-center border border-gray-200 bg-gray-100 dark:border-neutral-500 overflow-hidden\"\n                                    >\n                                        <img\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            [src]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <div\n                                class=\"flex items-center overflow-hidden flex-wrap -mx-2 w-full\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"bg-white dark:bg-neutral-700 rounded shadow w-40 h-44 text-left m-2 border border-gray-200 hover:border-indigo-400 flex flex-col\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        '/asset-manager',\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"w-full h-32 flex items-center justify-center bg-gray-100 overflow-hidden\"\n                                    >\n                                        <img\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            [src]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto w-16\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"border-t border-gray-200 dark:border-neutral-500 w-full px-3 py-1 flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <ng-template #empty_state>\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-4 h-full w-full\"\n            >\n                <p class=\"opacity-40\">\n                    {{\n                        (options | async)?.search\n                            ? 'No matching assets found'\n                            : 'No assets available. Create a new asset with the button below'\n                    }}\n                </p>\n                <a\n                    button\n                    btn\n                    matRipple\n                    *ngIf=\"!(options | async)?.search\"\n                    [routerLink]=\"['/asset-manager', 'manage', 'group']\"\n                >\n                    Create New Product\n                </a>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetItemListComponent {\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n    public readonly categories = this._state.categories;\n    public readonly products = this._state.product_mapping;\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetPurchaseOrder,\n    generateAssetPurchaseOrderForm,\n    saveAssetPurchaseOrder,\n    showAssetPurchaseOrder,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, notifyError, notifySuccess } from '@placeos/common';\nimport { addYears, getUnixTime } from 'date-fns';\n\n@Component({\n    selector: 'asset-purchase-order-form',\n    template: `\n        <div class=\"absolute inset-0 bg-white\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Purchase Order\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"order-number\">\n                            Order Number<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"order-number\"\n                                placeholder=\"Order Number\"\n                                formControlName=\"order_number\"\n                            />\n                            <mat-error>Order number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"invoice-number\"> Invoice Number </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"invoice-number\"\n                                placeholder=\"Invoice Number\"\n                                formControlName=\"invoice_number\"\n                            />\n                            <mat-error>Invoice number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"purchase-date\"> Purchase Date </label>\n                            <a-date-field\n                                name=\"purchase-date\"\n                                [from]=\"from\"\n                                formControlName=\"purchase_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"unit-price\"> Purchase Price </label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <div matPrefix>$</div>\n                                <input\n                                    matInput\n                                    name=\"unit-price\"\n                                    [from]=\"from\"\n                                    formControlName=\"unit_price\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex flex-col space-y-2\">\n                            <label for=\"depreciation-start-date\">\n                                Expected Service Start Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-start-date\"\n                                [from]=\"from\"\n                                formControlName=\"expected_service_start_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex flex-col space-y-2\">\n                            <label for=\"depreciation-end-date\">\n                                Expected Service End Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-end-date\"\n                                formControlName=\"expected_service_end_date\"\n                            ></a-date-field>\n                        </div>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product_id\n                                ? ['/asset-manager', 'view', product_id]\n                                : ['/asset-manager', 'list', 'purchase-orders']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetPurchaseOrderFormComponent extends AsyncHandler {\n    public readonly form = generateAssetPurchaseOrderForm();\n    public loading: string = '';\n    public product_id: string;\n    public item: AssetPurchaseOrder;\n    public readonly from = addYears(Date.now(), -5);\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading purchase order details...';\n                    const asset = await showAssetPurchaseOrder(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load purchase order details.');\n                        this._router.navigate(['/asset-manager']);\n                    }\n                    this.form.patchValue({\n                        ...asset,\n                        order_number: asset.purchase_order_number,\n                        purchase_date: asset.purchase_date * 1000,\n                        expected_service_end_date:\n                            asset.expected_service_end_date * 1000,\n                        expected_service_start_date:\n                            asset.expected_service_start_date * 1000,\n                    });\n                    this.item = asset;\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.product_id = params.get('group_id');\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        data.purchase_date = getUnixTime(data.purchase_date) || null;\n        data.expected_service_start_date =\n            getUnixTime(data.expected_service_start_date) ||\n            this.item?.expected_service_start_date ||\n            null;\n        data.expected_service_end_date =\n            getUnixTime(data.expected_service_end_date) ||\n            this.item?.expected_service_end_date ||\n            null;\n        const item = await saveAssetPurchaseOrder(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving purchase order.: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        notifySuccess('Successfully saved purchase order.');\n        this._state.postChange();\n        if (this.product_id) {\n            this._router.navigate(['/asset-manager', 'view', this.product_id]);\n        } else {\n            this._router.navigate([\n                '/asset-manager',\n                'list',\n                'purchase-orders',\n            ]);\n        }\n        this.loading = '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetCategoryForm,\n    saveAssetCategory,\n} from '@placeos/assets';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { map } from 'rxjs/operators';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'asset-category-form',\n    template: `\n        <header class=\"flex items-center p-2\">\n            <h2 class=\"text-center text-xl font-medium\">\n                {{ form.value.id ? 'Edit' : 'Add' }} Category\n            </h2>\n            <button btn icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex-1 h-1/2 overflow-auto p-2 w-[20rem] max-w-[80vw]\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Name<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Parent Category</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        formControlName=\"parent_category_id\"\n                        placeholder=\"No Parent\"\n                        [disabled]=\"!(categories | async)?.length\"\n                    >\n                        <mat-option\n                            *ngFor=\"let category of categories | async\"\n                            [value]=\"category.id\"\n                        >\n                            {{ category.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n            *ngIf=\"!loading\"\n        >\n            <a btn matRipple class=\"w-32 inverse\" mat-dialog-close>Cancel</a>\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Category...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetCategoryFormComponent {\n    public loading = false;\n    public readonly form = generateAssetCategoryForm();\n    public readonly categories = this._state.categories.pipe(\n        map((list) =>\n            list.filter((_) => _.parent_category_id !== this.form.value.id)\n        )\n    );\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) _data: { category?: AssetCategory },\n        private _state: AssetManagerStateService,\n        private _dialog_ref: MatDialogRef<AssetCategoryFormComponent>\n    ) {\n        if (_data?.category) this.form.patchValue(_data.category);\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data = this.form.value;\n        const item = await saveAssetCategory(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error saving category: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = false;\n        this._dialog_ref.close(item);\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    generateAssetForm,\n    saveAsset,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport { AsyncHandler, getInvalidFields, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'asset-form',\n    template: `\n        <div class=\"absolute inset-0 bg-white\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"serial-number\"> Serial Number </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"serial-number\"\n                                    placeholder=\"Serial Number\"\n                                    formControlName=\"serial_number\"\n                                />\n                                <mat-error>Serial Number is required</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"identifier\">Label/Friendly Name</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"identifier\"\n                                    placeholder=\"Identifier, Asset ID or Barcode\"\n                                    formControlName=\"identifier\"\n                                />\n                                <mat-error>\n                                    Label/Friendly Name is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? ['/asset-manager', 'view', product.id]\n                                : ['/asset-manager']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public loading: string = '';\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate(['/asset-manager']);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate(['/asset-manager']);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAsset(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this._state.postChange();\n        this._router.navigate(['/asset-manager', 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetGroupForm,\n    saveAssetGroup,\n    showAssetGroup,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\nimport { AsyncHandler, notifyError, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-group-form',\n    template: `\n        <div class=\"absolute inset-0 bg-white\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Product\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto p-2\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"name\"\n                                placeholder=\"Name of the product\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Category<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"category_id\"\n                                placeholder=\"Category of Product\"\n                                (click)=\"\n                                    current_category = form.value.category_id\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let category of categories | async\"\n                                    [value]=\"category.id\"\n                                >\n                                    {{ category.name }}\n                                </mat-option>\n                                <mat-option\n                                    (click)=\"newCategory()\"\n                                    class=\"relative\"\n                                >\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon>add</app-icon>\n                                        <p>New Category</p>\n                                    </div>\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>Category is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"brand\">Brand<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"brand\"\n                                placeholder=\"Brand of the product\"\n                                formControlName=\"brand\"\n                            />\n                            <mat-error>Brand is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"description\">Description</label>\n                        <mat-form-field appearance=\"outline\">\n                            <textarea\n                                matInput\n                                name=\"description\"\n                                placeholder=\"Description of the product\"\n                                formControlName=\"description\"\n                            ></textarea>\n                            <mat-error>Description is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"images\">Images</label>\n                        <image-list-field\n                            name=\"images\"\n                            formControlName=\"images\"\n                        ></image-list-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            form.value.id\n                                ? ['/asset-manager', 'view', form.value.id]\n                                : ['/asset-manager', 'list', 'items']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetGroupFormComponent extends AsyncHandler {\n    public readonly form = generateAssetGroupForm();\n    public readonly new_category = new BehaviorSubject<AssetCategory>(null);\n    public readonly categories = combineLatest([\n        this._state.categories,\n        this.new_category,\n    ]).pipe(\n        map(([list, item]) => (item ? unique([...list, item], 'id') : list))\n    );\n    public loading: string = '';\n    public current_category: string;\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError('Unable to load product details.');\n                        this._router.navigate(['/asset-manager']);\n                    }\n                    this.form.patchValue(product);\n                    this.loading = '';\n                }\n            })\n        );\n    }\n\n    public newCategory() {\n        this.form.patchValue({ category_id: this.current_category });\n        const ref = this._dialog.open(AssetCategoryFormComponent);\n        ref.afterClosed().subscribe((category?) => {\n            if (category) {\n                this._state.postChange();\n                this.new_category.next(category);\n                this.form.patchValue({ category_id: category.id });\n            }\n        });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAssetGroup(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving Product: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = '';\n        this._state.postChange();\n        this._router.navigate(['/asset-manager', 'view', item.id]);\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-asset-purchase-order-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div class=\"w-full overflow-auto h-1/2 flex-1\">\n                <custom-table\n                    purchase-orders\n                    class=\"block min-w-[60rem] text-sm\"\n                    [dataSource]=\"purchase_orders\"\n                    [columns]=\"[\n                        'purchase_order_number',\n                        'invoice_number',\n                        'purchase_date',\n                        'expected_service_start_date',\n                        'expected_service_end_date'\n                    ]\"\n                    [display_column]=\"[\n                        'Order Number',\n                        'Invoice Number',\n                        'Purchase Date',\n                        'Depreciation Start',\n                        'Depreciation End'\n                    ]\"\n                    [column_size]=\"['flex', '10r', '12r', '12r', '12r']\"\n                    [template]=\"{\n                    purchase_date: date_template,\n                    expected_service_start_date: date_template,\n                    expected_service_end_date: date_template,\n                }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching purchase orders found.'\n                            : 'There are purchase orders for this building.'\n                    \"\n                    (row_clicked)=\"editOrder($event)\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #date_template let-data=\"data\">\n            <span class=\"opacity-30\" *ngIf=\"!data\">No Date set</span>\n            {{ data ? (data * 1000 | date: 'mediumDate') : '' }}\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetPurchaseOrderListComponent {\n    public readonly now = Date.now();\n    public readonly purchase_orders = combineLatest([\n        this._state.options,\n        this._state.purchase_orders,\n    ]).pipe(\n        map(([{ search }, list]) =>\n            list.filter(\n                (_) =>\n                    !search ||\n                    (_ as any).purchase_order_number\n                        .toLowerCase()\n                        .includes(search.toLowerCase()) ||\n                    _.invoice_number\n                        ?.toLowerCase()\n                        .includes(search.toLowerCase())\n            )\n        )\n    );\n    public readonly filters = this._state.options;\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _router: Router\n    ) {}\n\n    public editOrder(order) {\n        this._router.navigate(['/asset-manager', 'manage', 'purchase-order'], {\n            queryParams: { id: order.id },\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    addAssetsInBulk,\n    generateAssetForm,\n    saveAsset,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport { AsyncHandler, getInvalidFields, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'asset-bulk-form',\n    template: `\n        <div class=\"absolute inset-0 bg-white\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        Bulk {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"count\">\n                                Number of Assets to create\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    [(ngModel)]=\"count\"\n                                    name=\"count\"\n                                    type=\"number\"\n                                    placeholder=\"Number of assets to add\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"identifier\">Label/Friendly Name</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"identifier\"\n                                placeholder=\"Identifier, Asset ID or Barcode\"\n                                formControlName=\"identifier\"\n                            />\n                            <mat-error>\n                                Label/Friendly Name is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? ['/asset-manager', 'view', product.id]\n                                : ['/asset-manager']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetBulkFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public count = 2;\n    public loading: string = '';\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate(['/asset-manager']);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate(['/asset-manager']);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n        this.count = 2;\n    }\n\n    public async save() {\n        if (!this.count && this.count < 1) {\n            return notifyError('Please enter a valid number of assets to add.');\n        }\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await addAssetsInBulk(new Array(this.count).fill(data))\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this._state.postChange();\n        this._router.navigate(['/asset-manager', 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { UIModule } from '../ui/ui.module';\n\nimport { AssetListingComponent } from './asset-listing.component';\nimport { AssetManagerTopbarComponent } from './asset-manager-topbar.component';\nimport { AssetManagerComponent } from './asset-manager.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AssetViewComponent } from './asset-view.component';\nimport { AssetRequestListComponent } from './asset-request-list.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { AssetItemListComponent } from './asset-item-list.component';\nimport { SplitJoinPipe } from './split-join.pipe';\nimport { AssetRequestDetailsComponent } from './asset-request-details.component';\nimport { DurationFormatPipe } from './duration.pipe';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetPurchaseOrderFormComponent } from './asset-purchase-order-form.component';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\nimport { AssetFormComponent } from './asset-form.component';\nimport { AssetGroupFormComponent } from './asset-group-form.component';\nimport { AssetPurchaseOrderListComponent } from './asset-purchase-order-list.component';\nimport { AssetBulkFormComponent } from './asset-bulk-form.component';\n\nconst COMPONENTS = [\n    AssetManagerComponent,\n    AssetManagerTopbarComponent,\n    AssetListingComponent,\n    AssetViewComponent,\n    AssetRequestListComponent,\n    AssetItemListComponent,\n    AssetRequestDetailsComponent,\n    AssetLocationModalComponent,\n    SplitJoinPipe,\n    DurationFormatPipe,\n\n    AssetFormComponent,\n    AssetBulkFormComponent,\n    AssetGroupFormComponent,\n    AssetCategoryFormComponent,\n    AssetPurchaseOrderFormComponent,\n    AssetPurchaseOrderListComponent,\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: AssetManagerComponent,\n        children: [\n            {\n                path: 'list',\n                component: AssetListingComponent,\n                children: [\n                    { path: 'items', component: AssetItemListComponent },\n                    { path: 'requests', component: AssetRequestListComponent },\n                    {\n                        path: 'purchase-orders',\n                        component: AssetPurchaseOrderListComponent,\n                    },\n                    { path: '**', redirectTo: 'requests' },\n                ],\n            },\n            { path: 'view/:id', component: AssetViewComponent },\n            {\n                path: 'manage',\n                children: [\n                    { path: 'group', component: AssetGroupFormComponent },\n                    { path: 'asset', component: AssetFormComponent },\n                    { path: 'asset-bulk', component: AssetBulkFormComponent },\n                    { path: 'category', component: AssetCategoryFormComponent },\n                    {\n                        path: 'purchase-order',\n                        component: AssetPurchaseOrderFormComponent,\n                    },\n                ],\n            },\n            { path: '**', redirectTo: 'list/requests' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        ComponentsModule,\n        MatButtonToggleModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatStepperModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppAssetManangerModule {}\n"],"x_google_ignoreList":[0,1,2]}