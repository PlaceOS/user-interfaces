{"version":3,"file":"apps_concierge_src_app_asset-manager_asset-manager_module_ts.js","mappings":"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","names":["CdkStepperModule","ɵfac","t","ɵmod","i0","type","ɵinj","imports","BidiModule","MatStepperIntl","constructor","this","changes","Subject","optionalLabel","completedLabel","editableLabel","ɵprov","token","factory","providedIn","MAT_STEPPER_INTL_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","MAT_STEPPER_INTL_PROVIDER_FACTORY","parentIntl","MatStepperModule","providers","ErrorStateMatcher","MatCommonModule","CommonModule","PortalModule","MatIconModule","MatRippleModule","_r5","category_r1","$implicit","ctx_r3","edit","ctx_r6","remove","name","AssetCategoryManagementModalComponent_ng_container_12_div_1_Template","id","AssetCategoryManagementModalComponent","_data","_dialog_ref","_this","changed","EventEmitter","list","_ref","_asyncToGenerator","category","deleteAssetCategory","toPromise","emit","_x","apply","arguments","MAT_DIALOG_DATA","i1","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","AssetCategoryManagementModalComponent_ng_container_12_Template","category_r6","AssetCategoryFormComponent_main_4_mat_option_16_Template","ctx_r1","form","tmp_1_0","categories","length","_r8","ctx_r7","save","AssetCategoryFormComponent","_state","loading","generateAssetCategoryForm","pipe","map","filter","_","parent_category_id","value","patchValue","valid","disableClose","data","item","saveAssetCategory","catch","e","notifyError","message","reset","close","i2","AssetCategoryFormComponent_button_3_Template","AssetCategoryFormComponent_main_4_Template","AssetCategoryFormComponent_footer_5_Template","AssetCategoryFormComponent_ng_template_6_Template","_r3","AssetManagerStateService","AsyncHandler","_form","is_new_ui","location","hash","includes","pathname","base_route","_spaces","_org","_dialog","super","_options","BehaviorSubject","view","_change","_poll","_extra_assets","generateAssetForm","_loading","asObservable","options","extra_assets","products","combineLatest","active_building","switchMap","next","getGroupsWithAssets","zone_id","building","tap","shareReplay","purchase_orders","queryAssetPurchaseOrders","requests","initialised","debounceTime","date","bld","queryBookings","zones","period_start","getUnixTime","startOfDay","Date","now","period_end","endOfDay","b","Booking","extension_data","space","find","space_id","filtered_requests","search","toLowerCase","i","user_name","title","location_name","assets","status","tracking","queryAssetCategories","AssetCategory","active_product","active_item","distinctUntilChanged","showGroupFull","active_product_requests","asset","asset_id","filtered_products","product_mapping","category_list","_count","forEach","category_id","unique","group","startPolling","delay","interval","stopPolling","clearInterval","resetForm","manageCategories","ref","open","editCategory","subscription","componentInstance","subscribe","afterClosed","unsub","result","setExtraAssets","setOptions","getValue","postChange","timeout","setStatus","_this2","rejectBooking","approveBooking","setTracking","_this3","updateBooking","deleteActiveProduct","_this4","take","deleteAssetGroup","notifySuccess","postForm","_this5","other_data","drop_keys","key","cleanObject","undefined","saveAsset","i3","Yz7","_c0","ctx_r0","$event","_r4","tmp_0_0","_r6","ctx_r5","AssetManagerTopbarComponent","active","o","inputs","AssetManagerTopbarComponent_a_3_Template","AssetManagerTopbarComponent_mat_button_toggle_group_4_Template","AssetManagerTopbarComponent_button_6_Template","_c1","tmp_4_0","AssetListingComponent","_router","ngOnInit","url","_c2","AssetManagerComponent","attrs","SplitJoinPipe","transform","split","join","Yjl","pure","level","selected","zone","display_name","map_id","selected_feature","data_r8","stopPropagation","row_r9","_r13","row","ctx_r12","ctx_r14","ctx_r15","_r10","AssetLocationModalComponent","updateFeatures","_space","location_id","content","MapPinComponent","z_index","state","levelWithID","AssetLocationModalComponent_div_16_Template","AssetLocationModalComponent_i_map_17_Template","AssetLocationModalComponent_ng_template_18_Template","AssetLocationModalComponent_ng_template_20_Template","AssetLocationModalComponent_ng_template_22_Template","_c3","_c4","_c5","_r2","ctx_r11","description","row_r18","_r20","ctx_r19","removeAsset","row_r21","_r23","ctx_r22","removePurchaseOrder","ctx_r17","AssetViewComponent_div_0_ng_container_48_Template","AssetViewComponent_div_0_ng_template_50_Template","_r25","ctx_r24","viewLocations","AssetViewComponent_div_0_ng_template_80_Template","AssetViewComponent_div_0_ng_template_102_Template","tmp_2_0","tmp_3_0","images","_c6","tmp_6_0","tmp_8_0","_r12","asset_list","tmp_10_0","tmp_11_0","tmp_12_0","_c7","tmp_14_0","_c8","tmp_16_0","_c9","_c10","_c11","_c12","_r14","tmp_22_0","brand","tmp_24_0","tmp_25_0","_c13","_c14","_c15","_c16","_r16","AssetViewComponent_ng_template_4_span_2_Template","data_r26","_r32","ctx_r31","closeTooltip","ctx_r33","deleteAsset","AssetViewComponent_ng_template_6_div_0_Template","AssetViewComponent_ng_template_6_ng_template_1_Template","deleting","_r29","AssetViewComponent","navigate","_tooltip_el","code","currency_code","_route","type_id","req","addMinutes","duration","valueOf","paramMap","params","has","get","first","clearTimeout","resp","openConfirmModal","confirm_text","icon","reason","removeAssetRequests","setTimeout","deleteAssetPurchaseOrder","i4","viewQuery","CustomTooltipComponent","AssetViewComponent_div_0_Template","AssetViewComponent_ng_template_2_Template","AssetViewComponent_ng_template_4_Template","AssetViewComponent_ng_template_6_Template","AssetViewComponent_ng_template_8_Template","AssetViewComponent_ng_template_10_Template","_r1","DurationFormatPipe","short","formatDuration","days","Math","floor","hours","minutes","replace","request","requestChange","ctx_r8","ctx_r9","ctx_r10","user_email","user_phone","user_company","time_format","AssetRequestDetailsComponent","_settings","outputs","AssetRequestDetailsComponent_div_0_Template","row_r14","asset_r17","amount","AssetRequestListComponent_ng_template_13_div_1_Template","row_r15","data_r19","row_r20","ctx_r26","_r22","row_r27","_r31","ctx_r30","ctx_r32","_r28","ctx_r13","AssetRequestListComponent","filters","setDate","features","AssetRequestListComponent_ng_template_11_Template","AssetRequestListComponent_ng_template_13_Template","AssetRequestListComponent_ng_template_15_Template","AssetRequestListComponent_ng_template_17_Template","AssetRequestListComponent_ng_template_19_Template","AssetRequestListComponent_ng_template_21_Template","AssetRequestListComponent_ng_template_23_Template","_r0","tmp_7_0","asset_r10","asset_count","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_div_8_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_Template","group_r5","asset_r19","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_div_8_Template","ctx_r18","_r21","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_Template","AssetItemListComponent_div_0_ng_container_1_div_1_Template","ctx_r4","AssetItemListComponent_div_0_ng_container_1_Template","ctx_r28","AssetItemListComponent_ng_template_5_a_4_Template","AssetItemListComponent","AssetItemListComponent_div_0_Template","AssetItemListComponent_mat_progress_bar_3_Template","AssetItemListComponent_ng_template_5_Template","action_template","AssetPurchaseOrderFormComponent_div_1_h3_42_Template","AssetPurchaseOrderFormComponent_div_1_custom_table_43_Template","from","product_id","ctx_r2","AssetPurchaseOrderFormComponent","generateAssetPurchaseOrderForm","_id","addYears","queryAssets","order_id","groups","queryAssetGroups","limit","asset_type_id","queryParamMap","_ref2","showAssetPurchaseOrder","order_number","purchase_order_number","purchase_date","expected_service_end_date","expected_service_start_date","_x2","saveAssetPurchaseOrder","AssetPurchaseOrderFormComponent_div_1_Template","AssetPurchaseOrderFormComponent_ng_template_2_Template","order_r5","invoice_number","AssetFormComponent_div_1_mat_option_30_Template","AssetFormComponent_div_1_mat_option_32_Template","_r7","product","AssetFormComponent","showAsset","showAssetGroup","getInvalidFields","d","AssetFormComponent_div_1_Template","AssetFormComponent_ng_template_2_Template","category_r4","current_category","AssetGroupFormComponent_div_1_mat_option_21_Template","newCategory","AssetGroupFormComponent","generateAssetGroupForm","new_category","saveAssetGroup","AssetGroupFormComponent_div_1_Template","AssetGroupFormComponent_ng_template_2_Template","AssetPurchaseOrderListComponent_ng_template_4_span_0_Template","data_r2","AssetPurchaseOrderListComponent","editOrder","order","queryParams","AssetPurchaseOrderListComponent_ng_template_4_Template","tmp_5_0","count","AssetBulkFormComponent_div_1_mat_option_28_Template","AssetBulkFormComponent_div_1_mat_option_30_Template","AssetBulkFormComponent","addAssetsInBulk","Array","fill","AssetBulkFormComponent_div_1_Template","AssetBulkFormComponent_ng_template_2_Template","children","path","component","redirectTo","ROUTES","NewAssetManagerComponent","AppAssetManangerModule","oAB","cJS","UIModule","ComponentsModule","MatButtonToggleModule","MatProgressBarModule","MatTabsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/cdk/fesm2022/stepper.mjs","./node_modules/@angular/material/fesm2022/stepper.mjs","./apps/concierge/src/app/asset-manager/asset-category-management-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-category-form.component.ts","./apps/concierge/src/app/asset-manager/asset-manager-state.service.ts","./apps/concierge/src/app/asset-manager/asset-manager-topbar.component.ts","./apps/concierge/src/app/asset-manager/asset-listing.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.component.ts","./apps/concierge/src/app/asset-manager/split-join.pipe.ts","./apps/concierge/src/app/asset-manager/asset-location-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-view.component.ts","./apps/concierge/src/app/asset-manager/duration.pipe.ts","./apps/concierge/src/app/asset-manager/asset-request-details.component.ts","./apps/concierge/src/app/asset-manager/asset-request-list.component.ts","./apps/concierge/src/app/asset-manager/asset-item-list.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-form.component.ts","./apps/concierge/src/app/asset-manager/asset-form.component.ts","./apps/concierge/src/app/asset-manager/asset-group-form.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-list.component.ts","./apps/concierge/src/app/asset-manager/asset-bulk-form.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.module.ts","./apps/concierge/src/app/asset-manager/new-asset-manager.component.ts"],"sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepHeader, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepLabel, selector: \"[cdkStepLabel]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return this._stepperOptions.showError ?? this._customError != null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStep, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\" }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => CdkStepper)]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }]; }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], completed: [{\n                type: Input\n            }], hasError: [{\n                type: Input\n            }] } });\nclass CdkStepper {\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(newIndex) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            this.selected?._markAsInteracted();\n            if (this._selectedIndex !== newIndex &&\n                !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(newIndex);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatStepper` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    constructor(_dir, _changeDetectorRef, _elementRef) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplication. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.setFocusOrigin('keyboard').onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepper, selector: \"[cdkStepper]\", inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepperNext, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkStepperPrevious, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n\nclass CdkStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperModule, declarations: [CdkStep,\n            CdkStepper,\n            CdkStepHeader,\n            CdkStepLabel,\n            CdkStepperNext,\n            CdkStepperPrevious], imports: [BidiModule], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import * as i2$1 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Inject, ContentChild, QueryList, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { mixinColor, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i4 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i2 from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nclass MatStepLabel extends CdkStepLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepLabel, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                }]\n        }] });\n\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n        /** Label that is used to indicate step as completed to screen readers. */\n        this.completedLabel = 'Completed';\n        /** Label that is used to indicate step as editable to screen readers. */\n        this.editableLabel = 'Editable';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nconst _MatStepHeaderBase = mixinColor(class MatStepHeaderBase extends CdkStepHeader {\n    constructor(elementRef) {\n        super(elementRef);\n    }\n}, 'primary');\nclass MatStepHeader extends _MatStepHeaderBase {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional,\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepHeader, deps: [{ token: MatStepperIntl }, { token: i2.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepHeader, selector: \"mat-step-header\", inputs: { color: \"color\", state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, host: { attributes: { \"role\": \"tab\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i3.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"component\", type: i4.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', inputs: ['color'], host: {\n                        'class': 'mat-step-header',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n        }], ctorParameters: function () { return [{ type: MatStepperIntl }, { type: i2.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }] } });\n\nconst DEFAULT_HORIZONTAL_ANIMATION_DURATION = '500ms';\nconst DEFAULT_VERTICAL_ANIMATION_DURATION = '225ms';\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'), {\n            params: { 'animationDuration': DEFAULT_HORIZONTAL_ANIMATION_DURATION },\n        }),\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'), {\n            params: { 'animationDuration': DEFAULT_VERTICAL_ANIMATION_DURATION },\n        }),\n    ]),\n};\n\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIcon, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepperIcon, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepContent, selector: \"ng-template[matStepContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n        /** Content for step label given by `<ng-template matStepLabel>`. */\n        // We need an initializer here to avoid a TS error.\n        this.stepLabel = undefined;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStep, deps: [{ token: forwardRef(() => MatStepper) }, { token: i1.ErrorStateMatcher, skipSelf: true }, { token: i0.ViewContainerRef }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStep, selector: \"mat-step\", inputs: { color: \"color\" }, providers: [\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i2$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: MatStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatStepper)]\n                }] }, { type: i1.ErrorStateMatcher, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }]; }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\nclass MatStepper extends CdkStepper {\n    /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    constructor(dir, changeDetectorRef, elementRef) {\n        super(dir, changeDetectorRef, elementRef);\n        /** The list of step headers of the steps in the stepper. */\n        // We need an initializer here to avoid a TS error.\n        this._stepHeader = undefined;\n        /** Full list of steps inside the stepper, including inside nested steppers. */\n        // We need an initializer here to avoid a TS error.\n        this._steps = undefined;\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /**\n         * Position of the stepper's header.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.headerPosition = 'top';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        this._animationDuration = '';\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone\n            .pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n    _getAnimationDuration() {\n        if (this.animationDuration) {\n            return this.animationDuration;\n        }\n        return this.orientation === 'horizontal'\n            ? DEFAULT_HORIZONTAL_ANIMATION_DURATION\n            : DEFAULT_VERTICAL_ANIMATION_DURATION;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepper, deps: [{ token: i3$1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepper, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { selectedIndex: \"selectedIndex\", disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\", \"ngSkipHydration\": \"true\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"class.mat-stepper-header-position-bottom\": \"headerPosition === \\\"bottom\\\"\", \"attr.aria-orientation\": \"orientation\" } }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <div class=\\\"mat-horizontal-stepper-wrapper\\\" *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"{\\n              'value': _getAnimationDirection(i),\\n              'params': {'animationDuration': _getAnimationDuration()}\\n            }\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"{\\n                'value': _getAnimationDirection(i),\\n                'params': {'animationDuration': _getAnimationDuration()}\\n              }\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"component\", type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"color\", \"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\"] }], animations: [\n            matStepperAnimations.horizontalStepTransition,\n            matStepperAnimations.verticalStepTransition,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', inputs: ['selectedIndex'], host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                        'ngSkipHydration': 'true',\n                    }, animations: [\n                        matStepperAnimations.horizontalStepTransition,\n                        matStepperAnimations.verticalStepTransition,\n                    ], providers: [{ provide: CdkStepper, useExisting: MatStepper }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <div class=\\\"mat-horizontal-stepper-wrapper\\\" *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"{\\n              'value': _getAnimationDirection(i),\\n              'params': {'animationDuration': _getAnimationDuration()}\\n            }\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"{\\n                'value': _getAnimationDirection(i),\\n                'params': {'animationDuration': _getAnimationDuration()}\\n              }\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i3$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepperNext, selector: \"button[matStepperNext]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatStepperPrevious, selector: \"button[matStepperPrevious]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n\nclass MatStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperModule, declarations: [MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent], imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule], exports: [MatCommonModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CommonModule,\n                        PortalModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    declarations: [\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n","import { Component, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { AssetCategory, deleteAssetCategory } from '@placeos/assets';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'asset-category-management-modal',\n    template: `\n        <header>\n            <h2>Manage Categories</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-y-auto min-w-[20rem] divide-y divide-gray-200 max-h-[65vh]\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"flex items-center justify-center space-x-2 w-[calc(100%-1rem)] m-2\"\n                (click)=\"edit()\"\n            >\n                <div class=\"truncate\">New Category</div>\n                <app-icon>add</app-icon>\n            </button>\n            <ng-container *ngFor=\"let category of list | async\">\n                <div\n                    class=\"flex items-center space-x-2 hover:bg-gray-100 dark:hover:bg-gray-800 p-2\"\n                    *ngIf=\"category.id\"\n                >\n                    <div class=\"flex-1 truncate\">{{ category.name }}</div>\n                    <button btn icon matRipple (click)=\"edit(category)\">\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button btn icon matRipple (click)=\"remove(category)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </ng-container>\n        </main>\n    `,\n    styles: [``],\n})\nexport class AssetCategoryManagementModalComponent {\n    public readonly changed = new EventEmitter();\n    public readonly list = this._data.list;\n    public readonly edit = this._data.edit;\n\n    public readonly remove = async (category: AssetCategory) => {\n        await deleteAssetCategory(category.id).toPromise();\n        this.changed.emit();\n    };\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            list: Observable<AssetCategory[]>;\n            edit: (i?) => any;\n        },\n        private _dialog_ref: MatDialogRef<AssetCategoryManagementModalComponent>\n    ) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetCategoryForm,\n    saveAssetCategory,\n} from '@placeos/assets';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { map } from 'rxjs/operators';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'asset-category-form',\n    template: `\n        <header class=\"flex items-center p-2\">\n            <h2 class=\"text-center text-xl font-medium\">\n                {{ form.value.id ? 'Edit' : 'Add' }} Category\n            </h2>\n            <button btn icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex-1 h-1/2 overflow-auto p-2 w-[20rem] max-w-[80vw]\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Name<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Parent Category</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        formControlName=\"parent_category_id\"\n                        placeholder=\"No Parent\"\n                        [disabled]=\"!(categories | async)?.length\"\n                    >\n                        <mat-option\n                            *ngFor=\"let category of categories | async\"\n                            [value]=\"category.id\"\n                        >\n                            {{ category.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n            *ngIf=\"!loading\"\n        >\n            <a btn matRipple class=\"w-32 inverse\" mat-dialog-close>Cancel</a>\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Category...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetCategoryFormComponent {\n    public loading = false;\n    public readonly form = generateAssetCategoryForm();\n    public readonly categories = this._state.categories.pipe(\n        map((list) =>\n            list.filter((_) => _.parent_category_id !== this.form.value.id)\n        )\n    );\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) _data: { category?: AssetCategory },\n        private _state: AssetManagerStateService,\n        private _dialog_ref: MatDialogRef<AssetCategoryFormComponent>\n    ) {\n        if (_data?.category) this.form.patchValue(_data.category);\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data = this.form.value;\n        const item = await saveAssetCategory(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error saving category: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = false;\n        this._dialog_ref.close(item);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    approveBooking,\n    queryBookings,\n    rejectBooking,\n    updateBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifySuccess,\n    unique,\n} from '@placeos/common';\nimport { SpacesService } from '@placeos/spaces';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n    deleteAssetGroup,\n    generateAssetForm,\n    getGroupsWithAssets,\n    queryAssetCategories,\n    queryAssetPurchaseOrders,\n    saveAsset,\n    showGroupFull,\n} from '@placeos/assets';\nimport { cleanObject } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssetCategoryManagementModalComponent } from './asset-category-management-modal.component';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\n\nexport interface AssetOptions {\n    date?: number;\n    search?: string;\n    sort_by?: string;\n    view: 'grid' | 'list';\n    active_item?: string;\n}\n\nexport interface AssetRequest {\n    id: string;\n    assets: { id: string; name: string; amount?: number }[];\n    date: number;\n    duration: number;\n    user_id: string;\n    user_name: string;\n    location_id: string;\n    location_name: string;\n    location_floor: string;\n    status: 'approved' | 'pending' | 'declined';\n    tracking: 'in_storage' | 'in_transit' | 'at_location' | 'unknown';\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetManagerStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<AssetOptions>({ view: 'grid' });\n    private _change = new BehaviorSubject(0);\n    private _poll = new BehaviorSubject(0);\n    private _extra_assets = new BehaviorSubject<Asset[]>([]);\n    private _form = generateAssetForm();\n    private _loading = new BehaviorSubject(false);\n    /** Whether asset list is loading */\n    public readonly loading = this._loading.asObservable();\n    /** List of options set for the view */\n    public readonly options = this._options.asObservable();\n    /** List of extra assets to display */\n    public readonly extra_assets = this._extra_assets.asObservable();\n    /** List of available assets */\n    public readonly products: Observable<AssetGroup[]> = combineLatest([\n        this._change,\n        this._org.active_building,\n    ]).pipe(\n        switchMap(() => {\n            this._loading.next(true);\n            return getGroupsWithAssets({ zone_id: this._org.building?.id });\n        }),\n        tap((_) => this._loading.next(false)),\n        shareReplay(1)\n    ) as any;\n    /** List of available assets */\n    public readonly purchase_orders: Observable<AssetPurchaseOrder[]> =\n        this._change.pipe(\n            switchMap(() => {\n                this._loading.next(true);\n                return queryAssetPurchaseOrders();\n            }),\n            tap(() => this._loading.next(false)),\n            shareReplay(1)\n        ) as any;\n    /** List of requests made by users for assets */\n    public readonly requests = combineLatest([\n        this._options,\n        this._org.active_building,\n        this._poll,\n        this._change,\n        this._spaces.initialised,\n    ]).pipe(\n        debounceTime(200),\n        switchMap(([{ date }, bld]) =>\n            queryBookings({\n                zones: bld?.id,\n                period_start: getUnixTime(startOfDay(date || Date.now())),\n                period_end: getUnixTime(endOfDay(date || Date.now())),\n                type: 'asset-request',\n            })\n        ),\n        map((_) =>\n            _.map(\n                (b) =>\n                    new Booking({\n                        ...b,\n                        extension_data: {\n                            ...b.extension_data,\n                            space: this._spaces.find(b.extension_data.space_id),\n                        },\n                    })\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Filtered list of asset requests */\n    public readonly filtered_requests = combineLatest([\n        this.requests,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            const search = (options.search || '').toLowerCase();\n            return search\n                ? list.filter(\n                      (i) =>\n                          i.user_name.toLowerCase().includes(search) ||\n                          i.title.toLowerCase().includes(search) ||\n                          i.extension_data.location_name\n                              ?.toLowerCase()\n                              .includes(search) ||\n                          i.extension_data.assets?.find((_) =>\n                              _.name.toLowerCase().includes(search)\n                          ) ||\n                          i.status.includes(search) ||\n                          i.extension_data.tracking?.includes(search)\n                  )\n                : list;\n        })\n    );\n    public readonly categories = combineLatest([\n        this._options,\n        this._change,\n    ]).pipe(\n        switchMap(() => queryAssetCategories()),\n        map((list) => [\n            new AssetCategory({ id: '', name: 'Uncategorised' }),\n            ...list,\n        ]),\n        shareReplay(1)\n    );\n    /** Currently active asset */\n    public readonly active_product = combineLatest([\n        this._options,\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([{ active_item }]) => !!active_item),\n        map(([options, t]) => [options.active_item, t] as any),\n        distinctUntilChanged(),\n        switchMap(([active_item]) =>\n            showGroupFull(active_item, { zone_id: this._org.building.id })\n        ),\n        shareReplay(1)\n    );\n    /** List of requests for the currently active asset */\n    public readonly active_product_requests = this.active_product.pipe(\n        switchMap((item) => {\n            return this.requests.pipe(\n                map((_) =>\n                    _.filter((i) =>\n                        item.assets.find((asset) => asset.id === i.asset_id)\n                    )\n                )\n            );\n        }),\n        map((_) => _.filter((i) => i.status !== 'declined'))\n    );\n    /** list of filtered assets */\n    public readonly filtered_products = combineLatest([\n        this.products,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            options.search\n                ? list.filter((i) =>\n                      i.name\n                          .toLowerCase()\n                          .includes(options.search.toLowerCase())\n                  )\n                : list\n        )\n    );\n    /** Mapping of available assets to categories */\n    public readonly product_mapping = combineLatest([\n        this.filtered_products,\n        this.categories,\n    ]).pipe(\n        map(([products, category_list]) => {\n            const map = { _count: products.length };\n            products.forEach(\n                (item) =>\n                    (item.category_id = category_list.find(\n                        (_) => _.id === item.category_id\n                    )\n                        ? item.category_id\n                        : '')\n            );\n            const categories = unique(products.map((i) => i.category_id));\n            for (const group of categories) {\n                map[group] = products.filter((i) => i.category_id === group);\n            }\n            return map;\n        })\n    );\n\n    public get form() {\n        return this._form;\n    }\n\n    public get is_new_ui() {\n        return (\n            location.hash.includes('new') || location.pathname.includes('new')\n        );\n    }\n\n    public get base_route() {\n        return this.is_new_ui ? '/book/assets/new' : '/book/assets';\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public startPolling(delay = 15 * 1000) {\n        this.interval('polling', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    public resetForm() {\n        this._form = generateAssetForm();\n    }\n\n    public manageCategories() {\n        const ref = this._dialog.open(AssetCategoryManagementModalComponent, {\n            data: { list: this.categories, edit: (i) => this.editCategory(i) },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.changed.subscribe(() =>\n                this._change.next(Date.now())\n            )\n        );\n        ref.afterClosed().subscribe(() => this.unsub('category_modal'));\n    }\n\n    public async editCategory(\n        category: Partial<AssetCategory> = {}\n    ): Promise<AssetCategory | null> {\n        const ref = this._dialog.open(AssetCategoryFormComponent, {\n            data: { category },\n        });\n        const result = await ref.afterClosed().toPromise();\n        if (!result) return null;\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public setExtraAssets(list: Asset[]) {\n        this._extra_assets.next(list);\n    }\n\n    /** Update the set view options */\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public postChange() {\n        this.timeout('change', () => this._change.next(Date.now()), 1000);\n    }\n\n    public async setStatus(item: Booking, status: any) {\n        let result = item;\n        if (status === 'declined') {\n            result = await rejectBooking(item.id).toPromise();\n        } else if (status === 'approved') {\n            result = await approveBooking(item.id).toPromise();\n        }\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async setTracking(item: Booking, tracking: string) {\n        const result = await updateBooking(item.id, {\n            ...item,\n            extension_data: { ...item.extension_data, tracking },\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async deleteActiveProduct() {\n        const item = await this.active_product.pipe(take(1)).toPromise();\n        if (!item?.id) return;\n        await deleteAssetGroup(item.id).toPromise();\n        this._change.next(Date.now());\n        notifySuccess('Successfully deleted asset');\n    }\n\n    public async postForm() {\n        if (!this.form?.valid) return;\n        const data: any = this.form.value;\n        const other_data = { ...data };\n        const drop_keys = [\n            'other_data',\n            'id',\n            'name',\n            'quantity',\n            'category',\n            'purchase_date',\n            'brand',\n            'images',\n        ];\n        for (const key of drop_keys) {\n            delete other_data[key];\n        }\n        data.other_data = cleanObject(other_data, [undefined, null, '']);\n        const asset = await saveAsset(data as any).toPromise();\n        this._change.next(Date.now());\n        notifySuccess(`Successfully ${data.id ? 'updated' : 'created'} asset`);\n        this.resetForm();\n        return asset.id;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-manager-topbar',\n    template: `\n        <div\n            class=\"w-full px-4 py-2 bg-white dark:bg-neutral-700 flex items-center space-x-4\"\n        >\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                [routerLink]=\"[base_route, 'manage', 'group']\"\n            >\n                Add Product\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                *ngIf=\"active === 'purchase-orders'\"\n                [routerLink]=\"[base_route, 'manage', 'purchase-order']\"\n            >\n                Add Purchase Order\n            </a>\n            <mat-button-toggle-group\n                [ngModel]=\"(options | async)?.view\"\n                (ngModelChange)=\"setOptions({ view: $event })\"\n                *ngIf=\"active === 'items'\"\n            >\n                <mat-button-toggle value=\"grid\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_module</app-icon>\n                    </div>\n                </mat-button-toggle>\n                <mat-button-toggle value=\"list\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_list</app-icon>\n                    </div>\n                </mat-button-toggle>\n            </mat-button-toggle-group>\n            <div class=\"flex-1\"></div>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"border border-gray-200\"\n                matTooltip=\"Manage Categories\"\n                (click)=\"manageCategories()\"\n            >\n                <app-icon>list_alt</app-icon>\n            </button>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.25rem]\">\n                <app-icon matPrefix class=\"text-2xl relative top-1 -left-1\">\n                    search\n                </app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(options | async)?.search\"\n                    (ngModelChange)=\"setOptions({ search: $event })\"\n                    placeholder=\"Search products and requests\"\n                />\n            </mat-form-field>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetManagerTopbarComponent {\n    @Input() public active = '';\n\n    public readonly options = this._state.options;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly manageCategories = () => this._state.manageCategories();\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-listing',\n    template: `\n        <asset-manager-topbar [active]=\"active\"></asset-manager-topbar>\n        <div class=\"flex flex-col flex-1 h-1/2 w-full px-4\">\n            <nav mat-tab-nav-bar>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'requests']\"\n                    [routerLinkActive]=\"'active'\"\n                    [active]=\"active === 'requests'\"\n                    (click)=\"active = 'requests'\"\n                >\n                    Requests\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'items']\"\n                    [active]=\"active === 'items'\"\n                    (click)=\"active = 'items'\"\n                >\n                    Products\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'purchase-orders']\"\n                    [active]=\"active === 'purchase-orders'\"\n                    (click)=\"active = 'purchase-orders'\"\n                >\n                    Purchase Orders\n                </a>\n            </nav>\n            <div class=\"flex-1 h-1/2 w-full overflow-visible\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListingComponent {\n    public active = 'requests';\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _router: Router,\n        private _state: AssetManagerStateService\n    ) {}\n\n    public ngOnInit() {\n        this.active = this._router.url.includes('requests')\n            ? 'requests'\n            : this._router.url.includes('items')\n            ? 'items'\n            : 'purchase-orders';\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"relative w-1/2 flex-1 bg-gray-200 dark:bg-neutral-600 overflow-hidden\"\n        >\n            <router-outlet></router-outlet>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class AssetManagerComponent {}\n","import { Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'splitjoin',\n})\nexport class SplitJoinPipe {\n    public transform(\n        value: string,\n        split: string = '_',\n        join: string = ' '\n    ): string {\n        return (value || '').split(split).join(join);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { MapPinComponent } from '@placeos/components';\nimport {\n    AssetManagerStateService,\n    AssetRequest,\n} from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'asset-location-modal',\n    template: `\n        <div class=\"p-6 relative\">\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-4 right-4\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <h2 class=\"font-medium mb-2\">\n                {{ (asset | async)?.name }} in use location:\n                {{ (requests | async)?.length }}\n            </h2>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.5rem] mb-2\">\n                <app-icon matPrefix>search</app-icon>\n                <input matInput placeholder=\"Search...\" />\n            </mat-form-field>\n            <div class=\"flex items-center space-x-4 w-[90vw] text-sm\">\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-gray-300 bg-gray-50 overflow-auto\"\n                >\n                    <custom-table\n                        [dataSource]=\"requests\"\n                        [columns]=\"[\n                            'zones',\n                            'description',\n                            'tracking',\n                            'user_name'\n                        ]\"\n                        [display_column]=\"[\n                            'Level',\n                            'Space',\n                            'Tracking',\n                            'Requestee'\n                        ]\"\n                        [column_size]=\"['4r', 'flex', '10r', '6r']\"\n                        [template]=\"{\n                            tracking: tracking_template,\n                            zones: level_template,\n                        }\"\n                        (row_clicked)=\"selected = $event; updateFeatures()\"\n                    ></custom-table>\n                </div>\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-gray-300 bg-gray-100 relative flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-4 left-4 bg-white px-4 py-2 rounded-3xl border border-gray-300\"\n                        *ngIf=\"selected\"\n                    >\n                        {{ level(selected.zone)?.display_name || 'N/A' }}\n                    </div>\n                    <i-map\n                        *ngIf=\"selected; else empty_state\"\n                        [src]=\"level(selected.zone)?.map_id || ''\"\n                        [styles]=\"{\n                            '#Zones': { display: 'none' },\n                            '#zones': { display: 'none' }\n                        }\"\n                        [features]=\"selected_feature\"\n                    ></i-map>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <p class=\"opacity-30\">\n                Select a space from the list to view map location\n            </p>\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ level(data)?.display_name || 'N/A' }}\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{\n                        (row.extension_data?.tracking | splitjoin) ||\n                            'In Storage'\n                    }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetLocationModalComponent {\n    public readonly asset = this._state.active_product;\n    public readonly requests = this._state.active_product_requests;\n\n    public selected: Booking;\n    public selected_feature;\n\n    public loading = {};\n\n    public async updateFeatures() {\n        const space = await this._space.transform(\n            this.selected.extension_data?.location_id\n        );\n        this.selected_feature = this.selected\n            ? [\n                  {\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      z_index: 99,\n                      data: {\n                          message: `${\n                              space.display_name || space.name\n                          } is here`,\n                      },\n                  },\n              ]\n            : [];\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _space: SpacePipe\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    flatten,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first, map } from 'rxjs/operators';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    Asset,\n    AssetPurchaseOrder,\n    deleteAsset,\n    deleteAssetPurchaseOrder,\n    removeAssetRequests,\n} from '@placeos/assets';\nimport { addMinutes } from 'date-fns';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'asset-view',\n    template: `\n        <div\n            class=\"h-full w-full flex flex-col\"\n            *ngIf=\"!loading && (item | async); else loading_state\"\n        >\n            <div\n                class=\"flex items-center space-x-4 p-2 bg-white border-b border-gray-200\"\n            >\n                <a\n                    btn\n                    matRipple\n                    class=\"inverse\"\n                    [routerLink]=\"[base_route, 'list', 'items']\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-2\">Back</div>\n                    </div>\n                </a>\n                <div class=\"flex items-center space-x-2 font-medium\">\n                    <span>Assets</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.category?.name }}</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.name }}</span>\n                </div>\n            </div>\n            <div class=\"flex items-center\">\n                <div\n                    class=\"bg-white dark:bg-neutral-700 flex-1 w-1/2 h-[22.5rem]\"\n                >\n                    <image-carousel\n                        [images]=\"(item | async)?.images || []\"\n                    ></image-carousel>\n                </div>\n                <div class=\"w-[32rem] h-[22.5rem] px-4 flex flex-col\">\n                    <div\n                        class=\"w-full flex items-center justify-between border-b border-gray-300 dark:border-neutral-500\"\n                    >\n                        <div class=\"font-medium\">\n                            {{ (item | async)?.name }}\n                        </div>\n                        <div class=\"flex items-center text-sm \">\n                            <a\n                                button\n                                btn\n                                matRipple\n                                class=\"clear\"\n                                [routerLink]=\"[base_route, 'manage', 'group']\"\n                                [queryParams]=\"{ id: (item | async)?.id }\"\n                            >\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                    <div class=\"mr-2 underline\">Edit</div>\n                                </div>\n                            </a>\n                            <div class=\"w-px h-4 bg-gray-300\"></div>\n                            <button btn matRipple class=\"clear\">\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                    customTooltip\n                                    [content]=\"delete_tooltip\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                    <div class=\"mr-2 underline\">Delete</div>\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"py-4 w-full flex-1 h-1/2 overflow-auto\">\n                        <ng-container\n                            *ngIf=\"\n                                (item | async)?.description;\n                                else no_desc_state\n                            \"\n                        >\n                            {{\n                                (item | async)?.description ||\n                                    '~No Description~'\n                            }}\n                        </ng-container>\n                        <ng-template #no_desc_state>\n                            <span class=\"opacity-30\">No Description</span>\n                        </ng-template>\n                    </div>\n                    <div\n                        class=\"rounded bg-white dark:bg-neutral-700 shadow border border-gray-300 dark:border-neutral-500 w-full divide-y divide-gray-200 dark:divide-neutral-500\"\n                    >\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                Available:\n                                {{\n                                    (asset_list | async).length -\n                                        (requests | async)?.length || 0\n                                }}\n                            </div>\n                            <!-- <button\n                                btn\n                                matRipple\n                                [disabled]=\"\n                                    (asset_list | async).length -\n                                        (requests | async)?.length ===\n                                    0\n                                \"\n                            >\n                                Assign to Location\n                            </button> -->\n                        </div>\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                In Use:\n                                {{ (requests | async)?.length || 0 }}\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                (click)=\"viewLocations()\"\n                                [disabled]=\"\n                                    (asset_list | async).length -\n                                        (requests | async)?.length !==\n                                    0\n                                \"\n                            >\n                                View Locations\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <mat-tab-group class=\"flex-1 h-px\">\n                <mat-tab label=\"Assets\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">Assets</h3>\n                        <div class=\"flex w-full items-center space-x-2 mb-2\">\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[base_route, 'manage', 'asset']\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Add Asset\n                            </a>\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[\n                                    base_route,\n                                    'manage',\n                                    'asset-bulk'\n                                ]\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Bulk Add Asset\n                            </a>\n                        </div>\n                        <custom-table\n                            asset-view\n                            class=\"w-full block text-sm\"\n                            [dataSource]=\"(asset_list | async) || []\"\n                            [columns]=\"[\n                                'id',\n                                'identifier',\n                                'serial_number',\n                                'actions'\n                            ]\"\n                            [display_column]=\"[\n                                'ID',\n                                'Label/Friendly Name',\n                                'Serial Number',\n                                ' '\n                            ]\"\n                            [column_size]=\"['10r', '14r', '8r', 'flex']\"\n                            [template]=\"{\n                                actions: action_template,\n                            }\"\n                            empty=\"No assets for this product\"\n                        >\n                        </custom-table>\n                        <ng-template #action_template let-row=\"row\">\n                            <div class=\"flex w-full items-center justify-end\">\n                                <a\n                                    btn\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'manage',\n                                        'asset'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: (item | async)?.id\n                                    }\"\n                                    class=\"clear\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                </a>\n                                <button\n                                    btn\n                                    icon\n                                    matRipple\n                                    (click)=\"removeAsset(row)\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Specifications\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">General</h3>\n                        <div\n                            data-table\n                            class=\"bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500\"\n                        >\n                            <div class=\"flex items-center p-2\">\n                                <label>Brand</label>\n                                <div>\n                                    {{ (item | async)?.brand || '~None~' }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Purchase information\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">Purchase Orders</h3>\n                        <a\n                            btn\n                            matRipple\n                            class=\"mb-2\"\n                            [routerLink]=\"[\n                                base_route,\n                                'manage',\n                                'purchase-order'\n                            ]\"\n                            [queryParams]=\"{ group_id: (item | async)?.id }\"\n                        >\n                            Add Purchase Order\n                        </a>\n\n                        <custom-table\n                            asset-view\n                            class=\"w-full block text-sm\"\n                            [dataSource]=\"(item | async)?.purchase_orders || []\"\n                            [columns]=\"[\n                                'purchase_order_number',\n                                'invoice_number',\n                                'expected_service_start_date',\n                                'expected_service_end_date',\n                                'actions'\n                            ]\"\n                            [display_column]=\"[\n                                'Order Number',\n                                'Invoice Number',\n                                'Service Start',\n                                'Service End',\n                                ' '\n                            ]\"\n                            [column_size]=\"['10r', '10r', '10r', '10r', 'flex']\"\n                            [template]=\"{\n                                actions: po_action_template,\n                                expected_service_start_date: date_template,\n                                expected_service_end_date: date_template\n                            }\"\n                            empty=\"No assets for this product\"\n                        >\n                        </custom-table>\n                        <ng-template #po_action_template let-row=\"row\">\n                            <div class=\"flex w-full items-center justify-end\">\n                                <a\n                                    btn\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'manage',\n                                        'purchase-order'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: row?.id\n                                    }\"\n                                    class=\"clear\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                </a>\n                                <button\n                                    btn\n                                    icon\n                                    matRipple\n                                    (click)=\"removePurchaseOrder(row)\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading product details...</p>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-data=\"data\">\n            {{ data * 1000 | date: 'mediumDate' }}\n            <span *ngIf=\"!data\" class=\"opacity-30\"> No Date </span>\n        </ng-template>\n        <ng-template #delete_tooltip>\n            <div\n                class=\"p-4 bg-white dark:bg-neutral-700 rounded my-2 text-center w-[18rem]\"\n                *ngIf=\"!deleting; else delete_loading\"\n            >\n                <p>Are you sure you want to permanently delete this product?</p>\n                <div class=\"flex items-center space-x-2 mt-6\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"inverse flex-1 w-24\"\n                        (click)=\"closeTooltip()\"\n                    >\n                        No\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"error flex-1 w-24\"\n                        (click)=\"deleteAsset()\"\n                    >\n                        Yes, delete\n                    </button>\n                </div>\n            </div>\n            <ng-template #delete_loading>\n                <div\n                    class=\"p-4 bg-white dark:bg-neutral-700 rounded my-2 w-64 h-36 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <p>Deleting product details...</p>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #empty_invoices>\n            <div class=\"p-2 opacity-30\">No purchase orders</div>\n        </ng-template>\n        <ng-template #empty_items>\n            <div class=\"p-2 opacity-30\">No assets</div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [data-table] > div:nth-child(2n) {\n                background: #0001;\n            }\n\n            label {\n                width: 10rem;\n                min-width: 0;\n            }\n        `,\n    ],\n})\nexport class AssetViewComponent extends AsyncHandler {\n    public loading = false;\n    public deleting = false;\n    public readonly item = this._state.active_product;\n    public readonly asset_list = combineLatest([\n        this.item,\n        this._state.extra_assets,\n    ]).pipe(\n        map(([item, assets]) => {\n            if (!item) return [];\n            return unique(\n                [\n                    ...item.assets,\n                    ...assets.filter((_) => _.type_id === item.id),\n                ],\n                'id'\n            );\n        })\n    );\n    public readonly requests = this._state.active_product_requests.pipe(\n        map((req) =>\n            req.filter(\n                (_) =>\n                    _.date <= Date.now() &&\n                    addMinutes(_.date, _.duration).valueOf() >= Date.now()\n            )\n        )\n    );\n\n    @ViewChild(CustomTooltipComponent)\n    public _tooltip_el: CustomTooltipComponent;\n\n    public async deleteAsset() {\n        this.deleting = true;\n        await this._state.deleteActiveProduct();\n        this.deleting = false;\n        this._router.navigate([this._state.base_route, 'list', 'items']);\n        this.closeTooltip();\n    }\n\n    public closeTooltip() {\n        this._tooltip_el?.close();\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _state: AssetManagerStateService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public viewLocations() {\n        this._dialog.open(AssetLocationModalComponent);\n    }\n\n    public ngOnInit() {\n        this.loading = true;\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('id')) {\n                    this._state.setOptions({ active_item: params.get('id') });\n                }\n            })\n        );\n        this.timeout(\n            'no_asset',\n            () => this._router.navigate([this._state.base_route]),\n            1000\n        );\n        this._state.active_product.pipe(first((_) => !!_)).subscribe(() => {\n            this.clearTimeout('no_asset');\n            this.loading = false;\n        });\n    }\n\n    public async removeAsset(asset: Asset) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete asset',\n                content: `Are you sure you want to delete this asset?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting asset...');\n        await deleteAsset(asset.id).toPromise();\n        await removeAssetRequests(asset.id);\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n\n    public async removePurchaseOrder(asset: AssetPurchaseOrder) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete purchase order',\n                content: `Are you sure you want to delete this purchase order?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting purchase order...');\n        await deleteAssetPurchaseOrder(asset.id).toPromise();\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { formatDuration } from 'date-fns';\n\n@Pipe({\n    name: 'duration',\n})\nexport class DurationFormatPipe {\n    public transform(value: number, short = true): string {\n        let duration = formatDuration({\n            days: Math.floor(value / (24 * 60)),\n            hours: Math.floor((value / 60) % 24),\n            minutes: Math.floor(value % 60),\n        });\n        if (!short) return duration;\n        return duration\n            .replace(' day', 'd')\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    AssetManagerStateService,\n    AssetRequest,\n} from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'asset-request-details',\n    template: `\n        <div\n            class=\"fixed inset-0 bg-black/50 z-50\"\n            *ngIf=\"request\"\n            (click)=\"request = null; requestChange.emit(request)\"\n        >\n            <div\n                class=\"absolute inset-y-0 right-0 bg-white dark:bg-neutral-700 w-[480px]\"\n                (click)=\"$event.stopPropagation()\"\n            >\n                <button\n                    icon\n                    matRipple\n                    (click)=\"request = null; requestChange.emit(request)\"\n                    class=\"absolute top-1 right-1\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div\n                    class=\"border-b border-gray-200 dark:border-neutral-500 px-2 py-4 flex space-x-4\"\n                >\n                    <a-user-avatar\n                        [user]=\"{ name: request.user_name }\"\n                        class=\"text-xl\"\n                    ></a-user-avatar>\n                    <div details class=\"space-y-1\">\n                        <div class=\"font-medium\">{{ request.user_name }}</div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>mail</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'mailto:' + request.user_email\"\n                            >\n                                {{ request.user_email || 'staff@place.tech' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>call</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'tel:' + request.user_phone\"\n                            >\n                                {{ request.user_phone || '04 1234 5678' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>work_outline</app-icon>\n                            <div>{{ request.user_company || 'PlaceOS' }}</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"px-3 py-4 relative\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">send</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Asset Requested</div>\n                    </div>\n                    <div class=\"pl-10 flex flex-col mt-1\">\n                        {{ request.title }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">event</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Date For</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'EEEE, MMMM d, y' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">schedule</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Period</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: time_format }} &ndash;\n                        {{\n                            request.date + request.duration * 60 * 1000\n                                | date: time_format\n                        }}\n                        ({{ request.duration | duration }})\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">place</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Floor</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ level(request.zones)?.display_name || 'N/A' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">meeting_room</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Room</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.description }}\n                    </div>\n                    <div class=\"absolute top-4 right-4 text-sm\">\n                        <button\n                            matRipple\n                            class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2 mb-4\"\n                            [class.bg-green-600]=\"request.status === 'approved'\"\n                            [class.bg-red-600]=\"request.status === 'declined'\"\n                            [class.bg-yellow-400]=\"\n                                request.status === 'tentative'\n                            \"\n                            [matMenuTriggerFor]=\"menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <app-icon\n                                class=\"text-xl\"\n                                [class.text-green-600]=\"\n                                    request.status === 'approved'\n                                \"\n                                [class.text-red-600]=\"\n                                    request.status === 'declined'\n                                \"\n                                [class.text-yellow-400]=\"\n                                    request.status === 'tentative'\n                                \"\n                            >\n                                {{\n                                    request.status === 'approved'\n                                        ? 'done'\n                                        : request.status === 'declined'\n                                        ? 'close'\n                                        : 'warning'\n                                }}\n                            </app-icon>\n                            <div class=\"capitalize flex-1\">\n                                {{ request.status }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('approved')\"\n                            >\n                                Approve\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('declined')\"\n                            >\n                                Decline\n                            </button>\n                        </mat-menu>\n                        <button\n                            matRipple\n                            class=\"bg-none w-full flex items-center px-2 py-1 text-left border border-gray-200 dark:border-neutral-700 rounded-none\"\n                            [matMenuTriggerFor]=\"tracking_menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <div class=\"capitalize flex-1\">\n                                {{\n                                    (request.extension_data?.tracking\n                                        | splitjoin) || 'In Storage'\n                                }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_storage')\"\n                            >\n                                In Storage\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_transit')\"\n                            >\n                                In Transit\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('at_location')\"\n                            >\n                                At Location\n                            </button>\n                        </mat-menu>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetRequestDetailsComponent {\n    @Input() public request: any;\n    @Output() public requestChange = new EventEmitter<any>();\n\n    public loading = false;\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public async setStatus(status: string) {\n        this.loading = true;\n        await this._state.setStatus(this.request, status);\n        (this.request as any).status = status;\n        this.loading = false;\n    }\n\n    public async setTracking(state: string) {\n        this.loading = true;\n        await this._state.setTracking(this.request, state);\n        (this.request as any).extension_data.tracking = state;\n        this.loading = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-asset-request-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div\n                class=\"bg-white dark:bg-neutral-700 px-4 border-t border-b border-gray-300 dark:border-neutral-500 flex items-center justify-between\"\n            >\n                <div class=\"opacity-60 text-sm\">\n                    {{ (requests | async)?.length }} asset request{{\n                        (requests | async)?.length === '1' ? '' : 's'\n                    }}\n                </div>\n                <date-options\n                    [date]=\"(filters | async)?.date\"\n                    (dateChange)=\"setDate($event)\"\n                ></date-options>\n            </div>\n            <div class=\"w-full overflow-auto h-1/2 flex-1 p-4\">\n                <custom-table\n                    asset-requests\n                    class=\"block min-w-[82rem] text-sm\"\n                    [dataSource]=\"requests\"\n                    [columns]=\"[\n                        'user',\n                        'title',\n                        'date',\n                        'period',\n                        'zones',\n                        'description',\n                        'approval',\n                        'tracking'\n                    ]\"\n                    [display_column]=\"[\n                        'Requester',\n                        'Asset',\n                        'Date',\n                        'Time',\n                        'Floor',\n                        'Location',\n                        'Approval',\n                        'Tracking'\n                    ]\"\n                    [column_size]=\"[\n                        'flex',\n                        '12r',\n                        '',\n                        '9.5r',\n                        '6r',\n                        '12r',\n                        '10r',\n                        '10r'\n                    ]\"\n                    [template]=\"{\n                        user: user_template,\n                        assets: assets_template,\n                        date: date_template,\n                        period: period_template,\n                        approval: approval_template,\n                        tracking: tracking_template,\n                        zones: level_template,\n                    }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching asset requests'\n                            : 'There are no asset requests for the currently selected date.'\n                    \"\n                    (row_clicked)=\"request = $event\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #user_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2\">\n                <a-user-avatar [user]=\"{ name: row.user_name }\"></a-user-avatar>\n                <div class=\"flex-1\">{{ row.user_name }}</div>\n            </div>\n        </ng-template>\n        <ng-template #assets_template let-row=\"row\">\n            <div class=\"flex flex-col\">\n                <div *ngFor=\"let asset of row.extension_data?.assets || []\">\n                    {{ asset.amount || 1 }}× {{ asset.name }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{ row.date | date: 'mediumDate' }}\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ level(data)?.display_name || 'N/A' }}\n        </ng-template>\n        <ng-template #period_template let-row=\"row\">\n            {{ row.date | date: time_format }} &ndash;\n            {{ row.date + row.duration * 60 * 1000 | date: time_format }}\n        </ng-template>\n        <ng-template #approval_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2\"\n                [class.bg-green-600]=\"row.status === 'approved'\"\n                [class.bg-red-600]=\"row.status === 'declined'\"\n                [class.bg-yellow-400]=\"row.status === 'tentative'\"\n                [matMenuTriggerFor]=\"menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <app-icon\n                    class=\"text-xl\"\n                    [class.text-green-600]=\"row.status === 'approved'\"\n                    [class.text-red-600]=\"row.status === 'declined'\"\n                    [class.text-yellow-400]=\"row.status === 'tentative'\"\n                >\n                    {{\n                        row.status === 'approved'\n                            ? 'done'\n                            : row.status === 'declined'\n                            ? 'close'\n                            : 'warning'\n                    }}\n                </app-icon>\n                <div class=\"capitalize flex-1\">{{ row.status }}</div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setStatus(row, 'approved')\">\n                    Approve\n                </button>\n                <button mat-menu-item (click)=\"setStatus(row, 'declined')\">\n                    Decline\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{\n                        (row.extension_data?.tracking | splitjoin) ||\n                            'In Storage'\n                    }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n        <asset-request-details [(request)]=\"request\"></asset-request-details>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetRequestListComponent extends AsyncHandler {\n    public readonly requests = this._state.filtered_requests;\n    public readonly filters = this._state.options;\n    public request;\n\n    public readonly loading: Record<string, boolean> = {};\n\n    public async setStatus(item: any, status: string) {\n        this.loading[item.id] = true;\n        await this._state.setStatus(item, status);\n        this.loading[item.id] = false;\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    public readonly setDate = (date) => this._state.setOptions({ date });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this.subscription('polling', this._state.startPolling());\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'app-asset-item-list',\n    template: `\n        <div\n            class=\"overflow-auto pb-2 w-full h-full\"\n            *ngIf=\"\n                (categories | async)?.length && (products | async)?._count;\n                else empty_state\n            \"\n        >\n            <ng-container *ngFor=\"let group of categories | async\">\n                <div class=\"\" *ngIf=\"(products | async)[group.id]?.length\">\n                    <h2 class=\"py-2\">\n                        <span class=\"font-medium\">{{ group?.name }}</span>\n                        <span class=\"text-xs\">\n                            ({{ (products | async)[group.id]?.length }} item{{\n                                (products | async)[group.id]?.length === 1\n                                    ? ''\n                                    : 's'\n                            }})\n                        </span>\n                    </h2>\n                    <ng-container [ngSwitch]=\"(options | async).view\">\n                        <ng-container *ngSwitchCase=\"'list'\">\n                            <div\n                                class=\"rounded overflow-hidden bg-white dark:bg-neutral-700 border border-gray-300 divide-y divide-gray-200 dark:border-neutral-500\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"flex items-center text-left space-x-4 p-4 border border-black/0 hover:border-indigo-400 rounded\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"h-12 w-12 flex items-center justify-center border border-gray-200 bg-gray-100 dark:border-neutral-500 overflow-hidden\"\n                                    >\n                                        <img\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            auth\n                                            [source]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.asset_count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.asset_count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <div\n                                class=\"flex items-center overflow-hidden flex-wrap -mx-2 w-full\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"bg-white dark:bg-neutral-700 rounded shadow w-40 h-44 text-left m-2 border border-gray-200 hover:border-indigo-400 flex flex-col\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"w-full h-32 flex items-center justify-center bg-gray-100 overflow-hidden\"\n                                    >\n                                        <img\n                                            auth\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            [source]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto w-16\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"border-t border-gray-200 dark:border-neutral-500 w-full px-3 py-1 flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.asset_count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.asset_count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <ng-template #empty_state>\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-4 h-full w-full\"\n            >\n                <p class=\"opacity-40\">\n                    {{\n                        (options | async)?.search\n                            ? 'No matching assets found'\n                            : 'No assets available. Create a new asset with the button below'\n                    }}\n                </p>\n                <a\n                    button\n                    btn\n                    matRipple\n                    *ngIf=\"!(options | async)?.search\"\n                    [routerLink]=\"[base_route, 'manage', 'group']\"\n                >\n                    Create New Product\n                </a>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetItemListComponent {\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n    public readonly categories = this._state.categories;\n    public readonly products = this._state.product_mapping;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetPurchaseOrder,\n    generateAssetPurchaseOrderForm,\n    queryAssetGroups,\n    queryAssets,\n    saveAssetPurchaseOrder,\n    showAssetPurchaseOrder,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, notifyError, notifySuccess } from '@placeos/common';\nimport { addYears, getUnixTime } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, shareReplay, switchMap } from 'rxjs/operators';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-purchase-order-form',\n    template: `\n        <div class=\"absolute inset-0 bg-white\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Purchase Order\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"order-number\">\n                            Order Number<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"order-number\"\n                                placeholder=\"Order Number\"\n                                formControlName=\"order_number\"\n                            />\n                            <mat-error>Order number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"invoice-number\"> Invoice Number </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"invoice-number\"\n                                placeholder=\"Invoice Number\"\n                                formControlName=\"invoice_number\"\n                            />\n                            <mat-error>Invoice number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"purchase-date\"> Purchase Date </label>\n                            <a-date-field\n                                name=\"purchase-date\"\n                                [from]=\"from\"\n                                formControlName=\"purchase_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"unit-price\"> Purchase Price </label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <div matPrefix>$</div>\n                                <input\n                                    matInput\n                                    name=\"unit-price\"\n                                    [from]=\"from\"\n                                    formControlName=\"unit_price\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex flex-col space-y-2\">\n                            <label for=\"depreciation-start-date\">\n                                Expected Service Start Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-start-date\"\n                                [from]=\"from\"\n                                formControlName=\"expected_service_start_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex flex-col space-y-2\">\n                            <label for=\"depreciation-end-date\">\n                                Expected Service End Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-end-date\"\n                                formControlName=\"expected_service_end_date\"\n                            ></a-date-field>\n                        </div>\n                    </div>\n                    <h3 *ngIf=\"item?.id\" class=\"font-medium mb-2\">\n                        Associated Assets ({{\n                            (asset_list | async)?.length || '0'\n                        }})\n                    </h3>\n                    <custom-table\n                        asset-view\n                        class=\"w-full block text-sm\"\n                        *ngIf=\"item?.id\"\n                        [dataSource]=\"(asset_list | async) || []\"\n                        [columns]=\"[\n                            'name',\n                            'identifier',\n                            'serial_number',\n                            'actions'\n                        ]\"\n                        [display_column]=\"[\n                            'Name',\n                            'Label/Friendly Name',\n                            'Serial Number',\n                            ' '\n                        ]\"\n                        [column_size]=\"['10r', '11r', '8r', 'flex']\"\n                        [template]=\"{\n                            actions: action_template,\n                        }\"\n                        empty=\"No assets for this purchase order\"\n                    >\n                    </custom-table>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product_id\n                                ? [base_route, 'view', product_id]\n                                : [base_route, 'list', 'purchase-orders']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetPurchaseOrderFormComponent extends AsyncHandler {\n    public readonly form = generateAssetPurchaseOrderForm();\n    public loading: string = '';\n    public product_id: string;\n    public readonly _id = new BehaviorSubject('');\n    public item: AssetPurchaseOrder;\n    public readonly from = addYears(Date.now(), -5);\n    public readonly asset_list = combineLatest([\n        this._id,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!_ && !!bld),\n        switchMap(([id]) => queryAssets({ order_id: id })),\n        switchMap(async (asset_list) => {\n            const groups = await queryAssetGroups({\n                zone_id: this._org.building.id,\n                limit: 500,\n            }).toPromise();\n            return asset_list.map((asset) => ({\n                ...asset,\n                name:\n                    groups.find((_) => _.id === (asset as any).asset_type_id)\n                        ?.name || asset.id,\n            }));\n        }),\n        shareReplay(1)\n    );\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading purchase order details...';\n                    const asset = await showAssetPurchaseOrder(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load purchase order details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue({\n                        ...asset,\n                        order_number: asset.purchase_order_number,\n                        purchase_date: asset.purchase_date * 1000,\n                        expected_service_end_date:\n                            asset.expected_service_end_date * 1000,\n                        expected_service_start_date:\n                            asset.expected_service_start_date * 1000,\n                    });\n                    this.item = asset;\n                    this._id.next(asset.id);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.product_id = params.get('group_id');\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        data.purchase_date = getUnixTime(data.purchase_date) || null;\n        data.expected_service_start_date =\n            getUnixTime(data.expected_service_start_date) ||\n            this.item?.expected_service_start_date ||\n            null;\n        data.expected_service_end_date =\n            getUnixTime(data.expected_service_end_date) ||\n            this.item?.expected_service_end_date ||\n            null;\n        const item = await saveAssetPurchaseOrder(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving purchase order.: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        notifySuccess('Successfully saved purchase order.');\n        this._state.postChange();\n        if (this.product_id) {\n            this._router.navigate([this.base_route, 'view', this.product_id]);\n        } else {\n            this._router.navigate([this.base_route, 'list', 'purchase-orders']);\n        }\n        this.loading = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    generateAssetForm,\n    saveAsset,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport {\n    AsyncHandler,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-form',\n    template: `\n        <div class=\"absolute inset-0 bg-white\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"serial-number\"> Serial Number </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"serial-number\"\n                                    placeholder=\"Serial Number\"\n                                    formControlName=\"serial_number\"\n                                />\n                                <mat-error>Serial Number is required</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"identifier\">Label/Friendly Name</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"identifier\"\n                                    placeholder=\"Identifier, Asset ID or Barcode\"\n                                    formControlName=\"identifier\"\n                                />\n                                <mat-error>\n                                    Label/Friendly Name is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"serial-number\">Barcode</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"barcode\"\n                                placeholder=\"Barcode\"\n                                formControlName=\"barcode\"\n                            />\n                            <mat-error>Barcode is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? [base_route, 'view', product.id]\n                                : [base_route]\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public loading: string = '';\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAsset({\n            ...data,\n            zone_id: this._org.building.id,\n        } as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this._state.postChange();\n        this._state.setExtraAssets(\n            [item].map((d) => ({ ...d, type_id: this.product.id }))\n        );\n        notifySuccess('Asset saved successfully.');\n        this._router.navigate([this.base_route, 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetGroupForm,\n    saveAssetGroup,\n    showAssetGroup,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-group-form',\n    template: `\n        <div class=\"absolute inset-0 bg-white\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Product\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto p-2\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"name\"\n                                placeholder=\"Name of the product\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Category<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"category_id\"\n                                placeholder=\"Category of Product\"\n                                (click)=\"\n                                    current_category = form.value.category_id\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let category of categories | async\"\n                                    [value]=\"category.id\"\n                                >\n                                    {{ category.name }}\n                                </mat-option>\n                                <mat-option\n                                    (click)=\"newCategory()\"\n                                    class=\"relative\"\n                                >\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon>add</app-icon>\n                                        <p>New Category</p>\n                                    </div>\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>Category is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"brand\">Brand<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"brand\"\n                                placeholder=\"Brand of the product\"\n                                formControlName=\"brand\"\n                            />\n                            <mat-error>Brand is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"description\">Description</label>\n                        <mat-form-field appearance=\"outline\">\n                            <textarea\n                                matInput\n                                name=\"description\"\n                                placeholder=\"Description of the product\"\n                                formControlName=\"description\"\n                            ></textarea>\n                            <mat-error>Description is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"images\">Images</label>\n                        <image-list-field\n                            name=\"images\"\n                            formControlName=\"images\"\n                        ></image-list-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            form.value.id\n                                ? [base_route, 'view', form.value.id]\n                                : [base_route, 'list', 'items']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetGroupFormComponent extends AsyncHandler {\n    public readonly form = generateAssetGroupForm();\n    public readonly new_category = new BehaviorSubject<AssetCategory>(null);\n    public readonly categories = combineLatest([\n        this._state.categories,\n        this.new_category,\n    ]).pipe(\n        map(([list, item]) => (item ? unique([...list, item], 'id') : list))\n    );\n    public loading: string = '';\n    public current_category: string;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError('Unable to load product details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(product);\n                    this.loading = '';\n                }\n            })\n        );\n    }\n\n    public async newCategory() {\n        this.form.patchValue({ category_id: this.current_category });\n        const category = await this._state.editCategory();\n        if (!category) return;\n        this.new_category.next(category);\n        this.form.patchValue({ category_id: category.id });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAssetGroup(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving Product: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = '';\n        this._state.postChange();\n        this._router.navigate([this.base_route, 'view', item.id]);\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-asset-purchase-order-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div class=\"w-full overflow-auto h-1/2 flex-1 p-4\">\n                <custom-table\n                    purchase-orders\n                    class=\"block min-w-[52rem] text-sm\"\n                    [dataSource]=\"purchase_orders\"\n                    [columns]=\"[\n                        'purchase_order_number',\n                        'invoice_number',\n                        'purchase_date',\n                        'expected_service_start_date',\n                        'expected_service_end_date'\n                    ]\"\n                    [display_column]=\"[\n                        'Order Number',\n                        'Invoice Number',\n                        'Purchase Date',\n                        'Depreciation Start',\n                        'Depreciation End'\n                    ]\"\n                    [column_size]=\"['flex', '10r', '10r', '10r', '10r']\"\n                    [template]=\"{\n                    purchase_date: date_template,\n                    expected_service_start_date: date_template,\n                    expected_service_end_date: date_template,\n                }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching purchase orders found.'\n                            : 'There are purchase orders for this building.'\n                    \"\n                    (row_clicked)=\"editOrder($event)\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #date_template let-data=\"data\">\n            <span class=\"opacity-30\" *ngIf=\"!data\">No Date set</span>\n            {{ data ? (data * 1000 | date: 'mediumDate') : '' }}\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetPurchaseOrderListComponent {\n    public readonly now = Date.now();\n    public readonly purchase_orders = combineLatest([\n        this._state.options,\n        this._state.purchase_orders,\n    ]).pipe(\n        map(([{ search }, list]) =>\n            list.filter(\n                (_) =>\n                    !search ||\n                    (_ as any).purchase_order_number\n                        .toLowerCase()\n                        .includes(search.toLowerCase()) ||\n                    _.invoice_number\n                        ?.toLowerCase()\n                        .includes(search.toLowerCase())\n            )\n        )\n    );\n    public readonly filters = this._state.options;\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _router: Router\n    ) {}\n\n    public editOrder(order) {\n        this._router.navigate(\n            [this._state.base_route, 'manage', 'purchase-order'],\n            {\n                queryParams: { id: order.id },\n            }\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    addAssetsInBulk,\n    generateAssetForm,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport {\n    AsyncHandler,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-bulk-form',\n    template: `\n        <div class=\"absolute inset-0 bg-white\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        Bulk {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"count\">\n                                Number of Assets to create\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    [(ngModel)]=\"count\"\n                                    name=\"count\"\n                                    type=\"number\"\n                                    placeholder=\"Number of assets to add\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"identifier\">Label/Friendly Name</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"identifier\"\n                                placeholder=\"Identifier, Asset ID or Barcode\"\n                                formControlName=\"identifier\"\n                            />\n                            <mat-error>\n                                Label/Friendly Name is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-gray-100\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? [base_route, 'view', product.id]\n                                : [base_route]\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetBulkFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public count = 2;\n    public loading: string = '';\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n        this.count = 2;\n    }\n\n    public async save() {\n        if (!this.count && this.count < 1) {\n            return notifyError('Please enter a valid number of assets to add.');\n        }\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const list = await addAssetsInBulk(\n            new Array(this.count).fill({\n                ...data,\n                zone_id: this._org.building.id,\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this._state.setExtraAssets(\n            list.map((d) => ({ ...d, type_id: this.product.id }))\n        );\n        this.form.reset();\n        this._state.postChange();\n        notifySuccess(`Asset added ${list.length} successfully.`);\n        this._router.navigate([this.base_route, 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { UIModule } from '../ui/ui.module';\n\nimport { AssetListingComponent } from './asset-listing.component';\nimport { AssetManagerTopbarComponent } from './asset-manager-topbar.component';\nimport { AssetManagerComponent } from './asset-manager.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AssetViewComponent } from './asset-view.component';\nimport { AssetRequestListComponent } from './asset-request-list.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { AssetItemListComponent } from './asset-item-list.component';\nimport { SplitJoinPipe } from './split-join.pipe';\nimport { AssetRequestDetailsComponent } from './asset-request-details.component';\nimport { DurationFormatPipe } from './duration.pipe';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetPurchaseOrderFormComponent } from './asset-purchase-order-form.component';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\nimport { AssetFormComponent } from './asset-form.component';\nimport { AssetGroupFormComponent } from './asset-group-form.component';\nimport { AssetPurchaseOrderListComponent } from './asset-purchase-order-list.component';\nimport { AssetBulkFormComponent } from './asset-bulk-form.component';\nimport { NewAssetManagerComponent } from './new-asset-manager.component';\nimport { AssetCategoryManagementModalComponent } from './asset-category-management-modal.component';\n\nconst COMPONENTS = [\n    NewAssetManagerComponent,\n    AssetManagerComponent,\n    AssetManagerTopbarComponent,\n    AssetListingComponent,\n    AssetViewComponent,\n    AssetRequestListComponent,\n    AssetItemListComponent,\n    AssetRequestDetailsComponent,\n    AssetLocationModalComponent,\n    SplitJoinPipe,\n    DurationFormatPipe,\n\n    AssetFormComponent,\n    AssetBulkFormComponent,\n    AssetGroupFormComponent,\n    AssetCategoryFormComponent,\n    AssetPurchaseOrderFormComponent,\n    AssetPurchaseOrderListComponent,\n    AssetCategoryManagementModalComponent,\n];\n\nconst children = [\n    {\n        path: 'list',\n        component: AssetListingComponent,\n        children: [\n            { path: 'items', component: AssetItemListComponent },\n            { path: 'requests', component: AssetRequestListComponent },\n            {\n                path: 'purchase-orders',\n                component: AssetPurchaseOrderListComponent,\n            },\n            { path: '**', redirectTo: 'requests' },\n        ],\n    },\n    { path: 'view/:id', component: AssetViewComponent },\n    {\n        path: 'manage',\n        children: [\n            { path: 'group', component: AssetGroupFormComponent },\n            { path: 'asset', component: AssetFormComponent },\n            { path: 'asset-bulk', component: AssetBulkFormComponent },\n            { path: 'category', component: AssetCategoryFormComponent },\n            {\n                path: 'purchase-order',\n                component: AssetPurchaseOrderFormComponent,\n            },\n        ],\n    },\n    { path: '**', redirectTo: 'list/requests' },\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewAssetManagerComponent,\n        children,\n    },\n    {\n        path: '',\n        component: AssetManagerComponent,\n        children,\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        ComponentsModule,\n        MatButtonToggleModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatStepperModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppAssetManangerModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: #fff;\n            }\n        `,\n    ],\n})\nexport class NewAssetManagerComponent {}\n"],"x_google_ignoreList":[0,1]}