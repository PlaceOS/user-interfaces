{"version":3,"file":"apps_concierge_src_app_asset-manager_asset-manager_module_ts.js","mappings":"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","names":["MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatButtonToggleGroup","multi","uniqueIdCounter","MatButtonToggleChange","constructor","source","value","this","_changeDetector","defaultOptions","_vertical","_multiple","_disabled","_controlValueAccessorChangeFn","_onTouched","_name","valueChange","EventEmitter","change","appearance","name","_buttonToggles","forEach","toggle","_markForCheck","vertical","coerceBooleanProperty","selected","_selectionModel","multiple","map","undefined","newValue","_setSelectionByValue","emit","disabled","ngOnInit","SelectionModel","ngAfterContentInit","select","filter","checked","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_emitChangeEvent","Array","isArray","length","event","_syncButtonToggle","isUserInput","deferEvents","o","deselect","a","Promise","resolve","then","_updateModelValue","_isSelected","isSelected","_isPrechecked","_rawValue","some","_clearSelection","currentValue","_selectValue","clear","correspondingOption","find","ɵfac","i0","ɵdir","selectors","s","MatButtonToggle","_MatButtonToggleBase","mixinDisableRipple","toggleGroup","_changeDetectorRef","_elementRef","_focusMonitor","defaultTabIndex","super","_isSingleSelector","_checked","ariaLabelledby","parsedTabIndex","Number","tabIndex","buttonToggleGroup","buttonId","id","_appearance","group","ngAfterViewInit","monitor","ngOnDestroy","stopMonitoring","focus","options","_buttonElement","nativeElement","_onButtonClick","newChecked","i1","ɵcmp","tt","ngContentSelectors","i2","styles","MatButtonToggleModule","ɵmod","ɵinj","MatCommonModule","MatRippleModule","CdkStepHeader","CdkStepLabel","template","nextId","STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","interactedStream","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","editable","optional","completed","_getDefaultCompleted","stepControl","valid","hasError","_getDefaultError","invalid","reset","ngOnChanges","_stateChanged","_markAsInteracted","_showError","showError","CdkStepper","TemplateRef","_dir","_destroyed","Subject","steps","QueryList","_sortedHeaders","_linear","_selectedIndex","selectionChange","_orientation","_groupId","linear","selectedIndex","index","newIndex","coerceNumberProperty","_steps","_isValidIndex","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","step","indexOf","orientation","_keyManager","withVerticalOrientation","changes","pipe","startWith","takeUntil","subscribe","notifyOnChanges","_stepHeader","headers","sort","b","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","FocusKeyManager","withWrap","withHomeAndEnd","of","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","destroy","next","complete","min","previous","_getStepLabelId","i","_getStepContentId","_getAnimationDirection","position","_getIndicatorType","state","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","hasModifier","hasModifierKey","keyCode","manager","SPACE","ENTER","onKeydown","preventDefault","slice","control","pending","stepperElement","focusedElement","_getFocusedElementPierceShadowDom","contains","CdkStepperNext","type","CdkStepperPrevious","CdkStepperModule","BidiModule","t","MatStepLabel","MatStepperIntl","optionalLabel","completedLabel","editableLabel","ɵprov","factory","MAT_STEPPER_INTL_PROVIDER","deps","Optional","SkipSelf","useFactory","parentIntl","_MatStepHeaderBase","mixinColor","elementRef","MatStepHeader","_intl","changeDetectorRef","_intlSubscription","unsubscribe","origin","focusVia","_stringLabel","label","_templateLabel","_getHostElement","_getIconContext","active","_getDefaultTextForState","decls","i3","i4","matStepperAnimations","horizontalStepTransition","trigger","style","transform","visibility","transition","animate","params","animationDuration","verticalStepTransition","height","MatStepperIcon","templateRef","MatStepContent","_template","MatStep","stepper","_errorStateMatcher","_viewContainerRef","Subscription","switchMap","_lazyContent","_portal","TemplatePortal","isErrorState","form","MatStepper","ErrorStateMatcher","i2$1","encapsulation","dir","animationDone","labelPosition","headerPosition","_iconOverrides","_animationDone","_animationDuration","nodeName","toLowerCase","test","_icons","distinctUntilChanged","x","y","fromState","toState","_stepIsNavigable","_getAnimationDuration","i3$1","hostVars","changeDetection","MatStepperNext","MatStepperPrevious","MatStepperModule","imports","CommonModule","PortalModule","MatButtonModule","MatIconModule","AssetManagerStateService","BaseClass","_spaces","BehaviorSubject","view","generateAssetForm","_change","_loading","queryAssets","tap","shareReplay","asObservable","_options","combineLatest","_poll","initialised","debounceTime","_","queryBookings","period_start","getUnixTime","startOfDay","Date","now","period_end","endOfDay","Booking","extension_data","space","space_id","requests","list","search","user_name","includes","location_name","assets","status","tracking","active_asset","asset","filtered_assets","categories","unique","category","asset_mapping","Object","keys","_form","startPolling","delay","interval","stopPolling","clearInterval","resetForm","setOptions","getValue","setStatus","item","result","updateBooking","approved","rejected","toPromise","setTracking","clearActiveAsset","deleteActiveAsset","take","deleteAsset","notifySuccess","postForm","data","saveAsset","AssetManagerTopbarComponent","_state","ctx","AssetListingComponent","_router","url","AssetManagerComponent","SplitJoinPipe","split","join","pure","$event","AssetLocationModalComponent","active_asset_requests","updateFeatures","selected_feature","location","map_id","content","MapPinComponent","z_index","message","display_name","loading","AssetViewComponent","_route","_dialog","_org","deleting","navigate","closeTooltip","_tooltip_el","close","code","currency_code","viewLocations","open","subscription","paramMap","has","get","timeout","first","clearTimeout","CustomTooltipComponent","AssetFlowConsumablesComponent","addItem","consumables","patchValue","randomInt","removeItem","AssetFlowDetailsComponent","AssetFlowPurchasesComponent","addInvoice","invoices","removeInvoice","addProperty","purchase_details","removeProperty","AssetFlowSpecsComponent","general_details","AssetFlowComponent","save","catch","notifyError","JSON","stringify","success","DurationFormatPipe","short","duration","formatDuration","days","floor","hours","minutes","replace","AssetRequestDetailsComponent","request","AssetRequestListComponent","filtered_requests","ROUTES","path","component","children","AssetItemListComponent","asset_categories","redirectTo","AppAssetManangerModule","UIModule","ComponentsModule","MatProgressBarModule","MatTabsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2020/button-toggle.mjs","./node_modules/@angular/cdk/fesm2020/stepper.mjs","./node_modules/@angular/material/fesm2020/stepper.mjs","./apps/concierge/src/app/asset-manager/asset-manager-state.service.ts","./apps/concierge/src/app/asset-manager/asset-manager-topbar.component.ts","./apps/concierge/src/app/asset-manager/asset-listing.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.component.ts","./apps/concierge/src/app/asset-manager/split-join.pipe.ts","./apps/concierge/src/app/asset-manager/asset-location-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-view.component.ts","./apps/concierge/src/app/asset-manager/asset-flow-consumables.component.ts","./apps/concierge/src/app/asset-manager/asset-flow-details.component.ts","./apps/concierge/src/app/asset-manager/asset-flow-purchases.component.ts","./apps/concierge/src/app/asset-manager/asset-flow-specs.component.ts","./apps/concierge/src/app/asset-manager/asset-flow.component.ts","./apps/concierge/src/app/asset-manager/duration.pipe.ts","./apps/concierge/src/app/asset-manager/asset-request-details.component.ts","./apps/concierge/src/app/asset-manager/asset-request-list.component.ts","./apps/concierge/src/app/asset-manager/asset-item-list.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.module.ts"],"sourcesContent":["import * as i1 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true,\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by MatButtonToggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The MatButtonToggle that emits the event. */\n    source, \n    /** The value assigned to the MatButtonToggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** `name` attribute for the underlying `input` element. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => {\n                toggle.name = this._name;\n                toggle._markForCheck();\n            });\n        }\n    }\n    /** Whether the toggle group is vertical. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : selected[0] || null;\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => toggle._markForCheck());\n        }\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        const selected = this.selected;\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        const event = new MatButtonToggleChange(source, this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(isUserInput));\n        }\n        else {\n            this._updateModelValue(isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => (toggle.checked = false));\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent();\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n}\nMatButtonToggleGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatButtonToggleGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatButtonToggleGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatButtonToggleGroup, selector: \"mat-button-toggle-group\", inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"attr.aria-disabled\": \"disabled\", \"class.mat-button-toggle-vertical\": \"vertical\", \"class.mat-button-toggle-group-appearance-standard\": \"appearance === \\\"standard\\\"\" }, classAttribute: \"mat-button-toggle-group\" }, providers: [\n        MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n        { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n    ], queries: [{ propertyName: \"_buttonToggles\", predicate: i0.forwardRef(function () { return MatButtonToggle; }), descendants: true }], exportAs: [\"matButtonToggleGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatButtonToggleGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-button-toggle-group',\n                    providers: [\n                        MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                        { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                    ],\n                    host: {\n                        'role': 'group',\n                        'class': 'mat-button-toggle-group',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[class.mat-button-toggle-vertical]': 'vertical',\n                        '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"',\n                    },\n                    exportAs: 'matButtonToggleGroup',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { _buttonToggles: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatButtonToggle), {\n                        // Note that this would technically pick up toggles\n                        // from nested groups, but that's not a case that we support.\n                        descendants: true,\n                    }]\n            }], appearance: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], multiple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nconst _MatButtonToggleBase = mixinDisableRipple(class {\n});\n/** Single button inside of a toggle group. */\nclass MatButtonToggle extends _MatButtonToggleBase {\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._isSingleSelector = false;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() {\n        return `${this.id}-button`;\n    }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this._isSingleSelector = group && !group.multiple;\n        this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n        if (this._isSingleSelector) {\n            this.name = group.name;\n        }\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        const newChecked = this._isSingleSelector ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatButtonToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatButtonToggle, deps: [{ token: MAT_BUTTON_TOGGLE_GROUP, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: 'tabindex', attribute: true }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatButtonToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatButtonToggle, selector: \"mat-button-toggle\", inputs: { disableRipple: \"disableRipple\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", name: \"name\", value: \"value\", tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\" }, outputs: { change: \"change\" }, host: { attributes: { \"role\": \"presentation\" }, listeners: { \"focus\": \"focus()\" }, properties: { \"class.mat-button-toggle-standalone\": \"!buttonToggleGroup\", \"class.mat-button-toggle-checked\": \"checked\", \"class.mat-button-toggle-disabled\": \"disabled\", \"class.mat-button-toggle-appearance-standard\": \"appearance === \\\"standard\\\"\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.id\": \"id\", \"attr.name\": \"null\" }, classAttribute: \"mat-button-toggle\" }, viewQueries: [{ propertyName: \"_buttonElement\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matButtonToggle\"], usesInheritance: true, ngImport: i0, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatButtonToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-button-toggle', encapsulation: ViewEncapsulation.None, exportAs: 'matButtonToggle', changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disableRipple'], host: {\n                        '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                        '[class.mat-button-toggle-checked]': 'checked',\n                        '[class.mat-button-toggle-disabled]': 'disabled',\n                        '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                        'class': 'mat-button-toggle',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.name]': 'null',\n                        '(focus)': 'focus()',\n                        'role': 'presentation',\n                    }, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"] }]\n        }], ctorParameters: function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_GROUP]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], _buttonElement: [{\n                type: ViewChild,\n                args: ['button']\n            }], id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatButtonToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatButtonToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatButtonToggleModule, declarations: [MatButtonToggleGroup, MatButtonToggle], imports: [MatCommonModule, MatRippleModule], exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle] });\nMatButtonToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatButtonToggleModule, imports: [MatCommonModule, MatRippleModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatButtonToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule],\n                    exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                    declarations: [MatButtonToggleGroup, MatButtonToggle],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkStepHeader, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkStepLabel, selector: \"[cdkStepLabel]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return this._stepperOptions.showError ?? this._customError != null;\n    }\n}\nCdkStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkStep.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkStep, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\" }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => CdkStepper)]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }]; }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], completed: [{\n                type: Input\n            }], hasError: [{\n                type: Input\n            }] } });\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, _elementRef) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(newIndex) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            this.selected?._markAsInteracted();\n            if (this._selectedIndex !== newIndex &&\n                !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(newIndex);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatStepper` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplication. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n}\nCdkStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkStepper, selector: \"[cdkStepper]\", inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n}\nCdkStepperNext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperNext.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkStepperNext, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n}\nCdkStepperPrevious.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperPrevious.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkStepperPrevious, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepperModule, declarations: [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious], imports: [BidiModule], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] });\nCdkStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import * as i2$1 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Inject, ContentChild, QueryList, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i1 from '@angular/material/core';\nimport { mixinColor, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i4 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i2 from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatStepLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatStepLabel, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n        /** Label that is used to indicate step as completed to screen readers. */\n        this.completedLabel = 'Completed';\n        /** Label that is used to indicate step as editable to screen readers. */\n        this.editableLabel = 'Editable';\n    }\n}\nMatStepperIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatStepperIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nconst _MatStepHeaderBase = mixinColor(class MatStepHeaderBase extends CdkStepHeader {\n    constructor(elementRef) {\n        super(elementRef);\n    }\n}, 'primary');\nclass MatStepHeader extends _MatStepHeaderBase {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional,\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepHeader, deps: [{ token: MatStepperIntl }, { token: i2.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatStepHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatStepHeader, selector: \"mat-step-header\", inputs: { color: \"color\", state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, host: { attributes: { \"role\": \"tab\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i3.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"component\", type: i4.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', inputs: ['color'], host: {\n                        'class': 'mat-step-header',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n        }], ctorParameters: function () { return [{ type: MatStepperIntl }, { type: i2.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_HORIZONTAL_ANIMATION_DURATION = '500ms';\nconst DEFAULT_VERTICAL_ANIMATION_DURATION = '225ms';\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'), {\n            params: { 'animationDuration': DEFAULT_HORIZONTAL_ANIMATION_DURATION },\n        }),\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'), {\n            params: { 'animationDuration': DEFAULT_VERTICAL_ANIMATION_DURATION },\n        }),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperIcon, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatStepperIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatStepperIcon, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatStepContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatStepContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatStepContent, selector: \"ng-template[matStepContent]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStep, deps: [{ token: forwardRef(() => MatStepper) }, { token: i1.ErrorStateMatcher, skipSelf: true }, { token: i0.ViewContainerRef }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatStep.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatStep, selector: \"mat-step\", inputs: { color: \"color\" }, providers: [\n        { provide: ErrorStateMatcher, useExisting: MatStep },\n        { provide: CdkStep, useExisting: MatStep },\n    ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i2$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: MatStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatStepper)]\n                }] }, { type: i1.ErrorStateMatcher, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }]; }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\nclass MatStepper extends CdkStepper {\n    constructor(dir, changeDetectorRef, elementRef) {\n        super(dir, changeDetectorRef, elementRef);\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /**\n         * Position of the stepper's header.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.headerPosition = 'top';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        this._animationDuration = '';\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone\n            .pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n    _getAnimationDuration() {\n        if (this.animationDuration) {\n            return this.animationDuration;\n        }\n        return this.orientation === 'horizontal'\n            ? DEFAULT_HORIZONTAL_ANIMATION_DURATION\n            : DEFAULT_VERTICAL_ANIMATION_DURATION;\n    }\n}\nMatStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepper, deps: [{ token: i3$1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nMatStepper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatStepper, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { selectedIndex: \"selectedIndex\", disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"class.mat-stepper-header-position-bottom\": \"headerPosition === \\\"bottom\\\"\", \"attr.aria-orientation\": \"orientation\" } }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <div class=\\\"mat-horizontal-stepper-wrapper\\\" *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"{\\n              'value': _getAnimationDirection(i),\\n              'params': {'animationDuration': _getAnimationDuration()}\\n            }\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"{\\n                'value': _getAnimationDirection(i),\\n                'params': {'animationDuration': _getAnimationDuration()}\\n              }\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"component\", type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"color\", \"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\"] }], animations: [\n        matStepperAnimations.horizontalStepTransition,\n        matStepperAnimations.verticalStepTransition,\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', inputs: ['selectedIndex'], host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                    }, animations: [\n                        matStepperAnimations.horizontalStepTransition,\n                        matStepperAnimations.verticalStepTransition,\n                    ], providers: [{ provide: CdkStepper, useExisting: MatStepper }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <div class=\\\"mat-horizontal-stepper-wrapper\\\" *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"{\\n              'value': _getAnimationDirection(i),\\n              'params': {'animationDuration': _getAnimationDuration()}\\n            }\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"{\\n                'value': _getAnimationDirection(i),\\n                'params': {'animationDuration': _getAnimationDuration()}\\n              }\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i3$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatStepperNext.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatStepperNext, selector: \"button[matStepperNext]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatStepperPrevious.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatStepperPrevious, selector: \"button[matStepperPrevious]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperModule, declarations: [MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon,\n        MatStepContent], imports: [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule], exports: [MatCommonModule,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon,\n        MatStepContent] });\nMatStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CommonModule,\n                        PortalModule,\n                        MatButtonModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    declarations: [\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n","import { Injectable } from '@angular/core';\nimport { Booking, queryBookings, updateBooking } from '@placeos/bookings';\nimport { BaseClass, notifySuccess, unique } from '@placeos/common';\nimport { SpacesService } from '@placeos/spaces';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport {\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport {\n    Asset,\n    deleteAsset,\n    generateAssetForm,\n    queryAssets,\n    saveAsset,\n} from '@placeos/assets';\n\nexport interface AssetOptions {\n    search?: string;\n    sort_by?: string;\n    view: 'grid' | 'list';\n    active_asset?: string;\n}\n\nexport interface AssetRequest {\n    id: string;\n    assets: { id: string; name: string; amount?: number }[];\n    date: number;\n    duration: number;\n    user_id: string;\n    user_name: string;\n    location_id: string;\n    location_name: string;\n    location_floor: string;\n    status: 'approved' | 'pending' | 'declined';\n    tracking: 'in_storage' | 'in_transit' | 'at_location' | 'unknown';\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetManagerStateService extends BaseClass {\n    private _options = new BehaviorSubject<AssetOptions>({ view: 'grid' });\n    private _change = new BehaviorSubject(0);\n    private _poll = new BehaviorSubject(0);\n    private _form = generateAssetForm();\n    private _loading = new BehaviorSubject(false);\n    /** List of available assets */\n    public readonly assets: Observable<Asset[]> = this._change.pipe(\n        switchMap(() => {\n            this._loading.next(true);\n            return queryAssets();\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    ) as any;\n    /** Whether asset list is loading */\n    public readonly loading = this._loading.asObservable();\n    /** List of options set for the view */\n    public readonly options = this._options.asObservable();\n    /** List of requests made by users for assets */\n    public readonly requests = combineLatest([\n        this._poll,\n        this._change,\n        this._spaces.initialised,\n    ]).pipe(\n        debounceTime(200),\n        switchMap((_) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'asset-request',\n            })\n        ),\n        map((_) =>\n            _.map(\n                (b) =>\n                    new Booking({\n                        ...b,\n                        extension_data: {\n                            ...b.extension_data,\n                            space: this._spaces.find(b.extension_data.space_id),\n                        },\n                    })\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Filtered list of asset requests */\n    public readonly filtered_requests = combineLatest([\n        this.requests,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            const search = (options.search || '').toLowerCase();\n            return search\n                ? list.filter(\n                      (i) =>\n                          i.user_name.toLowerCase().includes(search) ||\n                          i.extension_data.location_name\n                              .toLowerCase()\n                              .includes(search) ||\n                          i.extension_data.assets.find((_) =>\n                              _.name.toLowerCase().includes(search)\n                          ) ||\n                          i.status.includes(search) ||\n                          i.extension_data.tracking.includes(search)\n                  )\n                : list;\n        })\n    );\n    /** Currently active asset */\n    public readonly active_asset = combineLatest([\n        this.assets,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            list.find((_) => _.id === options.active_asset)\n        )\n    );\n    /** List of requests for the currently active asset */\n    public readonly active_asset_requests = this.active_asset.pipe(\n        switchMap((asset) => {\n            return this.requests.pipe(\n                map((_) =>\n                    _.filter((i) =>\n                        i.extension_data.assets.find((a) => a.id === asset.id)\n                    )\n                )\n            );\n        }),\n        map((_) => _.filter((i) => i.status !== 'declined'))\n    );\n    /** list of filtered assets */\n    public readonly filtered_assets = combineLatest([\n        this.assets,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            options.search\n                ? list.filter((i) =>\n                      i.name\n                          .toLowerCase()\n                          .includes(options.search.toLowerCase())\n                  )\n                : list\n        )\n    );\n    /** Mapping of available assets to categories */\n    public readonly asset_mapping = this.filtered_assets.pipe(\n        map((_) => {\n            const map = {};\n            const categories = unique(_.map((i) => i.category));\n            for (const group of categories) {\n                map[group] = _.filter((i) => i.category === group);\n            }\n            return map;\n        })\n    );\n    /** List of asset categories */\n    public readonly asset_categories = this.asset_mapping.pipe(\n        map((_) => Object.keys(_ || {}))\n    );\n\n    public get form() {\n        return this._form;\n    }\n\n    constructor(private _spaces: SpacesService) {\n        super();\n    }\n\n    public startPolling(delay = 15 * 1000) {\n        this.interval('polling', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    public resetForm() {\n        this._form = generateAssetForm();\n    }\n\n    /** Update the set view options */\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public async setStatus(item: Booking, status: any) {\n        const result = await updateBooking(item.id, {\n            ...item,\n            approved: status === 'approved',\n            rejected: status === 'declined',\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async setTracking(item: Booking, tracking: string) {\n        const result = await updateBooking(item.id, {\n            ...item,\n            extension_data: { ...item.extension_data, tracking },\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public clearActiveAsset() {\n        this.setOptions({ active_asset: '' });\n        this.resetForm();\n    }\n\n    public async deleteActiveAsset() {\n        const asset = await this.active_asset.pipe(take(1)).toPromise();\n        if (!asset?.id) return;\n        await deleteAsset(asset.id).toPromise();\n        this._change.next(Date.now());\n        notifySuccess('Successfully deleted asset');\n        this.clearActiveAsset();\n    }\n\n    public async postForm() {\n        if (!this.form?.valid) return;\n        const data = this.form.value;\n        const asset = await saveAsset(data as any).toPromise();\n        this._change.next(Date.now());\n        notifySuccess(`Successfully ${data.id ? 'updated' : 'created'} asset`);\n        this.resetForm();\n        return asset.id;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-manager-topbar',\n    template: `\n        <div class=\"w-full px-4 py-2 bg-white dark:bg-neutral-700 flex items-center space-x-4\">\n            <a\n                button\n                mat-button\n                class=\"secondary\"\n                [routerLink]=\"['/asset-manager', 'manage', 'details']\"\n            >\n                Add Asset\n            </a>\n            <mat-button-toggle-group\n                [ngModel]=\"(options | async)?.view\"\n                (ngModelChange)=\"setOptions({ view: $event })\"\n                *ngIf=\"show_actions\"\n            >\n                <mat-button-toggle value=\"grid\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_module</app-icon>\n                    </div>\n                </mat-button-toggle>\n                <mat-button-toggle value=\"list\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_list</app-icon>\n                    </div>\n                </mat-button-toggle>\n            </mat-button-toggle-group>\n            <!-- <button mat-button class=\"clear\" *ngIf=\"show_actions\">\n                <div class=\"flex items-center\">\n                    <div class=\"pl-2\">Sort By</div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button> -->\n            <div class=\"flex-1\"></div>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.25rem]\">\n                <app-icon matPrefix class=\"text-2xl relative top-1 -left-1\"\n                    >search</app-icon\n                >\n                <input\n                    matInput\n                    [ngModel]=\"(options | async)?.search\"\n                    (ngModelChange)=\"setOptions({ search: $event })\"\n                    placeholder=\"Search for an asset or request\"\n                />\n            </mat-form-field>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetManagerTopbarComponent {\n    @Input() public show_actions = true;\n\n    public readonly options = this._state.options;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-listing',\n    template: `\n        <asset-manager-topbar\n            [show_actions]=\"active === 'items'\"\n        ></asset-manager-topbar>\n        <div class=\"flex flex-col flex-1 h-1/2 w-full px-4\">\n            <nav mat-tab-nav-bar>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/asset-manager', 'list', 'requests']\"\n                    [routerLinkActive]=\"'active'\"\n                    [active]=\"active === 'requests'\"\n                    (click)=\"active = 'requests'\"\n                >\n                    Requests\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/asset-manager', 'list', 'items']\"\n                    [active]=\"active === 'items'\"\n                    (click)=\"active = 'items'\"\n                >\n                    Assets\n                </a>\n            </nav>\n            <div class=\"flex-1 h-1/2 w-full overflow-visible\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListingComponent {\n    public active = 'requests';\n\n    constructor(private _router: Router) {}\n\n    public ngOnInit() {\n        this.active = this._router.url.includes('requests')\n            ? 'requests'\n            : 'items';\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-1/2 flex-1 bg-gray-200 dark:bg-neutral-600 overflow-hidden\">\n            <router-outlet></router-outlet>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class AssetManagerComponent {}\n","import { Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'splitjoin',\n})\nexport class SplitJoinPipe {\n    public transform(\n        value: string,\n        split: string = '_',\n        join: string = ' '\n    ): string {\n        return (value || '').split(split).join(join);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { MapPinComponent } from '@placeos/components';\nimport {\n    AssetManagerStateService,\n    AssetRequest,\n} from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-location-modal',\n    template: `\n        <div class=\"p-6 relative\">\n            <button\n                mat-icon-button\n                mat-dialog-close\n                class=\"absolute top-4 right-4\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <h2 class=\"font-medium mb-2\">\n                {{ (asset | async)?.name }} in use location:\n                {{ (requests | async)?.length }}\n            </h2>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.5rem] mb-2\">\n                <app-icon matPrefix>search</app-icon>\n                <input matInput placeholder=\"Search...\" />\n            </mat-form-field>\n            <div class=\"flex items-center space-x-4 w-[90vw] text-sm\">\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-gray-300 bg-gray-50 overflow-auto\"\n                >\n                    <custom-table\n                        [dataSource]=\"requests\"\n                        [columns]=\"[\n                            'location_floor',\n                            'location_name',\n                            'tracking',\n                            'user_name'\n                        ]\"\n                        [display_column]=\"[\n                            'Level',\n                            'Space',\n                            'Tracking',\n                            'Requestee'\n                        ]\"\n                        [column_size]=\"['4r', 'flex', '10r', '6r']\"\n                        [template]=\"{\n                            tracking: tracking_template,\n                            location_floor: level_template,\n                            location_name: space_template\n                        }\"\n                        (row_clicked)=\"selected = $event; updateFeatures()\"\n                    ></custom-table>\n                </div>\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-gray-300 bg-gray-100 relative flex items-center justify-center\"\n                >\n                    <div class=\"absolute top-4 left-4 bg-white px-4 py-2 rounded-3xl border border-gray-300\" *ngIf=\"selected\">\n                        {{selected.extension_data?.space?.level?.display_name || selected.extension_data?.space?.level?.name}}\n                    </div>\n                    <i-map\n                        *ngIf=\"selected; else empty_state\"\n                        [src]=\"selected.extension_data?.space?.level?.map_id\"\n                        [styles]=\"{ '#Zones': { display: 'none' },'#zones': { display: 'none' } }\"\n                        [features]=\"selected_feature\"\n                    ></i-map>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <p class=\"opacity-30\">\n                Select a space from the list to view map location\n            </p>\n        </ng-template>\n        <ng-template #space_template let-row=\"row\">\n            {{\n                row.extension_data?.space?.display_name ||\n                    row.extension_data?.space?.name\n            }}\n        </ng-template>\n        <ng-template #level_template let-row=\"row\">\n            {{\n                row.extension_data?.space?.level?.display_name ||\n                    row.extension_data?.space?.level?.name\n            }}\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{ row.extension_data?.tracking | splitjoin }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetLocationModalComponent {\n    public readonly asset = this._state.active_asset;\n    public readonly requests = this._state.active_asset_requests;\n\n    public selected: Booking;\n    public selected_feature;\n\n    public loading = {};\n\n    public updateFeatures() {\n        const space = this.selected.extension_data?.space || {};\n        this.selected_feature = this.selected\n            ? [{\n                  location: space.map_id,\n                  content: MapPinComponent,\n                  z_index: 99,\n                  data: { message: `${space.display_name || space.name} is here` },\n              }]\n            : [];\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-view',\n    template: `\n        <div\n            class=\"h-full w-full\"\n            *ngIf=\"!loading && (asset | async); else loading_state\"\n        >\n            <div class=\"flex items-center space-x-4 p-2\">\n                <a\n                    button\n                    mat-button\n                    class=\"inverse\"\n                    [routerLink]=\"['/asset-manager', 'list', 'items']\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-2\">Back</div>\n                    </div>\n                </a>\n                <div class=\"flex items-center space-x-2 font-medium\">\n                    <span>Assets</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (asset | async)?.category }}</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (asset | async)?.name }}</span>\n                </div>\n            </div>\n            <div class=\"flex items-center\">\n                <div class=\"bg-white dark:bg-neutral-700 flex-1 w-1/2 h-[22.5rem]\">\n                    <image-carousel\n                        [images]=\"(asset | async)?.images || []\"\n                    ></image-carousel>\n                </div>\n                <div class=\"w-[32rem] h-[22.5rem] px-4 flex flex-col\">\n                    <div\n                        class=\"w-full flex items-center justify-between border-b border-gray-300 dark:border-neutral-500\"\n                    >\n                        <div class=\"font-medium\">\n                            {{ (asset | async)?.name }}\n                        </div>\n                        <div class=\"flex items-center text-sm \">\n                            <a\n                                button\n                                mat-button\n                                class=\"clear\"\n                                [routerLink]=\"[\n                                    '/asset-manager',\n                                    'manage',\n                                    'details'\n                                ]\"\n                            >\n                                <div class=\"flex items-center text-secondary\">\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                    <div class=\"mr-2\">Edit</div>\n                                </div>\n                            </a>\n                            <div class=\"w-px h-4 bg-gray-300\"></div>\n                            <button mat-button class=\"clear\">\n                                <div\n                                    class=\"flex items-center text-secondary\"\n                                    customTooltip\n                                    [content]=\"delete_tooltip\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                    <div class=\"mr-2\">Delete</div>\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"py-4 w-full flex-1 h-1/2 overflow-auto\">\n                        {{ (asset | async)?.description || '~No Description~' }}\n                    </div>\n                    <div\n                        class=\"rounded bg-white dark:bg-neutral-700 shadow border border-gray-300 dark:border-neutral-500 w-full divide-y divide-gray-200 dark:divide-neutral-500\"\n                    >\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                Available:\n                                {{\n                                    (asset | async)?.count -\n                                        (asset | async)?.locations?.length || 0\n                                }}\n                            </div>\n                            <button mat-button>Assign to Location</button>\n                        </div>\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                In Use:\n                                {{ (asset | async)?.locations?.length || 0 }}\n                            </div>\n                            <button mat-button (click)=\"viewLocations()\">\n                                View Locations\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <mat-tab-group>\n                <mat-tab label=\"Specifications\">\n                    <div class=\"p-8\">\n                        <h3 class=\"p-2\">General</h3>\n                        <div\n                            data-table\n                            class=\"bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500\"\n                        >\n                            <div class=\"flex items-center p-2\">\n                                <label>Barcode</label>\n                                <div>\n                                    {{ (asset | async)?.barcode || '~None~' }}\n                                </div>\n                            </div>\n                            <div class=\"flex items-center p-2\">\n                                <label>Brand</label>\n                                <div>\n                                    {{ (asset | async)?.brand || '~None~' }}\n                                </div>\n                            </div>\n                        </div>\n                        <h3\n                            class=\"p-2\"\n                            *ngIf=\"(asset | async)?.general_details?.length\"\n                        >\n                            Other\n                        </h3>\n                        <div\n                            data-table\n                            class=\"bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500\"\n                            *ngIf=\"(asset | async)?.general_details?.length\"\n                        >\n                            <div\n                                class=\"flex items-center\"\n                                *ngFor=\"\n                                    let item of (asset | async)\n                                        ?.general_details || []\n                                \"\n                            >\n                                <label>{{ item.name }}</label>\n                                <div>{{ item.value || 'None' }}</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Purchase information\">\n                    <div class=\"p-8\">\n                        <h3 class=\"p-2\">Timeline</h3>\n                        <div\n                            data-table\n                            class=\"bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500\"\n                        >\n                            <div class=\"flex items-center p-2\">\n                                <label>Purchase Date</label>\n                                <div>\n                                    {{\n                                        (asset | async)?.purchase_date\n                                            | date: 'mediumDate'\n                                    }}\n                                </div>\n                            </div>\n                            <div class=\"flex items-center p-2\">\n                                <label>Good Until</label>\n                                <div>\n                                    {{\n                                        (asset | async)?.good_until\n                                            | date: 'mediumDate'\n                                    }}\n                                </div>\n                            </div>\n                        </div>\n                        <h3 class=\"p-2\">Invoices</h3>\n                        <div\n                            data-table\n                            class=\"bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500\"\n                            *ngIf=\"\n                                (asset | async)?.invoices?.length;\n                                else empty_invoices\n                            \"\n                        >\n                            <div\n                                class=\"flex items-center p-2\"\n                                *ngFor=\"\n                                    let item of (asset | async)?.invoices || []\n                                \"\n                            >\n                                <label>{{ item.name }}</label>\n                                <div>{{ item.price | currency:code }}</div>\n                                <a\n                                    class=\"underline\"\n                                    [href]=\"invoice.url | safe\"\n                                    target=\"_blank\"\n                                    ref=\"noreferer noopener\"\n                                >\n                                    Download\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Consumable assets\">\n                    <div class=\"p-8\">\n                        <h3 class=\"p-2\">Items</h3>\n                        <div\n                            data-table\n                            class=\"bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500\"\n                            *ngIf=\"\n                                (asset | async)?.consumables?.length;\n                                else empty_items\n                            \"\n                        >\n                            <div\n                                class=\"flex items-center p-2\"\n                                *ngFor=\"\n                                    let item of (asset | async)?.consumables ||\n                                        []\n                                \"\n                            >\n                                <label>{{ item.name }}</label>\n                                <div>{{ item.value }}</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading asset details...</p>\n            </div>\n        </ng-template>\n        <ng-template #delete_tooltip>\n            <div\n                class=\"p-4 bg-white dark:bg-neutral-700 rounded my-2 w-64 h-36 text-center\"\n                *ngIf=\"!deleting; else delete_loading\"\n            >\n                <p>Are you sure you want to permanently delete this asset?</p>\n                <div class=\"flex items-center space-x-2 mt-6\">\n                    <button\n                        mat-button\n                        class=\"inverse flex-1\"\n                        (click)=\"closeTooltip()\"\n                    >\n                        No\n                    </button>\n                    <button\n                        mat-button\n                        class=\"error flex-1\"\n                        (click)=\"deleteAsset()\"\n                    >\n                        Yes, delete\n                    </button>\n                </div>\n            </div>\n            <ng-template #delete_loading>\n                <div\n                    class=\"p-4 bg-white dark:bg-neutral-700 rounded my-2 w-64 h-36 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <p>Deleting asset details...</p>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #empty_invoices>\n            <div class=\"p-2 opacity-30\">No Invoices</div>\n        </ng-template>\n        <ng-template #empty_items>\n            <div class=\"p-2 opacity-30\">No consumables</div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [data-table] > div:nth-child(2n) {\n                background: #0001;\n            }\n\n            label {\n                width: 15rem;\n                min-width: 0;\n            }\n        `,\n    ],\n})\nexport class AssetViewComponent extends BaseClass {\n    public loading = false;\n    public deleting = false;\n    public readonly asset = this._state.active_asset;\n\n    @ViewChild(CustomTooltipComponent)\n    public _tooltip_el: CustomTooltipComponent;\n\n    public async deleteAsset() {\n        this.deleting = true;\n        await this._state.deleteActiveAsset();\n        this.deleting = false;\n        this._router.navigate(['/asset-manager', 'list', 'items']);\n        this.closeTooltip();\n    }\n\n    public closeTooltip() {\n        this._tooltip_el?.close();\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _state: AssetManagerStateService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public viewLocations() {\n        this._dialog.open(AssetLocationModalComponent);\n    }\n\n    public ngOnInit() {\n        this.loading = true;\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('id')) {\n                    this._state.setOptions({ active_asset: params.get('id') });\n                }\n            })\n        );\n        this.timeout(\n            'no_asset',\n            () => this._router.navigate(['/asset-mananger']),\n            1000\n        );\n        this._state.active_asset.pipe(first((_) => !!_)).subscribe(() => {\n            this.clearTimeout('no_asset');\n            this.loading = false;\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { randomInt } from '@placeos/common';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-flow-consumables',\n    template: `\n        <div class=\"flex flex-col p-4\" *ngIf=\"form\" [formGroup]=\"form\">\n            <h3>Items</h3>\n            <div\n                class=\"flex items-center hover:bg-gray-50 rounded\"\n                *ngFor=\"\n                    let pair of form.value?.consumables || [];\n                    let i = index\n                \"\n            >\n                <div class=\"flex-1 flex flex-col\">\n                    <label *ngIf=\"i === 0\">ID</label>\n                    <mat-form-field class=\"h-[3.25rem]\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"pair.id\"\n                            placeholder=\"e.g. Item ID\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 flex flex-col ml-4\">\n                    <label *ngIf=\"i === 0\">Name</label>\n                    <mat-form-field class=\"h-[3.25rem]\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"pair.name\"\n                            placeholder=\"e.g. 12345\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        />\n                    </mat-form-field>\n                </div>\n                <button\n                    mat-icon-button\n                    class=\"ml-2 bg-gray-50 border border-gray-200\"\n                    [class.mt-6]=\"i === 0\"\n                    (click)=\"removeItem(pair)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n            <button\n                mat-button\n                class=\"w-full bg-white border border-gray-300 rounded-none text-black mt-4\"\n                (click)=\"addItem()\"\n            >\n                Add Item\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetFlowConsumablesComponent {\n    public readonly form = this._state.form;\n\n    constructor(private _state: AssetManagerStateService) {}\n\n    public addItem() {\n        const { consumables } = this.form?.value || { consumables: [] };\n        this.form.patchValue({\n            consumables: [...consumables, { id: `item-${randomInt(99999)}`, name: '' }],\n        });\n    }\n\n    public removeItem(item: any) {\n        const { consumables } = this.form?.value || { consumables: [] };\n        this.form.patchValue({\n            consumables: consumables.filter((_) => _.id !== item.id),\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-flow-details',\n    template: `\n        <div class=\"flex flex-col p-4\" *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"mb-4 border border-gray-300 p-4 bg-gray-50\">\n                <h3 class=\"mb-4\">Add Asset Images</h3>\n                <div classs=\"flex items-center\">\n                    <upload-list formControlName=\"images\"></upload-list>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-4\">\n                <div class=\"flex-1 flex-col\">\n                    <label>Asset name<span>*</span></label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            formControlName=\"name\"\n                            placeholder=\"e.g. iPad Pro\"\n                        />\n                        <mat-error>Asset name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 flex-col\">\n                    <label>Category<span>*</span></label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select formControlName=\"category\">\n                            <mat-option value=\"Furniture\">Furniture</mat-option>\n                            <mat-option value=\"Technology\">Technology</mat-option>\n                            <mat-option value=\"Stationary\">Stationary</mat-option>\n                        </mat-select>\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-4\">\n                <div class=\"flex-1 flex-col\">\n                    <label>Item Size</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select formControlName=\"size\">\n                            <mat-option value=\"Very Small\">Very Small</mat-option>\n                            <mat-option value=\"Small\">Small</mat-option>\n                            <mat-option value=\"Medium\">Medium</mat-option>\n                            <mat-option value=\"Large\">Large</mat-option>\n                            <mat-option value=\"Very Large\">Very Large</mat-option>\n                        </mat-select>\n                        <mat-error>Item size is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 flex-col\">\n                    <label>Quantity</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            formControlName=\"count\"\n                            type=\"number\"\n                            placeholder=\"1\"\n                        />\n                        <mat-error>Quantity is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <label>Description</label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    formControlName=\"description\"\n                    placeholder=\"e.g. iPad Pro\"\n                ></textarea>\n                <mat-error>Description is required</mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetFlowDetailsComponent {\n    public readonly form = this._state.form;\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { randomInt } from '@placeos/common';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-flow-purchases',\n    template: ` <div class=\"flex flex-col p-4\" *ngIf=\"form\" [formGroup]=\"form\">\n        <h3 class=\"mb-2\">Timeline</h3>\n        <div class=\"flex items-center space-x-4\">\n            <div class=\"flex-1 flex-col\">\n                <label>Purchase Date</label>\n                <a-date-field></a-date-field>\n            </div>\n            <div class=\"flex-1 flex-col\">\n                <label>End of Service Date</label>\n                <a-date-field></a-date-field>\n            </div>\n        </div>\n        <h3 class=\"mb-2\">Purchase Details</h3>\n        <div class=\"flex flex-col\">\n            <div\n                class=\"flex items-center hover:bg-gray-50 rounded\"\n                *ngFor=\"\n                    let invoice of form.value?.invoices || [];\n                    let i = index\n                \"\n            >\n                <div class=\"flex-1 flex flex-col\">\n                    <label *ngIf=\"i === 0\">Purchase Price</label>\n                    <mat-form-field class=\"h-[3.25rem]\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"invoice.price\"\n                            placeholder=\"e.g. $1231.12\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 flex flex-col ml-4\">\n                    <label *ngIf=\"i === 0\">Invoice</label>\n                    <mat-form-field class=\"h-[3.25rem]\" appearance=\"outline\">\n                        <input matInput placeholder=\"e.g. Invoice.pdf\" />\n                    </mat-form-field>\n                </div>\n                <button\n                    mat-icon-button\n                    class=\"ml-2 bg-gray-50 border border-gray-200\"\n                    [class.mt-6]=\"i === 0\"\n                    (click)=\"removeInvoice(invoice)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n            <button\n                mat-button\n                class=\"w-full bg-white border border-gray-300 rounded-none text-black mt-4\"\n                (click)=\"addInvoice()\"\n            >\n                Add Invoice\n            </button>\n        </div>\n        <h3 class=\"my-4\">Other</h3>\n        <div class=\"flex flex-col\">\n            <div\n                class=\"flex items-center hover:bg-gray-50 rounded\"\n                *ngFor=\"\n                    let pair of form.value?.purchase_details || [];\n                    let i = index\n                \"\n            >\n                <div class=\"flex-1 flex flex-col\">\n                    <label *ngIf=\"i === 0\">Name</label>\n                    <mat-form-field class=\"h-[3.25rem]\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"pair.name\"\n                            placeholder=\"e.g. Supplier ID\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 flex flex-col ml-4\">\n                    <label *ngIf=\"i === 0\">Value</label>\n                    <mat-form-field class=\"h-[3.25rem]\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"pair.value\"\n                            placeholder=\"e.g. 12345\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        />\n                    </mat-form-field>\n                </div>\n                <button\n                    mat-icon-button\n                    class=\"ml-2 bg-gray-50 border border-gray-200\"\n                    [class.mt-6]=\"i === 0\"\n                    (click)=\"removeProperty(pair)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n            <button\n                mat-button\n                class=\"w-full bg-white border border-gray-300 rounded-none text-black mt-4\"\n                (click)=\"addProperty()\"\n            >\n                Add Extra Purchase Detail\n            </button>\n        </div>\n    </div>`,\n    styles: [``],\n})\nexport class AssetFlowPurchasesComponent {\n    public readonly form = this._state.form;\n\n    constructor(private _state: AssetManagerStateService) {}\n\n    public addInvoice() {\n        const { invoices } = this.form?.value || { invoices: [] };\n        this.form.patchValue({\n            invoices: [\n                ...invoices,\n                { id: `invoice-${randomInt(99999)}`, name: '', url: '' },\n            ],\n        });\n    }\n\n    public removeInvoice(item: any) {\n        const { invoices } = this.form?.value || { invoices: [] };\n        this.form.patchValue({\n            invoices: invoices.filter((_) => _.id !== item.id),\n        });\n    }\n\n    public addProperty() {\n        const { purchase_details } = this.form?.value || {\n            purchase_details: [],\n        };\n        this.form.patchValue({\n            purchase_details: [\n                ...purchase_details,\n                { id: `prop-${randomInt(99999)}`, name: '', value: '' },\n            ],\n        });\n    }\n\n    public removeProperty(item: any) {\n        const { purchase_details } = this.form?.value || {\n            purchase_details: [],\n        };\n        this.form.patchValue({\n            purchase_details: purchase_details.filter((_) => _.id !== item.id),\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { randomInt } from '@placeos/common';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-flow-specs',\n    template: ` \n    <div class=\"flex flex-col p-4\" *ngIf=\"form\" [formGroup]=\"form\">\n        <h3 class=\"mb-4\">General</h3>\n        <div class=\"flex items-center space-x-4\">\n            <div class=\"flex-1 flex flex-col\">\n                <label>Barcode<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput formControlName=\"barcode\" placeholder=\"e.g. 10001\" />\n                    <mat-error>Barcode is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex-1 flex flex-col\">\n                <label>Brand<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput formControlName=\"brand\" placeholder=\"e.g. Apple\" />\n                    <mat-error>Brand is required</mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        <h3>Other</h3>\n            <div\n                class=\"flex items-center hover:bg-gray-50 rounded\"\n                *ngFor=\"\n                    let pair of form.value?.general_details || [];\n                    let i = index\n                \"\n            >\n                <div class=\"flex-1 flex flex-col\">\n                    <label *ngIf=\"i === 0\">ID</label>\n                    <mat-form-field class=\"h-[3.25rem]\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"pair.id\"\n                            placeholder=\"e.g. Item ID\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 flex flex-col ml-4\">\n                    <label *ngIf=\"i === 0\">Name</label>\n                    <mat-form-field class=\"h-[3.25rem]\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"pair.name\"\n                            placeholder=\"e.g. 12345\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        />\n                    </mat-form-field>\n                </div>\n                <button\n                    mat-icon-button\n                    class=\"ml-2 bg-gray-50 border border-gray-200\"\n                    [class.mt-6]=\"i === 0\"\n                    (click)=\"removeItem(pair)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n            <button\n                mat-button\n                class=\"w-full bg-white border border-gray-300 rounded-none text-black mt-4\"\n                (click)=\"addItem()\"\n            >\n                Add New Field row\n            </button>\n    </div>\n    `,\n    styles: [``],\n})\nexport class AssetFlowSpecsComponent {\n    public readonly form = this._state.form;\n\n    constructor(private _state: AssetManagerStateService) { }\n\n    public addItem() {\n        const { general_details } = this.form?.value || { general_details: [] };\n        this.form.patchValue({\n            general_details: [...general_details, { id: `item-${randomInt(99999)}`, name: '' }],\n        });\n    }\n\n    public removeItem(item: any) {\n        const { general_details } = this.form?.value || { general_details: [] };\n        this.form.patchValue({\n            general_details: general_details.filter((_) => _.id !== item.id),\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { notifyError } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-flow',\n    template: `\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"flex flex-col h-full max-w-full w-[48rem] overflow-hidden px-2 py-4 mx-auto\"\n                *ngIf=\"!success; else success_state\"\n            >\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <a\n                        mat-icon-button\n                        class=\"bg-white rounded-none border border-solid border-gray-300\"\n                        [routerLink]=\"['/asset-manager', 'list']\"\n                        (click)=\"clearActiveAsset()\"\n                    >\n                        <app-icon>arrow_back</app-icon>\n                    </a>\n                    <span>{{ form?.value?.id ? 'Edit' : 'Add' }} Asset</span>\n                </div>\n                <mat-horizontal-stepper\n                    [linear]=\"false\"\n                    labelPosition=\"bottom\"\n                    class=\"flex-1 h-1/2\"\n                >\n                    <mat-step>\n                        <ng-template matStepLabel>Details</ng-template>\n                        <div class=\"bg-white border border-gray-200\">\n                            <div class=\"overflow-auto w-full\">\n                                <asset-flow-details></asset-flow-details>\n                            </div>\n                            <div\n                                class=\"flex items-center justify-end border-t border-gray-300 p-2 space-x-2 w-full\"\n                            >\n                                <a\n                                    button\n                                    mat-button\n                                    class=\"inverse\"\n                                    [routerLink]=\"['/asset-manager', 'list']\"\n                                    (click)=\"clearActiveAsset()\"\n                                >\n                                    Cancel\n                                </a>\n                                <button mat-button matStepperNext>Next</button>\n                            </div>\n                        </div>\n                    </mat-step>\n                    <mat-step>\n                        <ng-template matStepLabel>Specifications</ng-template>\n                        <div class=\"bg-white border border-gray-200\">\n                            <div class=\"overflow-auto w-full\">\n                                <asset-flow-specs></asset-flow-specs>\n                            </div>\n                            <div\n                                class=\"flex items-center justify-end border-t border-gray-200 p-2 space-x-2 w-full\"\n                            >\n                                <button\n                                    mat-button\n                                    matStepperPrevious\n                                    class=\"inverse\"\n                                >\n                                    Back\n                                </button>\n                                <button mat-button matStepperNext>Next</button>\n                            </div>\n                        </div>\n                    </mat-step>\n                    <mat-step>\n                        <ng-template matStepLabel\n                            >Purchase Information</ng-template\n                        >\n                        <div class=\"bg-white border border-gray-200\">\n                            <div class=\"overflow-auto w-full\">\n                                <asset-flow-purchases></asset-flow-purchases>\n                            </div>\n                            <div\n                                class=\"flex items-center justify-end border-t border-gray-200 p-2 space-x-2 w-full\"\n                            >\n                                <button\n                                    mat-button\n                                    matStepperPrevious\n                                    class=\"inverse\"\n                                >\n                                    Back\n                                </button>\n                                <button mat-button matStepperNext>Next</button>\n                            </div>\n                        </div>\n                    </mat-step>\n                    <mat-step>\n                        <ng-template matStepLabel\n                            >Consumable Assets</ng-template\n                        >\n                        <div class=\"bg-white border border-gray-200\">\n                            <div class=\"overflow-auto w-full\">\n                                <asset-flow-consumables></asset-flow-consumables>\n                            </div>\n                            <div\n                                class=\"flex items-center justify-end border-t border-gray-200 p-2 space-x-2 w-full\"\n                            >\n                                <button\n                                    mat-button\n                                    matStepperPrevious\n                                    class=\"inverse\"\n                                >\n                                    Back\n                                </button>\n                                <button mat-button (click)=\"save()\">\n                                    Save\n                                </button>\n                            </div>\n                        </div>\n                    </mat-step>\n                </mat-horizontal-stepper>\n            </div>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving asset...</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center space-y-2\"\n            >\n                <div\n                    class=\"w-[48rem] bg-white rounded p-8 relative space-y-2 flex flex-col items-center\"\n                >\n                    <h2 class=\"text-2xl\">New Asset Created</h2>\n                    <img class=\"w-60\" src=\"assets/asset_success.svg\" />\n                    <p class=\"w-3/5 pb-4 text-center\">\n                        An asset has been created called “{{ data.name }}” and\n                        has been added to the {{ data.category }} category.\n                    </p>\n                    <div class=\"flex items-center justify-center space-x-2\">\n                        <button\n                            mat-button\n                            class=\"inverse w-32\"\n                            (click)=\"success = false\"\n                        >\n                            Add Asset\n                        </button>\n                        <a\n                            button\n                            mat-button\n                            class=\"w-32\"\n                            [routerLink]=\"['/asset-manager', 'view', id]\"\n                        >\n                            View Asset\n                        </a>\n                    </div>\n                    <a\n                        mat-icon-button\n                        class=\"absolute top-1 right-1 !m-0 opacity-30 hover:opacity-100\"\n                        [routerLink]=\"['/asset-manager', 'list']\"\n                    >\n                        <app-icon>close</app-icon>\n                    </a>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-horizontal-stepper {\n                background: none !important;\n            }\n        `,\n    ],\n})\nexport class AssetFlowComponent {\n    public loading = false;\n    public success = false;\n    public data = {};\n    public id = '';\n\n    public readonly form = this._state.form;\n    public readonly clearActiveAsset = () => this._state.clearActiveAsset();\n\n    public async save() {\n        this.loading = true;\n        this.data = this._state.form.value;\n        this.id = await this._state.postForm().catch((_) => {\n            notifyError(`Error saving asset details. ${JSON.stringify(_)}`);\n            throw _;\n        });\n        this.loading = false;\n        if (this.id) this.success = true;\n        else notifyError('Some form fields are invalid');\n    }\n\n    constructor(private _state: AssetManagerStateService) {}\n\n    public async ngOnInit() {\n        const options = await this._state.options.pipe(take(1)).toPromise();\n        if (options.active_asset) {\n            const asset = await this._state.active_asset\n                .pipe(take(1))\n                .toPromise();\n            this._state.form.patchValue(asset);\n        }\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { formatDuration } from 'date-fns';\n\n@Pipe({\n    name: 'duration',\n})\nexport class DurationFormatPipe {\n    public transform(value: number, short = true): string {\n        let duration = formatDuration({\n            days: Math.floor(value / (24 * 60)),\n            hours: Math.floor((value / 60) % 24),\n            minutes: Math.floor(value % 60),\n        });\n        if (!short) return duration;\n        return duration\n            .replace(' day', 'd')\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    AssetManagerStateService,\n    AssetRequest,\n} from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-request-details',\n    template: `\n        <div\n            class=\"fixed inset-0 bg-black/50 z-50\"\n            *ngIf=\"request\"\n            (click)=\"request = null; requestChange.emit(request)\"\n        >\n            <div\n                class=\"absolute inset-y-0 right-0 bg-white dark:bg-neutral-700 w-[480px]\"\n                (click)=\"$event.stopPropagation()\"\n            >\n                <button\n                    mat-icon-button\n                    (click)=\"request = null; requestChange.emit(request)\"\n                    class=\"absolute top-1 right-1\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"border-b border-gray-200 dark:border-neutral-500 px-2 py-4 flex space-x-4\">\n                    <a-user-avatar\n                        [user]=\"{ name: request.user_name }\"\n                        class=\"text-xl\"\n                    ></a-user-avatar>\n                    <div details class=\"space-y-1\">\n                        <div class=\"font-medium\">{{ request.user_name }}</div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>mail</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'mailto:' + request.user_email\"\n                            >\n                                {{ request.user_email || 'staff@place.tech' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>call</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'tel:' + request.user_phone\"\n                            >\n                                {{ request.user_phone || '04 1234 5678' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>work_outline</app-icon>\n                            <div>{{ request.user_company || 'PlaceOS' }}</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"px-3 py-4 relative\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">send</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Assets Requested</div>\n                    </div>\n                    <div class=\"pl-10 flex flex-col mt-1\">\n                        <div\n                            *ngFor=\"\n                                let asset of request.extension_data?.assets ||\n                                    []\n                            \"\n                        >\n                            {{ asset.amount || 1 }}× {{ asset.name }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">event</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Date For</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'mediumDate' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">schedule</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Period</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'shortTime' }} &ndash;\n                        {{\n                            request.date + request.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                        ({{ request.duration | duration }})\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">place</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Floor</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{\n                            request.extension_data?.space?.level\n                                ?.display_name ||\n                                request.extension_data?.space?.level?.name\n                        }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 dark:bg-neutral-600 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">meeting_room</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Room</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{\n                            request.extension_data?.space?.display_name ||\n                                request.extension_data?.space?.name\n                        }}\n                    </div>\n                    <div class=\"absolute top-4 right-4 text-sm\">\n                        <button\n                            matRipple\n                            class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2 mb-4\"\n                            [class.bg-green-600]=\"request.status === 'approved'\"\n                            [class.bg-red-600]=\"request.status === 'declined'\"\n                            [class.bg-yellow-400]=\"\n                                request.status === 'tentative'\n                            \"\n                            [matMenuTriggerFor]=\"menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <app-icon\n                                class=\"text-xl\"\n                                [class.text-green-600]=\"\n                                    request.status === 'approved'\n                                \"\n                                [class.text-red-600]=\"\n                                    request.status === 'declined'\n                                \"\n                                [class.text-yellow-400]=\"\n                                    request.status === 'tentative'\n                                \"\n                            >\n                                {{\n                                    request.status === 'approved'\n                                        ? 'done'\n                                        : request.status === 'declined'\n                                        ? 'close'\n                                        : 'warning'\n                                }}\n                            </app-icon>\n                            <div class=\"capitalize flex-1\">\n                                {{ request.status }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('approved')\"\n                            >\n                                Approve\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('declined')\"\n                            >\n                                Decline\n                            </button>\n                        </mat-menu>\n                        <button\n                            matRipple\n                            class=\"bg-none w-full flex items-center px-2 py-1 text-left border border-gray-200 dark:border-neutral-700 rounded-none\"\n                            [matMenuTriggerFor]=\"tracking_menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <div class=\"capitalize flex-1\">\n                                {{\n                                    request.extension_data?.tracking | splitjoin\n                                }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_storage')\"\n                            >\n                                In Storage\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_transit')\"\n                            >\n                                In Transit\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('at_location')\"\n                            >\n                                At Location\n                            </button>\n                        </mat-menu>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetRequestDetailsComponent {\n    @Input() public request: any;\n    @Output() public requestChange = new EventEmitter<any>();\n\n    public loading = false;\n\n    constructor(private _state: AssetManagerStateService) {}\n\n    public async setStatus(status: string) {\n        this.loading = true;\n        await this._state.setStatus(this.request, status);\n        (this.request as any).status = status;\n        this.loading = false;\n    }\n\n    public async setTracking(state: string) {\n        this.loading = true;\n        await this._state.setTracking(this.request, state);\n        (this.request as any).extension_data.tracking = state;\n        this.loading = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { BaseClass } from '@placeos/common';\nimport {\n    AssetManagerStateService,\n    AssetRequest,\n} from './asset-manager-state.service';\n\n@Component({\n    selector: 'app-asset-request-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div class=\"bg-white dark:bg-neutral-700 p-4 border-t border-b border-gray-300 dark:border-neutral-500\">\n                <div class=\"opacity-60 text-sm\">\n                    {{ (requests | async)?.length }} asset request{{\n                        (requests | async)?.length === '1' ? '' : 's'\n                    }}\n                </div>\n            </div>\n            <div class=\"w-full overflow-auto h-1/2 flex-1\">\n                <custom-table\n                    asset-requests\n                    class=\"block min-w-[82rem] text-sm\"\n                    [dataSource]=\"requests\"\n                    [columns]=\"[\n                        'user',\n                        'assets',\n                        'date',\n                        'period',\n                        'location_floor',\n                        'location_name',\n                        'approval',\n                        'tracking'\n                    ]\"\n                    [display_column]=\"[\n                        'Requester',\n                        'Assets Requested',\n                        'Date for',\n                        'Period',\n                        'Floor',\n                        'Room',\n                        'Approval',\n                        'Tracking'\n                    ]\"\n                    [column_size]=\"[\n                        'flex',\n                        '12r',\n                        '',\n                        '9.5r',\n                        '6r',\n                        '12r',\n                        '10r',\n                        '10r'\n                    ]\"\n                    [template]=\"{\n                        user: user_template,\n                        assets: assets_template,\n                        date: date_template,\n                        period: period_template,\n                        approval: approval_template,\n                        tracking: tracking_template,\n                        location_floor: level_template,\n                        location_name: space_template\n                    }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching asset requests'\n                            : 'There are no asset requests for the currently selected date.'\n                    \"\n                    (row_clicked)=\"request = $event\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #user_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2\">\n                <a-user-avatar [user]=\"{ name: row.user_name }\"></a-user-avatar>\n                <div class=\"flex-1\">{{ row.user_name }}</div>\n            </div>\n        </ng-template>\n        <ng-template #assets_template let-row=\"row\">\n            <div class=\"flex flex-col\">\n                <div *ngFor=\"let asset of row.extension_data?.assets || []\">\n                    {{ asset.amount || 1 }}× {{ asset.name }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{ row.date | date: 'mediumDate' }}\n        </ng-template>\n        <ng-template #space_template let-row=\"row\">\n            {{\n                row.extension_data?.space?.display_name ||\n                    row.extension_data?.space?.name\n            }}\n        </ng-template>\n        <ng-template #level_template let-row=\"row\">\n            {{\n                row.extension_data?.space?.level?.display_name ||\n                    row.extension_data?.space?.level?.name\n            }}\n        </ng-template>\n        <ng-template #period_template let-row=\"row\">\n            {{ row.date | date: 'shortTime' }} &ndash;\n            {{ row.date + row.duration * 60 * 1000 | date: 'shortTime' }}\n        </ng-template>\n        <ng-template #approval_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2\"\n                [class.bg-green-600]=\"row.status === 'approved'\"\n                [class.bg-red-600]=\"row.status === 'declined'\"\n                [class.bg-yellow-400]=\"row.status === 'tentative'\"\n                [matMenuTriggerFor]=\"menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <app-icon\n                    class=\"text-xl\"\n                    [class.text-green-600]=\"row.status === 'approved'\"\n                    [class.text-red-600]=\"row.status === 'declined'\"\n                    [class.text-yellow-400]=\"row.status === 'tentative'\"\n                >\n                    {{\n                        row.status === 'approved'\n                            ? 'done'\n                            : row.status === 'declined'\n                            ? 'close'\n                            : 'warning'\n                    }}\n                </app-icon>\n                <div class=\"capitalize flex-1\">{{ row.status }}</div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setStatus(row, 'approved')\">\n                    Approve\n                </button>\n                <button mat-menu-item (click)=\"setStatus(row, 'declined')\">\n                    Decline\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{ row.extension_data?.tracking | splitjoin }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n        <asset-request-details [(request)]=\"request\"></asset-request-details>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetRequestListComponent extends BaseClass {\n    public readonly requests = this._state.filtered_requests;\n    public readonly filters = this._state.options;\n    public request;\n\n    public readonly loading: Record<string, boolean> = {};\n\n    public async setStatus(item: any, status: string) {\n        this.loading[item.id] = true;\n        await this._state.setStatus(item, status);\n        this.loading[item.id] = false;\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    constructor(private _state: AssetManagerStateService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription('polling', this._state.startPolling());\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'app-asset-item-list',\n    template: `\n        <div\n            class=\"overflow-auto pb-2 w-full h-full\"\n            *ngIf=\"(categories | async)?.length; else empty_state\"\n        >\n            <div class=\"\" *ngFor=\"let group of categories | async\">\n                <h2 class=\"py-2\">\n                    <span class=\"font-medium\">{{ group }}</span>\n                    <span class=\"text-xs\">\n                        ({{ (assets | async)[group]?.length }} item{{\n                            (assets | async)[group]?.length === 1 ? '' : 's'\n                        }})\n                    </span>\n                </h2>\n                <ng-container [ngSwitch]=\"(options | async).view\">\n                    <ng-container *ngSwitchCase=\"'list'\">\n                        <div\n                            class=\"rounded overflow-hidden bg-white dark:bg-neutral-700 border border-gray-300 divide-y divide-gray-200 dark:border-neutral-500\"\n                        >\n                            <a\n                                matRipple\n                                class=\"flex items-center text-left space-x-4 p-4\"\n                                *ngFor=\"let asset of (assets | async)[group]\"\n                                [routerLink]=\"[\n                                    '/asset-manager',\n                                    'view',\n                                    asset.id\n                                ]\"\n                            >\n                                <div\n                                    class=\"h-12 w-12 flex items-center justify-center border border-gray-200 dark:border-neutral-500 p-2\"\n                                >\n                                    <img\n                                        [src]=\"\n                                            asset.images?.length\n                                                ? asset.images[0].url\n                                                : ''\n                                        \"\n                                        class=\"max-w-full max-h-full object-contain\"\n                                    />\n                                </div>\n                                <div>\n                                    <div class=\"truncate\">\n                                        {{ asset.name }}\n                                    </div>\n                                    <div class=\"text-xs opacity-60\">\n                                        In Storage:\n                                        {{\n                                            (asset.count || 0) -\n                                                (asset.locations?.length || 0)\n                                        }}/{{ assets.count || 0 }}\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngSwitchDefault>\n                        <div\n                            class=\"flex items-center overflow-x-auto space-x-4 py-2\"\n                        >\n                            <a\n                                matRipple\n                                class=\"bg-white dark:bg-neutral-700 rounded shadow w-40 h-44 text-left\"\n                                *ngFor=\"let asset of (assets | async)[group]\"\n                                [routerLink]=\"[\n                                    '/asset-manager',\n                                    'view',\n                                    asset.id\n                                ]\"\n                            >\n                                <div\n                                    class=\"w-full h-32 flex items-center justify-center p-2\"\n                                >\n                                    <img\n                                        [src]=\"\n                                            asset.images?.length\n                                                ? asset.images[0].url\n                                                : ''\n                                        \"\n                                        class=\"max-w-full max-h-full object-contain\"\n                                    />\n                                </div>\n                                <div\n                                    class=\"border-t border-gray-200 dark:border-neutral-500 w-full px-3 py-1\"\n                                >\n                                    <div class=\"truncate\">\n                                        {{ asset.name }}\n                                    </div>\n                                    <div class=\"text-xs opacity-60\">\n                                        In Storage:\n                                        {{\n                                            (asset.count || 0) -\n                                                (asset.locations?.length || 0)\n                                        }}/{{ assets.count || 0 }}\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center justify-center p-8 space-y-4 h-full w-full\">\n                <p class=\"opacity-40\">\n                    {{\n                        (options | async)?.search\n                            ? 'No matching assets found'\n                            : 'No assets available. Create a new asset with the button below'\n                    }}\n                </p>\n                <a\n                    button\n                    mat-button\n                    *ngIf=\"!(options | async)?.search\"\n                    [routerLink]=\"['/asset-manager', 'manage', 'details']\"\n                >\n                    Create new Asset\n                </a>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetItemListComponent {\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n    public readonly categories = this._state.asset_categories;\n    public readonly assets = this._state.asset_mapping;\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { UIModule } from '../ui/ui.module';\n\nimport { AssetListingComponent } from './asset-listing.component';\nimport { AssetManagerTopbarComponent } from './asset-manager-topbar.component';\nimport { AssetManagerComponent } from './asset-manager.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AssetViewComponent } from './asset-view.component';\nimport { AssetFlowComponent } from './asset-flow.component';\nimport { AssetFlowConsumablesComponent } from './asset-flow-consumables.component';\nimport { AssetFlowDetailsComponent } from './asset-flow-details.component';\nimport { AssetFlowPurchasesComponent } from './asset-flow-purchases.component';\nimport { AssetFlowSpecsComponent } from './asset-flow-specs.component';\nimport { AssetRequestListComponent } from './asset-request-list.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { AssetItemListComponent } from './asset-item-list.component';\nimport { SplitJoinPipe } from './split-join.pipe';\nimport { AssetRequestDetailsComponent } from './asset-request-details.component';\nimport { DurationFormatPipe } from './duration.pipe';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\n\nconst COMPONENTS = [\n    AssetManagerComponent,\n    AssetManagerTopbarComponent,\n    AssetListingComponent,\n    AssetViewComponent,\n    AssetFlowComponent,\n    AssetFlowConsumablesComponent,\n    AssetFlowDetailsComponent,\n    AssetFlowPurchasesComponent,\n    AssetFlowSpecsComponent,\n    AssetRequestListComponent,\n    AssetItemListComponent,\n    AssetRequestDetailsComponent,\n    AssetLocationModalComponent,\n    SplitJoinPipe,\n    DurationFormatPipe,\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: AssetManagerComponent,\n        children: [\n            {\n                path: 'list',\n                component: AssetListingComponent,\n                children: [\n                    { path: 'items', component: AssetItemListComponent },\n                    { path: 'requests', component: AssetRequestListComponent },\n                    { path: '**', redirectTo: 'requests' },\n                ],\n            },\n            { path: 'view/:id', component: AssetViewComponent },\n            { path: 'manage/:view', component: AssetFlowComponent },\n            { path: '**', redirectTo: 'list/requests' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        ComponentsModule,\n        MatButtonToggleModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatStepperModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppAssetManangerModule {}\n"],"x_google_ignoreList":[0,1,2]}