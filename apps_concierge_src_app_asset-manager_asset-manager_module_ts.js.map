{"version":3,"mappings":"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","names":["_c0","_c1","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatButtonToggleGroup","multi","uniqueIdCounter","constructor","source","value","this","_changeDetector","defaultOptions","_vertical","_multiple","_disabled","_controlValueAccessorChangeFn","_onTouched","_name","valueChange","EventEmitter","change","appearance","_buttonToggles","forEach","toggle","name","_markForCheck","coerceBooleanProperty","selected","_selectionModel","multiple","map","undefined","newValue","_setSelectionByValue","emit","ngOnInit","SelectionModel","ngAfterContentInit","select","filter","checked","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","_emitChangeEvent","Array","isArray","length","event","MatButtonToggleChange","_syncButtonToggle","isUserInput","deferEvents","deselect","Promise","resolve","then","_updateModelValue","_isSelected","isSelected","_isPrechecked","_rawValue","some","_clearSelection","currentValue","_selectValue","clear","correspondingOption","find","ɵfac","t","ɵngcc0","ɵdir","type","selectors","contentQueries","rf","ctx","dirIndex","MatButtonToggle","_t","hostAttrs","hostVars","hostBindings","vertical","inputs","outputs","exportAs","features","_MatButtonToggleBase","mixinDisableRipple","toggleGroup","_changeDetectorRef","_elementRef","_focusMonitor","defaultTabIndex","super","_isSingleSelector","_checked","ariaLabelledby","parsedTabIndex","Number","tabIndex","buttonToggleGroup","id","_appearance","group","ngAfterViewInit","monitor","ngOnDestroy","stopMonitoring","focus","options","_buttonElement","nativeElement","_onButtonClick","newChecked","ɵngcc1","ɵcmp","viewQuery","first","disableRipple","ariaLabel","ngContentSelectors","decls","vars","consts","template","_r0","buttonId","directives","ɵngcc2","styles","encapsulation","changeDetection","MatButtonToggleModule","ɵmod","ɵinj","imports","MatCommonModule","MatRippleModule","CdkStepHeader","CdkStepLabel","nextId","STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","interactedStream","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","editable","_getDefaultCompleted","stepControl","valid","_getDefaultError","invalid","reset","ngOnChanges","_stateChanged","_markAsInteracted","_showError","_a","showError","CdkStepper","stepLabel","TemplateRef","content","optional","completed","hasError","label","errorMessage","state","CdkStep_ng_template_0_Template","_dir","_document","_destroyed","Subject","steps","QueryList","_sortedHeaders","_linear","_selectedIndex","selectionChange","_orientation","_groupId","index","newIndex","coerceNumberProperty","_steps","_isValidIndex","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","selectedIndex","step","indexOf","_keyManager","withVerticalOrientation","changes","pipe","startWith","takeUntil","subscribe","notifyOnChanges","_stepHeader","headers","sort","a","b","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","FocusKeyManager","withWrap","withHomeAndEnd","of","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","destroy","next","complete","min","previous","_getStepLabelId","i","_getStepContentId","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","hasModifier","hasModifierKey","keyCode","manager","SPACE","ENTER","onKeydown","preventDefault","slice","control","pending","stepperElement","focusedElement","_getFocusedElementPierceShadowDom","contains","DOCUMENT","linear","orientation","CdkStepperNext","_handleClick","CdkStepperPrevious","CdkStepperModule","BidiModule","iconName","Error","url","literal","svgText","MatIconRegistry","_httpClient","_sanitizer","document","_errorHandler","_svgIconConfigs","Map","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","SvgIconConfig","addSvgIconResolver","resolver","push","cleanLiteral","sanitize","SecurityContext","getMatIconFailedToSanitizeLiteralError","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","className","set","classNameForFontAlias","get","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","getMatIconFailedToSanitizeUrlError","cachedIcon","cloneSvg","_loadSvgIconFromConfig","tap","svg","getNamedSvgIcon","key","iconKey","config","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","throwError","getMatIconNameNotFoundError","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","catchError","err","message","handleError","forkJoin","foundIcon","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","cloneNode","removeAttribute","nodeName","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","appendChild","str","div","createElement","innerHTML","element","attributes","setAttribute","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","finalize","delete","share","configNamespace","svgElement","result","isSafeUrlWithOptions","ɵprov","i0","factory","i1","i2","i3","token","providedIn","_MatIconBase","mixinColor","MAT_ICON_LOCATION","inject","_location","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","attr","join","funcIriPattern","MatIcon","elementRef","_iconRegistry","ariaHidden","_inline","_currentIconFetch","Subscription","inline","_svgIcon","_updateSvgIcon","_clearSvgElement","_fontSet","_cleanupFontValue","_updateFontIconClasses","_fontIcon","_splitIconName","parts","split","ngAfterViewChecked","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","unsubscribe","_usingFontIcon","svgIcon","_setSvgElement","styleTags","querySelectorAll","textContent","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","removeChild","elem","fontSetClass","fontSet","_previousFontSetClass","classList","remove","add","fontIcon","_previousFontIconClass","trim","elements","attrs","elementsWithFuncIri","elementWithReference","getAttribute","match","rawName","_svgNamespace","_svgName","take","color","MatIconModule","ctx_r0","iconOverrides","_getIconContext","ctx_r6","_getDefaultTextForState","ctx_r7","_intl","completedLabel","ctx_r8","editableLabel","ctx_r9","MatStepHeader_ng_container_4_span_1_Template","MatStepHeader_ng_container_4_span_2_Template","MatStepHeader_ng_container_4_span_3_Template","MatStepHeader_ng_container_4_mat_icon_4_Template","ctx_r1","ctx_r2","_templateLabel","ctx_r3","ctx_r4","optionalLabel","ctx_r5","MatStep_ng_template_0_ng_template_1_Template","_portal","a0","a1","MatStepper_ng_container_1_ng_container_2_div_2_Template","step_r6","$implicit","i_r7","isLast_r8","last","_r2","_r13","$event","ctx_r12","_animationDone","step_r10","i_r11","MatStepper_ng_container_1_ng_container_2_Template","MatStepper_ng_container_1_div_4_Template","_r19","ctx_r18","step_r15","i_r16","isLast_r17","ctx_r14","MatStepper_ng_container_2_div_1_Template","_r23","step_r20","i_r21","_stepIsNavigable","_iconOverrides","MatStepLabel","ɵMatStepLabel_BaseFactory","MatStepperIntl","MAT_STEPPER_INTL_PROVIDER","deps","Optional","SkipSelf","useFactory","parentIntl","_MatStepHeaderBase","MatStepHeader","changeDetectorRef","_intlSubscription","origin","focusVia","_stringLabel","_getHostElement","active","MatStepHeader_ng_container_3_Template","MatStepHeader_ng_container_4_Template","MatStepHeader_div_6_Template","MatStepHeader_div_7_Template","MatStepHeader_div_8_Template","MatStepHeader_div_9_Template","ɵngcc3","ɵngcc4","matStepperAnimations","horizontalStepTransition","trigger","style","transform","visibility","transition","animate","verticalStepTransition","height","MatStepperIcon","templateRef","MatStepContent","_template","MatStep","stepper","_errorStateMatcher","_viewContainerRef","switchMap","_lazyContent","TemplatePortal","isErrorState","form","MatStepper","ErrorStateMatcher","MatStep_ng_template_0_Template","ɵngcc5","_MatProxyStepperBase","ɵ_MatProxyStepperBase_BaseFactory","MatHorizontalStepper","ɵMatHorizontalStepper_BaseFactory","MatVerticalStepper","ɵMatVerticalStepper_BaseFactory","dir","animationDone","labelPosition","_icons","distinctUntilChanged","x","y","fromState","toState","ɵngcc6","MatStepper_ng_container_1_Template","MatStepper_ng_container_2_Template","MatStepper_ng_template_3_Template","data","animation","MatStepperNext","ɵMatStepperNext_BaseFactory","MatStepperPrevious","ɵMatStepperPrevious_BaseFactory","MatStepperModule","providers","CommonModule","PortalModule","MatButtonModule","FormGroup","FormControl","Validators","category","count","description","barcode","brand","specifications","purchase_date","Date","now","expiry_date","invoices","purchase_details","locations","AssetManagerStateService","BaseClass","BehaviorSubject","view","generateAssetForm","images","_assets","asObservable","_options","_poll","_","assets","user_name","location_name","location_floor","date","duration","status","tracking","combineLatest","requests","list","includes","active_asset","asset","filtered_assets","categories","unique","asset_mapping","Object","keys","_form","resetForm","setOptions","getValue","AssetManagerTopbarComponent","_state","o","AssetListingComponent","_router","AssetManagerComponent","SplitJoinPipe","pure","AssetLocationModalComponent","active_asset_requests","setTracking","item","loading","ImageCarouselComponent","AssetViewComponent","_route","_dialog","viewLocations","open","subscription","paramMap","params","has","timeout","navigate","clearTimeout","AssetFlowDetailsComponent","AssetFlowSpecsComponent","AssetFlowPurchasesComponent","AssetFlowConsumablesComponent","AssetFlowComponent","DurationFormatPipe","short","formatDuration","days","floor","hours","minutes","replace","AssetRequestDetailsComponent","setStatus","AssetRequestListComponent","filtered_requests","ROUTES","component","children","asset_categories","AssetItemListComponent","redirectTo","AppAssetManangerModule","UIModule","ComponentsModule","MatTabsModule","RouterModule"],"sources":["./node_modules/@angular/material/fesm2015/button-toggle.js","./node_modules/@angular/cdk/fesm2015/stepper.js","./node_modules/@angular/material/fesm2015/icon.js","./node_modules/@angular/material/fesm2015/stepper.js","./apps/concierge/src/app/asset-manager/asset-manager-state.service.ts","./apps/concierge/src/app/asset-manager/asset-manager-topbar.component.ts","./apps/concierge/src/app/asset-manager/asset-listing.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.component.ts","./apps/concierge/src/app/asset-manager/split-join.pipe.ts","./apps/concierge/src/app/asset-manager/asset-location-modal.component.ts","./apps/concierge/src/app/asset-manager/image-carousel.component.ts","./apps/concierge/src/app/asset-manager/asset-view.component.ts","./apps/concierge/src/app/asset-manager/asset-flow-details.component.ts","./apps/concierge/src/app/asset-manager/asset-flow-specs.component.ts","./apps/concierge/src/app/asset-manager/asset-flow-purchases.component.ts","./apps/concierge/src/app/asset-manager/asset-flow-consumables.component.ts","./apps/concierge/src/app/asset-manager/asset-flow.component.ts","./apps/concierge/src/app/asset-manager/duration.pipe.ts","./apps/concierge/src/app/asset-manager/asset-request-details.component.ts","./apps/concierge/src/app/asset-manager/asset-request-list.component.ts","./apps/concierge/src/app/asset-manager/asset-item-list.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.module.ts"],"sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by MatButtonToggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The MatButtonToggle that emits the event. */\n    source, \n    /** The value assigned to the MatButtonToggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** `name` attribute for the underlying `input` element. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => {\n                toggle.name = this._name;\n                toggle._markForCheck();\n            });\n        }\n    }\n    /** Whether the toggle group is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : (selected[0] || null);\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(toggle => toggle._markForCheck());\n        }\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        const selected = this.selected;\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        const event = new MatButtonToggleChange(source, this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(isUserInput));\n        }\n        else {\n            this._updateModelValue(isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => toggle.checked = false);\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent();\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n}\nMatButtonToggleGroup.ɵfac = function MatButtonToggleGroup_Factory(t) { return new (t || MatButtonToggleGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggleGroup.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatButtonToggleGroup, selectors: [[\"mat-button-toggle-group\"]], contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatButtonToggle, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-button-toggle-group\"], hostVars: 5, hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, exportAs: [\"matButtonToggleGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n            { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n        ])] });\nMatButtonToggleGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggleGroup.propDecorators = {\n    _buttonToggles: [{ type: ContentChildren, args: [forwardRef(() => MatButtonToggle), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                },] }],\n    appearance: [{ type: Input }],\n    name: [{ type: Input }],\n    vertical: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    multiple: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonToggleGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-button-toggle-group',\n                providers: [\n                    MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                    { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                ],\n                host: {\n                    'role': 'group',\n                    'class': 'mat-button-toggle-group',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[class.mat-button-toggle-vertical]': 'vertical',\n                    '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"'\n                },\n                exportAs: 'matButtonToggleGroup'\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { valueChange: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], appearance: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _buttonToggles: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatButtonToggle), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                }]\n        }] }); })();\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nconst _MatButtonToggleBase = mixinDisableRipple(class {\n});\n/** Single button inside of a toggle group. */\nclass MatButtonToggle extends _MatButtonToggleBase {\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._isSingleSelector = false;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() { return `${this.id}-button`; }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this._isSingleSelector = group && !group.multiple;\n        this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n        if (this._isSingleSelector) {\n            this.name = group.name;\n        }\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        const newChecked = this._isSingleSelector ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatButtonToggle.ɵfac = function MatButtonToggle_Factory(t) { return new (t || MatButtonToggle)(ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatButtonToggle, selectors: [[\"mat-button-toggle\"]], viewQuery: function MatButtonToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n    } }, hostAttrs: [\"role\", \"presentation\", 1, \"mat-button-toggle\"], hostVars: 12, hostBindings: function MatButtonToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() { return ctx.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"id\", ctx.id)(\"name\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { disableRipple: \"disableRipple\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\", id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], value: \"value\" }, outputs: { change: \"change\" }, exportAs: [\"matButtonToggle\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 9, consts: [[\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"click\"], [\"button\", \"\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]], template: function MatButtonToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() { return ctx._onButtonClick(); });\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"span\", 3);\n        ɵngcc0.ɵɵelement(5, \"span\", 4);\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-pressed\", ctx.checked)(\"name\", ctx.name || null)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatButtonToggle.ctorParameters = () => [\n    { type: MatButtonToggleGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_GROUP,] }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggle.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    _buttonElement: [{ type: ViewChild, args: ['button',] }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    value: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    appearance: [{ type: Input }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-button-toggle',\n                template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matButtonToggle',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disableRipple'],\n                host: {\n                    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                    '[class.mat-button-toggle-checked]': 'checked',\n                    '[class.mat-button-toggle-disabled]': 'disabled',\n                    '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                    'class': 'mat-button-toggle',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.id]': 'id',\n                    '[attr.name]': 'null',\n                    '(focus)': 'focus()',\n                    'role': 'presentation'\n                },\n                styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_GROUP]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _buttonElement: [{\n            type: ViewChild,\n            args: ['button']\n        }], value: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.ɵfac = function MatButtonToggleModule_Factory(t) { return new (t || MatButtonToggleModule)(); };\nMatButtonToggleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatButtonToggleModule });\nMatButtonToggleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule, MatRippleModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatButtonToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, MatRippleModule],\n                exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                declarations: [MatButtonToggleGroup, MatButtonToggle]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonToggleModule, { declarations: function () { return [MatButtonToggleGroup, MatButtonToggle]; }, imports: function () { return [MatCommonModule, MatRippleModule]; }, exports: function () { return [MatCommonModule, MatButtonToggleGroup, MatButtonToggle]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, Output, QueryList, ChangeDetectorRef, ContentChildren, HostListener, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        var _a;\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return (_a = this._stepperOptions.showError) !== null && _a !== void 0 ? _a : this._customError != null;\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => CdkStepper)), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, outputs: { interactedStream: \"interacted\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef(() => CdkStepper),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    interactedStream: [{ type: Output, args: ['interacted',] }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => CdkStepper)]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { interactedStream: [{\n            type: Output,\n            args: ['interacted']\n        }], editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, _elementRef, \n    /**\n     * @deprecated No longer in use, to be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * @deprecated To be turned into a private property. Use `orientation` instead.\n         * @breaking-change 13.0.0\n         */\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        var _a;\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            (_a = this.selected) === null || _a === void 0 ? void 0 : _a._markAsInteracted();\n            if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = (step && this.steps) ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() { return this._orientation; }\n    set orientation(value) {\n        // This is a protected method so that `MatSteppter` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplciation. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps.toArray().slice(0, index).some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    orientation: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], orientation: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); };\nCdkStepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, ErrorHandler, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString('<svg></svg>');\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result) ?\n                    new SvgIconConfig(result.url, null, result.options) :\n                    new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };\nMatIconRegistry.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DomSanitizer), i0.ɵɵinject(i3.DOCUMENT, 8), i0.ɵɵinject(i0.ErrorHandler)); }, token: MatIconRegistry, providedIn: \"root\" });\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, null); })();\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = attr => `[${attr}]`;\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(ɵ0).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() { return this._svgIcon; }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() { return this._fontSet; }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() { return this._fontIcon; }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return parts;\n            default: throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler)); };\nMatIcon.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 7, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-mat-icon-type\", ctx._usingFontIcon() ? \"font\" : \"svg\")(\"data-mat-icon-name\", ctx._svgName || ctx.fontIcon)(\"data-mat-icon-namespace\", ctx._svgNamespace || ctx.fontSet);\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                    '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                    '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, { inline: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = function MatIconModule_Factory(t) { return new (t || MatIconModule)(); };\nMatIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, ɵ0 };\n\n","import { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ViewContainerRef, ContentChild, QueryList, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { mixinColor, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 8);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 13);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._intl.completedLabel);\n} }\nfunction MatStepHeader_ng_container_4_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 13);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8._intl.editableLabel);\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9._getDefaultTextForState(ctx_r9.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 9);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_span_2_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_4_span_3_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_mat_icon_4_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.state === \"done\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.state === \"edit\");\n} }\nfunction MatStepHeader_div_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵelementContainer(1, 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_ng_template_1_Template(rf, ctx) { }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n    ɵngcc0.ɵɵtemplate(1, MatStep_ng_template_0_ng_template_1_Template, 0, 0, \"ng-template\", 0);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx_r0._portal);\n} }\nconst _c0 = [\"*\"];\nfunction MatStepper_ng_container_1_ng_container_2_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 9);\n} }\nconst _c1 = function (a0, a1) { return { step: a0, i: a1 }; };\nfunction MatStepper_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵtemplate(2, MatStepper_ng_container_1_ng_container_2_div_2_Template, 1, 0, \"div\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const isLast_r8 = ctx.last;\n    ɵngcc0.ɵɵnextContext(2);\n    const _r2 = ɵngcc0.ɵɵreference(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(3, _c1, step_r6, i_r7));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r8);\n} }\nfunction MatStepper_ng_container_1_div_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵlistener(\"@horizontalStepTransition.done\", function MatStepper_ng_container_1_div_4_Template_div_animation_horizontalStepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r10 = ctx.$implicit;\n    const i_r11 = ctx.index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"@horizontalStepTransition\", ctx_r5._getAnimationDirection(i_r11))(\"id\", ctx_r5._getStepContentId(i_r11));\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r5._getStepLabelId(i_r11))(\"aria-expanded\", ctx_r5.selectedIndex === i_r11);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r10.content);\n} }\nfunction MatStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, MatStepper_ng_container_1_ng_container_2_Template, 3, 6, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(4, MatStepper_ng_container_1_div_4_Template, 2, 5, \"div\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.steps);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.steps);\n} }\nfunction MatStepper_ng_container_2_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"@verticalStepTransition.done\", function MatStepper_ng_container_2_div_1_Template_div_animation_verticalStepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 16);\n    ɵngcc0.ɵɵelementContainer(5, 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const isLast_r17 = ctx.last;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    const _r2 = ɵngcc0.ɵɵreference(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(9, _c1, step_r15, i_r16));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r17);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@verticalStepTransition\", ctx_r14._getAnimationDirection(i_r16))(\"id\", ctx_r14._getStepContentId(i_r16));\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r14._getStepLabelId(i_r16))(\"aria-expanded\", ctx_r14.selectedIndex === i_r16);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r15.content);\n} }\nfunction MatStepper_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, MatStepper_ng_container_2_div_1_Template, 6, 12, \"div\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.steps);\n} }\nfunction MatStepper_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-step-header\", 17);\n    ɵngcc0.ɵɵlistener(\"click\", function MatStepper_ng_template_3_Template_mat_step_header_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r23); const step_r20 = restoredCtx.step; return step_r20.select(); })(\"keydown\", function MatStepper_ng_template_3_Template_mat_step_header_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r20 = ctx.step;\n    const i_r21 = ctx.i;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-horizontal-stepper-header\", ctx_r3.orientation === \"horizontal\")(\"mat-vertical-stepper-header\", ctx_r3.orientation === \"vertical\");\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r3._getFocusIndex() === i_r21 ? 0 : -1)(\"id\", ctx_r3._getStepLabelId(i_r21))(\"index\", i_r21)(\"state\", ctx_r3._getIndicatorType(i_r21, step_r20.state))(\"label\", step_r20.stepLabel || step_r20.label)(\"selected\", ctx_r3.selectedIndex === i_r21)(\"active\", ctx_r3._stepIsNavigable(i_r21, step_r20))(\"optional\", step_r20.optional)(\"errorMessage\", step_r20.errorMessage)(\"iconOverrides\", ctx_r3._iconOverrides)(\"disableRipple\", ctx_r3.disableRipple || !ctx_r3._stepIsNavigable(i_r21, step_r20))(\"color\", step_r20.color || ctx_r3.color);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r21 + 1)(\"aria-setsize\", ctx_r3.steps.length)(\"aria-controls\", ctx_r3._getStepContentId(i_r21))(\"aria-selected\", ctx_r3.selectedIndex == i_r21)(\"aria-label\", step_r20.ariaLabel || null)(\"aria-labelledby\", !step_r20.ariaLabel && step_r20.ariaLabelledby ? step_r20.ariaLabelledby : null)(\"aria-disabled\", ctx_r3._stepIsNavigable(i_r21, step_r20) ? null : true);\n} }\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatStepLabel_BaseFactory; return function MatStepLabel_Factory(t) { return (ɵMatStepLabel_BaseFactory || (ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel)))(t || MatStepLabel); }; }();\nMatStepLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n        /** Label that is used to indicate step as completed to screen readers. */\n        this.completedLabel = 'Completed';\n        /** Label that is used to indicate step as editable to screen readers. */\n        this.editableLabel = 'Editable';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\nMatStepperIntl.ɵprov = i0.ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nconst _MatStepHeaderBase = mixinColor(class MatStepHeaderBase extends CdkStepHeader {\n    constructor(elementRef) {\n        super(elementRef);\n    }\n}, 'primary');\nclass MatStepHeader extends _MatStepHeaderBase {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\"], inputs: { color: \"color\", state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [4, \"ngSwitchDefault\"], [1, \"cdk-visually-hidden\"], [1, \"mat-step-text-label\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 5, 4, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_div_6_Template, 2, 1, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header.cdk-keyboard-focused,.cdk-high-contrast-active .mat-step-header.cdk-program-focused{outline:solid 3px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-step-header',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header.cdk-keyboard-focused,.cdk-high-contrast-active .mat-step-header.cdk-program-focused{outline:solid 3px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatStepContent.ɵfac = function MatStepContent_Factory(t) { return new (t || MatStepContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepContent, selectors: [[\"ng-template\", \"matStepContent\", \"\"]] });\nMatStepContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes.pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        })).subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatStepper)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, consts: [[3, \"cdkPortalOutlet\"]], template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 2, 1, \"ng-template\");\n    } }, directives: [ɵngcc5.CdkPortalOutlet], encapsulation: 2, changeDetection: 0 });\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef(() => MatStepper),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }],\n    color: [{ type: Input }],\n    _lazyContent: [{ type: ContentChild, args: [MatStepContent, { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatStepper)]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }], color: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatStepContent, { static: false }]\n        }] }); })();\n/**\n * Proxies the public APIs from `MatStepper` to the deprecated `MatHorizontalStepper` and\n * `MatVerticalStepper`.\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n * @docs-private\n */\nclass _MatProxyStepperBase extends CdkStepper {\n}\n_MatProxyStepperBase.ɵfac = /*@__PURE__*/ function () { let ɵ_MatProxyStepperBase_BaseFactory; return function _MatProxyStepperBase_Factory(t) { return (ɵ_MatProxyStepperBase_BaseFactory || (ɵ_MatProxyStepperBase_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(_MatProxyStepperBase)))(t || _MatProxyStepperBase); }; }();\n_MatProxyStepperBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatProxyStepperBase, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatProxyStepperBase, [{\n        type: Directive\n    }], null, null); })();\n/**\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n */\nclass MatHorizontalStepper extends _MatProxyStepperBase {\n}\nMatHorizontalStepper.ɵfac = /*@__PURE__*/ function () { let ɵMatHorizontalStepper_BaseFactory; return function MatHorizontalStepper_Factory(t) { return (ɵMatHorizontalStepper_BaseFactory || (ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper)))(t || MatHorizontalStepper); }; }();\nMatHorizontalStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Directive,\n        args: [{ selector: 'mat-horizontal-stepper' }]\n    }], null, null); })();\n/**\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n */\nclass MatVerticalStepper extends _MatProxyStepperBase {\n}\nMatVerticalStepper.ɵfac = /*@__PURE__*/ function () { let ɵMatVerticalStepper_BaseFactory; return function MatVerticalStepper_Factory(t) { return (ɵMatVerticalStepper_BaseFactory || (ɵMatVerticalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatVerticalStepper)))(t || MatVerticalStepper); }; }();\nMatVerticalStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Directive,\n        args: [{ selector: 'mat-vertical-stepper' }]\n    }], null, null); })();\nclass MatStepper extends CdkStepper {\n    constructor(dir, changeDetectorRef, elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => this._iconOverrides[name] = templateRef);\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed)).subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n}\nMatStepper.ɵfac = function MatStepper_Factory(t) { return new (t || MatStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatStepper.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStepper, selectors: [[\"mat-stepper\"], [\"mat-vertical-stepper\"], [\"mat-horizontal-stepper\"], [\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, hostAttrs: [\"role\", \"tablist\"], hostVars: 9, hostBindings: function MatStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.orientation);\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-horizontal\", ctx.orientation === \"horizontal\")(\"mat-stepper-vertical\", ctx.orientation === \"vertical\")(\"mat-stepper-label-position-end\", ctx.orientation === \"horizontal\" && ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.orientation === \"horizontal\" && ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\", disableRipple: \"disableRipple\", color: \"color\" }, outputs: { animationDone: \"animationDone\" }, exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkStepper, useExisting: MatStepper },\n            { provide: MatHorizontalStepper, useExisting: MatStepper },\n            { provide: MatVerticalStepper, useExisting: MatStepper },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 3, consts: [[3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"stepTemplate\", \"\"], [1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"], [\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"color\", \"click\", \"keydown\"]], template: function MatStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatStepper_ng_container_1_Template, 5, 2, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatStepper_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementContainerEnd();\n        ɵngcc0.ɵɵtemplate(3, MatStepper_ng_template_3_Template, 1, 23, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.orientation);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"horizontal\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"vertical\");\n    } }, directives: [ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgForOf, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgIf, MatStepHeader], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [\n            matStepperAnimations.horizontalStepTransition,\n            matStepperAnimations.verticalStepTransition,\n        ] }, changeDetection: 0 });\nMatStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }],\n    labelPosition: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]',\n                exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper',\n                template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <ng-container *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                    '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                    '[attr.aria-orientation]': 'orientation',\n                    'role': 'tablist'\n                },\n                animations: [\n                    matStepperAnimations.horizontalStepTransition,\n                    matStepperAnimations.verticalStepTransition,\n                ],\n                providers: [\n                    { provide: CdkStepper, useExisting: MatStepper },\n                    { provide: MatHorizontalStepper, useExisting: MatStepper },\n                    { provide: MatVerticalStepper, useExisting: MatStepper },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc6.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { animationDone: [{\n            type: Output\n        }], labelPosition: [{\n            type: Input\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = /*@__PURE__*/ function () { let ɵMatStepperNext_BaseFactory; return function MatStepperNext_Factory(t) { return (ɵMatStepperNext_BaseFactory || (ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext)))(t || MatStepperNext); }; }();\nMatStepperNext.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostAttrs: [1, \"mat-stepper-next\"], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    'class': 'mat-stepper-next',\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = /*@__PURE__*/ function () { let ɵMatStepperPrevious_BaseFactory; return function MatStepperPrevious_Factory(t) { return (ɵMatStepperPrevious_BaseFactory || (ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious)))(t || MatStepperPrevious); }; }();\nMatStepperPrevious.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostAttrs: [1, \"mat-stepper-previous\"], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    'class': 'mat-stepper-previous',\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵfac = function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); };\nMatStepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                    MatStepContent,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                    MatStepContent,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon, MatStepContent]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon, MatStepContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BaseClass, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nexport interface AssetOptions {\n    search?: string;\n    sort_by?: string;\n    view: 'grid' | 'list';\n    active_asset?: string;\n}\n\nexport interface Asset {\n    id: string;\n    name: string;\n    category: string;\n    images: { name: string; url: string }[];\n    barcode: string;\n    brand: string;\n    description: string;\n    specifications: Record<string, string>;\n    purchase_details: Record<string, string>;\n    invoices: { name: string; url: string; price?: number }[];\n    count: number;\n    locations: [string, string][];\n}\n\nexport interface AssetRequest {\n    id: string;\n    assets: { id: string; name: string; amount?: number }[];\n    date: number;\n    duration: number;\n    user_id: string;\n    user_name: string;\n    location_id: string;\n    location_name: string;\n    location_floor: string;\n    status: 'approved' | 'pending' | 'declined';\n    tracking: 'in_storage' | 'in_transit' | 'at_location' | 'unknown';\n}\n\nexport function generateAssetForm() {\n    return new FormGroup({\n        id: new FormControl(''),\n        name: new FormControl('', [Validators.required]),\n        category: new FormControl('', [Validators.required]),\n        count: new FormControl(0, [Validators.required]),\n        size: new FormControl('', [Validators.required]),\n        description: new FormControl('', [Validators.required]),\n        barcode: new FormControl('', [Validators.required]),\n        brand: new FormControl('', [Validators.required]),\n        specifications: new FormControl({}),\n        purchase_date: new FormControl(Date.now(), [Validators.required]),\n        expiry_date: new FormControl(null),\n        invoices: new FormControl([]),\n        purchase_details: new FormControl({}),\n        locations: new FormControl([]),\n    });\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetManagerStateService extends BaseClass {\n    private _options = new BehaviorSubject<AssetOptions>({ view: 'grid' });\n    private _poll = new BehaviorSubject(0);\n    private _form = generateAssetForm();\n\n    private _assets = new BehaviorSubject<Asset[]>([\n        {\n            id: '1',\n            name: 'iPad',\n            category: 'Technology',\n            images: [\n                { url: 'assets/support/chrome-logo.svg' },\n                { url: 'assets/support/firefox-logo.svg' },\n                { url: 'assets/support/safari-logo.svg' },\n            ],\n        },\n        { id: '2', name: 'iPhone', category: 'Technology' },\n        { id: '3', name: 'iWatch', category: 'Technology' },\n        { id: '4', name: 'Chair', category: 'Furniture' },\n        { id: '5', name: 'Lounge', category: 'Furniture' },\n        { id: '6', name: 'Table', category: 'Furniture' },\n        { id: '7', name: 'Couch', category: 'Furniture' },\n        { id: '8', name: 'Something', category: 'Other' },\n    ] as any);\n    /** List of available assets */\n    public readonly assets = this._assets.asObservable();\n    /** List of options set for the view */\n    public readonly options = this._options.asObservable();\n    /** List of requests made by users for assets */\n    public readonly requests: Observable<AssetRequest[]> = this._poll.pipe(\n        map((_) => {\n            return [\n                {\n                    id: '1',\n                    assets: [{ id: '1', name: 'iPad' }],\n                    user_name: 'Alex S',\n                    location_name: 'Room 1',\n                    location_floor: '99',\n                    date: Date.now(),\n                    duration: 60,\n                    status: 'approved',\n                    tracking: 'at_location',\n                },\n            ] as any;\n        })\n    );\n    /** Filtered list of asset requests */\n    public readonly filtered_requests = combineLatest([\n        this.requests,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            const search = (options.search || '').toLowerCase();\n            return search\n                ? list.filter(\n                      (i) =>\n                          i.user_name.toLowerCase().includes(search) ||\n                          i.location_name.toLowerCase().includes(search) ||\n                          i.assets.find((_) =>\n                              _.name.toLowerCase().includes(search)\n                          ) ||\n                          i.status.includes(search) ||\n                          i.tracking.includes(search)\n                  )\n                : list;\n        })\n    );\n    /** Currently active asset */\n    public readonly active_asset = combineLatest([\n        this._assets,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            list.find((_) => _.id === options.active_asset)\n        )\n    );\n    /** List of requests for the currently active asset */\n    public readonly active_asset_requests: Observable<AssetRequest[]> =\n        this.active_asset.pipe(\n            switchMap((asset) => {\n                return this.requests.pipe(\n                    map((_) =>\n                        _.filter((i) => i.assets.find((a) => a.id === asset.id))\n                    )\n                );\n            }),\n            map((_) => _.filter((i) => i.status !== 'declined'))\n        );\n    /** list of filtered assets */\n    public readonly filtered_assets = combineLatest([\n        this._assets,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            options.search\n                ? list.filter((i) =>\n                      i.name\n                          .toLowerCase()\n                          .includes(options.search.toLowerCase())\n                  )\n                : list\n        )\n    );\n    /** Mapping of available assets to categories */\n    public readonly asset_mapping = this.filtered_assets.pipe(\n        map((_) => {\n            const map = {};\n            const categories = unique(_.map((i) => i.category));\n            for (const group of categories) {\n                map[group] = _.filter((i) => i.category === group);\n            }\n            return map;\n        })\n    );\n    /** List of asset categories */\n    public readonly asset_categories = this.asset_mapping.pipe(\n        map((_) => Object.keys(_ || {}))\n    );\n\n    public get form() {\n        return this._form;\n    }\n\n    public resetForm() {\n        this._form = generateAssetForm();\n    }\n\n    /** Update the set view options */\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-manager-topbar',\n    template: `\n        <div class=\"w-full px-4 py-2 bg-white flex items-center space-x-4\">\n            <a\n                button\n                mat-button\n                class=\"secondary\"\n                [routerLink]=\"['/asset-manager', 'manage', 'details']\"\n            >\n                Add Asset\n            </a>\n            <mat-button-toggle-group\n                [ngModel]=\"(options | async)?.view\"\n                (ngModelChange)=\"setOptions({ view: $event })\"\n                *ngIf=\"show_actions\"\n            >\n                <mat-button-toggle value=\"grid\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_module</app-icon>\n                    </div>\n                </mat-button-toggle>\n                <mat-button-toggle value=\"list\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_list</app-icon>\n                    </div>\n                </mat-button-toggle>\n            </mat-button-toggle-group>\n            <button mat-button class=\"clear\" *ngIf=\"show_actions\">\n                <div class=\"flex items-center\">\n                    <div class=\"pl-2\">Sort By</div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button>\n            <div class=\"flex-1\"></div>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.25rem]\">\n                <app-icon matPrefix class=\"text-2xl relative top-1 -left-1\"\n                    >search</app-icon\n                >\n                <input\n                    matInput\n                    [ngModel]=\"(options | async)?.search\"\n                    (ngModelChange)=\"setOptions({ search: $event })\"\n                    placeholder=\"Search for an asset or request\"\n                />\n            </mat-form-field>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetManagerTopbarComponent {\n    @Input() public show_actions = true;\n\n    public readonly options = this._state.options;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-listing',\n    template: `\n        <asset-manager-topbar\n            [show_actions]=\"active === 'items'\"\n        ></asset-manager-topbar>\n        <div class=\"flex flex-col flex-1 h-1/2 w-full px-4\">\n            <nav mat-tab-nav-bar>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/asset-manager', 'list', 'requests']\"\n                    [routerLinkActive]=\"'active'\"\n                    [active]=\"active === 'requests'\"\n                    (click)=\"active = 'requests'\"\n                >\n                    Requests\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"['/asset-manager', 'list', 'items']\"\n                    [active]=\"active === 'items'\"\n                    (click)=\"active = 'items'\"\n                >\n                    Assets\n                </a>\n            </nav>\n            <div class=\"flex-1 h-1/2 w-full overflow-visible\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListingComponent {\n    public active = 'requests';\n\n    constructor(private _router: Router) {}\n\n    public ngOnInit() {\n        this.active = this._router.url.includes('requests')\n            ? 'requests'\n            : 'items';\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-1/2 flex-1 bg-gray-200 overflow-hidden\">\n            <router-outlet></router-outlet>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class AssetManagerComponent {}\n","import { Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'splitjoin',\n})\nexport class SplitJoinPipe {\n    public transform(\n        value: string,\n        split: string = '_',\n        join: string = ' '\n    ): string {\n        return (value || '').split(split).join(join);\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    AssetManagerStateService,\n    AssetRequest,\n} from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-location-modal',\n    template: `\n        <div class=\"p-6 relative\">\n            <button\n                mat-icon-button\n                mat-dialog-close\n                class=\"absolute top-4 right-4\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <h2 class=\"font-medium mb-2\">\n                {{ (asset | async)?.name }} in use location:\n                {{ (requests | async)?.length }}\n            </h2>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.5rem] mb-2\">\n                <app-icon matPrefix>search</app-icon>\n                <input matInput placeholder=\"Search...\" />\n            </mat-form-field>\n            <div class=\"flex items-center space-x-4 w-[90vw] text-sm\">\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-gray-300 bg-gray-50 overflow-auto\"\n                >\n                    <custom-table\n                        [dataSource]=\"requests\"\n                        [columns]=\"[\n                            'location_floor',\n                            'location_name',\n                            'tracking',\n                            'user_name'\n                        ]\"\n                        [display_column]=\"['Level', 'Space', 'Tracking', 'Requestee']\"\n                        [column_size]=\"['4r', 'flex', '10r', '6r']\"\n                        [template]=\"{ tracking: tracking_template }\"\n                    ></custom-table>\n                </div>\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-gray-300 bg-gray-100 relative flex items-center justify-center\"\n                >\n                    <i-map *ngIf=\"selected; else empty_state\"></i-map>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state\n            >\n            <p class=\"opacity-30\">\n                Select a space from the list to view map location\n            </p>\n            </ng-template\n        >\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{ row.tracking | splitjoin }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetLocationModalComponent {\n    public readonly asset = this._state.active_asset;\n    public readonly requests = this._state.active_asset_requests;\n\n    public selected: AssetRequest;\n\n    public loading = {};\n\n    public async setTracking(item: AssetRequest, state: string) {\n        this.loading[item.id] = true;\n\n        this.loading[item.id] = false;\n    }\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center p-8\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img class=\"h-full object-contain\" *ngIf=\"image\" [src]=\"image.url || image\" />\n            </div>\n            <div\n                class=\"h-full w-full relative flex items-center justify-center opacity-30\"\n                *ngIf=\"!images?.length\"\n            >\n                <p>No Images for Asset</p>\n            </div>\n            <button\n                mat-icon-button\n                class=\"text-secondary border border-solid border-secondary absolute top-1/2 left-2 -translate-y-1/2 bg-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                mat-icon-button\n                class=\"text-secondary border border-solid border-secondary absolute top-1/2 right-2 -translate-y-1/2 bg-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n            <div class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30\" *ngIf=\"images?.length\">\n                {{ offset + 1 }} / {{ images.length }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-view',\n    template: `\n        <div\n            class=\"h-full w-full\"\n            *ngIf=\"!loading && (asset | async); else loading_state\"\n        >\n            <div class=\"flex items-center space-x-4 p-2\">\n                <a\n                    button\n                    mat-button\n                    class=\"inverse\"\n                    [routerLink]=\"['/asset-manager', 'list', 'items']\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-2\">Back</div>\n                    </div>\n                </a>\n                <div class=\"flex items-center space-x-2 font-medium\">\n                    <span>Assets</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (asset | async)?.category }}</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (asset | async)?.name }}</span>\n                </div>\n            </div>\n            <div class=\"flex items-center\">\n                <div class=\"bg-white flex-1 w-1/2 h-[360px]\">\n                    <image-carousel\n                        [images]=\"(asset | async)?.images || []\"\n                    ></image-carousel>\n                </div>\n                <div class=\"w-[512px] h-[360px] px-4 flex flex-col\">\n                    <div\n                        class=\"w-full flex items-center justify-between border-b border-gray-300\"\n                    >\n                        <div class=\"font-medium\">\n                            {{ (asset | async)?.name }}\n                        </div>\n                        <div class=\"flex items-center text-sm \">\n                            <button mat-button class=\"clear\">\n                                <div class=\"flex items-center text-secondary\">\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                    <div class=\"mr-2\">Edit</div>\n                                </div>\n                            </button>\n                            <div class=\"w-px h-4 bg-gray-300\"></div>\n                            <button mat-button class=\"clear\">\n                                <div class=\"flex items-center text-secondary\">\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                    <div class=\"mr-2\">Delete</div>\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"py-4 w-full flex-1 h-1/2 overflow-auto\">\n                        {{ (asset | async)?.description || '~No Description~' }}\n                    </div>\n                    <div class=\"rounded bg-white shadow border border-gray-300 w-full divide-y divide-gray-200\">\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">Available: {{ ((asset | async)?.count - (asset | async)?.locations?.length) || 0 }}</div>\n                            <button mat-button>Assign to Location</button>\n                        </div>\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">In Use: {{ (asset | async)?.locations?.length || 0 }}</div>\n                            <button mat-button (click)=\"viewLocations()\">View Locations</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <mat-tab-group>\n                <mat-tab label=\"Specifications\">\n                </mat-tab>\n                <mat-tab label=\"Purchase information\">\n                </mat-tab>\n                <mat-tab label=\"Consumable assets\">\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading asset details...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetViewComponent extends BaseClass {\n    public loading = false;\n    public readonly asset = this._state.active_asset;\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _state: AssetManagerStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public viewLocations() {\n        this._dialog.open(AssetLocationModalComponent);\n    }\n\n    public ngOnInit() {\n        this.loading = true;\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('id')) {\n                    this._state.setOptions({ active_asset: params.get('id') });\n                }\n            })\n        );\n        this.timeout(\n            'no_asset',\n            () => this._router.navigate(['/asset-mananger']),\n            1000\n        );\n        this._state.active_asset.pipe(first((_) => !!_)).subscribe(() => {\n            this.clearTimeout('no_asset');\n            this.loading = false;\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-flow-details',\n    template: `\n        <div class=\"flex flex-col p-4\" *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"mb-4 border border-gray-300 p-4 bg-gray-50\">\n                <h3 class=\"mb-4\">Add Asset Images</h3>\n                <div classs=\"flex items-center\">\n                    <upload-list formControlName=\"images\"></upload-list>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-4\">\n                <div class=\"flex-1 flex-col\">\n                    <label>Asset name<span>*</span></label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            formControlName=\"name\"\n                            placeholder=\"e.g. iPad Pro\"\n                        />\n                        <mat-error>Asset name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 flex-col\">\n                    <label>Category<span>*</span></label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select formControlName=\"category\">\n                            <mat-option value=\"Furniture\">Furniture</mat-option>\n                            <mat-option value=\"Technology\">Technology</mat-option>\n                            <mat-option value=\"Stationary\">Stationary</mat-option>\n                        </mat-select>\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-4\">\n                <div class=\"flex-1 flex-col\">\n                    <label>Item Size<span>*</span></label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select formControlName=\"size\">\n                            <mat-option value=\"Very Small\">Very Small</mat-option>\n                            <mat-option value=\"Small\">Small</mat-option>\n                            <mat-option value=\"Medium\">Medium</mat-option>\n                            <mat-option value=\"Large\">Large</mat-option>\n                            <mat-option value=\"Very Large\">Very Large</mat-option>\n                        </mat-select>\n                        <mat-error>Item size is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 flex-col\">\n                    <label>Quantity<span>*</span></label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            formControlName=\"count\"\n                            type=\"number\"\n                            placeholder=\"1\"\n                        />\n                        <mat-error>Quantity is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <label>Description<span>*</span></label>\n            <mat-form-field appearance=\"outline\">\n                <textarea\n                    matInput\n                    formControlName=\"description\"\n                    placeholder=\"e.g. iPad Pro\"\n                ></textarea>\n                <mat-error>Description is required</mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetFlowDetailsComponent {\n    public readonly form = this._state.form;\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-flow-specs',\n    template: ` \n    <div class=\"flex flex-col p-4\" *ngIf=\"form\" [formGroup]=\"form\">\n        <h3 class=\"mb-4\">General</h3>\n        <div class=\"flex items-center space-x-4\">\n            <div class=\"flex-1 flex flex-col\">\n                <label>Barcode<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput formControlName=\"barcode\" placeholder=\"e.g. 10001\" />\n                    <mat-error>Barcode is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex-1 flex flex-col\">\n                <label>Brand<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput formControlName=\"brand\" placeholder=\"e.g. Apple\" />\n                    <mat-error>Brand is required</mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        <h3>Other</h3>\n    </div>\n    `,\n    styles: [``],\n})\nexport class AssetFlowSpecsComponent {\n    public readonly form = this._state.form;\n\n    constructor(private _state: AssetManagerStateService) { }\n}\n","import { Component } from \"@angular/core\";\nimport { AssetManagerStateService } from \"./asset-manager-state.service\";\n\n@Component({\n    selector: 'asset-flow-purchases',\n    template: `\n    <div class=\"flex flex-col p-4\" *ngIf=\"form\" [formGroup]=\"form\">\n        <h3>Timeline</h3>\n        <div class=\"flex items-center space-x-4\">\n            <div class=\"flex-1 flex-col\">\n                <label>Purchase Date<span>*</span></label>\n                <a-date-field></a-date-field>\n            </div>\n            <div class=\"flex-1 flex-col\">\n                <label>End of Service Date<span>*</span></label>\n                <a-date-field></a-date-field>\n            </div>\n        </div>\n        <h3>Purchase Price</h3>\n        <div class=\"flex items-center space-x-4\">\n            <div class=\"flex-1 flex-col\">\n                <label>Purchase Price<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput placeholder=\"e.g. 10001\" />\n                </mat-form-field>\n            </div>\n            <div class=\"flex-1 flex-col\">\n                <label>Invoice<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput placeholder=\"e.g. Apple\" />\n                </mat-form-field>\n            </div>\n        </div>\n        <h3>Other</h3>\n    </div>`,\n    styles: [``]\n})\nexport class AssetFlowPurchasesComponent {\n    public readonly form = this._state.form;\n\n    constructor(private _state: AssetManagerStateService) { }\n}","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-flow-consumables',\n    template: `\n        <div class=\"flex flex-col p-4\" *ngIf=\"form\" [formGroup]=\"form\"></div>\n    `,\n    styles: [``],\n})\nexport class AssetFlowConsumablesComponent {\n    public readonly form = this._state.form;\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'asset-flow',\n    template: `\n        <div\n            class=\"flex flex-col h-full max-w-full w-[768px] overflow-hidden px-2 py-4 mx-auto\"\n        >\n            <div class=\"flex items-center px-4 space-x-4\">\n                <button mat-icon-button class=\"bg-white rounded-none border border-solid border-gray-300\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <span>Add Asset</span>\n            </div>\n            <mat-horizontal-stepper\n                [linear]=\"false\"\n                labelPosition=\"bottom\"\n                class=\"flex-1 h-1/2\"\n            >\n                <mat-step>\n                    <ng-template matStepLabel>Details</ng-template>\n                    <div class=\"bg-white border border-gray-200\">\n                        <div class=\"overflow-auto w-full\">\n                            <asset-flow-details></asset-flow-details>\n                        </div>\n                        <div\n                            class=\"flex items-center justify-end border-t border-gray-300 p-2 space-x-2 w-full\"\n                        >\n                            <a\n                                button\n                                mat-button\n                                class=\"inverse\"\n                                [routerLink]=\"['/asset-manager', 'list']\"\n                            >\n                                Cancel\n</a>\n                            <button mat-button matStepperNext>Next</button>\n                        </div>\n                    </div>\n                </mat-step>\n                <mat-step>\n                    <ng-template matStepLabel>Specifications</ng-template>\n                    <div class=\"bg-white border border-gray-200\">\n                        <div class=\"overflow-auto w-full\">\n                            <asset-flow-specs></asset-flow-specs>\n                        </div>\n                        <div\n                            class=\"flex items-center justify-end border-t border-gray-200 p-2 space-x-2 w-full\"\n                        >\n                            <button\n                                mat-button\n                                matStepperPrevious\n                                class=\"inverse\"\n                            >\n                                Back\n                            </button>\n                            <button mat-button matStepperNext>Next</button>\n                        </div>\n                    </div>\n                </mat-step>\n                <mat-step>\n                    <ng-template matStepLabel>Purchase Information</ng-template>\n                    <div class=\"bg-white border border-gray-200\">\n                        <div class=\"overflow-auto w-full\">\n                            <asset-flow-purchases></asset-flow-purchases>\n                        </div>\n                        <div\n                            class=\"flex items-center justify-end border-t border-gray-200 p-2 space-x-2 w-full\"\n                        >\n                            <button\n                                mat-button\n                                matStepperPrevious\n                                class=\"inverse\"\n                            >\n                                Back\n                            </button>\n                            <button mat-button matStepperNext>Next</button>\n                        </div>\n                    </div>\n                </mat-step>\n                <mat-step>\n                    <ng-template matStepLabel>Consumable Assets</ng-template>\n                    <div class=\"bg-white border border-gray-200\">\n                        <div class=\"overflow-auto w-full\">\n                            <asset-flow-consumables></asset-flow-consumables>\n                        </div>\n                        <div\n                            class=\"flex items-center justify-end border-t border-gray-200 p-2 space-x-2 w-full\"\n                        >\n                            <button\n                                mat-button\n                                matStepperPrevious\n                                class=\"inverse\"\n                            >\n                                Back\n                            </button>\n                            <button mat-button>Save</button>\n                        </div>\n                    </div>\n                </mat-step>\n            </mat-horizontal-stepper>\n        </div>\n    `,\n    styles: [\n        `\n            mat-horizontal-stepper {\n                background: none !important;\n            }\n        `,\n    ],\n})\nexport class AssetFlowComponent {}\n","import { Pipe } from '@angular/core';\nimport { formatDuration } from 'date-fns';\n\n@Pipe({\n    name: 'duration',\n})\nexport class DurationFormatPipe {\n    public transform(value: number, short = true): string {\n        let duration = formatDuration({\n            days: Math.floor(value / (24 * 60)),\n            hours: Math.floor((value / 60) % 24),\n            minutes: Math.floor(value % 60),\n        });\n        if (!short) return duration;\n        return duration\n            .replace(' day', 'd')\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetRequest } from './asset-manager-state.service';\n\n@Component({\n    selector: 'asset-request-details',\n    template: `\n        <div\n            class=\"fixed inset-0 bg-black/50 z-50\"\n            *ngIf=\"request\"\n            (click)=\"request = null; requestChange.emit(request)\"\n        >\n            <div\n                class=\"absolute inset-y-0 right-0 bg-white w-[480px]\"\n                (click)=\"$event.stopPropagation()\"\n            >\n                <button\n                    mat-icon-button\n                    (click)=\"request = null; requestChange.emit(request)\"\n                    class=\"absolute top-1 right-1\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"border-b border-gray-200 px-2 py-4 flex space-x-4\">\n                    <a-user-avatar\n                        [user]=\"{ name: request.user_name }\"\n                        class=\"text-xl\"\n                    ></a-user-avatar>\n                    <div details class=\"space-y-1\">\n                        <div class=\"font-medium\">{{ request.user_name }}</div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>mail</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'mailto:' + request.user_email\"\n                            >\n                                {{ request.user_email || 'staff@place.tech' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>call</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'tel:' + request.user_phone\"\n                            >\n                                {{ request.user_phone || '04 1234 5678' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>work_outline</app-icon>\n                            <div>{{ request.user_company || 'PlaceOS' }}</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"px-3 py-4 relative\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">send</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Assets Requested</div>\n                    </div>\n                    <div class=\"pl-10 whitespace-pre-line mt-1\">\n                        <span *ngFor=\"let asset of request.assets\">\n                            {{ asset.amount || 1 }}× {{ asset.name }}\n                        </span>\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">event</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Date For</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'mediumDate' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">schedule</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Period</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'shortTime' }} &ndash;\n                        {{\n                            request.date + request.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                        ({{ request.duration | duration }})\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">place</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Floor</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.location_floor }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-gray-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">meeting_room</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Room</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.location_name }}\n                    </div>\n                    <div class=\"absolute top-4 right-4 text-sm\">\n                        <button\n                            matRipple\n                            class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2 mb-4\"\n                            [class.bg-green-600]=\"request.status === 'approved'\"\n                            [class.bg-red-600]=\"request.status === 'declined'\"\n                            [class.bg-yellow-600]=\"request.status === 'pending'\"\n                            [matMenuTriggerFor]=\"menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <div\n                                class=\"h-5 w-5 rounded-full text-white flex items-center justify-center\"\n                                [class.bg-green-600]=\"request.status === 'approved'\"\n                                [class.bg-red-600]=\"request.status === 'declined'\"\n                                [class.bg-yellow-600]=\"request.status === 'pending'\"\n                            >\n                                <app-icon>{{\n                                    request.status === 'approved'\n                                        ? 'done'\n                                        : request.status === 'declined'\n                                        ? 'close'\n                                        : 'warning'\n                                }}</app-icon>\n                            </div>\n                            <div class=\"capitalize flex-1\">\n                                {{ request.status }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('approved')\"\n                            >\n                                Approve\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('declined')\"\n                            >\n                                Decline\n                            </button>\n                        </mat-menu>\n                        <button\n                            matRipple\n                            class=\"bg-none w-full flex items-center px-2 py-1 text-left border border-gray-200 rounded-none\"\n                            [matMenuTriggerFor]=\"tracking_menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <div class=\"capitalize flex-1\">\n                                {{ request.tracking | splitjoin }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_storage')\"\n                            >\n                                In Storage\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_transit')\"\n                            >\n                                In Transit\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking(request, 'at_location')\"\n                            >\n                                At Location\n                            </button>\n                        </mat-menu>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetRequestDetailsComponent {\n    @Input() public request: AssetRequest;\n    @Output() public requestChange = new EventEmitter<AssetRequest>();\n\n    public loading = false;\n\n    public async setStatus(status: string) {\n        this.loading = true;\n\n        this.loading = false;\n    }\n\n    public async setTracking(state: string) {\n        this.loading = true;\n\n        this.loading = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    AssetManagerStateService,\n    AssetRequest,\n} from './asset-manager-state.service';\n\n@Component({\n    selector: 'app-asset-request-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div class=\"bg-white p-4 border-t border-b border-gray-300\">\n                <div class=\"opacity-60 text-sm\">\n                    {{ (requests | async).length }} asset request{{\n                        (requests | async).length === '1' ? '' : 's'\n                    }}\n                </div>\n            </div>\n            <div class=\"w-full overflow-auto h-1/2 flex-1\">\n                <custom-table\n                    asset-requests\n                    class=\"block min-w-[76rem] text-sm\"\n                    [dataSource]=\"requests\"\n                    [columns]=\"[\n                        'user',\n                        'assets',\n                        'date',\n                        'period',\n                        'location_floor',\n                        'location_name',\n                        'approval',\n                        'tracking'\n                    ]\"\n                    [display_column]=\"[\n                        'Requester',\n                        'Assets Requested',\n                        'Date for',\n                        'Period',\n                        'Floor',\n                        'Room',\n                        'Approval',\n                        'Tracking'\n                    ]\"\n                    [column_size]=\"[\n                        'flex',\n                        '12r',\n                        '',\n                        '10r',\n                        '',\n                        '',\n                        '10r',\n                        '10r'\n                    ]\"\n                    [template]=\"{\n                        user: user_template,\n                        assets: assets_template,\n                        date: date_template,\n                        period: period_template,\n                        approval: approval_template,\n                        tracking: tracking_template\n                    }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching desk bookings'\n                            : 'There are no desk booking for the currently selected date.'\n                    \"\n                    (row_clicked)=\"request = $event\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #user_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2\">\n                <a-user-avatar [user]=\"{ name: row.user_name }\"></a-user-avatar>\n                <div class=\"flex-1\">{{ row.user_name }}</div>\n            </div>\n        </ng-template>\n        <ng-template #assets_template let-row=\"row\">\n            <p class=\"whitespace-pre-line\">\n                <span *ngFor=\"let asset of row.assets\"\n                    >{{ asset.amount || 1 }}× {{ asset.name }}</span\n                >\n            </p>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{ row.date | date: 'mediumDate' }}\n        </ng-template>\n        <ng-template #period_template let-row=\"row\">\n            {{ row.date | date: 'shortTime' }} &ndash;\n            {{ row.date + row.duration * 60 * 1000 | date: 'shortTime' }}\n        </ng-template>\n        <ng-template #approval_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2\"\n                [class.bg-green-600]=\"row.status === 'approved'\"\n                [class.bg-red-600]=\"row.status === 'declined'\"\n                [class.bg-yellow-600]=\"row.status === 'pending'\"\n                [matMenuTriggerFor]=\"menu\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div\n                    class=\"h-5 w-5 rounded-full text-white flex items-center justify-center\"\n                    [class.bg-green-600]=\"row.status === 'approved'\"\n                    [class.bg-red-600]=\"row.status === 'declined'\"\n                    [class.bg-yellow-600]=\"row.status === 'pending'\"\n                >\n                    <app-icon>{{\n                        row.status === 'approved'\n                            ? 'done'\n                            : row.status === 'declined'\n                            ? 'close'\n                            : 'warning'\n                    }}</app-icon>\n                </div>\n                <div class=\"capitalize flex-1\">{{ row.status }}</div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setStatus(row, 'approved')\">\n                    Approve\n                </button>\n                <button mat-menu-item (click)=\"setStatus(row, 'declined')\">\n                    Decline\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{ row.tracking | splitjoin }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n        <asset-request-details [(request)]=\"request\"></asset-request-details>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetRequestListComponent {\n    public readonly requests = this._state.filtered_requests;\n    public readonly filters = this._state.options;\n    public request;\n\n    public readonly loading: Record<string, boolean> = {};\n\n    public async setStatus(item: AssetRequest, status: string) {\n        this.loading[item.id] = true;\n\n        this.loading[item.id] = false;\n    }\n\n    public async setTracking(item: AssetRequest, state: string) {\n        this.loading[item.id] = true;\n\n        this.loading[item.id] = false;\n    }\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\n\n@Component({\n    selector: 'app-asset-item-list',\n    template: `\n        <div class=\"overflow-auto pb-2 w-full h-full\">\n            <div class=\"\" *ngFor=\"let group of categories | async\">\n                <h2 class=\"py-2\">\n                    <span class=\"font-medium\">{{ group }}</span>\n                    <span class=\"text-xs\">\n                        ({{ (assets | async)[group]?.length }} item{{\n                            (assets | async)[group]?.length === 1 ? '' : 's'\n                        }})\n                    </span>\n                </h2>\n                <ng-container [ngSwitch]=\"(options | async).view\">\n                    <ng-container *ngSwitchCase=\"'list'\">\n                        <div\n                            class=\"rounded overflow-hidden bg-white border border-gray-300 divide-y divide-gray-200\"\n                        >\n                            <a\n                                matRipple\n                                class=\"flex items-center text-left space-x-4 p-4\"\n                                *ngFor=\"let asset of (assets | async)[group]\"\n                                [routerLink]=\"[\n                                    '/asset-manager',\n                                    'view',\n                                    asset.id\n                                ]\"\n                            >\n                                <div\n                                    class=\"h-12 w-12 flex items-center justify-center border border-gray-200 p-2\"\n                                >\n                                    <img\n                                        [src]=\"\n                                            asset.images?.length ? asset.images[0].url : ''\n                                        \"\n                                        class=\"max-w-full max-h-full object-contain\"\n                                    />\n                                </div>\n                                <div>\n                                    <div class=\"truncate\">\n                                        {{ asset.name }}\n                                    </div>\n                                    <div class=\"text-xs opacity-60\">\n                                        In Storage:\n                                        {{\n                                            (asset.count || 0) -\n                                                (asset.locations?.length || 0)\n                                        }}/{{ assets.count || 0 }}\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngSwitchDefault>\n                        <div\n                            class=\"flex items-center overflow-x-auto space-x-4 py-2\"\n                        >\n                            <a\n                                matRipple\n                                class=\"bg-white rounded shadow w-40 h-44 text-left\"\n                                *ngFor=\"let asset of (assets | async)[group]\"\n                                [routerLink]=\"[\n                                    '/asset-manager',\n                                    'view',\n                                    asset.id\n                                ]\"\n                            >\n                                <div\n                                    class=\"w-full h-32 flex items-center justify-center p-2\"\n                                >\n                                    <img\n                                        [src]=\"\n                                            asset.images?.length ? asset.images[0].url : ''\n                                        \"\n                                        class=\"max-w-full max-h-full object-contain\"\n                                    />\n                                </div>\n                                <div\n                                    class=\"border-t border-gray-200 w-full px-3 py-1\"\n                                >\n                                    <div class=\"truncate\">\n                                        {{ asset.name }}\n                                    </div>\n                                    <div class=\"text-xs opacity-60\">\n                                        In Storage:\n                                        {{\n                                            (asset.count || 0) -\n                                                (asset.locations?.length || 0)\n                                        }}/{{ assets.count || 0 }}\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetItemListComponent {\n    public readonly options = this._state.options;\n    public readonly categories = this._state.asset_categories;\n    public readonly assets = this._state.asset_mapping;\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { UIModule } from '../ui/ui.module';\n\nimport { AssetListingComponent } from './asset-listing.component';\nimport { AssetManagerTopbarComponent } from './asset-manager-topbar.component';\nimport { AssetManagerComponent } from './asset-manager.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AssetViewComponent } from './asset-view.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { AssetFlowComponent } from './asset-flow.component';\nimport { AssetFlowConsumablesComponent } from './asset-flow-consumables.component';\nimport { AssetFlowDetailsComponent } from './asset-flow-details.component';\nimport { AssetFlowPurchasesComponent } from './asset-flow-purchases.component';\nimport { AssetFlowSpecsComponent } from './asset-flow-specs.component';\nimport { AssetRequestListComponent } from './asset-request-list.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { AssetItemListComponent } from './asset-item-list.component';\nimport { SplitJoinPipe } from './split-join.pipe';\nimport { AssetRequestDetailsComponent } from './asset-request-details.component';\nimport { DurationFormatPipe } from './duration.pipe';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\n\nconst COMPONENTS = [\n    AssetManagerComponent,\n    AssetManagerTopbarComponent,\n    AssetListingComponent,\n    AssetViewComponent,\n    AssetFlowComponent,\n    AssetFlowConsumablesComponent,\n    AssetFlowDetailsComponent,\n    AssetFlowPurchasesComponent,\n    AssetFlowSpecsComponent,\n    ImageCarouselComponent,\n    AssetRequestListComponent,\n    AssetItemListComponent,\n    AssetRequestDetailsComponent,\n    AssetLocationModalComponent,\n    SplitJoinPipe,\n    DurationFormatPipe,\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: AssetManagerComponent,\n        children: [\n            {\n                path: 'list',\n                component: AssetListingComponent,\n                children: [\n                    { path: 'items', component: AssetItemListComponent },\n                    { path: 'requests', component: AssetRequestListComponent },\n                    { path: '**', redirectTo: 'requests' },\n                ],\n            },\n            { path: 'view/:id', component: AssetViewComponent },\n            { path: 'manage/:view', component: AssetFlowComponent },\n            { path: '**', redirectTo: 'list/requests' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        ComponentsModule,\n        MatButtonToggleModule,\n        MatTabsModule,\n        MatStepperModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppAssetManangerModule {}\n"],"sourceRoot":"webpack:///","file":"apps_concierge_src_app_asset-manager_asset-manager_module_ts.js"}