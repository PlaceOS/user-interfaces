{"version":3,"file":"apps_concierge_src_app_asset-manager_asset-manager_module_ts.js","mappings":"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","names":["CdkStep_ng_template_0_Template","rf","ctx","i0","_c0","CdkStepHeader","constructor","_elementRef","this","focus","nativeElement","static","ɵfac","t","ɵdir","type","selectors","hostAttrs","standalone","CdkStepLabel","template","nextId","STEPPER_GLOBAL_OPTIONS","InjectionToken","CdkStep","completed","_completedOverride","_getDefaultCompleted","value","stepControl","valid","interacted","hasError","_customError","_getDefaultError","invalid","_stepper","stepperOptions","interactedStream","EventEmitter","editable","optional","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","select","selected","reset","ngOnChanges","_stateChanged","_markAsInteracted","emit","_showError","showError","forwardRef","CdkStepper","ɵcmp","contentQueries","dirIndex","_t","stepLabel","first","viewQuery","TemplateRef","content","inputs","label","errorMessage","ariaLabel","None","ariaLabelledby","state","HasDecoratorInputTransform","booleanAttribute","outputs","exportAs","features","ngContentSelectors","decls","vars","encapsulation","changeDetection","selectedIndex","_selectedIndex","index","steps","_steps","_isValidIndex","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","undefined","step","indexOf","orientation","_orientation","_keyManager","withVerticalOrientation","_dir","_changeDetectorRef","_destroyed","Subject","QueryList","_sortedHeaders","linear","selectionChange","selectedIndexChange","_groupId","ngAfterContentInit","changes","pipe","startWith","takeUntil","subscribe","filter","notifyOnChanges","ngAfterViewInit","_stepHeader","headers","sort","a","b","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","FocusKeyManager","withWrap","withHomeAndEnd","change","of","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","ngOnDestroy","destroy","next","complete","min","length","previous","forEach","_getStepLabelId","i","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","newIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","hasModifierKey","keyCode","manager","SPACE","ENTER","setFocusOrigin","onKeydown","preventDefault","slice","some","control","pending","stepperElement","focusedElement","_getFocusedElementPierceShadowDom","contains","i1","numberAttribute","CdkStepperModule","ɵmod","ɵinj","imports","BidiModule","MatStepHeader_Conditional_3_Template","ctx_r0","iconOverrides","_getIconContext","MatStepHeader_Conditional_4_Case_0_Template","ctx_r6","_getDefaultTextForState","MatStepHeader_Conditional_4_Case_1_Conditional_0_Template","ctx_r8","_intl","completedLabel","MatStepHeader_Conditional_4_Case_1_Conditional_1_Template","ctx_r9","editableLabel","MatStepHeader_Conditional_4_Case_1_Template","ctx_r7","MatStepHeader_Conditional_4_Template","ctx_r1","MatStepHeader_Conditional_4_contFlowTmp","MatStepHeader_Conditional_6_Template","MatStepHeader_Conditional_7_Template","ctx_r3","MatStepHeader_Conditional_8_Template","ctx_r4","optionalLabel","MatStepHeader_Conditional_9_Template","ctx_r5","MatStep_ng_template_0_ng_template_1_Template","MatStep_ng_template_0_Template","_portal","MatStepper_Conditional_0_Template","MatStepper_Case_1_For_3_Conditional_1_Template","_c1","a0","a1","MatStepper_Case_1_For_3_Template","step_r7","$implicit","i_r8","$index","$count_r10","$count","_r4","_c2","animationDuration","_c3","params","MatStepper_Case_1_For_6_Template","_r19","$event","ctx_r18","_animationDone","step_r13","i_r14","_getAnimationDuration","MatStepper_Case_1_Template","MatStepper_Case_2_For_1_Template","_r27","ctx_r26","step_r21","i_r22","$count_r24","ctx_r20","MatStepper_Case_2_Template","ctx_r2","MatStepper_ng_template_3_Template","_r31","step_r28","ctx_r32","i_r29","_stepIsNavigable","_iconOverrides","disableRipple","color","MatStepLabel","ɵMatStepLabel_BaseFactory","MatStepperIntl","ɵprov","token","factory","providedIn","MAT_STEPPER_INTL_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","MAT_STEPPER_INTL_PROVIDER_FACTORY","parentIntl","MatStepHeader","_focusMonitor","changeDetectorRef","super","_intlSubscription","monitor","unsubscribe","stopMonitoring","origin","options","focusVia","_stringLabel","_templateLabel","_getHostElement","active","i2","hostVars","hostBindings","consts","MatStepHeader_contFlowTmp","dependencies","MatRipple","NgTemplateOutlet","MatIcon","styles","matStepperAnimations","horizontalStepTransition","trigger","style","transform","visibility","transition","group","animate","query","animateChild","verticalStepTransition","height","MatStepperIcon","templateRef","name","MatStepContent","_template","MatStep","stepper","_errorStateMatcher","_viewContainerRef","_isSelected","Subscription","EMPTY","switchMap","map","isSelected","_lazyContent","TemplatePortal","isErrorState","form","MatStepper","ErrorStateMatcher","useExisting","CdkPortalOutlet","_animationDuration","test","dir","elementRef","animationDone","labelPosition","headerPosition","_isServer","inject","Platform","isBrowser","nodeName","toLowerCase","_icons","distinctUntilChanged","x","y","fromState","toState","i2$1","MatStepper_contFlowTmp","data","animation","MatStepperModule","providers","MatCommonModule","CommonModule","PortalModule","MatIconModule","MatRippleModule","_r5","category_r1","edit","remove","AssetCategoryManagementModalComponent_ng_container_12_div_1_Template","id","AssetCategoryManagementModalComponent","_data","_dialog_ref","_this","changed","list","_ref","_asyncToGenerator","category","deleteAssetCategory","toPromise","_x","apply","arguments","MAT_DIALOG_DATA","core","Xpm","AssetCategoryManagementModalComponent_ng_container_12_Template","category_r6","AssetCategoryFormComponent_main_4_mat_option_16_Template","tmp_1_0","categories","_r8","save","AssetCategoryFormComponent","_state","loading","generateAssetCategoryForm","_","parent_category_id","patchValue","disableClose","item","saveAssetCategory","catch","e","notifyError","message","close","AssetCategoryFormComponent_button_3_Template","AssetCategoryFormComponent_main_4_Template","AssetCategoryFormComponent_footer_5_Template","AssetCategoryFormComponent_ng_template_6_Template","AssetManagerStateService","AsyncHandler","_form","is_new_ui","location","hash","includes","pathname","base_route","_spaces","_org","_dialog","_options","BehaviorSubject","view","_change","_poll","_extra_assets","generateAssetForm","_loading","asObservable","extra_assets","products","combineLatest","active_building","getGroupsWithAssets","zone_id","building","tap","shareReplay","purchase_orders","queryAssetPurchaseOrders","requests","initialised","debounceTime","date","bld","start","startOfDay","Date","now","valueOf","end","endOfDay","queryBookings","zones","period_start","getUnixTime","period_end","Booking","extension_data","space","find","space_id","linked_event","linked_bookings","request","AssetRequest","_time","event_start","booking_start","event_end","date_end","booking_end","deliver_at","filtered_requests","search","console","log","user_name","title","location_name","assets","status","tracking","queryAssetCategories","AssetCategory","active_product","active_item","showGroupFull","active_product_requests","asset","asset_id","filtered_products","product_mapping","category_list","_count","category_id","unique","settings","showMetadata","catchError","details","availability","disabled_rooms","startPolling","delay","interval","stopPolling","clearInterval","resetForm","manageCategories","ref","open","editCategory","subscription","componentInstance","afterClosed","unsub","result","setExtraAssets","setOptions","getValue","postChange","timeout","setStatus","_this2","rejectBooking","approveBooking","setTracking","_this3","updateBooking","toJSON","deleteActiveProduct","_this4","take","deleteAssetGroup","notifySuccess","postForm","_this5","other_data","drop_keys","key","cleanObject","saveAsset","editConfig","_this6","config","getConfig","items","types","flatten","AttachedResourceConfigModalComponent","resource_name","require_notes","Promise","race","reason","updateConfig","metadata","then","rules","Array","updateMetadata","description","saveSettings","_this7","old_settings","i3","Yz7","_r7","tmp_0_0","_r9","_r11","ctx_r10","setRoomAvailability","_r13","ctx_r12","AssetManagerTopbarComponent","o","AvailableRoomsStateModalComponent","AssetManagerTopbarComponent_a_1_Template","AssetManagerTopbarComponent_a_2_Template","AssetManagerTopbarComponent_mat_button_toggle_group_3_Template","AssetManagerTopbarComponent_button_5_Template","AssetManagerTopbarComponent_button_6_Template","AssetManagerTopbarComponent_button_7_Template","tmp_6_0","_r3","AssetListingComponent_nav_2_a_1_Template","is_new","AssetListingComponent","_router","ngOnInit","url","events","NavigationEnd","AssetListingComponent_nav_2_Template","AssetManagerComponent","attrs","SplitJoinPipe","split","join","Yjl","pure","level","zone","display_name","map_id","selected_feature","data_r8","stopPropagation","row_r9","row","ctx_r14","ctx_r15","_r10","AssetLocationModalComponent","updateFeatures","_space","location_id","MapPinComponent","z_index","levelWithID","AssetLocationModalComponent_div_16_Template","AssetLocationModalComponent_interactive_map_17_Template","AssetLocationModalComponent_ng_template_18_Template","AssetLocationModalComponent_ng_template_20_Template","AssetLocationModalComponent_ng_template_22_Template","_c4","_c5","ctx_r11","row_r18","_r20","ctx_r19","removeAsset","row_r21","_r23","ctx_r22","removePurchaseOrder","ctx_r16","AssetViewComponent_div_0_ng_container_48_Template","AssetViewComponent_div_0_ng_template_50_Template","_r25","ctx_r24","viewLocations","AssetViewComponent_div_0_ng_template_80_Template","AssetViewComponent_div_0_ng_template_102_Template","tmp_2_0","tmp_3_0","images","tmp_4_0","_c6","_r6","tmp_8_0","asset_list","tmp_10_0","tmp_11_0","tmp_12_0","_c7","tmp_14_0","_c8","tmp_16_0","_c9","_c10","_c11","_c12","_r15","tmp_22_0","brand","tmp_24_0","tmp_25_0","_c13","_c14","_c15","_c16","_r17","AssetViewComponent_ng_template_4_span_2_Template","data_r26","_r32","ctx_r31","closeTooltip","ctx_r33","deleteAsset","AssetViewComponent_ng_template_6_div_0_Template","AssetViewComponent_ng_template_6_ng_template_1_Template","deleting","_r30","AssetViewComponent","navigate","_tooltip_el","code","currency_code","_route","type_id","req","addMinutes","duration","paramMap","has","get","clearTimeout","resp","openConfirmModal","confirm_text","icon","removeAssetRequests","setTimeout","deleteAssetPurchaseOrder","i4","CustomTooltipComponent","AssetViewComponent_div_0_Template","AssetViewComponent_ng_template_2_Template","AssetViewComponent_ng_template_4_Template","AssetViewComponent_ng_template_6_Template","AssetViewComponent_ng_template_8_Template","AssetViewComponent_ng_template_10_Template","_r2","DurationFormatPipe","short","formatDuration","days","floor","hours","minutes","replace","item_r4","quantity","requestChange","AssetRequestDetailsComponent_div_0_div_34_Template","ctx_r13","user_email","user_phone","user_company","time_format","AssetRequestDetailsComponent","_settings","AssetRequestDetailsComponent_div_0_Template","row_r14","asset_r17","AssetRequestListComponent_ng_template_13_div_1_Template","row_r15","data_r19","row_r20","_r22","row_r27","ctx_r30","_r28","AssetRequestListComponent","booking","all_day","filters","setDate","AssetRequestListComponent_ng_template_11_Template","AssetRequestListComponent_ng_template_13_Template","AssetRequestListComponent_ng_template_15_Template","AssetRequestListComponent_ng_template_17_Template","AssetRequestListComponent_ng_template_19_Template","AssetRequestListComponent_ng_template_21_Template","AssetRequestListComponent_ng_template_23_Template","_r1","tmp_7_0","asset_r10","asset_count","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_div_8_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_a_2_Template","group_r5","asset_r19","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_img_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_ng_template_3_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_div_8_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_a_2_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_10_Template","AssetItemListComponent_div_0_ng_container_1_div_1_ng_container_11_Template","AssetItemListComponent_div_0_ng_container_1_div_1_Template","AssetItemListComponent_div_0_ng_container_1_Template","ctx_r28","AssetItemListComponent_ng_template_5_a_4_Template","AssetItemListComponent","AssetItemListComponent_div_0_Template","AssetItemListComponent_mat_progress_bar_3_Template","AssetItemListComponent_ng_template_5_Template","action_template","AssetPurchaseOrderFormComponent_div_1_h3_42_Template","AssetPurchaseOrderFormComponent_div_1_custom_table_43_Template","from","product_id","AssetPurchaseOrderFormComponent","generateAssetPurchaseOrderForm","_id","addYears","queryAssets","order_id","groups","queryAssetGroups","limit","asset_type_id","queryParamMap","_ref2","showAssetPurchaseOrder","order_number","purchase_order_number","purchase_date","expected_service_end_date","expected_service_start_date","_x2","saveAssetPurchaseOrder","AssetPurchaseOrderFormComponent_div_1_Template","AssetPurchaseOrderFormComponent_ng_template_2_Template","order_r5","invoice_number","AssetFormComponent_div_1_mat_option_30_Template","AssetFormComponent_div_1_mat_option_32_Template","product","AssetFormComponent","showAsset","showAssetGroup","getInvalidFields","d","AssetFormComponent_div_1_Template","AssetFormComponent_ng_template_2_Template","category_r4","current_category","AssetGroupFormComponent_div_1_mat_option_21_Template","newCategory","AssetGroupFormComponent","generateAssetGroupForm","new_category","saveAssetGroup","AssetGroupFormComponent_div_1_Template","AssetGroupFormComponent_ng_template_2_Template","AssetPurchaseOrderListComponent_ng_template_4_span_0_Template","data_r2","AssetPurchaseOrderListComponent","editOrder","order","queryParams","AssetPurchaseOrderListComponent_ng_template_4_Template","tmp_5_0","count","AssetBulkFormComponent_div_1_mat_option_28_Template","AssetBulkFormComponent_div_1_mat_option_30_Template","AssetBulkFormComponent","addAssetsInBulk","fill","AssetBulkFormComponent_div_1_Template","AssetBulkFormComponent_ng_template_2_Template","children","path","component","redirectTo","ROUTES","NewAssetManagerComponent","AppAssetManangerModule","oAB","cJS","UIModule","ComponentsModule","MatButtonToggleModule","MatProgressBarModule","MatTabsModule","RouterModule","forChild"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/cdk/fesm2022/stepper.mjs","./node_modules/@angular/material/fesm2022/stepper.mjs","./apps/concierge/src/app/asset-manager/asset-category-management-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-category-form.component.ts","./apps/concierge/src/app/asset-manager/asset-manager-state.service.ts","./apps/concierge/src/app/asset-manager/asset-manager-topbar.component.ts","./apps/concierge/src/app/asset-manager/asset-listing.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.component.ts","./apps/concierge/src/app/asset-manager/split-join.pipe.ts","./apps/concierge/src/app/asset-manager/asset-location-modal.component.ts","./apps/concierge/src/app/asset-manager/asset-view.component.ts","./apps/concierge/src/app/asset-manager/duration.pipe.ts","./apps/concierge/src/app/asset-manager/asset-request-details.component.ts","./apps/concierge/src/app/asset-manager/asset-request-list.component.ts","./apps/concierge/src/app/asset-manager/asset-item-list.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-form.component.ts","./apps/concierge/src/app/asset-manager/asset-form.component.ts","./apps/concierge/src/app/asset-manager/asset-group-form.component.ts","./apps/concierge/src/app/asset-manager/asset-purchase-order-list.component.ts","./apps/concierge/src/app/asset-manager/asset-bulk-form.component.ts","./apps/concierge/src/app/asset-manager/asset-manager.module.ts","./apps/concierge/src/app/asset-manager/new-asset-manager.component.ts"],"sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, booleanAttribute, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, numberAttribute, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkStepHeader, isStandalone: true, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkStepLabel, isStandalone: true, selector: \"[cdkStepLabel]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = value;\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = value;\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        /** Whether the user can return to this step once it has been marked as completed. */\n        this.editable = true;\n        /** Whether the completion of step is optional. */\n        this.optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return this._stepperOptions.showError ?? this._customError != null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: CdkStep, isStandalone: true, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: [\"editable\", \"editable\", booleanAttribute], optional: [\"optional\", \"optional\", booleanAttribute], completed: [\"completed\", \"completed\", booleanAttribute], hasError: [\"hasError\", \"hasError\", booleanAttribute] }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => CdkStepper)]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], optional: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], completed: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hasError: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\nclass CdkStepper {\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            this.selected?._markAsInteracted();\n            if (this._selectedIndex !== index &&\n                !this._anyControlsInvalidOrPending(index) &&\n                (index >= this._selectedIndex || this.steps.toArray()[index].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = index;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatStepper` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    constructor(_dir, _changeDetectorRef, _elementRef) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        /** Whether the validity of previous steps should be checked or not. */\n        this.linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        /** Output to support two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplication. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this.selectedIndexChange.emit(this._selectedIndex);\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.setFocusOrigin('keyboard').onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this.linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: CdkStepper, isStandalone: true, selector: \"[cdkStepper]\", inputs: { linear: [\"linear\", \"linear\", booleanAttribute], selectedIndex: [\"selectedIndex\", \"selectedIndex\", numberAttribute], selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\", selectedIndexChange: \"selectedIndexChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }], propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectedIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], selectedIndexChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkStepperNext, isStandalone: true, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkStepper }], propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkStepperPrevious, isStandalone: true, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkStepper }], propDecorators: { type: [{\n                type: Input\n            }] } });\n\nclass CdkStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule,\n            CdkStep,\n            CdkStepper,\n            CdkStepHeader,\n            CdkStepLabel,\n            CdkStepperNext,\n            CdkStepperPrevious], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Inject, ContentChild, QueryList, EventEmitter, inject, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { MatRipple, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport * as i2 from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i2$1 from '@angular/cdk/bidi';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\n\nclass MatStepLabel extends CdkStepLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatStepLabel, isStandalone: true, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                    standalone: true,\n                }]\n        }] });\n\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n        /** Label that is used to indicate step as completed to screen readers. */\n        this.completedLabel = 'Completed';\n        /** Label that is used to indicate step as editable to screen readers. */\n        this.editableLabel = 'Editable';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\nclass MatStepHeader extends CdkStepHeader {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional,\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepHeader, deps: [{ token: MatStepperIntl }, { token: i2.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.1.0-next.5\", type: MatStepHeader, isStandalone: true, selector: \"mat-step-header\", inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\", color: \"color\" }, host: { attributes: { \"role\": \"tab\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color)}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color)}@media(hover: none){.mat-step-header:hover{background:none}}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color)}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color);background-color:var(--mat-stepper-header-icon-background-color)}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color);color:var(--mat-stepper-header-error-state-icon-foreground-color)}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font);font-size:var(--mat-stepper-header-label-text-size);font-weight:var(--mat-stepper-header-label-text-weight);color:var(--mat-stepper-header-label-text-color)}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color)}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color);font-size:var(--mat-stepper-header-error-state-label-text-size)}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size);font-weight:var(--mat-stepper-header-selected-state-label-text-weight)}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color);color:var(--mat-stepper-header-selected-state-icon-foreground-color)}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color);color:var(--mat-stepper-header-edit-state-icon-foreground-color)}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', host: {\n                        'class': 'mat-step-header',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatRipple, NgTemplateOutlet, MatIcon], template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color)}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color)}@media(hover: none){.mat-step-header:hover{background:none}}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.cdk-high-contrast-active .mat-step-header[aria-disabled=true]{outline-color:GrayText}.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-label,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-icon,.cdk-high-contrast-active .mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color)}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color);background-color:var(--mat-stepper-header-icon-background-color)}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color);color:var(--mat-stepper-header-error-state-icon-foreground-color)}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font);font-size:var(--mat-stepper-header-label-text-size);font-weight:var(--mat-stepper-header-label-text-weight);color:var(--mat-stepper-header-label-text-color)}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color)}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color);font-size:var(--mat-stepper-header-error-state-label-text-size)}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size);font-weight:var(--mat-stepper-header-selected-state-label-text-weight)}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color);color:var(--mat-stepper-header-selected-state-icon-foreground-color)}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color);color:var(--mat-stepper-header-done-state-icon-foreground-color)}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color);color:var(--mat-stepper-header-edit-state-icon-foreground-color)}\"] }]\n        }], ctorParameters: () => [{ type: MatStepperIntl }, { type: i2.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }], propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }] } });\n\nconst DEFAULT_HORIZONTAL_ANIMATION_DURATION = '500ms';\nconst DEFAULT_VERTICAL_ANIMATION_DURATION = '225ms';\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', group([\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n            query('@*', animateChild(), { optional: true }),\n        ]), {\n            params: { 'animationDuration': DEFAULT_HORIZONTAL_ANIMATION_DURATION },\n        }),\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', group([\n            animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'),\n            query('@*', animateChild(), { optional: true }),\n        ]), {\n            params: { 'animationDuration': DEFAULT_VERTICAL_ANIMATION_DURATION },\n        }),\n    ]),\n};\n\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperIcon, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatStepperIcon, isStandalone: true, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatStepContent, isStandalone: true, selector: \"ng-template[matStepContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n        /** Content for step label given by `<ng-template matStepLabel>`. */\n        // We need an initializer here to avoid a TS error.\n        this.stepLabel = undefined;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStep, deps: [{ token: forwardRef(() => MatStepper) }, { token: i1.ErrorStateMatcher, skipSelf: true }, { token: i0.ViewContainerRef }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatStep, isStandalone: true, selector: \"mat-step\", inputs: { color: \"color\" }, host: { attributes: { \"hidden\": \"\" } }, providers: [\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'hidden': '', // Hide the steps so they don't affect the layout.\n                    }, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], ctorParameters: () => [{ type: MatStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatStepper)]\n                }] }, { type: i1.ErrorStateMatcher, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\nclass MatStepper extends CdkStepper {\n    /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    constructor(dir, changeDetectorRef, elementRef) {\n        super(dir, changeDetectorRef, elementRef);\n        /** The list of step headers of the steps in the stepper. */\n        // We need an initializer here to avoid a TS error.\n        this._stepHeader = undefined;\n        /** Full list of steps inside the stepper, including inside nested steppers. */\n        // We need an initializer here to avoid a TS error.\n        this._steps = undefined;\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /**\n         * Position of the stepper's header.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.headerPosition = 'top';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        this._animationDuration = '';\n        /** Whether the stepper is rendering on the server. */\n        this._isServer = !inject(Platform).isBrowser;\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone\n            .pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n    _getAnimationDuration() {\n        if (this.animationDuration) {\n            return this.animationDuration;\n        }\n        return this.orientation === 'horizontal'\n            ? DEFAULT_HORIZONTAL_ANIMATION_DURATION\n            : DEFAULT_VERTICAL_ANIMATION_DURATION;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepper, deps: [{ token: i2$1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.1.0-next.5\", type: MatStepper, isStandalone: true, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"class.mat-stepper-header-position-bottom\": \"headerPosition === \\\"bottom\\\"\", \"attr.aria-orientation\": \"orientation\" } }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step; let i = $index, isLast = $last) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n          @if (!isLast) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step; let i = $index) {\\n          <div class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@horizontalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step; let i = $index, isLast = $last) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@verticalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font);background:var(--mat-stepper-container-color)}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color)}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color);top:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\", \"color\"] }], animations: [\n            matStepperAnimations.horizontalStepTransition,\n            matStepperAnimations.verticalStepTransition,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                    }, animations: [\n                        matStepperAnimations.horizontalStepTransition,\n                        matStepperAnimations.verticalStepTransition,\n                    ], providers: [{ provide: CdkStepper, useExisting: MatStepper }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgTemplateOutlet, MatStepHeader], template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step; let i = $index, isLast = $last) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n          @if (!isLast) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step; let i = $index) {\\n          <div class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@horizontalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-horizontal-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step; let i = $index, isLast = $last) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n               [@verticalStepTransition]=\\\"{\\n                  'value': _getAnimationDirection(i),\\n                  'params': {'animationDuration': _getAnimationDuration()}\\n                }\\\"\\n               (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n               [id]=\\\"_getStepContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n               [class.mat-vertical-stepper-content-inactive]=\\\"selectedIndex !== i\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font);background:var(--mat-stepper-container-color)}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color)}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-inactive{height:0;overflow:hidden}.mat-horizontal-stepper-content:not(.mat-horizontal-stepper-content-inactive){visibility:inherit !important}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color);top:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-stepper-content:not(.mat-vertical-stepper-content-inactive){visibility:inherit !important}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\"] }]\n        }], ctorParameters: () => [{ type: i2$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }], propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatStepperNext, isStandalone: true, selector: \"button[matStepperNext]\", host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                    standalone: true,\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatStepperPrevious, isStandalone: true, selector: \"button[matStepperPrevious]\", host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                    standalone: true,\n                }]\n        }] });\n\nclass MatStepperModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperModule, imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent], exports: [MatCommonModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [MatCommonModule,\n            CommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n            MatStepper,\n            MatStepHeader, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CommonModule,\n                        PortalModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n","import { Component, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { AssetCategory, deleteAssetCategory } from '@placeos/assets';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'asset-category-management-modal',\n    template: `\n        <header>\n            <h2>Manage Categories</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-y-auto min-w-[20rem] divide-y divide-base-200 max-h-[65vh]\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"flex items-center justify-center space-x-2 w-[calc(100%-1rem)] m-2\"\n                (click)=\"edit()\"\n            >\n                <div class=\"truncate\">New Category</div>\n                <app-icon>add</app-icon>\n            </button>\n            <ng-container *ngFor=\"let category of list | async\">\n                <div\n                    class=\"flex items-center space-x-2 hover:bg-base-200:bg-base-300 p-2\"\n                    *ngIf=\"category.id\"\n                >\n                    <div class=\"flex-1 truncate\">{{ category.name }}</div>\n                    <button btn icon matRipple (click)=\"edit(category)\">\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button btn icon matRipple (click)=\"remove(category)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </ng-container>\n        </main>\n    `,\n    styles: [``],\n})\nexport class AssetCategoryManagementModalComponent {\n    public readonly changed = new EventEmitter();\n    public readonly list = this._data.list;\n    public readonly edit = this._data.edit;\n\n    public readonly remove = async (category: AssetCategory) => {\n        await deleteAssetCategory(category.id).toPromise();\n        this.changed.emit();\n    };\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            list: Observable<AssetCategory[]>;\n            edit: (i?) => any;\n        },\n        private _dialog_ref: MatDialogRef<AssetCategoryManagementModalComponent>\n    ) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetCategoryForm,\n    saveAssetCategory,\n} from '@placeos/assets';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { map } from 'rxjs/operators';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'asset-category-form',\n    template: `\n        <header class=\"flex items-center p-2\">\n            <h2 class=\"text-center text-xl font-medium\">\n                {{ form.value.id ? 'Edit' : 'Add' }} Category\n            </h2>\n            <button btn icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex-1 h-1/2 overflow-auto p-2 w-[20rem] max-w-[80vw]\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Name<span>*</span></label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"name\">Parent Category</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        formControlName=\"parent_category_id\"\n                        placeholder=\"No Parent\"\n                        [disabled]=\"!(categories | async)?.length\"\n                    >\n                        <mat-option\n                            *ngFor=\"let category of categories | async\"\n                            [value]=\"category.id\"\n                        >\n                            {{ category.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <a btn matRipple class=\"w-32 inverse\" mat-dialog-close>Cancel</a>\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Category...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetCategoryFormComponent {\n    public loading = false;\n    public readonly form = generateAssetCategoryForm();\n    public readonly categories = this._state.categories.pipe(\n        map((list) =>\n            list.filter((_) => _.parent_category_id !== this.form.value.id)\n        )\n    );\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) _data: { category?: AssetCategory },\n        private _state: AssetManagerStateService,\n        private _dialog_ref: MatDialogRef<AssetCategoryFormComponent>\n    ) {\n        if (_data?.category) this.form.patchValue(_data.category);\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data = this.form.value;\n        const item = await saveAssetCategory(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error saving category: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = false;\n        this._dialog_ref.close(item);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    approveBooking,\n    queryBookings,\n    rejectBooking,\n    updateBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    SettingsService,\n    flatten,\n    notifySuccess,\n    unique,\n} from '@placeos/common';\nimport { SpacesService } from '@placeos/spaces';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n    deleteAssetGroup,\n    generateAssetForm,\n    getGroupsWithAssets,\n    queryAssetCategories,\n    queryAssetPurchaseOrders,\n    saveAsset,\n    showGroupFull,\n} from '@placeos/assets';\nimport {\n    PlaceMetadata,\n    cleanObject,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssetCategoryManagementModalComponent } from './asset-category-management-modal.component';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceConfigModalData,\n    AttachedResourceRuleset,\n} from '@placeos/components';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport interface AssetOptions {\n    date?: number;\n    search?: string;\n    sort_by?: string;\n    view: 'grid' | 'list';\n    active_item?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetManagerStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<AssetOptions>({ view: 'grid' });\n    private _change = new BehaviorSubject(0);\n    private _poll = new BehaviorSubject(0);\n    private _extra_assets = new BehaviorSubject<Asset[]>([]);\n    private _form = generateAssetForm();\n    private _loading = new BehaviorSubject(false);\n    /** Whether asset list is loading */\n    public readonly loading = this._loading.asObservable();\n    /** List of options set for the view */\n    public readonly options = this._options.asObservable();\n    /** List of extra assets to display */\n    public readonly extra_assets = this._extra_assets.asObservable();\n    /** List of available assets */\n    public readonly products: Observable<AssetGroup[]> = combineLatest([\n        this._change,\n        this._org.active_building,\n    ]).pipe(\n        switchMap(() => {\n            this._loading.next(true);\n            return getGroupsWithAssets({ zone_id: this._org.building?.id });\n        }),\n        tap((_) => this._loading.next(false)),\n        shareReplay(1)\n    ) as any;\n    /** List of available assets */\n    public readonly purchase_orders: Observable<AssetPurchaseOrder[]> =\n        this._change.pipe(\n            switchMap(() => {\n                this._loading.next(true);\n                return queryAssetPurchaseOrders();\n            }),\n            tap(() => this._loading.next(false)),\n            shareReplay(1)\n        ) as any;\n    /** List of requests made by users for assets */\n    public readonly requests = combineLatest([\n        this._options,\n        this._org.active_building,\n        this._poll,\n        this._change,\n        this._spaces.initialised,\n    ]).pipe(\n        debounceTime(200),\n        switchMap(([{ date }, bld]) => {\n            const start = startOfDay(date || Date.now()).valueOf();\n            const end = endOfDay(date || Date.now()).valueOf();\n            return queryBookings({\n                zones: bld?.id,\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                type: 'asset-request',\n            }).pipe(\n                map((_) =>\n                    _.map(\n                        (b) =>\n                            new Booking({\n                                ...b,\n                                extension_data: {\n                                    ...b.extension_data,\n                                    space: this._spaces.find(\n                                        b.extension_data.space_id\n                                    ),\n                                },\n                            })\n                    ).filter((b) => {\n                        const event: any =\n                            b.linked_event || b.linked_bookings[0];\n                        if (!event) return false;\n                        const request = new AssetRequest({\n                            ...b.extension_data?.request,\n                        });\n                        const event_start =\n                            event.date ||\n                            event.event_start * 1000 ||\n                            event.booking_start * 1000 ||\n                            start;\n                        (request as any)._time = event_start;\n                        const event_end =\n                            event.date_end ||\n                            event.event_end * 1000 ||\n                            event.booking_end * 1000 ||\n                            end;\n                        return (\n                            request?.deliver_at >= start &&\n                            request?.deliver_at < end &&\n                            request?.deliver_at < event_end\n                        );\n                    })\n                )\n            );\n        }),\n        shareReplay(1)\n    );\n    /** Filtered list of asset requests */\n    public readonly filtered_requests = combineLatest([\n        this.requests,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            const search = (options.search || '').toLowerCase();\n            console.log('Requests:', list, search);\n            return search\n                ? list.filter(\n                      (i) =>\n                          i.user_name.toLowerCase().includes(search) ||\n                          i.title.toLowerCase().includes(search) ||\n                          i.extension_data.location_name\n                              ?.toLowerCase()\n                              .includes(search) ||\n                          i.extension_data.assets?.find((_) =>\n                              _.name.toLowerCase().includes(search)\n                          ) ||\n                          i.status.includes(search) ||\n                          i.extension_data.tracking?.includes(search)\n                  )\n                : list;\n        })\n    );\n    public readonly categories = combineLatest([\n        this._options,\n        this._change,\n    ]).pipe(\n        switchMap(() => queryAssetCategories()),\n        map((list) => [\n            new AssetCategory({ id: '', name: 'Uncategorised' }),\n            ...list,\n        ]),\n        shareReplay(1)\n    );\n    /** Currently active asset */\n    public readonly active_product = combineLatest([\n        this._options,\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([{ active_item }]) => !!active_item),\n        map(([options, t]) => [options.active_item, t] as any),\n        distinctUntilChanged(),\n        switchMap(([active_item]) =>\n            showGroupFull(active_item, { zone_id: this._org.building.id })\n        ),\n        shareReplay(1)\n    );\n    /** List of requests for the currently active asset */\n    public readonly active_product_requests = this.active_product.pipe(\n        switchMap((item) => {\n            return this.requests.pipe(\n                map((_) =>\n                    _.filter((i) =>\n                        item.assets.find((asset) => asset.id === i.asset_id)\n                    )\n                )\n            );\n        }),\n        map((_) => _.filter((i) => i.status !== 'declined'))\n    );\n    /** list of filtered assets */\n    public readonly filtered_products = combineLatest([\n        this.products,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            options.search\n                ? list.filter((i) =>\n                      i.name\n                          .toLowerCase()\n                          .includes(options.search.toLowerCase())\n                  )\n                : list\n        )\n    );\n    /** Mapping of available assets to categories */\n    public readonly product_mapping = combineLatest([\n        this.filtered_products,\n        this.categories,\n    ]).pipe(\n        map(([products, category_list]) => {\n            const map = { _count: products.length };\n            products.forEach(\n                (item) =>\n                    (item.category_id = category_list.find(\n                        (_) => _.id === item.category_id\n                    )\n                        ? item.category_id\n                        : '')\n            );\n            const categories = unique(products.map((i) => i.category_id));\n            for (const group of categories) {\n                map[group] = products.filter((i) => i.category_id === group);\n            }\n            return map;\n        })\n    );\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public get form() {\n        return this._form;\n    }\n\n    public get is_new_ui() {\n        return (\n            location.hash.includes('new') || location.pathname.includes('new')\n        );\n    }\n\n    public get base_route() {\n        return this.is_new_ui ? '/book/assets/new' : '/book/assets';\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public startPolling(delay = 15 * 1000) {\n        this.interval('polling', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    public resetForm() {\n        this._form = generateAssetForm();\n    }\n\n    public manageCategories() {\n        const ref = this._dialog.open(AssetCategoryManagementModalComponent, {\n            data: { list: this.categories, edit: (i) => this.editCategory(i) },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.changed.subscribe(() =>\n                this._change.next(Date.now())\n            )\n        );\n        ref.afterClosed().subscribe(() => this.unsub('category_modal'));\n    }\n\n    public async editCategory(\n        category: Partial<AssetCategory> = {}\n    ): Promise<AssetCategory | null> {\n        const ref = this._dialog.open(AssetCategoryFormComponent, {\n            data: { category },\n        });\n        const result = await ref.afterClosed().toPromise();\n        if (!result) return null;\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public setExtraAssets(list: Asset[]) {\n        this._extra_assets.next(list);\n    }\n\n    /** Update the set view options */\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public postChange() {\n        this.timeout('change', () => this._change.next(Date.now()), 1000);\n    }\n\n    public async setStatus(item: Booking, status: any) {\n        let result = item;\n        if (status === 'declined') {\n            result = await rejectBooking(item.id).toPromise();\n        } else if (status === 'approved') {\n            result = await approveBooking(item.id).toPromise();\n        }\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async setTracking(item: Booking, tracking: string) {\n        const result = await updateBooking(item.id, {\n            ...item.toJSON(),\n            extension_data: { ...item.extension_data, tracking },\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async deleteActiveProduct() {\n        const item = await this.active_product.pipe(take(1)).toPromise();\n        if (!item?.id) return;\n        await deleteAssetGroup(item.id).toPromise();\n        this._change.next(Date.now());\n        notifySuccess('Successfully deleted asset');\n    }\n\n    public async postForm() {\n        if (!this.form?.valid) return;\n        const data: any = this.form.value;\n        const other_data = { ...data };\n        const drop_keys = [\n            'other_data',\n            'id',\n            'name',\n            'quantity',\n            'category',\n            'purchase_date',\n            'brand',\n            'images',\n        ];\n        for (const key of drop_keys) {\n            delete other_data[key];\n        }\n        data.other_data = cleanObject(other_data, [undefined, null, '']);\n        const asset = await saveAsset(data as any).toPromise();\n        this._change.next(Date.now());\n        notifySuccess(`Successfully ${data.id ? 'updated' : 'created'} asset`);\n        this.resetForm();\n        return asset.id;\n    }\n\n    public async editConfig() {\n        const config = await this.getConfig(this._org.building.id);\n        const items = await this.products.pipe(take(1)).toPromise();\n        const types = unique(flatten(items.map((i) => [i.name])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                resource_name: 'Assets',\n                config,\n                types,\n                require_notes: false,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async getConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (await showMetadata(zone_id, 'assets_config').toPromise())\n            .details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'assets_config',\n            details: config,\n            description: `Assets config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: Record<string, any>) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'assets-settings',\n            details: { ...old_settings, ...settings },\n            description: `Assets settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { AvailableRoomsStateModalComponent } from '@placeos/components';\nimport { MatDialog } from '@angular/material/dialog';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'asset-manager-topbar',\n    template: `\n        <div class=\"w-full px-4 py-2 bg-base-100 flex items-center space-x-4\">\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                *ngIf=\"active === 'items'\"\n                [routerLink]=\"[base_route, 'manage', 'group']\"\n            >\n                Add Product\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"secondary\"\n                *ngIf=\"active === 'purchase-orders'\"\n                [routerLink]=\"[base_route, 'manage', 'purchase-order']\"\n            >\n                Add Purchase Order\n            </a>\n            <mat-button-toggle-group\n                [ngModel]=\"(options | async)?.view\"\n                (ngModelChange)=\"setOptions({ view: $event })\"\n                *ngIf=\"active === 'items'\"\n            >\n                <mat-button-toggle value=\"grid\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_module</app-icon>\n                    </div>\n                </mat-button-toggle>\n                <mat-button-toggle value=\"list\">\n                    <div\n                        class=\"flex items-center justify-center h-10 w-6 text-xl\"\n                    >\n                        <app-icon>view_list</app-icon>\n                    </div>\n                </mat-button-toggle>\n            </mat-button-toggle-group>\n            <div class=\"flex-1\"></div>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"border border-base-200\"\n                matTooltip=\"Edit Config\"\n                (click)=\"editConfig()\"\n            >\n                <app-icon>menu_book</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"border border-base-200\"\n                matTooltip=\"Room Availability\"\n                (click)=\"setRoomAvailability()\"\n            >\n                <app-icon>event_available</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"active === 'items'\"\n                class=\"border border-base-200\"\n                matTooltip=\"Manage Categories\"\n                (click)=\"manageCategories()\"\n            >\n                <app-icon>list_alt</app-icon>\n            </button>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.25rem]\">\n                <app-icon matPrefix class=\"text-2xl relative top-1 -left-1\">\n                    search\n                </app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(options | async)?.search\"\n                    (ngModelChange)=\"setOptions({ search: $event })\"\n                    placeholder=\"Search products and requests\"\n                />\n            </mat-form-field>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetManagerTopbarComponent extends AsyncHandler {\n    @Input() public active = '';\n\n    public readonly options = this._state.options;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly manageCategories = () => this._state.manageCategories();\n    public readonly editConfig = () => this._state.editConfig();\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async setRoomAvailability() {\n        const ref = this._dialog.open(AvailableRoomsStateModalComponent, {\n            data: {\n                type: 'Assets',\n                disabled_rooms: await this._state.availability\n                    .pipe(take(1))\n                    .toPromise(),\n            },\n        });\n        this.subscription(\n            'room-availability',\n            ref.componentInstance.change.subscribe(async (list) => {\n                await this._state\n                    .saveSettings({ disabled_rooms: list })\n                    .catch();\n                ref.componentInstance.loading = false;\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'asset-listing',\n    template: `\n        <asset-manager-topbar [active]=\"active\"></asset-manager-topbar>\n        <div class=\"flex flex-col flex-1 h-1/2 w-full px-4\">\n            <nav mat-tab-nav-bar *ngIf=\"!is_new || active !== 'requests'\">\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'requests']\"\n                    [routerLinkActive]=\"'active'\"\n                    [active]=\"active === 'requests'\"\n                    (click)=\"active = 'requests'\"\n                    *ngIf=\"!is_new\"\n                >\n                    Requests\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'items']\"\n                    [active]=\"active === 'items'\"\n                    (click)=\"active = 'items'\"\n                >\n                    Products\n                </a>\n                <a\n                    mat-tab-link\n                    [routerLink]=\"[base_route, 'list', 'purchase-orders']\"\n                    [active]=\"active === 'purchase-orders'\"\n                    (click)=\"active = 'purchase-orders'\"\n                >\n                    Purchase Orders\n                </a>\n            </nav>\n            <div class=\"flex-1 h-1/2 w-full overflow-visible\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListingComponent extends AsyncHandler {\n    public active = 'requests';\n    public is_new = false;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _router: Router,\n        private _state: AssetManagerStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.is_new = this._router.url.includes('new');\n        this.active = this._router.url.includes('requests')\n            ? 'requests'\n            : this._router.url.includes('items')\n            ? 'items'\n            : 'purchase-orders';\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    this.is_new = this._router.url.includes('new');\n                    this.active = this._router.url.includes('requests')\n                        ? 'requests'\n                        : this._router.url.includes('items')\n                        ? 'items'\n                        : 'purchase-orders';\n                }\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-1/2 flex-1 bg-base-100 overflow-hidden\">\n            <router-outlet></router-outlet>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--b1);\n            }\n        `,\n    ],\n})\nexport class AssetManagerComponent {}\n","import { Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'splitjoin',\n})\nexport class SplitJoinPipe {\n    public transform(\n        value: string,\n        split: string = '_',\n        join: string = ' '\n    ): string {\n        return (value || '').split(split).join(join);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { MapPinComponent } from '@placeos/components';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'asset-location-modal',\n    template: `\n        <div class=\"p-6 relative\">\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-4 right-4\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <h2 class=\"font-medium mb-2\">\n                {{ (asset | async)?.name }} in use location:\n                {{ (requests | async)?.length }}\n            </h2>\n            <mat-form-field appearance=\"outline\" class=\"h-[3.5rem] mb-2\">\n                <app-icon matPrefix>search</app-icon>\n                <input matInput placeholder=\"Search...\" />\n            </mat-form-field>\n            <div class=\"flex items-center space-x-4 w-[90vw] text-sm\">\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-base-200 bg-base-200 overflow-auto\"\n                >\n                    <custom-table\n                        [dataSource]=\"requests\"\n                        [columns]=\"[\n                            'zones',\n                            'description',\n                            'tracking',\n                            'user_name'\n                        ]\"\n                        [display_column]=\"[\n                            'Level',\n                            'Space',\n                            'Tracking',\n                            'Requestee'\n                        ]\"\n                        [column_size]=\"['4r', 'flex', '10r', '6r']\"\n                        [template]=\"{\n                            tracking: tracking_template,\n                            zones: level_template,\n                        }\"\n                        (row_clicked)=\"selected = $event; updateFeatures()\"\n                    ></custom-table>\n                </div>\n                <div\n                    class=\"flex-1 h-[60vh] w-1/2 border border-base-200 bg-base-200 relative flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-4 left-4 bg-base-100 px-4 py-2 rounded-3xl border border-base-200\"\n                        *ngIf=\"selected\"\n                    >\n                        {{ level(selected.zone)?.display_name || 'N/A' }}\n                    </div>\n                    <interactive-map\n                        *ngIf=\"selected; else empty_state\"\n                        [src]=\"level(selected.zone)?.map_id || ''\"\n                        [styles]=\"{\n                            '#Zones': { display: 'none' },\n                            '#zones': { display: 'none' }\n                        }\"\n                        [features]=\"selected_feature\"\n                    ></interactive-map>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <p class=\"opacity-30\">\n                Select a space from the list to view map location\n            </p>\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ level(data)?.display_name || 'N/A' }}\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{\n                        (row.extension_data?.tracking | splitjoin) ||\n                            'In Storage'\n                    }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetLocationModalComponent {\n    public readonly asset = this._state.active_product;\n    public readonly requests = this._state.active_product_requests;\n\n    public selected: Booking;\n    public selected_feature;\n\n    public loading = {};\n\n    public async updateFeatures() {\n        const space = await this._space.transform(\n            this.selected.extension_data?.location_id\n        );\n        this.selected_feature = this.selected\n            ? [\n                  {\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      z_index: 99,\n                      data: {\n                          message: `${\n                              space.display_name || space.name\n                          } is here`,\n                      },\n                  },\n              ]\n            : [];\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _space: SpacePipe\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    flatten,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first, map } from 'rxjs/operators';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    Asset,\n    AssetPurchaseOrder,\n    deleteAsset,\n    deleteAssetPurchaseOrder,\n    removeAssetRequests,\n} from '@placeos/assets';\nimport { addMinutes } from 'date-fns';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'asset-view',\n    template: `\n        <div\n            class=\"h-full w-full flex flex-col\"\n            *ngIf=\"!loading && (item | async); else loading_state\"\n        >\n            <div\n                class=\"flex items-center space-x-4 p-2 bg-base-100 border-b border-base-200\"\n            >\n                <a\n                    btn\n                    matRipple\n                    class=\"inverse\"\n                    [routerLink]=\"[base_route, 'list', 'items']\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-2\">Back</div>\n                    </div>\n                </a>\n                <div class=\"flex items-center space-x-2 font-medium\">\n                    <span>Assets</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.category?.name }}</span>\n                    <span>\n                        <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                    </span>\n                    <span>{{ (item | async)?.name }}</span>\n                </div>\n            </div>\n            <div class=\"flex items-center\">\n                <div class=\"bg-base-100 flex-1 w-1/2 h-[22.5rem]\">\n                    <image-carousel\n                        [images]=\"(item | async)?.images || []\"\n                    ></image-carousel>\n                </div>\n                <div class=\"w-[32rem] h-[22.5rem] px-4 flex flex-col\">\n                    <div\n                        class=\"w-full flex items-center justify-between border-b border-base-200\"\n                    >\n                        <div class=\"font-medium\">\n                            {{ (item | async)?.name }}\n                        </div>\n                        <div class=\"flex items-center text-sm \">\n                            <a\n                                btn\n                                matRipple\n                                class=\"clear\"\n                                [routerLink]=\"[base_route, 'manage', 'group']\"\n                                [queryParams]=\"{ id: (item | async)?.id }\"\n                            >\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                    <div class=\"mr-2 underline\">Edit</div>\n                                </div>\n                            </a>\n                            <div class=\"w-px h-4 bg-base-200\"></div>\n                            <button btn matRipple class=\"clear\">\n                                <div\n                                    class=\"flex items-center text-blue-600 hover:text-blue-900\"\n                                    customTooltip\n                                    [content]=\"delete_tooltip\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                    <div class=\"mr-2 underline\">Delete</div>\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"py-4 w-full flex-1 h-1/2 overflow-auto\">\n                        <ng-container\n                            *ngIf=\"\n                                (item | async)?.description;\n                                else no_desc_state\n                            \"\n                        >\n                            {{\n                                (item | async)?.description ||\n                                    '~No Description~'\n                            }}\n                        </ng-container>\n                        <ng-template #no_desc_state>\n                            <span class=\"opacity-30\">No Description</span>\n                        </ng-template>\n                    </div>\n                    <div\n                        class=\"rounded bg-base-100 shadow border border-base-200 w-full divide-y divide-base-200\"\n                    >\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                Available:\n                                {{\n                                    (asset_list | async).length -\n                                        (requests | async)?.length || 0\n                                }}\n                            </div>\n                            <!-- <button\n                                btn\n                                matRipple\n                                [disabled]=\"\n                                    (asset_list | async).length -\n                                        (requests | async)?.length ===\n                                    0\n                                \"\n                            >\n                                Assign to Location\n                            </button> -->\n                        </div>\n                        <div class=\"flex items-center justify-between p-3\">\n                            <div class=\"pl-2\">\n                                In Use:\n                                {{ (requests | async)?.length || 0 }}\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                (click)=\"viewLocations()\"\n                                [disabled]=\"\n                                    (asset_list | async).length -\n                                        (requests | async)?.length !==\n                                    0\n                                \"\n                            >\n                                View Locations\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <mat-tab-group class=\"flex-1 h-px\">\n                <mat-tab label=\"Assets\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">Assets</h3>\n                        <div class=\"flex w-full items-center space-x-2 mb-2\">\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[base_route, 'manage', 'asset']\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Add Asset\n                            </a>\n                            <a\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [routerLink]=\"[\n                                    base_route,\n                                    'manage',\n                                    'asset-bulk'\n                                ]\"\n                                [queryParams]=\"{ group_id: (item | async)?.id }\"\n                            >\n                                Bulk Add Asset\n                            </a>\n                        </div>\n                        <custom-table\n                            asset-view\n                            class=\"w-full block text-sm\"\n                            [dataSource]=\"(asset_list | async) || []\"\n                            [columns]=\"[\n                                'id',\n                                'identifier',\n                                'serial_number',\n                                'actions'\n                            ]\"\n                            [display_column]=\"[\n                                'ID',\n                                'Label/Friendly Name',\n                                'Serial Number',\n                                ' '\n                            ]\"\n                            [column_size]=\"['10r', '14r', '8r', 'flex']\"\n                            [template]=\"{\n                                actions: action_template,\n                            }\"\n                            empty=\"No assets for this product\"\n                        >\n                        </custom-table>\n                        <ng-template #action_template let-row=\"row\">\n                            <div class=\"flex w-full items-center justify-end\">\n                                <a\n                                    btn\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'manage',\n                                        'asset'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: (item | async)?.id\n                                    }\"\n                                    class=\"clear\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                </a>\n                                <button\n                                    btn\n                                    icon\n                                    matRipple\n                                    (click)=\"removeAsset(row)\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Specifications\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">General</h3>\n                        <div\n                            data-table\n                            class=\"bg-base-100 border border-base-200\"\n                        >\n                            <div class=\"flex items-center p-2\">\n                                <label>Brand</label>\n                                <div>\n                                    {{ (item | async)?.brand || '~None~' }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Purchase information\">\n                    <div class=\"max-w-[768px] mx-auto p-4\">\n                        <h3 class=\"p-2\">Purchase Orders</h3>\n                        <a\n                            btn\n                            matRipple\n                            class=\"mb-2\"\n                            [routerLink]=\"[\n                                base_route,\n                                'manage',\n                                'purchase-order'\n                            ]\"\n                            [queryParams]=\"{ group_id: (item | async)?.id }\"\n                        >\n                            Add Purchase Order\n                        </a>\n\n                        <custom-table\n                            asset-view\n                            class=\"w-full block text-sm\"\n                            [dataSource]=\"(item | async)?.purchase_orders || []\"\n                            [columns]=\"[\n                                'purchase_order_number',\n                                'invoice_number',\n                                'expected_service_start_date',\n                                'expected_service_end_date',\n                                'actions'\n                            ]\"\n                            [display_column]=\"[\n                                'Order Number',\n                                'Invoice Number',\n                                'Service Start',\n                                'Service End',\n                                ' '\n                            ]\"\n                            [column_size]=\"['10r', '10r', '10r', '10r', 'flex']\"\n                            [template]=\"{\n                                actions: po_action_template,\n                                expected_service_start_date: date_template,\n                                expected_service_end_date: date_template\n                            }\"\n                            empty=\"No assets for this product\"\n                        >\n                        </custom-table>\n                        <ng-template #po_action_template let-row=\"row\">\n                            <div class=\"flex w-full items-center justify-end\">\n                                <a\n                                    btn\n                                    icon\n                                    matRipple\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'manage',\n                                        'purchase-order'\n                                    ]\"\n                                    [queryParams]=\"{\n                                        id: row.id,\n                                        group_id: row?.id\n                                    }\"\n                                    class=\"clear\"\n                                >\n                                    <app-icon class=\"text-lg\">edit</app-icon>\n                                </a>\n                                <button\n                                    btn\n                                    icon\n                                    matRipple\n                                    (click)=\"removePurchaseOrder(row)\"\n                                >\n                                    <app-icon class=\"text-lg\">delete</app-icon>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading product details...</p>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-data=\"data\">\n            {{ data * 1000 | date: 'mediumDate' }}\n            <span *ngIf=\"!data\" class=\"opacity-30\"> No Date </span>\n        </ng-template>\n        <ng-template #delete_tooltip>\n            <div\n                class=\"p-4 bg-base-100 rounded my-2 text-center w-[18rem]\"\n                *ngIf=\"!deleting; else delete_loading\"\n            >\n                <p>Are you sure you want to permanently delete this product?</p>\n                <div class=\"flex items-center space-x-2 mt-6\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"inverse flex-1 w-24\"\n                        (click)=\"closeTooltip()\"\n                    >\n                        No\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"error flex-1 w-24\"\n                        (click)=\"deleteAsset()\"\n                    >\n                        Yes, delete\n                    </button>\n                </div>\n            </div>\n            <ng-template #delete_loading>\n                <div\n                    class=\"p-4 bg-base-100 rounded my-2 w-64 h-36 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <p>Deleting product details...</p>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #empty_invoices>\n            <div class=\"p-2 opacity-30\">No purchase orders</div>\n        </ng-template>\n        <ng-template #empty_items>\n            <div class=\"p-2 opacity-30\">No assets</div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n            }\n\n            [data-table] > div:nth-child(2n) {\n                background: #0001;\n            }\n\n            label {\n                width: 10rem;\n                min-width: 0;\n            }\n        `,\n    ],\n})\nexport class AssetViewComponent extends AsyncHandler {\n    public loading = false;\n    public deleting = false;\n    public readonly item = this._state.active_product;\n    public readonly asset_list = combineLatest([\n        this.item,\n        this._state.extra_assets,\n    ]).pipe(\n        map(([item, assets]) => {\n            if (!item) return [];\n            return unique(\n                [\n                    ...item.assets,\n                    ...assets.filter((_) => _.type_id === item.id),\n                ],\n                'id'\n            );\n        })\n    );\n    public readonly requests = this._state.active_product_requests.pipe(\n        map((req) =>\n            req.filter(\n                (_) =>\n                    _.date <= Date.now() &&\n                    addMinutes(_.date, _.duration).valueOf() >= Date.now()\n            )\n        )\n    );\n\n    @ViewChild(CustomTooltipComponent)\n    public _tooltip_el: CustomTooltipComponent;\n\n    public async deleteAsset() {\n        this.deleting = true;\n        await this._state.deleteActiveProduct();\n        this.deleting = false;\n        this._router.navigate([this._state.base_route, 'list', 'items']);\n        this.closeTooltip();\n    }\n\n    public closeTooltip() {\n        this._tooltip_el?.close();\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _state: AssetManagerStateService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public viewLocations() {\n        this._dialog.open(AssetLocationModalComponent);\n    }\n\n    public ngOnInit() {\n        this.loading = true;\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('id')) {\n                    this._state.setOptions({ active_item: params.get('id') });\n                }\n            })\n        );\n        this.timeout(\n            'no_asset',\n            () => this._router.navigate([this._state.base_route]),\n            1000\n        );\n        this._state.active_product.pipe(first((_) => !!_)).subscribe(() => {\n            this.clearTimeout('no_asset');\n            this.loading = false;\n        });\n    }\n\n    public async removeAsset(asset: Asset) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete asset',\n                content: `Are you sure you want to delete this asset?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting asset...');\n        await deleteAsset(asset.id).toPromise();\n        await removeAssetRequests(asset.id);\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n\n    public async removePurchaseOrder(asset: AssetPurchaseOrder) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Delete purchase order',\n                content: `Are you sure you want to delete this purchase order?`,\n                confirm_text: 'Delete',\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Deleting purchase order...');\n        await deleteAssetPurchaseOrder(asset.id).toPromise();\n        const item = await this._state.active_product.pipe(first()).toPromise();\n        this._state.setOptions({ active_item: '' });\n        setTimeout(\n            () => this._state.setOptions({ active_item: item.id }),\n            1000\n        );\n        resp.close();\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { formatDuration } from 'date-fns';\n\n@Pipe({\n    name: 'duration',\n})\nexport class DurationFormatPipe {\n    public transform(value: number, short = true): string {\n        let duration = formatDuration({\n            days: Math.floor(value / (24 * 60)),\n            hours: Math.floor((value / 60) % 24),\n            minutes: Math.floor(value % 60),\n        });\n        if (!short) return duration;\n        return duration\n            .replace(' day', 'd')\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'asset-request-details',\n    template: `\n        <div\n            class=\"fixed inset-0 z-50\"\n            *ngIf=\"request\"\n            (click)=\"request = null; requestChange.emit(request)\"\n        >\n            <div class=\"absolute inset-0 bg-black opacity-50\"></div>\n            <div\n                class=\"absolute inset-y-0 right-0 bg-base-100 w-[480px]\"\n                (click)=\"$event.stopPropagation()\"\n            >\n                <button\n                    icon\n                    matRipple\n                    (click)=\"request = null; requestChange.emit(request)\"\n                    class=\"absolute top-1 right-1\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"border-b border-base-200 px-2 py-4 flex space-x-4\">\n                    <a-user-avatar\n                        [user]=\"{ name: request.user_name }\"\n                        class=\"text-xl\"\n                    ></a-user-avatar>\n                    <div details class=\"space-y-1\">\n                        <div class=\"font-medium\">{{ request.user_name }}</div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>mail</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'mailto:' + request.user_email\"\n                            >\n                                {{ request.user_email || 'staff@place.tech' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>call</app-icon>\n                            <a\n                                class=\"underline\"\n                                [href]=\"'tel:' + request.user_phone\"\n                            >\n                                {{ request.user_phone || '04 1234 5678' }}\n                            </a>\n                        </div>\n                        <div class=\"flex items-center text-sm space-x-2\">\n                            <app-icon>work_outline</app-icon>\n                            <div>{{ request.user_company || 'PlaceOS' }}</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"px-3 py-4 relative\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">send</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Asset Requested</div>\n                    </div>\n                    <div class=\"pl-10 flex flex-col mt-1\">\n                        <div *ngFor=\"let item of items\">\n                            {{ item.name }}\n                            <span\n                                class=\"text-xs bg-success text-success-content px-2 py-1 rounded\"\n                            >\n                                x{{ item.quantity }}\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">event</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Date For</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: 'EEEE, MMMM d, y' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">schedule</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Period</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.date | date: time_format }} &ndash;\n                        {{\n                            request.date + request.duration * 60 * 1000\n                                | date: time_format\n                        }}\n                        ({{ request.duration | duration }})\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">place</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Floor</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ level(request.zones)?.display_name || 'N/A' }}\n                    </div>\n                    <div class=\"flex items-center space-x-4 mt-4\">\n                        <div\n                            class=\"h-6 w-6 rounded-full text-secondary bg-base-200 flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-sm\">meeting_room</app-icon>\n                        </div>\n                        <div class=\"font-medium\">Room</div>\n                    </div>\n                    <div class=\"pl-10 mt-1\">\n                        {{ request.description }}\n                    </div>\n                    <div class=\"absolute top-4 right-4 text-sm\">\n                        <button\n                            matRipple\n                            class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2 mb-4\"\n                            [class.bg-success]=\"request.status === 'approved'\"\n                            [class.bg-error]=\"request.status === 'declined'\"\n                            [class.bg-warning]=\"request.status === 'tentative'\"\n                            [matMenuTriggerFor]=\"menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <app-icon\n                                class=\"text-xl\"\n                                [class.text-green-600]=\"\n                                    request.status === 'approved'\n                                \"\n                                [class.text-red-600]=\"\n                                    request.status === 'declined'\n                                \"\n                                [class.text-yellow-400]=\"\n                                    request.status === 'tentative'\n                                \"\n                            >\n                                {{\n                                    request.status === 'approved'\n                                        ? 'done'\n                                        : request.status === 'declined'\n                                        ? 'close'\n                                        : 'warning'\n                                }}\n                            </app-icon>\n                            <div class=\"capitalize flex-1\">\n                                {{ request.status }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('approved')\"\n                            >\n                                Approve\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setStatus('declined')\"\n                            >\n                                Decline\n                            </button>\n                        </mat-menu>\n                        <button\n                            matRipple\n                            class=\"bg-none w-full flex items-center px-2 py-1 text-left border border-base-200 rounded-none\"\n                            [matMenuTriggerFor]=\"tracking_menu\"\n                            [disabled]=\"loading\"\n                        >\n                            <div class=\"capitalize flex-1\">\n                                {{\n                                    (request.extension_data?.tracking\n                                        | splitjoin) || 'In Storage'\n                                }}\n                            </div>\n                            <app-icon class=\"text-2xl\">expand_more</app-icon>\n                        </button>\n                        <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_storage')\"\n                            >\n                                In Storage\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('in_transit')\"\n                            >\n                                In Transit\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"setTracking('at_location')\"\n                            >\n                                At Location\n                            </button>\n                        </mat-menu>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetRequestDetailsComponent {\n    @Input() public request: any;\n    @Output() public requestChange = new EventEmitter<any>();\n\n    public loading = false;\n\n    public get items() {\n        return this.request?.extension_data?.request?.items || [];\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public async setStatus(status: string) {\n        this.loading = true;\n        await this._state.setStatus(this.request, status);\n        (this.request as any).status = status;\n        this.loading = false;\n    }\n\n    public async setTracking(state: string) {\n        this.loading = true;\n        await this._state.setTracking(this.request, state);\n        (this.request as any).extension_data.tracking = state;\n        this.loading = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'app-asset-request-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div\n                class=\"bg-base-100 px-4 border-t border-b border-base-200 flex items-center justify-between\"\n            >\n                <div class=\"opacity-60 text-sm\">\n                    {{ (requests | async)?.length }} asset request{{\n                        (requests | async)?.length === '1' ? '' : 's'\n                    }}\n                </div>\n                <date-options\n                    [date]=\"(filters | async)?.date\"\n                    (dateChange)=\"setDate($event)\"\n                ></date-options>\n            </div>\n            <div class=\"w-full overflow-auto h-1/2 flex-1 p-4\">\n                <custom-table\n                    asset-requests\n                    class=\"block min-w-[82rem] text-sm\"\n                    [dataSource]=\"requests\"\n                    [columns]=\"[\n                        'user',\n                        'assets',\n                        'date',\n                        'period',\n                        'zones',\n                        'description',\n                        'approval',\n                        'tracking'\n                    ]\"\n                    [display_column]=\"[\n                        'Requester',\n                        'Asset',\n                        'Deliver At',\n                        'Meeting Time',\n                        'Floor',\n                        'Location',\n                        'Approval',\n                        'Tracking'\n                    ]\"\n                    [column_size]=\"[\n                        'flex',\n                        '12r',\n                        '',\n                        '8r',\n                        '6r',\n                        '12r',\n                        '10r',\n                        '10r'\n                    ]\"\n                    [template]=\"{\n                        user: user_template,\n                        assets: assets_template,\n                        date: date_template,\n                        period: period_template,\n                        approval: approval_template,\n                        tracking: tracking_template,\n                        zones: level_template,\n                    }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching asset requests'\n                            : 'There are no asset requests for the currently selected date.'\n                    \"\n                    (row_clicked)=\"request = $event\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #user_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2\">\n                <a-user-avatar [user]=\"{ name: row.user_name }\"></a-user-avatar>\n                <div class=\"flex-1\">{{ row.user_name }}</div>\n            </div>\n        </ng-template>\n        <ng-template #assets_template let-row=\"row\">\n            <div class=\"flex flex-col\">\n                <div\n                    *ngFor=\"\n                        let asset of row.extension_data?.request?.items || []\n                    \"\n                >\n                    {{ asset.quantity || 1 }}× {{ asset.name }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.extension_data?.request?.deliver_at\n                    | date: 'MMM d, ' + time_format\n            }}\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ level(data)?.display_name || 'N/A' }}\n        </ng-template>\n        <ng-template #period_template let-row=\"row\">\n            {{ date(row) | date: 'MMM d, ' + time_format }} <br />\n            {{\n                date(row) + row.duration * 60 * 1000\n                    | date: 'MMM d, ' + time_format\n            }}\n        </ng-template>\n        <ng-template #approval_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl !bg-opacity-20 flex items-center px-2 py-1 w-full text-left space-x-2\"\n                [class.bg-success]=\"row.status === 'approved'\"\n                [class.bg-error]=\"row.status === 'declined'\"\n                [class.bg-warning]=\"row.status === 'tentative'\"\n                [class.text-success-content]=\"row.status === 'approved'\"\n                [class.text-error-content]=\"row.status === 'declined'\"\n                [class.text-warning-content]=\"row.status === 'tentative'\"\n                [matMenuTriggerFor]=\"menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <app-icon class=\"text-xl\">\n                    {{\n                        row.status === 'approved'\n                            ? 'done'\n                            : row.status === 'declined'\n                            ? 'close'\n                            : 'warning'\n                    }}\n                </app-icon>\n                <div class=\"capitalize flex-1\">{{ row.status }}</div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setStatus(row, 'approved')\">\n                    Approve\n                </button>\n                <button mat-menu-item (click)=\"setStatus(row, 'declined')\">\n                    Decline\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #tracking_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"bg-none w-full flex items-center px-2 py-1 text-left\"\n                [matMenuTriggerFor]=\"tracking_menu\"\n                (click)=\"$event.stopPropagation()\"\n                [disabled]=\"loading[row.id]\"\n            >\n                <div class=\"capitalize flex-1\">\n                    {{\n                        (row.extension_data?.tracking | splitjoin) ||\n                            'In Storage'\n                    }}\n                </div>\n                <app-icon class=\"text-2xl\">expand_more</app-icon>\n            </button>\n            <mat-menu #tracking_menu=\"matMenu\" class=\"w-36\">\n                <button mat-menu-item (click)=\"setTracking(row, 'in_storage')\">\n                    In Storage\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'in_transit')\">\n                    In Transit\n                </button>\n                <button mat-menu-item (click)=\"setTracking(row, 'at_location')\">\n                    At Location\n                </button>\n            </mat-menu>\n        </ng-template>\n        <asset-request-details [(request)]=\"request\"></asset-request-details>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetRequestListComponent extends AsyncHandler {\n    public readonly requests = this._state.filtered_requests;\n    public readonly filters = this._state.options;\n    public request;\n\n    public readonly loading: Record<string, boolean> = {};\n\n    public date(booking: any) {\n        return booking.all_day\n            ? startOfDay(booking.date).valueOf()\n            : booking.date;\n    }\n\n    public async setStatus(item: any, status: string) {\n        this.loading[item.id] = true;\n        await this._state.setStatus(item, status);\n        this.loading[item.id] = false;\n    }\n\n    public async setTracking(item: any, state: string) {\n        this.loading[item.id] = true;\n        await this._state.setTracking(item, state);\n        this.loading[item.id] = false;\n    }\n\n    public readonly setDate = (date) => this._state.setOptions({ date });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public level(zones) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this.subscription('polling', this._state.startPolling());\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'app-asset-item-list',\n    template: `\n        <div\n            class=\"overflow-auto pb-2 w-full h-full\"\n            *ngIf=\"\n                (categories | async)?.length && (products | async)?._count;\n                else empty_state\n            \"\n        >\n            <ng-container *ngFor=\"let group of categories | async\">\n                <div class=\"\" *ngIf=\"(products | async)[group.id]?.length\">\n                    <h2 class=\"py-2\">\n                        <span class=\"font-medium\">{{ group?.name }}</span>\n                        <span class=\"text-xs\">\n                            ({{ (products | async)[group.id]?.length }} item{{\n                                (products | async)[group.id]?.length === 1\n                                    ? ''\n                                    : 's'\n                            }})\n                        </span>\n                    </h2>\n                    <ng-container [ngSwitch]=\"(options | async).view\">\n                        <ng-container *ngSwitchCase=\"'list'\">\n                            <div\n                                class=\"rounded overflow-hidden bg-base-100 border border-base-200 divide-y divide-base-200\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"flex items-center text-left space-x-4 p-4 border border-base-200 hover:border-indigo-400 rounded\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"h-12 w-12 flex items-center justify-center border border-base-200 bg-base-200 overflow-hidden\"\n                                    >\n                                        <img\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            auth\n                                            [source]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.asset_count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.asset_count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <div\n                                class=\"flex items-center overflow-hidden flex-wrap -mx-2 w-full\"\n                            >\n                                <a\n                                    matRipple\n                                    class=\"bg-base-100 rounded shadow w-40 h-44 text-left m-2 border border-base-200 hover:border-indigo-400 flex flex-col\"\n                                    *ngFor=\"\n                                        let asset of (products | async)[\n                                            group.id\n                                        ]\n                                    \"\n                                    [routerLink]=\"[\n                                        base_route,\n                                        'view',\n                                        asset.id\n                                    ]\"\n                                >\n                                    <div\n                                        class=\"w-full h-32 flex items-center justify-center bg-base-200 overflow-hidden\"\n                                    >\n                                        <img\n                                            auth\n                                            *ngIf=\"\n                                                asset.images?.length;\n                                                else placeholder\n                                            \"\n                                            [source]=\"asset.images[0]\"\n                                            class=\"min-w-full min-h-full object-cover\"\n                                        />\n                                        <ng-template #placeholder>\n                                            <img\n                                                class=\"m-auto w-16\"\n                                                src=\"assets/icons/asset-placeholder.svg\"\n                                            />\n                                        </ng-template>\n                                    </div>\n                                    <div\n                                        class=\"border-t border-base-200 w-full px-3 py-1 flex-1 flex flex-col justify-center\"\n                                    >\n                                        <div class=\"truncate\">\n                                            {{ asset.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs opacity-60\"\n                                            *ngIf=\"\n                                                asset.asset_count ||\n                                                asset.assets?.length\n                                            \"\n                                        >\n                                            Assets:\n                                            {{\n                                                asset.asset_count ||\n                                                    asset.assets?.length ||\n                                                    0\n                                            }}\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <ng-template #empty_state>\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-4 h-full w-full\"\n            >\n                <p class=\"opacity-40\">\n                    {{\n                        (options | async)?.search\n                            ? 'No matching assets found'\n                            : 'No assets available. Create a new asset with the button below'\n                    }}\n                </p>\n                <a\n                    btn\n                    matRipple\n                    *ngIf=\"!(options | async)?.search\"\n                    [routerLink]=\"[base_route, 'manage', 'group']\"\n                >\n                    Create New Product\n                </a>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetItemListComponent {\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n    public readonly categories = this._state.categories;\n    public readonly products = this._state.product_mapping;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(private _state: AssetManagerStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetPurchaseOrder,\n    generateAssetPurchaseOrderForm,\n    queryAssetGroups,\n    queryAssets,\n    saveAssetPurchaseOrder,\n    showAssetPurchaseOrder,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, notifyError, notifySuccess } from '@placeos/common';\nimport { addYears, getUnixTime } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, shareReplay, switchMap } from 'rxjs/operators';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-purchase-order-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Purchase Order\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"order-number\">\n                            Order Number<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"order-number\"\n                                placeholder=\"Order Number\"\n                                formControlName=\"order_number\"\n                            />\n                            <mat-error>Order number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"invoice-number\"> Invoice Number </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"invoice-number\"\n                                placeholder=\"Invoice Number\"\n                                formControlName=\"invoice_number\"\n                            />\n                            <mat-error>Invoice number is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"purchase-date\"> Purchase Date </label>\n                            <a-date-field\n                                name=\"purchase-date\"\n                                [from]=\"from\"\n                                formControlName=\"purchase_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col space-y-2\">\n                            <label for=\"unit-price\"> Purchase Price </label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <div matPrefix>$</div>\n                                <input\n                                    matInput\n                                    name=\"unit-price\"\n                                    [from]=\"from\"\n                                    formControlName=\"unit_price\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex space-x-2\">\n                        <div class=\"flex flex-col space-y-2\">\n                            <label for=\"depreciation-start-date\">\n                                Expected Service Start Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-start-date\"\n                                [from]=\"from\"\n                                formControlName=\"expected_service_start_date\"\n                            ></a-date-field>\n                        </div>\n                        <div class=\"flex flex-col space-y-2\">\n                            <label for=\"depreciation-end-date\">\n                                Expected Service End Date\n                            </label>\n                            <a-date-field\n                                name=\"depreciation-end-date\"\n                                formControlName=\"expected_service_end_date\"\n                            ></a-date-field>\n                        </div>\n                    </div>\n                    <h3 *ngIf=\"item?.id\" class=\"font-medium mb-2\">\n                        Associated Assets ({{\n                            (asset_list | async)?.length || '0'\n                        }})\n                    </h3>\n                    <custom-table\n                        asset-view\n                        class=\"w-full block text-sm\"\n                        *ngIf=\"item?.id\"\n                        [dataSource]=\"(asset_list | async) || []\"\n                        [columns]=\"[\n                            'name',\n                            'identifier',\n                            'serial_number',\n                            'actions'\n                        ]\"\n                        [display_column]=\"[\n                            'Name',\n                            'Label/Friendly Name',\n                            'Serial Number',\n                            ' '\n                        ]\"\n                        [column_size]=\"['10r', '11r', '8r', 'flex']\"\n                        [template]=\"{\n                            actions: action_template,\n                        }\"\n                        empty=\"No assets for this purchase order\"\n                    >\n                    </custom-table>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product_id\n                                ? [base_route, 'view', product_id]\n                                : [base_route, 'list', 'purchase-orders']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetPurchaseOrderFormComponent extends AsyncHandler {\n    public readonly form = generateAssetPurchaseOrderForm();\n    public loading: string = '';\n    public product_id: string;\n    public readonly _id = new BehaviorSubject('');\n    public item: AssetPurchaseOrder;\n    public readonly from = addYears(Date.now(), -5);\n    public readonly asset_list = combineLatest([\n        this._id,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!_ && !!bld),\n        switchMap(([id]) => queryAssets({ order_id: id })),\n        switchMap(async (asset_list) => {\n            const groups = await queryAssetGroups({\n                zone_id: this._org.building.id,\n                limit: 500,\n            }).toPromise();\n            return asset_list.map((asset) => ({\n                ...asset,\n                name:\n                    groups.find((_) => _.id === (asset as any).asset_type_id)\n                        ?.name || asset.id,\n            }));\n        }),\n        shareReplay(1)\n    );\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading purchase order details...';\n                    const asset = await showAssetPurchaseOrder(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load purchase order details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue({\n                        ...asset,\n                        order_number: asset.purchase_order_number,\n                        purchase_date: asset.purchase_date * 1000,\n                        expected_service_end_date:\n                            asset.expected_service_end_date * 1000,\n                        expected_service_start_date:\n                            asset.expected_service_start_date * 1000,\n                    });\n                    this.item = asset;\n                    this._id.next(asset.id);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.product_id = params.get('group_id');\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        data.purchase_date = getUnixTime(data.purchase_date) || null;\n        data.expected_service_start_date =\n            getUnixTime(data.expected_service_start_date) ||\n            this.item?.expected_service_start_date ||\n            null;\n        data.expected_service_end_date =\n            getUnixTime(data.expected_service_end_date) ||\n            this.item?.expected_service_end_date ||\n            null;\n        const item = await saveAssetPurchaseOrder(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving purchase order.: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        notifySuccess('Successfully saved purchase order.');\n        this._state.postChange();\n        if (this.product_id) {\n            this._router.navigate([this.base_route, 'view', this.product_id]);\n        } else {\n            this._router.navigate([this.base_route, 'list', 'purchase-orders']);\n        }\n        this.loading = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    generateAssetForm,\n    saveAsset,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport {\n    AsyncHandler,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"serial-number\"> Serial Number </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"serial-number\"\n                                    placeholder=\"Serial Number\"\n                                    formControlName=\"serial_number\"\n                                />\n                                <mat-error>Serial Number is required</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"identifier\">Label/Friendly Name</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"identifier\"\n                                    placeholder=\"Identifier, Asset ID or Barcode\"\n                                    formControlName=\"identifier\"\n                                />\n                                <mat-error>\n                                    Label/Friendly Name is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"serial-number\">Barcode</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"barcode\"\n                                placeholder=\"Barcode\"\n                                formControlName=\"barcode\"\n                            />\n                            <mat-error>Barcode is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? [base_route, 'view', product.id]\n                                : [base_route]\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public loading: string = '';\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAsset({\n            ...data,\n            zone_id: this._org.building.id,\n        } as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this._state.postChange();\n        this._state.setExtraAssets(\n            [item].map((d) => ({ ...d, type_id: this.product.id }))\n        );\n        notifySuccess('Asset saved successfully.');\n        this._router.navigate([this.base_route, 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport {\n    AssetCategory,\n    generateAssetGroupForm,\n    saveAssetGroup,\n    showAssetGroup,\n} from '@placeos/assets';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-group-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        {{ form.value.id ? 'Edit' : 'Add' }} Product\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto p-2\" [formGroup]=\"form\">\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"name\"\n                                placeholder=\"Name of the product\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"name\">Category<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"category_id\"\n                                placeholder=\"Category of Product\"\n                                (click)=\"\n                                    current_category = form.value.category_id\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let category of categories | async\"\n                                    [value]=\"category.id\"\n                                >\n                                    {{ category.name }}\n                                </mat-option>\n                                <mat-option\n                                    (click)=\"newCategory()\"\n                                    class=\"relative\"\n                                >\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon>add</app-icon>\n                                        <p>New Category</p>\n                                    </div>\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>Category is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"brand\">Brand<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"brand\"\n                                placeholder=\"Brand of the product\"\n                                formControlName=\"brand\"\n                            />\n                            <mat-error>Brand is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"description\">Description</label>\n                        <mat-form-field appearance=\"outline\">\n                            <textarea\n                                matInput\n                                name=\"description\"\n                                placeholder=\"Description of the product\"\n                                formControlName=\"description\"\n                            ></textarea>\n                            <mat-error>Description is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <label for=\"images\">Images</label>\n                        <image-list-field\n                            name=\"images\"\n                            formControlName=\"images\"\n                        ></image-list-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            form.value.id\n                                ? [base_route, 'view', form.value.id]\n                                : [base_route, 'list', 'items']\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetGroupFormComponent extends AsyncHandler {\n    public readonly form = generateAssetGroupForm();\n    public readonly new_category = new BehaviorSubject<AssetCategory>(null);\n    public readonly categories = combineLatest([\n        this._state.categories,\n        this.new_category,\n    ]).pipe(\n        map(([list, item]) => (item ? unique([...list, item], 'id') : list))\n    );\n    public loading: string = '';\n    public current_category: string;\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError('Unable to load product details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(product);\n                    this.loading = '';\n                }\n            })\n        );\n    }\n\n    public async newCategory() {\n        this.form.patchValue({ category_id: this.current_category });\n        const category = await this._state.editCategory();\n        if (!category) return;\n        this.new_category.next(category);\n        this.form.patchValue({ category_id: category.id });\n    }\n\n    public async save() {\n        if (!this.form.valid) return;\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const item = await saveAssetGroup(data as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving Product: ${e.message}`);\n                throw e;\n            });\n        this.form.reset();\n        this.loading = '';\n        this._state.postChange();\n        this._router.navigate([this.base_route, 'view', item.id]);\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-asset-purchase-order-list',\n    template: `\n        <div\n            class=\"relative -left-4 w-[calc(100%+2rem)] mt-4 h-[calc(100%-1rem)] flex flex-col\"\n        >\n            <div class=\"w-full overflow-auto h-1/2 flex-1 p-4\">\n                <custom-table\n                    purchase-orders\n                    class=\"block min-w-[52rem] text-sm\"\n                    [dataSource]=\"purchase_orders\"\n                    [columns]=\"[\n                        'purchase_order_number',\n                        'invoice_number',\n                        'purchase_date',\n                        'expected_service_start_date',\n                        'expected_service_end_date'\n                    ]\"\n                    [display_column]=\"[\n                        'Order Number',\n                        'Invoice Number',\n                        'Purchase Date',\n                        'Depreciation Start',\n                        'Depreciation End'\n                    ]\"\n                    [column_size]=\"['flex', '10r', '10r', '10r', '10r']\"\n                    [template]=\"{\n                    purchase_date: date_template,\n                    expected_service_start_date: date_template,\n                    expected_service_end_date: date_template,\n                }\"\n                    [empty]=\"\n                        (filters | async)?.search\n                            ? 'No matching purchase orders found.'\n                            : 'There are purchase orders for this building.'\n                    \"\n                    (row_clicked)=\"editOrder($event)\"\n                ></custom-table>\n            </div>\n        </div>\n        <ng-template #date_template let-data=\"data\">\n            <span class=\"opacity-30\" *ngIf=\"!data\">No Date set</span>\n            {{ data ? (data * 1000 | date: 'mediumDate') : '' }}\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetPurchaseOrderListComponent {\n    public readonly now = Date.now();\n    public readonly purchase_orders = combineLatest([\n        this._state.options,\n        this._state.purchase_orders,\n    ]).pipe(\n        map(([{ search }, list]) =>\n            list.filter(\n                (_) =>\n                    !search ||\n                    (_ as any).purchase_order_number\n                        .toLowerCase()\n                        .includes(search.toLowerCase()) ||\n                    _.invoice_number\n                        ?.toLowerCase()\n                        .includes(search.toLowerCase())\n            )\n        )\n    );\n    public readonly filters = this._state.options;\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _router: Router\n    ) {}\n\n    public editOrder(order) {\n        this._router.navigate(\n            [this._state.base_route, 'manage', 'purchase-order'],\n            {\n                queryParams: { id: order.id },\n            }\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { AssetManagerStateService } from './asset-manager-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AssetGroup,\n    addAssetsInBulk,\n    generateAssetForm,\n    showAsset,\n    showAssetGroup,\n} from '@placeos/assets';\nimport {\n    AsyncHandler,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'asset-bulk-form',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100\">\n            <div\n                class=\"h-full max-w-[32rem] mx-auto flex flex-col\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <header class=\"p-4\">\n                    <h2 class=\"text-center text-xl font-medium\">\n                        Bulk {{ form.value.id ? 'Edit' : 'Add' }} Asset\n                    </h2>\n                </header>\n                <main class=\"flex-1 h-1/2 overflow-auto\" [formGroup]=\"form\">\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"name\">Product</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                [ngModel]=\"product?.name || 'No Product'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"true\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex flex-1 flex-col space-y-2\">\n                            <label for=\"count\">\n                                Number of Assets to create\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    [(ngModel)]=\"count\"\n                                    name=\"count\"\n                                    type=\"number\"\n                                    placeholder=\"Number of assets to add\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"identifier\">Label/Friendly Name</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"identifier\"\n                                placeholder=\"Identifier, Asset ID or Barcode\"\n                                formControlName=\"identifier\"\n                            />\n                            <mat-error>\n                                Label/Friendly Name is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-1 flex-col space-y-2\">\n                        <label for=\"purchase-order-id\">\n                            Purchase Order ID\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                formControlName=\"purchase_order_id\"\n                                placeholder=\"Select Purchase Order\"\n                            >\n                                <mat-option\n                                    *ngFor=\"\n                                        let order of purchase_orders | async\n                                    \"\n                                    [value]=\"order.id\"\n                                >\n                                    {{\n                                        order.purchase_order_number ||\n                                            order.invoice_number\n                                    }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!(purchase_orders | async)?.length\"\n                                    class=\"opacity-60\"\n                                    [disabled]=\"true\"\n                                >\n                                    No purchase orders\n                                </mat-option>\n                            </mat-select>\n                            <mat-error>\n                                Purchase Order ID is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </main>\n                <footer\n                    class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32 inverse\"\n                        [routerLink]=\"\n                            product\n                                ? [base_route, 'view', product.id]\n                                : [base_route]\n                        \"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </footer>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AssetBulkFormComponent extends AsyncHandler {\n    public readonly form = generateAssetForm();\n    public readonly purchase_orders = this._state.purchase_orders;\n    public product: AssetGroup;\n    public count = 2;\n    public loading: string = '';\n\n    public get base_route() {\n        return this._state.base_route;\n    }\n\n    constructor(\n        private _state: AssetManagerStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.get('id')) {\n                    this.loading = 'Loading Asset Details...';\n                    const asset = await showAsset(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!asset) {\n                        notifyError('Unable to load asset details.');\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.form.patchValue(asset);\n                    this.loading = '';\n                }\n                if (params.get('group_id')) {\n                    this.loading = 'Loading Product Details...';\n                    const product = await showAssetGroup(params.get('group_id'))\n                        .toPromise()\n                        .catch(() => null);\n                    if (!product) {\n                        notifyError(\n                            'Unable to load associated product details.'\n                        );\n                        this._router.navigate([this.base_route]);\n                    }\n                    this.product = product;\n                    this.form.patchValue({ type_id: product.id });\n                    this.loading = '';\n                }\n            })\n        );\n        this._state.setOptions({ active_item: null });\n        this.count = 2;\n    }\n\n    public async save() {\n        if (!this.count && this.count < 1) {\n            return notifyError('Please enter a valid number of assets to add.');\n        }\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        this.loading = 'Saving Product...';\n        const data = this.form.value;\n        const list = await addAssetsInBulk(\n            new Array(this.count).fill({\n                ...data,\n                zone_id: this._org.building.id,\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving asset: ${e.message}`);\n                throw e;\n            });\n        this._state.setExtraAssets(\n            list.map((d) => ({ ...d, type_id: this.product.id }))\n        );\n        this.form.reset();\n        this._state.postChange();\n        notifySuccess(`Asset added ${list.length} successfully.`);\n        this._router.navigate([this.base_route, 'view', this.product?.id]);\n        this.loading = '';\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { UIModule } from '../ui/ui.module';\n\nimport { AssetListingComponent } from './asset-listing.component';\nimport { AssetManagerTopbarComponent } from './asset-manager-topbar.component';\nimport { AssetManagerComponent } from './asset-manager.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AssetViewComponent } from './asset-view.component';\nimport { AssetRequestListComponent } from './asset-request-list.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { AssetItemListComponent } from './asset-item-list.component';\nimport { SplitJoinPipe } from './split-join.pipe';\nimport { AssetRequestDetailsComponent } from './asset-request-details.component';\nimport { DurationFormatPipe } from './duration.pipe';\nimport { AssetLocationModalComponent } from './asset-location-modal.component';\nimport { AssetPurchaseOrderFormComponent } from './asset-purchase-order-form.component';\nimport { AssetCategoryFormComponent } from './asset-category-form.component';\nimport { AssetFormComponent } from './asset-form.component';\nimport { AssetGroupFormComponent } from './asset-group-form.component';\nimport { AssetPurchaseOrderListComponent } from './asset-purchase-order-list.component';\nimport { AssetBulkFormComponent } from './asset-bulk-form.component';\nimport { NewAssetManagerComponent } from './new-asset-manager.component';\nimport { AssetCategoryManagementModalComponent } from './asset-category-management-modal.component';\n\nconst COMPONENTS = [\n    NewAssetManagerComponent,\n    AssetManagerComponent,\n    AssetManagerTopbarComponent,\n    AssetListingComponent,\n    AssetViewComponent,\n    AssetRequestListComponent,\n    AssetItemListComponent,\n    AssetRequestDetailsComponent,\n    AssetLocationModalComponent,\n    SplitJoinPipe,\n    DurationFormatPipe,\n\n    AssetFormComponent,\n    AssetBulkFormComponent,\n    AssetGroupFormComponent,\n    AssetCategoryFormComponent,\n    AssetPurchaseOrderFormComponent,\n    AssetPurchaseOrderListComponent,\n    AssetCategoryManagementModalComponent,\n];\n\nconst children = [\n    {\n        path: 'list',\n        component: AssetListingComponent,\n        children: [\n            { path: 'items', component: AssetItemListComponent },\n            { path: 'requests', component: AssetRequestListComponent },\n            {\n                path: 'purchase-orders',\n                component: AssetPurchaseOrderListComponent,\n            },\n            { path: '**', redirectTo: 'requests' },\n        ],\n    },\n    { path: 'view/:id', component: AssetViewComponent },\n    {\n        path: 'manage',\n        children: [\n            { path: 'group', component: AssetGroupFormComponent },\n            { path: 'asset', component: AssetFormComponent },\n            { path: 'asset-bulk', component: AssetBulkFormComponent },\n            { path: 'category', component: AssetCategoryFormComponent },\n            {\n                path: 'purchase-order',\n                component: AssetPurchaseOrderFormComponent,\n            },\n        ],\n    },\n    { path: '**', redirectTo: 'list/requests' },\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewAssetManagerComponent,\n        children,\n    },\n    {\n        path: '',\n        component: AssetManagerComponent,\n        children,\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        ComponentsModule,\n        MatButtonToggleModule,\n        MatProgressBarModule,\n        MatTabsModule,\n        MatStepperModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppAssetManangerModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[asset-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewAssetManagerComponent {}\n"],"x_google_ignoreList":[0,1]}