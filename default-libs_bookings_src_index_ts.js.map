{"version":3,"file":"default-libs_bookings_src_index_ts.js","mappings":"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","names":["i0","BookingDetailsModalComponent","level","this","_org","levelWithID","booking","zones","building","buildings","find","bld","includes","id","auto_checkin","_settings","get","type","is_in_progress","ts","Date","now","start","booking_start","all_day","booking_end","constructor","_booking","_dialog","EventEmitter","location","asset_id","content","MapPinComponent","period","date","duration","end","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","format","toggleCheckedIn","_this","checking_in","checkinBooking","checked_in","toPromise","notifySuccess","viewLocation","open","MapLocateModalComponent","maxWidth","maxHeight","data","item","name","asset_name","map_id","extension_data","core","MAT_DIALOG_DATA","selectors","$localize","ctx","BookingCardComponent","AsyncHandler","_route","super","ngOnInit","subscription","queryParamMap","subscribe","params","has","viewDetails","day","isSameDay","display_name","timeout","ref","componentInstance","edit","emit","remove","ctx_r1","DeskConfirmModalComponent","desk_list","desks","map","_","join","hide_reason","can_set_host","_data","host","can_set_date","reason","confirm","loading","event","DeskDetailsComponent","ngOnChanges","changes","desk","updateFeature","map_url","zone","features","i18n_3","DeskFiltersComponent","allow_time_changes","allow_all_day","end_date","endOfDay","addDays","_bsheet_ref","_state","options","active_buildings","active_levels","form","dismiss","o","setOptions","f","e","setFeature","l","can_close","DeskFiltersDisplayComponent","value","_bsheet","DeskListComponent","combineLatest","available_assets","pipe","show_fav","filter","i","isFavourite","desk_id","favorites","selectDesk","onSelect","DeskMapComponent","x","y","unique","action","callback","levels","setZoom","new_zoom","zoom","max","min","resetMap","center","FAV_DESK_KEY","DeskSelectModalComponent","selected_ids","selected","_dialog_ref","_event_form","items","isSelected","setSelected","state","list","push","group","close","toggleFavourite","fav_list","saveUserSetting","InviteVisitorFormComponent","_service","last_success","sent","clearOldState","initFormZone","setValidators","Validators","visitors","email","company","split","filterVisitors","valueChanges","setVisitor","patchValue","s","toLowerCase","filtered_visitors","onDone","done","sendInvite","_this2","markAllAsTouched","valid","notifyError","getInvalidFields","visitor_details","old_visitors","attendees","User","organisation","postForm","catch","_this3","initialised","first","ParkingSpaceDetailsComponent","space","parent_id","_updateFeature","ParkingSpaceFiltersComponent","_form","max_duration","level_list","lvl","toggleFeature","feat","take","new_list","ParkingSpaceFiltersDisplayComponent","zone_ids","_updateLocation","removeFeature","ParkingSpaceListComponent","space_id","selectSpace","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceSelectMapComponent","available_spaces","debounceTime","_seletedSpace","length","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","space_r1","EMPTY_FAVS","ParkingSpaceListFieldComponent","fn","_onChange","_onTouch","disabled","changeResources","capacity","room_size","afterClosed","setValue","removeResource","new_value","writeValue","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","decls","DeskListFieldComponent","SharedBookingsModule","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","DesksService","bookDesk","error_on_host","currentUser","Array","DeskQuestionsModalComponent","success","Promise","race","queryBookings","period_start","getUnixTime","startOfDay","period_end","d","user_email","users","all","idx","makeDeskBooking","valueOf","for_user","booking_data","user_id","user_name","title","description","booking_type","groups","saveBooking","factory"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk.service.ts"],"sourcesContent":["import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifySuccess, SettingsService } from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { addMinutes, format, formatDuration } from 'date-fns';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"!auto_checkin\"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <!-- <button mat-menu-item mat-dialog-close class=\"flex items-center space-x-2 text-base\" (click)=\"edit.emit()\">\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button> -->\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(\n            this.booking.id,\n            !this.booking.checked_in\n        ).toPromise();\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id: this._booking.extension_data.map_id,\n                    level: this.level,\n                },\n            },\n        });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                overflow: hidden;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\nimport { BuildingLevel, Desk } from '@placeos/organisation';\nimport { User } from '@placeos/users';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [disabled]=\"form.value.all_day\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_assets,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { distinctUntilChanged, map, tap } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_assets;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_assets.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_assets.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.available_assets.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                location: desk.map_id || desk.id,\n                content: `<span class=\"flex h-4 w-4 rounded-full absolute top-1/4 left-1/4 transform -translate-x-1/2 -translate-y-1/2 border-[3px] shadow\" >\n                            <span class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-green-800 opacity-75\"></span>\n                            <span class=\"relative inline-flex rounded-full h-full w-full bg-green-800\"></span>\n                        </span>`,\n            }))\n        )\n    );\n\n    constructor(private _state: BookingFormService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async); else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n\n                            >Building<span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                formControlName=\"date\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"visitor-name\" i18n\n                            >Visitor Name<span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"visitor-name\"\n                                formControlName=\"asset_name\"\n                                placeholder=\"Name of the visitor\"\n                                (focus)=\"filterVisitors(form.value.asset_name)\"\n                                [matAutocomplete]=\"name_auto\"\n                            />\n                        </mat-form-field>\n                        <mat-autocomplete #name_auto=\"matAutocomplete\">\n                            <mat-option\n                                *ngFor=\"let item of filtered_visitors\"\n                                [value]=\"item.name\"\n                                (click)=\"setVisitor(item)\"\n                            >\n                                <div class=\"flex flex-col leading-tight\">\n                                    <div>{{ item.name }}</div>\n                                    <div class=\"text-xs opacity-60\">\n                                        {{ item.email }}\n                                        {{\n                                            item.company\n                                                ? '| ' + item.company\n                                                : ''\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-autocomplete>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"visitor-email\" i18n>\n                            Visitor Email<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"visitor-email\"\n                                type=\"email\"\n                                formControlName=\"asset_id\"\n                                placeholder=\"Email of the visitor\"\n                                (focus)=\"filterVisitors(form.value.asset_id)\"\n                                [matAutocomplete]=\"email_auto\"\n                            />\n                            <mat-error i18n\n                                >A valid email is required</mat-error\n                            >\n                        </mat-form-field>\n                        <mat-autocomplete #email_auto=\"matAutocomplete\">\n                            <mat-option\n                                *ngFor=\"let item of filtered_visitors\"\n                                [value]=\"item.email\"\n                                (click)=\"setVisitor(item)\"\n                            >\n                                <div class=\"flex flex-col leading-tight\">\n                                    <div>{{ item.name }}</div>\n                                    <div class=\"text-xs opacity-60\">\n                                        {{ item.email }}\n                                        {{\n                                            item.company\n                                                ? '| ' + item.company\n                                                : ''\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-autocomplete>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"visitor-name\" i18n>Company</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"company\"\n                                formControlName=\"company\"\n                                placeholder=\"Company of the visitor\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        {{ last_success?.asset_name || last_success?.asset_id }}\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>{{\n                            last_success?.asset_name || last_success?.asset_id\n                        }}</i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = filter.toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form)}]`\n            );\n        }\n        const { asset_id, asset_name, company } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        this.booking = await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({ zones: [this._org.building?.id] });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.level_list.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l;\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_assets,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [src]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { StaffUser, User } from '@placeos/users';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n"],"x_google_ignoreList":[]}