{"version":3,"mappings":"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","names":["CheckinStateService","constructor","this","BehaviorSubject","_event","asObservable","_guest","_error","_form","clear","next","_photo","setPhoto","data","setError","message","loadGuestAndEvent","email","event_id","guest","showGuest","toPromise","event","showEvent","generateGuestForm","host","upcoming","listGuestMeetings","today","Date","todays_events","filter","isSameDay","date","sort","a","b","length","Error","updateGuest","getValue","form","updateMetadata","name","details","Object","value","checkinGuest","checkinEventGuest","id","system_id","n","system","_a","i","resources","_b","printPass","Promise","res","setTimeout","err","notifyError","reject","factory","i0","CheckinDetailsComponent","_checkin","_router","ngOnInit","pipe","first","subscribe","_","previous","loading","navigate","selectors","CheckinPhotoComponent","handlePhoto","catch","e","RULE_TYPES","$event","set_r2","l","CateringConfigModalComponent","_data","EventEmitter","rulesets","config","map","set","rules","JSON","stringify","Math","floor","random","saveChanges","parse","emit","reason","metadata","MAT_DIALOG_DATA","ctx","CateringItemModalComponent","FormGroup","FormControl","item","Validators","description","category","unit_price","tags","accept_points","discount_cap","ENTER","COMMA","SPACE","CateringItem","categories","controls","renderPercent","addTag","markAsDirty","input","tag_list","trim","push","setValue","removeTag","existing_tag","index","indexOf","splice","randomInt","$localize","CateringItemOptionModalComponent","option","types","group","multiple","new_option","parent","options","concat","rf","ɵngcc0","_c0","_c1","a0","animationDuration","_c2","a1","params","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","tab_r4","$implicit","templateLabel","textLabel","_r12","restoredCtx","i_r5","ctx_r11","_r0","_handleClick","ctx_r13","_tabFocusChanged","MatTabGroup_div_2_ng_template_2_Template","MatTabGroup_div_2_ng_template_3_Template","ctx_r1","selectedIndex","_getTabLabelId","disabled","disableRipple","_getTabIndex","_tabs","_getTabContentId","ariaLabel","ariaLabelledby","_r17","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r14","i_r15","ctx_r3","content","position","origin","contentTabIndex","_c5","_c6","_c7","_c8","_MAT_INK_BAR_POSITIONER","InjectionToken","providedIn","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","hide","positions","inkBar","ɵfac","t","ANIMATION_MODULE_TYPE","ɵdir","type","hostAttrs","hostVars","hostBindings","MAT_TAB_CONTENT","MAT_TAB_LABEL","MAT_TAB","_MatTabBase","mixinDisabled","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","super","_contentPortal","_stateChanges","Subject","isActive","_templateLabel","_setTemplateLabelInput","ngOnChanges","changes","hasOwnProperty","ngOnDestroy","complete","TemplatePortal","_explicitContent","_implicitContent","_closestTab","ɵcmp","contentQueries","dirIndex","TemplateRef","_t","viewQuery","inputs","exportAs","features","provide","useExisting","ngContentSelectors","decls","vars","template","MatTab_ng_template_0_Template","encapsulation","matTabsAnimations","translateTab","trigger","state","transform","minHeight","transition","animate","MatTabBodyPortal","CdkPortalOutlet","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","Subscription","_leavingSub","_beforeCentering","startWith","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","forwardRef","MatTabBody","DOCUMENT","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","ɵngcc1","outputs","elementRef","_portalHost","consts","MatTabBody_ng_template_2_Template","directives","styles","animation","MAT_TABS_CONFIG","nextId","_MatTabGroupMixinBase","mixinColor","mixinDisableRipple","_MatTabGroupBase","_changeDetectorRef","defaultConfig","QueryList","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","dynamicHeight","_dynamicHeight","coerceBooleanProperty","coerceNumberProperty","_animationDuration","test","_contentTabIndex","_backgroundColor","classList","remove","backgroundColor","add","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","resolve","then","forEach","tab","ngAfterContentInit","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","_allTabs","reset","notifyOnChanges","destroy","realignInkBar","_tabHeader","_alignInkBarToSelectedTab","focusTab","header","focusIndex","_focusChanged","MatTabChangeEvent","merge","min","max","tabHeight","height","offsetHeight","tabHeader","idx","focusOrigin","MatTabGroup","animationMode","color","MatTabGroup_div_2_Template","MatTabGroup_mat_tab_body_5_Template","MatTabHeader","ɵngcc2","MatTabLabelWrapper","ɵngcc3","ɵngcc4","ɵngcc5","_MatTabLabelWrapperBase","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","of","resize","realign","updatePagination","FocusKeyManager","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","run","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","hasModifierKey","keyCode","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","_handlePaginatorClick","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","timer","maxScrollDistance","distance","ɵngcc6","ɵngcc7","_MatTabHeaderBase","viewportRuler","ngZone","platform","_disableRipple","preventDefault","ɵngcc8","is_available","rule","includes","space","zones","matches","condition","isAfter","setHours","isBefore","duration","stringToMinutes","ext","CateringOrderModalComponent","BaseClass","order","CateringOrder","getCateringConfig","level","_c","parent_id","menu","list","unique","cat","cateringItemAvailable","menu_items","updateMenuQuantities","timeout","addItem","choose_options","old_item","items","find","itm","reduce","c","o","opt","selectOptions","new_item","r","options_string","quantity","removeItem","updateItemQuantity","amount","localeCompare","optionsFor","join","saveOrder","confirmOrder","show_order_details","CateringOrderOptionsModalComponent","groups","group_list","updateGroupOption","option_state","saveOptions","CateringImportMenuModalComponent","handleFileEvent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","result","toLowerCase","readAsText","downloadTemplate","downloadFile","CateringStateService","_org","_dialog","_menu","_loading","_currency","subscription","active_building","bld","__awaiter","getCateringForZone","currency","manageCateringOrder","ref","open","race","componentInstance","afterClosed","close","findIndex","updateMenu","building","addOption","deleteItem","openConfirmModal","title","icon","class","deleteOption","editConfig","flatten","updateConfig","importMenu","updated_menu","notifySuccess","zone_id","showMetadata","Array","addItemToOrder","match","m","g","CheckinPreferencesComponent","_catering","update","beverage","updateEvent","CalendarEvent","extension_data","catering","QrScanner","hasCamera","listCameras","cameras","requestLabels","navigator","mediaDevices","openedStream","getUserMedia","audio","video","stream","enumerateDevices","devices","device","kind","deviceId","label","finally","track","getTracks","stop","removeTrack","onDecode","canvasSizeOrOnDecodeError","_onDecodeError","canvasSizeOrCalculateScanRegion","_calculateScanRegion","preferredCamera","$video","$canvas","document","createElement","_onDecode","_legacyCanvasSize","DEFAULT_CANVAS_SIZE","_preferredCamera","_active","_paused","_flashOn","console","warn","_scanRegion","_onPlay","bind","_onLoadedMetaData","_onVisibilityChange","disablePictureInPicture","playsInline","muted","shouldHideVideo","hidden","body","contains","appendChild","computedStyle","window","getComputedStyle","display","setProperty","opacity","_qrEnginePromise","createQrEngine","hasFlash","srcObject","getVideoTracks","_getCameraStream","getSettings","isFlashOn","toggleFlash","turnFlashOff","turnFlashOn","applyConstraints","advanced","torch","_restartVideoStream","removeEventListener","_postWorkerMessage","start","location","protocol","play","facingMode","_setVideoMirror","pause","stopStreamImmediately","stopStream","tracks","setCamera","facingModeOrDeviceId","imageOrFileOrUrl","scanRegion","qrEngine","canvas","disallowCanvasResizing","alsoTryWithoutScanRegion","gotExternalWorker","Worker","promise","all","_loadImage","engine","image","canvasContext","_drawToCanvas","postMessage","onMessage","onError","clearTimeout","S","NO_QR_CODE_FOUND","imageData","getImageData","buffer","detect","scanResults","rawValue","scanImage","setGrayscaleWeights","red","green","blue","useIntegerApproximation","setInversionMode","inversionMode","workerPath","WORKER_PATH","BarcodeDetector","getSupportedFormats","supportedFormats","formats","_scanFrame","smallestDimension","videoWidth","videoHeight","scanRegionSize","downScaledWidth","downScaledHeight","paused","ended","readyState","error","log","preferenceType","constraintsWithoutCamera","constraint","assign","exact","reduceRight","fallback","_getFacingMode","wasPaused","videoStream","videoTrack","scanRegionX","scanRegionY","scanRegionWidth","scanRegionHeight","canvasWidth","canvasHeight","context","getContext","alpha","imageSmoothingEnabled","drawImage","imageOrFileOrBlobOrUrl","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","Blob","URL","src","createObjectURL","revokeObjectURL","naturalWidth","onLoad","qrEngineOrQrEnginePromise","CheckinQRScanComponent","setupQRReader","_video_el","_reader","checkQRCode","raw_text","chunks","split","handleError","checkEmail","statusText","CheckinResultsComponent","CheckinErrorComponent","CheckinCovidComponent","confirm","symptoms","contact","covid","ROUTES","path","component","_settings","get","CheckinComponent","children","redirectTo","VisitorCheckinModule","CommonModule","FormsModule","ReactiveFormsModule","SharedComponentsModule","RouterModule"],"sources":["./apps/visitor-kiosk/src/app/checkin/checkin-state.service.ts","./apps/visitor-kiosk/src/app/checkin/checkin-details.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-photo.component.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./node_modules/@angular/material/fesm2015/tabs.js","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./apps/visitor-kiosk/src/app/checkin/checkin-preferences.component.ts","./node_modules/qr-scanner/src/qr-scanner.js","./apps/visitor-kiosk/src/app/checkin/checkin-qr-scan.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-result.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-error.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-covid.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin.module.ts","./apps/visitor-kiosk/src/app/checkin/checkin.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { HashMap, notifyError } from '@placeos/common';\nimport { CalendarEvent, checkinEventGuest, showEvent } from '@placeos/events';\nimport {\n    GuestUser,\n    generateGuestForm,\n    showGuest,\n    listGuestMeetings,\n} from '@placeos/users';\nimport { isSameDay } from 'date-fns';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CheckinStateService {\n    /** Current event being checked in */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    /** Current guest being checked in */\n    private _guest = new BehaviorSubject<GuestUser>(null);\n    /** Photo of the current guest */\n    private _photo = new BehaviorSubject<string>('');\n    /** Photo of the current guest */\n    private _error = new BehaviorSubject<string>('');\n    /** Form for the current guest details */\n    private _form = new BehaviorSubject<FormGroup>(null);\n\n    public readonly event = this._event.asObservable();\n    public readonly guest = this._guest.asObservable();\n    public readonly error = this._error.asObservable();\n    public readonly form = this._form.asObservable();\n\n    public clear() {\n        this._guest.next(null);\n        this._event.next(null);\n        this._photo.next(null);\n    }\n\n    public setPhoto(data: string) {\n        this._photo.next(data);\n    }\n\n    public setError(message: string) {\n        this._error.next(message);\n    }\n\n    /** Load gie */\n    public async loadGuestAndEvent(email: string, event_id?: string) {\n        const guest = await showGuest(email).toPromise();\n        if (event_id) {\n            const event = await showEvent(event_id).toPromise();\n            this._guest.next(guest);\n            this._event.next(event);\n            this._form.next(generateGuestForm(guest, event.host));\n            return { guest, event };\n        }\n        const upcoming = await listGuestMeetings(email).toPromise();\n        const today = new Date();\n        const todays_events = upcoming.filter((event) =>\n            isSameDay(new Date(event.date), today)\n        );\n        todays_events.sort((a, b) => a.date - b.date);\n        if (todays_events.length <= 0) {\n            throw new Error(`No meetings for with guest \"${email}\" today`);\n        }\n        this._guest.next(guest);\n        this._event.next(todays_events[0]);\n        this._form.next(generateGuestForm(guest, todays_events[0].host));\n        return { guest, event: todays_events[0] };\n    }\n\n    public async updateGuest(data?: HashMap) {\n        const guest = this._guest.getValue();\n        const form = this._form.getValue();\n        if (!guest || !form) return;\n        await updateMetadata(guest.email, {\n            name: 'preferences',\n            details: { ...guest, ...form.value, ...(data || {}) },\n        }).toPromise();\n    }\n\n    public async checkinGuest() {\n        const guest = this._guest.getValue();\n        const event = this._event.getValue();\n        if (!guest || !event) return;\n        await checkinEventGuest(event.id, guest.email, true, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        }).toPromise();\n    }\n\n    public printPass() {\n        try {\n            // TODO: actually trigger print visitor pass\n            return new Promise((res) => setTimeout(() => res(''), 5000));\n        } catch (err) {\n            notifyError('Error printing visitor pass');\n        }\n        return Promise.reject();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-details]',\n    template: `\n        <form\n            *ngIf=\"(form | async) && !loading; else load_state\"\n            [formGroup]=\"form | async\"\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto\"\n        >\n            <h3 class=\"text-2xl m-4\">Confirm Details</h3>\n            <div field class=\"flex flex-col\">\n                <label form=\"host\">Host</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"host\"\n                        formControlName=\"host\"\n                        placeholder=\"Host's Email Address\"\n                    />\n                    <mat-error>\n                        The email address of your host is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"name\">Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        formControlName=\"name\"\n                        placeholder=\"Full Name\"\n                    />\n                    <mat-error>Please enter your full name</mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Email</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        formControlName=\"email\"\n                        placeholder=\"Email Address\"\n                    />\n                    <mat-error>A valid email address is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Phone Number</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        formControlName=\"phone\"\n                        placeholder=\"Phone Number\"\n                    />\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Organisation / Company</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        formControlName=\"phone\"\n                        placeholder=\"Organisation / Company\"\n                    />\n                </mat-form-field>\n            </div>\n            <button next mat-button (click)=\"updateGuest()\">Next</button>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </form>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center m-auto\">\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <div class=\"my-4 text-lg text-white\">\n                    Updating data and checking in...\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            form {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            [field] {\n                width: calc(100% - 2rem);\n            }\n\n            .absolute {\n                position: absolute;\n            }\n\n            button {\n                margin-bottom: 1rem;\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class CheckinDetailsComponent implements OnInit {\n    public readonly form = this._checkin.form;\n\n    public loading = false;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        this.form.pipe(first()).subscribe((_) => (!_ ? this.previous() : ''));\n    }\n\n    public async updateGuest() {\n        this.loading = true;\n        await this._checkin.updateGuest();\n        await this._checkin.checkinGuest();\n        this.loading = false;\n        this._router.navigate(['/checkin', 'covid']);\n    }\n\n    public previous() {\n        this._router.navigate(['/checkin', 'scan']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-photo',\n    template: `\n        <div class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center p-4\" *ngIf=\"!loading; else load_state\">\n            <h3 class=\"text-xl mb-4\">Take a photo to continue</h3>\n            <a-take-photo (photoAccepted)=\"handlePhoto($event)\"></a-take-photo>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center m-auto\">\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <div class=\"my-4 text-lg text-white\">\n                    Printing guest pass...\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n        }\n\n        .absolute {\n            position: absolute;\n        }\n    `]\n})\nexport class CheckinPhotoComponent {\n    /** Whether guest pass is being loaded */\n    public loading: boolean;\n\n    constructor(private _checkin: CheckinStateService, private _router: Router) { }\n\n    public async handlePhoto(event: any) {\n        if (!event) {\n            return notifyError('Error saving image, please try again');\n        }\n        this.loading = true;\n        this._checkin.setPhoto(event);\n        await this._checkin.printPass().catch((e) => {\n            this.loading = false;\n            notifyError(e);\n            throw e;\n        });\n        this.loading = false;\n        this._router.navigate(['/checkin', 'results']);\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour', number]\n    | ['min_length' | 'max_length' | 'is_before' | 'is_after' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour' },\n    { id: 'before_hour', name: 'Before Hour' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Before Time' },\n    { id: 'is_after', name: 'Is After Time' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n]\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center\">\n            <button\n                mat-button\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 3.5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex px-2 h-14 space-x-2\"\n                        *ngFor=\"let rule of set.rules\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button (click)=\"saveChanges()\">Save Changes</button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n\n            main {\n                width: 32em;\n                padding: 0.5em 1em 1em;\n            }\n\n            main button.mat-button {\n                margin: 0 auto 0.5em;\n                min-width: 12em;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.category\">\n                <label\n                    for=\"category\"\n                    [class.error]=\"\n                        form.controls.category.invalid &&\n                        form.controls.category.touched\n                    \"\n                >\n                    Category<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"category\"\n                        placeholder=\"Category\"\n                        formControlName=\"category\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Category is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-list #chipList aria-label=\"Item Tags\">\n                        <mat-chip\n                            *ngFor=\"let tag of tag_list\"\n                            [selectable]=\"true\"\n                            [removable]=\"true\"\n                            (removed)=\"removeTag(tag)\"\n                        >\n                            {{ tag }}\n                            <app-icon\n                                matChipRemove\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'close'\n                                }\"\n                            ></app-icon>\n                        </mat-chip>\n                        <input\n                            name=\"tags\"\n                            placeholder=\"Zone tags...\"\n                            i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                            [matChipInputFor]=\"chipList\"\n                            [matChipInputSeparatorKeyCodes]=\"separators\"\n                            [matChipInputAddOnBlur]=\"true\"\n                            (matChipInputTokenEnd)=\"addTag($event)\"\n                        />\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form: FormGroup = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>\n                {{ option.id ? 'Edit' : 'Add' }} Item Option\n            </h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemOptionModalComponent implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.option.name || '', [\n                Validators.required,\n            ]),\n            group: new FormControl(this.option.group || '', [\n                Validators.required,\n            ]),\n            unit_price: new FormControl(this.option.unit_price),\n            multiple: new FormControl(!!this.option.multiple, []),\n        });\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const i_r5 = restoredCtx.index; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._tabFocusChanged($event, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r15);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r15 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return new (t || MatTabLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB, 8)); };\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabel.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB, useExisting: MatTab }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }, { type: Optional }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab',\n                providers: [{ provide: MAT_TAB, useExisting: MatTab }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }, {\n                type: Optional\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        var _a;\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\n            defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = (_a = defaultConfig === null || defaultConfig === void 0 ? void 0 : defaultConfig.contentTabIndex) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() { return this._contentTabIndex; }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", contentTabIndex: \"contentTabIndex\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    contentTabIndex: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], contentTabIndex: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 9, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() { return ctx._handleFocus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                    '(focus)': '_handleFocus()'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { isAfter, setHours, isBefore } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseClass, DialogEvent, HashMap, unique } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches++;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{ item.unit_price / 100 | currency }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                mat-icon-button\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            mat-icon-button\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button mat-button class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    mat-button\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    mat-button\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save mat-button (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n            <!-- <div class=\"charge-code\" [formGroup]=\"form\">\n                <input\n                    formControlName=\"charge_code\"\n                    [class.error]=\"\n                        form.controls.charge_code.touched &&\n                        form.controls.charge_code.invalid\n                    \"\n                    placeholder=\"Charge Code*\"\n                    required\n                />\n            </div> -->\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n\n                &:focus {\n                    border: none;\n                    border-top: 2px solid var(--primary);\n                    border-bottom: 2px solid var(--primary);\n                    box-shadow: none;\n                }\n\n                &.error::placeholder {\n                    color: rgba(var(--error), 0.45);\n                }\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent extends BaseClass implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /**  */\n    public readonly form: FormGroup;\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    options: CateringOption[];\n}\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{ opt.unit_price / 100 | currency }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button mat-button class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    mat-button\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { updateMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends BaseClass {\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(bld.currency || 'USD');\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (\n            await showMetadata(zone_id, 'catering').toPromise()\n        ).details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Calendar } from '@placeos/calendar';\n\nimport {\n    CateringItem,\n    CateringOrder,\n    CateringStateService,\n} from '@placeos/catering';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { CalendarEvent, updateEvent } from '@placeos/events';\nimport { first, map } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-preferences',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto\"\n        >\n            <h3 class=\"text-xl mb-2 w-full\">Would you like a drink?</h3>\n            <div class=\"w-full\">\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <mat-select\n                        [(ngModel)]=\"beverage\"\n                        placeholder=\"Select beverage\"\n                    >\n                        <mat-option\n                            *ngFor=\"let item of menu | async\"\n                            [value]=\"item\"\n                        >\n                            {{ item.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button class=\"w-32\" (click)=\"update()\">\n                {{ beverage ? 'Update' : 'Continue' }}\n            </button>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinPreferencesComponent {\n    public beverage: CateringItem;\n\n    public readonly menu = this._catering.menu.pipe(\n        map((l) => {\n            return l.filter((_) =>\n                _.tags.find((_) => _.toLowerCase() === 'drink')\n            );\n        })\n    );\n\n    constructor(\n        private _router: Router,\n        private _checkin: CheckinStateService,\n        private _catering: CateringStateService\n    ) {}\n\n    public async update() {\n        if (!this.beverage) return this.next();\n        const event = await this._checkin.event\n            .pipe(first((_) => !!_))\n            .toPromise();\n        if (!event) return notifyError('Unable to load event data.');\n        const order =\n            (event.ext('catering') ? event.ext('catering')[0] : null) ||\n            new CateringOrder();\n        await updateEvent(\n            event.id,\n            new CalendarEvent({\n                ...event,\n                extension_data: {\n                    ...event.extension_data,\n                    catering: [\n                        ...(event.extension_data.catering?.filter(\n                            (_) => _.id !== order.id\n                        ) || []),\n                        new CateringOrder({\n                            ...order,\n                            items: [\n                                ...order.items,\n                                new CateringItem({\n                                    ...this.beverage,\n                                    quantity: 1,\n                                }),\n                            ],\n                        }),\n                    ],\n                },\n            })\n        ).toPromise();\n        notifySuccess('Successfully update event.');\n        this.next();\n    }\n\n    public next() {\n        this._router.navigate(['/welcome']);\n    }\n}\n","export default class QrScanner {\n    /* async */\n    static hasCamera() {\n        return QrScanner.listCameras(false)\n            .then(cameras => !!cameras.length)\n            .catch(() => false);\n    }\n\n    /* async */\n    static listCameras(requestLabels = false) {\n        if (!navigator.mediaDevices) return Promise.resolve([]);\n\n        // Note that enumerateDevices can always be called and does not prompt the user for permission.\n        // However, enumerateDevices only includes device labels if served via https and an active media stream exists\n        // or permission to access the camera was given. Therefore, ask for camera permission by opening a stream, if\n        // labels were requested.\n        let openedStream = null;\n        return (requestLabels\n            ? navigator.mediaDevices.getUserMedia({ audio: false, video: true })\n                .then(stream => openedStream = stream)\n                // Fail gracefully, especially if the device has no camera or on mobile when the camera is already in\n                // use and some browsers disallow a second stream.\n                .catch(() => {})\n            : Promise.resolve()\n        )\n            .then(() => navigator.mediaDevices.enumerateDevices())\n            .then(devices => devices.filter(device => device.kind === 'videoinput').map((device, i) => ({\n                id: device.deviceId,\n                label: device.label || (i === 0 ? 'Default Camera' : `Camera ${i + 1}`),\n            })))\n            .finally(() => {\n                // close the stream we just opened for getting camera access for listing the device labels\n                if (!openedStream) return;\n                for (const track of openedStream.getTracks()) {\n                    track.stop();\n                    openedStream.removeTrack(track);\n                }\n            });\n    }\n\n    constructor(\n        video,\n        onDecode,\n        canvasSizeOrOnDecodeError = this._onDecodeError,\n        canvasSizeOrCalculateScanRegion = this._calculateScanRegion,\n        preferredCamera = 'environment'\n    ) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n        this._onDecode = onDecode;\n        this._legacyCanvasSize = QrScanner.DEFAULT_CANVAS_SIZE;\n        this._preferredCamera = preferredCamera;\n        this._active = false;\n        this._paused = false;\n        this._flashOn = false;\n\n        if (typeof canvasSizeOrOnDecodeError === 'number') {\n            // legacy function signature where the third argument is the canvas size\n            this._legacyCanvasSize = canvasSizeOrOnDecodeError;\n            console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                + 'the future');\n        } else {\n            this._onDecodeError = canvasSizeOrOnDecodeError;\n        }\n\n        if (typeof canvasSizeOrCalculateScanRegion === 'number') {\n            // legacy function signature where the fourth argument is the canvas size\n            this._legacyCanvasSize = canvasSizeOrCalculateScanRegion;\n            console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                + 'the future');\n        } else {\n            this._calculateScanRegion = canvasSizeOrCalculateScanRegion;\n        }\n\n        this._scanRegion = this._calculateScanRegion(video);\n\n        this._onPlay = this._onPlay.bind(this);\n        this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n        video.disablePictureInPicture = true;\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        video.muted = true;\n\n        // Avoid Safari stopping the video stream on a hidden video.\n        // See https://github.com/cozmo/jsQR/issues/185\n        let shouldHideVideo = false;\n        if (video.hidden) {\n            video.hidden = false;\n            shouldHideVideo = true;\n        }\n        if (!document.body.contains(video)) {\n            document.body.appendChild(video);\n            shouldHideVideo = true;\n        }\n        requestAnimationFrame(() => {\n            // Checking in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle.\n            const computedStyle = window.getComputedStyle(video);\n            if (computedStyle.display === 'none') {\n                video.style.setProperty('display', 'block', 'important');\n                shouldHideVideo = true;\n            }\n            if (computedStyle.visibility !== 'visible') {\n                video.style.setProperty('visibility', 'visible', 'important');\n                shouldHideVideo = true;\n            }\n            if (shouldHideVideo) {\n                // Hide the video in a way that doesn't cause Safari to stop the playback.\n                console.warn('QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.');\n                video.style.opacity = 0;\n                video.style.width = 0;\n                video.style.height = 0;\n            }\n        });\n\n        video.addEventListener('play', this._onPlay);\n        video.addEventListener('loadedmetadata', this._onLoadedMetaData);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n\n        this._qrEnginePromise = QrScanner.createQrEngine();\n    }\n\n    /* async */\n    hasFlash() {\n        let openedStream = null;\n        return (this.$video.srcObject\n            ? Promise.resolve(this.$video.srcObject.getVideoTracks()[0])\n            : this._getCameraStream().then(({ stream }) => {\n                console.warn('Call hasFlash after successfully starting the scanner to avoid creating '\n                    + 'a temporary video stream');\n                openedStream = stream;\n                return stream.getVideoTracks()[0];\n            })\n        )\n            .then((track) => 'torch' in track.getSettings())\n            .catch(() => false)\n            .finally(() => {\n                // close the stream we just opened for detecting whether it supports flash\n                if (!openedStream) return;\n                for (const track of openedStream.getTracks()) {\n                    track.stop();\n                    openedStream.removeTrack(track);\n                }\n            });\n    }\n\n    isFlashOn() {\n      return this._flashOn;\n    }\n\n    /* async */\n    toggleFlash() {\n        if (this._flashOn) {\n            return this.turnFlashOff();\n        } else {\n            return this.turnFlashOn();\n        }\n    }\n\n    /* async */\n    turnFlashOn() {\n        if (this._flashOn) return Promise.resolve();\n        this._flashOn = true;\n        if (!this._active || this._paused) return Promise.resolve(); // flash will be turned on later on .start()\n        return this.hasFlash().then((hasFlash) => {\n            if (!hasFlash) return Promise.reject('No flash available');\n            // Note that the video track is guaranteed to exist at this point\n            return this.$video.srcObject.getVideoTracks()[0].applyConstraints({\n                advanced: [{ torch: true }],\n            });\n        }).catch(() => {\n            this._flashOn = false;\n            throw e;\n        });\n    }\n\n    /* async */\n    turnFlashOff() {\n        if (!this._flashOn) return;\n        // applyConstraints with torch: false does not work to turn the flashlight off, as a stream's torch stays\n        // continuously on, see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#torch. Therefore,\n        // we have to stop the stream to turn the flashlight off.\n        this._flashOn = false;\n        return this._restartVideoStream();\n    }\n\n    destroy() {\n        this.$video.removeEventListener('loadedmetadata', this._onLoadedMetaData);\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n\n        this.stop();\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'close');\n    }\n\n    /* async */\n    start() {\n        if (this._active && !this._paused) {\n            return Promise.resolve();\n        }\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n        this._active = true;\n        if (document.hidden) {\n            // camera will be started as soon as tab is in foreground\n            return Promise.resolve();\n        }\n        this._paused = false;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            this.$video.play();\n            return Promise.resolve();\n        }\n\n        return this._getCameraStream()\n            .then(({ stream, facingMode }) => {\n                this.$video.srcObject = stream;\n                this.$video.play();\n                this._setVideoMirror(facingMode);\n\n                // Restart the flash if it was previously on\n                if (this._flashOn) {\n                    this._flashOn = false; // force turnFlashOn to restart the flash\n                    this.turnFlashOn().catch(() => {});\n                }\n            })\n            .catch(e => {\n                this._active = false;\n                throw e;\n            });\n    }\n\n    stop() {\n        this.pause();\n        this._active = false;\n    }\n\n    /* async */\n    pause(stopStreamImmediately = false) {\n        this._paused = true;\n        if (!this._active) {\n            return Promise.resolve(true);\n        }\n        this.$video.pause();\n\n        const stopStream = () => {\n            const tracks = this.$video.srcObject ? this.$video.srcObject.getTracks() : [];\n            for (const track of tracks) {\n                track.stop(); //  note that this will also automatically turn the flashlight off\n                this.$video.srcObject.removeTrack(track);\n            }\n            this.$video.srcObject = null;\n        };\n\n        if (stopStreamImmediately) {\n            stopStream();\n            return Promise.resolve(true);\n        }\n\n        return new Promise((resolve) => setTimeout(resolve, 300))\n            .then(() => {\n                if (!this._paused) return false;\n                stopStream();\n                return true;\n            });\n    }\n\n    /* async */\n    setCamera(facingModeOrDeviceId) {\n        if (facingModeOrDeviceId === this._preferredCamera) return Promise.resolve();\n        this._preferredCamera = facingModeOrDeviceId;\n        // Restart the scanner with the new camera which will also update the video mirror and the scan region.\n        return this._restartVideoStream();\n    }\n\n    /* async */\n    static scanImage(imageOrFileOrUrl, scanRegion=null, qrEngine=null, canvas=null, disallowCanvasResizing=false,\n                     alsoTryWithoutScanRegion=false) {\n        const gotExternalWorker = qrEngine instanceof Worker;\n\n        let promise = Promise.all([\n            qrEngine || QrScanner.createQrEngine(),\n            QrScanner._loadImage(imageOrFileOrUrl),\n        ]).then(([engine, image]) => {\n            qrEngine = engine;\n            let canvasContext;\n            [canvas, canvasContext] = this._drawToCanvas(image, scanRegion, canvas, disallowCanvasResizing);\n\n            if (qrEngine instanceof Worker) {\n                if (!gotExternalWorker) {\n                    // Enable scanning of inverted color qr codes. Not using _postWorkerMessage as it's async\n                    qrEngine.postMessage({ type: 'inversionMode', data: 'both' });\n                }\n                return new Promise((resolve, reject) => {\n                    let timeout, onMessage, onError;\n                    onMessage = event => {\n                        if (event.data.type !== 'qrResult') {\n                            return;\n                        }\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        if (event.data.data !== null) {\n                            resolve(event.data.data);\n                        } else {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        }\n                    };\n                    onError = (e) => {\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        const errorMessage = !e ? 'Unknown Error' : (e.message || e);\n                        reject('Scanner error: ' + errorMessage);\n                    };\n                    qrEngine.addEventListener('message', onMessage);\n                    qrEngine.addEventListener('error', onError);\n                    timeout = setTimeout(() => onError('timeout'), 10000);\n                    const imageData = canvasContext.getImageData(0, 0, canvas.width, canvas.height);\n                    qrEngine.postMessage({\n                        type: 'decode',\n                        data: imageData\n                    }, [imageData.data.buffer]);\n                });\n            } else {\n                return new Promise((resolve, reject) => {\n                    const timeout = setTimeout(() => reject('Scanner error: timeout'), 10000);\n                    qrEngine.detect(canvas).then(scanResults => {\n                        if (!scanResults.length) {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        } else {\n                            resolve(scanResults[0].rawValue);\n                        }\n                    }).catch((e) => reject('Scanner error: ' + (e.message || e))).finally(() => clearTimeout(timeout));\n                });\n            }\n        });\n\n        if (scanRegion && alsoTryWithoutScanRegion) {\n            promise = promise.catch(() =>\n                QrScanner.scanImage(imageOrFileOrUrl, null, qrEngine, canvas, disallowCanvasResizing));\n        }\n\n        promise = promise.finally(() => {\n            if (gotExternalWorker) return;\n            QrScanner._postWorkerMessage(qrEngine, 'close');\n        });\n\n        return promise;\n    }\n\n    setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations work also\n        // well with colored qr codes.\n        QrScanner._postWorkerMessage(\n            this._qrEnginePromise,\n            'grayscaleWeights',\n            { red, green, blue, useIntegerApproximation }\n        );\n    }\n\n    setInversionMode(inversionMode) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations scan normal\n        // and inverted qr codes by default\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'inversionMode', inversionMode);\n    }\n\n    /* async */\n    static createQrEngine(workerPath = QrScanner.WORKER_PATH) {\n        return ('BarcodeDetector' in window && BarcodeDetector.getSupportedFormats\n            ? BarcodeDetector.getSupportedFormats()\n            : Promise.resolve([])\n        )\n            .then((supportedFormats) => supportedFormats.indexOf('qr_code') !== -1\n                ? new BarcodeDetector({ formats: ['qr_code'] })\n                : new Worker(workerPath)\n            );\n    }\n\n    _onPlay() {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n        this._scanFrame();\n    }\n\n    _onLoadedMetaData() {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n    }\n\n    _onVisibilityChange() {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    _calculateScanRegion(video) {\n        // Default scan region calculation. Note that this can be overwritten in the constructor.\n        const smallestDimension = Math.min(video.videoWidth, video.videoHeight);\n        const scanRegionSize = Math.round(2 / 3 * smallestDimension);\n        return {\n            x: Math.round((video.videoWidth - scanRegionSize) / 2),\n            y: Math.round((video.videoHeight - scanRegionSize) / 2),\n            width: scanRegionSize,\n            height: scanRegionSize,\n            downScaledWidth: this._legacyCanvasSize,\n            downScaledHeight: this._legacyCanvasSize,\n        };\n    }\n\n    _scanFrame() {\n        if (!this._active || this.$video.paused || this.$video.ended) return false;\n        // using requestAnimationFrame to avoid scanning if tab is in background\n        requestAnimationFrame(() => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n            this._qrEnginePromise\n                .then((qrEngine) => QrScanner.scanImage(this.$video, this._scanRegion, qrEngine, this.$canvas))\n                .then(this._onDecode, (error) => {\n                    if (!this._active) return;\n                    const errorMessage = error.message || error;\n                    if (errorMessage.indexOf('service unavailable') !== -1) {\n                        // When the native BarcodeDetector crashed, create a new one\n                        this._qrEnginePromise = QrScanner.createQrEngine();\n                    }\n                    this._onDecodeError(error);\n                })\n                .then(() => this._scanFrame());\n        });\n    }\n\n    _onDecodeError(error) {\n        // default error handler; can be overwritten in the constructor\n        if (error === QrScanner.NO_QR_CODE_FOUND) return;\n        console.log(error);\n    }\n\n    /* async */\n    _getCameraStream() {\n        if (!navigator.mediaDevices) {\n            return Promise.reject('Camera not found.');\n        }\n\n        const preferenceType = this._preferredCamera === 'environment' || this._preferredCamera === 'user'\n            ? 'facingMode'\n            : 'deviceId';\n        const constraintsWithoutCamera = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n        const constraintsWithCamera = constraintsWithoutCamera.map((constraint) => Object.assign({}, constraint, {\n            [preferenceType]: { exact: this._preferredCamera },\n        }));\n\n        // First try constraints with camera, then without camera. Using reduceRight as the Promise is build in a\n        // bottom up fashion.\n        return [...constraintsWithCamera, ...constraintsWithoutCamera].reduceRight((fallback, constraint) =>\n            () => navigator.mediaDevices.getUserMedia({ video: constraint, audio: false })\n                .then((stream) => ({\n                    stream,\n                    // Try to determine the facing mode from the stream, otherwise use a guess or 'environment' as\n                    // default. Note that the guess is not always accurate as Safari returns cameras of different facing\n                    // mode, even for exact facingMode constraints.\n                    facingMode: this._getFacingMode(stream)\n                        || (constraint.facingMode\n                            ? this._preferredCamera // _preferredCamera is a facing mode and we are able to fulfill it\n                            : (this._preferredCamera === 'environment'\n                                ? 'user' // switch as _preferredCamera was environment but we are not able to fulfill it\n                                : 'environment' // switch from unfulfilled user facingMode or default to environment\n                            )\n                        ),\n                }))\n                .catch(fallback),\n            () => Promise.reject('Camera not found.')\n        )();\n    }\n\n    /* async */\n    _restartVideoStream() {\n        // Note that we always pause the stream and not only if !this._paused as even if this._paused === true, the\n        // stream might still be running, as it's by default only stopped after a delay of 300ms.\n        const wasPaused = this._paused;\n        return this.pause(true).then((paused) => {\n            if (!paused || wasPaused || !this._active) return;\n            return this.start();\n        });\n    }\n\n    _setVideoMirror(facingMode) {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode==='user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    _getFacingMode(videoStream) {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return null; // unknown\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /rear|back|environment/i.test(videoTrack.label)\n            ? 'environment'\n            : /front|user|face/i.test(videoTrack.label)\n                ? 'user'\n                : null; // unknown\n    }\n\n    static _drawToCanvas(image, scanRegion=null, canvas=null, disallowCanvasResizing=false) {\n        canvas = canvas || document.createElement('canvas');\n        const scanRegionX = scanRegion && scanRegion.x? scanRegion.x : 0;\n        const scanRegionY = scanRegion && scanRegion.y? scanRegion.y : 0;\n        const scanRegionWidth = scanRegion && scanRegion.width? scanRegion.width : image.width || image.videoWidth;\n        const scanRegionHeight = scanRegion && scanRegion.height? scanRegion.height : image.height || image.videoHeight;\n\n        if (!disallowCanvasResizing) {\n            const canvasWidth = scanRegion && scanRegion.downScaledWidth\n                ? scanRegion.downScaledWidth\n                : scanRegionWidth;\n            const canvasHeight = scanRegion && scanRegion.downScaledHeight\n                ? scanRegion.downScaledHeight\n                : scanRegionHeight;\n            // Setting the canvas width or height clears the canvas, even if the values didn't change, therefore only\n            // set them if they actually changed.\n            if (canvas.width !== canvasWidth) {\n                canvas.width = canvasWidth;\n            }\n            if (canvas.height !== canvasHeight) {\n                canvas.height = canvasHeight;\n            }\n        }\n\n        const context = canvas.getContext('2d', { alpha: false });\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(\n            image,\n            scanRegionX, scanRegionY, scanRegionWidth, scanRegionHeight,\n            0, 0, canvas.width, canvas.height\n        );\n        return [canvas, context];\n    }\n\n    /* async */\n    static _loadImage(imageOrFileOrBlobOrUrl) {\n        if (imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement || imageOrFileOrBlobOrUrl instanceof HTMLVideoElement\n            || window.ImageBitmap && imageOrFileOrBlobOrUrl instanceof window.ImageBitmap\n            || window.OffscreenCanvas && imageOrFileOrBlobOrUrl instanceof window.OffscreenCanvas) {\n            return Promise.resolve(imageOrFileOrBlobOrUrl);\n        } else if (imageOrFileOrBlobOrUrl instanceof Image) {\n            return QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl).then(() => imageOrFileOrBlobOrUrl);\n        } else if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob\n            || imageOrFileOrBlobOrUrl instanceof URL || typeof(imageOrFileOrBlobOrUrl)==='string') {\n            const image = new Image();\n            if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n            } else {\n                image.src = imageOrFileOrBlobOrUrl;\n            }\n            return QrScanner._awaitImageLoad(image).then(() => {\n                if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                    URL.revokeObjectURL(image.src);\n                }\n                return image;\n            });\n        } else {\n            return Promise.reject('Unsupported image type.');\n        }\n    }\n\n    /* async */\n    static _awaitImageLoad(image) {\n        return new Promise((resolve, reject) => {\n            if (image.complete && image.naturalWidth!==0) {\n                // already loaded\n                resolve();\n            } else {\n                let onLoad, onError;\n                onLoad = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    resolve();\n                };\n                onError = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    reject('Image load error');\n                };\n                image.addEventListener('load', onLoad);\n                image.addEventListener('error', onError);\n            }\n        });\n    }\n\n    /* async */\n    static _postWorkerMessage(qrEngineOrQrEnginePromise, type, data) {\n        return Promise.resolve(qrEngineOrQrEnginePromise).then((qrEngine) => {\n            if (!(qrEngine instanceof Worker)) return;\n            qrEngine.postMessage({ type, data });\n        });\n    }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.NO_QR_CODE_FOUND = 'No QR code found';\nQrScanner.WORKER_PATH = 'qr-scanner-worker.min.js';\n","import {\n    Component,\n    ElementRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport QrScanner from 'qr-scanner';\n\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-qr-scan]',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center\"\n        >\n            <p class=\"mt-6 mb-4\">\n                Please enter your email address or scan your QR code\n            </p>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    [(ngModel)]=\"email\"\n                    placeholder=\"Enter email...\"\n                    type=\"email\"\n                    autocomplete=\"off\"\n                    (blur)=\"checkEmail(email)\"\n                    (keyup.enter)=\"checkEmail(email)\"\n                />\n                <mat-error>Invalid email format</mat-error>\n            </mat-form-field>\n            <video\n                #video\n                class=\"rounded m-4 bg-gray-200 border border-gray-500\"\n                id=\"qr-stream\"\n                playsinline\n                width=\"640\"\n                height=\"480\"\n                autoplay\n            ></video>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                height: 100%;\n                width: 100%;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            video {\n                width: 36rem;\n                height: 27rem;\n            }\n\n            mat-form-field {\n                width: 36rem;\n            }\n\n            a {\n                position: absolute;\n            }\n        `,\n    ],\n})\nexport class CheckinQRScanComponent implements OnInit, OnDestroy {\n    /** Email address of the visitor */\n    public email: string;\n    /** Video element to emit camera feed */\n    @ViewChild('video', { static: true })\n    private _video_el: ElementRef<HTMLVideoElement>;\n    /** QR Reader */\n    private _reader;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this.setupQRReader();\n    }\n\n    public ngOnDestroy() {\n        if (this._video_el.nativeElement.srcObject) {\n            (this._video_el.nativeElement.srcObject as any)\n                .getTracks()\n                .forEach((track) => track?.stop());\n        }\n        this._reader?.stop();\n    }\n\n    public async checkQRCode(raw_text: string) {\n        const chunks = raw_text.split(',');\n        if (chunks.length !== 2) {\n            notifyError('Invalid QRCode');\n            this.setupQRReader();\n            return;\n        } else {\n            await this._checkin\n                .loadGuestAndEvent(chunks[0], chunks[1])\n                .catch((err) => {\n                    this.handleError(err.message || err);\n                    throw err;\n                });\n            this._router.navigate(['/checkin', 'details']);\n        }\n    }\n\n    public async checkEmail(email: string) {\n        if (!email || !email.includes('@') || email.length < 5) return;\n        await this._checkin.loadGuestAndEvent(email).catch((err) => {\n            this.handleError(err.message || err);\n            throw err;\n        });\n        this._router.navigate(['/checkin', 'details']);\n    }\n\n    private setupQRReader() {\n        if (navigator.mediaDevices?.getUserMedia) {\n            navigator.mediaDevices\n                .getUserMedia({ video: true })\n                .then(\n                    (stream) =>\n                        (this._video_el.nativeElement.srcObject = stream)\n                )\n                .catch((e) =>\n                    console.error('Unable to fetch media devices!', e)\n                );\n        }\n        if (!QrScanner) return;\n        this._reader = new QrScanner(this._video_el.nativeElement, (r) =>\n            this.checkQRCode(r)\n        );\n        this._reader.start();\n    }\n\n    private handleError(message: any) {\n        console.error(message);\n        this._checkin.setError(message?.statusText || message);\n        this._router.navigate(['/checkin', 'error']);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-results',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto space-y-4\"\n            *ngIf=\"event | async\"\n        >\n            <h3 class=\"text-xl\">You are checked in!</h3>\n            <p class=\"text-center\">\n                Welcome, you have a meeting at\n                {{ (event | async)?.date || '' | date: 'shortDate' }}\n                with {{ (event | async).organiser?.name || '' }}.<br />\n                {{ (event | async).organiser?.name || '' }} has been notified\n                and will be with you shortly.&nbsp;\n            </p>\n            <p *ngIf=\"!(event | async)?.can_access_lift\">\n                Please wait in the lobby.\n            </p>\n            <p *ngIf=\"(event | async)?.can_access_lift\">\n                Please use the vistor access lift over there.\n            </p>\n            <a\n                button\n                mat-button\n                class=\"w-32\"\n                [routerLink]=\"['/checkin', 'preferences']\"\n            >\n                Done\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinResultsComponent implements OnInit {\n    public readonly event = this._checkin.event;\n    public readonly guest = this._checkin.guest;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        this.event.pipe(first()).subscribe((_) => (!_ ? this.previous() : ''));\n    }\n\n    public previous(): void {\n        this._router.navigate(['/checkin']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-error',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto p-4\"\n        >\n            <h3 class=\"text-2xl mb-4\">Please see reception.</h3>\n            <p class=\"mb-2\" *ngIf=\"error | async\">{{ error | async }}</p>\n            <p class=\"mb-4\">Our staff at reception will assist you.</p>\n            <a button mat-button class=\"w-32\" [routerLink]=\"['/welcome']\">\n                Back\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 28rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinErrorComponent {\n    public readonly error = this._checkin.error;\n\n    constructor(private _checkin: CheckinStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-covid]',\n    template: `\n        <div class=\"bg-white rounded p-4 relative overflow-y-auto overflow-x-hidden\">\n            <h3 class=\"text-xl font-medium mb-4\">COVID Disclaimer</h3>\n            <ol class=\"list-decimal list-inside\">\n                <li>\n                    Do you have any of the following symptoms?<br /><br />\n                    <ul class=\"list-disc list-inside px-4 mb-4\">\n                        <li>Fever</li>\n                        <li>Cough</li>\n                        <li>Shortness of breath</li>\n                        <li>Chills</li>\n                        <li>Body aches</li>\n                        <li>Sore or scratchy throat</li>\n                        <li>Headache</li>\n                        <li>Runny nose</li>\n                        <li>Muscle pain</li>\n                        <li>Vomitting</li>\n                        <li>Nausea</li>\n                        <li>Diarrhoa</li>\n                        <li>Loss of taste or smell</li>\n                    </ul>\n                    <mat-radio-group\n                        aria-label=\"Has Symptoms\"\n                        [(ngModel)]=\"symptoms\"\n                    >\n                        <mat-radio-button value=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button value=\"false\" class=\"ml-4\"\n                            >No</mat-radio-button\n                        >\n                    </mat-radio-group>\n                </li>\n                <hr class=\"my-4\" />\n                <li>\n                    Have you been in contact with a COVID-19 case in the last 14\n                    days or been asked to self-isolate by a health offical?<br /><br />\n                    <mat-radio-group\n                        aria-label=\"COVID contact or self-isolated\"\n                        [(ngModel)]=\"contact\"\n                    >\n                        <mat-radio-button value=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button value=\"false\" class=\"ml-4\"\n                            >No</mat-radio-button\n                        >\n                    </mat-radio-group>\n                </li>\n            </ol>\n            <button mat-button (click)=\"confirm()\">Confirm</button>\n            <a\n                mat-icon-button\n                [disabled]=\"!symptoms && !contact\"\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n                max-height: calc(100% - 2rem);\n            }\n\n            .absolute {\n                position: absolute;\n            }\n\n            button {\n                margin: 1rem 11rem 0;\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class CheckinCovidComponent {\n    public contact: string;\n    public symptoms: string;\n\n    constructor(\n        private _router: Router,\n        private _checkin: CheckinStateService\n    ) {}\n\n    public confirm() {\n        if (!this.symptoms || !this.contact)\n            return notifyError('Please select yes or no for each question');\n        this._checkin.updateGuest({\n            covid: this.contact === 'true',\n            symptoms: this.symptoms === 'true',\n        });\n        if (this.symptoms === 'false' && this.contact === 'false') {\n            this._router.navigate(['/checkin', 'results']);\n        } else {\n            this._checkin.setError('Please get tested for COVID-19 and self-isolate at home for 14 days');\n            this._router.navigate(['/checkin', 'error']);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nimport { CheckinDetailsComponent } from './checkin-details.component';\nimport { CheckinPhotoComponent } from './checkin-photo.component';\nimport { CheckinPreferencesComponent } from './checkin-preferences.component';\nimport { CheckinQRScanComponent } from './checkin-qr-scan.component';\nimport { CheckinResultsComponent } from './checkin-result.component';\nimport { CheckinErrorComponent } from './checkin-error.component';\nimport { CheckinCovidComponent } from './checkin-covid.component';\nimport { CheckinComponent } from './checkin.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: CheckinComponent,\n        children: [\n            { path: 'scan', component: CheckinQRScanComponent },\n            { path: 'details', component: CheckinDetailsComponent },\n            { path: 'preferences', component: CheckinPreferencesComponent },\n            { path: 'photo', component: CheckinPhotoComponent },\n            { path: 'results', component: CheckinResultsComponent },\n            { path: 'error', component: CheckinErrorComponent },\n            { path: 'covid', component: CheckinCovidComponent },\n            { path: '**', redirectTo: 'scan' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CheckinComponent,\n        CheckinResultsComponent,\n        CheckinQRScanComponent,\n        CheckinPreferencesComponent,\n        CheckinPhotoComponent,\n        CheckinDetailsComponent,\n        CheckinErrorComponent,\n        CheckinCovidComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedComponentsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorCheckinModule {}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-checkin]',\n    template: `\n        <a-topbar-header class=\"w-full\"></a-topbar-header>\n        <div\n            class=\"flex-1 w-full bg-center bg-cover relative\"\n            [style.background-image]=\"'url(' + background + ')'\"\n        >\n            <router-outlet></router-outlet>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CheckinComponent {\n    public get background() {\n        return this._settings.get('app.home.background');\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n"],"sourceRoot":"webpack:///","file":"apps_visitor-kiosk_src_app_checkin_checkin_module_ts.js"}