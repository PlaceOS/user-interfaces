{"version":3,"file":"apps_visitor-kiosk_src_app_checkin_checkin_module_ts.js","mappings":"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","names":["CheckinStateService","constructor","this","BehaviorSubject","generateGuestForm","_event","asObservable","_guest","_error","_form","clear","next","_photo","setPhoto","data","setError","message","loadGuestAndEvent","email","event_id","guest","showGuest","toPromise","event","showEvent","o","host","upcoming","listGuestMeetings","today","Date","todays_events","filter","isSameDay","date","sort","a","b","length","Error","updateGuest","n","getValue","form","updateMetadata","name","details","value","checkinGuest","t","checkinEventGuest","id","system_id","system","resources","printPass","Promise","res","setTimeout","notifyError","reject","factory","i0","CheckinDetailsComponent","_checkin","_router","ngOnInit","pipe","first","subscribe","_","previous","loading","navigate","selectors","CheckinPhotoComponent","handlePhoto","catch","e","RULE_TYPES","$event","set_r2","CateringConfigModalComponent","_data","EventEmitter","rulesets","config","map","set","rules","i","JSON","stringify","new_id","Math","floor","random","saveChanges","parse","emit","reason","metadata","MAT_DIALOG_DATA","ctx","CateringItemModalComponent","FormGroup","FormControl","item","Validators","description","category","unit_price","tags","accept_points","discount_cap","ENTER","COMMA","SPACE","CateringItem","categories","tag_list","controls","renderPercent","addTag","markAsDirty","input","trim","push","setValue","removeTag","existing_tag","index","indexOf","splice","randomInt","$localize","CateringItemOptionModalComponent","option","group","multiple","types","new_option","parent","options","concat","d","l","_MAT_INK_BAR_POSITIONER","InjectionToken","providedIn","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","run","onStable","take","positions","inkBar","nativeElement","style","visibility","hide","ɵfac","ANIMATION_MODULE_TYPE","ɵdir","MAT_TAB_CONTENT","MAT_TAB_LABEL","MAT_TAB","_MatTabBase","mixinDisabled","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","super","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","templateLabel","_templateLabel","_setTemplateLabelInput","content","ngOnChanges","changes","hasOwnProperty","ngOnDestroy","complete","TemplatePortal","_explicitContent","_implicitContent","_closestTab","ɵcmp","TemplateRef","provide","useExisting","ngContentSelectors","matTabsAnimations","translateTab","trigger","state","transform","minHeight","transition","animate","MatTabBodyPortal","CdkPortalOutlet","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","Subscription","_leavingSub","_beforeCentering","startWith","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","preserveContent","detach","unsubscribe","forwardRef","MatTabBody","DOCUMENT","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","i1","inputs","elementRef","decls","styles","MAT_TABS_CONFIG","_MatTabLabelWrapperBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","MatPaginatedTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","_disablePagination","_selectedIndex","selectFocusedIndex","indexFocused","runOutsideAngular","fromEvent","takeUntil","_stopInterval","disablePagination","coerceBooleanProperty","selectedIndex","coerceNumberProperty","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","ngAfterContentInit","dirChange","of","resize","realign","updatePagination","_alignInkBarToSelectedTab","FocusKeyManager","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","merge","_itemsResized","resolve","then","max","min","_getMaxScrollDistance","newFocusIndex","_setTabFocus","ResizeObserver","EMPTY","switchMap","tabItems","Observable","observer","resizeObserver","forEach","observe","disconnect","skip","ngAfterContentChecked","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","hasModifierKey","keyCode","focusIndex","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tab","toArray","disabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","_handlePaginatorClick","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","_tabListInner","beforeVisiblePos","afterVisiblePos","isEnabled","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","timer","maxScrollDistance","distance","i1$1","i3","_MatTabHeaderBase","viewportRuler","ngZone","platform","animationMode","_disableRipple","disableRipple","preventDefault","MatTabHeader","Wt","Vt","Kt","zt","Xt","i4","i5","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","mixinColor","mixinDisableRipple","_MatTabGroupBase","defaultConfig","_tabs","QueryList","_indexToSelect","_lastFocusedTabIndex","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","_preserveContent","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","contentTabIndex","_animationDuration","test","_contentTabIndex","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","selectedTab","_allTabs","reset","notifyOnChanges","destroy","realignInkBar","_tabHeader","focusTab","header","_focusChanged","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","_getTabIndex","_tabFocusChanged","focusOrigin","MatTabGroup","en","tn","i1$2","i2","i7","is_available","rule","includes","space","zones","matches","condition","isAfter","setHours","isBefore","duration","stringToMinutes","ext","CateringOrderModalComponent","BaseClass","code","order","CateringOrder","getCateringConfig","level","parent_id","menu","list","unique","cat","cateringItemAvailable","menu_items","updateMenuQuantities","timeout","addItem","choose_options","old_item","items","find","itm","reduce","c","opt","selectOptions","new_item","options_string","quantity","removeItem","updateItemQuantity","amount","localeCompare","optionsFor","join","saveOrder","confirmOrder","show_order_details","CateringOrderOptionsModalComponent","groups","group_list","updateGroupOption","option_state","saveOptions","CateringImportMenuModalComponent","handleFileEvent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","result","type","toLowerCase","readAsText","downloadTemplate","downloadFile","CateringStateService","_org","_dialog","_settings","_menu","_loading","_currency","subscription","active_building","bld","getCateringForZone","get","currency","manageCateringOrder","ref","open","race","componentInstance","afterClosed","close","findIndex","updateMenu","building","addOption","deleteItem","openConfirmModal","title","icon","class","deleteOption","editConfig","flatten","updateConfig","importMenu","updated_menu","notifySuccess","zone_id","showMetadata","Array","addItemToOrder","match","CheckinPreferencesComponent","_catering","update","beverage","updateEvent","CalendarEvent","extension_data","catering","f","_legacyCanvasSize","DEFAULT_CANVAS_SIZE","_preferredCamera","_maxScansPerSecond","_lastScanTimestamp","_flashOn","_paused","_active","$video","$canvas","document","createElement","_onDecode","console","warn","_legacyOnDecode","_onDecodeError","onDecodeError","_calculateScanRegion","calculateScanRegion","preferredCamera","maxScansPerSecond","_onPlay","bind","_onLoadedMetaData","_onVisibilityChange","_updateOverlay","disablePictureInPicture","playsInline","muted","h","hidden","body","contains","appendChild","parentElement","highlightScanRegion","highlightCodeOutline","overlay","$overlay","display","pointerEvents","innerHTML","firstElementChild","iterations","Infinity","easing","insertBefore","nextSibling","insertAdjacentHTML","$codeOutlineHighlight","lastElementChild","_scanRegion","requestAnimationFrame","m","window","getComputedStyle","setProperty","opacity","removeChild","_qrEnginePromise","createQrEngine","WORKER_PATH","static","listCameras","navigator","mediaDevices","enumerateDevices","kind","every","label","getUserMedia","audio","video","deviceId","_stopVideoStream","hasFlash","srcObject","MediaStream","_getCameraStream","stream","getVideoTracks","getSettings","toggleFlash","turnFlashOff","turnFlashOn","applyConstraints","advanced","torch","_restartVideoStream","removeEventListener","stop","_postWorkerMessage","start","location","protocol","play","facingMode","_setVideoMirror","pause","setCamera","scanRegion","qrEngine","canvas","disallowCanvasResizing","alsoTryWithoutScanRegion","p","k","q","all","_loadImage","_drawToCanvas","Worker","g","_postWorkerMessageSync","v","w","u","r","clearTimeout","cornerPoints","_convertPoints","NO_QR_CODE_FOUND","getImageData","buffer","detect","rawValue","_disableBarcodeDetector","scanImage","red","green","blue","useIntegerApproximation","BarcodeDetector","getSupportedFormats","formats","createWorker","_scanFrame","videoWidth","videoHeight","downScaledWidth","downScaledHeight","offsetTop","objectFit","objectPosition","split","parseFloat","endsWith","top","paused","ended","requestVideoFrameCallback","readyState","now","_codeOutlineHighlightRemovalTimeout","setAttribute","log","Object","assign","exact","_getFacingMode","getTracks","removeTrack","getContext","alpha","imageSmoothingEnabled","drawImage","Image","_awaitImageLoad","HTMLVideoElement","HTMLCanvasElement","SVGImageElement","OffscreenCanvas","ImageBitmap","File","Blob","URL","src","createObjectURL","toString","revokeObjectURL","naturalWidth","ErrorEvent","_workerMessageId","postMessage","CheckinQRScanComponent","setupQRReader","_video_el","track","_reader","checkQRCode","raw_text","chunks","err","handleError","checkEmail","error","Ke","QrScanner","statusText","CheckinResultsComponent","CheckinErrorComponent","CheckinCovidComponent","confirm","symptoms","contact","covid","ROUTES","path","component","CheckinComponent","background","children","redirectTo","VisitorCheckinModule","CommonModule","FormsModule","ReactiveFormsModule","SharedComponentsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/visitor-kiosk/src/app/checkin/checkin-state.service.ts","./apps/visitor-kiosk/src/app/checkin/checkin-details.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-photo.component.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./node_modules/@angular/material/fesm2020/tabs.mjs","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./apps/visitor-kiosk/src/app/checkin/checkin-preferences.component.ts","./node_modules/qr-scanner/qr-scanner.min.js","./apps/visitor-kiosk/src/app/checkin/checkin-qr-scan.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-result.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-error.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-covid.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin.module.ts","./apps/visitor-kiosk/src/app/checkin/checkin.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { HashMap, notifyError } from '@placeos/common';\nimport { CalendarEvent, checkinEventGuest, showEvent } from '@placeos/events';\nimport {\n    GuestUser,\n    generateGuestForm,\n    showGuest,\n    listGuestMeetings,\n} from '@placeos/users';\nimport { isSameDay } from 'date-fns';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CheckinStateService {\n    /** Current event being checked in */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    /** Current guest being checked in */\n    private _guest = new BehaviorSubject<GuestUser>(null);\n    /** Photo of the current guest */\n    private _photo = new BehaviorSubject<string>('');\n    /** Photo of the current guest */\n    private _error = new BehaviorSubject<string>('');\n    /** Form for the current guest details */\n    private _form = new BehaviorSubject(generateGuestForm());\n\n    public readonly event = this._event.asObservable();\n    public readonly guest = this._guest.asObservable();\n    public readonly error = this._error.asObservable();\n    public readonly form = this._form.asObservable();\n\n    public clear() {\n        this._guest.next(null);\n        this._event.next(null);\n        this._photo.next(null);\n    }\n\n    public setPhoto(data: string) {\n        this._photo.next(data);\n    }\n\n    public setError(message: string) {\n        this._error.next(message);\n    }\n\n    /** Load gie */\n    public async loadGuestAndEvent(email: string, event_id?: string) {\n        const guest = await showGuest(email).toPromise();\n        if (event_id) {\n            const event = await showEvent(event_id).toPromise();\n            this._guest.next(guest);\n            this._event.next(event);\n            this._form.next(generateGuestForm(guest, event.host));\n            return { guest, event };\n        }\n        const upcoming = await listGuestMeetings(email).toPromise();\n        const today = new Date();\n        const todays_events = upcoming.filter((event) =>\n            isSameDay(new Date(event.date), today)\n        );\n        todays_events.sort((a, b) => a.date - b.date);\n        if (todays_events.length <= 0) {\n            throw new Error(`No meetings for with guest \"${email}\" today`);\n        }\n        this._guest.next(guest);\n        this._event.next(todays_events[0]);\n        this._form.next(generateGuestForm(guest, todays_events[0].host));\n        return { guest, event: todays_events[0] };\n    }\n\n    public async updateGuest(data?: HashMap) {\n        const guest = this._guest.getValue();\n        const form = this._form.getValue();\n        if (!guest || !form) return;\n        await updateMetadata(guest.email, {\n            name: 'preferences',\n            details: { ...guest, ...form.value, ...(data || {}) },\n        }).toPromise();\n    }\n\n    public async checkinGuest() {\n        const guest = this._guest.getValue();\n        const event = this._event.getValue();\n        if (!guest || !event) return;\n        await checkinEventGuest(event.id, guest.email, true, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        }).toPromise();\n    }\n\n    public printPass() {\n        try {\n            // TODO: actually trigger print visitor pass\n            return new Promise((res) => setTimeout(() => res(''), 5000));\n        } catch (err) {\n            notifyError('Error printing visitor pass');\n        }\n        return Promise.reject();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-details]',\n    template: `\n        <form\n            *ngIf=\"(form | async) && !loading; else load_state\"\n            [formGroup]=\"form | async\"\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto\"\n        >\n            <h3 class=\"text-2xl m-4\">Confirm Details</h3>\n            <div field class=\"flex flex-col\">\n                <label form=\"host\">Host</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"host\"\n                        formControlName=\"host\"\n                        placeholder=\"Host's Email Address\"\n                    />\n                    <mat-error>\n                        The email address of your host is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"name\">Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        formControlName=\"name\"\n                        placeholder=\"Full Name\"\n                    />\n                    <mat-error>Please enter your full name</mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Email</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        formControlName=\"email\"\n                        placeholder=\"Email Address\"\n                    />\n                    <mat-error>A valid email address is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Phone Number</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        formControlName=\"phone\"\n                        placeholder=\"Phone Number\"\n                    />\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Organisation / Company</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        formControlName=\"phone\"\n                        placeholder=\"Organisation / Company\"\n                    />\n                </mat-form-field>\n            </div>\n            <button next mat-button (click)=\"updateGuest()\">Next</button>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </form>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center m-auto\">\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <div class=\"my-4 text-lg text-white\">\n                    Updating data and checking in...\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            form {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            [field] {\n                width: calc(100% - 2rem);\n            }\n\n            .absolute {\n                position: absolute;\n            }\n\n            button {\n                margin-bottom: 1rem;\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class CheckinDetailsComponent implements OnInit {\n    public readonly form = this._checkin.form;\n\n    public loading = false;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        this.form.pipe(first()).subscribe((_) => (!_ ? this.previous() : ''));\n    }\n\n    public async updateGuest() {\n        this.loading = true;\n        await this._checkin.updateGuest();\n        await this._checkin.checkinGuest();\n        this.loading = false;\n        this._router.navigate(['/checkin', 'covid']);\n    }\n\n    public previous() {\n        this._router.navigate(['/checkin', 'scan']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-photo',\n    template: `\n        <div class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center p-4\" *ngIf=\"!loading; else load_state\">\n            <h3 class=\"text-xl mb-4\">Take a photo to continue</h3>\n            <a-take-photo (photoAccepted)=\"handlePhoto($event)\"></a-take-photo>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center m-auto\">\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <div class=\"my-4 text-lg text-white\">\n                    Printing guest pass...\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n        }\n\n        .absolute {\n            position: absolute;\n        }\n    `]\n})\nexport class CheckinPhotoComponent {\n    /** Whether guest pass is being loaded */\n    public loading: boolean;\n\n    constructor(private _checkin: CheckinStateService, private _router: Router) { }\n\n    public async handlePhoto(event: any) {\n        if (!event) {\n            return notifyError('Error saving image, please try again');\n        }\n        this.loading = true;\n        this._checkin.setPhoto(event);\n        await this._checkin.printPass().catch((e) => {\n            this.loading = false;\n            notifyError(e);\n            throw e;\n        });\n        this.loading = false;\n        this._router.navigate(['/checkin', 'results']);\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour', number]\n    | ['min_length' | 'max_length' | 'is_before' | 'is_after' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour' },\n    { id: 'before_hour', name: 'Before Hour' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Before Time' },\n    { id: 'is_after', name: 'Is After Time' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n]\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center\">\n            <button\n                mat-button\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button mat-icon-button class=\"mb-6\" (click)=\"rulesets.splice(i, 1)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button mat-icon-button class=\"mb-6\" (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button (click)=\"saveChanges()\">Save Changes</button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n\n            main {\n                width: 32em;\n                padding: 0.5em 1em 1em;\n            }\n\n            main button.mat-button {\n                margin: 0 auto 0.5em;\n                min-width: 12em;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.category\">\n                <label\n                    for=\"category\"\n                    [class.error]=\"\n                        form.controls.category.invalid &&\n                        form.controls.category.touched\n                    \"\n                >\n                    Category<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"category\"\n                        placeholder=\"Category\"\n                        formControlName=\"category\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Category is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-list #chipList aria-label=\"Item Tags\">\n                        <mat-chip\n                            *ngFor=\"let tag of tag_list\"\n                            [selectable]=\"true\"\n                            [removable]=\"true\"\n                            (removed)=\"removeTag(tag)\"\n                        >\n                            {{ tag }}\n                            <app-icon\n                                matChipRemove\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'close'\n                                }\"\n                            ></app-icon>\n                        </mat-chip>\n                        <input\n                            name=\"tags\"\n                            placeholder=\"Zone tags...\"\n                            i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                            [matChipInputFor]=\"chipList\"\n                            [matChipInputSeparatorKeyCodes]=\"separators\"\n                            [matChipInputAddOnBlur]=\"true\"\n                            (matChipInputTokenEnd)=\"addTag($event)\"\n                        />\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>\n                {{ option.id ? 'Edit' : 'Add' }} Item Option\n            </h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i2 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i1$2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil, switchMap, skip } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, EMPTY, Observable, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY,\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        // `onStable` might not run for a while if the zone has already stabilized.\n        // Wrap the call in `NgZone.run` to ensure that it runs relatively soon.\n        this._ngZone.run(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const positions = this._inkBarPositioner(element);\n                const inkBar = this._elementRef.nativeElement;\n                inkBar.style.left = positions.left;\n                inkBar.style.width = positions.width;\n            });\n        });\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n}\nMatInkBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInkBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: _MAT_INK_BAR_POSITIONER }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInkBar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatInkBar, selector: \"mat-ink-bar\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-ink-bar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInkBar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_MAT_INK_BAR_POSITIONER]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(/** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabContent, selector: \"[matTabContent]\", providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabContent]',\n                    providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabel, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: MAT_TAB, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabLabel, selector: \"[mat-tab-label], [matTabLabel]\", providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                    providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n        return this._templateLabel;\n    }\n    set templateLabel(value) {\n        this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTab, deps: [{ token: i0.ViewContainerRef }, { token: MAT_TAB_GROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTab.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTab, selector: \"mat-tab\", inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], labelClass: \"labelClass\", bodyClass: \"bodyClass\" }, providers: [{ provide: MAT_TAB, useExisting: MatTab }], queries: [{ propertyName: \"templateLabel\", first: true, predicate: MAT_TAB_LABEL, descendants: true }, { propertyName: \"_explicitContent\", first: true, predicate: MAT_TAB_CONTENT, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"_implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"matTab\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\", changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTab, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab', inputs: ['disabled'], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, exportAs: 'matTab', providers: [{ provide: MAT_TAB, useExisting: MatTab }], template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB_GROUP]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { templateLabel: [{\n                type: ContentChild,\n                args: [MAT_TAB_LABEL]\n            }], _explicitContent: [{\n                type: ContentChild,\n                args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n            }], _implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], textLabel: [{\n                type: Input,\n                args: ['label']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], labelClass: [{\n                type: Input\n            }], bodyClass: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({\n            transform: 'translate3d(-100%, 0, 0)',\n            minHeight: '1px',\n            // Normally this is redundant since we detach the content from the DOM, but if the user\n            // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n            visibility: 'hidden',\n        })),\n        state('right', style({\n            transform: 'translate3d(100%, 0, 0)',\n            minHeight: '1px',\n            visibility: 'hidden',\n        })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            if (!this._host.preserveContent) {\n                this.detach();\n            }\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBodyPortal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: forwardRef(() => MatTabBody) }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabBodyPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBodyPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabBodyHost]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatTabBody)]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n        this.preserveContent = false;\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return (position == 'center' || position == 'left-origin-center' || position == 'right-origin-center');\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabBodyBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabBodyBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabBodyBase, inputs: { _content: [\"content\", \"_content\"], origin: \"origin\", animationDuration: \"animationDuration\", preserveContent: \"preserveContent\", position: \"position\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabBodyBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _onCentering: [{\n                type: Output\n            }], _beforeCentering: [{\n                type: Output\n            }], _afterLeavingCenter: [{\n                type: Output\n            }], _onCentered: [{\n                type: Output\n            }], _content: [{\n                type: Input,\n                args: ['content']\n            }], origin: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], preserveContent: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }] } });\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBody, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatTabBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabBody, selector: \"mat-tab-body\", host: { classAttribute: \"mat-tab-body\" }, viewQueries: [{ propertyName: \"_portalHost\", first: true, predicate: CdkPortalOutlet, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"], dependencies: [{ kind: \"directive\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\" }], animations: [matTabsAnimations.translateTab], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBody, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-body', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matTabsAnimations.translateTab], host: {\n                        'class': 'mat-tab-body',\n                    }, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _portalHost: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabelWrapper, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabelWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.mat-tab-disabled\": \"disabled\", \"attr.aria-disabled\": \"!!disabled\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabelWrapper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        this._disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    get disablePagination() {\n        return this._disablePagination;\n    }\n    set disablePagination(value) {\n        this._disablePagination = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n        // can hold up tests that are in a background tab.\n        this._ngZone.onStable.pipe(take(1)).subscribe(realign);\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes, this._itemsResized())\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => {\n                Promise.resolve().then(() => {\n                    // Clamp the scroll distance, because it can change with the number of tabs.\n                    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n                    realign();\n                });\n            });\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    /** Sends any changes that could affect the layout of the items. */\n    _itemsResized() {\n        if (typeof ResizeObserver !== 'function') {\n            return EMPTY;\n        }\n        return this._items.changes.pipe(startWith(this._items), switchMap((tabItems) => new Observable((observer) => this._ngZone.runOutsideAngular(() => {\n            const resizeObserver = new ResizeObserver(() => {\n                observer.next();\n            });\n            tabItems.forEach(item => {\n                resizeObserver.observe(item.elementRef.nativeElement);\n            });\n            return () => {\n                resizeObserver.disconnect();\n            };\n        }))), \n        // Skip the first emit since the resize observer emits when an item\n        // is observed for new items when the tab is already inserted\n        skip(1));\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n        return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = ((direction == 'before' ? -1 : 1) * viewLength) / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPaginatedTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatPaginatedTabHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPaginatedTabHeader, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disablePagination: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabHeaderBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabHeaderBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabHeaderBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disableRipple: [{\n                type: Input\n            }] } });\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\" }, classAttribute: \"mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: MatTabLabelWrapper }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}.mat-tab-label::before{margin:5px}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\"], dependencies: [{ kind: \"directive\", type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { kind: \"directive\", type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-header', inputs: ['selectedIndex'], outputs: ['selectFocusedIndex', 'indexFocused'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    }, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}.mat-tab-label::before{margin:5px}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatTabLabelWrapper, { descendants: false }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Index of the tab that was focused last. */\n        this._lastFocusedTabIndex = null;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        this._disablePagination = false;\n        this._preserveContent = false;\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration =\n            defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n        this.disablePagination =\n            defaultConfig && defaultConfig.disablePagination != null\n                ? defaultConfig.disablePagination\n                : false;\n        this.dynamicHeight =\n            defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n        this.preserveContent = !!defaultConfig?.preserveContent;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() {\n        return this._dynamicHeight;\n    }\n    set dynamicHeight(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n        return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    get disablePagination() {\n        return this._disablePagination;\n    }\n    set disablePagination(value) {\n        this._disablePagination = coerceBooleanProperty(value);\n    }\n    /**\n     * By default tabs remove their content from the DOM while it's off-screen.\n     * Setting this to `true` will keep it in the DOM which will prevent elements\n     * like iframes and videos from reloading next time it comes back into the view.\n     */\n    get preserveContent() {\n        return this._preserveContent;\n    }\n    set preserveContent(value) {\n        this._preserveContent = coerceBooleanProperty(value);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._lastFocusedTabIndex = null;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                let selectedTab;\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        this._lastFocusedTabIndex = null;\n                        selectedTab = tabs[i];\n                        break;\n                    }\n                }\n                // If we haven't found an active tab and a tab exists at the selected index, it means\n                // that the active tab was swapped out. Since this won't be picked up by the rendering\n                // loop in `ngAfterContentChecked`, we need to sync it up manually.\n                if (!selectedTab && tabs[indexToSelect]) {\n                    Promise.resolve().then(() => {\n                        tabs[indexToSelect].isActive = true;\n                        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                    });\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        if (this._tabHeader) {\n            this._tabHeader.updatePagination();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this._lastFocusedTabIndex = index;\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent();\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, index) {\n        if (tab.disabled) {\n            return null;\n        }\n        const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n        return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabGroupBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", contentTabIndex: \"contentTabIndex\", disablePagination: \"disablePagination\", preserveContent: \"preserveContent\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { dynamicHeight: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], contentTabIndex: [{\n                type: Input\n            }], disablePagination: [{\n                type: Input\n            }], preserveContent: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], selectedIndexChange: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], animationDone: [{\n                type: Output\n            }], selectedTabChange: [{\n                type: Output\n            }] } });\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: { color: \"color\", disableRipple: \"disableRipple\" }, host: { properties: { \"class.mat-tab-group-dynamic-height\": \"dynamicHeight\", \"class.mat-tab-group-inverted-header\": \"headerPosition === \\\"below\\\"\" }, classAttribute: \"mat-tab-group\" }, providers: [\n        {\n            provide: MAT_TAB_GROUP,\n            useExisting: MatTabGroup,\n        },\n    ], queries: [{ propertyName: \"_allTabs\", predicate: MatTab, descendants: true }], viewQueries: [{ propertyName: \"_tabBodyWrapper\", first: true, predicate: [\"tabBodyWrapper\"], descendants: true }, { propertyName: \"_tabHeader\", first: true, predicate: [\"tabHeader\"], descendants: true }], exportAs: [\"matTabGroup\"], usesInheritance: true, ngImport: i0, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               [preserveContent]=\\\"preserveContent\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"], dependencies: [{ kind: \"directive\", type: i1$2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1$2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1$2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { kind: \"directive\", type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i7.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { kind: \"directive\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: [\"disabled\"] }, { kind: \"component\", type: MatTabBody, selector: \"mat-tab-body\" }, { kind: \"component\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: [\"selectedIndex\"], outputs: [\"selectFocusedIndex\", \"indexFocused\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [\n                        {\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup,\n                        },\n                    ], host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    }, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               [preserveContent]=\\\"preserveContent\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _allTabs: [{\n                type: ContentChildren,\n                args: [MatTab, { descendants: true }]\n            }], _tabBodyWrapper: [{\n                type: ViewChild,\n                args: ['tabBodyWrapper']\n            }], _tabHeader: [{\n                type: ViewChild,\n                args: ['tabHeader']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                if (this.tabPanel) {\n                    this.tabPanel._activeTabId = items[i].id;\n                }\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n    _getRole() {\n        return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n}\n_MatTabNavBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabNavBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabNavBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\", tabPanel: \"tabPanel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabNavBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], tabPanel: [{\n                type: Input\n            }] } });\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNav, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabNav, selector: \"[mat-tab-nav-bar]\", inputs: { color: \"color\" }, host: { properties: { \"attr.role\": \"_getRole()\", \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\", \"class.mat-primary\": \"color !== \\\"warn\\\" && color !== \\\"accent\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\" }, classAttribute: \"mat-tab-nav-bar mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: i0.forwardRef(function () { return MatTabLink; }), descendants: true }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], exportAs: [\"matTabNavBar\", \"matTabNav\"], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}.mat-tab-link::before{margin:5px}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\"], dependencies: [{ kind: \"directive\", type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { kind: \"directive\", type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNav, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color'], host: {\n                        '[attr.role]': '_getRole()',\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}.mat-tab-link::before{margin:5px}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatTabLink), { descendants: true }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        /** Unique id for the tab. */\n        this.id = `mat-tab-link-${nextUniqueId++}`;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() {\n        return this._isActive;\n    }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = newValue;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n        if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n            this.elementRef.nativeElement.click();\n        }\n    }\n    _getAriaControls() {\n        return this._tabNavBar.tabPanel\n            ? this._tabNavBar.tabPanel?.id\n            : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n        if (this._tabNavBar.tabPanel) {\n            return this.active ? 'true' : 'false';\n        }\n        else {\n            return this.elementRef.nativeElement.getAttribute('aria-selected');\n        }\n    }\n    _getAriaCurrent() {\n        return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n        return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n        if (this._tabNavBar.tabPanel) {\n            return this._isActive && !this.disabled ? 0 : -1;\n        }\n        else {\n            return this.tabIndex;\n        }\n    }\n}\n_MatTabLinkBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabLinkBase, deps: [{ token: _MatTabNavBase }, { token: i0.ElementRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabLinkBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabLinkBase, inputs: { active: \"active\", id: \"id\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabLinkBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatTabNavBase }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { active: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLink, deps: [{ token: MatTabNav }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabLink, selector: \"[mat-tab-link], [matTabLink]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-controls\": \"_getAriaControls()\", \"attr.aria-current\": \"_getAriaCurrent()\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.id\": \"id\", \"attr.tabIndex\": \"_getTabIndex()\", \"attr.role\": \"_getRole()\", \"class.mat-tab-disabled\": \"disabled\", \"class.mat-tab-label-active\": \"active\" }, classAttribute: \"mat-tab-link mat-focus-indicator\" }, exportAs: [\"matTabLink\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-controls]': '_getAriaControls()',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.id]': 'id',\n                        '[attr.tabIndex]': '_getTabIndex()',\n                        '[attr.role]': '_getRole()',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(focus)': '_handleFocus()',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatTabNav }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n    constructor() {\n        /** Unique id for the tab panel. */\n        this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n    }\n}\nMatTabNavPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNavPanel, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatTabNavPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabNavPanel, selector: \"mat-tab-nav-panel\", inputs: { id: \"id\" }, host: { attributes: { \"role\": \"tabpanel\" }, properties: { \"attr.aria-labelledby\": \"_activeTabId\", \"attr.id\": \"id\" }, classAttribute: \"mat-tab-nav-panel\" }, exportAs: [\"matTabNavPanel\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNavPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-tab-nav-panel',\n                    exportAs: 'matTabNavPanel',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        '[attr.aria-labelledby]': '_activeTabId',\n                        '[attr.id]': 'id',\n                        'class': 'mat-tab-nav-panel',\n                        'role': 'tabpanel',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, declarations: [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent], imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule], exports: [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabContent] });\nMatTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { isAfter, setHours, isBefore } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { BaseClass, DialogEvent, HashMap, unique } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches++;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{ item.unit_price / 100 | currency:code }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                mat-icon-button\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            mat-icon-button\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button mat-button class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    mat-button\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    mat-button\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save mat-button (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency:code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent extends BaseClass implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public readonly code = this._data.code || 'USD';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{ opt.unit_price / 100 | currency:code }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency:code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button mat-button class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    mat-button\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { updateMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends BaseClass {\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog, private _settings: SettingsService) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(this._settings.get('app.currency') || bld.currency || 'USD');\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (\n            await showMetadata(zone_id, 'catering').toPromise()\n        ).details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Calendar } from '@placeos/calendar';\n\nimport {\n    CateringItem,\n    CateringOrder,\n    CateringStateService,\n} from '@placeos/catering';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { CalendarEvent, updateEvent } from '@placeos/events';\nimport { first, map } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-preferences',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto\"\n        >\n            <h3 class=\"text-xl mb-2 w-full\">Would you like a drink?</h3>\n            <div class=\"w-full\">\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <mat-select\n                        [(ngModel)]=\"beverage\"\n                        placeholder=\"Select beverage\"\n                    >\n                        <mat-option\n                            *ngFor=\"let item of menu | async\"\n                            [value]=\"item\"\n                        >\n                            {{ item.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button class=\"w-32\" (click)=\"update()\">\n                {{ beverage ? 'Update' : 'Continue' }}\n            </button>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinPreferencesComponent {\n    public beverage: CateringItem;\n\n    public readonly menu = this._catering.menu.pipe(\n        map((l) => {\n            return l.filter((_) =>\n                _.tags.find((_) => _.toLowerCase() === 'drink')\n            );\n        })\n    );\n\n    constructor(\n        private _router: Router,\n        private _checkin: CheckinStateService,\n        private _catering: CateringStateService\n    ) {}\n\n    public async update() {\n        if (!this.beverage) return this.next();\n        const event = await this._checkin.event\n            .pipe(first((_) => !!_))\n            .toPromise();\n        if (!event) return notifyError('Unable to load event data.');\n        const order =\n            (event.ext('catering') ? event.ext('catering')[0] : null) ||\n            new CateringOrder();\n        await updateEvent(\n            event.id,\n            new CalendarEvent({\n                ...event,\n                extension_data: {\n                    ...event.extension_data,\n                    catering: [\n                        ...(event.extension_data.catering?.filter(\n                            (_) => _.id !== order.id\n                        ) || []),\n                        new CateringOrder({\n                            ...order,\n                            items: [\n                                ...order.items,\n                                new CateringItem({\n                                    ...this.beverage,\n                                    quantity: 1,\n                                }),\n                            ],\n                        }),\n                    ],\n                },\n            })\n        ).toPromise();\n        notifySuccess('Successfully update event.');\n        this.next();\n    }\n\n    public next() {\n        this._router.navigate(['/welcome']);\n    }\n}\n","class e{constructor(a,b,c,d,f){this._legacyCanvasSize=e.DEFAULT_CANVAS_SIZE;this._preferredCamera=\"environment\";this._maxScansPerSecond=25;this._lastScanTimestamp=-1;this._destroyed=this._flashOn=this._paused=this._active=!1;this.$video=a;this.$canvas=document.createElement(\"canvas\");c&&\"object\"===typeof c?this._onDecode=b:(c||d||f?console.warn(\"You're using a deprecated version of the QrScanner constructor which will be removed in the future\"):console.warn(\"Note that the type of the scan result passed to onDecode will change in the future. To already switch to the new api today, you can pass returnDetailedScanResult: true.\"),\nthis._legacyOnDecode=b);b=\"object\"===typeof c?c:{};this._onDecodeError=b.onDecodeError||(\"function\"===typeof c?c:this._onDecodeError);this._calculateScanRegion=b.calculateScanRegion||(\"function\"===typeof d?d:this._calculateScanRegion);this._preferredCamera=b.preferredCamera||f||this._preferredCamera;this._legacyCanvasSize=\"number\"===typeof c?c:\"number\"===typeof d?d:this._legacyCanvasSize;this._maxScansPerSecond=b.maxScansPerSecond||this._maxScansPerSecond;this._onPlay=this._onPlay.bind(this);this._onLoadedMetaData=\nthis._onLoadedMetaData.bind(this);this._onVisibilityChange=this._onVisibilityChange.bind(this);this._updateOverlay=this._updateOverlay.bind(this);a.disablePictureInPicture=!0;a.playsInline=!0;a.muted=!0;let h=!1;a.hidden&&(a.hidden=!1,h=!0);document.body.contains(a)||(document.body.appendChild(a),h=!0);c=a.parentElement;if(b.highlightScanRegion||b.highlightCodeOutline){d=!!b.overlay;this.$overlay=b.overlay||document.createElement(\"div\");f=this.$overlay.style;f.position=\"absolute\";f.display=\"none\";\nf.pointerEvents=\"none\";this.$overlay.classList.add(\"scan-region-highlight\");if(!d&&b.highlightScanRegion){this.$overlay.innerHTML='<svg class=\"scan-region-highlight-svg\" viewBox=\"0 0 238 238\" preserveAspectRatio=\"none\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;fill:none;stroke:#e9b213;stroke-width:4;stroke-linecap:round;stroke-linejoin:round\"><path d=\"M31 2H10a8 8 0 0 0-8 8v21M207 2h21a8 8 0 0 1 8 8v21m0 176v21a8 8 0 0 1-8 8h-21m-176 0H10a8 8 0 0 1-8-8v-21\"/></svg>';try{this.$overlay.firstElementChild.animate({transform:[\"scale(.98)\",\n\"scale(1.01)\"]},{duration:400,iterations:Infinity,direction:\"alternate\",easing:\"ease-in-out\"})}catch(m){}c.insertBefore(this.$overlay,this.$video.nextSibling)}b.highlightCodeOutline&&(this.$overlay.insertAdjacentHTML(\"beforeend\",'<svg class=\"code-outline-highlight\" preserveAspectRatio=\"none\" style=\"display:none;width:100%;height:100%;fill:none;stroke:#e9b213;stroke-width:5;stroke-dasharray:25;stroke-linecap:round;stroke-linejoin:round\"><polygon/></svg>'),this.$codeOutlineHighlight=this.$overlay.lastElementChild)}this._scanRegion=\nthis._calculateScanRegion(a);requestAnimationFrame(()=>{let m=window.getComputedStyle(a);\"none\"===m.display&&(a.style.setProperty(\"display\",\"block\",\"important\"),h=!0);\"visible\"!==m.visibility&&(a.style.setProperty(\"visibility\",\"visible\",\"important\"),h=!0);h&&(console.warn(\"QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.\"),a.style.opacity=\"0\",a.style.width=\"0\",a.style.height=\"0\",this.$overlay&&this.$overlay.parentElement&&this.$overlay.parentElement.removeChild(this.$overlay),\ndelete this.$overlay,delete this.$codeOutlineHighlight);this.$overlay&&this._updateOverlay()});a.addEventListener(\"play\",this._onPlay);a.addEventListener(\"loadedmetadata\",this._onLoadedMetaData);document.addEventListener(\"visibilitychange\",this._onVisibilityChange);window.addEventListener(\"resize\",this._updateOverlay);this._qrEnginePromise=e.createQrEngine()}static set WORKER_PATH(a){console.warn(\"Setting QrScanner.WORKER_PATH is not required and not supported anymore. Have a look at the README for new setup instructions.\")}static async hasCamera(){try{return!!(await e.listCameras(!1)).length}catch(a){return!1}}static async listCameras(a=\n!1){if(!navigator.mediaDevices)return[];let b=async()=>(await navigator.mediaDevices.enumerateDevices()).filter(d=>\"videoinput\"===d.kind),c;try{a&&(await b()).every(d=>!d.label)&&(c=await navigator.mediaDevices.getUserMedia({audio:!1,video:!0}))}catch(d){}try{return(await b()).map((d,f)=>({id:d.deviceId,label:d.label||(0===f?\"Default Camera\":`Camera ${f+1}`)}))}finally{c&&(console.warn(\"Call listCameras after successfully starting a QR scanner to avoid creating a temporary video stream\"),e._stopVideoStream(c))}}async hasFlash(){let a;\ntry{if(this.$video.srcObject){if(!(this.$video.srcObject instanceof MediaStream))return!1;a=this.$video.srcObject}else a=(await this._getCameraStream()).stream;return\"torch\"in a.getVideoTracks()[0].getSettings()}catch(b){return!1}finally{a&&a!==this.$video.srcObject&&(console.warn(\"Call hasFlash after successfully starting the scanner to avoid creating a temporary video stream\"),e._stopVideoStream(a))}}isFlashOn(){return this._flashOn}async toggleFlash(){this._flashOn?await this.turnFlashOff():await this.turnFlashOn()}async turnFlashOn(){if(!this._flashOn&&\n!this._destroyed&&(this._flashOn=!0,this._active&&!this._paused))try{if(!await this.hasFlash())throw\"No flash available\";await this.$video.srcObject.getVideoTracks()[0].applyConstraints({advanced:[{torch:!0}]})}catch(a){throw this._flashOn=!1,a;}}async turnFlashOff(){this._flashOn&&(this._flashOn=!1,await this._restartVideoStream())}destroy(){this.$video.removeEventListener(\"loadedmetadata\",this._onLoadedMetaData);this.$video.removeEventListener(\"play\",this._onPlay);document.removeEventListener(\"visibilitychange\",\nthis._onVisibilityChange);window.removeEventListener(\"resize\",this._updateOverlay);this._destroyed=!0;this._flashOn=!1;this.stop();e._postWorkerMessage(this._qrEnginePromise,\"close\")}async start(){if(this._destroyed)throw Error(\"The QR scanner can not be started as it had been destroyed.\");if(!this._active||this._paused)if(\"https:\"!==window.location.protocol&&console.warn(\"The camera stream is only accessible if the page is transferred via https.\"),this._active=!0,!document.hidden)if(this._paused=\n!1,this.$video.srcObject)await this.$video.play();else try{let {stream:a,facingMode:b}=await this._getCameraStream();!this._active||this._paused?e._stopVideoStream(a):(this._setVideoMirror(b),this.$video.srcObject=a,await this.$video.play(),this._flashOn&&(this._flashOn=!1,this.turnFlashOn().catch(()=>{})))}catch(a){if(!this._paused)throw this._active=!1,a;}}stop(){this.pause();this._active=!1}async pause(a=!1){this._paused=!0;if(!this._active)return!0;this.$video.pause();this.$overlay&&(this.$overlay.style.display=\n\"none\");let b=()=>{this.$video.srcObject instanceof MediaStream&&(e._stopVideoStream(this.$video.srcObject),this.$video.srcObject=null)};if(a)return b(),!0;await new Promise(c=>setTimeout(c,300));if(!this._paused)return!1;b();return!0}async setCamera(a){a!==this._preferredCamera&&(this._preferredCamera=a,await this._restartVideoStream())}static async scanImage(a,b,c,d,f=!1,h=!1){let m,n=!1;b&&(\"scanRegion\"in b||\"qrEngine\"in b||\"canvas\"in b||\"disallowCanvasResizing\"in b||\"alsoTryWithoutScanRegion\"in\nb||\"returnDetailedScanResult\"in b)?(m=b.scanRegion,c=b.qrEngine,d=b.canvas,f=b.disallowCanvasResizing||!1,h=b.alsoTryWithoutScanRegion||!1,n=!0):b||c||d||f||h?console.warn(\"You're using a deprecated api for scanImage which will be removed in the future.\"):console.warn(\"Note that the return type of scanImage will change in the future. To already switch to the new api today, you can pass returnDetailedScanResult: true.\");b=!!c;try{let p,k;[c,p]=await Promise.all([c||e.createQrEngine(),e._loadImage(a)]);\n[d,k]=e._drawToCanvas(p,m,d,f);let q;if(c instanceof Worker){let g=c;b||e._postWorkerMessageSync(g,\"inversionMode\",\"both\");q=await new Promise((l,v)=>{let w,u,r,y=-1;u=t=>{t.data.id===y&&(g.removeEventListener(\"message\",u),g.removeEventListener(\"error\",r),clearTimeout(w),null!==t.data.data?l({data:t.data.data,cornerPoints:e._convertPoints(t.data.cornerPoints,m)}):v(e.NO_QR_CODE_FOUND))};r=t=>{g.removeEventListener(\"message\",u);g.removeEventListener(\"error\",r);clearTimeout(w);v(\"Scanner error: \"+(t?\nt.message||t:\"Unknown Error\"))};g.addEventListener(\"message\",u);g.addEventListener(\"error\",r);w=setTimeout(()=>r(\"timeout\"),1E4);let x=k.getImageData(0,0,d.width,d.height);y=e._postWorkerMessageSync(g,\"decode\",x,[x.data.buffer])})}else q=await Promise.race([new Promise((g,l)=>window.setTimeout(()=>l(\"Scanner error: timeout\"),1E4)),(async()=>{try{var [g]=await c.detect(d);if(!g)throw e.NO_QR_CODE_FOUND;return{data:g.rawValue,cornerPoints:e._convertPoints(g.cornerPoints,m)}}catch(l){g=l.message||l;\nif(/not implemented|service unavailable/.test(g))return e._disableBarcodeDetector=!0,e.scanImage(a,{scanRegion:m,canvas:d,disallowCanvasResizing:f,alsoTryWithoutScanRegion:h});throw`Scanner error: ${g}`;}})()]);return n?q:q.data}catch(p){if(!m||!h)throw p;let k=await e.scanImage(a,{qrEngine:c,canvas:d,disallowCanvasResizing:f});return n?k:k.data}finally{b||e._postWorkerMessage(c,\"close\")}}setGrayscaleWeights(a,b,c,d=!0){e._postWorkerMessage(this._qrEnginePromise,\"grayscaleWeights\",{red:a,green:b,\nblue:c,useIntegerApproximation:d})}setInversionMode(a){e._postWorkerMessage(this._qrEnginePromise,\"inversionMode\",a)}static async createQrEngine(a){a&&console.warn(\"Specifying a worker path is not required and not supported anymore.\");return!e._disableBarcodeDetector&&\"BarcodeDetector\"in window&&BarcodeDetector.getSupportedFormats&&(await BarcodeDetector.getSupportedFormats()).includes(\"qr_code\")?new BarcodeDetector({formats:[\"qr_code\"]}):import(\"./qr-scanner-worker.min.js\").then(b=>b.createWorker())}_onPlay(){this._scanRegion=\nthis._calculateScanRegion(this.$video);this._updateOverlay();this.$overlay&&(this.$overlay.style.display=\"\");this._scanFrame()}_onLoadedMetaData(){this._scanRegion=this._calculateScanRegion(this.$video);this._updateOverlay()}_onVisibilityChange(){document.hidden?this.pause():this._active&&this.start()}_calculateScanRegion(a){let b=Math.round(2/3*Math.min(a.videoWidth,a.videoHeight));return{x:Math.round((a.videoWidth-b)/2),y:Math.round((a.videoHeight-b)/2),width:b,height:b,downScaledWidth:this._legacyCanvasSize,\ndownScaledHeight:this._legacyCanvasSize}}_updateOverlay(){requestAnimationFrame(()=>{if(this.$overlay){var a=this.$video,b=a.videoWidth,c=a.videoHeight,d=a.offsetWidth,f=a.offsetHeight,h=a.offsetLeft,m=a.offsetTop,n=window.getComputedStyle(a),p=n.objectFit,k=b/c,q=d/f;switch(p){case \"none\":var g=b;var l=c;break;case \"fill\":g=d;l=f;break;default:(\"cover\"===p?k>q:k<q)?(l=f,g=l*k):(g=d,l=g/k),\"scale-down\"===p&&(g=Math.min(g,b),l=Math.min(l,c))}var [v,w]=n.objectPosition.split(\" \").map((r,y)=>{const x=\nparseFloat(r);return r.endsWith(\"%\")?(y?f-l:d-g)*x/100:x});n=this._scanRegion.width||b;q=this._scanRegion.height||c;p=this._scanRegion.x||0;var u=this._scanRegion.y||0;k=this.$overlay.style;k.width=`${n/b*g}px`;k.height=`${q/c*l}px`;k.top=`${m+w+u/c*l}px`;c=/scaleX\\(-1\\)/.test(a.style.transform);k.left=`${h+(c?d-v-g:v)+(c?b-p-n:p)/b*g}px`;k.transform=a.style.transform}})}static _convertPoints(a,b){if(!b)return a;let c=b.x||0,d=b.y||0,f=b.width&&b.downScaledWidth?b.width/b.downScaledWidth:1;b=b.height&&\nb.downScaledHeight?b.height/b.downScaledHeight:1;for(let h of a)h.x=h.x*f+c,h.y=h.y*b+d;return a}_scanFrame(){!this._active||this.$video.paused||this.$video.ended||(\"requestVideoFrameCallback\"in this.$video?this.$video.requestVideoFrameCallback.bind(this.$video):requestAnimationFrame)(async()=>{if(!(1>=this.$video.readyState)){var a=Date.now()-this._lastScanTimestamp,b=1E3/this._maxScansPerSecond;a<b&&await new Promise(d=>setTimeout(d,b-a));this._lastScanTimestamp=Date.now();try{var c=await e.scanImage(this.$video,\n{scanRegion:this._scanRegion,qrEngine:this._qrEnginePromise,canvas:this.$canvas})}catch(d){if(!this._active)return;this._onDecodeError(d)}!e._disableBarcodeDetector||await this._qrEnginePromise instanceof Worker||(this._qrEnginePromise=e.createQrEngine());c?(this._onDecode?this._onDecode(c):this._legacyOnDecode&&this._legacyOnDecode(c.data),this.$codeOutlineHighlight&&(clearTimeout(this._codeOutlineHighlightRemovalTimeout),this._codeOutlineHighlightRemovalTimeout=void 0,this.$codeOutlineHighlight.setAttribute(\"viewBox\",\n`${this._scanRegion.x||0} `+`${this._scanRegion.y||0} `+`${this._scanRegion.width||this.$video.videoWidth} `+`${this._scanRegion.height||this.$video.videoHeight}`),this.$codeOutlineHighlight.firstElementChild.setAttribute(\"points\",c.cornerPoints.map(({x:d,y:f})=>`${d},${f}`).join(\" \")),this.$codeOutlineHighlight.style.display=\"\")):this.$codeOutlineHighlight&&!this._codeOutlineHighlightRemovalTimeout&&(this._codeOutlineHighlightRemovalTimeout=setTimeout(()=>this.$codeOutlineHighlight.style.display=\n\"none\",100))}this._scanFrame()})}_onDecodeError(a){a!==e.NO_QR_CODE_FOUND&&console.log(a)}async _getCameraStream(){if(!navigator.mediaDevices)throw\"Camera not found.\";let a=/^(environment|user)$/.test(this._preferredCamera)?\"facingMode\":\"deviceId\",b=[{width:{min:1024}},{width:{min:768}},{}],c=b.map(d=>Object.assign({},d,{[a]:{exact:this._preferredCamera}}));for(let d of[...c,...b])try{let f=await navigator.mediaDevices.getUserMedia({video:d,audio:!1}),h=this._getFacingMode(f)||(d.facingMode?this._preferredCamera:\n\"environment\"===this._preferredCamera?\"user\":\"environment\");return{stream:f,facingMode:h}}catch(f){}throw\"Camera not found.\";}async _restartVideoStream(){let a=this._paused;await this.pause(!0)&&!a&&this._active&&await this.start()}static _stopVideoStream(a){for(let b of a.getTracks())b.stop(),a.removeTrack(b)}_setVideoMirror(a){this.$video.style.transform=\"scaleX(\"+(\"user\"===a?-1:1)+\")\"}_getFacingMode(a){return(a=a.getVideoTracks()[0])?/rear|back|environment/i.test(a.label)?\"environment\":/front|user|face/i.test(a.label)?\n\"user\":null:null}static _drawToCanvas(a,b,c,d=!1){c=c||document.createElement(\"canvas\");let f=b&&b.x?b.x:0,h=b&&b.y?b.y:0,m=b&&b.width?b.width:a.videoWidth||a.width,n=b&&b.height?b.height:a.videoHeight||a.height;d||(d=b&&b.downScaledWidth?b.downScaledWidth:m,b=b&&b.downScaledHeight?b.downScaledHeight:n,c.width!==d&&(c.width=d),c.height!==b&&(c.height=b));b=c.getContext(\"2d\",{alpha:!1});b.imageSmoothingEnabled=!1;b.drawImage(a,f,h,m,n,0,0,c.width,c.height);return[c,b]}static async _loadImage(a){if(a instanceof\nImage)return await e._awaitImageLoad(a),a;if(a instanceof HTMLVideoElement||a instanceof HTMLCanvasElement||a instanceof SVGImageElement||\"OffscreenCanvas\"in window&&a instanceof OffscreenCanvas||\"ImageBitmap\"in window&&a instanceof ImageBitmap)return a;if(a instanceof File||a instanceof Blob||a instanceof URL||\"string\"===typeof a){let b=new Image;b.src=a instanceof File||a instanceof Blob?URL.createObjectURL(a):a.toString();try{return await e._awaitImageLoad(b),b}finally{(a instanceof File||a instanceof\nBlob)&&URL.revokeObjectURL(b.src)}}else throw\"Unsupported image type.\";}static async _awaitImageLoad(a){a.complete&&0!==a.naturalWidth||await new Promise((b,c)=>{let d=f=>{a.removeEventListener(\"load\",d);a.removeEventListener(\"error\",d);f instanceof ErrorEvent?c(\"Image load error\"):b()};a.addEventListener(\"load\",d);a.addEventListener(\"error\",d)})}static async _postWorkerMessage(a,b,c,d){return e._postWorkerMessageSync(await a,b,c,d)}static _postWorkerMessageSync(a,b,c,d){if(!(a instanceof Worker))return-1;\nlet f=e._workerMessageId++;a.postMessage({id:f,type:b,data:c},d);return f}}e.DEFAULT_CANVAS_SIZE=400;e.NO_QR_CODE_FOUND=\"No QR code found\";e._disableBarcodeDetector=!1;e._workerMessageId=0;export default e\n","import {\n    Component,\n    ElementRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport QrScanner from 'qr-scanner';\n\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-qr-scan]',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center\"\n        >\n            <p class=\"mt-6 mb-4\">\n                Please enter your email address or scan your QR code\n            </p>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    [(ngModel)]=\"email\"\n                    placeholder=\"Enter email...\"\n                    type=\"email\"\n                    autocomplete=\"off\"\n                    (blur)=\"checkEmail(email)\"\n                    (keyup.enter)=\"checkEmail(email)\"\n                />\n                <mat-error>Invalid email format</mat-error>\n            </mat-form-field>\n            <video\n                #video\n                class=\"rounded m-4 bg-gray-200 border border-gray-500\"\n                id=\"qr-stream\"\n                playsinline\n                width=\"640\"\n                height=\"480\"\n                autoplay\n            ></video>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                height: 100%;\n                width: 100%;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            video {\n                width: 36rem;\n                height: 27rem;\n            }\n\n            mat-form-field {\n                width: 36rem;\n            }\n\n            a {\n                position: absolute;\n            }\n        `,\n    ],\n})\nexport class CheckinQRScanComponent implements OnInit, OnDestroy {\n    /** Email address of the visitor */\n    public email: string;\n    /** Video element to emit camera feed */\n    @ViewChild('video', { static: true })\n    private _video_el: ElementRef<HTMLVideoElement>;\n    /** QR Reader */\n    private _reader;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this.setupQRReader();\n    }\n\n    public ngOnDestroy() {\n        if (this._video_el.nativeElement.srcObject) {\n            (this._video_el.nativeElement.srcObject as any)\n                .getTracks()\n                .forEach((track) => track?.stop());\n        }\n        this._reader?.stop();\n    }\n\n    public async checkQRCode(raw_text: string) {\n        const chunks = raw_text.split(',');\n        if (chunks.length !== 2) {\n            notifyError('Invalid QRCode');\n            this.setupQRReader();\n            return;\n        } else {\n            await this._checkin\n                .loadGuestAndEvent(chunks[0], chunks[1])\n                .catch((err) => {\n                    this.handleError(err.message || err);\n                    throw err;\n                });\n            this._router.navigate(['/checkin', 'details']);\n        }\n    }\n\n    public async checkEmail(email: string) {\n        if (!email || !email.includes('@') || email.length < 5) return;\n        await this._checkin.loadGuestAndEvent(email).catch((err) => {\n            this.handleError(err.message || err);\n            throw err;\n        });\n        this._router.navigate(['/checkin', 'details']);\n    }\n\n    private setupQRReader() {\n        if (navigator.mediaDevices?.getUserMedia) {\n            navigator.mediaDevices\n                .getUserMedia({ video: true })\n                .then(\n                    (stream) =>\n                        (this._video_el.nativeElement.srcObject = stream)\n                )\n                .catch((e) =>\n                    console.error('Unable to fetch media devices!', e)\n                );\n        }\n        if (!QrScanner) return;\n        this._reader = new QrScanner(this._video_el.nativeElement, (r) =>\n            this.checkQRCode(r)\n        );\n        this._reader.start();\n    }\n\n    private handleError(message: any) {\n        this._checkin.setError(message?.statusText || message);\n        this._router.navigate(['/checkin', 'error']);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-results',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto space-y-4\"\n            *ngIf=\"event | async\"\n        >\n            <h3 class=\"text-xl\">You are checked in!</h3>\n            <p class=\"text-center\">\n                Welcome, you have a meeting at\n                {{ (event | async)?.date || '' | date: 'shortDate' }}\n                with {{ (event | async).organiser?.name || '' }}.<br />\n                {{ (event | async).organiser?.name || '' }} has been notified\n                and will be with you shortly.&nbsp;\n            </p>\n            <p *ngIf=\"!(event | async)?.can_access_lift\">\n                Please wait in the lobby.\n            </p>\n            <p *ngIf=\"(event | async)?.can_access_lift\">\n                Please use the vistor access lift over there.\n            </p>\n            <a\n                button\n                mat-button\n                class=\"w-32\"\n                [routerLink]=\"['/checkin', 'preferences']\"\n            >\n                Done\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinResultsComponent implements OnInit {\n    public readonly event = this._checkin.event;\n    public readonly guest = this._checkin.guest;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        this.event.pipe(first()).subscribe((_) => (!_ ? this.previous() : ''));\n    }\n\n    public previous(): void {\n        this._router.navigate(['/checkin']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-error',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto p-4\"\n        >\n            <h3 class=\"text-2xl mb-4\">Please see reception.</h3>\n            <p class=\"mb-2\" *ngIf=\"error | async\">{{ error | async }}</p>\n            <p class=\"mb-4\">Our staff at reception will assist you.</p>\n            <a button mat-button class=\"w-32\" [routerLink]=\"['/welcome']\">\n                Back\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 28rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinErrorComponent {\n    public readonly error = this._checkin.error;\n\n    constructor(private _checkin: CheckinStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-covid]',\n    template: `\n        <div class=\"bg-white rounded p-4 relative overflow-y-auto overflow-x-hidden\">\n            <h3 class=\"text-xl font-medium mb-4\">COVID Disclaimer</h3>\n            <ol class=\"list-decimal list-inside\">\n                <li>\n                    Do you have any of the following symptoms?<br /><br />\n                    <ul class=\"list-disc list-inside px-4 mb-4\">\n                        <li>Fever</li>\n                        <li>Cough</li>\n                        <li>Shortness of breath</li>\n                        <li>Chills</li>\n                        <li>Body aches</li>\n                        <li>Sore or scratchy throat</li>\n                        <li>Headache</li>\n                        <li>Runny nose</li>\n                        <li>Muscle pain</li>\n                        <li>Vomitting</li>\n                        <li>Nausea</li>\n                        <li>Diarrhoa</li>\n                        <li>Loss of taste or smell</li>\n                    </ul>\n                    <mat-radio-group\n                        aria-label=\"Has Symptoms\"\n                        [(ngModel)]=\"symptoms\"\n                    >\n                        <mat-radio-button value=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button value=\"false\" class=\"ml-4\"\n                            >No</mat-radio-button\n                        >\n                    </mat-radio-group>\n                </li>\n                <hr class=\"my-4\" />\n                <li>\n                    Have you been in contact with a COVID-19 case in the last 14\n                    days or been asked to self-isolate by a health offical?<br /><br />\n                    <mat-radio-group\n                        aria-label=\"COVID contact or self-isolated\"\n                        [(ngModel)]=\"contact\"\n                    >\n                        <mat-radio-button value=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button value=\"false\" class=\"ml-4\"\n                            >No</mat-radio-button\n                        >\n                    </mat-radio-group>\n                </li>\n            </ol>\n            <button mat-button (click)=\"confirm()\">Confirm</button>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!symptoms && !contact\"\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n                max-height: calc(100% - 2rem);\n            }\n\n            .absolute {\n                position: absolute;\n            }\n\n            button {\n                margin: 1rem 11rem 0;\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class CheckinCovidComponent {\n    public contact: string;\n    public symptoms: string;\n\n    constructor(\n        private _router: Router,\n        private _checkin: CheckinStateService\n    ) {}\n\n    public confirm() {\n        if (!this.symptoms || !this.contact)\n            return notifyError('Please select yes or no for each question');\n        this._checkin.updateGuest({\n            covid: this.contact === 'true',\n            symptoms: this.symptoms === 'true',\n        });\n        if (this.symptoms === 'false' && this.contact === 'false') {\n            this._router.navigate(['/checkin', 'results']);\n        } else {\n            this._checkin.setError('Please get tested for COVID-19 and self-isolate at home for 14 days');\n            this._router.navigate(['/checkin', 'error']);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nimport { CheckinDetailsComponent } from './checkin-details.component';\nimport { CheckinPhotoComponent } from './checkin-photo.component';\nimport { CheckinPreferencesComponent } from './checkin-preferences.component';\nimport { CheckinQRScanComponent } from './checkin-qr-scan.component';\nimport { CheckinResultsComponent } from './checkin-result.component';\nimport { CheckinErrorComponent } from './checkin-error.component';\nimport { CheckinCovidComponent } from './checkin-covid.component';\nimport { CheckinComponent } from './checkin.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: CheckinComponent,\n        children: [\n            { path: 'scan', component: CheckinQRScanComponent },\n            { path: 'details', component: CheckinDetailsComponent },\n            { path: 'preferences', component: CheckinPreferencesComponent },\n            { path: 'photo', component: CheckinPhotoComponent },\n            { path: 'results', component: CheckinResultsComponent },\n            { path: 'error', component: CheckinErrorComponent },\n            { path: 'covid', component: CheckinCovidComponent },\n            { path: '**', redirectTo: 'scan' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CheckinComponent,\n        CheckinResultsComponent,\n        CheckinQRScanComponent,\n        CheckinPreferencesComponent,\n        CheckinPhotoComponent,\n        CheckinDetailsComponent,\n        CheckinErrorComponent,\n        CheckinCovidComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedComponentsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorCheckinModule {}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-checkin]',\n    template: `\n        <a-topbar-header class=\"w-full\"></a-topbar-header>\n        <div\n            class=\"flex-1 w-full bg-center bg-cover relative\"\n            [style.background-image]=\"'url(' + background + ')'\"\n        >\n            <router-outlet></router-outlet>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CheckinComponent {\n    public get background() {\n        return this._settings.get('app.home.background');\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n"],"x_google_ignoreList":[7,13]}