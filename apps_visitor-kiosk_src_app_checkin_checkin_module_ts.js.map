{"version":3,"sources":["./apps/visitor-kiosk/src/app/checkin/checkin-state.service.ts","./apps/visitor-kiosk/src/app/checkin/checkin-details.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-photo.component.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./node_modules/@angular/material/fesm2015/tabs.js","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./apps/visitor-kiosk/src/app/checkin/checkin-preferences.component.ts","./node_modules/qr-scanner/src/qr-scanner.js","./apps/visitor-kiosk/src/app/checkin/checkin-qr-scan.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-result.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-error.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-covid.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin.module.ts","./apps/visitor-kiosk/src/app/checkin/checkin.component.ts"],"names":["CheckinStateService","_event","BehaviorSubject","_guest","_photo","_error","_form","event","this","asObservable","guest","error","form","next","data","message","email","event_id","toPromise","host","upcoming","today","Date","todays_events","filter","isSameDay","date","sort","a","b","length","Error","getValue","name","details","value","id","system_id","system","resources","Promise","res","setTimeout","err","reject","CheckinDetailsComponent","_checkin","_router","loading","pipe","first","subscribe","_","previous","updateGuest","checkinGuest","navigate","CheckinPhotoComponent","setPhoto","printPass","catch","e","RULE_TYPES","CateringConfigModalComponent","_data","rule_types","rulesets","config","map","set","rules","i","JSON","stringify","Math","floor","random","parse","emit","reason","metadata","saveChanges","CateringItemModalComponent","item","description","category","unit_price","tags","accept_points","discount_cap","separators","categories","controls","markAsDirty","input","tag_list","trim","push","setValue","existing_tag","index","indexOf","splice","CateringItemOptionModalComponent","option","types","group","multiple","new_option","parent","options","concat","MatTab_ng_template_0_Template","rf","ctx","MatTabBody_ng_template_2_Template","a0","animationDuration","_c2","a1","params","_c3","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","restoredCtx","i_r5","ctx_r11","_r0","_handleClick","$event","_tabFocusChanged","ctx_r1","selectedIndex","_getTabLabelId","disabled","disableRipple","_getTabIndex","_tabs","_getTabContentId","ariaLabel","ariaLabelledby","MatTabGroup_mat_tab_body_5_Template","_r17","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r14","i_r15","ctx_r3","content","position","origin","_c5","_c6","_c7","_c8","_MAT_INK_BAR_POSITIONER","providedIn","factory","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","_animationMode","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","positions","inkBar","ɵfac","t","ɵdir","type","selectors","hostAttrs","hostVars","hostBindings","MAT_TAB_CONTENT","MAT_TAB_LABEL","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","super","_contentPortal","_stateChanges","Subject","isActive","_templateLabel","_setTemplateLabelInput","changes","hasOwnProperty","complete","_explicitContent","_implicitContent","ɵcmp","contentQueries","dirIndex","_t","viewQuery","inputs","exportAs","features","ngContentSelectors","decls","vars","template","encapsulation","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","Subscription","_leavingSub","ngOnInit","_beforeCentering","startWith","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","ngOnDestroy","unsubscribe","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","outputs","elementRef","_portalHost","consts","_onTranslateTabStarted","directives","styles","animation","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","dynamicHeight","_dynamicHeight","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","resolve","then","forEach","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","_allTabs","reset","notifyOnChanges","destroy","_tabHeader","_alignInkBarToSelectedTab","merge","min","max","tabHeight","height","offsetHeight","tabHeader","focusIndex","idx","focusOrigin","MatTabGroup","animationMode","color","provide","useExisting","_focusChanged","MatTabHeader","MatTabLabelWrapper","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","focus","passiveEventListenerOptions","passive","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","_keyManager","updateActiveItem","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","of","resize","realign","updatePagination","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","run","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","_itemSelected","onKeydown","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","direction","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","timer","maxScrollDistance","distance","_MatTabHeaderBase","viewportRuler","ngZone","platform","_disableRipple","preventDefault","_handlePaginatorClick","_handleKeydown","_onContentChanges","cateringItemAvailable","is_available","rule","includes","space","zones","matches","condition","isAfter","setHours","isBefore","duration","ext","CateringOrderModalComponent","menu_items","order","getCateringConfig","level","parent_id","menu","list","cat","updateMenuQuantities","timeout","choose_options","old_item","items","find","itm","reduce","c","o","opt","selectOptions","new_item","addItem","options_string","quantity","amount","localeCompare","join","show_order_details","CateringOrderOptionsModalComponent","option_state","groups","group_list","saveOptions","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","result","toLowerCase","readAsText","CateringStateService","_org","_dialog","_menu","_loading","_currency","currency","subscription","active_building","bld","getCateringForZone","ref","open","race","componentInstance","afterClosed","close","findIndex","updateMenu","building","title","icon","class","updateConfig","updated_menu","zone_id","Array","match","CheckinPreferencesComponent","_catering","l","beverage","extension_data","catering","update","QrScanner","listCameras","cameras","requestLabels","navigator","mediaDevices","openedStream","getUserMedia","audio","video","stream","enumerateDevices","devices","device","kind","deviceId","label","finally","track","getTracks","stop","removeTrack","onDecode","canvasSizeOrOnDecodeError","_onDecodeError","canvasSizeOrCalculateScanRegion","_calculateScanRegion","preferredCamera","$video","$canvas","document","createElement","_onDecode","_legacyCanvasSize","DEFAULT_CANVAS_SIZE","_preferredCamera","_active","_paused","_flashOn","console","warn","_scanRegion","_onPlay","bind","_onLoadedMetaData","_onVisibilityChange","disablePictureInPicture","playsInline","muted","shouldHideVideo","hidden","body","contains","appendChild","computedStyle","window","getComputedStyle","display","setProperty","opacity","_qrEnginePromise","createQrEngine","srcObject","getVideoTracks","_getCameraStream","getSettings","turnFlashOff","turnFlashOn","hasFlash","applyConstraints","advanced","torch","_restartVideoStream","removeEventListener","_postWorkerMessage","location","protocol","play","facingMode","_setVideoMirror","pause","stopStreamImmediately","stopStream","tracks","facingModeOrDeviceId","imageOrFileOrUrl","scanRegion","qrEngine","canvas","disallowCanvasResizing","alsoTryWithoutScanRegion","gotExternalWorker","Worker","promise","all","_loadImage","engine","image","canvasContext","_drawToCanvas","postMessage","onMessage","onError","clearTimeout","NO_QR_CODE_FOUND","imageData","getImageData","buffer","detect","scanResults","rawValue","scanImage","red","green","blue","useIntegerApproximation","inversionMode","workerPath","WORKER_PATH","BarcodeDetector","getSupportedFormats","supportedFormats","formats","_scanFrame","start","smallestDimension","videoWidth","videoHeight","scanRegionSize","downScaledWidth","downScaledHeight","paused","ended","readyState","log","preferenceType","constraintsWithoutCamera","constraint","Object","assign","exact","reduceRight","fallback","_getFacingMode","wasPaused","videoStream","videoTrack","scanRegionX","scanRegionY","scanRegionWidth","scanRegionHeight","canvasWidth","canvasHeight","context","getContext","alpha","imageSmoothingEnabled","drawImage","imageOrFileOrBlobOrUrl","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","Blob","URL","src","createObjectURL","revokeObjectURL","naturalWidth","onLoad","qrEngineOrQrEnginePromise","CheckinQRScanComponent","setupQRReader","_video_el","_reader","raw_text","chunks","split","loadGuestAndEvent","handleError","r","checkQRCode","setError","statusText","checkEmail","CheckinResultsComponent","CheckinErrorComponent","CheckinCovidComponent","symptoms","contact","covid","confirm","ROUTES","path","component","CheckinComponent","_settings","get","children","redirectTo","VisitorCheckinModule"],"mappings":"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","file":"apps_visitor-kiosk_src_app_checkin_checkin_module_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { HashMap, notifyError } from '@placeos/common';\nimport { CalendarEvent, checkinEventGuest, showEvent } from '@placeos/events';\nimport {\n    GuestUser,\n    generateGuestForm,\n    showGuest,\n    listGuestMeetings,\n} from '@placeos/users';\nimport { isSameDay } from 'date-fns';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CheckinStateService {\n    /** Current event being checked in */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    /** Current guest being checked in */\n    private _guest = new BehaviorSubject<GuestUser>(null);\n    /** Photo of the current guest */\n    private _photo = new BehaviorSubject<string>('');\n    /** Photo of the current guest */\n    private _error = new BehaviorSubject<string>('');\n    /** Form for the current guest details */\n    private _form = new BehaviorSubject<FormGroup>(null);\n\n    public readonly event = this._event.asObservable();\n    public readonly guest = this._guest.asObservable();\n    public readonly error = this._error.asObservable();\n    public readonly form = this._form.asObservable();\n\n    public clear() {\n        this._guest.next(null);\n        this._event.next(null);\n        this._photo.next(null);\n    }\n\n    public setPhoto(data: string) {\n        this._photo.next(data);\n    }\n\n    public setError(message: string) {\n        this._error.next(message);\n    }\n\n    /** Load gie */\n    public async loadGuestAndEvent(email: string, event_id?: string) {\n        const guest = await showGuest(email).toPromise();\n        if (event_id) {\n            const event = await showEvent(event_id).toPromise();\n            this._guest.next(guest);\n            this._event.next(event);\n            this._form.next(generateGuestForm(guest, event.host));\n            return { guest, event };\n        }\n        const upcoming = await listGuestMeetings(email).toPromise();\n        const today = new Date();\n        const todays_events = upcoming.filter((event) =>\n            isSameDay(new Date(event.date), today)\n        );\n        todays_events.sort((a, b) => a.date - b.date);\n        if (todays_events.length <= 0) {\n            throw new Error(`No meetings for with guest \"${email}\" today`);\n        }\n        this._guest.next(guest);\n        this._event.next(todays_events[0]);\n        this._form.next(generateGuestForm(guest, todays_events[0].host));\n        return { guest, event: todays_events[0] };\n    }\n\n    public async updateGuest(data?: HashMap) {\n        const guest = this._guest.getValue();\n        const form = this._form.getValue();\n        if (!guest || !form) return;\n        await updateMetadata(guest.email, {\n            name: 'preferences',\n            details: { ...guest, ...form.value, ...(data || {}) },\n        }).toPromise();\n    }\n\n    public async checkinGuest() {\n        const guest = this._guest.getValue();\n        const event = this._event.getValue();\n        if (!guest || !event) return;\n        await checkinEventGuest(event.id, guest.email, true, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        }).toPromise();\n    }\n\n    public printPass() {\n        try {\n            // TODO: actually trigger print visitor pass\n            return new Promise((res) => setTimeout(() => res(''), 5000));\n        } catch (err) {\n            notifyError('Error printing visitor pass');\n        }\n        return Promise.reject();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-details]',\n    template: `\n        <form\n            *ngIf=\"(form | async) && !loading; else load_state\"\n            [formGroup]=\"form | async\"\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto\"\n        >\n            <h3 class=\"text-2xl m-4\">Confirm Details</h3>\n            <div field class=\"flex flex-col\">\n                <label form=\"host\">Host</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"host\"\n                        formControlName=\"host\"\n                        placeholder=\"Host's Email Address\"\n                    />\n                    <mat-error>\n                        The email address of your host is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"name\">Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        formControlName=\"name\"\n                        placeholder=\"Full Name\"\n                    />\n                    <mat-error>Please enter your full name</mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Email</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        formControlName=\"email\"\n                        placeholder=\"Email Address\"\n                    />\n                    <mat-error>A valid email address is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Phone Number</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        formControlName=\"phone\"\n                        placeholder=\"Phone Number\"\n                    />\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Organisation / Company</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        formControlName=\"phone\"\n                        placeholder=\"Organisation / Company\"\n                    />\n                </mat-form-field>\n            </div>\n            <button next mat-button (click)=\"updateGuest()\">Next</button>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </form>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center m-auto\">\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <div class=\"my-4 text-lg text-white\">\n                    Updating data and checking in...\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            form {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            [field] {\n                width: calc(100% - 2rem);\n            }\n\n            .absolute {\n                position: absolute;\n            }\n\n            button {\n                margin-bottom: 1rem;\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class CheckinDetailsComponent implements OnInit {\n    public readonly form = this._checkin.form;\n\n    public loading = false;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        this.form.pipe(first()).subscribe((_) => (!_ ? this.previous() : ''));\n    }\n\n    public async updateGuest() {\n        this.loading = true;\n        await this._checkin.updateGuest();\n        await this._checkin.checkinGuest();\n        this.loading = false;\n        this._router.navigate(['/checkin', 'covid']);\n    }\n\n    public previous() {\n        this._router.navigate(['/checkin', 'scan']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-photo',\n    template: `\n        <div class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center p-4\" *ngIf=\"!loading; else load_state\">\n            <h3 class=\"text-xl mb-4\">Take a photo to continue</h3>\n            <a-take-photo (photoAccepted)=\"handlePhoto($event)\"></a-take-photo>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center m-auto\">\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <div class=\"my-4 text-lg text-white\">\n                    Printing guest pass...\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n        }\n\n        .absolute {\n            position: absolute;\n        }\n    `]\n})\nexport class CheckinPhotoComponent {\n    /** Whether guest pass is being loaded */\n    public loading: boolean;\n\n    constructor(private _checkin: CheckinStateService, private _router: Router) { }\n\n    public async handlePhoto(event: any) {\n        if (!event) {\n            return notifyError('Error saving image, please try again');\n        }\n        this.loading = true;\n        this._checkin.setPhoto(event);\n        await this._checkin.printPass().catch((e) => {\n            this.loading = false;\n            notifyError(e);\n            throw e;\n        });\n        this.loading = false;\n        this._router.navigate(['/checkin', 'results']);\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour', number]\n    | ['min_length' | 'max_length' | 'is_before' | 'is_after' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour' },\n    { id: 'before_hour', name: 'Before Hour' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Before Time' },\n    { id: 'is_after', name: 'Is After Time' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n]\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center\">\n            <button\n                mat-button\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 3.5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex px-2 h-14 space-x-2\"\n                        *ngFor=\"let rule of set.rules\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button (click)=\"saveChanges()\">Save Changes</button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n\n            main {\n                width: 32em;\n                padding: 0.5em 1em 1em;\n            }\n\n            main button.mat-button {\n                margin: 0 auto 0.5em;\n                min-width: 12em;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.category\">\n                <label\n                    for=\"category\"\n                    [class.error]=\"\n                        form.controls.category.invalid &&\n                        form.controls.category.touched\n                    \"\n                >\n                    Category<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"category\"\n                        placeholder=\"Category\"\n                        formControlName=\"category\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Category is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-list #chipList aria-label=\"Item Tags\">\n                        <mat-chip\n                            *ngFor=\"let tag of tag_list\"\n                            [selectable]=\"true\"\n                            [removable]=\"true\"\n                            (removed)=\"removeTag(tag)\"\n                        >\n                            {{ tag }}\n                            <app-icon\n                                matChipRemove\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'close'\n                                }\"\n                            ></app-icon>\n                        </mat-chip>\n                        <input\n                            name=\"tags\"\n                            placeholder=\"Zone tags...\"\n                            i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                            [matChipInputFor]=\"chipList\"\n                            [matChipInputSeparatorKeyCodes]=\"separators\"\n                            [matChipInputAddOnBlur]=\"true\"\n                            (matChipInputTokenEnd)=\"addTag($event)\"\n                        />\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form: FormGroup = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>\n                {{ option.id ? 'Edit' : 'Add' }} Item Option\n            </h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemOptionModalComponent implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.option.name || '', [\n                Validators.required,\n            ]),\n            group: new FormControl(this.option.group || '', [\n                Validators.required,\n            ]),\n            unit_price: new FormControl(this.option.unit_price),\n            multiple: new FormControl(!!this.option.multiple, []),\n        });\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const i_r5 = restoredCtx.index; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._tabFocusChanged($event, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r15);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r15))(\"content\", tab_r14.content)(\"position\", tab_r14.position)(\"origin\", tab_r14.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r15));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatTabLabel_BaseFactory; return function MatTabLabel_Factory(t) { return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel)))(t || MatTabLabel); }; }();\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP)); };\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [CdkPortalOutlet,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\n            defaultConfig.dynamicHeight : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => tab._closestTabGroup === this));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        if (focusOrigin) {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n//# sourceMappingURL=tabs.js.map","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { isAfter, setHours, isBefore } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseClass, DialogEvent, HashMap, unique } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches++;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{ item.unit_price / 100 | currency }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                mat-icon-button\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            mat-icon-button\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button mat-button class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    mat-button\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    mat-button\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save mat-button (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n            <!-- <div class=\"charge-code\" [formGroup]=\"form\">\n                <input\n                    formControlName=\"charge_code\"\n                    [class.error]=\"\n                        form.controls.charge_code.touched &&\n                        form.controls.charge_code.invalid\n                    \"\n                    placeholder=\"Charge Code*\"\n                    required\n                />\n            </div> -->\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n\n                &:focus {\n                    border: none;\n                    border-top: 2px solid var(--primary);\n                    border-bottom: 2px solid var(--primary);\n                    box-shadow: none;\n                }\n\n                &.error::placeholder {\n                    color: rgba(var(--error), 0.45);\n                }\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent extends BaseClass implements OnInit {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /**  */\n    public readonly form: FormGroup;\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    options: CateringOption[];\n}\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{ opt.unit_price / 100 | currency }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button mat-button class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    mat-button\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { updateMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends BaseClass {\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(bld.currency || 'USD');\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (\n            await showMetadata(zone_id, 'catering').toPromise()\n        ).details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Calendar } from '@placeos/calendar';\n\nimport {\n    CateringItem,\n    CateringOrder,\n    CateringStateService,\n} from '@placeos/catering';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { CalendarEvent, updateEvent } from '@placeos/events';\nimport { first, map } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-preferences',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto\"\n        >\n            <h3 class=\"text-xl mb-2 w-full\">Would you like a drink?</h3>\n            <div class=\"w-full\">\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <mat-select\n                        [(ngModel)]=\"beverage\"\n                        placeholder=\"Select beverage\"\n                    >\n                        <mat-option\n                            *ngFor=\"let item of menu | async\"\n                            [value]=\"item\"\n                        >\n                            {{ item.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button class=\"w-32\" (click)=\"update()\">\n                {{ beverage ? 'Update' : 'Continue' }}\n            </button>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinPreferencesComponent {\n    public beverage: CateringItem;\n\n    public readonly menu = this._catering.menu.pipe(\n        map((l) => {\n            return l.filter((_) =>\n                _.tags.find((_) => _.toLowerCase() === 'drink')\n            );\n        })\n    );\n\n    constructor(\n        private _router: Router,\n        private _checkin: CheckinStateService,\n        private _catering: CateringStateService\n    ) {}\n\n    public async update() {\n        if (!this.beverage) return this.next();\n        const event = await this._checkin.event\n            .pipe(first((_) => !!_))\n            .toPromise();\n        if (!event) return notifyError('Unable to load event data.');\n        const order =\n            (event.ext('catering') ? event.ext('catering')[0] : null) ||\n            new CateringOrder();\n        await updateEvent(\n            event.id,\n            new CalendarEvent({\n                ...event,\n                extension_data: {\n                    ...event.extension_data,\n                    catering: [\n                        ...(event.extension_data.catering?.filter(\n                            (_) => _.id !== order.id\n                        ) || []),\n                        new CateringOrder({\n                            ...order,\n                            items: [\n                                ...order.items,\n                                new CateringItem({\n                                    ...this.beverage,\n                                    quantity: 1,\n                                }),\n                            ],\n                        }),\n                    ],\n                },\n            })\n        ).toPromise();\n        notifySuccess('Successfully update event.');\n        this.next();\n    }\n\n    public next() {\n        this._router.navigate(['/welcome']);\n    }\n}\n","export default class QrScanner {\n    /* async */\n    static hasCamera() {\n        return QrScanner.listCameras(false)\n            .then(cameras => !!cameras.length)\n            .catch(() => false);\n    }\n\n    /* async */\n    static listCameras(requestLabels = false) {\n        if (!navigator.mediaDevices) return Promise.resolve([]);\n\n        // Note that enumerateDevices can always be called and does not prompt the user for permission.\n        // However, enumerateDevices only includes device labels if served via https and an active media stream exists\n        // or permission to access the camera was given. Therefore, ask for camera permission by opening a stream, if\n        // labels were requested.\n        let openedStream = null;\n        return (requestLabels\n            ? navigator.mediaDevices.getUserMedia({ audio: false, video: true })\n                .then(stream => openedStream = stream)\n                // Fail gracefully, especially if the device has no camera or on mobile when the camera is already in\n                // use and some browsers disallow a second stream.\n                .catch(() => {})\n            : Promise.resolve()\n        )\n            .then(() => navigator.mediaDevices.enumerateDevices())\n            .then(devices => devices.filter(device => device.kind === 'videoinput').map((device, i) => ({\n                id: device.deviceId,\n                label: device.label || (i === 0 ? 'Default Camera' : `Camera ${i + 1}`),\n            })))\n            .finally(() => {\n                // close the stream we just opened for getting camera access for listing the device labels\n                if (!openedStream) return;\n                for (const track of openedStream.getTracks()) {\n                    track.stop();\n                    openedStream.removeTrack(track);\n                }\n            });\n    }\n\n    constructor(\n        video,\n        onDecode,\n        canvasSizeOrOnDecodeError = this._onDecodeError,\n        canvasSizeOrCalculateScanRegion = this._calculateScanRegion,\n        preferredCamera = 'environment'\n    ) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n        this._onDecode = onDecode;\n        this._legacyCanvasSize = QrScanner.DEFAULT_CANVAS_SIZE;\n        this._preferredCamera = preferredCamera;\n        this._active = false;\n        this._paused = false;\n        this._flashOn = false;\n\n        if (typeof canvasSizeOrOnDecodeError === 'number') {\n            // legacy function signature where the third argument is the canvas size\n            this._legacyCanvasSize = canvasSizeOrOnDecodeError;\n            console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                + 'the future');\n        } else {\n            this._onDecodeError = canvasSizeOrOnDecodeError;\n        }\n\n        if (typeof canvasSizeOrCalculateScanRegion === 'number') {\n            // legacy function signature where the fourth argument is the canvas size\n            this._legacyCanvasSize = canvasSizeOrCalculateScanRegion;\n            console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                + 'the future');\n        } else {\n            this._calculateScanRegion = canvasSizeOrCalculateScanRegion;\n        }\n\n        this._scanRegion = this._calculateScanRegion(video);\n\n        this._onPlay = this._onPlay.bind(this);\n        this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n        video.disablePictureInPicture = true;\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        video.muted = true;\n\n        // Avoid Safari stopping the video stream on a hidden video.\n        // See https://github.com/cozmo/jsQR/issues/185\n        let shouldHideVideo = false;\n        if (video.hidden) {\n            video.hidden = false;\n            shouldHideVideo = true;\n        }\n        if (!document.body.contains(video)) {\n            document.body.appendChild(video);\n            shouldHideVideo = true;\n        }\n        requestAnimationFrame(() => {\n            // Checking in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle.\n            const computedStyle = window.getComputedStyle(video);\n            if (computedStyle.display === 'none') {\n                video.style.setProperty('display', 'block', 'important');\n                shouldHideVideo = true;\n            }\n            if (computedStyle.visibility !== 'visible') {\n                video.style.setProperty('visibility', 'visible', 'important');\n                shouldHideVideo = true;\n            }\n            if (shouldHideVideo) {\n                // Hide the video in a way that doesn't cause Safari to stop the playback.\n                console.warn('QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.');\n                video.style.opacity = 0;\n                video.style.width = 0;\n                video.style.height = 0;\n            }\n        });\n\n        video.addEventListener('play', this._onPlay);\n        video.addEventListener('loadedmetadata', this._onLoadedMetaData);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n\n        this._qrEnginePromise = QrScanner.createQrEngine();\n    }\n\n    /* async */\n    hasFlash() {\n        let openedStream = null;\n        return (this.$video.srcObject\n            ? Promise.resolve(this.$video.srcObject.getVideoTracks()[0])\n            : this._getCameraStream().then(({ stream }) => {\n                console.warn('Call hasFlash after successfully starting the scanner to avoid creating '\n                    + 'a temporary video stream');\n                openedStream = stream;\n                return stream.getVideoTracks()[0];\n            })\n        )\n            .then((track) => 'torch' in track.getSettings())\n            .catch(() => false)\n            .finally(() => {\n                // close the stream we just opened for detecting whether it supports flash\n                if (!openedStream) return;\n                for (const track of openedStream.getTracks()) {\n                    track.stop();\n                    openedStream.removeTrack(track);\n                }\n            });\n    }\n\n    isFlashOn() {\n      return this._flashOn;\n    }\n\n    /* async */\n    toggleFlash() {\n        if (this._flashOn) {\n            return this.turnFlashOff();\n        } else {\n            return this.turnFlashOn();\n        }\n    }\n\n    /* async */\n    turnFlashOn() {\n        if (this._flashOn) return Promise.resolve();\n        this._flashOn = true;\n        if (!this._active || this._paused) return Promise.resolve(); // flash will be turned on later on .start()\n        return this.hasFlash().then((hasFlash) => {\n            if (!hasFlash) return Promise.reject('No flash available');\n            // Note that the video track is guaranteed to exist at this point\n            return this.$video.srcObject.getVideoTracks()[0].applyConstraints({\n                advanced: [{ torch: true }],\n            });\n        }).catch(() => {\n            this._flashOn = false;\n            throw e;\n        });\n    }\n\n    /* async */\n    turnFlashOff() {\n        if (!this._flashOn) return;\n        // applyConstraints with torch: false does not work to turn the flashlight off, as a stream's torch stays\n        // continuously on, see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#torch. Therefore,\n        // we have to stop the stream to turn the flashlight off.\n        this._flashOn = false;\n        return this._restartVideoStream();\n    }\n\n    destroy() {\n        this.$video.removeEventListener('loadedmetadata', this._onLoadedMetaData);\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n\n        this.stop();\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'close');\n    }\n\n    /* async */\n    start() {\n        if (this._active && !this._paused) {\n            return Promise.resolve();\n        }\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n        this._active = true;\n        if (document.hidden) {\n            // camera will be started as soon as tab is in foreground\n            return Promise.resolve();\n        }\n        this._paused = false;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            this.$video.play();\n            return Promise.resolve();\n        }\n\n        return this._getCameraStream()\n            .then(({ stream, facingMode }) => {\n                this.$video.srcObject = stream;\n                this.$video.play();\n                this._setVideoMirror(facingMode);\n\n                // Restart the flash if it was previously on\n                if (this._flashOn) {\n                    this._flashOn = false; // force turnFlashOn to restart the flash\n                    this.turnFlashOn().catch(() => {});\n                }\n            })\n            .catch(e => {\n                this._active = false;\n                throw e;\n            });\n    }\n\n    stop() {\n        this.pause();\n        this._active = false;\n    }\n\n    /* async */\n    pause(stopStreamImmediately = false) {\n        this._paused = true;\n        if (!this._active) {\n            return Promise.resolve(true);\n        }\n        this.$video.pause();\n\n        const stopStream = () => {\n            const tracks = this.$video.srcObject ? this.$video.srcObject.getTracks() : [];\n            for (const track of tracks) {\n                track.stop(); //  note that this will also automatically turn the flashlight off\n                this.$video.srcObject.removeTrack(track);\n            }\n            this.$video.srcObject = null;\n        };\n\n        if (stopStreamImmediately) {\n            stopStream();\n            return Promise.resolve(true);\n        }\n\n        return new Promise((resolve) => setTimeout(resolve, 300))\n            .then(() => {\n                if (!this._paused) return false;\n                stopStream();\n                return true;\n            });\n    }\n\n    /* async */\n    setCamera(facingModeOrDeviceId) {\n        if (facingModeOrDeviceId === this._preferredCamera) return Promise.resolve();\n        this._preferredCamera = facingModeOrDeviceId;\n        // Restart the scanner with the new camera which will also update the video mirror and the scan region.\n        return this._restartVideoStream();\n    }\n\n    /* async */\n    static scanImage(imageOrFileOrUrl, scanRegion=null, qrEngine=null, canvas=null, disallowCanvasResizing=false,\n                     alsoTryWithoutScanRegion=false) {\n        const gotExternalWorker = qrEngine instanceof Worker;\n\n        let promise = Promise.all([\n            qrEngine || QrScanner.createQrEngine(),\n            QrScanner._loadImage(imageOrFileOrUrl),\n        ]).then(([engine, image]) => {\n            qrEngine = engine;\n            let canvasContext;\n            [canvas, canvasContext] = this._drawToCanvas(image, scanRegion, canvas, disallowCanvasResizing);\n\n            if (qrEngine instanceof Worker) {\n                if (!gotExternalWorker) {\n                    // Enable scanning of inverted color qr codes. Not using _postWorkerMessage as it's async\n                    qrEngine.postMessage({ type: 'inversionMode', data: 'both' });\n                }\n                return new Promise((resolve, reject) => {\n                    let timeout, onMessage, onError;\n                    onMessage = event => {\n                        if (event.data.type !== 'qrResult') {\n                            return;\n                        }\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        if (event.data.data !== null) {\n                            resolve(event.data.data);\n                        } else {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        }\n                    };\n                    onError = (e) => {\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        const errorMessage = !e ? 'Unknown Error' : (e.message || e);\n                        reject('Scanner error: ' + errorMessage);\n                    };\n                    qrEngine.addEventListener('message', onMessage);\n                    qrEngine.addEventListener('error', onError);\n                    timeout = setTimeout(() => onError('timeout'), 10000);\n                    const imageData = canvasContext.getImageData(0, 0, canvas.width, canvas.height);\n                    qrEngine.postMessage({\n                        type: 'decode',\n                        data: imageData\n                    }, [imageData.data.buffer]);\n                });\n            } else {\n                return new Promise((resolve, reject) => {\n                    const timeout = setTimeout(() => reject('Scanner error: timeout'), 10000);\n                    qrEngine.detect(canvas).then(scanResults => {\n                        if (!scanResults.length) {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        } else {\n                            resolve(scanResults[0].rawValue);\n                        }\n                    }).catch((e) => reject('Scanner error: ' + (e.message || e))).finally(() => clearTimeout(timeout));\n                });\n            }\n        });\n\n        if (scanRegion && alsoTryWithoutScanRegion) {\n            promise = promise.catch(() =>\n                QrScanner.scanImage(imageOrFileOrUrl, null, qrEngine, canvas, disallowCanvasResizing));\n        }\n\n        promise = promise.finally(() => {\n            if (gotExternalWorker) return;\n            QrScanner._postWorkerMessage(qrEngine, 'close');\n        });\n\n        return promise;\n    }\n\n    setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations work also\n        // well with colored qr codes.\n        QrScanner._postWorkerMessage(\n            this._qrEnginePromise,\n            'grayscaleWeights',\n            { red, green, blue, useIntegerApproximation }\n        );\n    }\n\n    setInversionMode(inversionMode) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations scan normal\n        // and inverted qr codes by default\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'inversionMode', inversionMode);\n    }\n\n    /* async */\n    static createQrEngine(workerPath = QrScanner.WORKER_PATH) {\n        return ('BarcodeDetector' in window && BarcodeDetector.getSupportedFormats\n            ? BarcodeDetector.getSupportedFormats()\n            : Promise.resolve([])\n        )\n            .then((supportedFormats) => supportedFormats.indexOf('qr_code') !== -1\n                ? new BarcodeDetector({ formats: ['qr_code'] })\n                : new Worker(workerPath)\n            );\n    }\n\n    _onPlay() {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n        this._scanFrame();\n    }\n\n    _onLoadedMetaData() {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n    }\n\n    _onVisibilityChange() {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    _calculateScanRegion(video) {\n        // Default scan region calculation. Note that this can be overwritten in the constructor.\n        const smallestDimension = Math.min(video.videoWidth, video.videoHeight);\n        const scanRegionSize = Math.round(2 / 3 * smallestDimension);\n        return {\n            x: Math.round((video.videoWidth - scanRegionSize) / 2),\n            y: Math.round((video.videoHeight - scanRegionSize) / 2),\n            width: scanRegionSize,\n            height: scanRegionSize,\n            downScaledWidth: this._legacyCanvasSize,\n            downScaledHeight: this._legacyCanvasSize,\n        };\n    }\n\n    _scanFrame() {\n        if (!this._active || this.$video.paused || this.$video.ended) return false;\n        // using requestAnimationFrame to avoid scanning if tab is in background\n        requestAnimationFrame(() => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n            this._qrEnginePromise\n                .then((qrEngine) => QrScanner.scanImage(this.$video, this._scanRegion, qrEngine, this.$canvas))\n                .then(this._onDecode, (error) => {\n                    if (!this._active) return;\n                    const errorMessage = error.message || error;\n                    if (errorMessage.indexOf('service unavailable') !== -1) {\n                        // When the native BarcodeDetector crashed, create a new one\n                        this._qrEnginePromise = QrScanner.createQrEngine();\n                    }\n                    this._onDecodeError(error);\n                })\n                .then(() => this._scanFrame());\n        });\n    }\n\n    _onDecodeError(error) {\n        // default error handler; can be overwritten in the constructor\n        if (error === QrScanner.NO_QR_CODE_FOUND) return;\n        console.log(error);\n    }\n\n    /* async */\n    _getCameraStream() {\n        if (!navigator.mediaDevices) {\n            return Promise.reject('Camera not found.');\n        }\n\n        const preferenceType = this._preferredCamera === 'environment' || this._preferredCamera === 'user'\n            ? 'facingMode'\n            : 'deviceId';\n        const constraintsWithoutCamera = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n        const constraintsWithCamera = constraintsWithoutCamera.map((constraint) => Object.assign({}, constraint, {\n            [preferenceType]: { exact: this._preferredCamera },\n        }));\n\n        // First try constraints with camera, then without camera. Using reduceRight as the Promise is build in a\n        // bottom up fashion.\n        return [...constraintsWithCamera, ...constraintsWithoutCamera].reduceRight((fallback, constraint) =>\n            () => navigator.mediaDevices.getUserMedia({ video: constraint, audio: false })\n                .then((stream) => ({\n                    stream,\n                    // Try to determine the facing mode from the stream, otherwise use a guess or 'environment' as\n                    // default. Note that the guess is not always accurate as Safari returns cameras of different facing\n                    // mode, even for exact facingMode constraints.\n                    facingMode: this._getFacingMode(stream)\n                        || (constraint.facingMode\n                            ? this._preferredCamera // _preferredCamera is a facing mode and we are able to fulfill it\n                            : (this._preferredCamera === 'environment'\n                                ? 'user' // switch as _preferredCamera was environment but we are not able to fulfill it\n                                : 'environment' // switch from unfulfilled user facingMode or default to environment\n                            )\n                        ),\n                }))\n                .catch(fallback),\n            () => Promise.reject('Camera not found.')\n        )();\n    }\n\n    /* async */\n    _restartVideoStream() {\n        // Note that we always pause the stream and not only if !this._paused as even if this._paused === true, the\n        // stream might still be running, as it's by default only stopped after a delay of 300ms.\n        const wasPaused = this._paused;\n        return this.pause(true).then((paused) => {\n            if (!paused || wasPaused || !this._active) return;\n            return this.start();\n        });\n    }\n\n    _setVideoMirror(facingMode) {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode==='user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    _getFacingMode(videoStream) {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return null; // unknown\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /rear|back|environment/i.test(videoTrack.label)\n            ? 'environment'\n            : /front|user|face/i.test(videoTrack.label)\n                ? 'user'\n                : null; // unknown\n    }\n\n    static _drawToCanvas(image, scanRegion=null, canvas=null, disallowCanvasResizing=false) {\n        canvas = canvas || document.createElement('canvas');\n        const scanRegionX = scanRegion && scanRegion.x? scanRegion.x : 0;\n        const scanRegionY = scanRegion && scanRegion.y? scanRegion.y : 0;\n        const scanRegionWidth = scanRegion && scanRegion.width? scanRegion.width : image.width || image.videoWidth;\n        const scanRegionHeight = scanRegion && scanRegion.height? scanRegion.height : image.height || image.videoHeight;\n\n        if (!disallowCanvasResizing) {\n            const canvasWidth = scanRegion && scanRegion.downScaledWidth\n                ? scanRegion.downScaledWidth\n                : scanRegionWidth;\n            const canvasHeight = scanRegion && scanRegion.downScaledHeight\n                ? scanRegion.downScaledHeight\n                : scanRegionHeight;\n            // Setting the canvas width or height clears the canvas, even if the values didn't change, therefore only\n            // set them if they actually changed.\n            if (canvas.width !== canvasWidth) {\n                canvas.width = canvasWidth;\n            }\n            if (canvas.height !== canvasHeight) {\n                canvas.height = canvasHeight;\n            }\n        }\n\n        const context = canvas.getContext('2d', { alpha: false });\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(\n            image,\n            scanRegionX, scanRegionY, scanRegionWidth, scanRegionHeight,\n            0, 0, canvas.width, canvas.height\n        );\n        return [canvas, context];\n    }\n\n    /* async */\n    static _loadImage(imageOrFileOrBlobOrUrl) {\n        if (imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement || imageOrFileOrBlobOrUrl instanceof HTMLVideoElement\n            || window.ImageBitmap && imageOrFileOrBlobOrUrl instanceof window.ImageBitmap\n            || window.OffscreenCanvas && imageOrFileOrBlobOrUrl instanceof window.OffscreenCanvas) {\n            return Promise.resolve(imageOrFileOrBlobOrUrl);\n        } else if (imageOrFileOrBlobOrUrl instanceof Image) {\n            return QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl).then(() => imageOrFileOrBlobOrUrl);\n        } else if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob\n            || imageOrFileOrBlobOrUrl instanceof URL || typeof(imageOrFileOrBlobOrUrl)==='string') {\n            const image = new Image();\n            if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n            } else {\n                image.src = imageOrFileOrBlobOrUrl;\n            }\n            return QrScanner._awaitImageLoad(image).then(() => {\n                if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                    URL.revokeObjectURL(image.src);\n                }\n                return image;\n            });\n        } else {\n            return Promise.reject('Unsupported image type.');\n        }\n    }\n\n    /* async */\n    static _awaitImageLoad(image) {\n        return new Promise((resolve, reject) => {\n            if (image.complete && image.naturalWidth!==0) {\n                // already loaded\n                resolve();\n            } else {\n                let onLoad, onError;\n                onLoad = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    resolve();\n                };\n                onError = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    reject('Image load error');\n                };\n                image.addEventListener('load', onLoad);\n                image.addEventListener('error', onError);\n            }\n        });\n    }\n\n    /* async */\n    static _postWorkerMessage(qrEngineOrQrEnginePromise, type, data) {\n        return Promise.resolve(qrEngineOrQrEnginePromise).then((qrEngine) => {\n            if (!(qrEngine instanceof Worker)) return;\n            qrEngine.postMessage({ type, data });\n        });\n    }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.NO_QR_CODE_FOUND = 'No QR code found';\nQrScanner.WORKER_PATH = 'qr-scanner-worker.min.js';\n","import {\n    Component,\n    ElementRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport QrScanner from 'qr-scanner';\n\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-qr-scan]',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center\"\n        >\n            <p class=\"mt-6 mb-4\">\n                Please enter your email address or scan your QR code\n            </p>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    [(ngModel)]=\"email\"\n                    placeholder=\"Enter email...\"\n                    type=\"email\"\n                    autocomplete=\"off\"\n                    (blur)=\"checkEmail(email)\"\n                    (keyup.enter)=\"checkEmail(email)\"\n                />\n                <mat-error>Invalid email format</mat-error>\n            </mat-form-field>\n            <video\n                #video\n                class=\"rounded m-4 bg-gray-200 border border-gray-500\"\n                id=\"qr-stream\"\n                playsinline\n                width=\"640\"\n                height=\"480\"\n                autoplay\n            ></video>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                height: 100%;\n                width: 100%;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            video {\n                width: 36rem;\n                height: 27rem;\n            }\n\n            mat-form-field {\n                width: 36rem;\n            }\n\n            a {\n                position: absolute;\n            }\n        `,\n    ],\n})\nexport class CheckinQRScanComponent implements OnInit, OnDestroy {\n    /** Email address of the visitor */\n    public email: string;\n    /** Video element to emit camera feed */\n    @ViewChild('video', { static: true })\n    private _video_el: ElementRef<HTMLVideoElement>;\n    /** QR Reader */\n    private _reader;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this.setupQRReader();\n    }\n\n    public ngOnDestroy() {\n        if (this._video_el.nativeElement.srcObject) {\n            (this._video_el.nativeElement.srcObject as any)\n                .getTracks()\n                .forEach((track) => track?.stop());\n        }\n        this._reader?.stop();\n    }\n\n    public async checkQRCode(raw_text: string) {\n        const chunks = raw_text.split(',');\n        if (chunks.length !== 2) {\n            notifyError('Invalid QRCode');\n            this.setupQRReader();\n            return;\n        } else {\n            await this._checkin\n                .loadGuestAndEvent(chunks[0], chunks[1])\n                .catch((err) => {\n                    this.handleError(err.message || err);\n                    throw err;\n                });\n            this._router.navigate(['/checkin', 'details']);\n        }\n    }\n\n    public async checkEmail(email: string) {\n        if (!email || !email.includes('@') || email.length < 5) return;\n        await this._checkin.loadGuestAndEvent(email).catch((err) => {\n            this.handleError(err.message || err);\n            throw err;\n        });\n        this._router.navigate(['/checkin', 'details']);\n    }\n\n    private setupQRReader() {\n        if (navigator.mediaDevices?.getUserMedia) {\n            navigator.mediaDevices\n                .getUserMedia({ video: true })\n                .then(\n                    (stream) =>\n                        (this._video_el.nativeElement.srcObject = stream)\n                )\n                .catch((e) =>\n                    console.error('Unable to fetch media devices!', e)\n                );\n        }\n        if (!QrScanner) return;\n        this._reader = new QrScanner(this._video_el.nativeElement, (r) =>\n            this.checkQRCode(r)\n        );\n        this._reader.start();\n    }\n\n    private handleError(message: any) {\n        console.error(message);\n        this._checkin.setError(message?.statusText || message);\n        this._router.navigate(['/checkin', 'error']);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-results',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto space-y-4\"\n            *ngIf=\"event | async\"\n        >\n            <h3 class=\"text-xl\">You are checked in!</h3>\n            <p class=\"text-center\">\n                Welcome, you have a meeting at\n                {{ (event | async)?.date || '' | date: 'shortDate' }}\n                with {{ (event | async).organiser?.name || '' }}.<br />\n                {{ (event | async).organiser?.name || '' }} has been notified\n                and will be with you shortly.&nbsp;\n            </p>\n            <p *ngIf=\"!(event | async)?.can_access_lift\">\n                Please wait in the lobby.\n            </p>\n            <p *ngIf=\"(event | async)?.can_access_lift\">\n                Please use the vistor access lift over there.\n            </p>\n            <a\n                button\n                mat-button\n                class=\"w-32\"\n                [routerLink]=\"['/checkin', 'preferences']\"\n            >\n                Done\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinResultsComponent implements OnInit {\n    public readonly event = this._checkin.event;\n    public readonly guest = this._checkin.guest;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        this.event.pipe(first()).subscribe((_) => (!_ ? this.previous() : ''));\n    }\n\n    public previous(): void {\n        this._router.navigate(['/checkin']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-error',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto p-4\"\n        >\n            <h3 class=\"text-2xl mb-4\">Please see reception.</h3>\n            <p class=\"mb-2\" *ngIf=\"error | async\">{{ error | async }}</p>\n            <p class=\"mb-4\">Our staff at reception will assist you.</p>\n            <a button mat-button class=\"w-32\" [routerLink]=\"['/welcome']\">\n                Back\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 28rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinErrorComponent {\n    public readonly error = this._checkin.error;\n\n    constructor(private _checkin: CheckinStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-covid]',\n    template: `\n        <div class=\"bg-white rounded p-4 relative overflow-y-auto overflow-x-hidden\">\n            <h3 class=\"text-xl font-medium mb-4\">COVID Disclaimer</h3>\n            <ol class=\"list-decimal list-inside\">\n                <li>\n                    Do you have any of the following symptoms?<br /><br />\n                    <ul class=\"list-disc list-inside px-4 mb-4\">\n                        <li>Fever</li>\n                        <li>Cough</li>\n                        <li>Shortness of breath</li>\n                        <li>Chills</li>\n                        <li>Body aches</li>\n                        <li>Sore or scratchy throat</li>\n                        <li>Headache</li>\n                        <li>Runny nose</li>\n                        <li>Muscle pain</li>\n                        <li>Vomitting</li>\n                        <li>Nausea</li>\n                        <li>Diarrhoa</li>\n                        <li>Loss of taste or smell</li>\n                    </ul>\n                    <mat-radio-group\n                        aria-label=\"Has Symptoms\"\n                        [(ngModel)]=\"symptoms\"\n                    >\n                        <mat-radio-button value=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button value=\"false\" class=\"ml-4\"\n                            >No</mat-radio-button\n                        >\n                    </mat-radio-group>\n                </li>\n                <hr class=\"my-4\" />\n                <li>\n                    Have you been in contact with a COVID-19 case in the last 14\n                    days or been asked to self-isolate by a health offical?<br /><br />\n                    <mat-radio-group\n                        aria-label=\"COVID contact or self-isolated\"\n                        [(ngModel)]=\"contact\"\n                    >\n                        <mat-radio-button value=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button value=\"false\" class=\"ml-4\"\n                            >No</mat-radio-button\n                        >\n                    </mat-radio-group>\n                </li>\n            </ol>\n            <button mat-button (click)=\"confirm()\">Confirm</button>\n            <a\n                mat-icon-button\n                [disabled]=\"!symptoms && !contact\"\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n                max-height: calc(100% - 2rem);\n            }\n\n            .absolute {\n                position: absolute;\n            }\n\n            button {\n                margin: 1rem 11rem 0;\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class CheckinCovidComponent {\n    public contact: string;\n    public symptoms: string;\n\n    constructor(\n        private _router: Router,\n        private _checkin: CheckinStateService\n    ) {}\n\n    public confirm() {\n        if (!this.symptoms || !this.contact)\n            return notifyError('Please select yes or no for each question');\n        this._checkin.updateGuest({\n            covid: this.contact === 'true',\n            symptoms: this.symptoms === 'true',\n        });\n        if (this.symptoms === 'false' && this.contact === 'false') {\n            this._router.navigate(['/checkin', 'results']);\n        } else {\n            this._checkin.setError('Please get tested for COVID-19 and self-isolate at home for 14 days');\n            this._router.navigate(['/checkin', 'error']);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nimport { CheckinDetailsComponent } from './checkin-details.component';\nimport { CheckinPhotoComponent } from './checkin-photo.component';\nimport { CheckinPreferencesComponent } from './checkin-preferences.component';\nimport { CheckinQRScanComponent } from './checkin-qr-scan.component';\nimport { CheckinResultsComponent } from './checkin-result.component';\nimport { CheckinErrorComponent } from './checkin-error.component';\nimport { CheckinCovidComponent } from './checkin-covid.component';\nimport { CheckinComponent } from './checkin.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: CheckinComponent,\n        children: [\n            { path: 'scan', component: CheckinQRScanComponent },\n            { path: 'details', component: CheckinDetailsComponent },\n            { path: 'preferences', component: CheckinPreferencesComponent },\n            { path: 'photo', component: CheckinPhotoComponent },\n            { path: 'results', component: CheckinResultsComponent },\n            { path: 'error', component: CheckinErrorComponent },\n            { path: 'covid', component: CheckinCovidComponent },\n            { path: '**', redirectTo: 'scan' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CheckinComponent,\n        CheckinResultsComponent,\n        CheckinQRScanComponent,\n        CheckinPreferencesComponent,\n        CheckinPhotoComponent,\n        CheckinDetailsComponent,\n        CheckinErrorComponent,\n        CheckinCovidComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedComponentsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorCheckinModule {}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-checkin]',\n    template: `\n        <a-topbar-header class=\"w-full\"></a-topbar-header>\n        <div\n            class=\"flex-1 w-full bg-center bg-cover relative\"\n            [style.background-image]=\"'url(' + background + ')'\"\n        >\n            <router-outlet></router-outlet>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CheckinComponent {\n    public get background() {\n        return this._settings.get('app.home.background');\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n"],"sourceRoot":"webpack:///"}