{"version":3,"sources":["./apps/visitor-kiosk/src/app/checkin/checkin-state.service.ts","./apps/visitor-kiosk/src/app/checkin/checkin-details.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-group.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-photo.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-preferences.component.ts","./node_modules/qr-scanner/src/qr-scanner.js","./apps/visitor-kiosk/src/app/checkin/checkin-qr-scan.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-result.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-error.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin-covid.component.ts","./apps/visitor-kiosk/src/app/checkin/checkin.module.ts","./apps/visitor-kiosk/src/app/checkin/checkin.component.ts"],"names":["CheckinStateService","_event","BehaviorSubject","_guest","_photo","_error","_form","event","this","asObservable","guest","error","form","next","data","message","email","event_id","toPromise","host","upcoming","today","Date","todays_events","filter","isSameDay","date","sort","a","b","length","Error","getValue","name","details","value","id","system_id","system","resources","Promise","res","setTimeout","err","reject","CheckinDetailsComponent","_checkin","_router","loading","pipe","first","subscribe","_","previous","updateGuest","checkinGuest","navigate","CheckinGroupComponent","CheckinPhotoComponent","setPhoto","printPass","catch","e","CheckinPreferencesComponent","QrScanner","navigator","mediaDevices","enumerateDevices","then","devices","some","device","kind","resolve","video","onDecode","canvasSizeOrOnDecodeError","_onDecodeError","bind","canvasSize","DEFAULT_CANVAS_SIZE","preferredFacingMode","$video","$canvas","document","createElement","_onDecode","_preferredFacingMode","_active","_paused","_flashOn","console","warn","width","height","_sourceRect","x","y","_updateSourceRect","_onPlay","_onVisibilityChange","playsInline","muted","disablePictureInPicture","addEventListener","_qrEnginePromise","createQrEngine","window","track","srcObject","getVideoTracks","ImageCapture","getPhotoCapabilities","result","fillLightMode","includes","_setFlash","removeEventListener","stop","_postWorkerMessage","location","protocol","hidden","clearTimeout","_offTimeout","play","facingMode","_getCameraStream","stream","_getFacingMode","_setVideoMirror","pause","tracks","getTracks","imageOrFileOrUrl","sourceRect","qrEngine","canvas","fixedCanvasSize","alsoTryWithoutSourceRect","gotExternalWorker","Worker","promise","all","_loadImage","engine","image","canvasContext","_drawToCanvas","postMessage","type","timeout","onMessage","onError","NO_QR_CODE_FOUND","imageData","getImageData","buffer","detect","scanResults","rawValue","finally","scanImage","red","green","blue","useIntegerApproximation","inversionMode","workerPath","WORKER_PATH","BarcodeDetector","getSupportedFormats","supportedFormats","indexOf","formats","_scanFrame","start","smallestDimension","Math","min","videoWidth","videoHeight","sourceRectSize","round","paused","ended","requestAnimationFrame","readyState","log","exact","constraintsToTry","forEach","constraint","_getMatchingCameraStream","getUserMedia","shift","on","hasFlash","applyConstraints","advanced","torch","style","transform","videoStream","videoTrack","test","label","sourceRectX","sourceRectY","sourceRectWidth","sourceRectHeight","context","getContext","alpha","imageSmoothingEnabled","drawImage","imageOrFileOrBlobOrUrl","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","Blob","URL","src","createObjectURL","revokeObjectURL","complete","naturalWidth","onLoad","qrEngineOrQrEnginePromise","CheckinQRScanComponent","setupQRReader","_video_el","nativeElement","_reader","raw_text","chunks","split","loadGuestAndEvent","handleError","r","checkQRCode","setError","checkEmail","CheckinResultsComponent","CheckinErrorComponent","CheckinCovidComponent","symptoms","contact","covid","confirm","ROUTES","path","component","CheckinComponent","_settings","get","children","redirectTo","VisitorCheckinModule"],"mappings":"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","file":"apps_visitor-kiosk_src_app_checkin_checkin_module_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { HashMap, notifyError } from '@placeos/common';\nimport {\n    CalendarEvent,\n    checkinEventGuest,\n    showEvent,\n} from '@placeos/events';\nimport {\n    GuestUser,\n    generateGuestForm,\n    showGuest,\n    listGuestMeetings,\n} from '@placeos/users';\nimport { isSameDay } from 'date-fns';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CheckinStateService {\n    /** Current event being checked in */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    /** Current guest being checked in */\n    private _guest = new BehaviorSubject<GuestUser>(null);\n    /** Photo of the current guest */\n    private _photo = new BehaviorSubject<string>('');\n    /** Photo of the current guest */\n    private _error = new BehaviorSubject<string>('');\n    /** Form for the current guest details */\n    private _form = new BehaviorSubject<FormGroup>(null);\n\n    public readonly event = this._event.asObservable();\n    public readonly guest = this._guest.asObservable();\n    public readonly error = this._error.asObservable();\n    public readonly form = this._form.asObservable();\n\n    public clear() {\n        this._guest.next(null);\n        this._event.next(null);\n        this._photo.next(null);\n    }\n\n    public setPhoto(data: string) {\n        this._photo.next(data);\n    }\n\n    public setError(message: string) {\n        this._error.next(message);\n    }\n\n    /** Load gie */\n    public async loadGuestAndEvent(email: string, event_id?: string) {\n        const guest = await showGuest(email).toPromise();\n        if (event_id) {\n            const event = await showEvent(event_id).toPromise();\n            this._guest.next(guest);\n            this._event.next(event);\n            this._form.next(generateGuestForm(guest, event.host));\n            return { guest, event };\n        }\n        const upcoming = await listGuestMeetings(email).toPromise();\n        const today = new Date();\n        const todays_events = upcoming.filter((event) =>\n            isSameDay(new Date(event.date), today)\n        );\n        todays_events.sort((a, b) => a.date - b.date);\n        if (todays_events.length <= 0) {\n            throw new Error(`No meetings for with guest \"${email}\" today`);\n        }\n        this._guest.next(guest);\n        this._event.next(todays_events[0]);\n        this._form.next(generateGuestForm(guest, todays_events[0].host));\n        return { guest, event: todays_events[0] };\n    }\n\n    public async updateGuest(data?: HashMap) {\n        const guest = this._guest.getValue();\n        const form = this._form.getValue();\n        if (!guest || !form) return;\n        await updateMetadata(guest.email, {\n            name: 'preferences',\n            details: { ...guest, ...form.value, ...(data || {}) },\n        });\n    }\n\n    public async checkinGuest() {\n        const guest = this._guest.getValue();\n        const event = this._event.getValue();\n        if (!guest || !event) return;\n        await checkinEventGuest(event.id, guest.email, true, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        });\n    }\n\n    public printPass() {\n        try {\n            // TODO: actually trigger print visitor pass\n            return new Promise((res) => setTimeout(() => res(''), 5000));\n        } catch (err) {\n            notifyError('Error printing visitor pass');\n        }\n        return Promise.reject();\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-details]',\n    template: `\n        <form\n            *ngIf=\"(form | async) && !loading; else load_state\"\n            [formGroup]=\"form | async\"\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto\"\n        >\n            <h3 class=\"text-2xl m-4\">Confirm Details</h3>\n            <div field class=\"flex flex-col\">\n                <label form=\"host\">Host</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"host\"\n                        formControlName=\"host\"\n                        placeholder=\"Host's Email Address\"\n                    />\n                    <mat-error>\n                        The email address of your host is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"name\">Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        formControlName=\"name\"\n                        placeholder=\"Full Name\"\n                    />\n                    <mat-error>Please enter your full name</mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Email</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        formControlName=\"email\"\n                        placeholder=\"Email Address\"\n                    />\n                    <mat-error>A valid email address is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Phone Number</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        formControlName=\"phone\"\n                        placeholder=\"Phone Number\"\n                    />\n                </mat-form-field>\n            </div>\n            <div field class=\"flex flex-col\">\n                <label form=\"email\">Organisation / Company</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        formControlName=\"phone\"\n                        placeholder=\"Organisation / Company\"\n                    />\n                </mat-form-field>\n            </div>\n            <button mat-button (click)=\"updateGuest()\">Next</button>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </form>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center m-auto\">\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <div class=\"my-4 text-lg text-white\">\n                    Updating data and checking in...\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            form {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            [field] {\n                width: calc(100% - 2rem);\n            }\n\n            .absolute {\n                position: absolute;\n            }\n\n            button {\n                margin-bottom: 1rem;\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class CheckinDetailsComponent {\n    public readonly form = this._checkin.form;\n\n    public loading = false;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        this.form.pipe(first()).subscribe((_) => (!_ ? this.previous() : ''));\n    }\n\n    public async updateGuest() {\n        this.loading = true;\n        await this._checkin.updateGuest();\n        await this._checkin.checkinGuest();\n        this.loading = false;\n        this._router.navigate(['/checkin', 'covid']);\n    }\n\n    public previous() {\n        this._router.navigate(['/checkin', 'scan']);\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'checkin-group',\n    template: `\n\n    `,\n    styles: [`\n\n    `]\n})\nexport class CheckinGroupComponent {\n\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-photo',\n    template: `\n        <div class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center p-4\" *ngIf=\"!loading; else load_state\">\n            <h3 class=\"text-xl mb-4\">Take a photo to continue</h3>\n            <a-take-photo (photoAccepted)=\"handlePhoto($event)\"></a-take-photo>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center m-auto\">\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <div class=\"my-4 text-lg text-white\">\n                    Printing guest pass...\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n        }\n\n        .absolute {\n            position: absolute;\n        }\n    `]\n})\nexport class CheckinPhotoComponent {\n    /** Whether guest pass is being loaded */\n    public loading: boolean;\n\n    constructor(private _checkin: CheckinStateService, private _router: Router) { }\n\n    public async handlePhoto(event: any) {\n        if (!event) {\n            return notifyError('Error saving image, please try again');\n        }\n        this.loading = true;\n        this._checkin.setPhoto(event);\n        await this._checkin.printPass().catch((e) => {\n            this.loading = false;\n            notifyError(e);\n            throw e;\n        });\n        this.loading = false;\n        this._router.navigate(['/checkin', 'results']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'checkin-preferences',\n    template: `\n        <div class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto\">\n            <h3 class=\"text-xl\">Would you like a drink?</h3>\n            <form *ngIf=\"form\" [formGroup]=\"form\">\n\n            </form>\n            <button mat-button (click)=\"next()\">Update</button>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            .absolute {\n                position: absolute;\n            }\n        `,\n    ],\n})\nexport class CheckinPreferencesComponent {\n\n    public form: FormGroup;\n\n    constructor(private _router: Router) {}\n\n    public next() {\n        this._router.navigate(['/welcome']);\n    }\n}\n","export default class QrScanner {\n    /* async */\n    static hasCamera() {\n        if (!navigator.mediaDevices) return Promise.resolve(false);\n        // note that enumerateDevices can always be called and does not prompt the user for permission. However, device\n        // labels are only readable if served via https and an active media stream exists or permanent permission is\n        // given. That doesn't matter for us though as we don't require labels.\n        return navigator.mediaDevices.enumerateDevices()\n            .then(devices => devices.some(device => device.kind === 'videoinput'))\n            .catch(() => false);\n    }\n\n    constructor(\n        video,\n        onDecode,\n        canvasSizeOrOnDecodeError = this._onDecodeError.bind(this),\n        canvasSize = QrScanner.DEFAULT_CANVAS_SIZE,\n        preferredFacingMode = 'environment'\n    ) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n        this._onDecode = onDecode;\n        this._preferredFacingMode = preferredFacingMode;\n        this._active = false;\n        this._paused = false;\n        this._flashOn = false;\n\n        if (typeof canvasSizeOrOnDecodeError === 'number') {\n            // legacy function signature where canvas size is the third argument\n            canvasSize = canvasSizeOrOnDecodeError;\n            console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                + 'the future');\n        } else {\n            this._onDecodeError = canvasSizeOrOnDecodeError;\n        }\n\n        this.$canvas.width = canvasSize;\n        this.$canvas.height = canvasSize;\n        this._sourceRect = {\n            x: 0,\n            y: 0,\n            width: canvasSize,\n            height: canvasSize\n        };\n\n        this._updateSourceRect = this._updateSourceRect.bind(this);\n        this._onPlay = this._onPlay.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        this.$video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        this.$video.muted = true;\n        this.$video.disablePictureInPicture = true;\n        this.$video.addEventListener('loadedmetadata', this._updateSourceRect);\n        this.$video.addEventListener('play', this._onPlay);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n\n        this._qrEnginePromise = QrScanner.createQrEngine();\n    }\n\n    /* async */\n    hasFlash() {\n        if (!('ImageCapture' in window)) {\n            return Promise.resolve(false);\n        }\n\n        const track = this.$video.srcObject ? this.$video.srcObject.getVideoTracks()[0] : null;\n        if (!track) {\n            return Promise.reject('Camera not started or not available');\n        }\n\n        const imageCapture = new ImageCapture(track);\n        return imageCapture.getPhotoCapabilities()\n            .then((result) => {\n                return result.fillLightMode.includes('flash');\n            })\n            .catch((error) => {\n                console.warn(error);\n                return false;\n            });\n    }\n\n    isFlashOn() {\n      return this._flashOn;\n    }\n\n    /* async */\n    toggleFlash() {\n      return this._setFlash(!this._flashOn);\n    }\n\n    /* async */\n    turnFlashOff() {\n      return this._setFlash(false);\n    }\n\n    /* async */\n    turnFlashOn() {\n      return this._setFlash(true);\n    }\n\n    destroy() {\n        this.$video.removeEventListener('loadedmetadata', this._updateSourceRect);\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n\n        this.stop();\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'close');\n    }\n\n    /* async */\n    start() {\n        if (this._active && !this._paused) {\n            return Promise.resolve();\n        }\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n        this._active = true;\n        this._paused = false;\n        if (document.hidden) {\n            // camera will be started as soon as tab is in foreground\n            return Promise.resolve();\n        }\n        clearTimeout(this._offTimeout);\n        this._offTimeout = null;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            this.$video.play();\n            return Promise.resolve();\n        }\n\n        let facingMode = this._preferredFacingMode;\n        return this._getCameraStream(facingMode, true)\n            .catch(() => {\n                // We (probably) don't have a camera of the requested facing mode\n                facingMode = facingMode === 'environment' ? 'user' : 'environment';\n                return this._getCameraStream(); // throws if camera is not accessible (e.g. due to not https)\n            })\n            .then(stream => {\n                // Try to determine the facing mode from the stream, otherwise use our guess. Note that the guess is not\n                // always accurate as Safari returns cameras of different facing mode, even for exact constraints.\n                facingMode = this._getFacingMode(stream) || facingMode;\n                this.$video.srcObject = stream;\n                this.$video.play();\n                this._setVideoMirror(facingMode);\n            })\n            .catch(e => {\n                this._active = false;\n                throw e;\n            });\n    }\n\n    stop() {\n        this.pause();\n        this._active = false;\n    }\n\n    pause() {\n        this._paused = true;\n        if (!this._active) {\n            return;\n        }\n        this.$video.pause();\n        if (this._offTimeout) {\n            return;\n        }\n        this._offTimeout = setTimeout(() => {\n            const tracks = this.$video.srcObject ? this.$video.srcObject.getTracks() : [];\n            for (const track of tracks) {\n                track.stop(); //  note that this will also automatically turn the flashlight off\n            }\n            this.$video.srcObject = null;\n            this._offTimeout = null;\n        }, 300);\n    }\n\n    /* async */\n    static scanImage(imageOrFileOrUrl, sourceRect=null, qrEngine=null, canvas=null, fixedCanvasSize=false,\n                     alsoTryWithoutSourceRect=false) {\n        const gotExternalWorker = qrEngine instanceof Worker;\n\n        let promise = Promise.all([\n            qrEngine || QrScanner.createQrEngine(),\n            QrScanner._loadImage(imageOrFileOrUrl),\n        ]).then(([engine, image]) => {\n            qrEngine = engine;\n            let canvasContext;\n            [canvas, canvasContext] = this._drawToCanvas(image, sourceRect, canvas, fixedCanvasSize);\n\n            if (qrEngine instanceof Worker) {\n                if (!gotExternalWorker) {\n                    // Enable scanning of inverted color qr codes. Not using _postWorkerMessage as it's async\n                    qrEngine.postMessage({ type: 'inversionMode', data: 'both' });\n                }\n                return new Promise((resolve, reject) => {\n                    let timeout, onMessage, onError;\n                    onMessage = event => {\n                        if (event.data.type !== 'qrResult') {\n                            return;\n                        }\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        if (event.data.data !== null) {\n                            resolve(event.data.data);\n                        } else {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        }\n                    };\n                    onError = (e) => {\n                        qrEngine.removeEventListener('message', onMessage);\n                        qrEngine.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        const errorMessage = !e ? 'Unknown Error' : (e.message || e);\n                        reject('Scanner error: ' + errorMessage);\n                    };\n                    qrEngine.addEventListener('message', onMessage);\n                    qrEngine.addEventListener('error', onError);\n                    timeout = setTimeout(() => onError('timeout'), 10000);\n                    const imageData = canvasContext.getImageData(0, 0, canvas.width, canvas.height);\n                    qrEngine.postMessage({\n                        type: 'decode',\n                        data: imageData\n                    }, [imageData.data.buffer]);\n                });\n            } else {\n                return new Promise((resolve, reject) => {\n                    const timeout = setTimeout(() => reject('Scanner error: timeout'), 10000);\n                    qrEngine.detect(canvas).then(scanResults => {\n                        if (!scanResults.length) {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        } else {\n                            resolve(scanResults[0].rawValue);\n                        }\n                    }).catch((e) => reject('Scanner error: ' + (e.message || e))).finally(() => clearTimeout(timeout));\n                });\n            }\n        });\n\n        if (sourceRect && alsoTryWithoutSourceRect) {\n            promise = promise.catch(() => QrScanner.scanImage(imageOrFileOrUrl, null, qrEngine, canvas, fixedCanvasSize));\n        }\n\n        promise = promise.finally(() => {\n            if (gotExternalWorker) return;\n            QrScanner._postWorkerMessage(qrEngine, 'close');\n        });\n\n        return promise;\n    }\n\n    setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations work also\n        // well with colored qr codes.\n        QrScanner._postWorkerMessage(\n            this._qrEnginePromise,\n            'grayscaleWeights',\n            { red, green, blue, useIntegerApproximation }\n        );\n    }\n\n    setInversionMode(inversionMode) {\n        // Note that for the native BarcodeDecoder, this is a no-op. However, the native implementations scan normal\n        // and inverted qr codes by default\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'inversionMode', inversionMode);\n    }\n\n    /* async */\n    static createQrEngine(workerPath = QrScanner.WORKER_PATH) {\n        return ('BarcodeDetector' in window ? BarcodeDetector.getSupportedFormats() : Promise.resolve([]))\n            .then((supportedFormats) => supportedFormats.indexOf('qr_code') !== -1\n                ? new BarcodeDetector({ formats: ['qr_code'] })\n                : new Worker(workerPath)\n            );\n    }\n\n    _onPlay() {\n        this._updateSourceRect();\n        this._scanFrame();\n    }\n\n    _onVisibilityChange() {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    _updateSourceRect() {\n        const smallestDimension = Math.min(this.$video.videoWidth, this.$video.videoHeight);\n        const sourceRectSize = Math.round(2 / 3 * smallestDimension);\n        this._sourceRect.width = this._sourceRect.height = sourceRectSize;\n        this._sourceRect.x = (this.$video.videoWidth - sourceRectSize) / 2;\n        this._sourceRect.y = (this.$video.videoHeight - sourceRectSize) / 2;\n    }\n\n    _scanFrame() {\n        if (!this._active || this.$video.paused || this.$video.ended) return false;\n        // using requestAnimationFrame to avoid scanning if tab is in background\n        requestAnimationFrame(() => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n            this._qrEnginePromise\n                .then((qrEngine) => QrScanner.scanImage(this.$video, this._sourceRect, qrEngine, this.$canvas, true))\n                .then(this._onDecode, (error) => {\n                    if (!this._active) return;\n                    const errorMessage = error.message || error;\n                    if (errorMessage.indexOf('service unavailable') !== -1) {\n                        // When the native BarcodeDetector crashed, create a new one\n                        this._qrEnginePromise = QrScanner.createQrEngine();\n                    }\n                    this._onDecodeError(error);\n                })\n                .then(() => this._scanFrame());\n        });\n    }\n\n    _onDecodeError(error) {\n        // default error handler; can be overwritten in the constructor\n        if (error === QrScanner.NO_QR_CODE_FOUND) return;\n        console.log(error);\n    }\n\n    _getCameraStream(facingMode, exact = false) {\n        const constraintsToTry = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n\n        if (facingMode) {\n            if (exact) {\n                facingMode = { exact: facingMode };\n            }\n            constraintsToTry.forEach(constraint => constraint.facingMode = facingMode);\n        }\n        return this._getMatchingCameraStream(constraintsToTry);\n    }\n\n    _getMatchingCameraStream(constraintsToTry) {\n        if (!navigator.mediaDevices || constraintsToTry.length === 0) {\n            return Promise.reject('Camera not found.');\n        }\n        return navigator.mediaDevices.getUserMedia({\n            video: constraintsToTry.shift()\n        }).catch(() => this._getMatchingCameraStream(constraintsToTry));\n    }\n\n    /* async */\n    _setFlash(on) {\n        return this.hasFlash().then((hasFlash) => {\n            if (!hasFlash) return Promise.reject('No flash available');\n            // Note that the video track is guaranteed to exist at this point\n            return this.$video.srcObject.getVideoTracks()[0].applyConstraints({\n                advanced: [{ torch: on }],\n            });\n        }).then(() => this._flashOn = on);\n    }\n\n    _setVideoMirror(facingMode) {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode==='user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    _getFacingMode(videoStream) {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return null; // unknown\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /rear|back|environment/i.test(videoTrack.label)\n            ? 'environment'\n            : /front|user|face/i.test(videoTrack.label)\n                ? 'user'\n                : null; // unknown\n    }\n\n    static _drawToCanvas(image, sourceRect=null, canvas=null, fixedCanvasSize=false) {\n        canvas = canvas || document.createElement('canvas');\n        const sourceRectX = sourceRect && sourceRect.x? sourceRect.x : 0;\n        const sourceRectY = sourceRect && sourceRect.y? sourceRect.y : 0;\n        const sourceRectWidth = sourceRect && sourceRect.width? sourceRect.width : image.width || image.videoWidth;\n        const sourceRectHeight = sourceRect && sourceRect.height? sourceRect.height : image.height || image.videoHeight;\n        if (!fixedCanvasSize && (canvas.width !== sourceRectWidth || canvas.height !== sourceRectHeight)) {\n            canvas.width = sourceRectWidth;\n            canvas.height = sourceRectHeight;\n        }\n        const context = canvas.getContext('2d', { alpha: false });\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(image, sourceRectX, sourceRectY, sourceRectWidth, sourceRectHeight, 0, 0, canvas.width, canvas.height);\n        return [canvas, context];\n    }\n\n    /* async */\n    static _loadImage(imageOrFileOrBlobOrUrl) {\n        if (imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement || imageOrFileOrBlobOrUrl instanceof HTMLVideoElement\n            || window.ImageBitmap && imageOrFileOrBlobOrUrl instanceof window.ImageBitmap\n            || window.OffscreenCanvas && imageOrFileOrBlobOrUrl instanceof window.OffscreenCanvas) {\n            return Promise.resolve(imageOrFileOrBlobOrUrl);\n        } else if (imageOrFileOrBlobOrUrl instanceof Image) {\n            return QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl).then(() => imageOrFileOrBlobOrUrl);\n        } else if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob\n            || imageOrFileOrBlobOrUrl instanceof URL || typeof(imageOrFileOrBlobOrUrl)==='string') {\n            const image = new Image();\n            if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n            } else {\n                image.src = imageOrFileOrBlobOrUrl;\n            }\n            return QrScanner._awaitImageLoad(image).then(() => {\n                if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                    URL.revokeObjectURL(image.src);\n                }\n                return image;\n            });\n        } else {\n            return Promise.reject('Unsupported image type.');\n        }\n    }\n\n    /* async */\n    static _awaitImageLoad(image) {\n        return new Promise((resolve, reject) => {\n            if (image.complete && image.naturalWidth!==0) {\n                // already loaded\n                resolve();\n            } else {\n                let onLoad, onError;\n                onLoad = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    resolve();\n                };\n                onError = () => {\n                    image.removeEventListener('load', onLoad);\n                    image.removeEventListener('error', onError);\n                    reject('Image load error');\n                };\n                image.addEventListener('load', onLoad);\n                image.addEventListener('error', onError);\n            }\n        });\n    }\n\n    /* async */\n    static _postWorkerMessage(qrEngineOrQrEnginePromise, type, data) {\n        return Promise.resolve(qrEngineOrQrEnginePromise).then((qrEngine) => {\n            if (!(qrEngine instanceof Worker)) return;\n            qrEngine.postMessage({ type, data });\n        });\n    }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.NO_QR_CODE_FOUND = 'No QR code found';\nQrScanner.WORKER_PATH = 'qr-scanner-worker.min.js';\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport QrScanner from 'qr-scanner';\n\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-qr-scan]',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center\"\n        >\n            <p class=\"mt-6 mb-4\">\n                Please enter your email address or scan your QR code\n            </p>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    [(ngModel)]=\"email\"\n                    placeholder=\"Enter email...\"\n                    type=\"email\"\n                    autocomplete=\"off\"\n                    (blur)=\"checkEmail(email)\"\n                    (keyup.enter)=\"checkEmail(email)\"\n                />\n                <mat-error>Invalid email format</mat-error>\n            </mat-form-field>\n            <video\n                #video\n                class=\"rounded m-4 bg-gray-200 border border-gray-500\"\n                id=\"qr-stream\"\n                playsinline\n                width=\"640\"\n                height=\"480\"\n                autoplay\n            ></video>\n            <a\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                height: 100%;\n                width: 100%;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            video {\n                width: 36rem;\n                height: 27rem;\n            }\n\n            mat-form-field {\n                width: 36rem;\n            }\n\n            a {\n                position: absolute;\n            }\n        `,\n    ],\n})\nexport class CheckinQRScanComponent implements OnInit, OnDestroy {\n    /** Email address of the visitor */\n    public email: string;\n    /** Video element to emit camera feed */\n    @ViewChild('video') private _video_el: ElementRef<HTMLVideoElement>;\n    /** QR Reader */\n    private _reader;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this.setupQRReader();\n    }\n\n    public ngOnDestroy() {\n        if (this._video_el.nativeElement.srcObject) {\n            (this._video_el.nativeElement.srcObject as any)\n                .getTracks()\n                .forEach((track) => track?.stop());\n        }\n        this._reader.stop();\n    }\n\n    public async checkQRCode(raw_text: string) {\n        const chunks = raw_text.split(',');\n        if (chunks.length !== 2) {\n            notifyError('Invalid QRCode');\n            this.setupQRReader();\n            return;\n        } else {\n            await this._checkin\n                .loadGuestAndEvent(chunks[0], chunks[1])\n                .catch((err) => {\n                    this.handleError(err.message || err);\n                    throw err;\n                });\n            this._router.navigate(['/checkin', 'details']);\n        }\n    }\n\n    public async checkEmail(email: string) {\n        if (!email || !email.includes('@') || email.length < 5) return;\n        await this._checkin.loadGuestAndEvent(email).catch((err) => {\n            this.handleError(err.message || err);\n            throw err;\n        });\n        this._router.navigate(['/checkin', 'details']);\n    }\n\n    private setupQRReader() {\n        if (navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices\n                .getUserMedia({ video: true })\n                .then(\n                    (stream) =>\n                        (this._video_el.nativeElement.srcObject = stream)\n                )\n                .catch((e) =>\n                    console.error('Unable to fetch media devices!', e)\n                );\n        }\n        this._reader = new QrScanner(this._video_el.nativeElement, (r) =>\n            this.checkQRCode(r)\n        );\n        this._reader.start();\n    }\n\n    private handleError(message: string) {\n        this._checkin.setError(message);\n        this._router.navigate(['/checkin', 'error']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-results',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto\"\n            *ngIf=\"(event | async)\"\n        >\n            <h3 class=\"text-xl\">You are checked in!</h3>\n            <p class=\"text-center my-4\">\n                Welcome, you have a meeting at\n                {{ (event | async)?.event_start || '' | date: 'shortDate' }}\n                with {{ (event | async).organiser?.name || '' }}.<br>\n                {{ (event | async).organiser?.name || '' }} has been notified\n                and will be with you shortly.&nbsp;\n                <ng-container *ngIf=\"!(event | async)?.can_access_lift\">\n                    Please wait in the lobby.\n                </ng-container>\n                <ng-container *ngIf=\"(event | async)?.can_access_lift\">\n                    Please use the vistor access lift over there.\n                </ng-container>\n            </p>\n            <a button mat-button [routerLink]=\"['/checkin', 'preferences']\">\n                Done\n            </a>\n        </div>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n        }\n\n        :host > div {\n            width: 32rem;\n            max-width: calc(100vw - 2rem);\n        }\n\n        [button] {\n            min-width: 8rem;\n        }\n    `],\n})\nexport class CheckinResultsComponent {\n    public readonly event = this._checkin.event;\n    public readonly guest = this._checkin.guest;\n\n    constructor(\n        private _checkin: CheckinStateService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        this.event.pipe(first()).subscribe(_ => !_ ? this.previous() : '')\n    }\n\n    public previous(): void {\n        this._router.navigate(['/checkin']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: 'checkin-error',\n    template: `\n        <div\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto p-4\"\n        >\n            <h3 class=\"text-xl mb-4\">Please see reception.</h3>\n            <p class=\"mb-2\" *ngIf=\"error | async\">{{ error | async }}</p>\n            <p class=\"mb-4\">Our staff at reception will assist you.</p>\n            <a button mat-button [routerLink]=\"['/welcome']\">Back</a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 28rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CheckinErrorComponent {\n    public readonly error = this._checkin.error;\n\n    constructor(private _checkin: CheckinStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { notifyError } from '@placeos/common';\nimport { CheckinStateService } from './checkin-state.service';\n\n@Component({\n    selector: '[checkin-covid]',\n    template: `\n        <div class=\"bg-white rounded p-4 relative overflow-y-auto overflow-x-hidden\">\n            <h3 class=\"text-xl font-medium mb-4\">COVID Disclaimer</h3>\n            <ol class=\"list-decimal list-inside\">\n                <li>\n                    Do you have any of the following symptoms?<br /><br />\n                    <ul class=\"list-disc list-inside px-4 mb-4\">\n                        <li>Fever</li>\n                        <li>Cough</li>\n                        <li>Shortness of breath</li>\n                        <li>Chills</li>\n                        <li>Body aches</li>\n                        <li>Sore or scratchy throat</li>\n                        <li>Headache</li>\n                        <li>Runny nose</li>\n                        <li>Muscle pain</li>\n                        <li>Vomitting</li>\n                        <li>Nausea</li>\n                        <li>Diarrhoa</li>\n                        <li>Loss of taste or smell</li>\n                    </ul>\n                    <mat-radio-group\n                        aria-label=\"Has Symptoms\"\n                        [(ngModel)]=\"symptoms\"\n                    >\n                        <mat-radio-button value=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button value=\"false\" class=\"ml-4\"\n                            >No</mat-radio-button\n                        >\n                    </mat-radio-group>\n                </li>\n                <hr class=\"my-4\" />\n                <li>\n                    Have you been in contact with a COVID-19 case in the last 14\n                    days or been asked to self-isolate by a health offical?<br /><br />\n                    <mat-radio-group\n                        aria-label=\"COVID contact or self-isolated\"\n                        [(ngModel)]=\"contact\"\n                    >\n                        <mat-radio-button value=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button value=\"false\" class=\"ml-4\"\n                            >No</mat-radio-button\n                        >\n                    </mat-radio-group>\n                </li>\n            </ol>\n            <button mat-button (click)=\"confirm()\">Confirm</button>\n            <a\n                mat-icon-button\n                [disabled]=\"!symptoms && !contact\"\n                class=\"absolute top-0 right-0\"\n                [routerLink]=\"['/welcome']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: rgba(0, 0, 0, 0.5);\n            }\n\n            :host > div {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n                max-height: calc(100% - 2rem);\n            }\n\n            .absolute {\n                position: absolute;\n            }\n\n            button {\n                margin: 1rem 11rem 0;\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class CheckinCovidComponent {\n    public contact: string;\n    public symptoms: string;\n\n    constructor(\n        private _router: Router,\n        private _checkin: CheckinStateService\n    ) {}\n\n    public confirm() {\n        if (!this.symptoms || !this.contact)\n            return notifyError('Please select yes or no for each question');\n        this._checkin.updateGuest({\n            covid: this.contact === 'true',\n            symptoms: this.symptoms === 'true',\n        });\n        if (this.symptoms === 'false' && this.contact === 'false') {\n            this._router.navigate(['/checkin', 'results']);\n        } else {\n            this._checkin.setError('Please get tested for COVID-19 and self-isolate at home for 14 days');\n            this._router.navigate(['/checkin', 'error']);\n        }\n    }\n}\n","\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\nimport { SharedContentModule } from '../ui/shared.module';\n\nimport { CheckinDetailsComponent } from './checkin-details.component';\nimport { CheckinGroupComponent } from './checkin-group.component';\nimport { CheckinPhotoComponent } from './checkin-photo.component';\nimport { CheckinPreferencesComponent } from './checkin-preferences.component';\nimport { CheckinQRScanComponent } from './checkin-qr-scan.component';\nimport { CheckinResultsComponent } from './checkin-result.component';\nimport { CheckinErrorComponent } from './checkin-error.component';\nimport { CheckinCovidComponent } from './checkin-covid.component';\nimport { CheckinComponent } from './checkin.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CheckinComponent, children: [\n        { path: 'scan', component: CheckinQRScanComponent },\n        { path: 'details', component: CheckinDetailsComponent },\n        { path: 'group', component: CheckinGroupComponent },\n        { path: 'preferences', component: CheckinPreferencesComponent },\n        { path: 'photo', component: CheckinPhotoComponent },\n        { path: 'results', component: CheckinResultsComponent },\n        { path: 'error', component: CheckinErrorComponent },\n        { path: 'covid', component: CheckinCovidComponent },\n        { path: '**', redirectTo: 'scan' }\n    ] },\n    { path: '**', redirectTo: '' }\n]\n\n@NgModule({\n    declarations: [\n        CheckinComponent,\n        CheckinResultsComponent,\n        CheckinQRScanComponent,\n        CheckinPreferencesComponent,\n        CheckinPhotoComponent,\n        CheckinGroupComponent,\n        CheckinDetailsComponent,\n        CheckinErrorComponent,\n        CheckinCovidComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedContentModule,\n        RouterModule.forChild(ROUTES)\n    ]\n})\nexport class VisitorCheckinModule { }\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-checkin]',\n    template: `\n        <a-topbar-header class=\"w-full\"></a-topbar-header>\n        <div\n            class=\"flex-1 w-full bg-center bg-cover relative\"\n            [style.background-image]=\"'url(' + background + ')'\"\n        >\n            <router-outlet></router-outlet>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CheckinComponent {\n    public get background() {\n        return this._settings.get('app.home.background');\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n"],"sourceRoot":"webpack:///"}