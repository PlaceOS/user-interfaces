{"version":3,"sources":["./src/app/dashboard/dashboard-contacts.component.ts","./src/app/dashboard/dashboard-upcoming.component.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/dashboard-availability.component.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { BaseClass } from '@user-interfaces/common';\n\nimport { DashboardStateService } from './dashboard-state.service';\n\n@Component({\n    selector: 'dashboard-contacts',\n    template: `\n        <h3 class=\"m-0 mb-2 font-medium text-xl\">Contacts</h3>\n        <div name=\"contact-list\" class=\"bg-gray-400 rounded-lg p-2 pl-0 space-y-2 flex flex-wrap\">\n            <div\n                name=\"contact\"\n                *ngFor=\"let user of contacts | async\"\n                class=\"bg-white rounded-lg flex-1 flex flex-col items-center p-2 relative\"\n            >\n                <a-user-avatar class=\"text-2xl mb-2\" [user]=\"user\"></a-user-avatar>\n                <div name=\"contact-name\" class=\"text-sm mb-2\">{{ user.name }}</div>\n                <div name=\"location\" class=\"flex items-center text-sm\">\n                    <div name=\"dot\" class=\"mr-2\"></div>\n                    Level 12\n                </div>\n                <button mat-icon-button name=\"close\" (click)=\"removeUser(user)\">\n                    <app-icon\n                        [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                    ></app-icon>\n                </button>\n            </div>\n            <button\n                name=\"contact\"\n                mat-button\n                class=\"rounded-lg flex-1 w-full\"\n                [matMenuTriggerFor]=\"menu\"\n                (menuOpened)=\"focusInput()\"\n                (menuClosed)=\"clearInput()\"\n            >\n                <div class=\"flex flex-col items-center p-4 text-black w-full\">\n                    <app-icon\n                        class=\"text-2xl\"\n                        [icon]=\"{ class: 'material-icons', content: 'person_add' }\"\n                    ></app-icon>\n                    <span class=\"w-full leading-tight whitespace-normal\"\n                        >Click to add a person to contacts</span\n                    >\n                </div>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <div\n                mat-menu-item\n                class=\"p-0\"\n                (click)=\"$event.stopPropagation(); $event.preventDefault()\"\n            >\n                <input\n                    #input\n                    class=\"w-full p-2 text-base\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"updateSearch(search_str)\"\n                    placeholder=\"Search for user...\"\n                />\n            </div>\n            <button mat-menu-item *ngIf=\"!(search_results | async).length\">\n                {{ !search_str ? 'Type to search for users...' : 'No matches for \"' + search_str + '\"'}}\n            </button>\n            <button mat-menu-item *ngFor=\"let user of search_results | async | slice:0:8\" (click)=\"addUser(user)\">\n                <div class=\"flex items-center leading-tight\">\n                    <a-user-avatar class=\"text-xl mr-2\" [user]=\"user\"></a-user-avatar>\n                    <div class=\"flex-1\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"text-xs text-dark-fade\">{{ user.email }}</div>\n                    </div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1em;\n                min-width: 16rem;\n            }\n\n            [name='contact-list'] {\n                padding: 0 0.5rem 0.5rem 0;\n            }\n\n            [name='contact'] {\n                min-width: 8rem;\n                width: 8rem;\n                margin-left: 0.5rem;\n                margin-top: 0.5rem;\n            }\n\n            [name='contact-name'] {\n                font-weight: 400;\n            }\n\n            [name='dot'] {\n                height: 8px;\n                width: 8px;\n                border-radius: 8px;\n                background-color: #22992e;\n            }\n\n            button[name='close'] {\n                position: absolute;\n                display: none;\n                top: .25rem;\n                right: .25rem;\n            }\n\n            [name='contact']:hover button[name='close'] {\n                display: initial;\n            }\n\n            button[name='contact'] {\n                background-color: #f0f0f0;\n                border: none;\n                min-width: calc(100% - 0.5rem) !important;\n            }\n        `,\n    ],\n})\nexport class DashboardContactsComponent extends BaseClass {\n    public readonly contacts = this._state.contacts;\n\n    public readonly search_results = this._state.contacts_search;\n\n    public readonly addUser = (u) => this._state.addContact(u);\n\n    public readonly removeUser = (u) => this._state.removeContact(u);\n\n    public readonly updateSearch = (s) => this._state.updateContactSearch(s);\n\n    public search_str: string = '';\n\n    @ViewChild('input') private _input_el: ElementRef;\n\n    constructor(private _state: DashboardStateService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.updateContacts();\n    }\n\n    public focusInput() {\n        this.timeout('focus', () => {\n            if (this._input_el) {\n                this._input_el.nativeElement.focus();\n            }\n        });\n    }\n\n    public clearInput() {\n        this.search_str = '';\n        this._state.clearContactSearch();\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Space } from '@user-interfaces/spaces';\n\nimport { ViewRoomModalComponent } from '../overlays/view-room-modal/view-room-modal.component';\nimport { DashboardStateService } from './dashboard-state.service';\n\n@Component({\n    selector: 'dashboard-upcoming',\n    template: `\n        <h3 class=\"m-0 mb-4 font-medium text-xl\">Today's Events</h3>\n        <div\n            name=\"event\"\n            *ngFor=\"let event of upcoming_events | async | slice: 0:3\"\n            class=\"flex bg-white rounded-lg relative overflow-hidden mb-4\"\n        >\n            <div name=\"status\" class=\"absolute rounded-lg\"></div>\n            <div name=\"details\" class=\"flex-1 mr-2\">\n                <div name=\"time\" class=\"text-sm text-bold mb-2\">{{ event.time_period }}</div>\n                <div name=\"title\" class=\"text-sm text-bold mb-2\">{{ event.title }}</div>\n                <div name=\"space\" class=\"text-xs flex items-center mb-2\">\n                    <app-icon\n                        class=\"mr-2\"\n                        [icon]=\"{ class: 'material-icons', content: 'room' }\"\n                    ></app-icon>\n                    <a\n                        class=\"text-black\"\n                        [class.underline]=\"!!event.space\"\n                        [matTooltip]=\"event.space ? 'Locate Space' : ''\"\n                        (click)=\"event.space ? locateSpace(event.space) : ''\"\n                    >\n                        {{\n                            event.space?.display_name || event.space?.name || '&lt;No Location&gt;'\n                        }}\n                        {{\n                            event.space?.level?.display_name || event.space?.level?.name\n                                ? ', ' + event.space.level.display_name || event.space.level.name\n                                : ''\n                        }}\n                    </a>\n                </div>\n                <div name=\"attendees\" class=\"text-xs flex items-center mb-2\">\n                    <app-icon\n                        class=\"mr-2\"\n                        [icon]=\"{ class: 'material-icons', content: 'group' }\"\n                    ></app-icon>\n                    {{ event.guests.length }} Guest{{ event.guests.length === 1 ? '' : 's' }}\n                </div>\n                <div name=\"guests\" class=\"flex space-x-2 text-sm\">\n                    <a-user-avatar\n                        *ngFor=\"let guest of event.guests\"\n                        [user]=\"guest\"\n                    ></a-user-avatar>\n                </div>\n            </div>\n            <a button mat-button *ngIf=\"event.meeting_link\" class=\"uppercase h-12\" [href]=\"event.meeting_link\">Join Call</a>\n        </div>\n        <p *ngIf=\"!(upcoming_events | async).length\" class=\"text-dark-fade text-center w-full\">\n            No upcoming events for today\n        </p>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1em;\n                min-width: 16rem;\n            }\n\n            [name='time'] {\n                color: #00529b;\n            }\n\n            [name='event'] {\n                padding: 1rem 1rem 1rem 2rem;\n            }\n\n            [name='status'] {\n                top: 1rem;\n                left: -0.8rem;\n                height: 2.5rem;\n                width: 1.6rem;\n                background-color: #00529b;\n            }\n\n            button {\n                height: 3em;\n            }\n\n            app-icon {\n                margin-left: -0.25rem;\n            }\n        `,\n    ],\n})\nexport class DashboardUpcomingComponent {\n    public readonly upcoming_events = this._state.upcoming_events;\n\n    constructor(private _state: DashboardStateService, private _dialog: MatDialog) {}\n\n    public ngOnInit() {\n        this._state.pollUpcomingEvents();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingUpcomingEvents();\n    }\n\n    public locateSpace(space: Space) {\n        this._dialog.open(ViewRoomModalComponent, { data: { space } });\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@user-interfaces/common';\nimport { format } from 'date-fns';\n\n\n@Component({\n    selector: 'dashboard',\n    template: `\n        <header>\n            <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n            <div class=\"top relative flex flex-col justify-center text-white px-12 py-4\">\n                <div class=\"row location\">Sydney</div>\n                <div class=\"row text-2xl text-bold uppercase\">{{ datetime }}</div>\n            </div>\n        </header>\n        <main class=\"flex flex-1 px-8 flex-wrap overflow-auto\">\n            <dashboard-availability class=\"flex-1 min-w-64\"></dashboard-availability>\n            <dashboard-upcoming class=\"flex-1 min-w-64\"></dashboard-upcoming>\n            <dashboard-contacts class=\"flex-1 min-w-64\"></dashboard-contacts>\n        </main>\n        <footer class=\"flex\">\n            <a button mat-button class=\"tile text-2xl\" *ngFor=\"let tile of tiles\" [routerLink]=\"tile.route\">\n                <div class=\"flex flex-col items-center\">\n                    <app-icon [icon]=\"tile.icon\"></app-icon>\n                    <span class=\"text-lg\">{{ tile.name }}</span>\n                </div>\n            </a>\n        </footer>\n        <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>\n    `,\n    styles: [`\n        :host {\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            overflow: hidden;\n            display: flex;\n            flex-direction: column;\n        }\n\n        main {\n            min-height: 50%;\n        }\n\n        .top {\n            background: transparent linear-gradient(89deg, #004a86 0%, #00a1d8 70%, #6eb95c 100%) 0% 0%\n                no-repeat padding-box;\n        }\n\n        a[button].tile {\n            flex: 1;\n            border-radius: 0;\n            background-color: #fff;\n            color: rgba(0,0,0,.85);\n            border: none;\n            border-right: 1px solid #ccc;\n        }\n\n        a[button].tile:last-child {\n            border: none;\n        }\n    `],\n})\nexport class DashboardComponent {\n    /** Whether to show overlay menu */\n    public show_menu: boolean;\n\n    public get tiles() {\n        return this._settings.get('app.home.tiles') || [];\n    }\n\n    public get datetime() {\n        return format(new Date(), 'EEEE, h:mma')\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { SharedContentModule } from '../ui/shared.module';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardAvailabilityComponent } from './dashboard-availability.component';\nimport { DashboardUpcomingComponent } from './dashboard-upcoming.component';\nimport { DashboardContactsComponent } from './dashboard-contacts.component';\n\nconst ROUTES: Route[] = [{ path: '', component: DashboardComponent }];\n\n@NgModule({\n    declarations: [\n        DashboardComponent,\n        DashboardAvailabilityComponent,\n        DashboardUpcomingComponent,\n        DashboardContactsComponent\n    ],\n    imports: [CommonModule, FormsModule, SharedContentModule, RouterModule.forChild(ROUTES)],\n})\nexport class DashboardModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BaseClass } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { first } from 'rxjs/operators';\n\nimport { DashboardStateService } from './dashboard-state.service';\n\n@Component({\n    selector: 'dashboard-availability',\n    template: `\n        <h3 class=\"m-0 font-medium text-xl\">Available Now</h3>\n        <div class=\"flex flex-col items-center p-2 bg-white my-4 rounded-lg\">\n            <div class=\"flex items-center w-full mb-2\">\n                <app-icon\n                    class=\"bg-darken rounded-lg mr-2 text-2xl\"\n                    [icon]=\"{ class: 'material-icons', content: 'crop_free' }\"\n                ></app-icon>\n                <div>Most free space:</div>\n            </div>\n            <div class=\"items space-y-2 w-full\">\n                <a\n                    button\n                    mat-button\n                    class=\"w-full\"\n                    *ngFor=\"let lvl of levels_free | async | slice:0:2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ level: lvl.id }\"\n                >\n                    {{ lvl.display_name || lvl.name }}\n                </a>\n            </div>\n        </div>\n        <div class=\"flex items-center flex-col rounded-lg bg-white my-4 p-2\">\n            <div class=\"flex items-center w-full mb-2\">\n                <app-icon\n                    class=\"bg-darken rounded-lg mr-2 text-2xl\"\n                    [icon]=\"{ class: 'material-icons', content: 'av_timer' }\"\n                ></app-icon>\n                <div>Free rooms now:</div>\n            </div>\n            <div class=\"items space-y-2\">\n                <a\n                    button\n                    mat-button\n                    class=\"w-full\"\n                    *ngFor=\"let space of space_list | async | slice: 0:3\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ space: space.id }\"\n                    >{{ space.display_name || space.name }}\n                </a>\n                <span *ngIf=\"!(space_list | async).length\" class=\"text-dark-fade text-sm mb-2\">No free spaces</span>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 1em;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class DashboardAvailabilityComponent implements OnInit, OnDestroy {\n    public readonly space_list = this._state.free_spaces;\n    public readonly levels_free = this._state.level_occupancy;\n\n    constructor(private _state: DashboardStateService) { }\n\n    public async ngOnInit() {\n        this._state.pollFreeSpaces();\n\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingFreeSpaces();\n    }\n}\n"],"sourceRoot":"webpack:///"}