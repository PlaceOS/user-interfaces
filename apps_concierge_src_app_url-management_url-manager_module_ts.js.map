{"version":3,"file":"apps_concierge_src_app_url-management_url-manager_module_ts.js","mappings":"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","names":["i0","ShortUrlModalComponent_main_4_form_1_div_1_Template","ShortUrlModalComponent_main_4_form_1_div_2_Template","ShortUrlModalComponent_main_4_form_1_div_3_Template","ShortUrlModalComponent_main_4_form_1_div_4_Template","ctx_r0","form","controls","name","description","uri","enabled","ShortUrlModalComponent_main_4_form_1_Template","_r2","save","ShortUrlModalComponent","AsyncHandler","constructor","_data","_dialog_ref","super","this","loading","FormGroup","id","FormControl","Validators","required","ngOnInit","_asyncToGenerator","_this","valid","notifyError","getInvalidFields","join","data","getRawValue","resp","saveShortURL","toPromise","catch","e","message","close","static","__ngFactoryType__","MAT_DIALOG_DATA","i1","core","VBU","selectors","features","decls","vars","consts","i18n_0","$localize","ShortUrlModalComponent_button_3_Template","ShortUrlModalComponent_main_4_Template","ShortUrlModalComponent_footer_5_Template","ShortUrlModalComponent_ng_template_6_Template","ctx","value","load_state_r3","UrlManagementService","_org","_dialog","_options","BehaviorSubject","_change","options","asObservable","_url_list","combineLatest","active_building","pipe","switchMap","bld","queryShortURLs","shareReplay","filtered_urls","map","list","filter","i","search","toLowerCase","includes","setFilters","next","getValue","setSearchString","editURL","url","open","afterClosed","subscribe","Date","now","removeURL","ref","openConfirmModal","title","content","icon","confirm_text","reason","deleteShortURL","notifySuccess","i2","jDH","factory","Éµfac","providedIn","data_r1","_r5","ctx_r3","print","row_r3","qr_code","row","loadQrCode","UrlListComponent_ng_template_5_ng_template_4_Template","edit","remove","qr_menu_r6","menu_r7","UrlListComponent","kiosk_url","path","_settings","get","window","location","origin","item","getShortUrlQRCode","_manager","region","template","rf","UrlListComponent_ng_template_3_Template","UrlListComponent_ng_template_5_Template","_c5","_c0","_c1","url_template_r8","_c2","_c3","_c4","action_template_r9","UrlManagerComponent","_state","new","attrs","ROUTES","component","UrlManagerModule","$C","G2t","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","RouterModule","forChild","MapLocation","type","position","map_id","asset_id","x","map_width","y","map_height","variance","last_seen","getUnixTime","level","building","at_location","coordinates_from"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/url-management/url-modal.component.ts","./apps/concierge/src/app/url-management/url-management.service.ts","./apps/concierge/src/app/url-management/url-list.component.ts","./apps/concierge/src/app/url-management/url-manager.component.ts","./apps/concierge/src/app/url-management/url-manager.module.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    ShortURL,\n    getInvalidFields,\n    notifyError,\n    randomString,\n    saveShortURL,\n} from '@placeos/common';\nimport { OrganisationService, Building } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { addYears, startOfDay } from 'date-fns';\nimport { take } from 'rxjs/operators';\n\n@Component({\n    selector: 'short-url-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Short URL</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[28rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            i18n-placeholder=\"@@namePlaceholder\"\n                            formControlName=\"name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col pb-4\"\n                    *ngIf=\"form.controls.description\"\n                >\n                    <label for=\"description\" i18n=\"@@nameLabel\">\n                        Description:\n                    </label>\n                    <rich-text-input\n                        name=\"description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.uri\">\n                    <label for=\"uri\" i18n=\"@@nameLabel\">\n                        URI<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"uri\"\n                            placeholder=\"URI\"\n                            i18n-placeholder=\"@@uriPlaceholder\"\n                            formControlName=\"uri\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col pb-4\" *ngIf=\"form.controls.enabled\">\n                    <mat-checkbox formControlName=\"enabled\">\n                        Enabled\n                    </mat-checkbox>\n                </div>\n                <!-- <div class=\"flex flex-col\" *ngIf=\"form.controls.valid_from\">\n                    <label for=\"uri\" i18n=\"@@nameLabel\"> Valid From: </label>\n                    <a-date-field formControlName=\"valid_from\"></a-date-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.valid_to\">\n                    <label for=\"uri\" i18n=\"@@nameLabel\">\n                        Valid Until<span>*</span>:\n                    </label>\n                    <a-date-field\n                        formControlName=\"valid_from\"\n                        [from]=\"form.value.valid_from\"\n                    ></a-date-field>\n                </div> -->\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Short URL...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ShortUrlModalComponent extends AsyncHandler {\n    public loading = false;\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data?.id || ''),\n        name: new FormControl(this._data?.name || '', [Validators.required]),\n        description: new FormControl(this._data?.description || '', []),\n        uri: new FormControl(this._data?.uri || '', [Validators.required]),\n        enabled: new FormControl(this._data?.enabled ?? true, []),\n        // valid_from: new FormControl(\n        //     this._data?.valid_from || startOfDay(Date.now()).valueOf(),\n        //     []\n        // ),\n        // valid_to: new FormControl(\n        //     this._data?.valid_to ||\n        //         addYears(startOfDay(Date.now()).valueOf(), 10),\n        //     []\n        // ),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ShortURL | undefined,\n        private _dialog_ref: MatDialogRef<ShortUrlModalComponent>\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {}\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const data: any = this.form.getRawValue();\n        this.loading = true;\n        const resp = await saveShortURL(data)\n            .toPromise()\n            .catch((e) => notifyError(`Error saving Short URL: ${e.message}`));\n        if ((resp as any).id) this._dialog_ref.close(resp);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { ShortUrlModalComponent } from './url-modal.component';\nimport {\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    queryShortURLs,\n    deleteShortURL,\n    ShortURL,\n} from '@placeos/common';\n\nexport interface UrlListOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UrlManagementService {\n    private _options = new BehaviorSubject<UrlListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    private _url_list = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        switchMap(([bld]) => queryShortURLs({})),\n        shareReplay(1)\n    );\n\n    public readonly filtered_urls = combineLatest([\n        this._url_list,\n        this._options,\n    ]).pipe(\n        map(([list, options]) =>\n            list.filter(\n                (i) =>\n                    !options.search ||\n                    i.name.toLowerCase().includes(options.search.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<UrlListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editURL(url?: ShortURL) {\n        const ref = this._dialog.open(ShortUrlModalComponent, {\n            data: url,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async removeURL(url: ShortURL) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Short URL',\n                content: `Are you sure you want to remove the Short URL \"${url.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing Short URL...');\n        await deleteShortURL(url.id)\n            .toPromise()\n            .catch((e) => {\n                notifyError(`Error removing Short URL: ${e.message}`);\n                ref.close();\n                throw e;\n            });\n        notifySuccess('Successfully removed Short URL.');\n        ref.close();\n        this._change.next(Date.now());\n    }\n}\n","import { Component } from '@angular/core';\nimport { UrlManagementService } from './url-management.service';\nimport { SettingsService, ShortURL, getShortUrlQRCode } from '@placeos/common';\n\n@Component({\n    selector: 'short-url-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-8\">\n            <simple-table\n                class=\"min-w-[64rem] block text-sm\"\n                [data]=\"features\"\n                empty_message=\"No Points of Interest found.\"\n                [columns]=\"[\n                    { key: 'name', name: 'Name' },\n                    { key: 'uri', name: 'URI', content: url_template },\n                    { key: 'user_name', name: 'User Name' },\n                    { key: 'description', name: 'Description' },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        content: action_template,\n                        size: '7rem',\n                        sortable: false\n                    }\n                ]\"\n                [sortable]=\"true\"\n            ></simple-table>\n            <div class=\"w-full h-12\"></div>\n        </div>\n        <ng-template #url_template let-data=\"data\">\n            <a link [href]=\"data\" class=\"p-4 truncate max-w-[32rem]\">\n                {{ data }}\n            </a>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2 px-4 py-2 mx-auto\">\n                <button\n                    icon\n                    matRipple\n                    customTooltip\n                    [content]=\"qr_menu\"\n                    (click)=\"loadQrCode(row)\"\n                >\n                    <app-icon>qr_code</app-icon>\n                </button>\n                <ng-template #qr_menu>\n                    <div class=\"bg-base-100 py-2 shadow rounded\">\n                        <div class=\"\" printable>\n                            <a\n                                [href]=\"row.uri | safe: 'url'\"\n                                target=\"_blank\"\n                                ref=\"noopener noreferrer\"\n                                class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                            >\n                                <img class=\"w-48 mx-auto\" [src]=\"row.qr_code\" />\n                            </a>\n                            <div\n                                class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                            >\n                                {{ row.name || row.id }}\n                            </div>\n                        </div>\n                        <button\n                            btn\n                            matRipple\n                            class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                            (click)=\"print()\"\n                        >\n                            Print QR Code\n                        </button>\n                    </div>\n                </ng-template>\n                <button btn icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"edit(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon>edit</app-icon>\n                            <span>Edit Short URL</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"remove(row)\">\n                        <div class=\"flex items-center space-x-2 text-red-500\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <span>Delete Short URL</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UrlListComponent {\n    public readonly features = this._manager.filtered_urls;\n\n    public readonly edit = (region) => this._manager.editURL(region);\n    public readonly remove = (region) => this._manager.removeURL(region);\n\n    public get kiosk_url() {\n        const path = this._settings.get('app.kiosk_url_path') || '/map-kiosk';\n        return `${window.location.origin}${path}`;\n    }\n\n    public async loadQrCode(item: ShortURL) {\n        (item as any).qr_code = await getShortUrlQRCode(item.id);\n    }\n\n    constructor(\n        private _manager: UrlManagementService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component } from '@angular/core';\nimport { UrlManagementService } from './url-management.service';\n\n@Component({\n    selector: '[app-short-url-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header\n                    class=\"flex items-center justify-between mb-2 px-8 py-4\"\n                >\n                    <h2 class=\"text-2xl font-medium\">Short URL Management</h2>\n                    <button btn matRipple (click)=\"new()\">Add Short URL</button>\n                </header>\n                <short-url-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></short-url-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class UrlManagerComponent {\n    public readonly new = () => this._state.editURL();\n\n    constructor(private readonly _state: UrlManagementService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { UrlManagerComponent } from './url-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { UrlListComponent } from './url-list.component';\nimport { ShortUrlModalComponent } from './url-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: UrlManagerComponent },\n    { path: 'new', component: UrlManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        UrlManagerComponent,\n        UrlListComponent,\n        ShortUrlModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class UrlManagerModule {}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[]}