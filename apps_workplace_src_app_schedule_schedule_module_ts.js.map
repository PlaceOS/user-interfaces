{"version":3,"mappings":"gcAyBO,IAAMA,EAAb,MAAM,gBAAoCC,KAH1CC,kCAIYC,WAAQ,IAAIC,IAAgB,GAC5BD,cAAW,IAAIC,IAAiC,CACpDC,MAAOC,KAAKC,QAERJ,cAAW,IAAIC,IAAwB,IACvCD,eAAY,IAAIC,IAA+B,IAEvCD,aAAUA,KAAKK,SAASC,eACxBN,aAAUA,KAAKO,SAASD,eACxBN,cAAWA,KAAKO,SAASD,eAEzBN,eAAoCQ,MAAc,CAC9DR,KAAKK,SACLL,KAAKS,QACNC,QACCC,KAAa,MACbC,QAAS,EAAEC,MACPb,KAAKO,SAASO,KAAK,uBACnB,MAAMC,EAAa,CACfC,gBAAcC,MAAYC,OAAWL,EAAQX,QAC7CiB,YAAYF,UAAYG,MAAQC,OAASR,EAAQX,OAAQ,KAE7D,OAAIW,EAAQS,WACRP,EAAMO,SAAWT,EAAQS,UAE7BtB,KAAKuB,UAAUT,KACXd,KAAKuB,UACAC,WACAC,OACIC,KACIC,QACwB,IAArBZ,EAAMC,aACa,IAAnBD,EAAMI,WACNO,EAAEE,KACFF,EAAEE,KAAoB,GAAbF,EAAEG,SAAgB,UAIxCC,KAAS,EACZC,QAAWC,iBAAMjB,OACjBkB,MAAaD,+BAAMjB,GAAK,CAAEmB,KAAM,eAGxCC,OAAI,EAAEC,EAAQC,MACV,MAAMC,EAAO,IACNtC,KAAKuB,UAAUC,cACfY,KACAC,EAASZ,OAAOC,GAAkB,aAAbA,EAAEa,SAC5BC,KAAK,CAACC,EAAGC,IAAMD,EAAEb,KAAOc,EAAEd,MAC5B,YAAKL,UAAUT,MAAK6B,QAAOL,EAAM,OAC1BA,KAEXM,OAAYlB,GAAM,KAClBmB,OAAKnB,GAAM1B,KAAKO,SAASO,KAAK,QAC9BgC,KAAY,IAGTC,aAAaC,EAAgB,MAChChD,KAAKiD,SAAS,OAAQ,IAAMjD,KAAKS,MAAMK,KAAKX,KAAKC,OAAQ4C,GAGtDE,cACHlD,KAAKmD,cAAc,QAGhBC,WAAWvC,GACdb,KAAKK,SAASS,KAAIkB,+BAAMhC,KAAKK,SAASmB,YAAeX,+EAnEhDhB,KAAoBwD,GAApBxD,mCAAoByD,QAApBzD,EAAoB,qBAFjB,SAEHA,GAAb,4JCXgB0D,iBAIIA,yBACJA,+BADIA,kGARRA,eACIA,iBACIA,yBACJA,QACAA,uBAMJA,8BARQA,gFAICA,kEAoCGA,kBAIIA,uBAA+BA,iBAAKA,QACpCA,gBACIA,0BAIJA,QACJA,+BALQA,sMArCpBA,eAOIA,iBACIA,iBAOIA,sBAA2BA,SAAUA,QACrCA,kBACIA,yBAKJA,QACAA,kBACIA,SACJA,QACJA,QACAA,mBACIA,mBACIA,UACJA,QACAA,yBAYJA,QACJA,QACJA,8BAzCIA,gCACAA,mEAMQA,mDAA0C,oCAA1CA,CAA0C,kCAIfA,uBAEvBA,qHAOAA,mCAKAA,2EAICA,oGAgBtB,IAAMC,GAAb,MAAM,QAAgCtB,WAI9B,OAAOlC,KAAKyD,gBAAgBC,KAAU,UAAY,wBAIlD,OACK1D,KAAKyD,MACW,SAAjBzD,KAAKyD,KAAKE,OACVC,KAAQ,IAAIzD,KAAQH,KAAKyD,KAAK7B,KAA4B,GAArB5B,KAAKyD,KAAK5B,SAAgB,gBAKnE,GAAoB,aAAhB7B,KAAKuC,OAAuB,MAAO,SACvC,GAAIvC,KAAKyD,KAAKI,SACV,OAAS7D,KAAKyD,KAAiBK,kBACtB,OACD,MAAO,iBACN,UACD,MAAO,gBAGnB,MAAO,qBAIP,OAAK9D,KAAKyD,MAAyB,SAAjBzD,KAAKyD,KAAKE,GACrB3D,KAAKyD,KAAKlB,OADiC,yDA7B7CiB,8BAAyBO,4iCA7D9BR,WACIA,uBAWAA,wBA8CJA,eA1DcA,8CACJA,2HA4DLC,GAAb,wCCjBgBD,uBAMIA,gDAIZA,+BA+BD,IAAMS,GAAb,MAAM,QAyCFjE,YAAoBkE,iBAxCJjE,WAAQ,IAAIG,KACZH,eAAWkE,OAAUlE,KAAKmE,MAAO,GACjCnE,aAAUA,KAAKiE,OAAOpD,QACtBb,aAAUA,KAAKiE,OAAOG,QAEtBpE,UAAOA,KAAKa,QAAQH,MAAKyB,OAAKT,GAAM,IAAIvB,KAAKuB,EAAExB,SAE/CF,gBAAaA,KAAKiE,OAAO7B,OAAO1B,MAC5CyB,OAAKG,IACD,IAAI+B,EAAQ,GACRnE,EAAQ,IAAIC,KAAKH,KAAKmE,OAC1B,KAAOjE,EAAQF,KAAKsE,UAAU,CAC1B,MAAMC,EAAQjC,EAAKb,OAAQC,KAAM8C,OAAUtE,EAAOwB,GAAEE,OACpDyC,EAAQE,EAAME,OACR,IACOJ,EACH,CACIV,GAAI,OACJ/B,KAAM1B,EAAMwE,UACZ7C,SAAU0C,EAAME,WAEjBF,GAEP,IACOF,EACH,CAAEV,GAAI,OAAQ/B,KAAM1B,EAAMwE,UAAW7C,SAAU,IAEzD3B,GAAQkB,OAAQlB,EAAO,GAE3B,OAAOmE,gBAKX,SAAOM,QAQJC,WACH5E,KAAKiE,OAAOlB,eAGT8B,cACH7E,KAAKiE,OAAOf,cAGT4B,QAAQlD,GACX5B,KAAKiE,OAAOb,WAAW,CAAElD,MAAO0B,EAAK8C,YAG5BK,WAAWC,iDAEpB,MAAMC,UADgBjF,KAAKkF,WAAWxE,MAAKyE,OAAK,IAAIC,cAAgB,IAC/CJ,IAAU,GAC3BC,GAAOjF,KAAK8E,QAAQG,EAAMrD,QAGrByD,SAASzD,iDAClB,MAAMQ,QAAepC,KAAKkF,WAAWxE,MAAKyE,OAAK,IAAIC,YAC7CJ,EAAQ5C,EAAOkD,UAChB5D,GAAe,SAATA,EAAEiC,KAAiBa,OAAU9C,EAAEE,KAAMA,IAEhD,GAAIoD,GAAS,GAAKhF,KAAKuF,UAAW,CAC9B,IAAIC,EAAW,EACf,QAASC,EAAI,EAAGA,EAAIrD,EAAOqC,QAAUgB,EAAIT,EAAOS,IAExCD,GAAY,EAGpBxF,KAAKuF,UAAUF,SAAS,CACpBK,IAAKC,KAAKC,MAAiB,GAAXJ,GAChBK,SAAU,WAGlB7F,KAAK8E,QAAQlD,KAIVkE,UAAUC,EAAad,GAC1B,OAAOA,EAAQ,GAAGA,EAAMtB,MAAMsB,EAAMrD,YAASoE,gDAnFxChC,GAAqBT,mCAArBS,EAAqBD,mEAsCnBkC,KAAwB,wrCA1H/B1C,iBAGIA,4BACIA,wBACIA,sBAAYA,SAAgBA,QAChCA,QACJA,QACAA,iBACIA,oBAKIA,oBACJA,QACAA,sBACIA,qBAAUA,kBAAKA,QACfA,oBAIIA,yCAAiB2C,kCAJrB3C,QAUAA,oCAKJA,QACAA,kCACJA,QACJA,QACAA,mBACIA,2CAGIA,+CAAuB2C,kBAEvB3C,4CAQJA,QACJA,QACAA,yDAKAA,2BACIA,mBACIA,mBACAA,uBACJA,QACAA,mBACIA,mBACAA,wBACJA,QACAA,mBACIA,mBACAA,uBACJA,QACJA,4CAnEoBA,4DACIA,8CAOZA,sCASIA,8CAAwB,kBAAxBA,CAAwB,cAAxBA,CAAwB,kBAUxBA,wBAgBdA,4DACJ,oCAQOA,0QA4BAS,GAAb,mGChBoBT,qBAKIA,mEAEAA,iBACJA,mCAlBJA,kBAIIA,kBACIA,oBAAUA,qBAASA,QACvBA,QACAA,kBACIA,SACJA,QACAA,4BASJA,+BAXQA,0DAKCA,+FAOTA,kBAIIA,qBAKIA,oEAEAA,SACJA,QACJA,iCALQA,qCAGAA,sFA7DZA,iBAIIA,gBACIA,SACJA,QACAA,kBAGIA,kBACIA,oBAAUA,iBAAKA,QACnBA,QACAA,kBACIA,2DAMJA,QACJA,QACAA,mBAGIA,mBACIA,qBAAUA,qBAAQA,QACtBA,QACAA,mBAA6BA,UAAcA,QAC/CA,QACAA,0BAoBAA,0BAcJA,8BA3DQA,sCASIA,4KAcyBA,2BAI5BA,wCAoBAA,4DAeTA,kBAGIA,0BACAA,aAAGA,mCAAuBA,QAC9BA,eAFiBA,wEAwBtB,IAAM4C,GAAb,MAAM,gBAA4CrG,KAwB9CC,YACYqG,EACAC,EACAC,EACAC,GAERC,QALQxG,cACAA,eACAA,eACAA,uCAxBR,OAAiB,QAAVqD,OAAK4B,aAAKwB,eAAEC,eAA4B,QAAbjB,oBAAakB,eAAEC,8BAIjD,SAAOC,KAAe,CAClBC,MAAOnB,KAAKoB,OAAgB,QAAV1D,OAAK4B,aAAKwB,eAAE5E,UAAW,IACzCmF,SAAmB,QAAVvB,OAAKR,aAAK0B,eAAE9E,UAAW,qBAKpC,OACI7B,KAAKiF,QACLrB,OACI,IAAIzD,QACJ8G,MAAWjH,KAAKiF,MAAMrD,KAAM5B,KAAKiF,MAAMpD,WAc5C+C,WACH5E,KAAKkH,aACD,eACAlH,KAAKoG,OAAOe,SAASC,UAAiBC,IAAUC,uCACxCD,EAAOE,IAAI,QACXvH,KAAKiF,YAAcuC,QAAYH,EAAOI,IAAI,OACrCrC,YACAsC,MAAM,IAAM,WAI7B1H,KAAK2H,QACD,SACA,IAAQ3H,KAAKiF,MAA+C,GAAvCjF,KAAKqG,QAAQuB,SAAS,CAAC,cAC5C,KAIDC,eACH7H,KAAKsG,QAAQwB,KAAKC,IAAyB,CACvCC,SAAU,OACVC,UAAW,OACXC,KAAM,CACFzE,KAAM,CACFE,GAAI3D,KAAKiF,MAAMpB,SACfsE,OAAQnI,KAAKiF,MAAMmD,eAAeD,OAClCE,KAAMrI,KAAKiF,MAAMqD,YACjBC,MAAOvI,KAAKiF,MAAMsD,UAM3BC,YACHxI,KAAKuG,UAAUkC,QAAQzI,KAAKiF,OAC5BjF,KAAKqG,QAAQuB,SAAS,CAAC,QAAS,QAAS,SAGhCc,8DACT,MAAMC,UAAgBC,MAClB,CACIC,OAAU7I,KAAK8I,QAAU,SAAW,WAA7B,SACPC,QAAS,4BACL/I,KAAK8I,QAAU,SAAW,wBAE9BE,KAAM,CAAED,QAAS/I,KAAK8I,QAAU,SAAW,eAE/C9I,KAAKsG,SAEc,SAAnBqC,EAAQM,SACZN,EAAQvE,QAAQ,6BACV8E,QAAclJ,KAAKiF,MAAMtB,IAC1ByB,YACAsC,MAAOyB,IACJR,QAAQvE,QAAQ,KAChBgF,QAAY,2BAA2BD,KACjCA,OAEdE,MAAc,iCACdrJ,KAAKqG,QAAQuB,SAAS,CAAC,cACvBe,EAAQW,yDA7FHnD,GAA4B5C,0EAA5B4C,EAA4BpC,k6CA9GjCR,iBACIA,eAMIA,iBACIA,sBAA0BA,sBAAUA,QACpCA,kBAAwBA,gBAAIA,QAChCA,QACJA,QACJA,QACAA,iBAGIA,0BAiEJA,QACAA,mEA7EQA,yCAaCA,+BAAa,qQA4FjB4C,GAAb,2DCtCwB5C,kBAIIA,mBACIA,SAIJA,QACAA,mBAYAA,qBAIIA,sFAEAA,iBACJA,QACJA,oCAzBQA,kIAOAA,4DAEC,6CAFDA,CAEC,sEA8CTA,kBAIIA,4BAIAA,mBAA8BA,SAE5BA,QACFA,mBAYJA,kCAjBQA,yBAE0BA,gCAK1BA,4DAEC,6CAFDA,CAEC,qFAebA,qBAKIA,gEAGAA,wBACJA,iCALIA,sEARRA,kBAIIA,4BAUAA,qBAKIA,oEAEAA,SACJA,QACJA,iCAbSA,iCAQDA,qCAGAA,qGAnKZA,iBAIIA,gBACIA,SACJA,QACAA,kBAGIA,kBACIA,oBAAUA,iBAAKA,QACnBA,QACAA,kBACIA,2DAMJA,QACJA,QACAA,mBAGIA,mBACIA,qBAAUA,qBAAQA,QACtBA,QACAA,mBAA6BA,UAAcA,QAC/CA,QACAA,mBACIA,mBACIA,mBACIA,qBAAUA,kBAAKA,QACnBA,QACAA,mBACIA,UACJA,QACAA,sBAIIA,wFAEAA,UACJA,QACJA,QACAA,mBASIA,0BA+BJA,QACJA,QACAA,mBACIA,mBACIA,mBACIA,qBAAUA,kBAAKA,QACnBA,QACAA,mBACIA,UAEJA,QACAA,sBAIIA,wFAEAA,UACJA,QACJA,QACAA,mBASIA,0BAwBJA,QACJA,QACAA,0BAwBJA,gCAjKQA,sCASIA,6KAcyBA,2BAQrBA,uFAIAA,gFAIAA,oDAKJA,6GASsBA,4CAqClBA,+FAKAA,gFAIAA,oDAKJA,4EASqBA,4CA0BxBA,sEAyBTA,kBAGIA,0BACAA,aAAGA,iCAAqBA,QAC5BA,eAFiBA,wEAwBtB,IAAMgG,GAAb,MAAM,gBAA0CzJ,KAc5CC,YACYqG,EACAC,EACAC,EACAkD,GAERhD,QALQxG,cACAA,eACAA,eACAA,mCAdR,OAAiB,QAAVqD,OAAK4B,aAAKwB,eAAEgD,4BAInB,SAAO5C,KAAe,CAClBC,MAAOnB,KAAKoB,OAAgB,QAAV1D,OAAK4B,aAAKwB,eAAE5E,UAAW,IACzCmF,SAAmB,QAAVvB,OAAKR,aAAK0B,eAAE9E,UAAW,KAajC+C,WACH5E,KAAKkH,aACD,eACAlH,KAAKoG,OAAOe,SAASC,UAAiBC,IAAUC,uCACxCD,EAAOE,IAAI,QACXvH,KAAKiF,YAAcyE,QAAUrC,EAAOI,IAAI,OAAOrC,iBAI3DpF,KAAK2H,QACD,SACA,IAAQ3H,KAAKiF,MAA+C,GAAvCjF,KAAKqG,QAAQuB,SAAS,CAAC,cAC5C,KAIDC,aAAa8B,GAChB3J,KAAKsG,QAAQwB,KAAKC,IAAyB,CACvCC,SAAU,OACVC,UAAW,OACXC,KAAM,CAAEzE,KAAMkG,KAIfnB,YACC,gBAAiBxI,KAAKiF,QACtBjF,KAAKwJ,QAAQf,QAAQzI,KAAKiF,OAC1BjF,KAAKqG,QAAQuB,SAAS,CAAC,QAAS,SAAU,UAIrCc,8DACT,MAAMC,UAAgBC,MAClB,CACIC,OAAU7I,KAAK8I,QAAU,SAAW,WAA7B,SACPC,QAAS,4BACL/I,KAAK8I,QAAU,SAAW,wBAE9BE,KAAM,CAAED,QAAS/I,KAAK8I,QAAU,SAAW,eAE/C9I,KAAKsG,SAEc,SAAnBqC,EAAQM,SACZN,EAAQvE,QAAQ,2BACVwF,QAAY5J,KAAKiF,MAAMtB,IACxByB,YACAsC,MAAOyB,IACJR,QAAQvE,QAAQ,KAChBgF,QAAY,yBAAyBD,KAC/BA,OAEdE,MAAc,+BACdrJ,KAAKqG,QAAQuB,SAAS,CAAC,cACvBe,EAAQW,yDA5EHC,GAA0BhG,0EAA1BgG,EAA0BxF,+1DApN/BR,iBACIA,eAMIA,iBACIA,sBAA0BA,sBAAUA,QACpCA,kBAAwBA,gBAAIA,QAChCA,QACJA,QACJA,QACAA,iBAGIA,0BAuKJA,QACAA,mEAnLQA,yCAaCA,+BAAa,+QAkMjBgG,GAAb,6BC9NA,MAAMM,GAAkB,CACpB,CACIC,KAAM,GACNC,UCWR,MAAM,sDAAOC,8BAAiBjG,2NArBtBR,kBACAA,iBACIA,kBAGIA,yBACJA,QACJA,QACAA,8IAaKyG,GAAb,GDVQC,SAAU,CACN,CAAEH,KAAM,GAAIC,UAAW/F,IACvB,CAAE8F,KAAM,mBAAoBC,UAAW5D,IACvC,CAAE2D,KAAM,iBAAkBC,UAAWR,MAG7C,CAAEO,KAAM,IAAKI,WAAY,KAmBtB,IAAMC,GAAb,MAAM,sDAAOA,4DARA,CACLC,KACAC,KACAC,IACAC,KACAC,cAAsBX,QAGjBM,GAAb","names":["ScheduleStateService","BaseClass","constructor","this","BehaviorSubject","start","Date","now","_options","asObservable","_loading","combineLatest","_poll","pipe","debounceTime","mergeMap","options","next","query","period_start","getUnixTime","startOfDay","period_end","addDays","endOfDay","calendar","_schedule","getValue","filter","_","timePeriodsIntersect","date","duration","forkJoin","queryEvents","Object","queryBookings","type","map","events","bookings","list","status","sort","a","b","unique","catchError","tap","shareReplay","startPolling","delay","interval","stopPolling","clearInterval","setOptions","t","factory","i0","ScheduleListItemComponent","item","Booking","id","isAfter","asset_id","booking_type","selectors","ScheduleListComponent","_state","addMonths","today","loading","items","max_date","found","isSameDay","length","valueOf","currentUser","ngOnInit","ngOnDestroy","setDate","updateDate","index","event","event_list","take","toPromise","scrollTo","findIndex","_viewport","position","i","top","Math","round","behavior","trackByFn","idx","undefined","CdkVirtualScrollViewport","ctx","ScheduleViewBookingComponent","_route","_router","_dialog","_bookings","super","_a","user_email","_b","email","formatDuration","hours","floor","minutes","addMinutes","subscription","paramMap","subscribe","params","__awaiter","has","showBooking","get","catch","timeout","navigate","viewLocation","open","MapLocateModalComponent","maxWidth","maxHeight","data","map_id","extension_data","name","description","zones","editEvent","newForm","confirmDelete","details","openConfirmModal","title","is_host","content","icon","reason","rejectBooking","e","notifyError","notifySuccess","close","ScheduleViewEventComponent","_events","host","showEvent","space","removeEvent","ROUTES","path","component","ScheduleComponent","children","redirectTo","AppScheduleModule","CommonModule","FormsModule","SharedComponentModule","ScrollingModule","RouterModule"],"sources":["./apps/workplace/src/app/schedule/schedule-state.service.ts","./apps/workplace/src/app/schedule/schedule-list-item.component.ts","./apps/workplace/src/app/schedule/schedule-list.component.ts","./apps/workplace/src/app/schedule/schedule-view-booking.component.ts","./apps/workplace/src/app/schedule/schedule-view-event.component.ts","./apps/workplace/src/app/schedule/schedule.module.ts","./apps/workplace/src/app/schedule/schedule.component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Booking, queryBookings } from '@placeos/bookings';\nimport { BaseClass, timePeriodsIntersect, unique } from '@placeos/common';\nimport { CalendarEvent, queryEvents } from '@placeos/events';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    mergeMap,\n    shareReplay,\n    tap,\n} from 'rxjs/operators';\n\nexport type BookingLike = CalendarEvent & Booking;\n\nexport interface ScheduleOptions {\n    calendar?: string;\n    start: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends BaseClass {\n    private _poll = new BehaviorSubject(0);\n    private _options = new BehaviorSubject<ScheduleOptions>({\n        start: Date.now(),\n    });\n    private _loading = new BehaviorSubject<string>('');\n    private _schedule = new BehaviorSubject<BookingLike[]>([]);\n\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n    public readonly schedule = this._loading.asObservable();\n\n    public readonly events: Observable<BookingLike[]> = combineLatest([\n        this._options,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        mergeMap(([options]) => {\n            this._loading.next('Loading schedule...');\n            const query: any = {\n                period_start: getUnixTime(startOfDay(options.start)),\n                period_end: getUnixTime(addDays(endOfDay(options.start), 6)),\n            };\n            if (options.calendar) {\n                query.calendar = options.calendar;\n            }\n            this._schedule.next(\n                this._schedule\n                    .getValue()\n                    .filter(\n                        (_) =>\n                            !timePeriodsIntersect(\n                                query.period_start * 1000,\n                                query.period_end * 1000,\n                                _.date,\n                                _.date + _.duration * 60 * 1000\n                            )\n                    )\n            );\n            return forkJoin([\n                queryEvents({ ...query }),\n                queryBookings({ ...query, type: 'desk' }),\n            ]);\n        }),\n        map(([events, bookings]) => {\n            const list = [\n                ...this._schedule.getValue(),\n                ...events,\n                ...bookings.filter(_ => _.status !== 'declined'),\n            ].sort((a, b) => a.date - b.date);\n            this._schedule.next(unique(list, 'id') as any);\n            return list;\n        }),\n        catchError((_) => []),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<ScheduleOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter } from 'date-fns';\nimport { BookingLike } from './schedule-state.service';\n\n@Component({\n    selector: '[schedule-list-item]',\n    template: `\n        <ng-container [ngSwitch]=\"item?.id\">\n            <div *ngSwitchCase=\"'date'\">\n                <div class=\"mx-4 w-full h-12 text-xl flex items-center\">\n                    {{ item.date | date: 'longDate' }} ({{ item.duration }})\n                </div>\n                <div\n                    class=\"mx-4 w-full h-10 text-lg text-center font-normal opacity-60\"\n                    *ngIf=\"!item.duration\"\n                >\n                    No events for {{ item.date | date: 'longDate' }}\n                </div>\n            </div>\n            <a\n                mat-button\n                *ngSwitchDefault\n                class=\"rounded-none my-1 mx-4 w-[calc(100%-2rem)] h-20 bg-white hover:shadow p-0\"\n                [class.opacity-50]=\"has_ended\"\n                [routerLink]=\"['/schedule', 'view', item?.id, type]\"\n            >\n                <div class=\"flex items-center border border-gray-200 \">\n                    <div\n                        status\n                        class=\"h-20 w-20 flex flex-col items-center justify-center text-white leading-tight\"\n                        [class.bg-success]=\"status === 'approved'\"\n                        [class.bg-pending]=\"status === 'tentative'\"\n                        [class.bg-error]=\"status === 'declined'\"\n                    >\n                        <app-icon class=\"text-2xl\">{{ icon }}</app-icon>\n                        <div class=\"font-normal\">\n                            {{\n                                item?.all_day\n                                    ? 'All Day'\n                                    : (item?.date | date: 'shortTime')\n                            }}\n                        </div>\n                        <div class=\"capitalize text-xs font-medium\">\n                            ({{ status }})\n                        </div>\n                    </div>\n                    <div class=\"flex-1 flex flex-col text-left p-2\">\n                        <div class=\"text-xl pl-1\">\n                            {{ item?.title || 'Untitled Event' }}\n                        </div>\n                        <div\n                            class=\"flex items-center font-normal\"\n                            *ngIf=\"item?.location || item?.description\"\n                        >\n                            <app-icon class=\"text-lg mr-1\">place</app-icon>\n                            <span>\n                                {{\n                                    item?.location || item?.description\n                                        | slice: 0:255\n                                }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </ng-container>\n    `,\n})\nexport class ScheduleListItemComponent {\n    @Input() public item: BookingLike;\n\n    public get type() {\n        return this.item instanceof Booking ? 'booking' : 'event'; \n    }\n\n    public get has_ended() {\n        return (\n            !this.item ||\n            this.item.id === 'date' ||\n            isAfter(new Date(), this.item.date + this.item.duration * 60 * 1000)\n        );\n    }\n\n    public get icon() {\n        if (this.status === 'declined') return 'cancel';\n        if (this.item.asset_id) {\n            switch ((this.item as Booking).booking_type) {\n                case 'desk':\n                    return 'view_quilt';\n                case 'parking':\n                    return 'local_parking';\n            }\n        }\n        return 'event';\n    }\n\n    public get status() {\n        if (!this.item || this.item.id === 'date') return 'declined';\n        return this.item.status;\n    }\n}\n","import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { currentUser } from '@placeos/common';\nimport { addDays, addMonths, isSameDay } from 'date-fns';\nimport { map, take } from 'rxjs/operators';\nimport { BookingLike, ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-list',\n    template: `\n        <div\n            class=\"w-full h-16 flex items-center justify-between bg-white border-b border-gray-300 shadow p-2\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"h-[3.25rem]\">\n                <mat-select [placeholder]=\"user?.name\">\n                    <mat-option>{{ user?.name }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex items-center space-x-2\">\n                <button\n                    mat-button\n                    class=\"clear underline\"\n                    [matMenuTriggerFor]=\"legend\"\n                >\n                    Legend\n                </button>\n                <button mat-icon-button class=\"relative\" #dateMenu>\n                    <app-icon>event</app-icon>\n                    <input\n                        matInput\n                        class=\"opacity-0 absolute inset-0\"\n                        [ngModel]=\"date | async\"\n                        (ngModelChange)=\"scrollTo($event)\"\n                        [matDatepicker]=\"picker\"\n                        [min]=\"today\"\n                        [max]=\"max_date\"\n                    />\n\n                    <mat-datepicker-toggle\n                        class=\"opacity-0 absolute inset-0\"\n                        matSuffix\n                        [for]=\"picker\"\n                    ></mat-datepicker-toggle>\n                </button>\n                <mat-datepicker #picker></mat-datepicker>\n            </div>\n        </div>\n        <div class=\"w-full flex-1 overflow-hidden bg-gray-100\">\n            <cdk-virtual-scroll-viewport\n                itemSize=\"88\"\n                class=\"h-full w-full\"\n                (scrolledIndexChange)=\"updateDate($event)\"\n            >\n                <div\n                    schedule-list-item\n                    *cdkVirtualFor=\"\n                        let item of event_list | async;\n                        trackBy: trackByFn\n                    \"\n                    [item]=\"item\"\n                ></div>\n            </cdk-virtual-scroll-viewport>\n        </div>\n        <mat-progress-bar\n            mode=\"indeterminate\"\n            class=\"w-full\"\n            *ngIf=\"loading | async\"\n        ></mat-progress-bar>\n        <mat-menu #legend=\"matMenu\" xPosition=\"before\">\n            <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                <div class=\"bg-success h-2 w-2 rounded-full mr-4\"></div>\n                Approved\n            </div>\n            <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                <div class=\"bg-pending h-2 w-2 rounded-full mr-4\"></div>\n                Tentative\n            </div>\n            <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                <div class=\"bg-error h-2 w-2 rounded-full mr-4\"></div>\n                Declined\n            </div>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleListComponent implements OnInit, OnDestroy {\n    public readonly today = new Date();\n    public readonly max_date = addMonths(this.today, 4);\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly date = this.options.pipe(map((_) => new Date(_.start)));\n\n    public readonly event_list = this._state.events.pipe(\n        map((list) => {\n            let items = [];\n            let start = new Date(this.today);\n            while (start < this.max_date) {\n                const found = list.filter((_) => isSameDay(start, _.date));\n                items = found.length\n                    ? [\n                          ...items,\n                          {\n                              id: 'date',\n                              date: start.valueOf(),\n                              duration: found.length,\n                          },\n                          ...found,\n                      ]\n                    : [\n                          ...items,\n                          { id: 'date', date: start.valueOf(), duration: 0 },\n                      ];\n                start = addDays(start, 1);\n            }\n            return items;\n        })\n    );\n\n    public get user() {\n        return currentUser();\n    }\n\n    @ViewChild(CdkVirtualScrollViewport, { static: true })\n    private _viewport: CdkVirtualScrollViewport;\n\n    constructor(private _state: ScheduleStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n\n    public setDate(date: Date) {\n        this._state.setOptions({ start: date.valueOf() });\n    }\n\n    public async updateDate(index) {\n        const events = (await this.event_list.pipe(take(1)).toPromise()) || [];\n        const event = events[index] || {};\n        if (event) this.setDate(event.date);\n    }\n\n    public async scrollTo(date: Date) {\n        const events = await this.event_list.pipe(take(1)).toPromise();\n        const index = events.findIndex(\n            (_) => _.id === 'date' && isSameDay(_.date, date)\n        );\n        if (index >= 0 && this._viewport) {\n            let position = 0;\n            for (let i = 0; i < events.length && i < index; i++) {\n                if (events[i].id === 'date' && events[i].duration > 0)\n                    position += 88 / 88;\n                else position += 1;\n            }\n            this._viewport.scrollTo({\n                top: Math.round(position * 88),\n                behavior: 'smooth',\n            });\n        }\n        this.setDate(date);\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(idx: number, event: BookingLike) {\n        return event ? `${event.id}|${event.date}` : undefined;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    Booking,\n    BookingFormService,\n    rejectBooking,\n    showBooking,\n} from '@placeos/bookings';\nimport {\n    BaseClass,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { addMinutes, formatDuration, isAfter } from 'date-fns';\nimport { MapLocateModalComponent } from '../overlays/map-locate-modal.component';\n\n@Component({\n    selector: 'schedule-view-booking',\n    template: `\n        <div topbar class=\"\">\n            <a\n                button\n                class=\"clear h-[2.75rem] text-white\"\n                mat-button\n                [routerLink]=\"['/schedule']\"\n            >\n                <div class=\"flex items-center justify-center h-full\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <span class=\"ml-2 mx-4\">Back</span>\n                </div>\n            </a>\n        </div>\n        <div\n            class=\"flex-1 w-full flex flex-col items-center bg-gray-200 p-4 overflow-auto\"\n        >\n            <div\n                class=\"max-w-full w-[28rem] bg-white border border-gray-300 px-4 pb-4\"\n                *ngIf=\"event; else load_state\"\n            >\n                <h2 class=\"text-xl uppercase font-medium w-full my-4\">\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"flex items-center py-2 space-x-2 border-b border-gray-200 w-full\"\n                >\n                    <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                        <app-icon>event</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">\n                        {{ event.date | date: 'longDate' }} at\n                        {{ event.date | date: 'shortTime' }} ~\n                        {{\n                            event.date + event.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center py-2 space-x-2 border-b border-gray-200 w-full\"\n                >\n                    <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                        <app-icon>schedule</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">{{ duration }}</div>\n                </div>\n                <div\n                    class=\"flex items-center py-2 space-x-2 w-full\"\n                    *ngIf=\"event.asset_id\"\n                >\n                    <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                        <app-icon>menu_book</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">\n                        {{ event.description || '&lt;No Asset&gt;' }}\n                    </div>\n                    <button\n                        mat-button\n                        locate\n                        *ngIf=\"event.extension_data.map_id\"\n                        class=\"bg-transparent border-none underline text-black\"\n                        (click)=\"viewLocation()\"\n                    >\n                        Map\n                    </button>\n                </div>\n                <div\n                    class=\"flex items-center justify-center space-x-2 mt-4\"\n                    *ngIf=\"!has_ended\"\n                >\n                    <button\n                        mat-button\n                        remove\n                        class=\"w-32 error inverse\"\n                        [disabled]=\"loading\"\n                        (click)=\"confirmDelete()\"\n                    >\n                        {{ is_host ? 'Delete' : 'Decline' }} Event\n                    </button>\n                </div>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading booking data...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n\n            [topbar] {\n                background-color: #00539f;\n            }\n\n            [list] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class ScheduleViewBookingComponent extends BaseClass {\n    @Input() public event: Booking;\n\n    public get is_host() {\n        return this.event?.user_email === currentUser()?.email;\n    }\n\n    public get duration() {\n        return formatDuration({\n            hours: Math.floor(this.event?.duration / 60),\n            minutes: this.event?.duration % 60,\n        });\n    }\n\n    public get has_ended() {\n        return (\n            this.event &&\n            isAfter(\n                new Date(),\n                addMinutes(this.event.date, this.event.duration)\n            )\n        );\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _bookings: BookingFormService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(async (params) => {\n                if (params.has('id')) {\n                    this.event = await showBooking(params.get('id'))\n                        .toPromise()\n                        .catch(() => null);\n                }\n            })\n        );\n        this.timeout(\n            'return',\n            () => (!this.event ? this._router.navigate(['/schedule']) : ''),\n            8 * 1000\n        );\n    }\n\n    public viewLocation() {\n        this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this.event.asset_id,\n                    map_id: this.event.extension_data.map_id,\n                    name: this.event.description,\n                    zones: this.event.zones,\n                },\n            },\n        });\n    }\n\n    public editEvent() {\n        this._bookings.newForm(this.event);\n        this._router.navigate(['/book', 'desks', 'form']);\n    }\n\n    public async confirmDelete() {\n        const details = await openConfirmModal(\n            {\n                title: `${this.is_host ? 'Delete' : 'Decline'} event`,\n                content: `Are you sure you wish to ${\n                    this.is_host ? 'delete' : 'decline'\n                } this event?`,\n                icon: { content: this.is_host ? 'delete' : 'event_busy' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing booking...');\n        await rejectBooking(this.event.id)\n            .toPromise()\n            .catch((e) => {\n                details.loading('');\n                notifyError(`Error removing booking. ${e}`);\n                throw e;\n            });\n        notifySuccess('Successfully removed booking.');\n        this._router.navigate(['/schedule']);\n        details.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    BaseClass,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    removeEvent,\n    showEvent,\n} from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { formatDuration } from 'date-fns';\nimport { MapLocateModalComponent } from '../overlays/map-locate-modal.component';\n\n@Component({\n    selector: 'schedule-view-event',\n    template: `\n        <div topbar class=\"\">\n            <a\n                button\n                class=\"clear h-[2.75rem] text-white\"\n                mat-button\n                [routerLink]=\"['/schedule']\"\n            >\n                <div class=\"flex items-center justify-center h-full\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <span class=\"ml-2 mx-4\">Back</span>\n                </div>\n            </a>\n        </div>\n        <div\n            class=\"flex-1 w-full flex flex-col items-center bg-gray-200 p-4 overflow-auto\"\n        >\n            <div\n                class=\"max-w-full w-[28rem] bg-white border border-gray-300 px-4 pb-4\"\n                *ngIf=\"event; else load_state\"\n            >\n                <h2 class=\"text-xl uppercase font-medium w-full my-4\">\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"flex items-center py-2 space-x-2 border-b border-gray-200 w-full\"\n                >\n                    <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                        <app-icon>event</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">\n                        {{ event.date | date: 'longDate' }} at\n                        {{ event.date | date: 'shortTime' }} ~\n                        {{\n                            event.date + event.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center py-2 space-x-2 border-b border-gray-200 w-full\"\n                >\n                    <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                        <app-icon>schedule</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">{{ duration }}</div>\n                </div>\n                <div class=\"border-b border-gray-200 w-full\">\n                    <div class=\"flex items-center py-2 space-x-2 \">\n                        <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate\">\n                            {{ event.resources?.length }} Space(s)\n                        </div>\n                        <button\n                            mat-button\n                            [disabled]=\"!event.resources?.length\"\n                            class=\"clear bg-transparent border-none underline\"\n                            (click)=\"show_spaces = !show_spaces\"\n                        >\n                            {{ show_spaces ? 'Hide' : 'Show' }}\n                        </button>\n                    </div>\n                    <div\n                        list\n                        [style.height]=\"\n                            !show_spaces\n                                ? '0'\n                                : event.resources?.length * 2.5 + 'rem'\n                        \"\n                        class=\"overflow-hidden\"\n                    >\n                        <div\n                            class=\"flex items-center h-10 pl-12\"\n                            *ngFor=\"let space of event.resources\"\n                        >\n                            <span class=\"flex-1 truncate\">\n                                {{ space.display_name || space.name }} [{{\n                                    space.level?.display_name ||\n                                        space.level?.name\n                                }}]\n                            </span>\n                            <span\n                                class=\"h-2 w-2 rounded mr-2\"\n                                [class.bg-success]=\"\n                                    space.response_status === 'accepted'\n                                \"\n                                [class.bg-pending]=\"\n                                    space.response_status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    space.response_status === 'declined'\n                                \"\n                            ></span>\n                            <button\n                                mat-button\n                                locate\n                                class=\"bg-transparent border-none underline text-black\"\n                                (click)=\"viewLocation(space)\"\n                            >\n                                Map\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"border-b border-gray-200 w-full\">\n                    <div class=\"flex items-center py-2 space-x-2 \">\n                        <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                            <app-icon>group</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate\">\n                            {{ event.attendees?.length || 0 }}\n                            Attendee(s)\n                        </div>\n                        <button\n                            mat-button\n                            [disabled]=\"!event.attendees?.length\"\n                            class=\"clear bg-transparent border-none underline\"\n                            (click)=\"show_people = !show_people\"\n                        >\n                            {{ show_people ? 'Hide' : 'Show' }}\n                        </button>\n                    </div>\n                    <div\n                        list\n                        [style.height]=\"\n                            !show_people\n                                ? '0'\n                                : event.attendees.length * 3 + 'rem'\n                        \"\n                        class=\"overflow-hidden\"\n                    >\n                        <div\n                            class=\"flex items-center h-12 pl-12 pr-2 space-x-2\"\n                            *ngFor=\"let user of event.attendees\"\n                        >\n                            <a-user-avatar\n                                class=\"text-sm\"\n                                [user]=\"user\"\n                            ></a-user-avatar>\n                            <span class=\"flex-1 truncate\">{{\n                                user.name || user.email\n                            }}</span>\n                            <span\n                                class=\"h-2 w-2 rounded mr-4\"\n                                [class.bg-success]=\"\n                                    user.response_status === 'accepted'\n                                \"\n                                [class.bg-pending]=\"\n                                    user.response_status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    user.response_status === 'declined'\n                                \"\n                            ></span>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center justify-center space-x-2 mt-4\"\n                    *ngIf=\"event.state !== 'done'\"\n                >\n                    <button\n                        mat-button\n                        edit\n                        class=\"w-32\"\n                        [disabled]=\"loading\"\n                        (click)=\"editEvent()\"\n                        *ngIf=\"is_host\"\n                    >\n                        Edit Event\n                    </button>\n                    <button\n                        mat-button\n                        remove\n                        class=\"w-32 error inverse\"\n                        [disabled]=\"loading\"\n                        (click)=\"confirmDelete()\"\n                    >\n                        {{ is_host ? 'Delete' : 'Decline' }} Event\n                    </button>\n                </div>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading event data...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n\n            [topbar] {\n                background-color: #00539f;\n            }\n\n            [list] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class ScheduleViewEventComponent extends BaseClass {\n    @Input() public event: CalendarEvent;\n\n    public get is_host() {\n        return this.event?.host;\n    }\n\n    public get duration() {\n        return formatDuration({\n            hours: Math.floor(this.event?.duration / 60),\n            minutes: this.event?.duration % 60,\n        });\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _events: EventFormService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(async (params) => {\n                if (params.has('id')) {\n                    this.event = await showEvent(params.get('id')).toPromise();\n                }\n            })\n        );\n        this.timeout(\n            'return',\n            () => (!this.event ? this._router.navigate(['/schedule']) : ''),\n            8 * 1000\n        );\n    }\n\n    public viewLocation(space: Space) {\n        this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: space },\n        });\n    }\n\n    public editEvent() {\n        if ('event_start' in this.event) {\n            this._events.newForm(this.event);\n            this._router.navigate(['/book', 'spaces', 'form']);\n        }\n    }\n\n    public async confirmDelete() {\n        const details = await openConfirmModal(\n            {\n                title: `${this.is_host ? 'Delete' : 'Decline'} event`,\n                content: `Are you sure you wish to ${\n                    this.is_host ? 'delete' : 'decline'\n                } this event?`,\n                icon: { content: this.is_host ? 'delete' : 'event_busy' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing event...');\n        await removeEvent(this.event.id)\n            .toPromise()\n            .catch((e) => {\n                details.loading('');\n                notifyError(`Error removing event. ${e}`);\n                throw e;\n            });\n        notifySuccess('Successfully removed event.');\n        this._router.navigate(['/schedule']);\n        details.close();\n    }\n}\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ScheduleListItemComponent } from './schedule-list-item.component';\nimport { ScheduleListComponent } from './schedule-list.component';\nimport { ScheduleViewBookingComponent } from './schedule-view-booking.component';\nimport { ScheduleViewEventComponent } from './schedule-view-event.component';\nimport { ScheduleComponent } from './schedule.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: ScheduleComponent,\n        children: [\n            { path: '', component: ScheduleListComponent },\n            { path: 'view/:id/booking', component: ScheduleViewBookingComponent },\n            { path: 'view/:id/event', component: ScheduleViewEventComponent },\n        ],\n    },\n    { path: '*', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleListComponent,\n        ScheduleListItemComponent,\n        ScheduleViewBookingComponent,\n        ScheduleViewEventComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        SharedComponentModule,\n        ScrollingModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppScheduleModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'schedule',\n    template: `\n        <topbar></topbar>\n        <div class=\"flex-1 flex sm:flex-row flex-col-reverse h-1/2\">\n            <main\n                class=\"relative flex flex-col flex-1 h-1/2 sm:h-auto overflow-hidden\"\n            >\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n        <footer-menu></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleComponent {}\n"],"sourceRoot":"webpack:///","file":"apps_workplace_src_app_schedule_schedule_module_ts.js"}