{"version":3,"sources":["./apps/workplace/src/app/schedule/schedule-state.service.ts","./apps/workplace/src/app/schedule/schedule-list-item.component.ts","./apps/workplace/src/app/schedule/schedule-list.component.ts","./apps/workplace/src/app/schedule/schedule-view.component.ts","./apps/workplace/src/app/schedule/schedule.module.ts","./apps/workplace/src/app/schedule/schedule.component.ts"],"names":["ScheduleStateService","_poll","BehaviorSubject","_options","start","Date","now","_loading","_schedule","options","this","asObservable","loading","schedule","events","combineLatest","pipe","debounceTime","mergeMap","next","query","period_start","getUnixTime","startOfDay","period_end","addDays","endOfDay","calendar","getValue","filter","_","date","duration","forkJoin","type","map","bookings","list","sort","a","b","catchError","tap","shareReplay","delay","interval","clearInterval","ScheduleListItemComponent","item","id","isAfter","status","asset_id","ScheduleListComponent","_state","today","max_date","addMonths","event_list","items","found","isSameDay","length","valueOf","startPolling","stopPolling","setOptions","index","event","take","toPromise","setDate","findIndex","_viewport","position","i","scrollTo","top","Math","round","behavior","idx","undefined","updateDate","ScheduleViewComponent","_route","_router","_dialog","_events","super","host","user_email","email","subscription","paramMap","subscribe","params","has","get","catch","timeout","navigate","space","open","width","maxWidth","maxHeight","data","newForm","details","title","is_host","content","icon","reason","fn","e","close","ROUTES","path","component","ScheduleComponent","children","redirectTo","AppScheduleModule"],"mappings":"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","file":"apps_workplace_src_app_schedule_schedule_module_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Booking, queryBookings } from '@placeos/bookings';\nimport { BaseClass, timePeriodsIntersect, unique } from '@placeos/common';\nimport { CalendarEvent, queryEvents } from '@placeos/events';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { catchError, debounceTime, map, mergeMap, shareReplay, tap } from 'rxjs/operators';\n\nexport type BookingLike = CalendarEvent & Booking;\n\nexport interface ScheduleOptions {\n    calendar?: string;\n    start: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends BaseClass {\n    private _poll = new BehaviorSubject(0);\n    private _options = new BehaviorSubject<ScheduleOptions>({\n        start: Date.now(),\n    });\n    private _loading = new BehaviorSubject<string>('');\n    private _schedule = new BehaviorSubject<BookingLike[]>([]);\n\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n    public readonly schedule = this._loading.asObservable();\n\n    public readonly events: Observable<BookingLike[]> = combineLatest([\n        this._options,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        mergeMap(([options]) => {\n            this._loading.next('Loading schedule...');\n            const query: any = {\n                period_start: getUnixTime(startOfDay(options.start)),\n                period_end: getUnixTime(addDays(endOfDay(options.start), 6)),\n            };\n            if (options.calendar) {\n                query.calendar = options.calendar;\n            }\n            this._schedule.next(\n                this._schedule\n                    .getValue()\n                    .filter(\n                        (_) =>\n                            !timePeriodsIntersect(\n                                query.period_start * 1000,\n                                query.period_end * 1000,\n                                _.date,\n                                _.date + _.duration * 60 * 1000\n                            )\n                    )\n            );\n            return forkJoin([\n                queryEvents({ ...query }),\n                queryBookings({ ...query, type: 'desk' }),\n            ]);\n        }),\n        map(([events, bookings]) => {\n            const list = [\n                ...this._schedule.getValue(),\n                ...events,\n                ...bookings,\n            ].sort((a, b) => a.date - b.date);\n            this._schedule.next(unique(list, 'id') as any);\n            return list;\n        }),\n        catchError((_) => []),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<ScheduleOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { isAfter } from 'date-fns';\nimport { BookingLike } from './schedule-state.service';\n\n@Component({\n    selector: '[schedule-list-item]',\n    template: `\n        <ng-container [ngSwitch]=\"item?.id\">\n            <div *ngSwitchCase=\"'date'\">\n                <div class=\"mx-4 w-full h-12 text-xl flex items-center\">\n                    {{ item.date | date: 'longDate' }} ({{ item.duration }})\n                </div>\n                <div\n                    class=\"mx-4 w-full h-10 text-lg text-center font-normal opacity-60\"\n                    *ngIf=\"!item.duration\"\n                >\n                    No events for {{ item.date | date: 'longDate' }}\n                </div>\n            </div>\n            <a\n                mat-button\n                *ngSwitchDefault\n                class=\"rounded-none my-1 mx-4 w-[calc(100%-2rem)] h-20 bg-white border border-gray-200 hover:shadow p-0\"\n                [class.opacity-50]=\"has_ended\"\n                [routerLink]=\"['/schedule', 'view', item?.id]\"\n            >\n                <div class=\" flex items-center\">\n                    <div\n                        status\n                        class=\"h-20 w-20 flex flex-col items-center justify-center text-white leading-tight\"\n                        [class.bg-success]=\"status === 'approved'\"\n                        [class.bg-pending]=\"status === 'tentative'\"\n                        [class.bg-error]=\"status === 'declined'\"\n                    >\n                        <app-icon class=\"text-2xl\">{{ icon }}</app-icon>\n                        <div class=\"font-normal\">\n                            {{\n                                item?.all_day\n                                    ? 'All Day'\n                                    : (item?.date | date: 'shortTime')\n                            }}\n                        </div>\n                        <div class=\"capitalize text-xs font-medium\">\n                            ({{ status }})\n                        </div>\n                    </div>\n                    <div class=\"flex-1 flex flex-col text-left p-2\">\n                        <div class=\"text-xl pl-1\">\n                            {{ item?.title || 'Untitled Event' }}\n                        </div>\n                        <div class=\"flex items-center font-normal\">\n                            <app-icon class=\"text-lg mr-1\">place</app-icon>\n                            <span>{{ item?.location }}</span>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </ng-container>\n    `,\n})\nexport class ScheduleListItemComponent {\n    @Input() public item: BookingLike;\n\n    public get has_ended() {\n        return (\n            !this.item ||\n            this.item.id === 'date' ||\n            isAfter(new Date(), this.item.date + this.item.duration * 60 * 1000)\n        );\n    }\n\n    public get icon() {\n        if (this.status === 'declined') return 'cancel';\n        if (this.item.asset_id) {\n            switch ((this.item as Booking).type) {\n                case 'desk':\n                    return 'view_quilt';\n                case 'parking':\n                    return 'local_parking';\n            }\n        }\n        return 'event';\n    }\n\n    public get status() {\n        if (!this.item || this.item.id === 'date') return 'declined';\n        return this.item.status;\n    }\n}\n","import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { currentUser } from '@placeos/common';\nimport { addDays, addMonths, isSameDay } from 'date-fns';\nimport { map, take } from 'rxjs/operators';\nimport { BookingLike, ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'schedule-list',\n    template: `\n        <div\n            class=\"w-full h-16 flex items-center justify-between bg-white border-b border-gray-300 shadow p-2\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"h-[3.25rem]\">\n                <mat-select [placeholder]=\"user.name\">\n                    <mat-option>{{ user.name }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex items-center space-x-2\">\n                <button\n                    mat-button\n                    class=\"clear underline\"\n                    [matMenuTriggerFor]=\"legend\"\n                >\n                    Legend\n                </button>\n                <button mat-icon-button class=\"relative\" #dateMenu>\n                    <app-icon>event</app-icon>\n                    <input\n                        matInput\n                        class=\"opacity-0 absolute inset-0\"\n                        [ngModel]=\"date | async\"\n                        (ngModelChange)=\"scrollTo($event)\"\n                        [matDatepicker]=\"picker\"\n                        [min]=\"today\"\n                        [max]=\"max_date\"\n                    />\n\n                    <mat-datepicker-toggle\n                        class=\"opacity-0 absolute inset-0\"\n                        matSuffix\n                        [for]=\"picker\"\n                    ></mat-datepicker-toggle>\n                </button>\n                <mat-datepicker #picker></mat-datepicker>\n            </div>\n        </div>\n        <div class=\"w-full flex-1 overflow-hidden bg-gray-100\">\n            <cdk-virtual-scroll-viewport itemSize=\"88\" class=\"h-full w-full\" (scrolledIndexChange)=\"updateDate($event)\">\n                <div schedule-list-item\n                    *cdkVirtualFor=\"let item of event_list | async; trackBy: trackByFn\"\n                    [item]=\"item\"\n                ></div>\n            </cdk-virtual-scroll-viewport>\n        </div>\n        <mat-progress-bar\n            mode=\"indeterminate\"\n            class=\"w-full\"\n            *ngIf=\"loading | async\"\n        ></mat-progress-bar>\n        <mat-menu #legend=\"matMenu\" xPosition=\"before\">\n            <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                <div class=\"bg-success h-2 w-2 rounded-full mr-4\"></div>\n                Approved\n            </div>\n            <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                <div class=\"bg-pending h-2 w-2 rounded-full mr-4\"></div>\n                Tentative\n            </div>\n            <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                <div class=\"bg-error h-2 w-2 rounded-full mr-4\"></div>\n                Declined\n            </div>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleListComponent implements OnInit, OnDestroy {\n    public readonly today = new Date();\n    public readonly max_date = addMonths(this.today, 4);\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly date = this.options.pipe(map((_) => new Date(_.start)));\n\n    public readonly event_list = this._state.events.pipe(\n        map((list) => {\n            let items = [];\n            let start = new Date(this.today);\n            while (start < this.max_date) {\n                const found = list.filter((_) => isSameDay(start, _.date));\n                items = found.length\n                    ? [\n                          ...items,\n                          { id: 'date', date: start.valueOf(), duration: found.length },\n                          ...found,\n                      ]\n                    : [\n                          ...items,\n                          { id: 'date', date: start.valueOf(), duration: 0 },\n                      ];\n                start = addDays(start, 1);\n            }\n            return items;\n        })\n    );\n\n    public get user() {\n        return currentUser();\n    }\n\n    @ViewChild(CdkVirtualScrollViewport) private _viewport: CdkVirtualScrollViewport;\n\n    constructor(private _state: ScheduleStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n\n    public setDate(date: Date) {\n        this._state.setOptions({ start: date.valueOf() });\n    }\n\n    public async updateDate(index) {\n        const events = await this.event_list.pipe(take(1)).toPromise();\n        const event = events[index];\n        if (event) this.setDate(event.date);\n    }\n\n    public async scrollTo(date: Date) {\n        const events = await this.event_list.pipe(take(1)).toPromise();\n        const index = events.findIndex(_ => _.id === 'date' && isSameDay(_.date, date));\n        if (index >= 0 && this._viewport) {\n            let position = 0;\n            for (let i = 0; i < events.length && i < index; i++) {\n                if (events[i].id === 'date' && events[i].duration > 0) position += 88 / 88;\n                else position += 1;\n            }\n            this._viewport.scrollTo({ top: Math.round(position * 88), behavior: 'smooth' });\n        }\n        this.setDate(date);\n    }\n\n\n    /* istanbul ignore next */\n    public trackByFn(idx: number, event: BookingLike) {\n        return event ? `${event.id}|${event.date}` : undefined;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Booking, removeBooking, showBooking } from '@placeos/bookings';\nimport { BaseClass, currentUser, notifyError, notifySuccess, openConfirmModal } from '@placeos/common';\nimport { CalendarEvent, EventStateService, removeEvent, showEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { isAfter } from 'date-fns';\nimport { ViewRoomModalComponent } from '../overlays/view-room-modal.component';\n\n@Component({\n    selector: 'schedule-view',\n    template: `\n        <div topbar class=\"\">\n            <a\n                button\n                class=\"clear h-[2.75rem] text-white\"\n                mat-button\n                [routerLink]=\"['/schedule']\"\n            >\n                <div class=\"flex items-center justify-center h-full\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <span class=\"ml-2 mx-4\">Back</span>\n                </div>\n            </a>\n        </div>\n        <div\n            class=\"flex-1 w-full flex flex-col items-center bg-gray-200 p-4 overflow-auto\"\n        >\n            <div\n                class=\"max-w-full w-[28rem] bg-white border border-gray-300 px-4 pb-4\"\n                *ngIf=\"event; else load_state\"\n            >\n                <h2 class=\"text-xl uppercase font-medium w-full my-4\">\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"flex items-center py-2 space-x-2 border-b border-gray-200 w-full\"\n                >\n                    <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                        <app-icon>event</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">\n                        {{ event.date | date: 'longDate' }} at\n                        {{ event.date | date: 'shortTime' }} ~\n                        {{\n                            event.date + event.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center py-2 space-x-2 border-b border-gray-200 w-full\"\n                >\n                    <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                        <app-icon>schedule</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">\n                        {{ event.duration }} minutes\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center py-2 space-x-2 border-b border-gray-200 w-full\"\n                    *ngIf=\"event.asset_id\"\n                >\n                    <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                        <app-icon>menu_book</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">\n                        {{ event.asset_id || '&lt;No Asset&gt;' }}\n                    </div>\n                </div>\n                <div\n                    class=\"border-b border-gray-200 w-full\"\n                    *ngIf=\"!event.asset_id\"\n                >\n                    <div class=\"flex items-center py-2 space-x-2 \">\n                        <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate\">\n                            {{ event.resources?.length }} Space(s)\n                        </div>\n                        <button\n                            mat-button\n                            [disabled]=\"!event.resources?.length\"\n                            class=\"clear bg-transparent border-none underline\"\n                            (click)=\"show_spaces = !show_spaces\"\n                        >\n                            {{ show_spaces ? 'Hide' : 'Show' }}\n                        </button>\n                    </div>\n                    <div\n                        list\n                        [style.height]=\"\n                            !show_spaces\n                                ? '0'\n                                : event.resources?.length * 2.5 + 'rem'\n                        \"\n                        class=\"overflow-hidden\"\n                    >\n                        <div\n                            class=\"flex items-center h-10 pl-12\"\n                            *ngFor=\"let space of event.resources\"\n                        >\n                            <span class=\"flex-1 truncate\">\n                                {{ space.display_name || space.name }} [{{\n                                    space.level?.display_name ||\n                                        space.level?.name\n                                }}]\n                            </span>\n                            <span\n                                class=\"h-2 w-2 rounded mr-2\"\n                                [class.bg-success]=\"\n                                    space.response_status === 'accepted'\n                                \"\n                                [class.bg-pending]=\"\n                                    space.response_status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    space.response_status === 'declined'\n                                \"\n                            ></span>\n                            <button\n                                mat-button\n                                class=\"bg-transparent border-none underline text-black\"\n                                (click)=\"viewLocation(space)\"\n                            >\n                                Map\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"border-b border-gray-200 w-full\"\n                    *ngIf=\"!event.asset_id\"\n                >\n                    <div class=\"flex items-center py-2 space-x-2 \">\n                        <div class=\"p-2 rounded-full bg-gray-300 mr-2\">\n                            <app-icon>group</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate\">\n                            {{ event.attendees.length || 0 }}\n                            Attendee(s)\n                        </div>\n                        <button\n                            mat-button\n                            [disabled]=\"!event.attendees?.length\"\n                            class=\"clear bg-transparent border-none underline\"\n                            (click)=\"show_people = !show_people\"\n                        >\n                            {{ show_people ? 'Hide' : 'Show' }}\n                        </button>\n                    </div>\n                    <div\n                        list\n                        [style.height]=\"\n                            !show_people\n                                ? '0'\n                                : event.attendees.length * 3 + 'rem'\n                        \"\n                        class=\"overflow-hidden\"\n                    >\n                        <div\n                            class=\"flex items-center h-12 pl-12 pr-2 space-x-2\"\n                            *ngFor=\"let user of event.attendees\"\n                        >\n                            <a-user-avatar\n                                class=\"text-sm\"\n                                [user]=\"user\"\n                            ></a-user-avatar>\n                            <span class=\"flex-1 truncate\">{{\n                                user.name || user.email\n                            }}</span>\n                            <span\n                                class=\"h-2 w-2 rounded mr-4\"\n                                [class.bg-success]=\"\n                                    user.response_status === 'accepted'\n                                \"\n                                [class.bg-pending]=\"\n                                    user.response_status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    user.response_status === 'declined'\n                                \"\n                            ></span>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center justify-center space-x-2 mt-4\"\n                    *ngIf=\"!has_ended\"\n                >\n                    <button\n                        mat-button\n                        class=\"w-32\"\n                        [disabled]=\"loading\"\n                        (click)=\"editEvent()\"\n                        *ngIf=\"is_host\"\n                    >\n                        Edit Event\n                    </button>\n                    <button\n                        mat-button\n                        class=\"w-32 error inverse\"\n                        [disabled]=\"loading\"\n                        (click)=\"confirmDelete()\"\n                    >\n                        {{ is_host ? 'Delete' : 'Decline' }} Event\n                    </button>\n                </div>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Loading event data...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n\n            [topbar] {\n                background-color: #00539f;\n            }\n\n            [list] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class ScheduleViewComponent extends BaseClass implements OnInit {\n    public event: CalendarEvent | Booking;\n\n    public get is_host() {\n        return (\n            this.event &&\n            ((this.event as CalendarEvent).host ||\n                (this.event as Booking).user_email) === currentUser().email\n        );\n    }\n\n    public get has_ended() {\n        return (\n            this.event &&\n            isAfter(new Date(), this.event.date + this.event.duration)\n        );\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _events: EventStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(async (params) => {\n                if (params.has('id')) {\n                    try {\n                        this.event = await showEvent(\n                            params.get('id')\n                        ).toPromise();\n                    } catch {\n                        this.event = await showBooking(params.get('id'))\n                            .toPromise()\n                            .catch(() => null);\n                    }\n                }\n            })\n        );\n        this.timeout(\n            'return',\n            () => (!this.event ? this._router.navigate(['/schedule']) : ''),\n            8 * 1000\n        );\n    }\n\n    public viewLocation(space: Space) {\n        this._dialog.open(ViewRoomModalComponent, {\n            width: '32em',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space },\n        });\n    }\n\n    public editEvent() {\n        if (this.event instanceof CalendarEvent) {\n            this._events.newForm(this.event);\n            this._router.navigate(['/book', 'spaces', 'form']);\n        }\n    }\n\n    public async confirmDelete() {\n        const details = await openConfirmModal({\n            title: `${this.is_host ? 'Delete' : 'Decline'} event`,\n            content: `Are you sure you wish to ${this.is_host ? 'delete' : 'decline'} this event?`,\n            icon: { content: this.is_host ? 'delete' : 'event_busy' }\n        }, this._dialog);\n        if (details.reason !== 'done') return;\n        details.loading('Removing event...');\n        const fn = this.event instanceof Booking ? removeBooking : removeEvent;\n        await fn(this.event.id).toPromise().catch((e) => {\n            details.loading('');\n            notifyError(`Error removing event. ${e}`);\n            throw e;\n        });\n        notifySuccess('Successfully removed event.');\n        this._router.navigate(['/schedule']);\n        details.close();\n    }\n}\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ScheduleListItemComponent } from './schedule-list-item.component';\nimport { ScheduleListComponent } from './schedule-list.component';\nimport { ScheduleViewComponent } from './schedule-view.component';\nimport { ScheduleComponent } from './schedule.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: ScheduleComponent,\n        children: [\n            { path: '', component: ScheduleListComponent },\n            { path: 'view/:id', component: ScheduleViewComponent },\n        ],\n    },\n    { path: '*', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleListComponent,\n        ScheduleListItemComponent,\n        ScheduleViewComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        SharedComponentModule,\n        ScrollingModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppScheduleModule {}\n","import { Component } from \"@angular/core\";\n\n\n@Component({\n    selector: 'schedule',\n    template: `\n        <topbar></topbar>\n        <div class=\"flex-1 flex sm:flex-row flex-col-reverse h-1/2\">\n            <nav-menu class=\"relative z-10\"></nav-menu>\n            <main\n                class=\"relative flex flex-col flex-1 h-1/2 sm:h-auto overflow-hidden\"\n            >\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleComponent {}\n"],"sourceRoot":"webpack:///"}