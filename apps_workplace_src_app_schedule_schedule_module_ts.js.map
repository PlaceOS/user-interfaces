{"version":3,"sources":["./apps/workplace/src/app/schedule/schedule-state.service.ts","./node_modules/date-fns/esm/isToday/index.js","./apps/workplace/src/app/schedule/event-list/event-list-item.component.ts","./apps/workplace/src/app/schedule/event-list/event-list.component.ts","./apps/workplace/src/app/schedule/event-list/event-view.component.ts","./apps/workplace/src/app/schedule/schedule.component.ts","./apps/workplace/src/app/schedule/view-event/booking-details.component.ts","./apps/workplace/src/app/schedule/view-event/event-edit.component.ts","./apps/workplace/src/app/schedule/view-event/event-details.component.ts","./apps/workplace/src/app/schedule/view-event/view-event.component.ts","./apps/workplace/src/app/schedule/schedule.routes.ts","./apps/workplace/src/app/schedule/schedule.module.ts"],"names":["ScheduleStateService","_calendars","_dialog","_router","super","_loading","BehaviorSubject","_poll","_active_item","_options","date","Date","valueOf","loading","this","asObservable","options","calendars","calendar_list","events","combineLatest","pipe","debounceTime","switchMap","next","start","startOfDay","duration","dirtyDate","requiredArgs","arguments","isSameDay","now","isToday","end","endOfDay","addDays","calendar","period_start","Math","floor","period_end","type","catchError","_","shareReplay","active_item","id","getValue","email","throwError","of","map","_item","first","length","subscribe","setOptions","delay","interval","clearInterval","sessionStorage","booking","setItem","JSON","stringify","navigate","details","title","content","icon","is_event","method","toPromise","err","catch","close","statusText","message","queryParamsHandling","ScheduleEventListItemComponent","isAfter","event","status","isBefore","addMinutes","location","guests","all_day","format","ScheduleEventListComponent","ScheduleEventViewComponent","_state","_el","end_of_week","mapping","count","list","filter","e","min_date","setDate","d","setCalendar","startPolling","ngOnDestroy","stopPolling","day_lists","Array","prototype","slice","call","nativeElement","querySelectorAll","scroll_top","target","scrollTop","active_day","el","offsetTop","getAttribute","timeout","querySelector","scrollIntoView","behavior","inline","scrollTo","onScroll","ScheduleComponent","_route","show_menu","subscription","queryParamMap","params","has","get","BookingDetailsComponent","when","item","add","isSame","deleteEvent","space","name","map_id","asset_id","zones","open","width","maxWidth","maxHeight","data","EventEditComponent","change","form","changes","emit","markAllAsTouched","valid","dialog_ref","componentInstance","reason","console","warn","EventDetailsComponent","_spaces","editing","duplicateEvent","editEvent","creator","formatDuration","minutes","ext","order","items","resources","i","find","attendees","body","catering","catering_items","catering_note","ROUTES","path","component","children","ScheduleViewEventComponent","_location","o","setID","paramMap","param","queryParam","clearTimeout","back","redirectTo","ScheduleModule"],"mappings":"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","file":"apps_workplace_src_app_schedule_schedule_module_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport {\n    Booking,\n    queryBookings,\n    removeBooking,\n    showBooking,\n} from '@placeos/bookings';\nimport { CalendarService } from '@placeos/calendar';\nimport {\n    BaseClass,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    queryEvents,\n    removeEvent,\n    showEvent,\n} from '@placeos/events';\nimport { addDays, endOfDay, isToday, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    Observable,\n    of,\n    throwError,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nexport interface ScheduleOptions {\n    date: number;\n    calendar?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends BaseClass {\n    private _loading = new BehaviorSubject<string>('');\n    private _poll = new BehaviorSubject<boolean>(false);\n\n    private _active_item = new BehaviorSubject<string>('');\n\n    private _options = new BehaviorSubject<ScheduleOptions>({\n        date: new Date().valueOf(),\n    });\n\n    private _item: CalendarEvent | Booking;\n\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly calendars = this._calendars.calendar_list;\n\n    public readonly events: Observable<\n        (CalendarEvent | Booking)[]\n    > = combineLatest([this._options, this._poll]).pipe(\n        debounceTime(1000),\n        switchMap(([options]) => {\n            this._loading.next(' ');\n            const start = startOfDay(options.date).valueOf();\n            let duration = isToday(start) ? 6 : 4;\n            const end = endOfDay(addDays(start, duration)).valueOf();\n            return options.calendar === 'desks'\n                ? queryBookings({\n                      period_start: Math.floor(start / 1000),\n                      period_end: Math.floor(end / 1000),\n                      type: 'desk',\n                  })\n                : queryEvents({\n                      period_start: Math.floor(start / 1000),\n                      period_end: Math.floor(end / 1000),\n                      calendars: options.calendar,\n                  });\n        }),\n        catchError((_) => []),\n        shareReplay(1)\n    );\n\n    public readonly active_item = this._active_item.pipe(\n        debounceTime(500),\n        switchMap((id) => {\n            return id\n                ? showEvent(id, {\n                      calendar:\n                          this._options.getValue().calendar ||\n                          currentUser().email,\n                  })\n                : throwError('No ID');\n        }),\n        catchError((_) =>\n            this._active_item.getValue()\n                ? showBooking(this._active_item.getValue())\n                : of(null)\n        ),\n        catchError((_) => of(null)),\n        map((_: CalendarEvent | Booking | null) => {\n            this._item = _;\n            return _;\n        }),\n        shareReplay()\n    );\n\n    public get date() {\n        return this._options.getValue().date;\n    }\n\n    constructor(\n        private _calendars: CalendarService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n        this.calendars\n            .pipe(first((_) => _?.length > 0))\n            .subscribe((_) => this.setOptions({ calendar: _[0].id }));\n    }\n\n    public setOptions(options: Partial<ScheduleOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setItem(id: string) {\n        this._active_item.next(id);\n    }\n\n    public startPolling(delay: number = 15 * 1000) {\n        this._poll.next(!this._poll.getValue());\n        this.interval(\n            'poll',\n            () => this._poll.next(!this._poll.getValue()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public duplicateEvent() {\n        if (sessionStorage) {\n            const booking = new CalendarEvent({\n                ...(this._item as any),\n                id: '',\n            });\n            sessionStorage.setItem(\n                'STAFF.booking_form',\n                JSON.stringify(booking)\n            );\n        }\n        this._router.navigate(['/book']);\n    }\n\n    public async deleteEvent() {\n        if (!this._item) return;\n        const details = await openConfirmModal(\n            {\n                title: 'Cancel Meeting',\n                content: `Are you sure you want to cancel this meeting: ${this._item.title}`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (!details) return;\n        const is_event = this._item instanceof CalendarEvent;\n        details.loading(\n            `Cancelling ${is_event ? 'meeting' : 'desk booking'}...`\n        );\n        const method = is_event\n            ? removeEvent(this._item.id).toPromise()\n            : removeBooking(this._item.id).toPromise();\n        const err = await method.catch((_) => _);\n        details.close();\n        if (err)\n            return notifyError(\n                `Error unable to cancel ${\n                    is_event ? 'meeting' : 'desk booking'\n                }. Error: ${err.statusText || err.message || err}`\n            );\n        notifySuccess(\n            `Successfully cancelled ${is_event ? 'meeting' : 'desk booking'}.`\n        );\n        this._router.navigate(['/schedule', 'listing'], {\n            queryParamsHandling: 'preserve',\n        });\n    }\n}\n","import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import { Component, HostListener, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { addMinutes, format, isAfter, isBefore } from 'date-fns';\n\nimport { Booking } from '@placeos/bookings';\nimport { CalendarEvent } from '@placeos/events';\n\n@Component({\n    selector: 'schedule-event-item',\n    template: `\n        <a\n            matRipple\n            [routerLink]=\"['/schedule', 'view', this.event.id]\"\n            [queryParams]=\"query\"\n            class=\"flex mb-1\"\n        >\n            <div\n                [class]=\"\n                    'h-20 w-20 flex flex-col items-center justify-center ' +\n                    status\n                \"\n                [class.done]=\"is_done\"\n            >\n                <div class=\"icon\" [ngSwitch]=\"event.status\">\n                    <app-icon *ngSwitchCase=\"'declined'\">cancel</app-icon>\n                    <app-icon *ngSwitchDefault>forum</app-icon>\n                </div>\n                <div>{{ time }}</div>\n                <label *ngIf=\"event.status === 'declined'\">(Cancelled)</label>\n            </div>\n            <div\n                class=\"flex flex-col h-20 flex-1 w-1/2 bg-white p-2 justify-center\"\n            >\n                <div class=\"text-lg font-medium capitalize pl-1 truncate\">\n                    {{ event.title }}\n                </div>\n                <div class=\"flex items-center\">\n                    <app-icon\n                        *ngIf=\"!!location\"\n                        [icon]=\"{\n                            type: 'icon',\n                            class: 'material-icons',\n                            content: 'place'\n                        }\"\n                    ></app-icon>\n                    <div class=\"truncate pl-1\">\n                        {{ location || 'No location' }}\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            .confirmed,\n            .approved {\n                background: #388e3c;\n                color: #fff;\n            }\n\n            .tentative {\n                background: #ffa000;\n                color: #000;\n            }\n\n            .declined,\n            .cancelled {\n                background: #d32f2f;\n                color: #fff;\n            }\n\n            .done {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class ScheduleEventListItemComponent {\n    /** Booking to display */\n    @Input() public event: CalendarEvent | Booking;\n\n    public get isFuture(): boolean {\n        return isAfter(this.event.date, new Date());\n    }\n\n    public get status(): string {\n        return this.event.status;\n    }\n\n    public get is_done(): boolean {\n        return isBefore(\n            addMinutes(this.event.date, this.event.duration),\n            new Date()\n        );\n    }\n\n    /** Display location of the booking event */\n    public get location(): string {\n        if (\n            !this.event ||\n            this.event.type === 'date' ||\n            this.event.type === 'empty'\n        ) {\n            return 'No location';\n        }\n        return this.event.location;\n    }\n\n    /** Image name to display for the event */\n    public get type_image(): string {\n        if (\n            !this.event ||\n            this.event.type === 'date' ||\n            this.event.type === 'empty'\n        ) {\n            return 'block';\n        }\n        if (this.event instanceof CalendarEvent && this.event.guests.length) {\n            return 'external';\n        }\n        return 'book_room';\n    }\n\n    public get time(): string {\n        return this.event.all_day || this.event.duration > 23 * 60\n            ? 'All Day'\n            : format(this.event.date, 'h:mm a');\n    }\n\n    public get query() {\n        return {\n            calendar: (this.event as CalendarEvent).calendar,\n            type: this.event.type,\n        };\n    }\n\n    constructor(private _router: Router) {}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from '@placeos/bookings';\nimport { CalendarEvent } from '@placeos/events';\n\n@Component({\n    selector: 'schedule-event-date-list',\n    template: `\n        <div class=\"text-xl mb-4\">\n            {{ date | date: 'fullDate' }}\n        </div>\n        <ng-container *ngIf=\"events?.length; else empty_state\">\n            <schedule-event-item\n                id=\"{{ i }}\"\n                *ngFor=\"let item of events; let i = index\"\n                [event]=\"item\"\n            ></schedule-event-item>\n        </ng-container>\n        <ng-template #empty_state>\n            <div class=\"p-8\">No events for {{ date | date }}</div>\n        </ng-template>\n        <div class=\"mb-4\"></div>\n    `,\n    styles: [`\n    `],\n})\nexport class ScheduleEventListComponent {\n    @Input() public date: number;\n    @Input() public events: (CalendarEvent | Booking)[];\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { BaseClass, timePeriodsIntersect } from '@placeos/common';\nimport { ScheduleStateService } from '../schedule-state.service';\nimport {\n    addDays,\n    endOfDay,\n    format,\n    isBefore,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'schedule-event-list',\n    template: `\n        <div\n            class=\"flex p-2 items-center bg-white border-b border-gray-200 shadow space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"h-12\">\n                <mat-select\n                    name=\"calendars\"\n                    [ngModel]=\"(options | async).calendar\"\n                    (ngModelChange)=\"setCalendar($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let cal of calendars | async\"\n                        [value]=\"cal.id\"\n                    >\n                        {{ cal.summary || 'Calendar' }}\n                    </mat-option>\n                    <mat-option value=\"desks\">Desks</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-0\"></div>\n            <button mat-button class=\"clear\" [matMenuTriggerFor]=\"legend\">\n                Legend\n            </button>\n            <mat-menu #legend=\"matMenu\">\n                <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                    <div class=\"bg-success h-2 w-2 rounded-full mr-4\"></div>\n                    Approved\n                </div>\n                <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                    <div class=\"bg-pending h-2 w-2 rounded-full mr-4\"></div>\n                    Tentative\n                </div>\n                <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                    <div class=\"bg-error h-2 w-2 rounded-full mr-4\"></div>\n                    Declined\n                </div>\n            </mat-menu>\n            <button mat-icon-button class=\"relative\" #dateMenu>\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'event' }\"\n                ></app-icon>\n                <input\n                    matInput\n                    class=\"opacity-0 absolute inset-0\"\n                    [ngModel]=\"(options | async)?.date\"\n                    (ngModelChange)=\"setDate($event); scrollTo($event)\"\n                    [matDatepicker]=\"picker\"\n                    [min]=\"min_date\"\n                />\n\n                <mat-datepicker-toggle\n                    class=\"opacity-0 absolute inset-0\"\n                    matSuffix\n                    [for]=\"picker\"\n                ></mat-datepicker-toggle>\n            </button>\n            <mat-datepicker #picker ></mat-datepicker>\n        </div>\n        <main class=\"w-full flex-1 h-1/2 flex flex-col\">\n            <div\n                class=\"flex-1 w-full h-1/2 overflow-auto p-4\"\n                (scroll)=\"onScroll($event)\"\n            >\n                <schedule-event-date-list\n                    *ngFor=\"let details of events | async | keyvalue\"\n                    [attr.date]=\"details.key | date: 'yyyy-MM-dd'\"\n                    [date]=\"details.key\"\n                    [events]=\"details.value\"\n                ></schedule-event-date-list>\n            </div>\n            <mat-progress-bar\n                mode=\"indeterminate\"\n                *ngIf=\"loading | async\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 50%;\n                flex: 1;\n            }\n\n            main {\n                background: #f0f0f0;\n            }\n        `,\n    ],\n})\nexport class ScheduleEventViewComponent extends BaseClass implements OnInit {\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n    public readonly calendars = this._state.calendars;\n\n    public readonly events = combineLatest([\n        this._state.events,\n        this._state.options,\n    ]).pipe(\n        map(([events, options]) => {\n            let start = startOfDay(new Date());\n            const end_of_week = addDays(options.date || start, 12);\n            const mapping = {};\n            let count = 0;\n            while (count < events.length || isBefore(start, end_of_week)) {\n                const end = endOfDay(start);\n                const list = events.filter((e) =>\n                    timePeriodsIntersect(\n                        start.valueOf(),\n                        end.valueOf(),\n                        e.date,\n                        e.date + e.duration * 60 * 1000\n                    )\n                );\n                count += list.length;\n                mapping[start.valueOf()] = list;\n                start = addDays(start, 1);\n            }\n            return mapping;\n        })\n    );\n\n    public readonly min_date = startOfDay(new Date());\n    public readonly setDate = (d) => this._state.setOptions({ date: d });\n    public readonly setCalendar = (d) =>\n        this._state.setOptions({ calendar: d });\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this._state.stopPolling();\n    }\n\n    public onScroll(event): void {\n        const day_lists = Array.prototype.slice.call(\n            this._el?.nativeElement.querySelectorAll(\n                'schedule-event-date-list'\n            ) || []\n        );\n        if (!day_lists?.length) return;\n        const scroll_top = event.target.scrollTop;\n        let active_day: HTMLElement = null;\n        for (const el of day_lists) {\n            if (el.offsetTop - scroll_top > 0) {\n                active_day = el;\n                break;\n            }\n        }\n        if (!active_day) return;\n        const date = new Date(active_day.getAttribute('date'));\n        if (!isSameDay(date, this._state.date)) {\n            this.setDate(date.valueOf());\n        }\n    }\n\n    public scrollTo(date: number) {\n        this.timeout(\n            'scroll_to',\n            () => {\n                const el: HTMLElement = this._el?.nativeElement.querySelector(\n                    `[date=\"${format(date, 'yyyy-MM-dd')}\"]`\n                );\n                if (!el) return;\n                el.scrollIntoView({ behavior: 'smooth', inline: 'center' });\n            },\n            1000\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { ScheduleStateService } from './schedule-state.service';\n\n@Component({\n    selector: 'app-schedule',\n    template: `\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n        <router-outlet></router-outlet>\n        <a-footer-menu class=\"w-full\"></a-footer-menu>\n        <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleComponent extends BaseClass {\n    /** Name of the page to render */\n    public page: string;\n    /** Whether to show menu */\n    public show_menu = false;\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _state: ScheduleStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('email')) {\n                    this._state.setOptions({ calendar: params.get('email') });\n                }\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Booking } from '@placeos/bookings';\nimport { BaseClass } from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ViewRoomModalComponent } from '../../overlays/view-room-modal.component';\nimport { ScheduleStateService } from '../schedule-state.service';\n\n@Component({\n    selector: 'schedule-booking-details',\n    template: `\n        <div>\n            <div class=\"flex flex-col items-center mb-4\">\n                <div class=\"text-xl capitalize mb-2 font-medium\">\n                    {{ (event | async)?.title || 'No Title' }}\n                </div>\n            </div>\n            <div\n                class=\"rounded py-4 bg-white border-gray-300 shadow space-y-4 w-full text-lg\"\n            >\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">perm_identity</app-icon>\n                    <div class=\"flex-1\">{{ (event | async)?.user_name }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">schedule</app-icon>\n                    <div class=\"flex-1\">{{ when | async }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">place</app-icon>\n                    <div class=\"flex-1\">{{ (event | async)?.description }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-4\">\n                    <button\n                        *ngIf=\"(event | async)?.asset_id\"\n                        (click)=\"locate()\"\n                        class=\"w-24\"\n                        mat-button\n                    >\n                        View\n                    </button>\n                    <div class=\"flex-1\"></div>\n                    <button\n                        (click)=\"deleteEvent()\"\n                        class=\"error w-24\"\n                        mat-button\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div {\n                margin: auto;\n                width: 640px;\n                max-width: 100vw;\n                padding: 1rem;\n            }\n        `,\n    ],\n})\nexport class BookingDetailsComponent extends BaseClass {\n    public readonly event: Observable<Booking> = this._state.active_item as any;\n\n    public readonly when = this.event.pipe(\n        map((item) => {\n            if (!item) {\n                return 'Unable to determine.';\n            }\n            const date = dayjs(item.date);\n            const end = date.add(item.duration || 60, 'm');\n            if (item.all_day || item.duration > 23 * 60) {\n                return `${date.format('DD MMM YYYY')} - All Day`;\n            } else {\n                if (date.isSame(end, 'd')) {\n                    return `${date.format(\n                        'DD MMM YYYY, h:mm A'\n                    )} - ${end.format('h:mm A')}`;\n                } else {\n                    return `${date.format(\n                        'DD MMM YYYY, h:mm A'\n                    )} - ${end.format('DD MMM YYYY, h:mm A')}`;\n                }\n            }\n        })\n    );\n\n    public readonly deleteEvent = () => this._state.deleteEvent();\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async locate() {\n        const item = await this.event.toPromise();\n        const space = new Space({\n            name: 'Desk Booking',\n            map_id: item.asset_id,\n            zones: item.zones,\n        });\n        if (!space.level) {\n            // this._service.notifyInfo('The space cannot be located.');\n        }\n        this._dialog.open(ViewRoomModalComponent, {\n            width: '32em',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space },\n        });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BaseClass } from '@placeos/common';\nimport { CalendarEvent, generateEventForm } from '@placeos/events';\nimport { BookingConfirmComponent } from '../../bookings/overlays/booking-confirm/booking-confirm.component';\n\n@Component({\n    selector: 'schedule-event-edit',\n    template: `\n        <form\n            class=\"grid m-auto mt-8\"\n            *ngIf=\"form && event\"\n            [formGroup]=\"form\"\n            (ngSubmit)=\"save()\"\n        >\n            <booking-edit [form]=\"form\" [event]=\"event\"></booking-edit>\n            <div\n                class=\"footer flex items-center justify-center w-full p-2 space-x-2\"\n            >\n                <button\n                    mat-button\n                    type=\"button\"\n                    class=\"inverse\"\n                    (click)=\"cancel()\"\n                >\n                    Cancel\n                </button>\n                <button mat-button type=\"submit\">Save</button>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            form {\n                grid-template-columns: max-content;\n                grid-template-rows: 1fr auto;\n                grid-template-areas:\n                    'edit'\n                    'actions';\n                max-width: 600px;\n            }\n\n            booking-edit,\n            schedule-event-view {\n                grid-area: edit;\n            }\n\n            .footer {\n                grid-area: actions;\n            }\n        `,\n    ],\n})\nexport class EventEditComponent\n    extends BaseClass\n    implements OnInit, OnChanges, OnDestroy {\n    /** Booking to display */\n    @Input() public event: CalendarEvent;\n    /** Emitter for action on the display view */\n    @Output() public change = new EventEmitter<{ type: string }>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>();\n    /** Form field data */\n    public form: FormGroup;\n\n    constructor(private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.event) {\n            this.form = generateEventForm(this.event);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.event && this.event) {\n            this.form = generateEventForm(this.event);\n        }\n    }\n\n    /**\n     * Exit the edit form\n     */\n    public cancel() {\n        this.change.emit({ type: 'cancel_edit' });\n    }\n\n    /**\n     * Save changes to the booking\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.event },\n            });\n            dialog_ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'success') {\n                    this.change.emit({ type: 'view' });\n                    dialog_ref.close();\n                }\n            });\n        } else {\n            console.warn('Some form fields are invalid:', this.form);\n        }\n    }\n\n    public handleEvent(event) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { formatDuration } from 'date-fns';\n\nimport { CateringItem } from '@placeos/catering';\nimport { BaseClass, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { User } from '@placeos/users';\n\nimport { ViewAttendeesModalComponent } from '../../overlays/view-attendees-modal/view-attendees-modal.component';\nimport { ViewCateringModalComponent } from '../../overlays/view-catering-modal/view-catering-modal.component';\nimport { ViewRoomModalComponent } from '../../overlays/view-room-modal.component';\nimport { ScheduleStateService } from '../schedule-state.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'schedule-event-details',\n    template: `\n        <div *ngIf=\"!editing; else edit_state\">\n            <div class=\"flex flex-col items-center mb-4\">\n                <div class=\"text-xl capitalize mb-2 font-medium\">\n                    {{ event?.title || 'No Title' }}\n                </div>\n            </div>\n            <div\n                class=\"rounded py-4 bg-white border-gray-300 shadow space-y-4 w-full text-lg\"\n            >\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">perm_identity</app-icon>\n                    <div class=\"flex-1\">{{ event?.organiser?.name }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">schedule</app-icon>\n                    <div class=\"flex-1\">{{ when }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div\n                    class=\"flex items-center space-x-2 px-3\"\n                    *ngIf=\"spaces && spaces.length\"\n                >\n                    <app-icon class=\"text-2xl\">place</app-icon>\n                    <div class=\"flex flex-col\" *ngIf=\"event.type === 'event'\">\n                        <div class=\"flex\" *ngFor=\"let item of spaces\">\n                            <label class=\"flex-1 w-1/2\">{{\n                                item?.name || 'No location'\n                            }}</label>\n                            <button\n                                mat-button\n                                class=\"clear underline\"\n                                *ngIf=\"item?.map_id\"\n                                (click)=\"showSpace(item)\"\n                            >\n                                View\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"spaces && spaces.length\" />\n                <div\n                    class=\"flex items-center space-x-2 px-3\"\n                    *ngIf=\"attendees?.length\"\n                >\n                    <app-icon class=\"text-2xl\">people_outline</app-icon>\n                    <div class=\"flex-1 flex items-center\">\n                        <p class=\"flex-1 w-1/2\">\n                            {{ attendees.length }} Attendees\n                        </p>\n                        <button\n                            mat-button\n                            class=\"clear underline\"\n                            *ngIf=\"attendees.length > 0\"\n                            (click)=\"showAttendees()\"\n                        >\n                            View\n                        </button>\n                    </div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"attendees?.length\" />\n                <div class=\"flex items-center space-x-2 px-3\" *ngIf=\"link\">\n                    <app-icon class=\"text-2xl\">screen_share</app-icon>\n                    <div class=\"flex-1\">\n                        <a class=\"underline\" href=\"{{ link }}\" target=\"blank\">{{\n                            link\n                        }}</a>\n                    </div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"link\" />\n                <div class=\"flex space-x-2 px-3\" *ngIf=\"catering_items?.length\">\n                    <app-icon class=\"text-2xl\">people_outline</app-icon>\n                    <div class=\"flex-1 flex items-center\">\n                        <p class=\"flex-1 w-1/2\">Catered</p>\n                        <button\n                            mat-button\n                            class=\"clear underline\"\n                            (click)=\"showCatering()\"\n                        >\n                            View\n                        </button>\n                    </div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"catering_items?.length\" />\n                <div class=\"flex space-x-2 px-3\" *ngIf=\"body\">\n                    <app-icon class=\"text-2xl\">subject</app-icon>\n                    <div class=\"flex flex-col\" [innerHTML]=\"body\"></div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"body\" />\n                <div class=\"flex items-center space-x-2 px-4\">\n                    <!-- <button (click)=\"editEvent()\" class=\"flex-1\" mat-button>\n                        Edit\n                    </button> -->\n                    <button\n                        (click)=\"duplicateEvent()\"\n                        class=\"flex-1 inverse\"\n                        mat-button\n                    >\n                        Duplicate\n                    </button>\n                    <button\n                        (click)=\"deleteEvent()\"\n                        class=\"flex-1 error\"\n                        mat-button\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        </div>\n        <ng-template #edit_state>\n            <schedule-event-edit [event]=\"event\"></schedule-event-edit>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                margin: auto;\n                width: 640px;\n                max-width: 100vw;\n                padding: 1rem;\n            }\n        `,\n    ],\n})\nexport class EventDetailsComponent extends BaseClass {\n    @Input() public event: CalendarEvent;\n\n    public editing = false;\n\n    public readonly deleteEvent = () => this._state.deleteEvent();\n    public readonly duplicateEvent = () => this._state.duplicateEvent();\n    public readonly editEvent = () => (this.editing = true);\n\n    constructor(\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _state: ScheduleStateService\n    ) {\n        super();\n    }\n\n    /** Host of the event */\n    public get organiser(): string {\n        return this.event.creator || currentUser().name;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'h:mm A'\n                )}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        return formatDuration({ minutes: this.event.duration || 60 });\n    }\n\n    /** Display catering items */\n    public get catering_items(): CateringItem[] {\n        if (!this.event.ext('catering')?.length) {\n            return;\n        }\n        const order = this.event.ext('catering')[0];\n        return order ? [...order.items] : [];\n    }\n\n    public get catering_note(): string {\n        // return this.event.catering_notes;\n        // TODO\n        return '';\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event.resources?.length) {\n            return [];\n        }\n        return this.event.resources.map((i) => this._spaces.find(i.email));\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        return (\n            this.event.attendees?.filter(\n                (i) => i.email !== this.event.creator\n            ) || []\n        );\n    }\n\n    /** Display string for meeting link */\n    public get link(): string {\n        return this.event.ext('meeting_link');\n    }\n\n    /** Display string for notes */\n    public get body(): string {\n        return this.event.body;\n    }\n\n    public showCatering() {\n        this._dialog.open(ViewCateringModalComponent, {\n            width: '32em',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                catering: this.catering_items,\n                catering_note: this.catering_note,\n            },\n        });\n    }\n\n    public showAttendees() {\n        this._dialog.open(ViewAttendeesModalComponent, {\n            width: '32em',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { attendees: this.attendees },\n        });\n    }\n\n    public showSpace(item: Space) {\n        const space = this._spaces.find(item.id);\n        this._dialog.open(ViewRoomModalComponent, {\n            width: 'auto',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space },\n        });\n    }\n}\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { combineLatest } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ScheduleStateService } from '../schedule-state.service';\n\n@Component({\n    selector: 'schedule-view-event',\n    template: `\n        <div class=\"w-full h-12 flex items-center bg-white shadow px-2\">\n            <button mat-button class=\"clear\" (click)=\"back()\">\n                <div class=\"flex items-center\">\n                    <app-icon class=\"mr-2\">keyboard_backspace</app-icon>\n                    Back\n                </div>\n            </button>\n        </div>\n        <main class=\"flex-1 h-1/2 w-full overflow-auto\">\n            <div *ngIf=\"(event | async) && !(loading | async); else load_state\">\n                <ng-container [ngSwitch]=\"type\">\n                    <schedule-booking-details *ngSwitchCase=\"'booking'\">\n                    </schedule-booking-details>\n                    <schedule-event-details\n                        *ngSwitchDefault\n                        [event]=\"event | async\"\n                    ></schedule-event-details>\n                </ng-container>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <div\n                class=\"p-8 flex flex-col items-center justify-center h-full w-full\"\n            >\n                <mat-spinner class=\"mb-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ (loading | async) || 'Loading event details...' }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 50%;\n                flex: 1;\n            }\n\n            main {\n                background: #f0f0f0;\n            }\n        `,\n    ],\n})\nexport class ScheduleViewEventComponent extends BaseClass implements OnInit {\n    public readonly loading = this._state.loading;\n    public readonly event = this._state.active_item;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setID = (id) => this._state.setItem(id);\n\n    public type: string = '';\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _location: Location\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'route.params',\n            combineLatest([\n                this._route.paramMap,\n                this._route.queryParamMap,\n            ]).subscribe(([param, queryParam]) => {\n                if (param.has('id')) {\n                    this.setID(param.get('id'));\n                }\n                if (queryParam.has('type')) this.type = queryParam.get('type');\n                if (queryParam.has('calendar')) {\n                    this.setOptions({ calendar: queryParam.get('calendar') });\n                }\n            })\n        );\n        this.timeout(\n            'check_event',\n            async () =>\n                this._router.navigate(['/schedule', 'listing'], {\n                    queryParamsHandling: 'preserve',\n                }),\n            3000\n        );\n        this._state.active_item\n            .pipe(first((_) => !!_))\n            .subscribe(() => this.clearTimeout('check_event'));\n    }\n\n    public back() {\n        this._location.back();\n    }\n}\n","import { Routes } from '@angular/router';\nimport { ScheduleEventViewComponent } from './event-list/event-view.component';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        component: ScheduleComponent,\n        children: [\n            { path: 'listing', component: ScheduleEventViewComponent },\n            { path: 'view/:id', component: ScheduleViewEventComponent },\n            { path: '**', redirectTo: 'listing' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SharedContentModule } from '../ui/shared.module';\nimport { ScheduleEventListItemComponent } from './event-list/event-list-item.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component';\nimport { ScheduleEventViewComponent } from './event-list/event-view.component';\nimport { ScheduleComponent } from './schedule.component';\nimport { ROUTES } from './schedule.routes';\nimport { BookingDetailsComponent } from './view-event/booking-details.component';\nimport { EventDetailsComponent } from './view-event/event-details.component';\nimport { EventEditComponent } from './view-event/event-edit.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleViewEventComponent,\n        ScheduleEventViewComponent,\n        ScheduleEventListComponent,\n        ScheduleEventListItemComponent,\n        EventDetailsComponent,\n        EventEditComponent,\n        BookingDetailsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ScrollingModule,\n    ],\n})\nexport class ScheduleModule {}\n"],"sourceRoot":"webpack:///"}