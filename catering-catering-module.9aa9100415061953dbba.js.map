{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-options-modal/catering-options-modal.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-options-modal/catering-options-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-order-modal/catering-order-modal.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-order-modal/catering-order-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering.interfaces.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-config-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-item-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-option-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-state.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-menu-item.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-menu.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-order-list-order-item.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering.vars.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-orders.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-order-list-order.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering-order-list.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/catering/src/lib/catering.module.ts","./src/app/catering/catering-topbar.component.ts","./src/app/catering/catering.component.ts","./src/app/catering/catering.module.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/endOfDay/index.js"],"names":["MatTab_ng_template_0_Template","rf","ctx","_c0","MatTabBody_ng_template_2_Template","_c1","a0","animationDuration","_c2","a1","value","params","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","i_r5","index","ctx_r11","_r0","_handleClick","ctx_r1","selectedIndex","_getTabLabelId","disabled","disableRipple","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","MatTabGroup_mat_tab_body_5_Template","_r16","_removeTabBodyWrapperHeight","$event","_setTabBodyWrapperHeight","tab_r13","i_r14","ctx_r3","content","position","origin","_c5","_c6","_c7","_c8","_MAT_INK_BAR_POSITIONER","providedIn","factory","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","_animationMode","this","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","positions","inkBar","ɵfac","t","ɵdir","type","selectors","hostAttrs","hostVars","hostBindings","MAT_TAB_CONTENT","MAT_TAB_LABEL","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","super","_contentPortal","_stateChanges","Subject","isActive","_templateLabel","_setTemplateLabelInput","changes","hasOwnProperty","next","complete","_explicitContent","_implicitContent","ɵcmp","contentQueries","dirIndex","_t","first","viewQuery","inputs","exportAs","features","ngContentSelectors","decls","vars","template","encapsulation","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","Subscription","EMPTY","_leavingSub","ngOnInit","_beforeCentering","pipe","startWith","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","ngOnDestroy","unsubscribe","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","outputs","MatTabBody","elementRef","_portalHost","consts","_onTranslateTabStarted","directives","styles","data","animation","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","dynamicHeight","_dynamicHeight","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","resolve","then","forEach","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","_allTabs","reset","filter","notifyOnChanges","destroy","_tabHeader","_alignInkBarToSelectedTab","merge","map","Math","min","max","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","focusIndex","idx","MatTabGroup","animationMode","color","provide","useExisting","_focusChanged","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper","focus","passiveEventListenerOptions","passive","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","_keyManager","updateActiveItem","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","of","resize","realign","updatePagination","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","_itemSelected","onKeydown","textContent","_currentTextContent","run","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","direction","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","timer","maxScrollDistance","distance","_MatTabHeaderBase","viewportRuler","ngZone","platform","_disableRipple","preventDefault","MatTabHeader","_handlePaginatorClick","_handleKeydown","_onContentChanges","MatTabsModule","ɵmod","ɵinj","imports","CateringOptionsModalComponent","_data","option_state","groups","options","group","group_list","push","name","multiple","find","id","option","opt","reason","metadata","saveOptions","cateringItemAvailable","item","rules","is_available","rule","category","tags","includes","space","zones","matches","condition","date","Date","isAfter","setHours","isBefore","duration","visitor_type","CateringOrderModalComponent","loading","menu_items$","menu","list","categories","cat","order","form","charge_code","required","subscription","controls","valueChanges","state","timeout","getCateringConfig","level","parent_id","choose_options","old_item","items","itm","reduce","c","o","selectOptions","new_item","addItem","concat","quantity","amount","sort","a","b","localeCompare","join","markAllAsTouched","valid","show_order_details","RULE_TYPES","CateringConfigModalComponent","rule_types","rulesets","config","set","JSON","stringify","floor","random","parse","e","saveChanges","CateringItemModalComponent","separators","description","unit_price","markAsDirty","input","tag_list","trim","setValue","existing_tag","indexOf","splice","CateringItemOptionModalComponent","types","new_option","parent","CateringStateService","_org","_dialog","_menu","BehaviorSubject","_loading","_currency","asObservable","currency","active_building","bld","getCateringForZone","getValue","is_resolved","ref","open","_","componentInstance","close","afterClosed","findIndex","updateMenu","building","reject","title","icon","class","updateConfig","zone_id","details","toPromise","Array","new_order","match","CateringMenuItemComponent","_catering","show_options","addOption","editOption","removeOption","deleteOption","editItem","removeItem","deleteItem","CateringMenuComponent","shown_tab","tab_menu","menu_map","CateringOrderListOrderItemComponent","active","CATERING_STATUSES","colour","CateringOrdersService","_events","_orders","_filters","count","_update","debounceTime","switchMap","filters","start","startOfDay","now","valueOf","end","endOfDay","query","zone_ids","period_start","period_end","events","catering","orders","filtered","s","search","toLowerCase","checkOrder","delay","interval","clearInterval","status","updated_order","patch","CateringOrderListOrderComponent","show_items","statuses","updateStatus","CateringOrderListComponent","order_list","startPolling","stopPolling","SharedCateringModule","CateringTopbarComponent","_route","_router","setDate","levels","active_levels","updateZones","z","navigate","relativeTo","queryParams","editConfig","initialised","queryParamMap","has","get","split","levelWithID","buildings","paramMap","page","zone","lvl","CateringComponent","ROUTES","path","component","CateringModule","forChild","dirtyDate","arguments"],"mappings":"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","file":"catering-catering-module.9aa9100415061953dbba.js","sourcesContent":["import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }])] });\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MAT_TAB_CONTENT, true, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MAT_TAB_LABEL]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatTabBody)]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n        this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ?\n            defaultConfig.dynamicHeight : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => tab._closestTabGroup === this));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatTabLink), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n\n//# sourceMappingURL=tabs.js.map","<header>\n    <h3>Select options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"group\" *ngFor=\"let group of groups\">\n            <div class=\"name\">{{ group.name }}</div>\n            <div class=\"options\">\n                <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                    <mat-radio-group\n                        aria-label=\"Select an option\"\n                        [ngModel]=\"''\"\n                        (ngModelChange)=\"updateGroupOption(group, $event)\"\n                    >\n                        <mat-radio-button value=\"\">None</mat-radio-button>\n                        <mat-radio-button *ngFor=\"let opt of group.options\" [value]=\"opt.id\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ opt.name }}</div>\n                                <div class=\"price\" *ngIf=\"opt.unit_price\">\n                                    +{{ opt.unit_price / 100 | currency }}\n                                </div>\n                            </div>\n                        </mat-radio-button>\n                    </mat-radio-group>\n                </ng-container>\n                <ng-template #multi_options>\n                    <mat-checkbox\n                        *ngFor=\"let opt of group.options\"\n                        [(ngModel)]=\"option_state[opt.id]\"\n                    >\n                        <div class=\"details\">\n                            <div class=\"name\">{{ opt.name }}</div>\n                            <div class=\"price\" *ngIf=\"opt.unit_price\">\n                                +{{ opt.unit_price / 100 | currency }}\n                            </div>\n                        </div>\n                    </mat-checkbox>\n                </ng-template>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"saveOptions()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOption } from '../catering.interfaces';\nimport { DialogEvent, HashMap, unique } from '@user-interfaces/common';\n\nexport interface CateringOptionsModalData {\n    options: CateringOption[];\n}\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    templateUrl: './catering-options-modal.component.html',\n    styleUrls: ['./catering-options-modal.component.scss'],\n})\nexport class CateringOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: CateringOptionsModalData) {\n        const groups = unique(this._data.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter((opt) => this.option_state[opt.id]);\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","<mat-dialog-content>\n    <div class=\"main\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!show_order_details; else order_details\">\n            <mat-tab-group>\n                <ng-container *ngFor=\"let cat of categories | async\">\n                    <mat-tab *ngIf=\"((menu_items$ | async) || {})[cat].length\" [label]=\"cat\">\n                        <div class=\"list\">\n                            <div\n                                class=\"item\"\n                                *ngFor=\"let item of ((menu_items$ | async) || {})[cat]\"\n                            >\n                                <div class=\"details\">\n                                    <div class=\"name\">{{ item.name }}</div>\n                                    <div class=\"info no-underline\" *ngIf=\"item.options.length\">\n                                        Options Available\n                                    </div>\n                                </div>\n                                <div class=\"price\">{{ item.unit_price / 100 | currency }}</div>\n                                <button mat-icon-button (click)=\"addItem(item)\">\n                                    <app-icon\n                                        [icon]=\"{ class: 'material-icons', content: 'add' }\"\n                                    ></app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </mat-tab>\n                </ng-container>\n            </mat-tab-group>\n        </ng-container>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!show_order_details; else order_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button\n                mat-button\n                [disabled]=\"!order.item_count\"\n                [matBadge]=\"order.item_count\"\n                [matBadgeHidden]=\"!order.item_count\"\n                matBadgeColor=\"warn\"\n                (click)=\"confirmOrder()\"\n            >\n                Confirm\n            </button>\n        </ng-container>\n        <ng-template #order_actions>\n            <button mat-button class=\"inverse\" (click)=\"show_order_details = false\">Back</button>\n            <button mat-button (click)=\"saveOrder()\">Save Order</button>\n        </ng-template>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #order_details>\n    <header>\n        <h3>Confirm Order</h3>\n    </header>\n    <div class=\"list\">\n        <div class=\"item\" *ngFor=\"let item of order.items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"info\" *ngIf=\"item.options.length\" [matTooltip]=\"optionsFor(item)\">\n                    {{ item.options.length }} option{{ item.options.length === 1 ? '' : 's' }}\n                    selected\n                </div>\n            </div>\n            <div class=\"price\">{{ item.total_cost / 100 | currency }}</div>\n            <a-counter\n                [ngModel]=\"item.quantity\"\n                (ngModelChange)=\"updateItemQuantity(item, $event)\"\n            ></a-counter>\n        </div>\n    </div>\n    <div class=\"charge-code\" [formGroup]=\"form\">\n        <input\n            formControlName=\"charge_code\"\n            [class.error]=\"form.controls.charge_code.touched && form.controls.charge_code.invalid\"\n            placeholder=\"Charge Code*\"\n            required\n        />\n    </div>\n</ng-template>\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { isAfter, setHours, isBefore } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrder } from '../catering-order.class';\nimport { CateringOption, CateringRuleset } from '../catering.interfaces';\n\nimport { CalendarEvent } from '../../../../events/src/lib/event.class';\nimport { stringToMinutes } from '../../../../events/src/lib/event.utilities';\nimport { BaseClass, DialogEvent, HashMap, unique } from '@user-interfaces/common';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1])) ? 1 : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1])) ? 1 : 0;\n                        break;\n                    case 'min_length':\n                        matches += event.duration >= stringToMinutes(condition[1]) ? 1 : 0;\n                        break;\n                    case 'max_length':\n                        matches += event.duration <= stringToMinutes(condition[1]) ? 1 : 0;\n                        break;\n                    case 'visitor_type':\n                        matches += event.visitor_type === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches++;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n\n@Component({\n    selector: 'app-catering-order-modal',\n    templateUrl: './catering-order-modal.component.html',\n    styleUrls: ['./catering-order-modal.component.scss'],\n})\nexport class CateringOrderModalComponent extends BaseClass {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading: string = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /**  */\n    public readonly form: FormGroup;\n    /** List of menu items to show */\n    public readonly menu_items$: Observable<HashMap<CateringItem[]>>;\n    /** List of categories for the active menu */\n    public get categories(): Observable<string[]> {\n        return this._data.menu.pipe(map((list) => unique(list.map((item) => item.category))));\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n        this.menu_items$ = this._data.menu.pipe(\n            map((list) => {\n                const categories = unique(list.map((item) => item.category));\n                const map = {};\n                for (const cat of categories) {\n                    map[cat] = list.filter(\n                        (item) =>\n                            item.category === cat &&\n                            cateringItemAvailable(item, this.rules as any, this.order.event)\n                    );\n                }\n                return map;\n            })\n        );\n        this.order = new CateringOrder(this._data.order);\n        this.form = new FormGroup({\n            charge_code: new FormControl(this.order.charge_code, [Validators.required]),\n        });\n        this.subscription(\n            'charge_code',\n            this.form.controls.charge_code.valueChanges.subscribe(\n                (value) => (this.order = new CateringOrder({ ...this.order, charge_code: value }))\n            )\n        );\n        this.subscription(\n            'loading',\n            this._data.loading.subscribe(\n                (state) => (this.loading = state ? 'Loading menu...' : '')\n            )\n        );\n        this.loading = 'Loading menu...';\n        this.timeout('loading', () => (this.loading = ''), 1000);\n    }\n\n    public async ngOnInit() {\n        this.rules = await this._data.getCateringConfig(\n            this.order.event.space?.level?.parent_id\n        );\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) => c + (item.options.find((opt) => o.id === opt.id) ? 1 : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter((i) => i !== old_item && i.options.length === old_item.options.length)\n                    .concat([new CateringItem({ ...item, quantity: old_item.quantity + 1 })]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([new CateringItem({ ...item, quantity: 1 })]),\n            });\n        }\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                item.options.length ===\n                    item.options.reduce(\n                        (c, o) => c + (itm.options.find((opt) => o.id === opt.id) ? 1 : 0),\n                        0\n                    )\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter((i) => i.id !== item.id)\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([new CateringItem({ ...item, quantity: amount })]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            this.event.emit({ reason: 'done', metadata: { order: this.order } });\n        }\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import { Identity } from '@user-interfaces/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour', number]\n    | ['min_length' | 'max_length' | 'is_before' | 'is_after' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour' },\n    { id: 'before_hour', name: 'Before Hour' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Before Time' },\n    { id: 'is_after', name: 'Is After Time' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n]\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nimport { DialogEvent, Identity } from '@user-interfaces/common';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon className=\"material-icons\">close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center\">\n            <button mat-button (click)=\"rulesets.push({ id: new_id, rules: [] })\">\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon className=\"material-icons\">add</app-icon>\n                    </button>\n                    <button\n                        mat-icon-button\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"show_rules = show_rules !== set.id ? set.id : ''\"\n                    >\n                        <app-icon className=\"material-icons\">{{\n                            show_rules === set.id ? 'expand_less' : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"(show_rules === set.id ? 3.5 * set.rules.length : 0) + 'em'\"\n                >\n                    <div class=\"flex px-2 h-14 space-x-2\" *ngFor=\"let rule of set.rules\">\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option *ngFor=\"let type of rule_types\" [value]=\"type.id\">\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\">\n            <button mat-button (click)=\"saveChanges()\">Save Changes</button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n\n            main {\n                width: 32em;\n                padding: 0.5em 1em 1em;\n            }\n\n            main button.mat-button {\n                margin: 0 auto 0.5em;\n                min-width: 12em;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading: boolean = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData) {\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [i[0], JSON.stringify(i[1])]) as any;\n            return set;\n        });\n    }\n\n    public saveChanges() {\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringItem } from './catering-item.class';\n\nimport { DialogEvent, randomInt } from '@user-interfaces/common';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput name=\"name\" placeholder=\"Item name\" formControlName=\"name\" />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.category\">\n                <label\n                    for=\"category\"\n                    [class.error]=\"form.controls.category.invalid && form.controls.category.touched\"\n                >\n                    Category<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"category\"\n                        placeholder=\"Category\"\n                        formControlName=\"category\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Category is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"form.controls.tags.invalid && form.controls.tags.touched\"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-list #chipList aria-label=\"Item Tags\">\n                        <mat-chip\n                            *ngFor=\"let tag of tag_list\"\n                            [selectable]=\"true\"\n                            [removable]=\"true\"\n                            (removed)=\"removeTag(tag)\"\n                        >\n                            {{ tag }}\n                            <app-icon\n                                matChipRemove\n                                [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                            ></app-icon>\n                        </mat-chip>\n                        <input\n                            name=\"tags\"\n                            placeholder=\"Zone tags...\"\n                            i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                            [matChipInputFor]=\"chipList\"\n                            [matChipInputSeparatorKeyCodes]=\"separators\"\n                            [matChipInputAddOnBlur]=\"true\"\n                            (matChipInputTokenEnd)=\"addTag($event)\"\n                        />\n                    </mat-chip-list>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid && form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"body\">\n                <div class=\"info-block\">\n                    <div class=\"icon\">\n                        <mat-spinner diameter=\"32\"></mat-spinner>\n                    </div>\n                    <div class=\"text\">Saving catering item...</div>\n                </div>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData) {}\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name || '', [Validators.required]),\n            description: new FormControl(this.item.description || ''),\n            category: new FormControl(this.item.category || '', [Validators.required]),\n            unit_price: new FormControl(this.item.unit_price, [Validators.required]),\n            tags: new FormControl(this.item.tags || []),\n        });\n    }\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, randomInt } from '@user-interfaces/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"field\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput name=\"name\" placeholder=\"Item name\" formControlName=\"name\" />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"form.controls.group.invalid && form.controls.group.touched\"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\"\n                    >Can select multiple of type</mat-checkbox\n                >\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-none border-t border-solid border-gray-300\"\n        >\n            <button mat-button [disabled]=\"!form.dirty\" (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"body\">\n                <div class=\"info-block\">\n                    <div class=\"icon\">\n                        <mat-spinner diameter=\"32\"></mat-spinner>\n                    </div>\n                    <div class=\"text\">Saving catering item...</div>\n                </div>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            .field {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        `,\n    ],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData) {}\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.option.name || '', [Validators.required]),\n            group: new FormControl(this.option.group || '', [Validators.required]),\n            unit_price: new FormControl(this.option.unit_price),\n            multiple: new FormControl(!!this.option.multiple, []),\n        });\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { updateMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, DialogEvent, flatten, unique } from '@user-interfaces/common';\nimport { Building, OrganisationService } from '@user-interfaces/organisation';\nimport { ConfirmModalComponent, ConfirmModalData, CONFIRM_METADATA } from '../../../components/src/lib/confirm-modal.component';\n\nimport { CateringItemModalComponent, CateringItemModalData } from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderModalComponent, CateringOrderModalData } from './catering-order-modal/catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { CateringOptionsModalComponent, CateringOptionsModalData } from './catering-options-modal/catering-options-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends BaseClass {\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(bld.currency || 'USD');\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public manageCateringOrder(order: CateringOrder) {\n        return new Promise<CateringOrder>((resolve) => {\n            let is_resolved = false;\n            const ref = this._dialog.open<CateringOrderModalComponent, CateringOrderModalData>(\n                CateringOrderModalComponent,\n                {\n                    data: {\n                        order,\n                        menu: this.menu,\n                        loading: this.loading,\n                        getCateringConfig: (_) => this.getCateringConfig(_),\n                        selectOptions: (_) => this.selectOptions(_),\n                    },\n                }\n            );\n            (ref.componentInstance.event as Observable<DialogEvent>)\n                .pipe(first((_) => _.reason === 'done'))\n                .subscribe((event) => {\n                    is_resolved = true;\n                    resolve(event.metadata.order);\n                    ref.close();\n                });\n            ref.afterClosed().subscribe(() => (is_resolved ? '' : resolve(order)));\n        });\n    }\n\n    public addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<CateringItemModalComponent, CateringItemModalData>(\n            CateringItemModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    item,\n                    categories: this.categories,\n                },\n            }\n        );\n        (ref.componentInstance.event as Observable<DialogEvent>)\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                let menu = this._menu.getValue();\n                const index = menu.findIndex((itm) => itm.id === item.id);\n                if (index >= 0) {\n                    menu.splice(index, 1, event.metadata.item);\n                } else {\n                    menu.push(event.metadata.item);\n                }\n                this.updateMenu(this._org.building.id, menu).then(\n                    () => {\n                        this._menu.next([...menu]);\n                        ref.close();\n                    },\n                    () => (ref.componentInstance.loading = false)\n                );\n            });\n    }\n\n    public addOption(item: CateringItem, option: CateringOption = {} as any) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        (ref.componentInstance.event as Observable<DialogEvent>)\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                let menu = this._menu.getValue();\n                const index = menu.findIndex((itm) => itm.id === item.id);\n                if (index >= 0) {\n                    menu.splice(index, 1, event.metadata.item);\n                } else {\n                    menu.push(event.metadata.item);\n                }\n                this.updateMenu(this._org.building.id, menu).then(\n                    () => {\n                        this._menu.next([...menu]);\n                        ref.close();\n                    },\n                    () => (ref.componentInstance.loading = false)\n                );\n            });\n    }\n\n    public selectOptions(options: CateringOption[]) {\n        return new Promise<CateringOption[]>((resolve, reject) => {\n            let is_resolved = false;\n            const ref = this._dialog.open<CateringOptionsModalComponent, CateringOptionsModalData>(\n                CateringOptionsModalComponent,\n                {\n                    ...CONFIRM_METADATA,\n                    data: {\n                        options,\n                    },\n                }\n            );\n            (ref.componentInstance.event as Observable<DialogEvent>)\n                .pipe(first((_) => _.reason === 'done'))\n                .subscribe((event) => {\n                    is_resolved = true;\n                    resolve(event.metadata.options);\n                    ref.close();\n                });\n            ref.afterClosed().subscribe(() => (is_resolved ? '' : reject()));\n        });\n    }\n\n    public deleteItem(item: CateringItem) {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete Catering Item',\n                    content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                },\n            }\n        );\n        (ref.componentInstance.event as Observable<DialogEvent>)\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe(() => {\n                const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n                this.updateMenu(this._org.building.id, menu).then(\n                    () => {\n                        this._menu.next([...menu]);\n                        ref.close();\n                    },\n                    () => (ref.componentInstance.loading = '')\n                );\n            });\n    }\n\n    public deleteOption(item: CateringItem, option: CateringOption) {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete Catering Item Option',\n                    content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                },\n            }\n        );\n        (ref.componentInstance.event as Observable<DialogEvent>)\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe(() => {\n                const menu = this._menu.getValue();\n                menu.splice(\n                    menu.findIndex((itm) => itm.id === item.id),\n                    1,\n                    new CateringItem({\n                        ...item,\n                        options: item.options.filter((opt) => opt.id !== option.id),\n                    })\n                );\n                this.updateMenu(this._org.building.id, menu).then(\n                    () => {\n                        this._menu.next([...menu]);\n                        ref.close();\n                    },\n                    () => (ref.componentInstance.loading = '')\n                );\n            });\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<CateringConfigModalComponent, CateringConfigModalData>(\n            CateringConfigModalComponent,\n            {\n                data: {\n                    config,\n                    types,\n                },\n            }\n        );\n        (ref.componentInstance.event as Observable<DialogEvent>)\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.updateConfig(this._org.building.id, event.metadata).then(\n                    () => ref.close(),\n                    () => (ref.componentInstance.loading = false)\n                );\n            });\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, { name: 'catering' }).toPromise()).details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (await showMetadata(zone_id, { name: 'catering_config' }).toPromise())\n            .details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let new_order;\n        if (order) {\n            let items = order.items;\n            const match = items.find(\n                (item) =>\n                    item.id === new_item.id &&\n                    new_item.options?.length ===\n                        item.options?.reduce(\n                            (c, o) => c + (new_item.options.find((opt) => o.id === opt.id) ? 1 : 0),\n                            0\n                        )\n            );\n            match\n                ? ((match as any).quantity += 1)\n                : (items = items.concat([new CateringItem({ ...new_item, quantity: 1 })]));\n            new_order = new CateringOrder({\n                ...order,\n                items,\n                event: null,\n            });\n        } else {\n            new_order = new CateringOrder({\n                items: [{ ...new_item, quantity: 1 }],\n            });\n        }\n        return new_order;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div class=\"flex items-center px-2\">\n            <div class=\"flex items-center p-2 flex-1\">\n                <div class=\"flex-1\">\n                    <div>{{ item.name }}</div>\n                    <div class=\"text-xs text-dark-fade\">{{ item.category }}</div>\n                </div>\n                <div class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\">\n                    {{ item.unit_price / 100 | currency: (symbol | async) }}\n                </div>\n            </div>\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                <app-icon className=\"material-icons\">more_vert</app-icon>\n            </button>\n            <button\n                mat-icon-button\n                [disabled]=\"!item.options.length\"\n                (click)=\"show_options = !show_options\"\n            >\n                <app-icon className=\"material-icons\">expand_more</app-icon>\n            </button>\n        </div>\n        <div\n            name=\"options\"\n            class=\"bg-gray-100 overflow-hidden\"\n            [style.height]=\"show_options ? item.options.length * 3.5 + 'rem' : '0'\"\n        >\n            <div class=\"flex p-2 items-center border-none border-t border-solid border-gray-300\" *ngFor=\"let option of item.options\">\n                <div class=\"flex-1 px-2\">\n                    <div class=\"text\">{{ option.name }}</div>\n                    <div class=\"text-xs text-dark-fade\">{{ option.group }}</div>\n                </div>\n                <button mat-icon-button class=\"mx-2\" (click)=\"editOption(option)\">\n                    <app-icon className=\"material-icons\">edit</app-icon>\n                </button>\n                <button mat-icon-button class=\"mx-2\" (click)=\"removeOption(option)\">\n                    <app-icon className=\"material-icons\">delete</app-icon>\n                </button>\n            </div>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item class=\"flex items-center\" (click)=\"addOption()\">\n                <app-icon className=\"material-icons\">add</app-icon>\n                <div class=\"ml-2\">Add Option</div>\n            </button>\n            <button mat-menu-item class=\"flex items-center\" (click)=\"editItem()\">\n                <app-icon className=\"material-icons\">edit</app-icon>\n                <div class=\"ml-2\">Edit Item</div>\n            </button>\n            <button mat-menu-item class=\"flex items-center\" (click)=\"removeItem()\">\n                <app-icon className=\"material-icons\">delete</app-icon>\n                <div class=\"ml-2\">Remove Item</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [`\n        :host {\n            background-color: #fff;\n            border: 1px solid #ccc;\n            border-radius: .25rem;\n            overflow: hidden;\n            width: 768px;\n            margin: .5rem auto;\n            max-width: calc(100vw - 1rem);\n        }\n\n        button[mat-menu-item] {\n            display: flex;\n        }\n\n        [name=\"options\"] {\n            transition: height 200ms;\n        }\n\n    `],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options: boolean = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group class=\"h-full\" (selectedIndexChange)=\"shown_tab.next($event === 0 ? '' : categories[$event - 1])\">\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab *ngFor=\"let group of categories\" [label]=\"group\">\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                </div>\n                <div class=\"text\">No items in menu</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `\n    ]\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(map((menu) => {\n        const menu_map = {};\n        for (const group of this.categories) {\n            menu_map[group] = menu.filter(item => item.category === group);\n        }\n        return menu_map;\n    }));\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-list-order-item]',\n    template: `\n        <div class=\"w-20 text-right\">\n            <div name=\"item-bar\" class=\"bg-gray-300\"></div>\n        </div>\n        <div class=\"w-12 mr-4\">\n            <button\n                mat-icon-button\n                class=\"border border-gray-300 border-dashed text-2xl text-dark-fade\"\n                [class.bg-success]=\"active\"\n                [class.text-white]=\"active\"\n                [class.border-solid]=\"active\"\n            >\n                <app-icon className=\"material-icons\">{{ active ? 'done' : 'local_pizza' }}</app-icon>\n            </button>\n        </div>\n        <div class=\"flex-1 border-none border-b border-gray-300 border-solid py-4\">\n            {{ item.name }}\n        </div>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n\n            [name='item-bar'] {\n                height: 2px;\n                margin-left: auto;\n                margin-right: 1rem;\n                width: calc(50% - 0.9375rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderListOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active: boolean = false;\n}\n","import { Identity } from '@user-interfaces/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime } from 'rxjs/operators';\nimport { startOfDay, endOfDay } from 'date-fns';\n\nimport { BaseClass, flatten } from '@user-interfaces/common';\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { EventsService } from '../../../events/src/lib/events.service';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n    /** Counter to force update the order listing */\n    count: number;\n}\n\nfunction checkOrder(order: CateringOrder, filters: CateringOrderFilters): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) => option.name.toLowerCase().includes(s))\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends BaseClass {\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _orders = new BehaviorSubject<CateringOrder[]>([]);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({ count: 0 });\n\n    private _update: Observable<CateringOrder[]> = this._filters.pipe(\n        debounceTime(500),\n        switchMap((filters) => {\n            this._loading.next(true);\n            const start = Math.floor(\n                startOfDay(new Date(filters.date || Date.now())).valueOf() / 1000\n            );\n            const end = Math.floor(endOfDay(new Date(filters.date || Date.now())).valueOf() / 1000);\n            return this._events.query({\n                zone_ids: (filters.zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => {\n            return flatten(events.map((event) => event.catering));\n        })\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for list of orders */\n    public readonly orders = this._orders.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this._orders.pipe(\n        map((list) => list.filter((order) => checkOrder(order, this._filters.getValue())))\n    );\n\n    constructor(private _events: EventsService) {\n        super();\n        this.subscription(\n            'changes',\n            this._update.subscribe((orders) => {\n                this._loading.next(false);\n                this._orders.next(orders);\n            })\n        );\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => {\n                const filters = this._filters.getValue();\n                this._filters.next({ ...filters, count: filters.count + 1 });\n            },\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public updateStatus(order: CateringOrder, status: CateringOrderStatus) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const event = new CalendarEvent({\n            ...order.event,\n            catering: [\n                ...order.event.catering.filter((o) => o.id !== order.id),\n                updated_order\n            ].map((i) => new CateringOrder({ ...i })),\n        });\n        return this._events.patch(event.id, event);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from '@user-interfaces/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order-list-item',\n    template: `\n        <div\n            class=\"w-full font-medium flex items-center py-2 bg-gray-100\"\n            [class.shown]=\"show_items\"\n        >\n            <div class=\"w-20 flex items-center justify-center\">\n                <div\n                    class=\"rounded-full bg-gray-300  p-2 text-2xl text-dark-fade flex items-center justify-center\"\n                >\n                    <app-icon className=\"material-icons\">room_service</app-icon>\n                </div>\n            </div>\n            <div class=\"w-24\">{{ order.deliver_at | date: 'shortTime' }}</div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name || order.event?.space.name || '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{ order.event?.organiser?.name || order.event?.host || '~ Unknown Host ~' }}\n            </div>\n            <div class=\"w-24\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-28\">{{ order.invoice_number || '~ No Invoice ~' }}</div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">{{ status?.name }}</div>\n                    <app-icon class=\"pl-2\" className=\"material-icons\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button mat-icon-button (click)=\"show_items = !show_items\">\n                    <app-icon className=\"material-icons\">{{\n                        show_items ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            class=\"list-none p-0 m-0 w-full relative\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <div\n                name=\"bar\"\n                class=\"absolute top-0 bg-gray-300\"\n                [style.height]=\"3.125 * order.items.length - 1 + 'rem'\"\n            ></div>\n\n            <li\n                catering-order-list-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            .shown {\n                background-color: #eee;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderListOrderComponent {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items: boolean = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = (s) => this._orders.updateStatus(this.order, s);\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"w-full text-sm font-medium flex items-center py-4 border-none border-solid border-b border-gray-300 bg-white\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-24\">Charge Code</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-none border-solid border-b border-gray-300\"\n                *ngFor=\"let order of order_list | async\"\n            >\n                <catering-order-list-item [order]=\"order\"></catering-order-list-item>\n            </li>\n            <div class=\"info-block text-dark-fade\" *ngIf=\"!(order_list | async).length\">\n                <div class=\"text\">No Catering Orders</div>\n            </div>\n        </ul>\n        <mat-progress-bar *ngIf=\"loading | async\" class=\"w-full\" mode=\"indeterminate\"></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { ComponentsModule } from '@user-interfaces/components';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOptionsModalComponent } from './catering-options-modal/catering-options-modal.component';\nimport { CateringOrderListOrderItemComponent } from './catering-order-list-order-item.component';\nimport { CateringOrderListOrderComponent } from './catering-order-list-order.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal/catering-order-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderListOrderComponent,\n    CateringOrderListOrderItemComponent\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        ComponentsModule\n    ],\n    providers: [],\n    exports: [...COMPONENTS]\n})\nexport class SharedCateringModule {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { CateringOrdersService, CateringStateService } from '@user-interfaces/catering';\n\n@Component({\n    selector: 'catering-topbar',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option *ngFor=\"let level of levels | async\" [value]=\"level.id\">\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <button *ngIf=\"page === 'menu'\" mat-button (click)=\"addItem()\">Add Item</button>\n        <button *ngIf=\"page === 'menu'\" mat-button (click)=\"editConfig()\">Edit Config</button>\n        <div class=\"flex-1 w-2\"></div>\n        <!-- <searchbar class=\"mr-2\"></searchbar> -->\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: .5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class CateringTopbarComponent extends BaseClass {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** Currently active page */\n    public page: string;\n    /** Set filtered date */\n    public readonly setDate = (date) => (this._orders.filters = { ...this._orders.filters, date });\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._orders.filters = { ...this._orders.filters, zones: [z] };\n    };\n\n    public readonly addItem = () => this._catering.addItem();\n    public readonly editConfig = () => this._catering.editConfig();\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _catering: CateringStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(\n                (params) => (this.page = params.has('view') ? params.get('view') : '')\n            )\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) => levels.find((lvl) => lvl.id === zone));\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseClass } from '@user-interfaces/common';\n\n@Component({\n    selector: 'app-catering',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col\">\n            <catering-topbar class=\"relative z-10\"></catering-topbar>\n            <ng-container [ngSwitch]=\"page\">\n                <catering-order-list\n                    *ngSwitchCase=\"'orders'\"\n                    class=\"flex-1\"\n                ></catering-order-list>\n                <catering-menu *ngSwitchCase=\"'menu'\" class=\"flex-1\"></catering-menu>\n                <div *ngSwitchDefault class=\"flex flex-1 items-center justify-center\">\n                    <a\n                        matRipple\n                        class=\"rounded flex flex-col items-center bg-white shadow text-black\"\n                        [routerLink]=\"['/catering', 'menu']\"\n                    >\n                        <div\n                            name=\"img\"\n                            class=\"w-full flex flex-1 items-center justify-center text-2xl text-white\"\n                            [style.background]=\"'rgba(0,0,0, .45) url(assets/img/menus.jpg)'\"\n                        >\n                            Menus and Pricing\n                        </div>\n                        <div\n                            class=\"p-2 h-14 w-full text-sm text-center flex items-center justify-center\"\n                        >\n                            View and Edit Menus and Pricing\n                        </div>\n                    </a>\n                    <a\n                        matRipple\n                        class=\"rounded flex flex-col items-center bg-white shadow text-black\"\n                        [routerLink]=\"['/catering', 'orders']\"\n                    >\n                        <div\n                            name=\"img\"\n                            class=\"w-full flex flex-1 items-center justify-center text-2xl text-white\"\n                            [style.background]=\"'rgba(0,0,0, .45) url(assets/img/orders.jpg)'\"\n                        >\n                            Today's Orders\n                        </div>\n                        <div\n                            class=\"p-2 h-14 w-full text-sm text-center flex items-center justify-center\"\n                        >\n                            View Catering Orders and their statuses upon arrival\n                        </div>\n                    </a>\n                </div>\n            </ng-container>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n\n            a {\n                width: 28rem;\n                height: 16rem;\n                margin-left: 0.5rem;\n                text-decoration: none;\n                transition: background 200ms;\n            }\n\n            a:hover {\n                background-color: #00000001 !important;\n            }\n\n            a:first-child {\n                margin: 0;\n            }\n\n            [name='img'] {\n                background: rgba(0, 0, 0, 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringComponent extends BaseClass {\n    /** Page being displayed */\n    public page: string;\n\n    constructor(private _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(\n                (params) => (this.page = params.has('view') ? params.get('view') : '')\n            )\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { CateringComponent } from './catering.component';\nimport { CateringTopbarComponent } from './catering-topbar.component';\nimport { SharedCateringModule } from '@user-interfaces/catering';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':view', component: CateringComponent },\n];\n\n@NgModule({\n    declarations: [CateringComponent, CateringTopbarComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        MatTabsModule,\n        MatChipsModule,\n        SharedCateringModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class CateringModule {}\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}"],"sourceRoot":"webpack:///"}