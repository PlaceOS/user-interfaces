{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/booking.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/bookings.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/bookings.service.ts"],"names":["data","super","this","asset_id","zones","booking_type","type","time","booking_start","date","start","valueOf","minute","Math","ceil","startOf","duration","booking_end","diff","timezone","user_email","user_id","user_name","title","description","checked_in","rejected","approved","approver_id","approver_email","approver_name","extension_data","access","all_day","status","toJSON","unix","endOf","add","Intl","DateTimeFormat","resolvedOptions","timeZone","id","email","name","isSame","end","isAfter","BookingsService","_name","_api_route","booking","state","task","fields","raw_data"],"mappings":"6LAMO,MAAM,UAAgB,IA8CzB,YAAYA,EAAyB,I,MACjCC,MAAMD,GACNE,KAAKC,SAAWH,EAAKG,SACrBD,KAAKE,MAAQJ,EAAKI,MAClBF,KAAKG,aAAeL,EAAKK,aACzBH,KAAKI,KAAON,EAAKM,MAAQ,UACzB,MAAMC,EAAqC,IAA7BP,EAAaQ,eAAwBR,EAAKS,KAClDC,EAAQH,EACR,EAAMA,GAAMI,UACZ,IACKC,OAAyC,EAAlCC,KAAKC,KAAK,IAAQF,SAAW,IACpCG,QAAQ,KACRJ,UACXT,KAAKO,KAAOC,EACZR,KAAKc,SAAWhB,EAAKgB,UAAY,EAAkC,IAA3BhB,EAAaiB,aAAoBC,KAAKR,EAAO,MAAQ,GAC7FR,KAAKiB,SAAWnB,EAAKmB,SACrBjB,KAAKkB,WAAapB,EAAKoB,WACvBlB,KAAKmB,QAAUrB,EAAKqB,QACpBnB,KAAKoB,UAAYtB,EAAKsB,UACtBpB,KAAKqB,MAAQvB,EAAKuB,OAAS,eAC3BrB,KAAKsB,YAAcxB,EAAKwB,YACxBtB,KAAKuB,WAAazB,EAAKyB,WACvBvB,KAAKwB,WAAa1B,EAAK0B,SACvBxB,KAAKyB,WAAa3B,EAAK2B,SACvBzB,KAAK0B,YAAc5B,EAAK4B,YACxB1B,KAAK2B,eAAiB7B,EAAK6B,eAC3B3B,KAAK4B,cAAgB9B,EAAK8B,cAC1B5B,KAAK6B,eAAiB/B,EAAK+B,eAC3B7B,KAAK8B,UAA8B,QAApB,EAAChC,EAAK+B,sBAAc,eAAEC,QACrC9B,KAAK+B,QAAUjC,EAAKiC,UAAW,EAC/B/B,KAAKgC,OAAShC,KAAKwB,SAAW,WAAaxB,KAAKyB,SAAW,WAAa,YAGrE,SACH,MAAM3B,EAAOC,MAAMkC,SAiBnB,OAhBAnC,EAAKQ,cAAgB,EAAMN,KAAKO,MAAM2B,OAElCpC,EAAKiB,YADLf,KAAK+B,QACc,EAAM/B,KAAKO,MAAM4B,MAAM,KAAKD,OAE5B,EAAMlC,KAAKO,MAAM6B,IAAIpC,KAAKc,SAAU,KAAKoB,OAE3DpC,EAAKmB,WACNnB,EAAKmB,SAAWoB,KAAKC,iBAAiBC,kBAAkBC,UAEvDxC,KAAKyC,WACC3C,EAAK2C,UAET3C,EAAKS,YACLT,EAAKgB,gBACLhB,EAAK4C,aACL5C,EAAK6C,KACL7C,EAGX,eACI,OAAOE,KAAKsB,YAGhB,eACI,OAAO,EAAMtB,KAAKO,MAAMqC,OAAO,IAAS,KAI5C,cACI,MAAMpC,EAAQ,EAAMR,KAAKO,MACnBsC,EAAM7C,KAAK+B,QAAU,EAAM/B,KAAKO,MAAM4B,MAAM,KAAO3B,EAAM4B,IAAIpC,KAAKc,SAAU,KAClF,OAAON,EAAMsC,QAAQD,EAAK,M,0BC9G3B,ICCA,Q,MAAME,UAAwB,IACjC,cACIhD,QACAC,KAAKgD,MAAQ,WACbhD,KAAKiD,WAAa,WAIf,QAAQC,EAAkBC,GAAiB,GAC9C,OAAOnD,KAAKoD,KAAKF,EAAQT,GAAI,WAAY,GAAI,OAAQ,CAAEU,UAGpD,QAAQV,EAAYY,GACvB,OAAOrD,KAAKoD,KAAKX,EAAI,UAAWY,GAG7B,OAAOZ,EAAYY,GACtB,OAAOrD,KAAKoD,KAAKX,EAAI,SAAUY,GAGzB,QAAQC,GACd,OAAO,IAAI,EAAQA,I,6CArBdP,I,yBAAAA,EAAe,QAAfA,EAAe,qBAFZ,S,GAET","file":"common.4bd86d26505efbb1d12d.js","sourcesContent":["\nimport { BaseDataClass, HashMap } from '@user-interfaces/common'\n\nimport * as dayjs from 'dayjs';\n\n/** General purpose booking class */\nexport class Booking extends BaseDataClass {\n    /** User Id */\n    public readonly user_id: string;\n    /** User email */\n    public readonly user_email: string;\n    /** User name */\n    public readonly user_name: string;\n    /** Desk asset id */\n    public readonly asset_id: string;\n    /** Zones */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: 'desk' | null;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Metadata */\n    public readonly extension_data: HashMap<any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n\n    constructor(data: Partial<Booking> = {}) {\n        super(data);\n        this.asset_id = data.asset_id;\n        this.zones = data.zones;\n        this.booking_type = data.booking_type;\n        this.type = data.type || 'booking';\n        const time = (data as any).booking_start * 1000 || data.date;\n        const start = time\n            ? dayjs(time).valueOf()\n            : dayjs()\n                  .minute(Math.ceil(dayjs().minute() / 5) * 5)\n                  .startOf('m')\n                  .valueOf();\n        this.date = start;\n        this.duration = data.duration || dayjs((data as any).booking_end * 1000).diff(start, 'm') || 60;\n        this.timezone = data.timezone;\n        this.user_email = data.user_email;\n        this.user_id = data.user_id;\n        this.user_name = data.user_name;\n        this.title = data.title || 'Desk booking';\n        this.description = data.description;\n        this.checked_in = data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.approver_id = data.approver_id;\n        this.approver_email = data.approver_email;\n        this.approver_name = data.approver_name;\n        this.extension_data = data.extension_data;\n        this.access = !!data.extension_data?.access;\n        this.all_day = data.all_day || true;\n        this.status = this.rejected ? 'declined' : this.approved ? 'approved' : 'tentative';\n    }\n\n    public toJSON(this: Booking): HashMap<any> {\n        const data = super.toJSON();\n        data.booking_start = dayjs(this.date).unix();\n        if (this.all_day) {\n            data.booking_end = dayjs(this.date).endOf('d').unix();\n        } else {\n            data.booking_end = dayjs(this.date).add(this.duration, 'm').unix();\n        }\n        if (!data.timezone) {\n            data.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        if (!this.id) {\n            delete data.id;\n        }\n        delete data.date;\n        delete data.duration;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = dayjs(this.date);\n        const end = this.all_day ? dayjs(this.date).endOf('d') : start.add(this.duration, 'm');\n        return start.isAfter(end, 'm');\n    }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n    declarations: [],\n    imports: [],\n    providers: [],\n    exports: []\n})\nexport class SharedBookingsModule {}\n","import { Injectable } from '@angular/core';\n\nimport { BaseAPIService, HashMap } from '@user-interfaces/common';\n\nimport { Booking } from './booking.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor() {\n        super();\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n    }\n\n\n    public checkIn(booking: Booking, state: boolean = true) {\n        return this.task(booking.id, 'check_in', {}, 'post', { state });\n    }\n\n    public approve(id: string, fields?: HashMap) {\n        return this.task(id, 'approve', fields);\n    }\n\n    public reject(id: string, fields?: HashMap) {\n        return this.task(id, 'reject', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n"],"sourceRoot":"webpack:///"}