{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInCalendarDays/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInDays/index.js","./src/app/reports/reports-state.service.ts","./src/app/reports/reports.utilities.ts","./src/app/reports/reports-options.component.ts","./src/app/reports/reports-menu.component.ts","./src/app/reports/reports.component.ts","./src/app/reports/spaces/report-spaces-overall.component.ts","./src/app/reports/spaces/report-spaces-space-listing.component.ts","./src/app/reports/spaces/report-spaces-user-listing.ts","./src/app/reports/spaces/report-spaces.component.ts","./src/app/reports/desks/report-desks-overall-list.component.ts","./src/app/reports/desks/report-desks-level-list.component.ts","./src/app/reports/desks/report-desks.component.ts","./src/app/reports/reports.module.ts"],"names":["MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","startOfDayLeft","startOfDay","startOfDayRight","timestampLeft","getTime","getTimezoneOffsetInMilliseconds","timestampRight","Math","round","compareLocalAsc","dateLeft","dateRight","diff","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","differenceInDays","toDate","sign","difference","abs","setDate","isLastDayNotFull","result","ReportsStateService","_org","_generate","Subject","_loading","BehaviorSubject","_active_bookings","_options","start","Date","end","_bookings_list","this","pipe","debounceTime","switchMap","_","console","log","options","getValue","next","type","zones","length","of","valueOf","endOfDay","filter","z","join","query","period_start","floor","period_end","zone_ids","catchError","map","shareReplay","loading","asObservable","bookings","counts","filters","Promise","all","name","m","details","toPromise","list","forEach","id","count","stats","combineLatest","util_period","total_users","reduce","c","i","attendees","total_capacity","system","capacity","utilisation","duration","occupancy","avg_length","efficiency","events","generateReportForBookings","total","Object","keys","generateReportForDeskBookings","subscribe","opts","includes","levelsForBuilding","building","lvl","format","bkn","toJSON","server_names","ReportsOptionsComponent","_state","_route","super","types","type_list","levels","active_levels","generateReport","downloadReport","setStartDate","date","setOptions","setEndDate","setZones","initialised","first","subscription","queryParamMap","params","has","get","split","level","levelWithID","buildings","find","bld","parent_id","ReportsMenuComponent","ReportsComponent","_router","parts","url","ReportSpacesOverallComponent","total_count","formatDuration","minutes","toFixed","ReportSpacesSpaceListing","_reports","space_list","booking","resources","space","push","display_name","avg_attendees","usage","period_in_days","download","data","take","ReportSpacesUserListing","user_list","s","user","email","ReportSpacesComponent","ReportDesksOverallListComponent","day_list","dates","isBefore","e","free","approved","addDays","d","ReportDesksLevelListComponent","level_list","zone","ROUTES","path","component","children","ReportDesksComponent","redirectTo","ReportsModule","forChild"],"mappings":"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","file":"reports-reports-module.77bba54263e38ac92d44.js","sourcesContent":["import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import { Injectable } from '@angular/core';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Booking, queryBookings } from '@user-interfaces/bookings';\nimport {\n    downloadFile,\n    HashMap,\n    jsonToCsv,\n    notifyError,\n} from '@user-interfaces/common';\nimport { CalendarEvent, queryEvents } from '@user-interfaces/events';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { differenceInDays, endOfDay, format, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport {\n    generateReportForBookings,\n    generateReportForDeskBookings,\n} from './reports.utilities';\n\nexport interface ReportOptions {\n    type?: 'desks' | 'events';\n    start?: number | Date;\n    end?: number | Date;\n    zones?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsStateService {\n    private _generate = new Subject<number>();\n    private _loading = new BehaviorSubject<string>('');\n    private _active_bookings = new BehaviorSubject<(CalendarEvent | Booking)[]>(\n        []\n    );\n\n    private _options = new BehaviorSubject<ReportOptions>({\n        start: new Date(),\n        end: new Date(),\n    });\n\n    private _bookings_list = this._generate.pipe(\n        debounceTime(500),\n        switchMap((_) => {\n            console.log('Report:', _);\n            const options = this._options.getValue();\n            this._loading.next('Loading report details...');\n            if (!options?.type && !options?.zones?.length) return of([]);\n            const start = startOfDay(\n                options?.start ? new Date(options.start) : new Date()\n            ).valueOf();\n            const end = endOfDay(\n                options?.end ? new Date(options.end) : start\n            ).valueOf();\n            const zones = options?.zones\n                ? options.zones.filter((z) => z !== 'All').join(',')\n                : '';\n            const query = {\n                period_start: Math.floor(start / 1000),\n                period_end: Math.floor(end / 1000),\n            };\n            return options.type === 'desks'\n                ? queryBookings({\n                      ...query,\n                      zones: zones,\n                      type: 'desk',\n                  })\n                : queryEvents({ ...query, zone_ids: zones });\n        }),\n        catchError((_) => []),\n        map((_) => {\n            this._loading.next('');\n            if (!_?.length) {\n                notifyError('No bookings for the selected levels and period');\n            }\n            this._active_bookings.next(_ || []);\n            return _;\n        }),\n        shareReplay()\n    );\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly options = this._options.asObservable();\n\n    public readonly bookings = this._active_bookings.asObservable();\n\n    public readonly counts = this._options.pipe(\n        debounceTime(500),\n        switchMap((filters) => {\n            const zones = (filters.zones || []).filter(\n                (z: any) => z !== -1 && z !== 'All'\n            );\n            return Promise.all(\n                zones.map((z) =>\n                    showMetadata(z, {\n                        name: 'desks',\n                    })\n                        .pipe(map((m) => [z, m.details.length]))\n                        .toPromise()\n                )\n            );\n        }),\n        catchError((_) => []),\n        map((list: [string, number][]) => {\n            const map: HashMap<number> = {};\n            this._active_bookings.next([]);\n            list.forEach(([id, count]) => (map[id] = count));\n            return map;\n        }),\n        shareReplay()\n    );\n\n    public readonly stats: Observable<HashMap> = combineLatest([\n        this.counts,\n        this.bookings,\n    ]).pipe(\n        map(([counts, list]) => {\n            return list[0] instanceof CalendarEvent\n                ? generateReportForBookings(\n                      list as CalendarEvent[],\n                      this.duration * 8\n                  )\n                : generateReportForDeskBookings(\n                      (list as Booking[]) || [],\n                      this.duration,\n                      counts\n                  );\n        })\n    );\n\n    public get duration() {\n        const opts = this._options.getValue();\n        return Math.abs(differenceInDays(opts.start, opts.end));\n    }\n\n    constructor(private _org: OrganisationService) {\n        this._bookings_list.subscribe((_) => _);\n    }\n\n    public generateReport() {\n        this._generate.next(new Date().valueOf());\n    }\n\n    public setOptions(options: ReportOptions) {\n        if (options.zones?.includes('All')) {\n            options.zones = [\n                'All',\n                ...this._org\n                    .levelsForBuilding(this._org.building)\n                    .map((lvl) => lvl.id),\n            ];\n        } else if (\n            options.zones &&\n            this._options.getValue()?.zones?.includes('All')\n        ) {\n            options.zones = [];\n        }\n        if (\n            options.start?.valueOf() ===\n                this._options.getValue().start?.valueOf() ||\n            options.end?.valueOf() === this._options.getValue().end?.valueOf()\n        )\n            return;\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public downloadReport() {\n        const options = this._options.getValue();\n        const bookings: HashMap[] = this._active_bookings.getValue();\n        downloadFile(\n            `report+${options.type}+${format(\n                options.start,\n                'yyyy-MM-dd'\n            )}+${format(options.end, 'yyyy-MM-dd')}.csv`,\n            jsonToCsv(\n                bookings.map((bkn) => {\n                    const details = bkn.toJSON();\n                    delete details.zones;\n                    delete details.server_names;\n                    return details;\n                })\n            )\n        );\n    }\n}\n","import { Booking } from '@user-interfaces/bookings';\nimport { HashMap } from '@user-interfaces/common';\nimport { CalendarEvent } from '@user-interfaces/events';\n\nexport function generateReportForDeskBookings(bookings: Booking[], util_period: number = 1, counts: HashMap<number> = {}) {\n    console.log('Counts:', counts);\n    const total = Object.keys(counts).reduce((c, i) => c + (counts[i] || 0), 0);\n    const utilisation = bookings.length / total;\n    return {\n        total,\n        count: bookings.length,\n        utilisation,\n        events: bookings\n    };\n}\n\nexport function generateReportForBookings(bookings: CalendarEvent[], util_period: number = 8) {\n    const total_users = bookings.reduce((c, i) => c + i.attendees.length, 0);\n    const total_capacity = bookings.reduce((c, i) => c + i.system?.capacity, 0);\n    const utilisation = bookings.reduce((c, i) => c + i.duration, 0) / (util_period * 60);\n    const occupancy = total_users / total_capacity;\n    return {\n        count: bookings.length,\n        avg_length:\n            bookings.reduce((c, i) => c + i.duration, 0) / bookings.length,\n        efficiency: (utilisation + occupancy) / 2,\n        total_users,\n        total_capacity,\n        occupancy,\n        utilisation,\n        events: bookings\n    };\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, Identity } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { ReportsStateService } from './reports-state.service';\n\n@Component({\n    selector: 'reports-options',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-48\">\n            <mat-select\n                multiple\n                [ngModel]=\"(options | async)?.zones\"\n                (ngModelChange)=\"setZones($event)\"\n                placeholder=\"Select Levels...\"\n            >\n                <mat-option value=\"All\">All Levels</mat-option>\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"w-64\">\n            <mat-date-range-input [rangePicker]=\"picker\">\n                <input\n                    matStartDate\n                    [ngModel]=\"(options | async)?.start\"\n                    (ngModelChange)=\"$event ? setStartDate($event) : ''\"\n                    placeholder=\"Start date\"\n                />\n                <input\n                    matEndDate\n                    [ngModel]=\"(options | async)?.end\"\n                    (ngModelChange)=\"$event ? setEndDate($event) : ''\"\n                    placeholder=\"End date\"\n                />\n            </mat-date-range-input>\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-date-range-picker #picker></mat-date-range-picker>\n        </mat-form-field>\n        <button\n            mat-button\n            class=\"ml-4\"\n            [disabled]=\"!!(loading | async) || !(options | async)?.zones?.length\"\n            (click)=\"generateReport()\"\n        >\n            <mat-spinner *ngIf=\"loading | async\" [diameter]=\"32\"></mat-spinner>\n            <p *ngIf=\"!(loading | async)\">Generate Report</p>\n        </button>\n        <button\n            mat-button\n            class=\"ml-4\"\n            [disabled]=\"!(bookings | async)?.length\"\n            (click)=\"downloadReport()\"\n        >\n            <p>Download Report</p>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n            }\n\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                margin-left: 1em;\n            }\n\n            mat-slide-toggle div {\n                width: 5.5em;\n                white-space: initial;\n                line-height: 1.2em;\n            }\n        `,\n    ],\n})\nexport class ReportsOptionsComponent extends BaseClass {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly loading = this._state.loading;\n\n    public readonly bookings = this._state.bookings;\n\n    public readonly options = this._state.options;\n\n    public readonly generateReport = () => this._state.generateReport();\n\n    public readonly downloadReport = () => this._state.downloadReport();\n\n    public readonly setStartDate = (date) =>\n        this._state.setOptions({ start: new Date(date) });\n\n    public readonly setEndDate = (date) =>\n        this._state.setOptions({ end: new Date(date) });\n\n    public readonly setZones = (zones) => this._state.setOptions({ zones });\n\n    constructor(\n        private _state: ReportsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.setZones(zones);\n                    }\n                }\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'reports-menu,[reports-menu]',\n    template: `\n        <a\n            [routerLink]=\"['/reports', 'desks']\"\n            matRipple\n            class=\"h-64 w-64 m-4 p-4 flex flex-col items-center justify-center bg-white rounded shadow hover:bg-gray-100\"\n        >\n            <app-icon class=\"text-8xl\">room</app-icon>\n            <h3 class=\"text-xl font-bold mb-4\">Desks</h3>\n            <div class=\"flex items-center\">\n                <p>View Report</p>\n                <app-icon class=\"ml-2\">chevron_right</app-icon>\n            </div>\n        </a>\n        <a\n            [routerLink]=\"['/reports', 'spaces']\"\n            matRipple\n            class=\"h-64 w-64 m-4 p-4 flex flex-col items-center justify-center bg-white rounded shadow hover:bg-gray-100\"\n        >\n            <app-icon class=\"text-8xl\">meeting_room</app-icon>\n            <h3 class=\"text-xl font-bold mb-4\">Rooms</h3>\n            <div class=\"flex items-center\">\n                <p>View Report</p>\n                <app-icon class=\"ml-2\">chevron_right</app-icon>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class ReportsMenuComponent {\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: '[app-reports]',\n    template: `\n        <sidebar class=\"h-full\"></sidebar>\n        <main class=\"relative overflow-hidden flex flex-col flex-1 w-1/2 h-full\">\n            <reports-options></reports-options>\n            <div class=\"flex-1 h-1/2 w-full overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <div reports-menu *ngIf=\"path === 'reports'\" class=\"absolute inset-0\"></div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class ReportsComponent {\n\n    public get path() {\n        const parts = this._router.url.split('/');\n        return parts[parts.length - 1];\n    }\n\n    constructor(private _router: Router) {\n\n    }\n}\n","import { Component } from '@angular/core';\nimport { formatDuration } from 'date-fns';\nimport { map } from 'rxjs/operators';\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: 'report-spaces-overall',\n    template: `\n    <div\n            class=\"m-4 p-4 rounded bg-white shadow flex justify-center items-center space-x-2\"\n        >\n            <div class=\"flex flex-col items-center flex-1\">\n                <h3>Total Bookings</h3>\n                <p>{{ (total_count | async) || 0 }}</p>\n            </div>\n            <div class=\"flex flex-col items-center flex-1\">\n                <h3>Average Bookings Length</h3>\n                <p>{{ (avg_length | async) || 'None' }}</p>\n            </div>\n        </div>\n        <div\n            class=\"m-4 p-4 rounded bg-white shadow flex justify-center items-center space-x-2\"\n        >\n            <div class=\"flex-1 flex flex-col items-center justify-center\">\n                <h3>Overall Efficiency</h3>\n                <p>{{ (efficiency | async) || 0 }}%</p>\n            </div>\n            <div class=\"flex-1 flex flex-col items-center justify-center\">\n                <h3>Occupancy</h3>\n                <p>{{ (occupancy | async) || 0 }}%</p>\n            </div>\n            <div class=\"flex-1 flex flex-col items-center justify-center\">\n                <h3>Total Attendees</h3>\n                <p>{{ (total_users | async) || 0 }}</p>\n            </div>\n            <div class=\"flex-1 flex flex-col items-center justify-center\">\n                <h3>Total Capacity</h3>\n                <p>{{ (total_capacity | async) || 0 }}</p>\n            </div>\n            <div class=\"flex-1 flex flex-col items-center justify-center\">\n                <h3>Utilisation</h3>\n                <p>{{ (utilisation | async) || 0 }}%</p>\n            </div>\n        </div>`,\n    styles: [`\n        h3 {\n            font-weight: 500;\n        }\n\n        p:not([simple]) {\n            font-size: 1.75rem;\n        }\n    `],\n})\nexport class ReportSpacesOverallComponent {\n    public readonly total_count = this._state.stats.pipe(\n        map((i) => i.count || 0)\n    );\n    public readonly avg_length = this._state.stats.pipe(\n        map((i) => formatDuration({ minutes: i.avg_length || 0 }))\n    );\n    public readonly efficiency = this._state.stats.pipe(\n        map((i) => ((i.efficiency || 0) * 100).toFixed(1))\n    );\n    public readonly total_users = this._state.stats.pipe(\n        map((i) => i.total_users || 0)\n    );\n    public readonly total_capacity = this._state.stats.pipe(\n        map((i) => i.total_capacity || 0)\n    );\n    public readonly occupancy = this._state.stats.pipe(\n        map((i) => ((i.occupancy || 0) * 100).toFixed(1))\n    );\n    public readonly utilisation = this._state.stats.pipe(\n        map((i) => ((i.utilisation || 0) * 100).toFixed(1))\n    );\n\n    constructor(private _state: ReportsStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { downloadFile, jsonToCsv } from '@user-interfaces/common';\nimport { Space } from '@user-interfaces/spaces';\nimport { differenceInDays } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { debounceTime, map, take } from 'rxjs/operators';\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: 'report-spaces-space-listing',\n    template: `\n        <div class=\"m-4 rounded bg-white shadow overflow-hidden\">\n            <div class=\"border-b border-gray-300 px-4 py-2 flex items-center\">\n                <h3 class=\"font-bold text-xl flex-1\">Space Utilisation</h3>\n                <button mat-icon-button (click)=\"download()\">\n                    <app-icon>download</app-icon>\n                </button>\n            </div>\n            <custom-table\n                [dataSource]=\"space_list\"\n                [pagination]=\"true\"\n                [columns]=\"[\n                    'name',\n                    'capacity',\n                    'count',\n                    'utilisation',\n                    'avg_attendees',\n                    'occupancy'\n                ]\"\n                [display_column]=\"[\n                    'Name',\n                    'Capacity',\n                    'Meeting Count',\n                    'Utilisation',\n                    'Avg. Attendees',\n                    'Occupancy'\n                ]\"\n                [column_size]=\"['flex']\"\n            ></custom-table>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ReportSpacesSpaceListing {\n\n    public readonly space_list = combineLatest([\n        this._reports.stats,\n        this._reports.options,\n    ]).pipe(\n        debounceTime(300),\n        map(([stats, { start, end }]) => {\n            let list = [];\n            for (const booking of stats.events) {\n                const resources: Space[] = booking.resources || [];\n                for (const space of resources) {\n                    if (!list.find((_) => _.id === space.id)) {\n                        list.push({\n                            id: space.id,\n                            name: space.display_name || space.name,\n                            capacity: space.capacity || 1,\n                            count: 0,\n                            attendees: 0,\n                            avg_attendees: 0,\n                            usage: 0,\n                            utilisation: 0,\n                            occupancy: 0,\n                        });\n                    }\n                    const details = list.find((_) => _.id === space.id);\n                    details.count += 1;\n                    details.usage += booking.duration;\n                    details.attendees += booking.attendees.length;\n                }\n            }\n            const period_in_days = differenceInDays(end, start);\n            for (const space of list) {\n                space.avg_attendees = space.attendees / space.count;\n                space.utilisation = space.usage / 60 / 8 / period_in_days;\n                space.occupancy = space.avg_attendees / space.capacity;\n            }\n            return list;\n        })\n    );\n\n    public readonly download = async () => {\n        const data = await this.space_list.pipe(take(1)).toPromise();\n        downloadFile('report-spaces-usage.csv', jsonToCsv(data));\n    };\n\n    constructor(private _reports: ReportsStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { downloadFile, jsonToCsv } from '@user-interfaces/common';\nimport { User } from '@user-interfaces/users';\nimport { combineLatest } from 'rxjs';\nimport { debounceTime, map, shareReplay, take } from 'rxjs/operators';\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: 'report-spaces-user-listing',\n    template: `\n        <div class=\"m-4 rounded bg-white shadow overflow-hidden\">\n            <div class=\"border-b border-gray-300 px-4 py-2 flex items-center\">\n                <h3 class=\"font-bold text-xl flex-1\">Staff Utilisation</h3>\n                <button mat-icon-button (click)=\"download()\">\n                    <app-icon>download</app-icon>\n                </button>\n            </div>\n            <custom-table\n                [dataSource]=\"user_list\"\n                [pagination]=\"true\"\n                [columns]=\"[\n                    'name',\n                    'capacity',\n                    'count',\n                    'avg_attendees',\n                    'occupancy'\n                ]\"\n                [display_column]=\"[\n                    'Name',\n                    'Capacity',\n                    'Meeting Count',\n                    'Avg. Attendees',\n                    'Occupancy'\n                ]\"\n                [column_size]=\"['flex']\"\n            ></custom-table>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ReportSpacesUserListing {\n    public readonly user_list = combineLatest([this._reports.stats]).pipe(\n        debounceTime(300),\n        map(([stats]) => {\n            let list = [];\n            for (const booking of stats.events) {\n                const attendees: User[] = booking.attendees || [];\n                const capacity =\n                    booking.resources.reduce((c, s) => c + s.capacity, 0) || 1;\n                for (const user of attendees) {\n                    if (!list.find((_) => _.email === user.email)) {\n                        list.push({\n                            id: user.email,\n                            name: user.name,\n                            capacity,\n                            count: 0,\n                            attendees: 0,\n                            avg_attendees: 0,\n                            occupancy: 0,\n                        });\n                    }\n                    const details = list.find((_) => _.id === user.email);\n                    details.count += 1;\n                    details.attendees += booking.attendees.length;\n                }\n            }\n            for (const space of list) {\n                space.avg_attendees = space.attendees / space.count;\n                space.occupancy = space.avg_attendees / space.capacity;\n            }\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly download = async () => {\n        const data = await this.user_list.pipe(take(1)).toPromise();\n        downloadFile('report-space-attendee-usage.csv', jsonToCsv(data));\n    };\n\n    constructor(private _reports: ReportsStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: '[report-spaces]',\n    template: `\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ng-container *ngIf=\"total_count | async; else empty_state\">\n                <report-spaces-overall></report-spaces-overall>\n                <report-spaces-space-listing></report-spaces-space-listing>\n                <report-spaces-user-listing></report-spaces-user-listing>\n            </ng-container>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n                <p simple>Loading report data...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <p simple>\n                    Select levels and time period to generate a report.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n        `,\n    ],\n})\nexport class ReportSpacesComponent {\n    public readonly total_count = this._state.stats.pipe(\n        map((i) => i.count || 0)\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: ReportsStateService) {}\n\n    public ngOnInit() {\n        this._state.setOptions({ type: 'events' });\n    }\n}\n","import { Component } from '@angular/core';\nimport { Booking } from '@user-interfaces/bookings';\nimport { downloadFile, jsonToCsv, timePeriodsIntersect } from '@user-interfaces/common';\nimport { addDays, endOfDay, format, isBefore, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay, take } from 'rxjs/operators';\n\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: 'report-desks-overall-list',\n    template: `\n        <div class=\"m-4 rounded bg-white shadow overflow-hidden\">\n            <div class=\"border-b border-gray-300 p-4 flex items-center\">\n                <h3 class=\"font-bold text-xl flex-1\">Daily Utilisation</h3>\n                <button mat-icon-button (click)=\"download()\">\n                    <app-icon>download</app-icon>\n                </button>\n            </div>\n            <custom-table\n                red-header\n                [dataSource]=\"day_list\"\n                [pagination]=\"true\"\n                [columns]=\"['date', 'usage', 'approved', 'count', 'utilisation']\"\n                [display_column]=\"['Date', 'Used Desks', 'Approved Bookings', 'Total Requests', 'Utilisation']\"\n                [column_size]=\"['flex']\"\n            ></custom-table>\n        </div>\n    `,\n})\nexport class ReportDesksOverallListComponent {\n\n    public readonly day_list = combineLatest([\n        this._state.options,\n        this._state.stats,\n    ]).pipe(\n        map(([options, stats]) => {\n            const { start, end } = options;\n            let date = start;\n            const dates = [];\n            while (isBefore(date, end)) {\n                const s = startOfDay(date).valueOf();\n                const e = endOfDay(s).valueOf();\n                const events: Booking[] = stats.events.filter((bkn) =>\n                    timePeriodsIntersect(\n                        s,\n                        e,\n                        bkn.date,\n                        bkn.date + bkn.duration * 60 * 1000\n                    )\n                );\n                dates.push({\n                    date: s,\n                    total: stats.total,\n                    free: stats.total - events.length,\n                    approved: events.reduce(\n                        (c, e) => c + (e.approved ? 1 : 0),\n                        0\n                    ),\n                    count: events.length,\n                    utilisation: ((events.length / stats.total) * 100).toFixed(\n                        1\n                    ),\n                });\n                date = addDays(date, 1);\n            }\n            return dates;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly download = async () => {\n        let data = await this.day_list.pipe(take(1)).toPromise();\n        data = data.map(d => ({ ...d, date: format(d.date, 'MMMM d, y(EEE)') }))\n        downloadFile('desks-usage.csv', jsonToCsv(data));\n    }\n\n    constructor(private _state: ReportsStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { downloadFile, jsonToCsv } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { differenceInDays } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay, take } from 'rxjs/operators';\n\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: 'report-desks-levels-list',\n    template: `\n        <div class=\"m-4 rounded bg-white shadow overflow-hidden\">\n            <div class=\"border-b border-gray-300 p-4 flex items-center\">\n                <h3 class=\"font-bold text-xl flex-1\">Level Utilisation</h3>\n                <button mat-icon-button (click)=\"download()\">\n                    <app-icon>download</app-icon>\n                </button>\n            </div>\n            <custom-table\n                red-header\n                [dataSource]=\"level_list\"\n                [pagination]=\"true\"\n                [columns]=\"['name', 'avg_usage', 'approved', 'count', 'utilisation']\"\n                [display_column]=\"['Level', 'Avg. Used Desks', 'Approved Bookings', 'Total Requests', 'Utilisation']\"\n                [column_size]=\"['flex']\"\n            ></custom-table>\n        </div>\n    `,\n})\nexport class ReportDesksLevelListComponent {\n\n    public readonly level_list = combineLatest([\n        this._state.options,\n        this._state.stats,\n        this._state.counts\n    ]).pipe(\n        map(([options, stats, counts]) => {\n            const { start, end, zones } = options;\n            const duration = differenceInDays(end, start);\n            const levels = [];\n            console.log('Duration:', duration);\n            for (const zone of zones) {\n                if (zone === 'All') continue;\n                const lvl = this._org.levelWithID([zone]);\n                const count = counts[zone] || 0\n                const events = stats.events.filter(bkn => bkn.zones.includes(zone));\n                console.log('Evnets:', events.length)\n                let free: any = ((count * duration) - events.length) / duration;\n                if (free % 1 !== 0) { free = free.toFixed(2); }\n                levels.push({\n                    name: lvl?.display_name || lvl?.name,\n                    free,\n                    total: count,\n                    count: events.length,\n                    utilisation: (((events.length / (count * duration)) * 100) || 0).toFixed(2),\n                });\n            }\n            return levels;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly download = async () => {\n        let data = await this.level_list.pipe(take(1)).toPromise();\n        downloadFile('desks-levels-usage.csv', jsonToCsv(data));\n    }\n\n    constructor(private _state: ReportsStateService, private _org: OrganisationService) {}\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { ReportsStateService } from '../reports-state.service';\n\n@Component({\n    selector: '[report-desks]',\n    template: `\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ng-container *ngIf=\"total_count | async; else empty_state\">\n                <div\n                    class=\"m-4 p-4 rounded bg-white shadow flex justify-center items-center space-x-2\"\n                >\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Total Bookings</h3>\n                        <p>{{ (total_count | async) || 0 }}</p>\n                    </div>\n                    <div class=\"flex flex-col items-center flex-1\">\n                        <h3>Utilisation</h3>\n                        <p>{{ (utilisation | async) || 0 }}%</p>\n                    </div>\n                </div>\n                <report-desks-overall-list></report-desks-overall-list>\n                <report-desks-levels-list></report-desks-levels-list>\n            </ng-container>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n                <p simple>Loading report data...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex flex-col items-center p-8\">\n                <p simple>\n                    Select levels and time period to generate a report.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            h3 {\n                font-weight: 500;\n            }\n\n            p:not([simple]) {\n                font-size: 1.75rem;\n            }\n        `,\n    ],\n})\nexport class ReportDesksComponent {\n    public readonly total_count = this._state.stats.pipe(\n        map((i) => i.count || 0)\n    );\n    public readonly utilisation = this._state.stats.pipe(\n        map((i) => ((i.utilisation || 0) * 100).toFixed(1))\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: ReportsStateService) {}\n\n    public ngOnInit() {\n        this._state.setOptions({ type: 'desks' });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedSpacesModule } from '@user-interfaces/spaces';\nimport { SharedUsersModule } from '@user-interfaces/users';\nimport { ReportsOptionsComponent } from './reports-options.component';\nimport { ReportSpacesComponent } from './spaces/report-spaces.component';\nimport { ReportDesksComponent } from './desks/report-desks.component';\nimport { ReportDesksOverallListComponent } from './desks/report-desks-overall-list.component';\nimport { ReportDesksLevelListComponent } from './desks/report-desks-level-list.component';\nimport { ReportsMenuComponent } from './reports-menu.component';\nimport { ReportSpacesOverallComponent } from './spaces/report-spaces-overall.component';\nimport { ReportSpacesSpaceListing } from './spaces/report-spaces-space-listing.component';\nimport { ReportSpacesUserListing } from './spaces/report-spaces-user-listing';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: ReportsComponent,\n        children: [\n            { path: '' },\n            { path: 'spaces', component: ReportSpacesComponent },\n            { path: 'desks', component: ReportDesksComponent },\n            { path: '**', redirectTo: 'desks' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        ReportsComponent,\n        ReportsOptionsComponent,\n\n        ReportSpacesComponent,\n        ReportSpacesOverallComponent,\n        ReportSpacesSpaceListing,\n        ReportSpacesUserListing,\n\n        ReportDesksComponent,\n        ReportDesksOverallListComponent,\n        ReportDesksLevelListComponent,\n        ReportsMenuComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatPaginatorModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class ReportsModule {}\n"],"sourceRoot":"webpack:///"}