{"version":3,"file":"apps_workplace_src_app_landing_landing_module_ts.js","mappings":"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","names":["LandingStateService","AsyncHandler","constructor","_calendar","_schedule","_org","_settings","super","this","BehaviorSubject","active_building","pipe","filter","_","switchMap","bld","requestSpacesForZone","id","map","s","bookable","shareReplay","_space_list","tap","unsubWith","list","combineLatest","binding","getModule","obs","listen","subscription","bind","_space_statuses","statuses","idx","sort","a","b","capacity","filtered_bookings","i","state","isSameDay","date","Date","now","_contacts","asObservable","_options","_loading","_loading_spaces","q","get","queryUsers","authority_id","authority","data","StaffUser","searchStaff","debounceTime","search","next","search_fn","catchError","of","_level_occupancy","init","_this","initialised","first","toPromise","updateContacts","subscribe","updateBuildingMetadata","updateOccupancy","sys_id","d","setOptions","options","getValue","pollUpcomingEvents","delay","setDate","startPolling","stopPollingUpcomingEvents","stopPolling","refreshUpcomingEvents","triggerPoll","metadata","showMetadata","currentUser","_this2","details","Array","User","addContact","user","users","_this3","push","unique","updateMetadata","name","description","removeContact","_this4","u","email","levels","_this5","active_levels","take","recommendation","_this6","occupancy","sys","module","index","mod","_occupancy_binding","unbind","value","Object","keys","key","recommendation_factor","levelWithID","core","factory","i0","LandingAvailabilityComponent","trackBySpaceId","space","level","zones","building","buildings","find","hide_spaces","hide_rooms","_state","_explore","free_space_list","loading_spaces","level_occupancy","bookSpace","selectors","ExploreSpacesService","decls","LandingColleaguesComponent","_event_form","_router","contacts","search_results","loading","notifySuccess","show_search","newMeeting","newForm","form","patchValue","attendees","navigate","openSearch","updateSearch","timeout","_input_el","nativeElement","focus","$localize","i18n_2","ctx","item_r5","EMPTY","LandingFavouritesComponent","spaces","desks","FAV_DESK_KEY","parking_spaces","FAV_PARKING_KEY","_space_pipe","_booking_form","loadAssets","parking","includes","type","ngOnInit","toggleFavourite","fav_list","saveUserSetting","newSpaceMeeting","transform","resources","newBooking","asset_id","booking_type","SpacePipe","i18n_1","i18n_5","LandingQuickLinksComponent","features","LandingUpcomingComponent","event","Booking","_dialog","upcoming_events","ngOnDestroy","trackByFn","item","edit","remove","time","format","content","CalendarEvent","display_name","asset_name","resp","openConfirmModal","title","icon","reason","removeEvent","removeBooking","system_id","system","undefined","catch","e","notifyError","close","closeAll","end","checkinBooking","LandingComponent","hide_nav","localStorage","getItem","startOfMinute","hide_landing_sidebar","hide_colleagues","show_quick_links","ROUTES","path","component","AppLandingModule","CommonModule","SharedComponentModule","FormsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/landing/landing-state.service.ts","./apps/workplace/src/app/landing/landing-availability.component.ts","./apps/workplace/src/app/landing/landing-colleagues.component.ts","./apps/workplace/src/app/landing/landing-favourites.component.ts","./apps/workplace/src/app/landing/landing-quick-links.component.ts","./apps/workplace/src/app/landing/landing-upcoming.component.ts","./apps/workplace/src/app/landing/landing.component.ts","./apps/workplace/src/app/landing/landing.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    authority,\n    getModule,\n    PlaceMetadata,\n    PlaceVariableBinding,\n    queryUsers,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { CalendarEvent } from '@placeos/events';\nimport { searchStaff, StaffUser, User } from '@placeos/users';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { CalendarService } from '@placeos/calendar';\nimport { ScheduleStateService } from '../new-schedule/schedule-state.service';\nimport { isAfter, isSameDay } from 'date-fns';\n\nexport interface LandingOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LandingStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<LandingOptions>({});\n    private _loading = new BehaviorSubject<string>('');\n    private _loading_spaces = new BehaviorSubject<boolean>(false);\n    /**  */\n    private _contacts = new BehaviorSubject<User[]>([]);\n    /**  */\n    private _level_occupancy = new BehaviorSubject<BuildingLevel[]>([]);\n    /**  */\n    private _occupancy_binding: PlaceVariableBinding;\n    /**  */\n\n    private _space_list = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) => requestSpacesForZone(bld.id)),\n        map((_) => _.filter((s) => s.bookable)),\n        shareReplay(1)\n    );\n\n    private _space_statuses = this._space_list.pipe(\n        tap((_) => this.unsubWith('bind:')),\n        switchMap((list) =>\n            combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'status'\n                    );\n                    const obs = binding.listen();\n                    this.subscription(`bind:${_.id}`, binding.bind());\n                    return obs;\n                })\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly free_space_list = combineLatest([\n        this._space_list,\n        this._space_statuses,\n    ]).pipe(\n        map(([list, statuses]) =>\n            (list || [])\n                .filter((_, idx) => statuses[idx] === 'free')\n                .sort((a, b) => a.capacity - b.capacity)\n        ),\n        shareReplay(1)\n    );\n    /**  */\n    public readonly upcoming_events = this._schedule.filtered_bookings.pipe(\n        map((_) =>\n            _.filter((i) => i.state !== 'done' && isSameDay(i.date, Date.now()))\n        )\n    );\n    /**  */\n    public contacts = this._contacts.asObservable();\n    /**  */\n    public options = this._options.asObservable();\n    /**  */\n    public loading = this._loading.asObservable();\n    /**  */\n    public loading_spaces = this._loading_spaces.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map(({ data }) => data.map((_) => new StaffUser(_)))\n              )\n            : searchStaff(q);\n\n    public readonly search_results = this._options.pipe(\n        debounceTime(500),\n        switchMap(({ search }) => {\n            this._loading.next('Loading users...');\n            return search\n                ? this.search_fn(search).pipe(catchError(() => of([])))\n                : of([]);\n        }),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n    /**  */\n    public level_occupancy = this._level_occupancy.asObservable();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _schedule: ScheduleStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.updateContacts();\n        this.subscription(\n            'building',\n            this._org.active_building\n                .pipe(filter((bld) => !!bld))\n                .subscribe(() => {\n                    this.updateBuildingMetadata();\n                    this.updateOccupancy({});\n                })\n        );\n        let sys_id = this._org.binding('area_management');\n        if (!sys_id) return;\n        const binding = getModule(sys_id, 'AreaManagement').binding('overview');\n        binding.listen().subscribe((d) => this.updateOccupancy(d || {}));\n        binding.bind();\n    }\n\n    public setOptions(options: Partial<LandingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public pollUpcomingEvents(delay: number = 5 * 60 * 1000) {\n        this._schedule.setDate(Date.now());\n        return this._schedule.startPolling(delay);\n    }\n\n    public stopPollingUpcomingEvents() {\n        this._schedule.stopPolling();\n    }\n\n    public refreshUpcomingEvents() {\n        this._schedule.setDate(Date.now());\n        this._schedule.triggerPoll();\n    }\n\n    public async updateContacts() {\n        const metadata: PlaceMetadata = (await showMetadata(\n            currentUser().id,\n            'contacts'\n        ).toPromise()) as any;\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async addContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users.push(user);\n        users = unique(users, 'email');\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async removeContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users = users.filter((u) => u.email !== user.email);\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    private async updateOccupancy(map: HashMap<{ recommendation: number }>) {\n        const levels = [\n            ...(await this._org.active_levels.pipe(take(1)).toPromise()),\n        ];\n        levels.sort(\n            (a, b) => map[a.id]?.recommendation - map[b.id]?.recommendation\n        );\n        this._level_occupancy.next(levels);\n    }\n\n    private async updateBuildingMetadata() {\n        this._level_occupancy.next([]);\n        const occupancy: any = this._org.binding('occupancy');\n        if (!occupancy) return;\n        const { sys, module, index } = occupancy;\n        const mod = getModule(sys, module, index);\n        if (!mod) return;\n        if (this._occupancy_binding) {\n            this._occupancy_binding.unbind();\n        }\n        this._occupancy_binding = mod.binding('occupancy');\n        this._occupancy_binding.bind();\n        this.subscription(\n            'occupancy_binding',\n            this._occupancy_binding.listen().subscribe((value) => {\n                const levels = Object.keys(value).map((key) => ({\n                    id: key,\n                    ...value[key],\n                }));\n                levels.sort(\n                    (a, b) => a.recommendation_factor - b.recommendation_factor\n                );\n                this._level_occupancy.next(\n                    levels.map((i) => this._org.levelWithID([i.id]))\n                );\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { ExploreSpacesService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-availability',\n    template: `\n        <div class=\"py-2\">\n            <div\n                class=\"sm:text-lg font-medium mb-2 sm:mb-4 px-4\"\n                *ngIf=\"!hide_rooms || !hide_spaces\"\n            >\n                {{ 'WPA.AVAILABLE_NOW' | translate }}\n            </div>\n            <div\n                class=\"flex items-center text-sm sm:text-base px-4 space-x-2\"\n                *ngIf=\"!hide_spaces\"\n            >\n                <div>{{ 'WPA.SPACES' | translate }}</div>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n                *ngIf=\"!hide_spaces\"\n            >\n                <button\n                    name=\"landing-view-space\"\n                    matRipple\n                    *ngFor=\"let lvl of levels_free | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-[#1F2021] shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ level: lvl.id }\"\n                >\n                    <div\n                        class=\"min-w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <img\n                            *ngIf=\"lvl?.images?.length; else placeholder\"\n                            [src]=\"lvl?.images[0]\"\n                            class=\"min-h-full object-cover\"\n                        />\n                        <ng-template #placeholder>\n                            <img\n                                class=\"m-auto\"\n                                src=\"assets/icons/desk-placeholder.svg\"\n                            />\n                        </ng-template>\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ lvl.display_name || lvl.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>{{\n                                building(lvl.parent_id)?.display_name ||\n                                    building(lvl.parent_id)?.name\n                            }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(levels_free | async).length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                >\n                    {{ 'WPA.NO_FREE_SPACES' | translate }}\n                </span>\n            </div>\n            <div\n                class=\"flex items-center text-sm sm:text-base px-4 space-x-2\"\n                *ngIf=\"!hide_rooms\"\n            >\n                <div>{{ 'WPA.ROOMS' | translate }}</div>\n                <mat-spinner\n                    diameter=\"24\"\n                    *ngIf=\"loading_spaces | async\"\n                ></mat-spinner>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n                *ngIf=\"!hide_rooms\"\n            >\n                <button\n                    name=\"landing-book-room\"\n                    matRipple\n                    *ngFor=\"\n                        let space of space_list | async;\n                        trackBy: trackBySpaceId\n                    \"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-[#1F2021] shadow p-4 space-x-2\"\n                    (click)=\"book(space)\"\n                >\n                    <div\n                        class=\"w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-800 overflow-hidden flex items-center justify-center\"\n                    >\n                        <img\n                            *ngIf=\"\n                                (space.id | space | async)?.images?.length;\n                                else space_placeholder\n                            \"\n                            [src]=\"(space.id | space | async)?.images[0]\"\n                            class=\"min-h-full object-cover\"\n                        />\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>{{\n                                level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(space_list | async)?.length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                >\n                    {{ 'WPA.NO_FREE_ROOMS' | translate }}\n                </span>\n            </div>\n        </div>\n        <ng-template #space_placeholder>\n            <img class=\"m-auto\" src=\"assets/icons/room-placeholder.svg\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            * {\n                flex-shrink: 0;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService],\n})\nexport class LandingAvailabilityComponent {\n    public readonly space_list = this._state.free_space_list;\n    public readonly loading_spaces = this._state.loading_spaces;\n    public readonly levels_free = this._state.level_occupancy;\n\n    public book = (s) => this._explore.bookSpace(s);\n\n    public trackBySpaceId(index: number, space: Space) {\n        return space.id;\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public building(id: string) {\n        return this._org.buildings.find((bld) => bld.id === id);\n    }\n\n    public get hide_spaces() {\n        return this._settings.get('app.general.hide_spaces');\n    }\n\n    public get hide_rooms() {\n        return this._settings.get('app.general.hide_rooms');\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _explore: ExploreSpacesService\n    ) {}\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AsyncHandler, notifySuccess, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { User } from '@placeos/users';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-colleagues',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\"\n        >\n            <h2 class=\"mx-2\" i18n>\n                {{ (contacts | async)?.length || 0 }} { (contacts |\n                async)?.length, plural, =1 { Person } other { People } }\n            </h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button icon\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button icon\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div class=\"flex-1 h-1/2 w-full space-y-4 overflow-auto pt-4\">\n            <ng-container *ngIf=\"(contacts | async)?.length; else empty_state\">\n                <div\n                    class=\"flex items-center px-2 space-x-2 relative\"\n                    user\n                    *ngFor=\"let user of contacts | async\"\n                >\n                    <div class=\"text-xl relative\">\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <!-- <div\n                            class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                            [class.bg-error]=\"!user.location\"\n                            [class.bg-success]=\"user.location\"\n                        ></div> -->\n                    </div>\n                    <div class=\"leading-tight flex-1 w-1/2\">\n                        <div class=\"truncate\" [matTooltip]=\"user.name\">\n                            {{ user.name }}\n                        </div>\n                        <div\n                            class=\"text-sm truncate\"\n                            [matTooltip]=\"user.organisation\"\n                        >\n                            {{ user.organisation }}\n                        </div>\n                        <div class=\"text-xs opacity-60 truncate\">\n                            {{ user.location }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        name=\"colleague-more\"\n                        class=\"!rounded bg-gray-300\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">face</app-icon>\n                                <div>View Colleague</div>\n                            </button> -->\n                        <button\n                            mat-menu-item\n                            name=\"meeting-with-colleague\"\n                            (click)=\"newMeeting(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">today</app-icon>\n                            <div>{{ 'WPA.CREATE_MEETING' | translate }}</div>\n                        </button>\n                        <button\n                            name=\"remove-colleague\"\n                            mat-menu-item\n                            (click)=\"removeUser(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>{{ 'WPA.REMOVE_COLLEAGUE' | translate }}</div>\n                        </button>\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">report</app-icon>\n                                <div>Block Colleague</div>\n                            </button> -->\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <button\n            btn\n            name=\"open-colleague-search\"\n            matRipple\n            class=\"inverse w-[calc(100%-1rem)] m-2\"\n            (click)=\"openSearch()\"\n        >\n            {{ 'WPA.ADD' | translate }}\n        </button>\n        <div\n            search\n            [class.hidden]=\"!show_search\"\n            class=\"absolute inset-x-2 top-2 bottom-[3.5rem] rounded-lg overflow-hidden flex flex-col bg-white dark:bg-neutral-600 shadow border border-gray-200\"\n        >\n            <input\n                #search_input\n                [ngModel]=\"(options | async)?.search\"\n                (ngModelChange)=\"updateSearch($event)\"\n                placeholder=\"Search for users...\"\n                class=\"w-full border-b border-gray-200 p-2 rounded-t-lg\"\n            />\n            <button\n                icon\n                name=\"close-colleague-search\"\n                class=\"absolute top-0 right-0\"\n                (click)=\"show_search = false\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <div\n                class=\"overflow-auto flex-1 h-1/2 flex flex-col space-y-2\"\n                *ngIf=\"!(loading | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(search_results | async)?.length; else search_empty\"\n                >\n                    <button\n                        matRipple\n                        name=\"add-colleague\"\n                        class=\"flex items-center p-2 space-x-2 w-full text-left\"\n                        *ngFor=\"let user of search_results | async\"\n                        (click)=\"addUser(user)\"\n                    >\n                        <div class=\"text-base relative\">\n                            <a-user-avatar [user]=\"user\"></a-user-avatar>\n                            <!-- <div\n                                class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                                [class.bg-error]=\"!user.location\"\n                                [class.bg-success]=\"user.location\"\n                            ></div> -->\n                        </div>\n                        <div class=\"leading-tight\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div class=\"text-sm truncate\">\n                                {{ user.organisation }}\n                            </div>\n                        </div>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-contacts.svg\" />\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ 'WPA.COLLEAGUES_EMPTY' | translate }}\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #search_empty>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{\n                        !(options | async)?.search\n                            ? 'Start typing to search for users.'\n                            : 'Unable for find any users matching \"' +\n                              (options | async)?.search +\n                              '\"'\n                    }}\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{ 'WPA.COLLEAGUES_SEARCHING' | translate }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class LandingColleaguesComponent extends AsyncHandler {\n    public show_search = false;\n    public readonly contacts = this._state.contacts;\n\n    public readonly search_results = combineLatest([\n        this._state.search_results,\n        this._state.contacts,\n    ]).pipe(\n        map(([list, contacts]) =>\n            list.filter(\n                (_) =>\n                    !contacts.find(\n                        (user) => user.id === _.id || user.email === _.email\n                    )\n            )\n        )\n    );\n\n    public readonly options = this._state.options;\n\n    public readonly loading = this._state.loading;\n\n    public readonly addUser = async (u) => {\n        await this._state.addContact(u);\n        notifySuccess(`Successfully added \"${u.name}\" to contacts`);\n        this.show_search = false;\n    };\n\n    public readonly removeUser = async (u) => {\n        await this._state.removeContact(u);\n        notifySuccess(`Successfully removed \"${u.name}\" from contacts`);\n    };\n\n    public readonly updateSearch = (s) => this._state.setOptions({ search: s });\n\n    @ViewChild('search_input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _state: LandingStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public newMeeting(user: User) {\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ attendees: [user] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public openSearch() {\n        this.updateSearch('');\n        this.show_search = true;\n        this.timeout('open', () => this._input_el.nativeElement.focus(), 100);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    BookingFormService,\n    BookingType,\n    FAV_PARKING_KEY,\n} from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { FAV_DESK_KEY } from 'libs/bookings/src/lib/desk-select-modal/desk-select-modal.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'landing-favourites',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\"\n        >\n            <h2 class=\"mx-2\" i18n>\n                {{ spaces?.length || 0 }} { spaces?.length, plural, =1 {\n                Resource } other { Resources } }\n            </h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button icon\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button icon\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div\n            class=\"flex-1 h-1/2 w-full space-y-2 overflow-auto pt-4 divide-y divide-gray-300\"\n        >\n            <ng-container\n                *ngIf=\"\n                    spaces?.length || (assets | async)?.length;\n                    else empty_state\n                \"\n            >\n                <div\n                    class=\"flex flex-col items-center mx-2 pt-4 space-y-2 relative\"\n                    item\n                    *ngFor=\"let item of spaces\"\n                >\n                    <div class=\"flex w-full items-center space-x-2 relative\">\n                        <div\n                            class=\"w-20 h-20 overflow-hidden rounded relative flex items-center justify-center bg-black/10 dark:bg-white/5\"\n                        >\n                            <img\n                                *ngIf=\"\n                                    (item | space | async)?.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-w-full min-h-full\"\n                                [src]=\"(item | space | async)?.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"h-20 flex-1 w-1/2\">\n                            <div class=\"truncate mb-4 w-full pr-12\">\n                                {{\n                                    (item | space | async)?.display_name ||\n                                        (item | space | async)?.name\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2 mb-2\"\n                            >\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <div>\n                                    {{\n                                        level(item | space | async)\n                                            ?.display_name\n                                    }}\n                                </div>\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2\"\n                            >\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <div i18n>\n                                    {{ (item | space | async)?.capacity || 2 }}\n                                    { (item | space | async)?.capacity || 2,\n                                    plural, =1 { Person } other { People } }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        btn\n                        name=\"book-favourite\"\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"newSpaceMeeting(item)\"\n                    >\n                        {{ 'WPA.BOOK' | translate }}\n                    </button>\n                    <button\n                        icon\n                        name=\"favourite-more\"\n                        [matMenuTriggerFor]=\"menu\"\n                        class=\"absolute top-2 right-0 bg-gray-200 dark:bg-neutral-600 !rounded !m-0\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <!-- <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">info</app-icon>\n                            <div>{{ 'WPA.VIEW_DETAILS' | translate }}</div>\n                        </button> -->\n                        <button\n                            name=\"landing-remove-favourite\"\n                            mat-menu-item\n                            (click)=\"toggleFavourite('space', item)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>{{ 'WPA.FAVOURITES_REMOVE' | translate }}</div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    class=\"flex flex-col items-center mx-2 pt-4 space-y-2 relative\"\n                    item\n                    *ngFor=\"let item of assets | async\"\n                >\n                    <div class=\"flex w-full items-center space-x-2 relative\">\n                        <div\n                            class=\"w-20 h-20 overflow-hidden rounded relative flex items-center justify-center bg-black/10 dark:bg-white/5\"\n                        >\n                            <img\n                                *ngIf=\"\n                                    item?.images?.length;\n                                    else asset_placeholder\n                                \"\n                                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-w-full min-h-full\"\n                                [src]=\"item?.images[0]\"\n                            />\n                            <ng-template #asset_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    [src]=\"\n                                        'assets/icons/' +\n                                        (item.type === 'desk'\n                                            ? 'desk'\n                                            : 'car') +\n                                        '-placeholder.svg'\n                                    \"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"h-20\">\n                            <div class=\"truncate mb-4\">\n                                {{ item?.display_name || item?.name }}\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2 mb-2\"\n                            >\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <div>\n                                    {{ item?.zone?.display_name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        btn\n                        name=\"book-favourite\"\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"newBooking(item.type, item)\"\n                        i18n\n                    >\n                        {{ 'WPA.BOOK' | translate }}\n                    </button>\n                    <button\n                        icon\n                        name=\"favourite-more\"\n                        [matMenuTriggerFor]=\"menu\"\n                        class=\"absolute top-2 right-0 bg-gray-200 dark:bg-neutral-600 !rounded !m-0\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <!-- <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">info</app-icon>\n                            <div>{{ 'WPA.VIEW_DETAILS' | translate }}</div>\n                        </button> -->\n                        <button\n                            name=\"landing-remove-favourite\"\n                            mat-menu-item\n                            (click)=\"toggleFavourite(item.type, item.id)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>{{ 'WPA.FAVOURITES_REMOVE' | translate }}</div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-favourites.svg\" />\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{ 'WPA.FAVOURITES_EMPTY' | translate }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class LandingFavouritesComponent extends AsyncHandler {\n    public readonly assets = combineLatest([\n        this._booking_form.loadAssets('desks' as any),\n        this._booking_form.loadAssets('parking_spaces' as any),\n    ]).pipe(\n        map(([desks, parking]) => {\n            return [\n                ...desks\n                    .filter(({ id }) => this.desks.includes(id))\n                    .map((_) => ({ ..._, type: 'desk' })),\n                ...parking\n                    .filter(({ id }) => this.parking_spaces.includes(id))\n                    .map((_) => ({ ..._, type: 'parking' })),\n            ];\n        }),\n        shareReplay(1)\n    );\n\n    public get spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY;\n    }\n\n    public get desks() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY;\n    }\n\n    public get parking_spaces() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || EMPTY;\n    }\n\n    public level(space: Space) {\n        return this._org.levelWithID(space?.zones || []);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _event_form: EventFormService,\n        private _booking_form: BookingFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {}\n\n    public toggleFavourite(type: 'space' | 'desk' | 'parking', id: string) {\n        let fav_list = this.spaces;\n        let key = 'favourite_spaces';\n        switch (type) {\n            case 'desk':\n                fav_list = this.desks;\n                key = FAV_DESK_KEY;\n                break;\n            case 'parking':\n                fav_list = this.parking_spaces;\n                key = FAV_PARKING_KEY;\n                break;\n        }\n        const new_state = !fav_list.includes(id);\n        if (new_state) {\n            this._settings.saveUserSetting(key, [...fav_list, id]);\n        } else {\n            this._settings.saveUserSetting(\n                key,\n                fav_list.filter((_) => _ !== id)\n            );\n        }\n    }\n\n    public async newSpaceMeeting(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ resources: [space] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public async newBooking(type: BookingType, id: string) {\n        if (!id) return;\n        this._booking_form.newForm();\n        this._booking_form.setOptions({ type });\n        this._booking_form.form.patchValue({\n            asset_id: id,\n            booking_type: type,\n        });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate([\n                '/book',\n                type === 'desk' ? 'new-desks' : 'new-parking',\n            ]);\n        } else {\n            this._router.navigate([\n                '/book',\n                type === 'desk' ? 'desks' : 'parking',\n            ]);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'landing-quick-links',\n    template: `\n        <h3 class=\"sm:text-lg font-medium mb-2 sm:mb-4 px-4\">\n            Make a Reservation\n        </h3>\n        <div class=\"flex w-full overflow-auto space-x-2 px-4 mb-4\">\n            <a\n                matRipple\n                class=\"w-64 p-2 rounded shadow border border-gray-200 flex items-center space-x-4 bg-white\"\n                [routerLink]=\"['/book', 'meeting']\"\n                *ngIf=\"features.includes('spaces')\"\n            >\n                <div\n                    class=\"min-w-[4rem] h-16 rounded bg-gray-200 flex items-center justify-center\"\n                >\n                    <img\n                        class=\"m-auto\"\n                        src=\"assets/icons/room-placeholder.svg\"\n                    />\n                </div>\n                <div class=\"text-xl\">Book a Room</div>\n            </a>\n            <a\n                matRipple\n                class=\"w-64 p-2 rounded shadow border border-gray-200 flex items-center space-x-4 bg-white\"\n                [routerLink]=\"['/book', 'new-desks']\"\n                *ngIf=\"features.includes('desks')\"\n            >\n                <div\n                    class=\"min-w-[4rem] h-16 rounded bg-gray-200 flex items-center justify-center\"\n                >\n                    <img\n                        class=\"m-auto\"\n                        src=\"assets/icons/desk-placeholder.svg\"\n                    />\n                </div>\n                <div class=\"text-xl\">Book a Desk</div>\n            </a>\n            <a\n                matRipple\n                class=\"w-64 p-2 rounded shadow border border-gray-200 flex items-center space-x-4 bg-white\"\n                [routerLink]=\"['/book', 'new-parking']\"\n                *ngIf=\"features.includes('parking')\"\n            >\n                <div\n                    class=\"min-w-[4rem] h-16 rounded bg-gray-200 flex items-center justify-center\"\n                >\n                    <img\n                        class=\"m-auto\"\n                        src=\"assets/icons/car-placeholder.svg\"\n                    />\n                </div>\n                <div class=\"text-xl\">Book a Parking Space</div>\n            </a>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LandingQuickLinksComponent {\n    public get features() {\n        return this._settings.get('app.features') || [];\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Booking, checkinBooking, removeBooking } from '@placeos/bookings';\nimport {\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService\n} from '@placeos/common';\nimport { CalendarEvent, EventFormService, removeEvent } from '@placeos/events';\nimport { format } from 'date-fns';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-upcoming',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"flex items-center justify-between mb-2 sm:mb-4 px-4\">\n                <div class=\"sm:text-lg font-medium\">\n                    {{ 'WPA.YOUR_BOOKINGS' | translate }}\n                </div>\n                <a\n                    btn\n                    name=\"upcoming-view-all\"\n                    class=\"inverse hidden sm:flex\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    {{ 'WPA.VIEW_ALL' | translate }}\n                </a>\n                <a\n                    name=\"upcoming-view-all-mobile\"\n                    class=\"inverse flex sm:hidden text-blue-500 underline relative top-8\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    {{ 'WPA.VIEW_ALL' | translate }}\n                </a>\n            </div>\n            <div class=\"space-y-4 px-4\">\n                <ng-container\n                    *ngIf=\"(upcoming_events | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"\n                            let event of upcoming_events | async | slice: 0:5;\n                            trackBy: trackByFn\n                        \"\n                    >\n                        <ng-container [ngSwitch]=\"type(event)\">\n                            <event-card\n                                *ngSwitchCase=\"'event'\"\n                                [event]=\"event\"\n                                [show_day]=\"true\"\n                                (edit)=\"edit(event)\"\n                                (remove)=\"remove(event)\"\n                            ></event-card>\n                            <booking-card\n                                *ngSwitchCase=\"'booking'\"\n                                [booking]=\"event\"\n                                [show_day]=\"true\"\n                                (remove)=\"remove(event)\"\n                                (end)=\"end(event)\"\n                            ></booking-card>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\">\n                    {{ 'WPA.NO_UPCOMING_BOOKINGS' | translate }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LandingUpcomingComponent implements OnInit, OnDestroy {\n    public readonly upcoming_events = this._state.upcoming_events;\n\n    public type(event: CalendarEvent | Booking) {\n        return event instanceof Booking ? 'booking' : 'event';\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _event_form: EventFormService,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        this._state.refreshUpcomingEvents();\n        // this._state.pollUpcomingEvents();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingUpcomingEvents();\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n\n    public edit(event: CalendarEvent) {\n        this._router.navigate(['/book', 'meeting', 'form']);\n        this._event_form.newForm(event);\n    }\n\n    public async remove(item: CalendarEvent | Booking) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name =\n            item instanceof CalendarEvent\n                ? item.space?.display_name\n                : item.asset_name || item.asset_id;\n        const content = `Delete the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await (item instanceof CalendarEvent ? removeEvent : removeBooking)(\n            item.id,\n            this._settings.get('app.no_user_calendar')\n                ? { system_id: (item as any).system?.id }\n                : undefined\n        )\n            .toPromise()\n            .catch((e) => {\n                notifyError(`Unable to delete booking. ${e}`);\n                resp.close();\n                throw e;\n            });\n        notifySuccess('Successfully deleted booking.');\n        this._state.refreshUpcomingEvents();\n        this._dialog.closeAll();\n    }\n\n    public async end(item: Booking){\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name = item.asset_name || item.asset_id;\n        const content = `End the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `End booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n\n        if (resp.reason !== 'done') return;\n        resp.loading('Ending booking...');\n        await checkinBooking(item.id, false).toPromise().catch((e) => {\n            notifyError(`Unable to end booking. ${e}`);\n            resp.close();\n            throw e;\n        });\n        notifySuccess('Successfully ended booking.');\n        this._state.refreshUpcomingEvents();\n        this._dialog.closeAll();\n    }\n}\n","import { Component } from '@angular/core';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { startOfMinute } from 'date-fns';\n\n@Component({\n    selector: 'app-dashboard',\n    template: `\n        <topbar class=\"z-10\" *ngIf=\"!hide_nav\"></topbar>\n        <div class=\"flex flex-1 h-1/2 bg-[#F8F8FA] dark:bg-neutral-900\">\n            <div\n                class=\"relative hidden sm:flex flex-col w-[18rem] h-full overflow-hidden bg-white dark:bg-[#1F2021] border-r border-gray-200 dark:border-neutral-700\"\n                *ngIf=\"!hide_landing_sidebar\"\n            >\n                <div class=\"flex items-center divide-x divide-gray-300\">\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'people'\"\n                        [class.border-gray-300]=\"tab !== 'people'\"\n                        [class.bg-black]=\"tab !== 'people'\"\n                        [class.bg-opacity-5]=\"tab !== 'people'\"\n                        (click)=\"tab = 'people'\"\n                        *ngIf=\"!hide_colleagues\"\n                    >\n                        <app-icon>people</app-icon>\n                        <div>\n                            {{ 'WPA.COLLEAGUES' | uppercase | translate }}\n                        </div>\n                    </button>\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'fav'\"\n                        [class.border-gray-300]=\"tab !== 'fav'\"\n                        [class.bg-black]=\"tab !== 'fav'\"\n                        [class.bg-opacity-5]=\"tab !== 'fav'\"\n                        (click)=\"tab = 'fav'\"\n                    >\n                        <app-icon>favorite</app-icon>\n                        <div>{{ 'WPA.FAVOURITES' | translate }}</div>\n                    </button>\n                </div>\n                <div class=\"flex-1 w-full h-1/2\">\n                    <landing-colleagues\n                        *ngIf=\"tab === 'people' && !hide_colleagues\"\n                    ></landing-colleagues>\n                    <landing-favourites\n                        *ngIf=\"tab === 'fav' || hide_colleagues\"\n                    ></landing-favourites>\n                </div>\n            </div>\n            <div class=\"flex-1 h-full w-1/2 sm:px-4 overflow-auto z-0\">\n                <header\n                    class=\"sticky top-0 z-50 bg-[#ECF0F3] dark:bg-zinc-800 px-4 sm:rounded-b flex items-center justify-between overflow-hidden\"\n                >\n                    <div class=\"\">\n                        <div class=\"sm:text-xl font-medium\">\n                            {{\n                                'WPA.WELCOME_MESSAGE'\n                                    | translate: { name: user?.name }\n                            }}\n                        </div>\n                        <div date class=\"text-sm sm:text-base\">\n                            {{ date | date: 'fullDate' }}\n                        </div>\n                        <div\n                            class=\"text-sm sm:text-base\"\n                            *ngIf=\"building?.address || building?.name\"\n                        >\n                            {{\n                                building.address ||\n                                    building.display_name ||\n                                    building.name\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"h-32 pt-4\">\n                        <img src=\"assets/img/landing.svg\" />\n                    </div>\n                </header>\n                <landing-quick-links\n                    *ngIf=\"show_quick_links\"\n                ></landing-quick-links>\n                <landing-availability></landing-availability>\n                <div\n                    class=\"mx-4 w-[calc(100%-2rem)] h-px bg-gray-300 mb-2\"\n                ></div>\n                <landing-upcoming></landing-upcoming>\n            </div>\n        </div>\n        <footer-menu *ngIf=\"!hide_nav\"></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n        `,\n    ],\n})\nexport class LandingComponent {\n    public time: number;\n    public tab = 'people';\n\n    public get hide_nav() {\n        return localStorage.getItem('PlaceOS.hide_nav') === 'true';\n    }\n\n    public get date() {\n        return startOfMinute(this.time || Date.now());\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get hide_landing_sidebar() {\n        return this._settings.get('app.general.hide_landing_sidebar');\n    }\n\n    public get hide_colleagues() {\n        return this._settings.get('app.general.hide_colleagues');\n    }\n\n    public get show_quick_links() {\n        return this._settings.get('app.general.show_quick_links');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { LandingAvailabilityComponent } from './landing-availability.component';\nimport { LandingColleaguesComponent } from './landing-colleagues.component';\nimport { LandingFavouritesComponent } from './landing-favourites.component';\nimport { LandingQuickLinksComponent } from './landing-quick-links.component';\nimport { LandingUpcomingComponent } from './landing-upcoming.component';\nimport { LandingComponent } from './landing.component';\n\nconst COMPONENTS = [\n    LandingComponent,\n    LandingColleaguesComponent,\n    LandingAvailabilityComponent,\n    LandingUpcomingComponent,\n    LandingFavouritesComponent,\n    LandingQuickLinksComponent,\n];\n\nconst ROUTES = [{ path: '', component: LandingComponent }];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppLandingModule {}\n"],"x_google_ignoreList":[]}