{"version":3,"file":"apps_workplace_src_app_landing_landing_module_ts.js","mappings":"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","names":["LandingStateService","AsyncHandler","constructor","_calendar","_schedule","_org","_settings","super","this","_options","BehaviorSubject","_loading","_loading_spaces","_contacts","_level_occupancy","_booking_rules","active_building","pipe","filter","bld","switchMap","showMetadata","id","catchError","of","details","map","_","Array","shareReplay","_space_list","requestSpacesForZone","s","bookable","_filtered_spaces","combineLatest","list","rules","filterResourcesFromRules","date","Date","now","duration","host","currentUser","resource","_space_statuses","tap","unsubWith","binding","getModule","obs","listen","subscription","bind","free_space_list","statuses","idx","sort","a","b","capacity","upcoming_events","filtered_bookings","i","state","isSameDay","contacts","asObservable","options","loading","loading_spaces","search_fn","q","get","queryUsers","authority_id","authority","data","StaffUser","searchStaff","search_results","debounceTime","search","next","level_occupancy","init","_this","_asyncToGenerator","initialised","first","toPromise","updateContacts","subscribe","updateBuildingMetadata","updateOccupancy","sys_id","d","setOptions","getValue","pollUpcomingEvents","delay","setDate","triggerPoll","startPolling","stopPollingUpcomingEvents","stopPolling","refreshUpcomingEvents","_this2","metadata","users","Promise","all","showUser","email","addContact","user","_this3","push","unique","updateMetadata","name","description","new_users","catch","removeContact","_this4","u","User","_this5","levels","levelsForBuilding","recommendation","_this6","occupancy","sys","module","index","mod","_occupancy_binding","unbind","value","Object","keys","key","recommendation_factor","levelWithID","static","t","i0","i1","i2","i3","i4","core","jDH","factory","ɵfac","providedIn","lvl_r1","images","LandingAvailabilityComponent_div_3_button_1_img_2_Template","LandingAvailabilityComponent_div_3_button_1_ng_template_3_Template","_c0","_c1","length","placeholder_r2","display_name","tmp_10_0","ctx_r2","building","parent_id","LandingAvailabilityComponent_div_3_button_1_Template","LandingAvailabilityComponent_div_3_span_3_Template","levels_free","LandingAvailabilityComponent_div_4_mat_spinner_4_Template","tmp_5_0","space_r5","_r4","$implicit","book","LandingAvailabilityComponent_div_5_button_1_img_2_Template","tmp_4_0","space_placeholder_r6","tmp_7_0","level","zones","LandingAvailabilityComponent_div_5_button_1_Template","LandingAvailabilityComponent_div_5_span_3_Template","space_list","trackBySpaceId","LandingAvailabilityComponent","space","buildings","find","hide_spaces","hide_rooms","_state","_explore","bookSpace","VBU","selectors","features","ExploreSpacesService","decls","vars","consts","template","rf","ctx","LandingAvailabilityComponent_div_1_Template","LandingAvailabilityComponent_div_2_Template","LandingAvailabilityComponent_div_3_Template","LandingAvailabilityComponent_div_4_Template","LandingAvailabilityComponent_div_5_Template","LandingAvailabilityComponent_ng_template_6_Template","user_r3","_r2","ctx_r3","newMeeting","removeUser","location","location_name","organisation","menu_r5","LandingColleaguesComponent_ng_container_6_div_1_Template","user_r7","_r6","addUser","LandingColleaguesComponent_div_18_ng_container_1_button_1_Template","LandingColleaguesComponent_div_18_ng_container_1_Template","search_empty_r8","LandingColleaguesComponent","_event_form","_router","show_search","_ref","notifySuccess","_x","apply","arguments","_ref2","_x2","updateSearch","newForm","form","patchValue","attendees","navigate","openSearch","timeout","_input_el","nativeElement","focus","viewQuery","$localize","i18n_0","LandingColleaguesComponent_ng_container_6_Template","_r1","$event","LandingColleaguesComponent_div_18_Template","LandingColleaguesComponent_ng_template_20_Template","LandingColleaguesComponent_ng_template_22_Template","LandingColleaguesComponent_ng_template_24_Template","empty_state_r9","tmp_11_0","load_state_r10","item_r2","LandingFavouritesComponent_ng_container_4_div_1_img_3_Template","LandingFavouritesComponent_ng_container_4_div_1_ng_template_6_Template","newSpaceMeeting","toggleFavourite","tmp_6_0","space_placeholder_r4","tmp_8_0","tmp_9_0","item_r7","type","LandingFavouritesComponent_ng_container_4_div_2_img_3_Template","LandingFavouritesComponent_ng_container_4_div_2_ng_template_4_Template","newBooking","asset_placeholder_r8","zone","menu_r9","LandingFavouritesComponent_ng_container_4_div_1_Template","LandingFavouritesComponent_ng_container_4_div_2_Template","spaces","assets","EMPTY","LandingFavouritesComponent","desks","FAV_DESK_KEY","parking_spaces","FAV_PARKING_KEY","_space_pipe","_booking_form","loadResourceList","parking","includes","ngOnInit","fav_list","saveUserSetting","transform","resources","item","setTimeout","asset_id","booking_type","i5","i6","SpacePipe","i18n_2","LandingFavouritesComponent_ng_container_4_Template","LandingFavouritesComponent_ng_template_6_Template","empty_state_r10","_c2","LandingQuickLinksComponent","LandingQuickLinksComponent_a_3_Template","LandingQuickLinksComponent_a_4_Template","LandingQuickLinksComponent_a_5_Template","event_r2","edit","remove","editBooking","end","LandingUpcomingComponent_ng_container_12_ng_container_1_event_card_2_Template","LandingUpcomingComponent_ng_container_12_ng_container_1_booking_card_3_Template","LandingUpcomingComponent_ng_container_12_ng_container_1_Template","trackByFn","LandingUpcomingComponent","event","Booking","_dialog","asset_name","time","format","content","CalendarEvent","resp","openConfirmModal","title","icon","reason","removeEvent","removeBooking","calendar","system_id","system","e","notifyError","close","closeAll","checkinBooking","LandingUpcomingComponent_ng_container_12_Template","LandingUpcomingComponent_ng_template_14_Template","empty_state_r5","tab","LandingComponent_div_2_button_2_Template","LandingComponent_div_2_landing_colleagues_10_Template","LandingComponent_div_2_landing_favourites_11_Template","hide_colleagues","address","ROUTES","path","component","LandingComponent","hide_nav","localStorage","getItem","startOfMinute","hide_landing_sidebar","show_quick_links","LandingComponent_topbar_0_Template","LandingComponent_div_2_Template","LandingComponent_div_12_Template","LandingComponent_landing_quick_links_15_Template","LandingComponent_footer_menu_19_Template","AppLandingModule","$C","G2t","CommonModule","SharedComponentModule","FormsModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/landing/landing-state.service.ts","./apps/workplace/src/app/landing/landing-availability.component.ts","./apps/workplace/src/app/landing/landing-colleagues.component.ts","./apps/workplace/src/app/landing/landing-favourites.component.ts","./apps/workplace/src/app/landing/landing-quick-links.component.ts","./apps/workplace/src/app/landing/landing-upcoming.component.ts","./apps/workplace/src/app/landing/landing.component.ts","./apps/workplace/src/app/landing/landing.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    authority,\n    getModule,\n    PlaceMetadata,\n    PlaceVariableBinding,\n    queryUsers,\n    showMetadata,\n    showUser,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { searchStaff, StaffUser, User } from '@placeos/users';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { CalendarService } from '@placeos/calendar';\nimport { ScheduleStateService } from '../new-schedule/schedule-state.service';\nimport { isSameDay } from 'date-fns';\n\nexport interface LandingOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LandingStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<LandingOptions>({});\n    private _loading = new BehaviorSubject<string>('');\n    private _loading_spaces = new BehaviorSubject<boolean>(false);\n    /**  */\n    private _contacts = new BehaviorSubject<User[]>([]);\n    /**  */\n    private _level_occupancy = new BehaviorSubject<BuildingLevel[]>([]);\n    /**  */\n    private _occupancy_binding: PlaceVariableBinding;\n    /**  */\n\n    public _booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _space_list = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) => requestSpacesForZone(bld.id)),\n        map((_) => _.filter((s) => s.bookable)),\n        shareReplay(1)\n    );\n\n    private _filtered_spaces = combineLatest([\n        this._space_list,\n        this._booking_rules,\n    ]).pipe(\n        map(([list, rules]) =>\n            filterResourcesFromRules(\n                list,\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    host: currentUser(),\n                    resource: null,\n                },\n                rules\n            )\n        )\n    );\n\n    private _space_statuses = this._filtered_spaces.pipe(\n        tap((_) => this.unsubWith('bind:')),\n        switchMap((list) =>\n            combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'status'\n                    );\n                    const obs = binding.listen();\n                    this.subscription(`bind:${_.id}`, binding.bind());\n                    return obs;\n                })\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly free_space_list = combineLatest([\n        this._space_list,\n        this._space_statuses,\n    ]).pipe(\n        map(([list, statuses]) =>\n            (list || [])\n                .filter((_, idx) => statuses[idx] === 'free')\n                .sort((a, b) => a.capacity - b.capacity)\n        ),\n        shareReplay(1)\n    );\n    /**  */\n    public readonly upcoming_events = this._schedule.filtered_bookings.pipe(\n        map((_) =>\n            _.filter((i) => i.state !== 'done' && isSameDay(i.date, Date.now()))\n        )\n    );\n    /**  */\n    public contacts = this._contacts.asObservable();\n    /**  */\n    public options = this._options.asObservable();\n    /**  */\n    public loading = this._loading.asObservable();\n    /**  */\n    public loading_spaces = this._loading_spaces.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search') ||\n        this._settings.get('app.colleagues_require_auth') !== false\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map(({ data }) => data.map((_) => new StaffUser(_)))\n              )\n            : searchStaff(q);\n\n    public readonly search_results = this._options.pipe(\n        debounceTime(500),\n        switchMap(({ search }) => {\n            this._loading.next('Loading users...');\n            return search\n                ? this.search_fn(search).pipe(catchError(() => of([])))\n                : of([]);\n        }),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n    /**  */\n    public level_occupancy = this._level_occupancy.asObservable();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _schedule: ScheduleStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.updateContacts();\n        this.subscription(\n            'building',\n            this._org.active_building\n                .pipe(filter((bld) => !!bld))\n                .subscribe(() => {\n                    this.updateBuildingMetadata();\n                    this.updateOccupancy({});\n                })\n        );\n        let sys_id = this._org.binding('area_management');\n        if (!sys_id) return;\n        const binding = getModule(sys_id, 'AreaManagement').binding('overview');\n        binding.listen().subscribe((d) => this.updateOccupancy(d || {}));\n        binding.bind();\n    }\n\n    public setOptions(options: Partial<LandingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public pollUpcomingEvents(delay: number = 2 * 60 * 1000) {\n        this._schedule.setDate(Date.now());\n        this._schedule.triggerPoll();\n        return this._schedule.startPolling(delay);\n    }\n\n    public stopPollingUpcomingEvents() {\n        this._schedule.stopPolling();\n    }\n\n    public refreshUpcomingEvents() {\n        this._schedule.setDate(Date.now());\n        this._schedule.triggerPoll();\n    }\n\n    public async updateContacts() {\n        const metadata: PlaceMetadata = (await showMetadata(\n            currentUser().id,\n            'contacts'\n        ).toPromise()) as any;\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        const users = await Promise.all(\n            list.map((_) => showUser(_.email).toPromise())\n        );\n        this._contacts.next(users.map((i) => new StaffUser(i)));\n    }\n\n    public async addContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users.push(user);\n        users = unique(users, 'email');\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        const new_users = await Promise.all(\n            list.map((_) =>\n                showUser(_.email)\n                    .toPromise()\n                    .catch(() => (_.email === user.email ? user : null))\n            )\n        );\n        this._contacts.next(\n            new_users.filter((_) => !!_).map((i) => new StaffUser(i))\n        );\n    }\n\n    public async removeContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users = users.filter((u) => u.email !== user.email);\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    private async updateOccupancy(map: HashMap<{ recommendation: number }>) {\n        const levels = this._org.levelsForBuilding() || [];\n        levels.sort(\n            (a, b) => map[a.id]?.recommendation - map[b.id]?.recommendation\n        );\n        this._level_occupancy.next(levels);\n    }\n\n    private async updateBuildingMetadata() {\n        this._level_occupancy.next([]);\n        const occupancy: any = this._org.binding('occupancy');\n        if (!occupancy) return;\n        const { sys, module, index } = occupancy;\n        const mod = getModule(sys, module, index);\n        if (!mod) return;\n        if (this._occupancy_binding) {\n            this._occupancy_binding.unbind();\n        }\n        this._occupancy_binding = mod.binding('occupancy');\n        this._occupancy_binding.bind();\n        this.subscription(\n            'occupancy_binding',\n            this._occupancy_binding.listen().subscribe((value) => {\n                const levels = Object.keys(value).map((key) => ({\n                    id: key,\n                    ...value[key],\n                }));\n                levels.sort(\n                    (a, b) => a.recommendation_factor - b.recommendation_factor\n                );\n                this._level_occupancy.next(\n                    levels.map((i) => this._org.levelWithID([i.id]))\n                );\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { ExploreSpacesService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-availability',\n    template: `\n        <div class=\"py-2\">\n            <div\n                class=\"sm:text-lg font-medium mb-2 sm:mb-4 px-4\"\n                *ngIf=\"!hide_rooms || !hide_spaces\"\n            >\n                {{ 'WPA.AVAILABLE_NOW' | translate }}\n            </div>\n            <div\n                class=\"flex items-center text-sm sm:text-base px-4 space-x-2\"\n                *ngIf=\"!hide_spaces\"\n            >\n                <div>{{ 'WPA.SPACES' | translate }}</div>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n                *ngIf=\"!hide_spaces\"\n            >\n                <button\n                    name=\"landing-view-space\"\n                    matRipple\n                    *ngFor=\"let lvl of levels_free | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-base-100 shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ level: lvl.id }\"\n                >\n                    <div\n                        class=\"w-[4.5rem] h-[4.5rem] rounded bg-base-300 overflow-hidden flex items-center justify-center\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"lvl?.images?.length; else placeholder\"\n                            [source]=\"lvl?.images[0]\"\n                            class=\"min-h-full object-cover\"\n                        />\n                        <ng-template #placeholder>\n                            <img\n                                class=\"m-auto\"\n                                src=\"assets/icons/desk-placeholder.svg\"\n                            />\n                        </ng-template>\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ lvl.display_name || lvl.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>{{\n                                building(lvl.parent_id)?.display_name ||\n                                    building(lvl.parent_id)?.name\n                            }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(levels_free | async).length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                >\n                    {{ 'WPA.NO_FREE_SPACES' | translate }}\n                </span>\n            </div>\n            <div\n                class=\"flex items-center text-sm sm:text-base px-4 space-x-2\"\n                *ngIf=\"!hide_rooms\"\n            >\n                <div>{{ 'WPA.ROOMS' | translate }}</div>\n                <mat-spinner\n                    diameter=\"24\"\n                    *ngIf=\"loading_spaces | async\"\n                ></mat-spinner>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n                *ngIf=\"!hide_rooms\"\n            >\n                <button\n                    name=\"landing-book-room\"\n                    matRipple\n                    *ngFor=\"\n                        let space of space_list | async;\n                        trackBy: trackBySpaceId\n                    \"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-base-100 shadow p-4 space-x-2\"\n                    (click)=\"book(space)\"\n                >\n                    <div\n                        class=\"w-[4.5rem] h-[4.5rem] rounded bg-base-300 overflow-hidden flex items-center justify-center\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"\n                                (space.id | space | async)?.images?.length;\n                                else space_placeholder\n                            \"\n                            [source]=\"(space.id | space | async)?.images[0]\"\n                            class=\"min-h-full object-cover\"\n                        />\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>{{\n                                level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(space_list | async)?.length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                >\n                    {{ 'WPA.NO_FREE_ROOMS' | translate }}\n                </span>\n            </div>\n        </div>\n        <ng-template #space_placeholder>\n            <img class=\"m-auto\" src=\"assets/icons/room-placeholder.svg\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            * {\n                flex-shrink: 0;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService],\n})\nexport class LandingAvailabilityComponent {\n    public readonly space_list = this._state.free_space_list;\n    public readonly loading_spaces = this._state.loading_spaces;\n    public readonly levels_free = this._state.level_occupancy;\n\n    public book = (s) => this._explore.bookSpace(s, true);\n\n    public trackBySpaceId(index: number, space: Space) {\n        return space.id;\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public building(id: string) {\n        return this._org.buildings.find((bld) => bld.id === id);\n    }\n\n    public get hide_spaces() {\n        return this._settings.get('app.general.hide_spaces');\n    }\n\n    public get hide_rooms() {\n        return this._settings.get('app.general.hide_rooms');\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _explore: ExploreSpacesService\n    ) {}\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AsyncHandler, notifySuccess, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { User } from '@placeos/users';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-colleagues',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-base-200\"\n        >\n            <h2 class=\"mx-2\" i18n>\n                {{ (contacts | async)?.length || 0 }} { (contacts |\n                async)?.length, plural, =1 { Person } other { People } }\n            </h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button icon\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button icon\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div class=\"flex-1 h-1/2 w-full space-y-4 overflow-auto pt-4\">\n            <ng-container *ngIf=\"(contacts | async)?.length; else empty_state\">\n                <div\n                    class=\"flex items-center px-2 space-x-2 relative\"\n                    user\n                    *ngFor=\"let user of contacts | async\"\n                >\n                    <div class=\"text-xl relative\">\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div\n                            class=\"rounded-full h-3 w-3 border border-white absolute bottom-1 right-1\"\n                            [class.bg-error]=\"\n                                user.location === 'aol' ||\n                                user.location === 'ooo'\n                            \"\n                            [class.bg-success]=\"user.location === 'wfo'\"\n                            [class.bg-warning]=\"user.location === 'wfh'\"\n                            [class.bg-neutral]=\"!user.location\"\n                            [matTooltip]=\"user.location_name\"\n                        ></div>\n                    </div>\n                    <div class=\"leading-tight flex-1 w-1/2\">\n                        <div class=\"truncate\" [matTooltip]=\"user.name\">\n                            {{ user.name }}\n                        </div>\n                        <div\n                            class=\"text-sm truncate\"\n                            [matTooltip]=\"user.organisation\"\n                        >\n                            {{ user.organisation }}\n                        </div>\n                        <div class=\"text-xs opacity-60 truncate\">\n                            {{ user.location_name }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        name=\"colleague-more\"\n                        class=\"!rounded bg-base-200\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <button\n                            mat-menu-item\n                            name=\"meeting-with-colleague\"\n                            (click)=\"newMeeting(user)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">today</app-icon>\n                                <div>\n                                    {{ 'WPA.CREATE_MEETING' | translate }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            name=\"remove-colleague\"\n                            mat-menu-item\n                            (click)=\"removeUser(user)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">cancel</app-icon>\n                                <div>\n                                    {{ 'WPA.REMOVE_COLLEAGUE' | translate }}\n                                </div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <button\n            btn\n            name=\"open-colleague-search\"\n            matRipple\n            class=\"inverse w-[calc(100%-1rem)] m-2\"\n            (click)=\"openSearch()\"\n        >\n            {{ 'WPA.ADD' | translate }}\n        </button>\n        <div\n            search\n            [class.hidden]=\"!show_search\"\n            class=\"absolute inset-x-2 top-2 bottom-[3.5rem] rounded-lg overflow-hidden flex flex-col bg-base-100 shadow border border-base-200\"\n        >\n            <input\n                #search_input\n                [ngModel]=\"(options | async)?.search\"\n                (ngModelChange)=\"updateSearch($event)\"\n                placeholder=\"Search for users...\"\n                class=\"w-full border-b border-base-200 p-2 rounded-t-lg\"\n            />\n            <button\n                icon\n                name=\"close-colleague-search\"\n                class=\"absolute top-0 right-0\"\n                (click)=\"show_search = false\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <div\n                class=\"overflow-auto flex-1 h-1/2 flex flex-col space-y-2\"\n                *ngIf=\"!(loading | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(search_results | async)?.length; else search_empty\"\n                >\n                    <button\n                        matRipple\n                        name=\"add-colleague\"\n                        class=\"flex items-center p-1 space-x-2 w-full text-left min-h-12\"\n                        *ngFor=\"let user of search_results | async\"\n                        (click)=\"addUser(user)\"\n                    >\n                        <div class=\"text-base relative\">\n                            <a-user-avatar [user]=\"user\"></a-user-avatar>\n                            <!-- <div\n                                class=\"rounded-full h-3 w-3 border border-white absolute bottom-1 right-1\"\n                                [class.bg-error]=\"!user.location\"\n                                [class.bg-success]=\"user.location\"\n                            ></div> -->\n                        </div>\n                        <div class=\"leading-tight\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div class=\"text-sm truncate\">\n                                {{ user.organisation }}\n                            </div>\n                        </div>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-contacts.svg\" />\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ 'WPA.COLLEAGUES_EMPTY' | translate }}\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #search_empty>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{\n                        !(options | async)?.search\n                            ? 'Start typing to search for users.'\n                            : 'Unable for find any users matching \"' +\n                              (options | async)?.search +\n                              '\"'\n                    }}\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{ 'WPA.COLLEAGUES_SEARCHING' | translate }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class LandingColleaguesComponent extends AsyncHandler {\n    public show_search = false;\n    public readonly contacts = this._state.contacts;\n\n    public readonly search_results = combineLatest([\n        this._state.search_results,\n        this._state.contacts,\n    ]).pipe(\n        map(([list, contacts]) =>\n            list.filter(\n                (_) =>\n                    !contacts.find(\n                        (user) => user.id === _.id || user.email === _.email\n                    )\n            )\n        )\n    );\n\n    public readonly options = this._state.options;\n\n    public readonly loading = this._state.loading;\n\n    public readonly addUser = async (u) => {\n        await this._state.addContact(u);\n        notifySuccess(`Successfully added \"${u.name}\" to contacts`);\n        this.show_search = false;\n    };\n\n    public readonly removeUser = async (u) => {\n        await this._state.removeContact(u);\n        notifySuccess(`Successfully removed \"${u.name}\" from contacts`);\n    };\n\n    public readonly updateSearch = (s) => this._state.setOptions({ search: s });\n\n    @ViewChild('search_input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _state: LandingStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public newMeeting(user: User) {\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ attendees: [user] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public openSearch() {\n        this.updateSearch('');\n        this.show_search = true;\n        this.timeout('open', () => this._input_el.nativeElement.focus(), 100);\n    }\n}\n","import { P } from '@angular/cdk/keycodes';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    BookingFormService,\n    BookingType,\n    FAV_PARKING_KEY,\n} from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { FAV_DESK_KEY } from 'libs/bookings/src/lib/desk-select-modal/desk-select-modal.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'landing-favourites',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-base-200\"\n        >\n            <h2 class=\"mx-2\" i18n>\n                {{ spaces?.length || 0 }} { spaces?.length, plural, =1 {\n                Resource } other { Resources } }\n            </h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button icon\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button icon\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div\n            class=\"flex-1 h-1/2 w-full space-y-2 overflow-auto pt-4 divide-y divide-base-200\"\n        >\n            <ng-container\n                *ngIf=\"\n                    spaces?.length || (assets | async)?.length;\n                    else empty_state\n                \"\n            >\n                <div\n                    class=\"flex flex-col items-center mx-2 pt-4 space-y-2 relative\"\n                    item\n                    *ngFor=\"let item of spaces\"\n                >\n                    <div class=\"flex w-full items-center space-x-2 relative\">\n                        <div\n                            class=\"w-20 h-20 overflow-hidden rounded relative flex items-center justify-center bg-neutral\"\n                        >\n                            <img\n                                auth\n                                *ngIf=\"\n                                    (item | space | async)?.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-w-full min-h-full\"\n                                [source]=\"(item | space | async)?.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"h-20 flex-1 w-1/2\">\n                            <div class=\"truncate mb-4 w-full pr-12\">\n                                {{\n                                    (item | space | async)?.display_name ||\n                                        (item | space | async)?.name\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2 mb-2\"\n                            >\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <div>\n                                    {{\n                                        level(item | space | async)\n                                            ?.display_name\n                                    }}\n                                </div>\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2\"\n                            >\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <div i18n>\n                                    {{ (item | space | async)?.capacity || 2 }}\n                                    { (item | space | async)?.capacity || 2,\n                                    plural, =1 { Person } other { People } }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        btn\n                        name=\"book-favourite\"\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"newSpaceMeeting(item)\"\n                    >\n                        {{ 'WPA.BOOK' | translate }}\n                    </button>\n                    <button\n                        icon\n                        name=\"favourite-more\"\n                        [matMenuTriggerFor]=\"menu\"\n                        class=\"absolute top-2 right-0 bg-base-200 !rounded !m-0\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <!-- <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">info</app-icon>\n                            <div>{{ 'WPA.VIEW_DETAILS' | translate }}</div>\n                        </button> -->\n                        <button\n                            name=\"landing-remove-favourite\"\n                            mat-menu-item\n                            (click)=\"toggleFavourite('space', item)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>{{ 'WPA.FAVOURITES_REMOVE' | translate }}</div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    class=\"flex flex-col items-center mx-2 pt-4 space-y-2 relative\"\n                    item\n                    *ngFor=\"let item of assets | async\"\n                >\n                    <div class=\"flex w-full items-center space-x-2 relative\">\n                        <div\n                            class=\"w-20 h-20 overflow-hidden rounded relative flex items-center justify-center bg-neutral\"\n                        >\n                            <img\n                                auth\n                                *ngIf=\"\n                                    item?.images?.length;\n                                    else asset_placeholder\n                                \"\n                                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-w-full min-h-full\"\n                                [source]=\"item?.images[0]\"\n                            />\n                            <ng-template #asset_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    [src]=\"\n                                        'assets/icons/' +\n                                        (item.type === 'desk'\n                                            ? 'desk'\n                                            : 'car') +\n                                        '-placeholder.svg'\n                                    \"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"h-20\">\n                            <div class=\"truncate mb-4\">\n                                {{ item?.display_name || item?.name }}\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2 mb-2\"\n                            >\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <div>\n                                    {{ item?.zone?.display_name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        btn\n                        name=\"book-favourite\"\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"newBooking(item.type, item)\"\n                        i18n\n                    >\n                        {{ 'WPA.BOOK' | translate }}\n                    </button>\n                    <button\n                        icon\n                        name=\"favourite-more\"\n                        [matMenuTriggerFor]=\"menu\"\n                        class=\"absolute top-2 right-0 bg-base-200 !rounded !m-0\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <!-- <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">info</app-icon>\n                            <div>{{ 'WPA.VIEW_DETAILS' | translate }}</div>\n                        </button> -->\n                        <button\n                            name=\"landing-remove-favourite\"\n                            mat-menu-item\n                            (click)=\"toggleFavourite(item.type, item.id)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>{{ 'WPA.FAVOURITES_REMOVE' | translate }}</div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-favourites.svg\" />\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{ 'WPA.FAVOURITES_EMPTY' | translate }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class LandingFavouritesComponent extends AsyncHandler {\n    public readonly assets = combineLatest([\n        this._booking_form.loadResourceList('desks' as any),\n        this._booking_form.loadResourceList('parking-spaces' as any),\n    ]).pipe(\n        map(([desks, parking]) => {\n            return [\n                ...desks\n                    .filter(({ id }) => this.desks.includes(id))\n                    .map((_) => ({ ..._, type: 'desk' })),\n                ...parking\n                    .filter(({ id }) => this.parking_spaces.includes(id))\n                    .map((_) => ({ ..._, type: 'parking' })),\n            ];\n        }),\n        shareReplay(1)\n    );\n\n    public get spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY;\n    }\n\n    public get desks() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY;\n    }\n\n    public get parking_spaces() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || EMPTY;\n    }\n\n    public level(space: Space) {\n        return this._org.levelWithID(space?.zones || []);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _event_form: EventFormService,\n        private _booking_form: BookingFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {}\n\n    public toggleFavourite(type: 'space' | 'desk' | 'parking', id: string) {\n        let fav_list = this.spaces;\n        let key = 'favourite_spaces';\n        switch (type) {\n            case 'desk':\n                fav_list = this.desks;\n                key = FAV_DESK_KEY;\n                break;\n            case 'parking':\n                fav_list = this.parking_spaces;\n                key = FAV_PARKING_KEY;\n                break;\n        }\n        const new_state = !fav_list.includes(id);\n        if (new_state) {\n            this._settings.saveUserSetting(key, [...fav_list, id]);\n        } else {\n            this._settings.saveUserSetting(\n                key,\n                fav_list.filter((_) => _ !== id)\n            );\n        }\n    }\n\n    public async newSpaceMeeting(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ resources: [space] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public async newBooking(type: BookingType, item: any) {\n        if (!item) return;\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate([\n                '/book',\n                type === 'desk' ? 'new-desk' : 'new-parking',\n            ]);\n        } else {\n            this._router.navigate([\n                '/book',\n                type === 'desk' ? 'desks' : 'parking',\n            ]);\n        }\n        setTimeout(() => {\n            this._booking_form.newForm();\n            this._booking_form.setOptions({ type });\n            this._booking_form.form.patchValue({\n                resources: [item],\n                asset_id: item.id,\n                booking_type: type,\n            });\n        }, 100);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'landing-quick-links',\n    template: `\n        <h3 class=\"sm:text-lg font-medium mb-2 sm:mb-4 px-4\">\n            Make a Reservation\n        </h3>\n        <div class=\"flex w-full overflow-auto space-x-2 px-4 mb-4\">\n            <a\n                matRipple\n                class=\"w-64 p-2 rounded shadow border border-base-200 flex items-center space-x-4 bg-base-100\"\n                [routerLink]=\"['/book', 'meeting']\"\n                *ngIf=\"features.includes('spaces')\"\n            >\n                <div\n                    class=\"min-w-[4rem] h-16 rounded bg-base-200 flex items-center justify-center\"\n                >\n                    <img\n                        class=\"m-auto\"\n                        src=\"assets/icons/room-placeholder.svg\"\n                    />\n                </div>\n                <div class=\"text-xl\">Book a Room</div>\n            </a>\n            <a\n                matRipple\n                class=\"w-64 p-2 rounded shadow border border-base-200 flex items-center space-x-4 bg-base-100\"\n                [routerLink]=\"['/book', 'new-desk']\"\n                *ngIf=\"features.includes('desks')\"\n            >\n                <div\n                    class=\"min-w-[4rem] h-16 rounded bg-base-200 flex items-center justify-center\"\n                >\n                    <img\n                        class=\"m-auto\"\n                        src=\"assets/icons/desk-placeholder.svg\"\n                    />\n                </div>\n                <div class=\"text-xl\">Book a Desk</div>\n            </a>\n            <a\n                matRipple\n                class=\"w-64 p-2 rounded shadow border border-base-200 flex items-center space-x-4 bg-base-100\"\n                [routerLink]=\"['/book', 'new-parking']\"\n                *ngIf=\"features.includes('parking')\"\n            >\n                <div\n                    class=\"min-w-[4rem] h-16 rounded bg-base-200 flex items-center justify-center\"\n                >\n                    <img\n                        class=\"m-auto\"\n                        src=\"assets/icons/car-placeholder.svg\"\n                    />\n                </div>\n                <div class=\"text-xl\">Book a Parking Space</div>\n            </a>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LandingQuickLinksComponent {\n    public get features() {\n        return this._settings.get('app.features') || [];\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport {\n    Booking,\n    BookingFormService,\n    checkinBooking,\n    removeBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport { CalendarEvent, EventFormService, removeEvent } from '@placeos/events';\nimport { format } from 'date-fns';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-upcoming',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"flex items-center justify-between mb-2 sm:mb-4 px-4\">\n                <div class=\"sm:text-lg font-medium\">\n                    {{ 'WPA.YOUR_BOOKINGS' | translate }}\n                </div>\n                <a\n                    btn\n                    name=\"upcoming-view-all\"\n                    class=\"inverse hidden sm:flex\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    {{ 'WPA.VIEW_ALL' | translate }}\n                </a>\n                <a\n                    name=\"upcoming-view-all-mobile\"\n                    class=\"inverse flex sm:hidden text-blue-500 underline relative top-8\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    {{ 'WPA.VIEW_ALL' | translate }}\n                </a>\n            </div>\n            <div class=\"space-y-4 px-4\">\n                <ng-container\n                    *ngIf=\"(upcoming_events | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"\n                            let event of upcoming_events | async | slice: 0:5;\n                            trackBy: trackByFn\n                        \"\n                    >\n                        <ng-container [ngSwitch]=\"type(event)\">\n                            <event-card\n                                *ngSwitchCase=\"'event'\"\n                                [event]=\"event\"\n                                [show_day]=\"true\"\n                                (edit)=\"edit(event)\"\n                                (remove)=\"remove(event)\"\n                            ></event-card>\n                            <booking-card\n                                *ngSwitchCase=\"'booking'\"\n                                [booking]=\"event\"\n                                [show_day]=\"true\"\n                                (edit)=\"editBooking(event)\"\n                                (remove)=\"remove(event)\"\n                                (end)=\"end(event)\"\n                            ></booking-card>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\">\n                    {{ 'WPA.NO_UPCOMING_BOOKINGS' | translate }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LandingUpcomingComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly upcoming_events = this._state.upcoming_events;\n\n    public type(event: CalendarEvent | Booking) {\n        return event instanceof Booking ? 'booking' : 'event';\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _event_form: EventFormService,\n        private _booking_form: BookingFormService,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        // this._state.refreshUpcomingEvents();\n        this.subscription('poll', this._state.pollUpcomingEvents());\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n\n    public edit(event: CalendarEvent) {\n        this._router.navigate(['/book', 'meeting', 'form']);\n        this._event_form.newForm(event);\n    }\n\n    public editBooking(event: Booking) {\n        this._router.navigate(['/book', `new-${event.type}`]);\n        this._booking_form.newForm(event);\n        setTimeout(() => {\n            this._booking_form.form.patchValue({\n                resources: [\n                    {\n                        id: event.asset_id,\n                        name: event.asset_name || event.description,\n                    },\n                ],\n                asset_id: event.asset_id,\n            });\n        }, 100);\n    }\n\n    public async remove(item: CalendarEvent | Booking) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name =\n            item instanceof CalendarEvent\n                ? item.space?.display_name\n                : item.asset_name || item.asset_id;\n        const content = `Delete the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await (item instanceof CalendarEvent ? removeEvent : removeBooking)(\n            item.id,\n            {\n                calendar: this._settings.get('app.no_user_calendar')\n                    ? null\n                    : currentUser()?.email,\n                system_id: (item as any).system?.id,\n            }\n        )\n            .toPromise()\n            .catch((e) => {\n                notifyError(`Unable to delete booking. ${e}`);\n                resp.close();\n                throw e;\n            });\n        notifySuccess('Successfully deleted booking.');\n        this._state.refreshUpcomingEvents();\n        this._dialog.closeAll();\n    }\n\n    public async end(item: Booking) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name = item.asset_name || item.asset_id;\n        const content = `End the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `End booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n\n        if (resp.reason !== 'done') return;\n        resp.loading('Ending booking...');\n        await checkinBooking(item.id, false)\n            .toPromise()\n            .catch((e) => {\n                notifyError(`Unable to end booking. ${e}`);\n                resp.close();\n                throw e;\n            });\n        notifySuccess('Successfully ended booking.');\n        this._state.refreshUpcomingEvents();\n        this._dialog.closeAll();\n    }\n}\n","import { Component } from '@angular/core';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { startOfMinute } from 'date-fns';\n\n@Component({\n    selector: 'app-landing',\n    template: `\n        <topbar class=\"z-10\" *ngIf=\"!hide_nav\"></topbar>\n        <div class=\"flex flex-1 h-1/2 bg-base-200\">\n            <div\n                class=\"relative hidden sm:flex flex-col w-[18rem] h-full overflow-hidden bg-base-100 border-r border-base-300\"\n                *ngIf=\"!hide_landing_sidebar\"\n            >\n                <div class=\"flex items-center divide-x divide-base-200\">\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'people'\"\n                        [class.border-base-200]=\"tab !== 'people'\"\n                        [class.bg-base-200]=\"tab !== 'people'\"\n                        [class.bg-opacity-5]=\"tab !== 'people'\"\n                        (click)=\"tab = 'people'\"\n                        *ngIf=\"!hide_colleagues\"\n                    >\n                        <app-icon>people</app-icon>\n                        <div>\n                            {{ 'WPA.COLLEAGUES' | uppercase | translate }}\n                        </div>\n                    </button>\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'fav'\"\n                        [class.border-base-200]=\"tab !== 'fav'\"\n                        [class.bg-base-200]=\"tab !== 'fav'\"\n                        [class.bg-opacity-5]=\"tab !== 'fav'\"\n                        (click)=\"tab = 'fav'\"\n                    >\n                        <app-icon>favorite</app-icon>\n                        <div>{{ 'WPA.FAVOURITES' | translate }}</div>\n                    </button>\n                </div>\n                <div class=\"flex-1 w-full h-1/2\">\n                    <landing-colleagues\n                        *ngIf=\"tab === 'people' && !hide_colleagues\"\n                    ></landing-colleagues>\n                    <landing-favourites\n                        *ngIf=\"tab === 'fav' || hide_colleagues\"\n                    ></landing-favourites>\n                </div>\n            </div>\n            <div class=\"flex-1 h-full w-1/2 sm:px-4 overflow-auto z-0\">\n                <header\n                    class=\"sticky top-0 z-50 bg-base-300 px-4 sm:rounded-b flex items-center justify-between overflow-hidden\"\n                >\n                    <div class=\"\">\n                        <div class=\"sm:text-xl font-medium\">\n                            {{\n                                'WPA.WELCOME_MESSAGE'\n                                    | translate: { name: user?.name }\n                            }}\n                        </div>\n                        <div date class=\"text-sm sm:text-base\">\n                            {{ date | date: 'fullDate' }}\n                        </div>\n                        <div\n                            class=\"text-sm sm:text-base\"\n                            *ngIf=\"building?.address || building?.name\"\n                        >\n                            {{\n                                building.address ||\n                                    building.display_name ||\n                                    building.name\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"h-32 pt-4\">\n                        <img src=\"assets/img/landing.svg\" />\n                    </div>\n                </header>\n                <landing-quick-links\n                    *ngIf=\"show_quick_links\"\n                ></landing-quick-links>\n                <landing-availability></landing-availability>\n                <div\n                    class=\"mx-4 w-[calc(100%-2rem)] h-px bg-base-200 mb-2\"\n                ></div>\n                <landing-upcoming></landing-upcoming>\n            </div>\n        </div>\n        <footer-menu *ngIf=\"!hide_nav\"></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n        `,\n    ],\n})\nexport class LandingComponent {\n    public time: number;\n    public tab = 'people';\n\n    public get hide_nav() {\n        return localStorage.getItem('PlaceOS.hide_nav') === 'true';\n    }\n\n    public get date() {\n        return startOfMinute(this.time || Date.now());\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get hide_landing_sidebar() {\n        return this._settings.get('app.general.hide_landing_sidebar');\n    }\n\n    public get hide_colleagues() {\n        return this._settings.get('app.general.hide_colleagues');\n    }\n\n    public get show_quick_links() {\n        return this._settings.get('app.general.show_quick_links');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { LandingAvailabilityComponent } from './landing-availability.component';\nimport { LandingColleaguesComponent } from './landing-colleagues.component';\nimport { LandingFavouritesComponent } from './landing-favourites.component';\nimport { LandingQuickLinksComponent } from './landing-quick-links.component';\nimport { LandingUpcomingComponent } from './landing-upcoming.component';\nimport { LandingComponent } from './landing.component';\n\nconst COMPONENTS = [\n    LandingComponent,\n    LandingColleaguesComponent,\n    LandingAvailabilityComponent,\n    LandingUpcomingComponent,\n    LandingFavouritesComponent,\n    LandingQuickLinksComponent,\n];\n\nconst ROUTES = [{ path: '', component: LandingComponent }];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppLandingModule {}\n"],"x_google_ignoreList":[]}