{"version":3,"sources":["./apps/workplace/src/app/landing/landing-state.service.ts","./apps/workplace/src/app/landing/landing-availability.component.ts","./apps/workplace/src/app/landing/landing-colleagues.component.ts","./apps/workplace/src/app/landing/landing-upcoming.component.ts","./apps/workplace/src/app/landing/landing.module.ts","./apps/workplace/src/app/landing/landing.component.ts"],"names":["LandingStateService","_calendar","_org","super","_options","BehaviorSubject","_free_spaces","_upcoming_events","_contacts","_level_occupancy","free_spaces","this","asObservable","upcoming_events","contacts","options","search_results","pipe","debounceTime","switchMap","search","of","catchError","_","shareReplay","level_occupancy","init","initialised","first","toPromise","subscription","active_building","filter","bld","subscribe","updateBuildingMetadata","organisation","bindings","area_management","binding","listen","d","updateOccupancy","bind","next","getValue","delay","updateFreeSpaces","interval","clearInterval","updateUpcomingEvents","metadata","id","details","Array","map","i","user","users","push","name","description","u","email","levels","sort","a","b","recommendation","building","period_start","Math","floor","Date","valueOf","period_end","endOfDay","list","freeBusy","zone_ids","space","availability","length","find","status","capacity","events","calendars","occupancy","module","sys","index","_occupancy_binding","unbind","value","Object","keys","key","recommendation_factor","levelWithID","LandingAvailabilityComponent","_state","space_list","levels_free","pollFreeSpaces","stopPollingFreeSpaces","LandingColleaguesComponent","addUser","addContact","removeUser","removeContact","updateSearch","s","setOptions","LandingUpcomingComponent","event","pollUpcomingEvents","stopPollingUpcomingEvents","ROUTES","path","component","LandingComponent","startOfMinute","time","now","AppLandingModule"],"mappings":"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","file":"apps_workplace_src_app_landing_landing_module_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    getModule,\n    PlaceMetadata,\n    PlaceVariableBinding,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { endOfDay } from 'date-fns';\n\nimport { BaseClass, currentUser, HashMap, unique } from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { CalendarEvent, queryEvents } from '@placeos/events';\nimport { searchStaff, User } from '@placeos/users';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { CalendarService } from '@placeos/calendar';\n\nexport interface LandingOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LandingStateService extends BaseClass {\n    private _options = new BehaviorSubject<LandingOptions>({});\n    /**  */\n    private _free_spaces = new BehaviorSubject<Space[]>([]);\n    /**  */\n    private _upcoming_events = new BehaviorSubject<CalendarEvent[]>([]);\n    /**  */\n    private _contacts = new BehaviorSubject<User[]>([]);\n    /**  */\n    private _level_occupancy = new BehaviorSubject<BuildingLevel[]>([]);\n    /**  */\n    private _occupancy_binding: PlaceVariableBinding;\n    /**  */\n    public free_spaces = this._free_spaces.asObservable();\n    /**  */\n    public upcoming_events = this._upcoming_events.asObservable();\n    /**  */\n    public contacts = this._contacts.asObservable();\n    /**  */\n    public options = this._options.asObservable();\n\n    public readonly search_results = this._options.pipe(\n        debounceTime(500),\n        switchMap(({ search }) => (search ? searchStaff(search) : of([]))),\n        catchError((_) => []),\n        shareReplay(1)\n    );\n    /**  */\n    public level_occupancy = this._level_occupancy.asObservable();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'building',\n            this._org.active_building\n                .pipe(filter((bld) => !!bld))\n                .subscribe(() => this.updateBuildingMetadata())\n        );\n        if (!this._org.organisation.bindings.area_management) return;\n        const binding = getModule(\n            this._org.organisation.bindings.area_management,\n            'AreaManagement'\n        ).binding('overview');\n        binding.listen().subscribe((d) => this.updateOccupancy(d || {}));\n        binding.bind();\n    }\n\n    public setOptions(options: Partial<LandingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public pollFreeSpaces(delay: number = 10 * 1000) {\n        this.updateFreeSpaces();\n        this.interval('free_spaces', () => this.updateFreeSpaces(), delay);\n    }\n\n    public stopPollingFreeSpaces() {\n        this.clearInterval('free_spaces');\n    }\n\n    public pollUpcomingEvents(delay: number = 10 * 1000) {\n        this.updateUpcomingEvents();\n        this.interval(\n            'upcoming_events',\n            () => this.updateUpcomingEvents(),\n            delay\n        );\n    }\n\n    public stopPollingUpcomingEvents() {\n        this.clearInterval('upcoming_events');\n    }\n\n    public async updateContacts() {\n        const metadata: PlaceMetadata = (await showMetadata(\n            currentUser().id,\n            'contacts'\n        ).toPromise()) as any;\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async addContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users.push(user);\n        users = unique(users, 'email');\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async removeContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users = users.filter((u) => u.email !== user.email);\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    private async updateOccupancy(map: HashMap<{ recommendation: number }>) {\n        const levels = [...this._org.levels];\n        levels.sort(\n            (a, b) => map[a.id]?.recommendation - map[b.id]?.recommendation\n        );\n        this._level_occupancy.next(levels);\n    }\n\n    private async updateFreeSpaces() {\n        if (!this._org.building) return;\n        const period_start = Math.floor(new Date().valueOf() / 1000);\n        const period_end = Math.floor(endOfDay(new Date()).valueOf() / 1000);\n        const list = await this._calendar\n            .freeBusy({\n                period_start,\n                period_end,\n                zone_ids: this._org.building.id,\n            })\n            .pipe(\n                map((_) =>\n                    _.filter(\n                        (space) =>\n                            !space.availability.length ||\n                            space.availability.find((_) => _.status !== 'busy')\n                    )\n                )\n            )\n            .toPromise();\n        list.sort((a, b) => a.capacity - b.capacity);\n        this._free_spaces.next(list);\n    }\n\n    private async updateUpcomingEvents() {\n        const period_start = Math.floor(new Date().valueOf() / 1000);\n        const period_end = Math.floor(endOfDay(new Date()).valueOf() / 1000);\n        const events = await queryEvents({\n            period_start,\n            period_end,\n            calendars: currentUser().email,\n        }).toPromise();\n        this._upcoming_events.next(events);\n    }\n\n    private async updateBuildingMetadata() {\n        const building = this._org.building;\n        const metadata = await showMetadata(building.id, 'bindings').toPromise();\n        if (!(metadata.details as HashMap).occupancy) return;\n        const details = (metadata.details as HashMap).occupancy;\n        const module = getModule(details.sys, details.module, details.index);\n        if (!module) return;\n        if (this._occupancy_binding) {\n            this._occupancy_binding.unbind();\n        }\n        this._occupancy_binding = module.binding('occupancy');\n        this._occupancy_binding.bind();\n        this.subscription(\n            'occupancy_binding',\n            this._occupancy_binding.listen().subscribe((value) => {\n                const levels = Object.keys(value).map((key) => ({\n                    id: key,\n                    ...value[key],\n                }));\n                levels.sort(\n                    (a, b) => a.recommendation_factor - b.recommendation_factor\n                );\n                this._level_occupancy.next(\n                    levels.map((i) => this._org.levelWithID([i.id]))\n                );\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-availability',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"sm:text-lg font-medium mb-2 sm:mb-4 px-4\">Available Now</div>\n            <div class=\"text-sm sm:text-base px-4\">Spaces</div>\n            <div class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\">\n                <button\n                    matRipple\n                    *ngFor=\"let lvl of levels_free | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ level: lvl.id }\"\n                >\n                    <div\n                        class=\"min-w-[4.5rem] h-[4.5rem] rounded bg-gray-200\"\n                    ></div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                        {{ lvl.display_name || lvl.name }}\n                        </div>\n                        <div class=\"max-w-full truncate text-sm opacity-60 flex items-center\">\n                            <app-icon class=\"text-blue-500 text-lg\">place</app-icon>\n                            <span>Unknown Building</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(levels_free | async).length\"\n                    class=\"text-dark-fade text-sm mb-2\"\n                >\n                    No free spaces\n                </span>\n            </div>\n            <div class=\"text-sm sm:text-base my-2 px-4\">Rooms</div>\n            <div class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\">\n                <button\n                    matRipple\n                    *ngFor=\"let space of space_list | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ space: space.email }\"\n                >\n                    <div\n                        class=\"min-w-[4.5rem] h-[4.5rem] rounded bg-gray-200\"\n                    ></div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                        <div class=\"max-w-full truncate text-sm opacity-60 flex items-center\">\n                            <app-icon class=\"text-blue-500 text-lg\">place</app-icon>\n                            <span>{{ space.level.display_name || space.level.name }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(space_list | async).length\"\n                    class=\"text-dark-fade text-sm mb-2\"\n                >\n                    No free rooms\n                </span>\n            </div>\n        </div>\n    `,\n    styles: [`\n        * {\n            flex-shrink: 0;\n        }\n    `],\n})\nexport class LandingAvailabilityComponent {\n    public readonly space_list = this._state.free_spaces;\n    public readonly levels_free = this._state.level_occupancy;\n\n    constructor(private _state: LandingStateService) {}\n\n    public async ngOnInit() {\n        this._state.pollFreeSpaces();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingFreeSpaces();\n    }\n}\n","import { Component } from '@angular/core';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-colleagues',\n    template: `\n        <div\n            class=\"flex flex-col w-[18rem] h-full overflow-hidden bg-white border-r border-gray-200\"\n        >\n            <div class=\"flex items-center justify-between px-4 py-2\">\n                <h2 class=\"font-medium\">Colleagues</h2>\n                <button mat-button class=\"inverse\">Add</button>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full space-y-4 overflow-auto pt-4\">\n                <div\n                    class=\"flex items-center px-4 space-x-4\"\n                    *ngFor=\"let user of contacts | async\"\n                >\n                    <div class=\"text-xl relative\">\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div\n                            class=\"rounded-full h-3 w-3 border border-white absolute bottom-1 right-1\"\n                            [class.bg-error]=\"!user.location\"\n                            [class.bg-success]=\"user.location\"\n                        ></div>\n                    </div>\n                    <div class=\"leading-tight\">\n                        <div class=\"truncate\">{{ user.name }}</div>\n                        <div class=\"text-sm truncate\">\n                            {{ user.organisation }}\n                        </div>\n                        <div class=\"text-xs opacity-60 truncate\">\n                            {{ user.location }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n})\nexport class LandingColleaguesComponent {\n    public readonly contacts = this._state.contacts;\n\n    public readonly search_results = this._state.search_results;\n\n    public readonly addUser = (u) => this._state.addContact(u);\n\n    public readonly removeUser = (u) => this._state.removeContact(u);\n\n    public readonly updateSearch = (s) => this._state.setOptions({ search: s });\n\n    constructor(private _state: LandingStateService) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { CalendarEvent } from '@placeos/events';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-upcoming',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"flex items-center justify-between mb-2 sm:mb-4 px-4\">\n                <div class=\"sm:text-lg font-medium\">Your Bookings</div>\n                <a\n                    button\n                    mat-button\n                    class=\"inverse hidden sm:block\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    View All\n                </a>\n                <a\n                    class=\"inverse block sm:hidden text-blue-500 underline relative top-8\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    View All\n                </a>\n            </div>\n            <div class=\"space-y-4 px-4\">\n                <ng-container\n                    *ngIf=\"(upcoming_events | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"\n                            let event of upcoming_events | async | slice: 0:3\n                        \"\n                    >\n                        <ng-container [ngSwitch]=\"type(event)\">\n                            <event-card\n                                *ngSwitchCase=\"'event'\"\n                                [event]=\"event\"\n                                [show_day]=\"true\"\n                            ></event-card>\n                            <booking-card\n                                *ngSwitchCase=\"'booking'\"\n                                [booking]=\"booking\"\n                                [show_day]=\"true\"\n                            ></booking-card>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\">You have no upcoming bookings</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LandingUpcomingComponent implements OnInit, OnDestroy {\n    public readonly upcoming_events = this._state.upcoming_events;\n\n    public type(event: CalendarEvent | Booking) {\n        return event instanceof Booking ? 'booking' : 'event';\n    }\n\n    constructor(private _state: LandingStateService) {}\n\n    public ngOnInit() {\n        this._state.pollUpcomingEvents();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingUpcomingEvents();\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { SharedComponentModule } from \"../components/shared.module\";\nimport { LandingAvailabilityComponent } from \"./landing-availability.component\";\nimport { LandingColleaguesComponent } from \"./landing-colleagues.component\";\nimport { LandingUpcomingComponent } from \"./landing-upcoming.component\";\nimport { LandingComponent } from \"./landing.component\";\n\nconst COMPONENTS = [\n    LandingComponent,\n    LandingColleaguesComponent,\n    LandingAvailabilityComponent,\n    LandingUpcomingComponent\n]\n\nconst ROUTES = [\n    { path: '', component: LandingComponent }\n]\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        RouterModule.forChild(ROUTES)\n    ]\n})\nexport class AppLandingModule {}\n","import { Component } from '@angular/core';\nimport { currentUser } from '@placeos/common';\nimport { startOfMinute } from 'date-fns';\n\n@Component({\n    selector: 'app-dashboard',\n    template: `\n        <topbar></topbar>\n        <div class=\"flex flex-1 h-1/2 bg-[#E5E5E5]\">\n            <landing-colleagues\n                class=\"h-full hidden sm:block\"\n            ></landing-colleagues>\n            <div class=\"flex-1 h-full w-1/2 sm:px-4 overflow-auto\">\n                <header class=\"sticky top-0 z-50 bg-[#ECF0F3] px-4 rounded-b flex items-center justify-between overflow-hidden\">\n                    <div class=\"\">\n                        <div class=\"sm:text-xl font-medium\">Hello {{ user?.name }},</div>\n                        <div class=\"text-sm sm:text-base\">{{ date | date:'fullDate' }}</div>\n                        <div class=\"text-sm sm:text-base\">Sydney Australia</div>\n                    </div>\n                    <div class=\"h-32 pt-4\">\n                        <img src=\"assets/img/landing.svg\" />\n                    </div>\n                </header>\n                <landing-availability></landing-availability>\n                <div class=\"mx-4 w-[calc(100%-2rem)] h-px bg-gray-300 mb-2\" ></div>\n                <landing-upcoming></landing-upcoming>\n            </div>\n        </div>\n        <footer-menu></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n        `,\n    ],\n})\nexport class LandingComponent {\n    public time: number;\n\n    public get date() {\n        return startOfMinute(this.time || Date.now());\n    }\n\n    public get user() {\n        return currentUser();\n    }\n}\n"],"sourceRoot":"webpack:///"}