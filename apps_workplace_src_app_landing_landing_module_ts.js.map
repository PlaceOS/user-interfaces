{"version":3,"file":"apps_workplace_src_app_landing_landing_module_ts.js","mappings":"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","names":["LandingStateService","BaseClass","constructor","_calendar","_schedule","_org","_spacesStatus","super","this","BehaviorSubject","active_building","pipe","filter","_","switchMap","bld","requestSpacesForBuilding","id","shareReplay","_space_list","list","combineLatest","map","binding","getModule","obs","listen","subscription","bind","_space_statuses","statuses","idx","sort","a","b","capacity","list_free_spaces","building","e","zones","includes","space","availability","length","find","status","filtered_bookings","i","CalendarEvent","_contacts","asObservable","_options","_loading","_loading_spaces","debounceTime","search","next","searchStaff","catchError","of","tap","_level_occupancy","init","n","initialised","first","toPromise","updateContacts","subscribe","updateBuildingMetadata","updateOccupancy","sys_id","d","setOptions","options","getValue","pollUpcomingEvents","delay","setDate","Date","now","startPolling","stopPollingUpcomingEvents","stopPolling","refreshUpcomingEvents","triggerPoll","metadata","showMetadata","currentUser","details","Array","User","addContact","user","users","push","unique","updateMetadata","name","description","removeContact","u","email","levels","active_levels","take","recommendation","occupancy","sys","module","index","mod","_occupancy_binding","unbind","value","Object","keys","key","recommendation_factor","levelWithID","i0","factory","LandingAvailabilityComponent","_state","_settings","free_space_list","loading_spaces","level_occupancy","trackBySpaceId","buildings","hide_spaces","get","hide_rooms","selectors","LandingColleaguesComponent","_event_form","_router","l","contacts","search_results","loading","notifySuccess","show_search","s","newMeeting","newForm","form","patchValue","attendees","navigate","openSearch","updateSearch","timeout","_input_el","nativeElement","focus","$localize","i18n_2","ctx","ctx_r13","EMPTY","LandingFavouritesComponent","_space_pipe","_booking_form","loadAssets","desks","parking","type","parking_spaces","spaces","FAV_DESK_KEY","FAV_PARKING_KEY","ngOnInit","toggleFavourite","fav_list","saveUserSetting","newSpaceMeeting","transform","resources","newBooking","o","asset_id","booking_type","SpacePipe","i18n_1","i18n_5","LandingUpcomingComponent","_dialog","upcoming_events","event","Booking","ngOnDestroy","trackByFn","item","edit","remove","time","format","date","content","display_name","asset_name","resp","openConfirmModal","title","icon","reason","removeEvent","removeBooking","catch","notifyError","close","ROUTES","path","component","LandingComponent","hide_nav","localStorage","getItem","startOfMinute","hide_landing_sidebar","hide_colleagues","AppLandingModule","CommonModule","SharedComponentModule","FormsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/landing/landing-state.service.ts","./apps/workplace/src/app/landing/landing-availability.component.ts","./apps/workplace/src/app/landing/landing-colleagues.component.ts","./apps/workplace/src/app/landing/landing-favourites.component.ts","./apps/workplace/src/app/landing/landing-upcoming.component.ts","./apps/workplace/src/app/landing/landing.component.ts","./apps/workplace/src/app/landing/landing.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    getModule,\n    PlaceMetadata,\n    PlaceVariableBinding,\n    querySystems,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, forkJoin, of, zip } from 'rxjs';\nimport {\n    catchError,\n    combineAll,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { endOfDay } from 'date-fns';\n\nimport { BaseClass, currentUser, HashMap, unique } from '@placeos/common';\nimport { requestSpacesForBuilding, Space, SpacesStatusService } from '@placeos/spaces';\nimport { CalendarEvent, queryEvents } from '@placeos/events';\nimport { searchStaff, User } from '@placeos/users';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { CalendarService } from '@placeos/calendar';\nimport { ScheduleStateService } from '../new-schedule/schedule-state.service';\nimport { A } from '@angular/cdk/keycodes';\n\nexport interface LandingOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LandingStateService extends BaseClass {\n    private _options = new BehaviorSubject<LandingOptions>({});\n    private _loading = new BehaviorSubject<string>('');\n    private _loading_spaces = new BehaviorSubject<boolean>(false);\n    /**  */\n    private _contacts = new BehaviorSubject<User[]>([]);\n    /**  */\n    private _level_occupancy = new BehaviorSubject<BuildingLevel[]>([]);\n    /**  */\n    private _occupancy_binding: PlaceVariableBinding;\n    /**  */\n\n    private _space_list = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) => requestSpacesForBuilding(bld.id)),\n        shareReplay(1)\n    );\n\n    private _space_statuses = this._space_list.pipe(\n        switchMap((list) =>\n            combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'status'\n                    );\n                    const obs = binding.listen();\n                    this.subscription(`bind:${_.id}`, binding.bind());\n                    return obs;\n                })\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly free_space_list = combineLatest([\n        this._space_list,\n        this._space_statuses,\n    ]).pipe(\n        map(([list, statuses]) =>\n            (list || [])\n                .filter((_, idx) => statuses[idx] === 'free')\n                .sort((a, b) => a.capacity - b.capacity)\n        ),\n        shareReplay(1)\n    );\n    /** Switch to use ws real time free space subscription */\n    public free_spaces = this._spacesStatus.list_free_spaces.pipe(\n        map((list) =>\n            this._org.building\n                ? list\n                      .filter((e) => e.zones.includes(this._org.building.id))\n                      .filter(\n                          (space) =>\n                              !space.availability.length ||\n                              space.availability.find(\n                                  (_) => _.status !== 'busy'\n                              )\n                      )\n                      .sort((a, b) => a.capacity - b.capacity)\n                : []\n        )\n    );\n    /**  */\n    public readonly upcoming_events = this._schedule.filtered_bookings.pipe(\n        map((_) => _.filter((i) => i instanceof CalendarEvent))\n    );\n    /**  */\n    public contacts = this._contacts.asObservable();\n    /**  */\n    public options = this._options.asObservable();\n    /**  */\n    public loading = this._loading.asObservable();\n    /**  */\n    public loading_spaces = this._loading_spaces.asObservable();\n\n    public readonly search_results = this._options.pipe(\n        debounceTime(500),\n        switchMap(({ search }) => {\n            this._loading.next('Loading users...');\n            return search\n                ? searchStaff(search).pipe(catchError(() => of([])))\n                : of([]);\n        }),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n    /**  */\n    public level_occupancy = this._level_occupancy.asObservable();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _schedule: ScheduleStateService,\n        private _org: OrganisationService,\n        private _spacesStatus: SpacesStatusService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.updateContacts();\n        this.subscription(\n            'building',\n            this._org.active_building\n                .pipe(filter((bld) => !!bld))\n                .subscribe(() => {\n                    this.updateBuildingMetadata();\n                    this.updateOccupancy({});\n                })\n        );\n        let sys_id = this._org.binding('area_management');\n        if (!sys_id) return;\n        const binding = getModule(sys_id, 'AreaManagement').binding('overview');\n        binding.listen().subscribe((d) => this.updateOccupancy(d || {}));\n        binding.bind();\n    }\n\n    public setOptions(options: Partial<LandingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public pollUpcomingEvents(delay: number = 10 * 1000) {\n        this._schedule.setDate(Date.now());\n        return this._schedule.startPolling(delay);\n    }\n\n    public stopPollingUpcomingEvents() {\n        this._schedule.stopPolling();\n    }\n\n    public refreshUpcomingEvents() {\n        this._schedule.triggerPoll();\n    }\n\n    public async updateContacts() {\n        const metadata: PlaceMetadata = (await showMetadata(\n            currentUser().id,\n            'contacts'\n        ).toPromise()) as any;\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async addContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users.push(user);\n        users = unique(users, 'email');\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async removeContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users = users.filter((u) => u.email !== user.email);\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    private async updateOccupancy(map: HashMap<{ recommendation: number }>) {\n        const levels = [\n            ...(await this._org.active_levels.pipe(take(1)).toPromise()),\n        ];\n        levels.sort(\n            (a, b) => map[a.id]?.recommendation - map[b.id]?.recommendation\n        );\n        this._level_occupancy.next(levels);\n    }\n\n    private async updateBuildingMetadata() {\n        this._level_occupancy.next([]);\n        const occupancy: any = this._org.binding('occupancy');\n        if (!occupancy) return;\n        const { sys, module, index } = occupancy;\n        const mod = getModule(sys, module, index);\n        if (!mod) return;\n        if (this._occupancy_binding) {\n            this._occupancy_binding.unbind();\n        }\n        this._occupancy_binding = mod.binding('occupancy');\n        this._occupancy_binding.bind();\n        this.subscription(\n            'occupancy_binding',\n            this._occupancy_binding.listen().subscribe((value) => {\n                const levels = Object.keys(value).map((key) => ({\n                    id: key,\n                    ...value[key],\n                }));\n                levels.sort(\n                    (a, b) => a.recommendation_factor - b.recommendation_factor\n                );\n                this._level_occupancy.next(\n                    levels.map((i) => this._org.levelWithID([i.id]))\n                );\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-availability',\n    template: `\n        <div class=\"py-2\">\n            <div\n                class=\"sm:text-lg font-medium mb-2 sm:mb-4 px-4\"\n                *ngIf=\"!hide_rooms || !hide_spaces\"\n            >\n                {{ 'WPA.AVAILABLE_NOW' | translate }}\n            </div>\n            <div\n                class=\"flex items-center text-sm sm:text-base px-4 space-x-2\"\n                *ngIf=\"!hide_spaces\"\n            >\n                <div>{{ 'WPA.SPACES' | translate }}</div>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n                *ngIf=\"!hide_spaces\"\n            >\n                <button\n                    matRipple\n                    *ngFor=\"let lvl of levels_free | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-[#1F2021] shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ level: lvl.id }\"\n                >\n                    <div\n                        class=\"min-w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <img\n                            *ngIf=\"lvl?.images?.length; else placeholder\"\n                            [src]=\"lvl?.images[0]\"\n                            class=\"min-h-full object-cover\"\n                        />\n                        <ng-template #placeholder>\n                            <img\n                                class=\"m-auto\"\n                                src=\"assets/icons/desk-placeholder.svg\"\n                            />\n                        </ng-template>\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ lvl.display_name || lvl.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>{{\n                                building(lvl.parent_id)?.display_name ||\n                                    building(lvl.parent_id)?.name\n                            }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(levels_free | async).length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                >\n                    {{ 'WPA.NO_FREE_SPACES' | translate }}\n                </span>\n            </div>\n            <div\n                class=\"flex items-center text-sm sm:text-base px-4 space-x-2\"\n                *ngIf=\"!hide_rooms\"\n            >\n                <div>{{ 'WPA.ROOMS' | translate }}</div>\n                <mat-spinner\n                    diameter=\"24\"\n                    *ngIf=\"loading_spaces | async\"\n                ></mat-spinner>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n                *ngIf=\"!hide_rooms\"\n            >\n                <button\n                    matRipple\n                    *ngFor=\"\n                        let space of space_list | async;\n                        trackBy: trackBySpaceId\n                    \"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-[#1F2021] shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ space: space.email }\"\n                >\n                    <div\n                        class=\"w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-800 overflow-hidden flex items-center justify-center\"\n                    >\n                        <img\n                            *ngIf=\"\n                                (space.id | space | async)?.images?.length;\n                                else space_placeholder\n                            \"\n                            [src]=\"(space.id | space | async)?.images[0]\"\n                            class=\"min-h-full object-cover\"\n                        />\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>{{\n                                space.level.display_name || space.level.name\n                            }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(space_list | async)?.length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                >\n                    {{ 'WPA.NO_FREE_ROOMS' | translate }}\n                </span>\n            </div>\n        </div>\n        <ng-template #space_placeholder>\n            <img class=\"m-auto\" src=\"assets/icons/room-placeholder.svg\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            * {\n                flex-shrink: 0;\n            }\n        `,\n    ],\n})\nexport class LandingAvailabilityComponent {\n    public readonly space_list = this._state.free_space_list;\n    public readonly loading_spaces = this._state.loading_spaces;\n    public readonly levels_free = this._state.level_occupancy;\n\n    public trackBySpaceId(index: number, space: Space) {\n        return space.id;\n    }\n\n    public building(id: string) {\n        return this._org.buildings.find((bld) => bld.id === id);\n    }\n\n    public get hide_spaces() {\n        return this._settings.get('app.general.hide_spaces');\n    }\n\n    public get hide_rooms() {\n        return this._settings.get('app.general.hide_rooms');\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseClass, notifySuccess, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { User } from '@placeos/users';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-colleagues',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\"\n        >\n            <h2 class=\"mx-2\" i18n>{{ (contacts | async)?.length || 0 }} { (contacts | async)?.length, plural, =1 { Person } other { People } }</h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div class=\"flex-1 h-1/2 w-full space-y-4 overflow-auto pt-4\">\n            <ng-container *ngIf=\"(contacts | async)?.length; else empty_state\">\n                <div\n                    class=\"flex items-center px-2 space-x-2 relative\"\n                    user\n                    *ngFor=\"let user of contacts | async\"\n                >\n                    <div class=\"text-xl relative\">\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div\n                            class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                            [class.bg-error]=\"!user.location\"\n                            [class.bg-success]=\"user.location\"\n                        ></div>\n                    </div>\n                    <div class=\"leading-tight flex-1 w-1/2\">\n                        <div class=\"truncate\">{{ user.name }}</div>\n                        <div class=\"text-sm truncate\">\n                            {{ user.organisation }}\n                        </div>\n                        <div class=\"text-xs opacity-60 truncate\">\n                            {{ user.location }}\n                        </div>\n                    </div>\n                    <button\n                        mat-icon-button\n                        class=\"rounded bg-gray-300\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">face</app-icon>\n                                <div>View Colleague</div>\n                            </button> -->\n                        <button\n                            mat-menu-item\n                            (click)=\"newMeeting(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">today</app-icon>\n                            <div>{{ \"WPA.CREATE_MEETING\" | translate }}</div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"removeContact(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>{{ \"WPA.REMOVE_COLLEAGUE\" | translate }}</div>\n                        </button>\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">report</app-icon>\n                                <div>Block Colleague</div>\n                            </button> -->\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <button\n            mat-button\n            class=\"inverse w-[calc(100%-1rem)] m-2\"\n            (click)=\"openSearch()\"\n        >\n        {{ \"WPA.ADD\" | translate }}\n        </button>\n        <div\n            search\n            [class.hidden]=\"!show_search\"\n            class=\"absolute inset-x-2 top-2 bottom-[3.5rem] rounded-lg overflow-hidden flex flex-col bg-white dark:bg-neutral-600 shadow border border-gray-200\"\n        >\n            <input\n                #search_input\n                [ngModel]=\"(options | async)?.search\"\n                (ngModelChange)=\"updateSearch($event)\"\n                placeholder=\"Search for users...\"\n                class=\"w-full border-b border-gray-200 p-2 rounded-t-lg\"\n            />\n            <button\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                (click)=\"show_search = false\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <div\n                class=\"overflow-auto flex-1 h-1/2 flex flex-col space-y-2\"\n                *ngIf=\"!(loading | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(search_results | async)?.length; else search_empty\"\n                >\n                    <button\n                        matRipple\n                        class=\"flex items-center p-2 space-x-2 w-full text-left\"\n                        *ngFor=\"let user of search_results | async\"\n                        (click)=\"addUser(user)\"\n                    >\n                        <div class=\"text-base relative\">\n                            <a-user-avatar [user]=\"user\"></a-user-avatar>\n                            <div\n                                class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                                [class.bg-error]=\"!user.location\"\n                                [class.bg-success]=\"user.location\"\n                            ></div>\n                        </div>\n                        <div class=\"leading-tight\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div class=\"text-sm truncate\">\n                                {{ user.organisation }}\n                            </div>\n                        </div>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-contacts.svg\" />\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ \"WPA.COLLEAGUES_EMPTY\" | translate }}\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #search_empty>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{\n                        !(options | async)?.search\n                            ? 'Start typing to search for users.'\n                            : 'Unable for find any users matching \"' +\n                              (options | async)?.search +\n                              '\"'\n                    }}\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"opacity-60 text-sm text-center\">{{ \"WPA.COLLEAGUES_SEARCHING\" | translate }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class LandingColleaguesComponent extends BaseClass {\n    public show_search = false;\n    public readonly contacts = this._state.contacts;\n\n    public readonly search_results = combineLatest([\n        this._state.search_results,\n        this._state.contacts,\n    ]).pipe(\n        map(([list, contacts]) =>\n            list.filter(\n                (_) =>\n                    !contacts.find(\n                        (user) => user.id !== _.id && user.email !== _.email\n                    )\n            )\n        )\n    );\n\n    public readonly options = this._state.options;\n\n    public readonly loading = this._state.loading;\n\n    public readonly addUser = async (u) => {\n        await this._state.addContact(u);\n        notifySuccess(`Successfully added \"${u.name}\" to contacts`);\n        this.show_search = false;\n    };\n\n    public readonly removeUser = async (u) => {\n        await this._state.removeContact(u);\n        notifySuccess(`Successfully removed \"${u.name}\" from contacts`);\n    };\n\n    public readonly updateSearch = (s) => this._state.setOptions({ search: s });\n\n    @ViewChild('search_input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _state: LandingStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public newMeeting(user: User) {\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ attendees: [user] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public openSearch() {\n        this.updateSearch('');\n        this.show_search = true;\n        this.timeout('open', () => this._input_el.nativeElement.focus(), 100);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    BookingFormService,\n    BookingType,\n    FAV_PARKING_KEY,\n} from '@placeos/bookings';\nimport { BaseClass, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { FAV_DESK_KEY } from 'libs/bookings/src/lib/desk-select-modal/desk-select-modal.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'landing-favourites',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\"\n        >\n            <h2 class=\"mx-2\" i18n>\n                {{ spaces?.length || 0 }} { spaces?.length, plural, =1 {\n                Resource } other { Resources } }\n            </h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div\n            class=\"flex-1 h-1/2 w-full space-y-2 overflow-auto pt-4 divide-y divide-gray-300\"\n        >\n            <ng-container\n                *ngIf=\"\n                    spaces?.length || (assets | async)?.length;\n                    else empty_state\n                \"\n            >\n                <div\n                    class=\"flex flex-col items-center mx-2 pt-4 space-y-2 relative\"\n                    item\n                    *ngFor=\"let item of spaces\"\n                >\n                    <div class=\"flex w-full items-center space-x-2 relative\">\n                        <div\n                            class=\"w-20 h-20 overflow-hidden rounded relative flex items-center justify-center bg-black/10 dark:bg-white/5\"\n                        >\n                            <img\n                                *ngIf=\"\n                                    (item | space | async)?.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-w-full min-h-full\"\n                                [src]=\"(item | space | async)?.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"h-20\">\n                            <div class=\"truncate mb-4\">\n                                {{\n                                    (item | space | async)?.display_name ||\n                                        (item | space | async)?.name\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2 mb-2\"\n                            >\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <div>\n                                    {{\n                                        (item | space | async)?.level\n                                            ?.display_name\n                                    }}\n                                </div>\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2\"\n                            >\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <div i18n>\n                                    {{ (item | space | async)?.capacity || 2 }}\n                                    { (item | space | async)?.capacity || 2,\n                                    plural, =1 { Person } other { People } }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        mat-button\n                        class=\"w-full inverse\"\n                        (click)=\"newSpaceMeeting(item)\"\n                    >\n                        {{ 'WPA.BOOK' | translate }}\n                    </button>\n                    <button\n                        mat-icon-button\n                        [matMenuTriggerFor]=\"menu\"\n                        class=\"absolute top-2 right-0 bg-gray-200 dark:bg-neutral-600 rounded !m-0\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">info</app-icon>\n                            <div>{{ 'WPA.VIEW_DETAILS' | translate }}</div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"toggleFavourite('space', id)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>{{ 'WPA.FAVOURITES_REMOVE' | translate }}</div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    class=\"flex flex-col items-center mx-2 pt-4 space-y-2 relative\"\n                    item\n                    *ngFor=\"let item of assets | async\"\n                >\n                    <div class=\"flex w-full items-center space-x-2 relative\">\n                        <div\n                            class=\"w-20 h-20 overflow-hidden rounded relative flex items-center justify-center bg-black/10 dark:bg-white/5\"\n                        >\n                            <img\n                                *ngIf=\"\n                                    item?.images?.length;\n                                    else asset_placeholder\n                                \"\n                                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-w-full min-h-full\"\n                                [src]=\"item?.images[0]\"\n                            />\n                            <ng-template #asset_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    [src]=\"\n                                        'assets/icons/' +\n                                        (item.type === 'desk'\n                                            ? 'desk'\n                                            : 'car') +\n                                        '-placeholder.svg'\n                                    \"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"h-20\">\n                            <div class=\"truncate mb-4\">\n                                {{ item?.display_name || item?.name }}\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2 mb-2\"\n                            >\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <div>\n                                    {{ item?.zone?.display_name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        mat-button\n                        class=\"w-full inverse\"\n                        (click)=\"newBooking(item.type, item)\"\n                        i18n\n                    >\n                        {{ 'WPA.BOOK' | translate }}\n                    </button>\n                    <button\n                        mat-icon-button\n                        [matMenuTriggerFor]=\"menu\"\n                        class=\"absolute top-2 right-0 bg-gray-200 dark:bg-neutral-600 rounded !m-0\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">info</app-icon>\n                            <div>{{ 'WPA.VIEW_DETAILS' | translate }}</div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"toggleFavourite(item.type, item.id)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>{{ 'WPA.FAVOURITES_REMOVE' | translate }}</div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-favourites.svg\" />\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{ 'WPA.FAVOURITES_EMPTY' | translate }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class LandingFavouritesComponent extends BaseClass {\n    public readonly assets = combineLatest([\n        this._booking_form.loadAssets('desks' as any),\n        this._booking_form.loadAssets('parking_spaces' as any),\n    ]).pipe(\n        map(([desks, parking]) => {\n            return [\n                ...desks\n                    .filter(({ id }) => this.desks.includes(id))\n                    .map((_) => ({ ..._, type: 'desk' })),\n                ...parking\n                    .filter(({ id }) => this.parking_spaces.includes(id))\n                    .map((_) => ({ ..._, type: 'parking' })),\n            ];\n        }),\n        shareReplay(1)\n    );\n\n    public get spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY;\n    }\n\n    public get desks() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY;\n    }\n\n    public get parking_spaces() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || EMPTY;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _event_form: EventFormService,\n        private _booking_form: BookingFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {}\n\n    public toggleFavourite(type: 'space' | 'desk' | 'parking', id: string) {\n        let fav_list = this.spaces;\n        let key = 'favourite_spaces';\n        switch (type) {\n            case 'desk':\n                fav_list = this.desks;\n                key = FAV_DESK_KEY;\n                break;\n            case 'parking':\n                fav_list = this.parking_spaces;\n                key = FAV_PARKING_KEY;\n                break;\n        }\n        const new_state = !fav_list.includes(id);\n        if (new_state) {\n            this._settings.saveUserSetting(key, [...fav_list, id]);\n        } else {\n            this._settings.saveUserSetting(\n                key,\n                fav_list.filter((_) => _ !== id)\n            );\n        }\n    }\n\n    public async newSpaceMeeting(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ resources: [space] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public async newBooking(type: BookingType, id: string) {\n        if (!id) return;\n        this._booking_form.newForm();\n        this._booking_form.setOptions({ type });\n        this._booking_form.form.patchValue({\n            asset_id: id,\n            booking_type: type,\n        });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate([\n                '/book',\n                type === 'desk' ? 'newdesk' : 'new-parking',\n            ]);\n        } else {\n            this._router.navigate([\n                '/book',\n                type === 'desk' ? 'desks' : 'parking',\n            ]);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Booking, removeBooking } from '@placeos/bookings';\nimport { notifyError, notifySuccess, openConfirmModal } from '@placeos/common';\nimport { CalendarEvent, EventFormService, removeEvent } from '@placeos/events';\nimport { format } from 'date-fns';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-upcoming',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"flex items-center justify-between mb-2 sm:mb-4 px-4\">\n                <div class=\"sm:text-lg font-medium\">{{ \"WPA.YOUR_BOOKINGS\" | translate }}</div>\n                <a\n                    button\n                    mat-button\n                    class=\"inverse hidden sm:block\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    {{ \"WPA.VIEW_ALL\" | translate }}\n                </a>\n                <a\n                    class=\"inverse block sm:hidden text-blue-500 underline relative top-8\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    {{ \"WPA.VIEW_ALL\" | translate }}\n                </a>\n            </div>\n            <div class=\"space-y-4 px-4\">\n                <ng-container\n                    *ngIf=\"(upcoming_events | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"\n                            let event of upcoming_events | async | slice: 0:3;\n                            trackBy: trackByFn\n                        \"\n                    >\n                        <ng-container [ngSwitch]=\"type(event)\">\n                            <event-card\n                                *ngSwitchCase=\"'event'\"\n                                [event]=\"event\"\n                                [show_day]=\"true\"\n                                (edit)=\"edit(event)\"\n                                (remove)=\"remove(event)\"\n                            ></event-card>\n                            <booking-card\n                                *ngSwitchCase=\"'booking'\"\n                                [booking]=\"event\"\n                                [show_day]=\"true\"\n                                (remove)=\"remove(event)\"\n                            ></booking-card>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\">{{ \"WPA.NO_UPCOMING_BOOKINGS\" | translate }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LandingUpcomingComponent implements OnInit, OnDestroy {\n    public readonly upcoming_events = this._state.upcoming_events;\n\n    public type(event: CalendarEvent | Booking) {\n        return event instanceof Booking ? 'booking' : 'event';\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _event_form: EventFormService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit() {\n        // this._state.pollUpcomingEvents();\n        this._state.refreshUpcomingEvents();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingUpcomingEvents();\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n\n    public edit(event: CalendarEvent) {\n        this._router.navigate(['/book', 'meeting', 'form']);\n        this._event_form.newForm(event);\n    }\n\n    public async remove(item: CalendarEvent | Booking) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name =\n            item instanceof CalendarEvent\n                ? item.space?.display_name\n                : item.asset_name || item.asset_id;\n        const content = `Delete the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n        console\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await (item instanceof CalendarEvent ? removeEvent : removeBooking)(\n            item.id\n        ).toPromise().catch(e => {\n            notifyError(`Unable to delete booking. ${e}`);\n            resp.close();\n            throw e;\n        });\n        notifySuccess('Successfully deleted booking.');\n        resp.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { startOfMinute } from 'date-fns';\n\n@Component({\n    selector: 'app-dashboard',\n    template: `\n        <topbar class=\"z-10\" *ngIf=\"!hide_nav\"></topbar>\n        <div class=\"flex flex-1 h-1/2 bg-[#F8F8FA] dark:bg-neutral-900\">\n            <div\n                class=\"relative hidden sm:flex flex-col w-[18rem] h-full overflow-hidden bg-white dark:bg-[#1F2021] border-r border-gray-200 dark:border-neutral-700\"\n                *ngIf=\"!hide_landing_sidebar\"\n            >\n                <div class=\"flex items-center divide-x divide-gray-300\">\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'people'\"\n                        [class.border-gray-300]=\"tab !== 'people'\"\n                        [class.bg-black]=\"tab !== 'people'\"\n                        [class.bg-opacity-5]=\"tab !== 'people'\"\n                        (click)=\"tab = 'people'\"\n                        *ngIf=\"!hide_colleagues\"\n                    >\n                        <app-icon>people</app-icon>\n                        <div>{{ 'WPA.COLLEAGUES' | uppercase | translate }}</div>\n                    </button>\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'fav'\"\n                        [class.border-gray-300]=\"tab !== 'fav'\"\n                        [class.bg-black]=\"tab !== 'fav'\"\n                        [class.bg-opacity-5]=\"tab !== 'fav'\"\n                        (click)=\"tab = 'fav'\"\n                    >\n                        <app-icon>favorite</app-icon>\n                        <div>{{ 'WPA.FAVOURITES' | translate }}</div>\n                    </button>\n                </div>\n                <div class=\"flex-1 w-full h-1/2\">\n                    <landing-colleagues\n                        *ngIf=\"tab === 'people' && !hide_colleagues\"\n                    ></landing-colleagues>\n                    <landing-favourites\n                        *ngIf=\"tab === 'fav' || hide_colleagues\"\n                    ></landing-favourites>\n                </div>\n            </div>\n            <div class=\"flex-1 h-full w-1/2 sm:px-4 overflow-auto z-0\">\n                <header\n                    class=\"sticky top-0 z-50 bg-[#ECF0F3] dark:bg-zinc-800 px-4 sm:rounded-b flex items-center justify-between overflow-hidden\"\n                >\n                    <div class=\"\">\n                        <div class=\"sm:text-xl font-medium\">\n                            {{ 'WPA.WELCOME_MESSAGE' | translate:{name:user?.name} }}\n                        </div>\n                        <div date class=\"text-sm sm:text-base\">\n                            {{ date | date: 'fullDate' }}\n                        </div>\n                        <div\n                            class=\"text-sm sm:text-base\"\n                            *ngIf=\"building?.address || building?.name\"\n                        >\n                            {{\n                                building.address ||\n                                    building.display_name ||\n                                    building.name\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"h-32 pt-4\">\n                        <img src=\"assets/img/landing.svg\" />\n                    </div>\n                </header>\n                <landing-availability></landing-availability>\n                <div\n                    class=\"mx-4 w-[calc(100%-2rem)] h-px bg-gray-300 mb-2\"\n                ></div>\n                <landing-upcoming></landing-upcoming>\n            </div>\n        </div>\n        <footer-menu *ngIf=\"!hide_nav\"></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n        `,\n    ],\n})\nexport class LandingComponent {\n    public time: number;\n    public tab = 'people';\n\n    public get hide_nav() {\n        return localStorage.getItem('PlaceOS.hide_nav') === 'true';\n    }\n\n    public get date() {\n        return startOfMinute(this.time || Date.now());\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get hide_landing_sidebar() {\n        return this._settings.get('app.general.hide_landing_sidebar');\n    }\n\n    public get hide_colleagues() {\n        return this._settings.get('app.general.hide_colleagues');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { SharedComponentModule } from \"../components/shared.module\";\nimport { LandingAvailabilityComponent } from \"./landing-availability.component\";\nimport { LandingColleaguesComponent } from \"./landing-colleagues.component\";\nimport { LandingFavouritesComponent } from \"./landing-favourites.component\";\nimport { LandingUpcomingComponent } from \"./landing-upcoming.component\";\nimport { LandingComponent } from \"./landing.component\";\n\nconst COMPONENTS = [\n    LandingComponent,\n    LandingColleaguesComponent,\n    LandingAvailabilityComponent,\n    LandingUpcomingComponent,\n    LandingFavouritesComponent\n]\n\nconst ROUTES = [\n    { path: '', component: LandingComponent }\n]\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES)\n    ]\n})\nexport class AppLandingModule {}\n"],"x_google_ignoreList":[]}