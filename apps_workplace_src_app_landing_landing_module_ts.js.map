{"version":3,"file":"apps_workplace_src_app_landing_landing_module_ts.js","mappings":"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","names":["LandingStateService","BaseClass","constructor","_calendar","_schedule","_org","super","this","BehaviorSubject","_free_spaces","asObservable","filtered_bookings","pipe","map","_","filter","i","CalendarEvent","_contacts","_options","_loading","debounceTime","switchMap","search","next","searchStaff","catchError","of","tap","shareReplay","_level_occupancy","init","t","initialised","first","toPromise","subscription","active_building","bld","subscribe","updateBuildingMetadata","sys_id","binding","getModule","listen","d","updateOccupancy","bind","setOptions","options","getValue","pollFreeSpaces","delay","updateFreeSpaces","interval","stopPollingFreeSpaces","clearInterval","pollUpcomingEvents","setDate","Date","now","startPolling","stopPollingUpcomingEvents","stopPolling","updateContacts","metadata","showMetadata","currentUser","id","details","Array","User","addContact","user","users","o","push","unique","updateMetadata","name","description","removeContact","u","email","levels","sort","a","b","recommendation","building","period_start","Math","floor","valueOf","period_end","endOfDay","list","freeBusy","zone_ids","space","availability","length","find","status","capacity","occupancy","module","sys","index","_occupancy_binding","unbind","value","Object","keys","key","recommendation_factor","levelWithID","i0","factory","LandingAvailabilityComponent","_state","free_spaces","level_occupancy","ngOnInit","ngOnDestroy","selectors","LandingColleaguesComponent","_settings","_event_form","_router","l","contacts","combineLatest","search_results","loading","notifySuccess","show_search","s","newMeeting","newForm","form","patchValue","attendees","get","navigate","openSearch","updateSearch","timeout","_input_el","nativeElement","focus","ctx","LandingFavouritesComponent","LandingUpcomingComponent","_dialog","upcoming_events","type","event","Booking","trackByFn","item","edit","remove","time","format","date","content","display_name","asset_name","asset_id","resp","openConfirmModal","title","icon","reason","removeEvent","removeBooking","catch","e","notifyError","close","ROUTES","path","component","LandingComponent","hide_nav","localStorage","getItem","startOfMinute","AppLandingModule","CommonModule","SharedComponentModule","FormsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/landing/landing-state.service.ts","./apps/workplace/src/app/landing/landing-availability.component.ts","./apps/workplace/src/app/landing/landing-colleagues.component.ts","./apps/workplace/src/app/landing/landing-favourites.component.ts","./apps/workplace/src/app/landing/landing-upcoming.component.ts","./apps/workplace/src/app/landing/landing.component.ts","./apps/workplace/src/app/landing/landing.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    getModule,\n    PlaceMetadata,\n    PlaceVariableBinding,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { endOfDay } from 'date-fns';\n\nimport { BaseClass, currentUser, HashMap, unique } from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { CalendarEvent, queryEvents } from '@placeos/events';\nimport { searchStaff, User } from '@placeos/users';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { CalendarService } from '@placeos/calendar';\nimport { ScheduleStateService } from '../new-schedule/schedule-state.service';\n\nexport interface LandingOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LandingStateService extends BaseClass {\n    private _options = new BehaviorSubject<LandingOptions>({});\n    private _loading = new BehaviorSubject<string>('');\n    /**  */\n    private _free_spaces = new BehaviorSubject<Space[]>([]);\n    /**  */\n    private _contacts = new BehaviorSubject<User[]>([]);\n    /**  */\n    private _level_occupancy = new BehaviorSubject<BuildingLevel[]>([]);\n    /**  */\n    private _occupancy_binding: PlaceVariableBinding;\n    /**  */\n    public free_spaces = this._free_spaces.asObservable();\n    /**  */\n    public readonly upcoming_events = this._schedule.filtered_bookings.pipe(\n        map((_) => _.filter((i) => i instanceof CalendarEvent))\n    );\n    /**  */\n    public contacts = this._contacts.asObservable();\n    /**  */\n    public options = this._options.asObservable();\n    /**  */\n    public loading = this._loading.asObservable();\n\n    public readonly search_results = this._options.pipe(\n        debounceTime(500),\n        switchMap(({ search }) => {\n            this._loading.next('Loading users...');\n            return search\n                ? searchStaff(search).pipe(catchError(() => of([])))\n                : of([]);\n        }),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n    /**  */\n    public level_occupancy = this._level_occupancy.asObservable();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _schedule: ScheduleStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'building',\n            this._org.active_building\n                .pipe(filter((bld) => !!bld))\n                .subscribe(() => this.updateBuildingMetadata())\n        );\n        let sys_id = this._org.binding('area_management');\n        if (!sys_id) return;\n        const binding = getModule(sys_id, 'AreaManagement').binding('overview');\n        binding.listen().subscribe((d) => this.updateOccupancy(d || {}));\n        binding.bind();\n    }\n\n    public setOptions(options: Partial<LandingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public pollFreeSpaces(delay: number = 10 * 1000) {\n        this.updateFreeSpaces();\n        this.interval('free_spaces', () => this.updateFreeSpaces(), delay);\n    }\n\n    public stopPollingFreeSpaces() {\n        this.clearInterval('free_spaces');\n    }\n\n    public pollUpcomingEvents(delay: number = 10 * 1000) {\n        this._schedule.setDate(Date.now());\n        return this._schedule.startPolling(delay);\n    }\n\n    public stopPollingUpcomingEvents() {\n        this._schedule.stopPolling();\n    }\n\n    public async updateContacts() {\n        const metadata: PlaceMetadata = (await showMetadata(\n            currentUser().id,\n            'contacts'\n        ).toPromise()) as any;\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async addContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users.push(user);\n        users = unique(users, 'email');\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async removeContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users = users.filter((u) => u.email !== user.email);\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    private async updateOccupancy(map: HashMap<{ recommendation: number }>) {\n        const levels = [...this._org.levels];\n        levels.sort(\n            (a, b) => map[a.id]?.recommendation - map[b.id]?.recommendation\n        );\n        this._level_occupancy.next(levels);\n    }\n\n    private async updateFreeSpaces() {\n        if (!this._org.building) return;\n        const period_start = Math.floor(new Date().valueOf() / 1000);\n        const period_end = Math.floor(endOfDay(new Date()).valueOf() / 1000);\n        const list = await this._calendar\n            .freeBusy({\n                period_start,\n                period_end,\n                zone_ids: this._org.building.id,\n            })\n            .pipe(\n                map((_) =>\n                    _.filter(\n                        (space) =>\n                            !space.availability.length ||\n                            space.availability.find((_) => _.status !== 'busy')\n                    )\n                )\n            )\n            .toPromise();\n        list.sort((a, b) => a.capacity - b.capacity);\n        this._free_spaces.next(list);\n    }\n\n    private async updateBuildingMetadata() {\n        const building = this._org.building;\n        const metadata = await showMetadata(\n            building.id,\n            'bindings'\n        ).toPromise();\n        if (!(metadata.details as HashMap).occupancy) return;\n        const details = (metadata.details as HashMap).occupancy;\n        const module = getModule(details.sys, details.module, details.index);\n        if (!module) return;\n        if (this._occupancy_binding) {\n            this._occupancy_binding.unbind();\n        }\n        this._occupancy_binding = module.binding('occupancy');\n        this._occupancy_binding.bind();\n        this.subscription(\n            'occupancy_binding',\n            this._occupancy_binding.listen().subscribe((value) => {\n                const levels = Object.keys(value).map((key) => ({\n                    id: key,\n                    ...value[key],\n                }));\n                levels.sort(\n                    (a, b) => a.recommendation_factor - b.recommendation_factor\n                );\n                this._level_occupancy.next(\n                    levels.map((i) => this._org.levelWithID([i.id]))\n                );\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-availability',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"sm:text-lg font-medium mb-2 sm:mb-4 px-4\">Available Now</div>\n            <div class=\"text-sm sm:text-base px-4\">Spaces</div>\n            <div class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\">\n                <button\n                    matRipple\n                    *ngFor=\"let lvl of levels_free | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-neutral-800 shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ level: lvl.id }\"\n                >\n                    <div\n                        class=\"min-w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-700\"\n                    ></div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                        {{ lvl.display_name || lvl.name }}\n                        </div>\n                        <div class=\"max-w-full truncate text-sm opacity-60 flex items-center\">\n                            <app-icon class=\"text-blue-500 text-lg\">place</app-icon>\n                            <span>Unknown Building</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(levels_free | async).length\"\n                    class=\"text-dark-fade text-sm mb-2\"\n                >\n                    No free spaces\n                </span>\n            </div>\n            <div class=\"text-sm sm:text-base my-2 px-4\">Rooms</div>\n            <div class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\">\n                <button\n                    matRipple\n                    *ngFor=\"let space of space_list | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-neutral-800 shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ space: space.email }\"\n                >\n                    <div\n                        class=\"w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-700 overflow-hidden\"\n                    >\n                        <img *ngIf=\"(space.id | space | async)?.images?.length\" [src]=\"(space.id | space | async)?.images[0]\" class=\"min-h-full object-cover\"/>\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                        <div class=\"max-w-full truncate text-sm opacity-60 flex items-center\">\n                            <app-icon class=\"text-blue-500 text-lg\">place</app-icon>\n                            <span>{{ space.level.display_name || space.level.name }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(space_list | async).length\"\n                    class=\"text-dark-fade text-sm mb-2\"\n                >\n                    No free rooms\n                </span>\n            </div>\n        </div>\n    `,\n    styles: [`\n        * {\n            flex-shrink: 0;\n        }\n    `],\n})\nexport class LandingAvailabilityComponent {\n    public readonly space_list = this._state.free_spaces;\n    public readonly levels_free = this._state.level_occupancy;\n\n    constructor(private _state: LandingStateService) {}\n\n    public async ngOnInit() {\n        this._state.pollFreeSpaces();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingFreeSpaces();\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseClass, notifySuccess, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { User } from '@placeos/users';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-colleagues',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\"\n        >\n            <h2 class=\"mx-2\">{{ (contacts | async)?.length || 0 }} People</h2>\n            <div class=\"flex items-center space-x-2 text-primary\">\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div>\n        </div>\n        <div class=\"flex-1 h-1/2 w-full space-y-4 overflow-auto pt-4\">\n            <ng-container *ngIf=\"(contacts | async)?.length; else empty_state\">\n                <div\n                    class=\"flex items-center px-4 space-x-2 relative\"\n                    user\n                    *ngFor=\"let user of contacts | async\"\n                >\n                    <div class=\"text-xl relative\">\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div\n                            class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                            [class.bg-error]=\"!user.location\"\n                            [class.bg-success]=\"user.location\"\n                        ></div>\n                    </div>\n                    <div class=\"leading-tight flex-1\">\n                        <div class=\"truncate\">{{ user.name }}</div>\n                        <div class=\"text-sm truncate\">\n                            {{ user.organisation }}\n                        </div>\n                        <div class=\"text-xs opacity-60 truncate\">\n                            {{ user.location }}\n                        </div>\n                    </div>\n                    <button\n                        mat-icon-button\n                        class=\"rounded bg-gray-300\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">face</app-icon>\n                                <div>View Colleague</div>\n                            </button> -->\n                        <button\n                            mat-menu-item\n                            (click)=\"newMeeting(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">today</app-icon>\n                            <div>Create Meeting</div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"removeContact(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Remove Colleague</div>\n                        </button>\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">report</app-icon>\n                                <div>Block Colleague</div>\n                            </button> -->\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <button\n            mat-button\n            class=\"inverse w-[calc(100%-1rem)] m-2\"\n            (click)=\"openSearch()\"\n        >\n            Add\n        </button>\n        <div\n            search\n            [class.hidden]=\"!show_search\"\n            class=\"absolute inset-x-2 top-2 bottom-[3.5rem] rounded-lg overflow-hidden flex flex-col bg-white dark:bg-neutral-600 shadow border border-gray-200\"\n        >\n            <input\n                #search_input\n                [ngModel]=\"(options | async)?.search\"\n                (ngModelChange)=\"updateSearch($event)\"\n                placeholder=\"Search for users...\"\n                class=\"w-full border-b border-gray-200 p-2 rounded-t-lg\"\n            />\n            <button\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                (click)=\"show_search = false\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <div\n                class=\"overflow-auto flex-1 h-1/2 flex flex-col space-y-2\"\n                *ngIf=\"!(loading | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(search_results | async)?.length; else search_empty\"\n                >\n                    <button\n                        matRipple\n                        class=\"flex items-center p-2 space-x-2 w-full text-left\"\n                        *ngFor=\"let user of search_results | async\"\n                        (click)=\"addUser(user)\"\n                    >\n                        <div class=\"text-base relative\">\n                            <a-user-avatar [user]=\"user\"></a-user-avatar>\n                            <div\n                                class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                                [class.bg-error]=\"!user.location\"\n                                [class.bg-success]=\"user.location\"\n                            ></div>\n                        </div>\n                        <div class=\"leading-tight\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div class=\"text-sm truncate\">\n                                {{ user.organisation }}\n                            </div>\n                        </div>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-contacts.svg\" />\n                <p class=\"opacity-60 text-sm text-center\">\n                    You have no colleagues added. Please select the \"Add\" button\n                    to get started.\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #search_empty>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{\n                        !(options | async)?.search\n                            ? 'Start typing to search for users.'\n                            : 'Unable for find any users matching \"' +\n                              (options | async)?.search +\n                              '\"'\n                    }}\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"opacity-60 text-sm text-center\">Searching users...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class LandingColleaguesComponent extends BaseClass {\n    public show_search = false;\n    public readonly contacts = this._state.contacts;\n\n    public readonly search_results = combineLatest([\n        this._state.search_results,\n        this._state.contacts,\n    ]).pipe(\n        map(([list, contacts]) =>\n            list.filter(\n                (_) =>\n                    !contacts.find(\n                        (user) => user.id !== _.id && user.email !== _.email\n                    )\n            )\n        )\n    );\n\n    public readonly options = this._state.options;\n\n    public readonly loading = this._state.loading;\n\n    public readonly addUser = async (u) => {\n        await this._state.addContact(u);\n        notifySuccess(`Successfully added \"${u.name}\" to contacts`);\n        this.show_search = false;\n    };\n\n    public readonly removeUser = async (u) => {\n        await this._state.removeContact(u);\n        notifySuccess(`Successfully removed \"${u.name}\" from contacts`);\n    };\n\n    public readonly updateSearch = (s) => this._state.setOptions({ search: s });\n\n    @ViewChild('search_input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _state: LandingStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public newMeeting(user: User) {\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ attendees: [user] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public openSearch() {\n        this.updateSearch('');\n        this.show_search = true;\n        this.timeout('open', () => this._input_el.nativeElement.focus(), 100);\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { BaseClass, notifySuccess, SettingsService } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-favourites',\n    template: `\n            <div class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\">\n                <h2 class=\"mx-2\">{{ (list | async)?.length || 0 }} Resources</h2>\n                <div class=\"flex items-center space-x-2 text-primary\">\n                    <button mat-icon-button class=\"!border !border-solid !border-primary\">\n                        <app-icon>search</app-icon>\n                    </button>\n                    <button mat-icon-button class=\"!border !border-solid !border-primary\">\n                        <app-icon>filter_list</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full space-y-4 overflow-auto pt-4\">\n                <ng-container\n                    *ngIf=\"(list | async)?.length; else empty_state\"\n                >\n                    <div\n                        class=\"flex items-center px-4 space-x-4 relative\"\n                        user\n                        *ngFor=\"let user of list | async\"\n                    >\n                        <div class=\"text-xl relative\">\n                            <a-user-avatar [user]=\"user\"></a-user-avatar>\n                            <div\n                                class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                                [class.bg-error]=\"!user.location\"\n                                [class.bg-success]=\"user.location\"\n                            ></div>\n                        </div>\n                        <div class=\"leading-tight\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div class=\"text-sm truncate\">\n                                {{ user.organisation }}\n                            </div>\n                            <div class=\"text-xs opacity-60 truncate\">\n                                {{ user.location }}\n                            </div>\n                        </div>\n                        <button mat-icon-button class=\"absolute top-1/2 right-1 -translate-y-1/2 opacity-0\" (click)=\"removeUser(user)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </ng-container>\n            </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-favourites.svg\" />\n                <p class=\"opacity-60 text-sm text-center\">\n                    You have no favourites hearted. To add a favourites heart a room, desk or parking space.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        [user]:hover button {\n            opacity: 1;\n        }\n\n        :host {\n            height: 100%;\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n        }\n    `]\n})\nexport class LandingFavouritesComponent extends BaseClass {\n\n    public readonly list = new BehaviorSubject([]);\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Booking, removeBooking } from '@placeos/bookings';\nimport { notifyError, notifySuccess, openConfirmModal } from '@placeos/common';\nimport { CalendarEvent, EventFormService, removeEvent } from '@placeos/events';\nimport { format } from 'date-fns';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-upcoming',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"flex items-center justify-between mb-2 sm:mb-4 px-4\">\n                <div class=\"sm:text-lg font-medium\">Your Bookings</div>\n                <a\n                    button\n                    mat-button\n                    class=\"inverse hidden sm:block\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    View All\n                </a>\n                <a\n                    class=\"inverse block sm:hidden text-blue-500 underline relative top-8\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    View All\n                </a>\n            </div>\n            <div class=\"space-y-4 px-4\">\n                <ng-container\n                    *ngIf=\"(upcoming_events | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"\n                            let event of upcoming_events | async | slice: 0:3;\n                            trackBy: trackByFn\n                        \"\n                    >\n                        <ng-container [ngSwitch]=\"type(event)\">\n                            <event-card\n                                *ngSwitchCase=\"'event'\"\n                                [event]=\"event\"\n                                [show_day]=\"true\"\n                                (edit)=\"edit(event)\"\n                                (remove)=\"remove(event)\"\n                            ></event-card>\n                            <booking-card\n                                *ngSwitchCase=\"'booking'\"\n                                [booking]=\"event\"\n                                [show_day]=\"true\"\n                                (remove)=\"remove(event)\"\n                            ></booking-card>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\">You have no upcoming bookings</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LandingUpcomingComponent implements OnInit, OnDestroy {\n    public readonly upcoming_events = this._state.upcoming_events;\n\n    public type(event: CalendarEvent | Booking) {\n        return event instanceof Booking ? 'booking' : 'event';\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _event_form: EventFormService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit() {\n        this._state.pollUpcomingEvents();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingUpcomingEvents();\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n\n    public edit(event: CalendarEvent) {\n        this._router.navigate(['/book', 'meeting', 'form']);\n        this._event_form.newForm(event);\n    }\n\n    public async remove(item: CalendarEvent | Booking) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name =\n            item instanceof CalendarEvent\n                ? item.space?.display_name\n                : item.asset_name || item.asset_id;\n        const content = `Delete the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n        console\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await (item instanceof CalendarEvent ? removeEvent : removeBooking)(\n            item.id\n        ).toPromise().catch(e => {\n            notifyError(`Unable to delete booking. ${e}`);\n            resp.close();\n            throw e;\n        });\n        notifySuccess('Successfully deleted booking.');\n        resp.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { currentUser } from '@placeos/common';\nimport { startOfMinute } from 'date-fns';\n\n@Component({\n    selector: 'app-dashboard',\n    template: `\n        <topbar class=\"z-10\" *ngIf=\"!hide_nav\"></topbar>\n        <div class=\"flex flex-1 h-1/2 bg-[#F8F8FA] dark:bg-zinc-700\">\n            <div\n                class=\"relative hidden sm:flex flex-col w-[18rem] h-full overflow-hidden bg-white dark:bg-neutral-700 border-r border-gray-200 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"flex items-center divide-x divide-gray-300\"\n                >\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'people'\"\n                        [class.border-gray-300]=\"tab !== 'people'\"\n                        [class.bg-black]=\"tab !== 'people'\"\n                        [class.bg-opacity-5]=\"tab !== 'people'\"\n                        (click)=\"tab = 'people'\"\n                    >\n                        <app-icon>people</app-icon>\n                        <div>Colleages</div>\n                    </button>\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'fav'\"\n                        [class.border-gray-300]=\"tab !== 'fav'\"\n                        [class.bg-black]=\"tab !== 'fav'\"\n                        [class.bg-opacity-5]=\"tab !== 'fav'\"\n                        (click)=\"tab = 'fav'\"\n                    >\n                        <app-icon>favorite</app-icon>\n                        <div>Favourites</div>\n                    </button>\n                </div>\n                <div class=\"flex-1 w-full h-1/2\">\n                    <landing-colleagues *ngIf=\"tab === 'people'\"></landing-colleagues>\n                    <landing-favourites *ngIf=\"tab === 'fav'\"></landing-favourites>\n                </div>\n            </div>\n            <div class=\"flex-1 h-full w-1/2 sm:px-4 overflow-auto z-0\">\n                <header\n                    class=\"sticky top-0 z-50 bg-[#ECF0F3] dark:bg-neutral-800 px-4 rounded-b flex items-center justify-between overflow-hidden\"\n                >\n                    <div class=\"\">\n                        <div class=\"sm:text-xl font-medium\">\n                            Hello {{ user?.name }},\n                        </div>\n                        <div date class=\"text-sm sm:text-base\">\n                            {{ date | date: 'fullDate' }}\n                        </div>\n                        <div class=\"text-sm sm:text-base\">Sydney Australia</div>\n                    </div>\n                    <div class=\"h-32 pt-4\">\n                        <img src=\"assets/img/landing.svg\" />\n                    </div>\n                </header>\n                <landing-availability></landing-availability>\n                <div\n                    class=\"mx-4 w-[calc(100%-2rem)] h-px bg-gray-300 mb-2\"\n                ></div>\n                <landing-upcoming></landing-upcoming>\n            </div>\n        </div>\n        <footer-menu *ngIf=\"!hide_nav\"></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n        `,\n    ],\n})\nexport class LandingComponent {\n    public time: number;\n    public tab = 'people';\n\n    public get hide_nav() {\n        return localStorage.getItem('PlaceOS.hide_nav') === 'true';\n    }\n\n    public get date() {\n        return startOfMinute(this.time || Date.now());\n    }\n\n    public get user() {\n        return currentUser();\n    }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { SharedComponentModule } from \"../components/shared.module\";\nimport { LandingAvailabilityComponent } from \"./landing-availability.component\";\nimport { LandingColleaguesComponent } from \"./landing-colleagues.component\";\nimport { LandingFavouritesComponent } from \"./landing-favourites.component\";\nimport { LandingUpcomingComponent } from \"./landing-upcoming.component\";\nimport { LandingComponent } from \"./landing.component\";\n\nconst COMPONENTS = [\n    LandingComponent,\n    LandingColleaguesComponent,\n    LandingAvailabilityComponent,\n    LandingUpcomingComponent,\n    LandingFavouritesComponent\n]\n\nconst ROUTES = [\n    { path: '', component: LandingComponent }\n]\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES)\n    ]\n})\nexport class AppLandingModule {}\n"],"x_google_ignoreList":[]}