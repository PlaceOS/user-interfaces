{"version":3,"file":"apps_workplace_src_app_landing_landing_module_ts.js","mappings":"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","names":["LandingStateService","BaseClass","constructor","_calendar","_schedule","_org","_spacesStatus","super","this","BehaviorSubject","list_free_spaces","pipe","map","list","building","filter","e","zones","includes","id","space","availability","length","find","_","status","sort","a","b","capacity","filtered_bookings","i","CalendarEvent","_contacts","asObservable","_options","_loading","_loading_spaces","debounceTime","switchMap","search","next","searchStaff","catchError","of","tap","shareReplay","_level_occupancy","init","n","initialised","first","toPromise","updateContacts","subscription","active_building","bld","subscribe","updateBuildingMetadata","updateOccupancy","sys_id","binding","getModule","listen","d","bind","setOptions","options","getValue","loadFreeSpaces","updateFreeSpaces","pollFreeSpaces","delay","interval","stopPollingFreeSpaces","clearInterval","pollUpcomingEvents","setDate","Date","now","startPolling","stopPollingUpcomingEvents","stopPolling","refreshUpcomingEvents","triggerPoll","metadata","showMetadata","currentUser","details","Array","User","addContact","user","users","t","push","unique","updateMetadata","name","description","removeContact","u","email","levels","active_levels","take","recommendation","period_start","Math","floor","valueOf","period_end","endOfDay","freeBusy","zone_ids","_free_spaces","occupancy","sys","module","index","mod","_occupancy_binding","unbind","value","Object","keys","key","recommendation_factor","levelWithID","i0","factory","LandingAvailabilityComponent","_state","_settings","free_spaces","loading_spaces","level_occupancy","trackBySpaceId","buildings","hide_spaces","get","hide_rooms","ngOnInit","ngOnDestroy","selectors","$localize","LandingColleaguesComponent","_event_form","_router","contacts","combineLatest","search_results","loading","notifySuccess","show_search","s","newMeeting","newForm","form","patchValue","attendees","navigate","openSearch","updateSearch","timeout","_input_el","nativeElement","focus","i18n_2","ctx","ctx_r13","EMPTY","LandingFavouritesComponent","_space_pipe","_booking_form","loadAssets","desks","parking","type","parking_spaces","spaces","FAV_DESK_KEY","FAV_PARKING_KEY","toggleFavourite","fav_list","saveUserSetting","newSpaceMeeting","transform","resources","newBooking","asset_id","booking_type","SpacePipe","i18n_1","i18n_5","LandingUpcomingComponent","_dialog","upcoming_events","event","Booking","trackByFn","item","edit","remove","time","format","date","content","display_name","asset_name","resp","openConfirmModal","title","icon","reason","removeEvent","removeBooking","catch","notifyError","close","ROUTES","path","component","LandingComponent","hide_nav","localStorage","getItem","startOfMinute","hide_colleagues","AppLandingModule","CommonModule","SharedComponentModule","FormsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/landing/landing-state.service.ts","./apps/workplace/src/app/landing/landing-availability.component.ts","./apps/workplace/src/app/landing/landing-colleagues.component.ts","./apps/workplace/src/app/landing/landing-favourites.component.ts","./apps/workplace/src/app/landing/landing-upcoming.component.ts","./apps/workplace/src/app/landing/landing.component.ts","./apps/workplace/src/app/landing/landing.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    getModule,\n    PlaceMetadata,\n    PlaceVariableBinding,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { endOfDay } from 'date-fns';\n\nimport { BaseClass, currentUser, HashMap, unique } from '@placeos/common';\nimport { Space, SpacesStatusService } from '@placeos/spaces';\nimport { CalendarEvent, queryEvents } from '@placeos/events';\nimport { searchStaff, User } from '@placeos/users';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { CalendarService } from '@placeos/calendar';\nimport { ScheduleStateService } from '../new-schedule/schedule-state.service';\n\nexport interface LandingOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LandingStateService extends BaseClass {\n    private _options = new BehaviorSubject<LandingOptions>({});\n    private _loading = new BehaviorSubject<string>('');\n    private _loading_spaces = new BehaviorSubject<boolean>(false);\n    /**  */\n    private _free_spaces = new BehaviorSubject<Space[]>([]);\n    /**  */\n    private _contacts = new BehaviorSubject<User[]>([]);\n    /**  */\n    private _level_occupancy = new BehaviorSubject<BuildingLevel[]>([]);\n    /**  */\n    private _occupancy_binding: PlaceVariableBinding;\n    /**  */\n    // public free_spaces = this._free_spaces.asObservable();\n\n    /** Switch to use ws real time free space subscription */\n    public free_spaces = this._spacesStatus.list_free_spaces.pipe(\n        map((list) =>\n            this._org.building\n                ? list\n                      .filter((e) => e.zones.includes(this._org.building.id))\n                      .filter(\n                          (space) =>\n                              !space.availability.length ||\n                              space.availability.find(\n                                  (_) => _.status !== 'busy'\n                              )\n                      )\n                      .sort((a, b) => a.capacity - b.capacity)\n                : []\n        )\n    );\n    /**  */\n    public readonly upcoming_events = this._schedule.filtered_bookings.pipe(\n        map((_) => _.filter((i) => i instanceof CalendarEvent))\n    );\n    /**  */\n    public contacts = this._contacts.asObservable();\n    /**  */\n    public options = this._options.asObservable();\n    /**  */\n    public loading = this._loading.asObservable();\n    /**  */\n    public loading_spaces = this._loading_spaces.asObservable();\n\n    public readonly search_results = this._options.pipe(\n        debounceTime(500),\n        switchMap(({ search }) => {\n            this._loading.next('Loading users...');\n            return search\n                ? searchStaff(search).pipe(catchError(() => of([])))\n                : of([]);\n        }),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n    /**  */\n    public level_occupancy = this._level_occupancy.asObservable();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _schedule: ScheduleStateService,\n        private _org: OrganisationService,\n        private _spacesStatus: SpacesStatusService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.updateContacts();\n        this.subscription(\n            'building',\n            this._org.active_building\n                .pipe(filter((bld) => !!bld))\n                .subscribe(() => {\n                    this.updateBuildingMetadata();\n                    this.updateOccupancy({});\n                })\n        );\n        let sys_id = this._org.binding('area_management');\n        if (!sys_id) return;\n        const binding = getModule(sys_id, 'AreaManagement').binding('overview');\n        binding.listen().subscribe((d) => this.updateOccupancy(d || {}));\n        binding.bind();\n    }\n\n    public setOptions(options: Partial<LandingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public async loadFreeSpaces() {\n        // Ignore if already loading\n        if (this._loading_spaces.getValue()) return;\n\n        this._loading_spaces.next(true);\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.updateFreeSpaces();\n    }\n\n    public pollFreeSpaces(delay: number = 60 * 1000) {\n        this._loading_spaces.next(true);\n        this.updateFreeSpaces();\n        this.interval('free_spaces', () => this.updateFreeSpaces(), delay);\n    }\n\n    public stopPollingFreeSpaces() {\n        this.clearInterval('free_spaces');\n    }\n\n    public pollUpcomingEvents(delay: number = 10 * 1000) {\n        this._schedule.setDate(Date.now());\n        return this._schedule.startPolling(delay);\n    }\n\n    public stopPollingUpcomingEvents() {\n        this._schedule.stopPolling();\n    }\n\n    public refreshUpcomingEvents() {\n        this._schedule.triggerPoll();\n    }\n\n    public async updateContacts() {\n        const metadata: PlaceMetadata = (await showMetadata(\n            currentUser().id,\n            'contacts'\n        ).toPromise()) as any;\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async addContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users.push(user);\n        users = unique(users, 'email');\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async removeContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users = users.filter((u) => u.email !== user.email);\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    private async updateOccupancy(map: HashMap<{ recommendation: number }>) {\n        const levels = [\n            ...(await this._org.active_levels.pipe(take(1)).toPromise()),\n        ];\n        levels.sort(\n            (a, b) => map[a.id]?.recommendation - map[b.id]?.recommendation\n        );\n        this._level_occupancy.next(levels);\n    }\n\n    private async updateFreeSpaces() {\n        if (!this._org.building) return;\n        this._loading_spaces.next(true);\n        const period_start = Math.floor(new Date().valueOf() / 1000);\n        const period_end = Math.floor(endOfDay(new Date()).valueOf() / 1000);\n        const list = await this._calendar\n            .freeBusy({\n                period_start,\n                period_end,\n                zone_ids: this._org.building.id,\n            })\n            .pipe(\n                map((_) =>\n                    _.filter(\n                        (space) =>\n                            !space.availability.length ||\n                            space.availability.find((_) => _.status !== 'busy')\n                    )\n                ),\n                catchError((_) => of([]))\n            )\n            .toPromise();\n        list.sort((a, b) => a.capacity - b.capacity);\n        this._free_spaces.next(list);\n        this._loading_spaces.next(false);\n    }\n\n    private async updateBuildingMetadata() {\n        this._level_occupancy.next([]);\n        const occupancy: any = this._org.binding('occupancy');\n        if (!occupancy) return;\n        const { sys, module, index } = occupancy;\n        const mod = getModule(sys, module, index);\n        if (!mod) return;\n        if (this._occupancy_binding) {\n            this._occupancy_binding.unbind();\n        }\n        this._occupancy_binding = mod.binding('occupancy');\n        this._occupancy_binding.bind();\n        this.subscription(\n            'occupancy_binding',\n            this._occupancy_binding.listen().subscribe((value) => {\n                const levels = Object.keys(value).map((key) => ({\n                    id: key,\n                    ...value[key],\n                }));\n                levels.sort(\n                    (a, b) => a.recommendation_factor - b.recommendation_factor\n                );\n                this._level_occupancy.next(\n                    levels.map((i) => this._org.levelWithID([i.id]))\n                );\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-availability',\n    template: `\n        <div class=\"py-2\">\n            <div\n                class=\"sm:text-lg font-medium mb-2 sm:mb-4 px-4\"\n                i18n\n                *ngIf=\"!hide_rooms || !hide_spaces\"\n            >\n                Available Now\n            </div>\n            <div\n                class=\"flex items-center text-sm sm:text-base px-4 space-x-2\"\n                *ngIf=\"!hide_spaces\"\n            >\n                <div i18n>Spaces</div>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n                *ngIf=\"!hide_spaces\"\n            >\n                <button\n                    matRipple\n                    *ngFor=\"let lvl of levels_free | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-[#1F2021] shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ level: lvl.id }\"\n                >\n                    <div\n                        class=\"min-w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ lvl.display_name || lvl.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>{{\n                                building(lvl.parent_id)?.display_name ||\n                                    building(lvl.parent_id)?.name\n                            }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(levels_free | async).length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                    i18n\n                >\n                    No free spaces\n                </span>\n            </div>\n            <div\n                class=\"flex items-center text-sm sm:text-base px-4 space-x-2\"\n                *ngIf=\"!hide_rooms\"\n            >\n                <div i18n>Rooms</div>\n                <mat-spinner\n                    diameter=\"24\"\n                    *ngIf=\"loading_spaces | async\"\n                ></mat-spinner>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n                *ngIf=\"!hide_rooms\"\n            >\n                <button\n                    matRipple\n                    *ngFor=\"\n                        let space of space_list | async;\n                        trackBy: trackBySpaceId\n                    \"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-[#1F2021] shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ space: space.email }\"\n                >\n                    <div\n                        class=\"w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-800 overflow-hidden flex items-center justify-center\"\n                    >\n                        <img\n                            *ngIf=\"\n                                (space.id | space | async)?.images?.length;\n                                else space_placeholder\n                            \"\n                            [src]=\"(space.id | space | async)?.images[0]\"\n                            class=\"min-h-full object-cover\"\n                        />\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>{{\n                                space.level.display_name || space.level.name\n                            }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(space_list | async).length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                    i18n\n                >\n                    No free rooms\n                </span>\n            </div>\n        </div>\n        <ng-template #space_placeholder>\n            <img class=\"m-auto\" src=\"assets/icons/room-placeholder.svg\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            * {\n                flex-shrink: 0;\n            }\n        `,\n    ],\n})\nexport class LandingAvailabilityComponent {\n    public readonly space_list = this._state.free_spaces;\n    public readonly loading_spaces = this._state.loading_spaces;\n    public readonly levels_free = this._state.level_occupancy;\n\n    public trackBySpaceId(index: number, space: Space) {\n        return space.id;\n    }\n\n    public building(id: string) {\n        return this._org.buildings.find((bld) => bld.id === id);\n    }\n\n    public get hide_spaces() {\n        return this._settings.get('app.general.hide_spaces');\n    }\n\n    public get hide_rooms() {\n        return this._settings.get('app.general.hide_rooms');\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public async ngOnInit() {\n        // this._state.loadFreeSpaces();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingFreeSpaces();\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseClass, notifySuccess, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { User } from '@placeos/users';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-colleagues',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\"\n        >\n            <h2 class=\"mx-2\" i18n>{{ (contacts | async)?.length || 0 }} { (contacts | async)?.length, plural, =1 { Person } other { People } }</h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div class=\"flex-1 h-1/2 w-full space-y-4 overflow-auto pt-4\">\n            <ng-container *ngIf=\"(contacts | async)?.length; else empty_state\">\n                <div\n                    class=\"flex items-center px-2 space-x-2 relative\"\n                    user\n                    *ngFor=\"let user of contacts | async\"\n                >\n                    <div class=\"text-xl relative\">\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div\n                            class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                            [class.bg-error]=\"!user.location\"\n                            [class.bg-success]=\"user.location\"\n                        ></div>\n                    </div>\n                    <div class=\"leading-tight flex-1 w-1/2\">\n                        <div class=\"truncate\">{{ user.name }}</div>\n                        <div class=\"text-sm truncate\">\n                            {{ user.organisation }}\n                        </div>\n                        <div class=\"text-xs opacity-60 truncate\">\n                            {{ user.location }}\n                        </div>\n                    </div>\n                    <button\n                        mat-icon-button\n                        class=\"rounded bg-gray-300\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">face</app-icon>\n                                <div>View Colleague</div>\n                            </button> -->\n                        <button\n                            mat-menu-item\n                            (click)=\"newMeeting(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">today</app-icon>\n                            <div i18n>Create Meeting</div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"removeContact(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div i18n>Remove Colleague</div>\n                        </button>\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">report</app-icon>\n                                <div>Block Colleague</div>\n                            </button> -->\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <button\n            mat-button\n            class=\"inverse w-[calc(100%-1rem)] m-2\"\n            (click)=\"openSearch()\"\n        >\n            Add\n        </button>\n        <div\n            search\n            [class.hidden]=\"!show_search\"\n            class=\"absolute inset-x-2 top-2 bottom-[3.5rem] rounded-lg overflow-hidden flex flex-col bg-white dark:bg-neutral-600 shadow border border-gray-200\"\n        >\n            <input\n                #search_input\n                [ngModel]=\"(options | async)?.search\"\n                (ngModelChange)=\"updateSearch($event)\"\n                placeholder=\"Search for users...\"\n                class=\"w-full border-b border-gray-200 p-2 rounded-t-lg\"\n            />\n            <button\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                (click)=\"show_search = false\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <div\n                class=\"overflow-auto flex-1 h-1/2 flex flex-col space-y-2\"\n                *ngIf=\"!(loading | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(search_results | async)?.length; else search_empty\"\n                >\n                    <button\n                        matRipple\n                        class=\"flex items-center p-2 space-x-2 w-full text-left\"\n                        *ngFor=\"let user of search_results | async\"\n                        (click)=\"addUser(user)\"\n                    >\n                        <div class=\"text-base relative\">\n                            <a-user-avatar [user]=\"user\"></a-user-avatar>\n                            <div\n                                class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                                [class.bg-error]=\"!user.location\"\n                                [class.bg-success]=\"user.location\"\n                            ></div>\n                        </div>\n                        <div class=\"leading-tight\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div class=\"text-sm truncate\">\n                                {{ user.organisation }}\n                            </div>\n                        </div>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-contacts.svg\" />\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    You have no colleagues added. Please select the \"Add\" button\n                    to get started.\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #search_empty>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{\n                        !(options | async)?.search\n                            ? 'Start typing to search for users.'\n                            : 'Unable for find any users matching \"' +\n                              (options | async)?.search +\n                              '\"'\n                    }}\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"opacity-60 text-sm text-center\" i18n>Searching users...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class LandingColleaguesComponent extends BaseClass {\n    public show_search = false;\n    public readonly contacts = this._state.contacts;\n\n    public readonly search_results = combineLatest([\n        this._state.search_results,\n        this._state.contacts,\n    ]).pipe(\n        map(([list, contacts]) =>\n            list.filter(\n                (_) =>\n                    !contacts.find(\n                        (user) => user.id !== _.id && user.email !== _.email\n                    )\n            )\n        )\n    );\n\n    public readonly options = this._state.options;\n\n    public readonly loading = this._state.loading;\n\n    public readonly addUser = async (u) => {\n        await this._state.addContact(u);\n        notifySuccess(`Successfully added \"${u.name}\" to contacts`);\n        this.show_search = false;\n    };\n\n    public readonly removeUser = async (u) => {\n        await this._state.removeContact(u);\n        notifySuccess(`Successfully removed \"${u.name}\" from contacts`);\n    };\n\n    public readonly updateSearch = (s) => this._state.setOptions({ search: s });\n\n    @ViewChild('search_input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _state: LandingStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public newMeeting(user: User) {\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ attendees: [user] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public openSearch() {\n        this.updateSearch('');\n        this.show_search = true;\n        this.timeout('open', () => this._input_el.nativeElement.focus(), 100);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    BookingFormService,\n    BookingType,\n    FAV_PARKING_KEY,\n} from '@placeos/bookings';\nimport { BaseClass, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { FAV_DESK_KEY } from 'libs/bookings/src/lib/desk-select-modal/desk-select-modal.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'landing-favourites',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\"\n        >\n            <h2 class=\"mx-2\" i18n>\n                {{ spaces?.length || 0 }} { spaces?.length, plural, =1 {\n                Resource } other { Resources } }\n            </h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div\n            class=\"flex-1 h-1/2 w-full space-y-2 overflow-auto pt-4 divide-y divide-gray-300\"\n        >\n            <ng-container\n                *ngIf=\"\n                    spaces?.length || (assets | async)?.length;\n                    else empty_state\n                \"\n            >\n                <div\n                    class=\"flex flex-col items-center mx-2 pt-4 space-y-2 relative\"\n                    item\n                    *ngFor=\"let item of spaces\"\n                >\n                    <div class=\"flex w-full items-center space-x-2 relative\">\n                        <div class=\"w-20 h-20 overflow-hidden rounded relative flex items-center justify-center bg-black/10 dark:bg-white/5\">\n                            <img\n                                *ngIf=\"(item | space | async)?.images?.length else space_placeholder\"\n                                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-w-full min-h-full\"\n                                [src]=\"(item | space | async)?.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"h-20\">\n                            <div class=\"truncate mb-4\">\n                                {{\n                                    (item | space | async)?.display_name ||\n                                        (item | space | async)?.name\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2 mb-2\"\n                            >\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <div>\n                                    {{\n                                        (item | space | async)?.level\n                                            ?.display_name\n                                    }}\n                                </div>\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2\"\n                            >\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <div i18n>\n                                    {{ (item | space | async)?.capacity || 2 }}\n                                    { (item | space | async)?.capacity || 2,\n                                    plural, =1 { Person } other { People } }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        mat-button\n                        class=\"w-full inverse\"\n                        (click)=\"newSpaceMeeting(item)\"\n                        i18n\n                    >\n                        Book\n                    </button>\n                    <button\n                        mat-icon-button\n                        [matMenuTriggerFor]=\"menu\"\n                        class=\"absolute top-2 right-0 bg-gray-200 dark:bg-neutral-600 rounded !m-0\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">info</app-icon>\n                            <div i18n>View Details</div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"toggleFavourite('space', id)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div i18n>Remove Favourite</div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    class=\"flex flex-col items-center mx-2 pt-4 space-y-2 relative\"\n                    item\n                    *ngFor=\"let item of assets | async\"\n                >\n                    <div class=\"flex w-full items-center space-x-2 relative\">\n                        <div class=\"w-20 h-20 overflow-hidden rounded relative flex items-center justify-center bg-black/10 dark:bg-white/5\">\n                            <img\n                                *ngIf=\"item?.images?.length; else asset_placeholder\"\n                                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-w-full min-h-full\"\n                                [src]=\"item?.images[0]\"\n                            />\n                            <ng-template #asset_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    [src]=\"'assets/icons/' + (item.type === 'desk' ? 'desk' : 'car') + '-placeholder.svg'\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"h-20\">\n                            <div class=\"truncate mb-4\">\n                                {{ item?.display_name || item?.name }}\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2 mb-2\"\n                            >\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <div>\n                                    {{ item?.zone?.display_name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        mat-button\n                        class=\"w-full inverse\"\n                        (click)=\"newBooking(item.type, item)\"\n                        i18n\n                    >\n                        Book\n                    </button>\n                    <button\n                        mat-icon-button\n                        [matMenuTriggerFor]=\"menu\"\n                        class=\"absolute top-2 right-0 bg-gray-200 dark:bg-neutral-600 rounded !m-0\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">info</app-icon>\n                            <div i18n>View Details</div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"toggleFavourite(item.type, item.id)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div i18n>Remove Favourite</div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-favourites.svg\" />\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    You have no favourites hearted. To add a favourites heart a\n                    room, desk or parking space.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class LandingFavouritesComponent extends BaseClass {\n    public readonly assets = combineLatest([\n        this._booking_form.loadAssets('desks' as any),\n        this._booking_form.loadAssets('parking_spaces' as any),\n    ]).pipe(\n        map(([desks, parking]) => {\n            return [\n                ...desks\n                    .filter(({ id }) => this.desks.includes(id))\n                    .map((_) => ({ ..._, type: 'desk' })),\n                ...parking\n                    .filter(({ id }) => this.parking_spaces.includes(id))\n                    .map((_) => ({ ..._, type: 'parking' }))\n            ];\n        }),\n        shareReplay(1)\n    );\n\n    public get spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY;\n    }\n\n    public get desks() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY;\n    }\n\n    public get parking_spaces() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || EMPTY;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _event_form: EventFormService,\n        private _booking_form: BookingFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {}\n\n    public toggleFavourite(type: 'space' | 'desk' | 'parking', id: string) {\n        let fav_list = this.spaces;\n        let key = 'favourite_spaces';\n        switch (type) {\n            case 'desk':\n                fav_list = this.desks;\n                key = FAV_DESK_KEY;\n                break;\n            case 'parking':\n                fav_list = this.parking_spaces;\n                key = FAV_PARKING_KEY;\n                break;\n        }\n        const new_state = !fav_list.includes(id);\n        if (new_state) {\n            this._settings.saveUserSetting(key, [...fav_list, id]);\n        } else {\n            this._settings.saveUserSetting(\n                key,\n                fav_list.filter((_) => _ !== id)\n            );\n        }\n    }\n\n    public async newSpaceMeeting(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ resources: [space] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public async newBooking(type: BookingType, id: string) {\n        if (!id) return;\n        this._booking_form.newForm();\n        this._booking_form.setOptions({ type });\n        this._booking_form.form.patchValue({\n            asset_id: id,\n            booking_type: type,\n        });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate([\n                '/book',\n                type === 'desk' ? 'newdesk' : 'new-parking',\n            ]);\n        } else {\n            this._router.navigate([\n                '/book',\n                type === 'desk' ? 'desks' : 'parking',\n            ]);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Booking, removeBooking } from '@placeos/bookings';\nimport { notifyError, notifySuccess, openConfirmModal } from '@placeos/common';\nimport { CalendarEvent, EventFormService, removeEvent } from '@placeos/events';\nimport { format } from 'date-fns';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-upcoming',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"flex items-center justify-between mb-2 sm:mb-4 px-4\">\n                <div class=\"sm:text-lg font-medium\" i18n>Your Bookings</div>\n                <a\n                    button\n                    mat-button\n                    class=\"inverse hidden sm:block\"\n                    [routerLink]=\"['/your-bookings']\" i18n\n                >\n                    View All\n                </a>\n                <a\n                    class=\"inverse block sm:hidden text-blue-500 underline relative top-8\"\n                    [routerLink]=\"['/your-bookings']\" i18n\n                >\n                    View All\n                </a>\n            </div>\n            <div class=\"space-y-4 px-4\">\n                <ng-container\n                    *ngIf=\"(upcoming_events | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"\n                            let event of upcoming_events | async | slice: 0:3;\n                            trackBy: trackByFn\n                        \"\n                    >\n                        <ng-container [ngSwitch]=\"type(event)\">\n                            <event-card\n                                *ngSwitchCase=\"'event'\"\n                                [event]=\"event\"\n                                [show_day]=\"true\"\n                                (edit)=\"edit(event)\"\n                                (remove)=\"remove(event)\"\n                            ></event-card>\n                            <booking-card\n                                *ngSwitchCase=\"'booking'\"\n                                [booking]=\"event\"\n                                [show_day]=\"true\"\n                                (remove)=\"remove(event)\"\n                            ></booking-card>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\" i18n>You have no upcoming bookings</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LandingUpcomingComponent implements OnInit, OnDestroy {\n    public readonly upcoming_events = this._state.upcoming_events;\n\n    public type(event: CalendarEvent | Booking) {\n        return event instanceof Booking ? 'booking' : 'event';\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _event_form: EventFormService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit() {\n        // this._state.pollUpcomingEvents();\n        this._state.refreshUpcomingEvents();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingUpcomingEvents();\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n\n    public edit(event: CalendarEvent) {\n        this._router.navigate(['/book', 'meeting', 'form']);\n        this._event_form.newForm(event);\n    }\n\n    public async remove(item: CalendarEvent | Booking) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name =\n            item instanceof CalendarEvent\n                ? item.space?.display_name\n                : item.asset_name || item.asset_id;\n        const content = `Delete the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n        console\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await (item instanceof CalendarEvent ? removeEvent : removeBooking)(\n            item.id\n        ).toPromise().catch(e => {\n            notifyError(`Unable to delete booking. ${e}`);\n            resp.close();\n            throw e;\n        });\n        notifySuccess('Successfully deleted booking.');\n        resp.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { startOfMinute } from 'date-fns';\n\n@Component({\n    selector: 'app-dashboard',\n    template: `\n        <topbar class=\"z-10\" *ngIf=\"!hide_nav\"></topbar>\n        <div class=\"flex flex-1 h-1/2 bg-[#F8F8FA] dark:bg-neutral-900\">\n            <div\n                class=\"relative hidden sm:flex flex-col w-[18rem] h-full overflow-hidden bg-white dark:bg-[#1F2021] border-r border-gray-200 dark:border-neutral-700\"\n            >\n                <div class=\"flex items-center divide-x divide-gray-300\">\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'people'\"\n                        [class.border-gray-300]=\"tab !== 'people'\"\n                        [class.bg-black]=\"tab !== 'people'\"\n                        [class.bg-opacity-5]=\"tab !== 'people'\"\n                        (click)=\"tab = 'people'\"\n                        *ngIf=\"!hide_colleagues\"\n                    >\n                        <app-icon>people</app-icon>\n                        <div i18n>Colleagues</div>\n                    </button>\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'fav'\"\n                        [class.border-gray-300]=\"tab !== 'fav'\"\n                        [class.bg-black]=\"tab !== 'fav'\"\n                        [class.bg-opacity-5]=\"tab !== 'fav'\"\n                        (click)=\"tab = 'fav'\"\n                    >\n                        <app-icon>favorite</app-icon>\n                        <div i18n>Favourites</div>\n                    </button>\n                </div>\n                <div class=\"flex-1 w-full h-1/2\">\n                    <landing-colleagues\n                        *ngIf=\"tab === 'people' && !hide_colleagues\"\n                    ></landing-colleagues>\n                    <landing-favourites\n                        *ngIf=\"tab === 'fav' || hide_colleagues\"\n                    ></landing-favourites>\n                </div>\n            </div>\n            <div class=\"flex-1 h-full w-1/2 sm:px-4 overflow-auto z-0\">\n                <header\n                    class=\"sticky top-0 z-50 bg-[#ECF0F3] dark:bg-zinc-800 px-4 sm:rounded-b flex items-center justify-between overflow-hidden\"\n                >\n                    <div class=\"\">\n                        <div class=\"sm:text-xl font-medium\" i18n>\n                            Hello {{ user?.name }},\n                        </div>\n                        <div date class=\"text-sm sm:text-base\">\n                            {{ date | date: 'fullDate' }}\n                        </div>\n                        <div\n                            class=\"text-sm sm:text-base\"\n                            *ngIf=\"building?.address || building?.name\"\n                        >\n                            {{\n                                building.address ||\n                                    building.display_name ||\n                                    building.name\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"h-32 pt-4\">\n                        <img src=\"assets/img/landing.svg\" />\n                    </div>\n                </header>\n                <landing-availability></landing-availability>\n                <div\n                    class=\"mx-4 w-[calc(100%-2rem)] h-px bg-gray-300 mb-2\"\n                ></div>\n                <landing-upcoming></landing-upcoming>\n            </div>\n        </div>\n        <footer-menu *ngIf=\"!hide_nav\"></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n        `,\n    ],\n})\nexport class LandingComponent {\n    public time: number;\n    public tab = 'people';\n\n    public get hide_nav() {\n        return localStorage.getItem('PlaceOS.hide_nav') === 'true';\n    }\n\n    public get date() {\n        return startOfMinute(this.time || Date.now());\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get hide_colleagues() {\n        return this._settings.get('app.general.hide_colleagues');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { SharedComponentModule } from \"../components/shared.module\";\nimport { LandingAvailabilityComponent } from \"./landing-availability.component\";\nimport { LandingColleaguesComponent } from \"./landing-colleagues.component\";\nimport { LandingFavouritesComponent } from \"./landing-favourites.component\";\nimport { LandingUpcomingComponent } from \"./landing-upcoming.component\";\nimport { LandingComponent } from \"./landing.component\";\n\nconst COMPONENTS = [\n    LandingComponent,\n    LandingColleaguesComponent,\n    LandingAvailabilityComponent,\n    LandingUpcomingComponent,\n    LandingFavouritesComponent\n]\n\nconst ROUTES = [\n    { path: '', component: LandingComponent }\n]\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES)\n    ]\n})\nexport class AppLandingModule {}\n"],"x_google_ignoreList":[]}