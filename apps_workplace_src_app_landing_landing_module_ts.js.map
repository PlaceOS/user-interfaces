{"version":3,"file":"apps_workplace_src_app_landing_landing_module_ts.js","mappings":"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","names":["LandingStateService","BaseClass","constructor","_calendar","_schedule","_org","super","this","BehaviorSubject","_free_spaces","asObservable","filtered_bookings","pipe","map","_","filter","i","CalendarEvent","_contacts","_options","_loading","_loading_spaces","debounceTime","switchMap","search","next","searchStaff","catchError","of","tap","shareReplay","_level_occupancy","init","t","initialised","first","toPromise","subscription","active_building","bld","subscribe","updateBuildingMetadata","sys_id","binding","getModule","listen","d","updateOccupancy","bind","setOptions","options","getValue","pollFreeSpaces","delay","updateFreeSpaces","interval","stopPollingFreeSpaces","clearInterval","pollUpcomingEvents","setDate","Date","now","startPolling","stopPollingUpcomingEvents","stopPolling","updateContacts","metadata","showMetadata","currentUser","id","details","Array","User","addContact","user","users","push","unique","updateMetadata","name","description","removeContact","u","email","levels","sort","a","b","recommendation","building","period_start","Math","floor","valueOf","period_end","endOfDay","list","freeBusy","zone_ids","space","availability","length","find","status","capacity","occupancy","sys","module","index","mod","_occupancy_binding","unbind","value","Object","keys","key","recommendation_factor","levelWithID","i0","factory","LandingAvailabilityComponent","_state","free_spaces","loading_spaces","level_occupancy","ngOnInit","ngOnDestroy","selectors","LandingColleaguesComponent","_settings","_event_form","_router","c","contacts","combineLatest","search_results","loading","notifySuccess","show_search","s","newMeeting","newForm","form","patchValue","attendees","get","navigate","openSearch","updateSearch","timeout","_input_el","nativeElement","focus","ctx","ctx_r10","EMPTY","LandingFavouritesComponent","_space_pipe","spaces","toggleFavourite","type","fav_list","includes","saveUserSetting","newSpaceMeeting","transform","resources","SpacePipe","LandingUpcomingComponent","_dialog","upcoming_events","event","Booking","trackByFn","item","edit","remove","time","format","date","content","display_name","asset_name","asset_id","resp","openConfirmModal","title","icon","reason","removeEvent","removeBooking","catch","e","notifyError","close","ROUTES","path","component","LandingComponent","hide_nav","localStorage","getItem","startOfMinute","AppLandingModule","CommonModule","SharedComponentModule","FormsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/landing/landing-state.service.ts","./apps/workplace/src/app/landing/landing-availability.component.ts","./apps/workplace/src/app/landing/landing-colleagues.component.ts","./apps/workplace/src/app/landing/landing-favourites.component.ts","./apps/workplace/src/app/landing/landing-upcoming.component.ts","./apps/workplace/src/app/landing/landing.component.ts","./apps/workplace/src/app/landing/landing.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    getModule,\n    PlaceMetadata,\n    PlaceVariableBinding,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { endOfDay } from 'date-fns';\n\nimport { BaseClass, currentUser, HashMap, unique } from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { CalendarEvent, queryEvents } from '@placeos/events';\nimport { searchStaff, User } from '@placeos/users';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { CalendarService } from '@placeos/calendar';\nimport { ScheduleStateService } from '../new-schedule/schedule-state.service';\n\nexport interface LandingOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LandingStateService extends BaseClass {\n    private _options = new BehaviorSubject<LandingOptions>({});\n    private _loading = new BehaviorSubject<string>('');\n    private _loading_spaces = new BehaviorSubject<boolean>(false);\n    /**  */\n    private _free_spaces = new BehaviorSubject<Space[]>([]);\n    /**  */\n    private _contacts = new BehaviorSubject<User[]>([]);\n    /**  */\n    private _level_occupancy = new BehaviorSubject<BuildingLevel[]>([]);\n    /**  */\n    private _occupancy_binding: PlaceVariableBinding;\n    /**  */\n    public free_spaces = this._free_spaces.asObservable();\n    /**  */\n    public readonly upcoming_events = this._schedule.filtered_bookings.pipe(\n        map((_) => _.filter((i) => i instanceof CalendarEvent))\n    );\n    /**  */\n    public contacts = this._contacts.asObservable();\n    /**  */\n    public options = this._options.asObservable();\n    /**  */\n    public loading = this._loading.asObservable();\n    /**  */\n    public loading_spaces = this._loading_spaces.asObservable();\n\n    public readonly search_results = this._options.pipe(\n        debounceTime(500),\n        switchMap(({ search }) => {\n            this._loading.next('Loading users...');\n            return search\n                ? searchStaff(search).pipe(catchError(() => of([])))\n                : of([]);\n        }),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n    /**  */\n    public level_occupancy = this._level_occupancy.asObservable();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _schedule: ScheduleStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'building',\n            this._org.active_building\n                .pipe(filter((bld) => !!bld))\n                .subscribe(() => this.updateBuildingMetadata())\n        );\n        let sys_id = this._org.binding('area_management');\n        if (!sys_id) return;\n        const binding = getModule(sys_id, 'AreaManagement').binding('overview');\n        binding.listen().subscribe((d) => this.updateOccupancy(d || {}));\n        binding.bind();\n    }\n\n    public setOptions(options: Partial<LandingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public pollFreeSpaces(delay: number = 60 * 1000) {\n        this._loading_spaces.next(true);\n        this.updateFreeSpaces();\n        this.interval('free_spaces', () => this.updateFreeSpaces(), delay);\n    }\n\n    public stopPollingFreeSpaces() {\n        this.clearInterval('free_spaces');\n    }\n\n    public pollUpcomingEvents(delay: number = 10 * 1000) {\n        this._schedule.setDate(Date.now());\n        return this._schedule.startPolling(delay);\n    }\n\n    public stopPollingUpcomingEvents() {\n        this._schedule.stopPolling();\n    }\n\n    public async updateContacts() {\n        const metadata: PlaceMetadata = (await showMetadata(\n            currentUser().id,\n            'contacts'\n        ).toPromise()) as any;\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async addContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users.push(user);\n        users = unique(users, 'email');\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    public async removeContact(user: User) {\n        let users = [...this._contacts.getValue()];\n        users = users.filter((u) => u.email !== user.email);\n        const metadata = await updateMetadata(currentUser().id, {\n            name: 'contacts',\n            description: 'Contacts for the User',\n            details: users,\n        }).toPromise();\n        const list = metadata.details instanceof Array ? metadata.details : [];\n        this._contacts.next(list.map((i) => new User(i)));\n    }\n\n    private async updateOccupancy(map: HashMap<{ recommendation: number }>) {\n        const levels = [...this._org.levels];\n        levels.sort(\n            (a, b) => map[a.id]?.recommendation - map[b.id]?.recommendation\n        );\n        this._level_occupancy.next(levels);\n    }\n\n    private async updateFreeSpaces() {\n        if (!this._org.building) return;\n        this._loading_spaces.next(true);\n        const period_start = Math.floor(new Date().valueOf() / 1000);\n        const period_end = Math.floor(endOfDay(new Date()).valueOf() / 1000);\n        const list = await this._calendar\n            .freeBusy({\n                period_start,\n                period_end,\n                zone_ids: this._org.building.id,\n            })\n            .pipe(\n                map((_) =>\n                    _.filter(\n                        (space) =>\n                            !space.availability.length ||\n                            space.availability.find((_) => _.status !== 'busy')\n                    )\n                ),\n                catchError(_ => of([]))\n            )\n            .toPromise();\n        list.sort((a, b) => a.capacity - b.capacity);\n        this._free_spaces.next(list);\n        this._loading_spaces.next(false);\n    }\n\n    private async updateBuildingMetadata() {\n        this._level_occupancy.next([]);\n        const occupancy: any = this._org.binding('occupancy');\n        if (!occupancy) return;\n        const { sys, module, index } = occupancy;\n        const mod = getModule(sys, module, index);\n        if (!mod) return;\n        if (this._occupancy_binding) {\n            this._occupancy_binding.unbind();\n        }\n        this._occupancy_binding = mod.binding('occupancy');\n        this._occupancy_binding.bind();\n        this.subscription(\n            'occupancy_binding',\n            this._occupancy_binding.listen().subscribe((value) => {\n                const levels = Object.keys(value).map((key) => ({\n                    id: key,\n                    ...value[key],\n                }));\n                levels.sort(\n                    (a, b) => a.recommendation_factor - b.recommendation_factor\n                );\n                this._level_occupancy.next(\n                    levels.map((i) => this._org.levelWithID([i.id]))\n                );\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-availability',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"sm:text-lg font-medium mb-2 sm:mb-4 px-4\">\n                Available Now\n            </div>\n            <div class=\"flex items-center text-sm sm:text-base px-4 space-x-2\">\n                <div>Spaces</div>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n            >\n                <button\n                    matRipple\n                    *ngFor=\"let lvl of levels_free | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-[#1F2021] shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ level: lvl.id }\"\n                >\n                    <div\n                        class=\"min-w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <img class=\"m-auto\" src=\"assets/icons/desk-placeholder.svg\" />\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ lvl.display_name || lvl.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>Unknown Building</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(levels_free | async).length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                >\n                    No free spaces\n                </span>\n            </div>\n            <div class=\"flex items-center text-sm sm:text-base px-4 space-x-2\">\n                <div>Rooms</div>\n                <mat-spinner\n                    diameter=\"24\"\n                    *ngIf=\"loading_spaces | async\"\n                ></mat-spinner>\n            </div>\n            <div\n                class=\"w-full overflow-auto flex items-center space-x-4 px-4 py-2\"\n            >\n                <button\n                    matRipple\n                    *ngFor=\"let space of space_list | async\"\n                    class=\"flex items-center h-24 min-w-[12.5rem] rounded-lg bg-white dark:bg-[#1F2021] shadow p-4 space-x-2\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ space: space.email }\"\n                >\n                    <div\n                        class=\"w-[4.5rem] h-[4.5rem] rounded bg-gray-200 dark:bg-neutral-800 overflow-hidden flex items-center justify-center\"\n                    >\n                        <img\n                            *ngIf=\"\n                                (space.id | space | async)?.images?.length;\n                                else space_placeholder\n                            \"\n                            [src]=\"(space.id | space | async)?.images[0]\"\n                            class=\"min-h-full object-cover\"\n                        />\n                    </div>\n                    <div class=\"text-left\">\n                        <div class=\"max-w-full truncate px-1.5\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                        <div\n                            class=\"max-w-full truncate text-sm opacity-60 flex items-center\"\n                        >\n                            <app-icon class=\"text-blue-500 text-lg\"\n                                >place</app-icon\n                            >\n                            <span>{{\n                                space.level.display_name || space.level.name\n                            }}</span>\n                        </div>\n                    </div>\n                </button>\n                <span\n                    *ngIf=\"!(space_list | async).length\"\n                    class=\"opacity-60 text-sm mb-2\"\n                >\n                    No free rooms\n                </span>\n            </div>\n        </div>\n        <ng-template #space_placeholder>\n            <img class=\"m-auto\" src=\"assets/icons/room-placeholder.svg\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            * {\n                flex-shrink: 0;\n            }\n        `,\n    ],\n})\nexport class LandingAvailabilityComponent {\n    public readonly space_list = this._state.free_spaces;\n    public readonly loading_spaces = this._state.loading_spaces;\n    public readonly levels_free = this._state.level_occupancy;\n\n    constructor(private _state: LandingStateService) {}\n\n    public async ngOnInit() {\n        this._state.pollFreeSpaces();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingFreeSpaces();\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseClass, notifySuccess, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { User } from '@placeos/users';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-colleagues',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\"\n        >\n            <h2 class=\"mx-2\">{{ (contacts | async)?.length || 0 }} People</h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div class=\"flex-1 h-1/2 w-full space-y-4 overflow-auto pt-4\">\n            <ng-container *ngIf=\"(contacts | async)?.length; else empty_state\">\n                <div\n                    class=\"flex items-center px-2 space-x-2 relative\"\n                    user\n                    *ngFor=\"let user of contacts | async\"\n                >\n                    <div class=\"text-xl relative\">\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div\n                            class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                            [class.bg-error]=\"!user.location\"\n                            [class.bg-success]=\"user.location\"\n                        ></div>\n                    </div>\n                    <div class=\"leading-tight flex-1\">\n                        <div class=\"truncate\">{{ user.name }}</div>\n                        <div class=\"text-sm truncate\">\n                            {{ user.organisation }}\n                        </div>\n                        <div class=\"text-xs opacity-60 truncate\">\n                            {{ user.location }}\n                        </div>\n                    </div>\n                    <button\n                        mat-icon-button\n                        class=\"rounded bg-gray-300\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">face</app-icon>\n                                <div>View Colleague</div>\n                            </button> -->\n                        <button\n                            mat-menu-item\n                            (click)=\"newMeeting(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">today</app-icon>\n                            <div>Create Meeting</div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"removeContact(user)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Remove Colleague</div>\n                        </button>\n                        <!-- <button mat-menu-item (click)=\"viewUser(user)\" class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">report</app-icon>\n                                <div>Block Colleague</div>\n                            </button> -->\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <button\n            mat-button\n            class=\"inverse w-[calc(100%-1rem)] m-2\"\n            (click)=\"openSearch()\"\n        >\n            Add\n        </button>\n        <div\n            search\n            [class.hidden]=\"!show_search\"\n            class=\"absolute inset-x-2 top-2 bottom-[3.5rem] rounded-lg overflow-hidden flex flex-col bg-white dark:bg-neutral-600 shadow border border-gray-200\"\n        >\n            <input\n                #search_input\n                [ngModel]=\"(options | async)?.search\"\n                (ngModelChange)=\"updateSearch($event)\"\n                placeholder=\"Search for users...\"\n                class=\"w-full border-b border-gray-200 p-2 rounded-t-lg\"\n            />\n            <button\n                mat-icon-button\n                class=\"absolute top-0 right-0\"\n                (click)=\"show_search = false\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <div\n                class=\"overflow-auto flex-1 h-1/2 flex flex-col space-y-2\"\n                *ngIf=\"!(loading | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(search_results | async)?.length; else search_empty\"\n                >\n                    <button\n                        matRipple\n                        class=\"flex items-center p-2 space-x-2 w-full text-left\"\n                        *ngFor=\"let user of search_results | async\"\n                        (click)=\"addUser(user)\"\n                    >\n                        <div class=\"text-base relative\">\n                            <a-user-avatar [user]=\"user\"></a-user-avatar>\n                            <div\n                                class=\"rounded-full h-3 w-3 border border-white dark:border-neutral-400 absolute bottom-1 right-1\"\n                                [class.bg-error]=\"!user.location\"\n                                [class.bg-success]=\"user.location\"\n                            ></div>\n                        </div>\n                        <div class=\"leading-tight\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div class=\"text-sm truncate\">\n                                {{ user.organisation }}\n                            </div>\n                        </div>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-contacts.svg\" />\n                <p class=\"opacity-60 text-sm text-center\">\n                    You have no colleagues added. Please select the \"Add\" button\n                    to get started.\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #search_empty>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <p class=\"opacity-60 text-sm text-center\">\n                    {{\n                        !(options | async)?.search\n                            ? 'Start typing to search for users.'\n                            : 'Unable for find any users matching \"' +\n                              (options | async)?.search +\n                              '\"'\n                    }}\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"opacity-60 text-sm text-center\">Searching users...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class LandingColleaguesComponent extends BaseClass {\n    public show_search = false;\n    public readonly contacts = this._state.contacts;\n\n    public readonly search_results = combineLatest([\n        this._state.search_results,\n        this._state.contacts,\n    ]).pipe(\n        map(([list, contacts]) =>\n            list.filter(\n                (_) =>\n                    !contacts.find(\n                        (user) => user.id !== _.id && user.email !== _.email\n                    )\n            )\n        )\n    );\n\n    public readonly options = this._state.options;\n\n    public readonly loading = this._state.loading;\n\n    public readonly addUser = async (u) => {\n        await this._state.addContact(u);\n        notifySuccess(`Successfully added \"${u.name}\" to contacts`);\n        this.show_search = false;\n    };\n\n    public readonly removeUser = async (u) => {\n        await this._state.removeContact(u);\n        notifySuccess(`Successfully removed \"${u.name}\" from contacts`);\n    };\n\n    public readonly updateSearch = (s) => this._state.setOptions({ search: s });\n\n    @ViewChild('search_input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _state: LandingStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public newMeeting(user: User) {\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ attendees: [user] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n\n    public openSearch() {\n        this.updateSearch('');\n        this.show_search = true;\n        this.timeout('open', () => this._input_el.nativeElement.focus(), 100);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseClass, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'landing-favourites',\n    template: `\n        <div\n            class=\"flex items-center justify-between py-2 mx-2 border-b border-gray-200\"\n        >\n            <h2 class=\"mx-2\">{{ spaces?.length || 0 }} Resources</h2>\n            <!-- <div class=\"flex items-center space-x-2 text-primary\">\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>search</app-icon>\n                </button>\n                <button\n                    mat-icon-button\n                    class=\"!border !border-solid !border-primary\"\n                >\n                    <app-icon>filter_list</app-icon>\n                </button>\n            </div> -->\n        </div>\n        <div class=\"flex-1 h-1/2 w-full space-y-2 overflow-auto pt-4 divide-y divide-gray-300\">\n            <ng-container *ngIf=\"spaces?.length; else empty_state\">\n                <div\n                    class=\"flex flex-col items-center mx-2 pt-4 space-y-2 relative\"\n                    item\n                    *ngFor=\"let item of spaces\"\n                >\n                    <div class=\"flex w-full items-center space-x-2 relative\">\n                        <div class=\"w-24 h-20 overflow-hidden rounded relative\">\n                            <img\n                                *ngIf=\"(item | space | async)?.images?.length\"\n                                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 object-cover min-w-full min-h-full\"\n                                [src]=\"(item | space | async)?.images[0]\"\n                            />\n                        </div>\n                        <div class=\"h-20\">\n                            <div class=\"truncate mb-4\">\n                                {{\n                                    (item | space | async)?.display_name ||\n                                        (item | space | async)?.name\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2 mb-2\"\n                            >\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <div>\n                                    {{\n                                        (item | space | async)?.level\n                                            ?.display_name\n                                    }}\n                                </div>\n                            </div>\n                            <div\n                                class=\"flex items-center text-xs opacity-60 truncate space-x-2\"\n                            >\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <div>\n                                    {{ (item | space | async)?.capacity || 2 }}\n                                    People\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        mat-button\n                        class=\"w-full inverse\"\n                        (click)=\"newSpaceMeeting(item)\"\n                    >\n                        Book\n                    </button>\n                    <button\n                        mat-icon-button\n                        [matMenuTriggerFor]=\"menu\"\n                        class=\"absolute top-2 right-0 bg-gray-200 dark:bg-neutral-600 rounded !m-0\"\n                    >\n                        <app-icon>more_horiz</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">info</app-icon>\n                            <div>View Details</div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"toggleFavourite('space', id)\"\n                            class=\"flex items-center space-x-2\"\n                        >\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Remove Favourite</div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <img src=\"assets/icons/no-favourites.svg\" />\n                <p class=\"opacity-60 text-sm text-center\">\n                    You have no favourites hearted. To add a favourites heart a\n                    room, desk or parking space.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [user]:hover button {\n                opacity: 1;\n            }\n\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class LandingFavouritesComponent extends BaseClass {\n    public get spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _event_form: EventFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public toggleFavourite(type: 'space' | 'desk' | 'parking', id: string) {\n        const fav_list = type === 'space' ? this.spaces : [];\n        const key = type === 'space' ? 'favourite_spaces' : '';\n        const new_state = !fav_list.includes(id);\n        if (new_state) {\n            this._settings.saveUserSetting(key, [...fav_list, id]);\n        } else {\n            this._settings.saveUserSetting(\n                key,\n                fav_list.filter((_) => _ !== id)\n            );\n        }\n    }\n\n    public async newSpaceMeeting(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._event_form.newForm();\n        this._event_form.form.patchValue({ resources: [space] });\n        if (this._settings.get('app.new_features')) {\n            this._router.navigate(['/book', 'meeting']);\n        } else {\n            this._router.navigate(['/book', 'spaces']);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Booking, removeBooking } from '@placeos/bookings';\nimport { notifyError, notifySuccess, openConfirmModal } from '@placeos/common';\nimport { CalendarEvent, EventFormService, removeEvent } from '@placeos/events';\nimport { format } from 'date-fns';\nimport { LandingStateService } from './landing-state.service';\n\n@Component({\n    selector: 'landing-upcoming',\n    template: `\n        <div class=\"py-2\">\n            <div class=\"flex items-center justify-between mb-2 sm:mb-4 px-4\">\n                <div class=\"sm:text-lg font-medium\">Your Bookings</div>\n                <a\n                    button\n                    mat-button\n                    class=\"inverse hidden sm:block\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    View All\n                </a>\n                <a\n                    class=\"inverse block sm:hidden text-blue-500 underline relative top-8\"\n                    [routerLink]=\"['/your-bookings']\"\n                >\n                    View All\n                </a>\n            </div>\n            <div class=\"space-y-4 px-4\">\n                <ng-container\n                    *ngIf=\"(upcoming_events | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"\n                            let event of upcoming_events | async | slice: 0:3;\n                            trackBy: trackByFn\n                        \"\n                    >\n                        <ng-container [ngSwitch]=\"type(event)\">\n                            <event-card\n                                *ngSwitchCase=\"'event'\"\n                                [event]=\"event\"\n                                [show_day]=\"true\"\n                                (edit)=\"edit(event)\"\n                                (remove)=\"remove(event)\"\n                            ></event-card>\n                            <booking-card\n                                *ngSwitchCase=\"'booking'\"\n                                [booking]=\"event\"\n                                [show_day]=\"true\"\n                                (remove)=\"remove(event)\"\n                            ></booking-card>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"w-full p-8 flex flex-col items-center justify-center space-y-4\"\n            >\n                <img src=\"assets/img/no-events.svg\" class=\"mr-4\" />\n                <p class=\"opacity-30\">You have no upcoming bookings</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LandingUpcomingComponent implements OnInit, OnDestroy {\n    public readonly upcoming_events = this._state.upcoming_events;\n\n    public type(event: CalendarEvent | Booking) {\n        return event instanceof Booking ? 'booking' : 'event';\n    }\n\n    constructor(\n        private _state: LandingStateService,\n        private _event_form: EventFormService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit() {\n        this._state.pollUpcomingEvents();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPollingUpcomingEvents();\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n\n    public edit(event: CalendarEvent) {\n        this._router.navigate(['/book', 'meeting', 'form']);\n        this._event_form.newForm(event);\n    }\n\n    public async remove(item: CalendarEvent | Booking) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name =\n            item instanceof CalendarEvent\n                ? item.space?.display_name\n                : item.asset_name || item.asset_id;\n        const content = `Delete the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n        console\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await (item instanceof CalendarEvent ? removeEvent : removeBooking)(\n            item.id\n        ).toPromise().catch(e => {\n            notifyError(`Unable to delete booking. ${e}`);\n            resp.close();\n            throw e;\n        });\n        notifySuccess('Successfully deleted booking.');\n        resp.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { currentUser } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { startOfMinute } from 'date-fns';\n\n@Component({\n    selector: 'app-dashboard',\n    template: `\n        <topbar class=\"z-10\" *ngIf=\"!hide_nav\"></topbar>\n        <div class=\"flex flex-1 h-1/2 bg-[#F8F8FA] dark:bg-neutral-900\">\n            <div\n                class=\"relative hidden sm:flex flex-col w-[18rem] h-full overflow-hidden bg-white dark:bg-[#1F2021] border-r border-gray-200 dark:border-neutral-700\"\n            >\n                <div\n                    class=\"flex items-center divide-x divide-gray-300\"\n                >\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'people'\"\n                        [class.border-gray-300]=\"tab !== 'people'\"\n                        [class.bg-black]=\"tab !== 'people'\"\n                        [class.bg-opacity-5]=\"tab !== 'people'\"\n                        (click)=\"tab = 'people'\"\n                    >\n                        <app-icon>people</app-icon>\n                        <div>Colleages</div>\n                    </button>\n                    <button\n                        matRipple\n                        class=\"flex-1 font-medium p-2 flex items-center justify-center space-x-2\"\n                        [class.border-b]=\"tab !== 'fav'\"\n                        [class.border-gray-300]=\"tab !== 'fav'\"\n                        [class.bg-black]=\"tab !== 'fav'\"\n                        [class.bg-opacity-5]=\"tab !== 'fav'\"\n                        (click)=\"tab = 'fav'\"\n                    >\n                        <app-icon>favorite</app-icon>\n                        <div>Favourites</div>\n                    </button>\n                </div>\n                <div class=\"flex-1 w-full h-1/2\">\n                    <landing-colleagues *ngIf=\"tab === 'people'\"></landing-colleagues>\n                    <landing-favourites *ngIf=\"tab === 'fav'\"></landing-favourites>\n                </div>\n            </div>\n            <div class=\"flex-1 h-full w-1/2 sm:px-4 overflow-auto z-0\">\n                <header\n                    class=\"sticky top-0 z-50 bg-[#ECF0F3] dark:bg-zinc-800 px-4 sm:rounded-b flex items-center justify-between overflow-hidden\"\n                >\n                    <div class=\"\">\n                        <div class=\"sm:text-xl font-medium\">\n                            Hello {{ user?.name }},\n                        </div>\n                        <div date class=\"text-sm sm:text-base\">\n                            {{ date | date: 'fullDate' }}\n                        </div>\n                        <div class=\"text-sm sm:text-base\" *ngIf=\"building?.address || building?.name\">\n                            {{ building.address || building.display_name || building.name}}\n                        </div>\n                    </div>\n                    <div class=\"h-32 pt-4\">\n                        <img src=\"assets/img/landing.svg\" />\n                    </div>\n                </header>\n                <landing-availability></landing-availability>\n                <div\n                    class=\"mx-4 w-[calc(100%-2rem)] h-px bg-gray-300 mb-2\"\n                ></div>\n                <landing-upcoming></landing-upcoming>\n            </div>\n        </div>\n        <footer-menu *ngIf=\"!hide_nav\"></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n\n            main {\n                min-height: 50%;\n            }\n        `,\n    ],\n})\nexport class LandingComponent {\n    public time: number;\n    public tab = 'people';\n\n    public get hide_nav() {\n        return localStorage.getItem('PlaceOS.hide_nav') === 'true';\n    }\n\n    public get date() {\n        return startOfMinute(this.time || Date.now());\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { SharedComponentModule } from \"../components/shared.module\";\nimport { LandingAvailabilityComponent } from \"./landing-availability.component\";\nimport { LandingColleaguesComponent } from \"./landing-colleagues.component\";\nimport { LandingFavouritesComponent } from \"./landing-favourites.component\";\nimport { LandingUpcomingComponent } from \"./landing-upcoming.component\";\nimport { LandingComponent } from \"./landing.component\";\n\nconst COMPONENTS = [\n    LandingComponent,\n    LandingColleaguesComponent,\n    LandingAvailabilityComponent,\n    LandingUpcomingComponent,\n    LandingFavouritesComponent\n]\n\nconst ROUTES = [\n    { path: '', component: LandingComponent }\n]\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES)\n    ]\n})\nexport class AppLandingModule {}\n"],"x_google_ignoreList":[]}