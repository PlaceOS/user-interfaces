{
    "version": 1,
    "projects": {
        "booking-panel": {
            "projectType": "application",
            "root": "apps/booking-panel",
            "sourceRoot": "apps/booking-panel/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "baseHref": ".",
                        "outputPath": "dist/apps/booking-panel",
                        "index": "apps/booking-panel/src/index.html",
                        "main": "apps/booking-panel/src/main.ts",
                        "polyfills": "apps/booking-panel/src/polyfills.ts",
                        "tsConfig": "apps/booking-panel/tsconfig.app.json",
                        "fileReplacements": [
                            {
                                "replace": "libs/common/src/lib/settings.ts",
                                "with": "apps/booking-panel/src/environments/settings.ts"
                            }
                        ],
                        "assets": [
                            "apps/booking-panel/src/favicon.ico",
                            "apps/booking-panel/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/booking-panel/src/manifest.webmanifest"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/booking-panel/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "scripts": [],
                        "vendorChunk": true,
                        "extractLicenses": false,
                        "buildOptimizer": false,
                        "sourceMap": true,
                        "optimization": false,
                        "namedChunks": true
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/booking-panel/src/environments/environment.ts",
                                    "with": "apps/booking-panel/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/booking-panel/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/booking-panel/ngsw-config.json"
                        },
                        "production": {
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/booking-panel/src/environments/environment.ts",
                                    "with": "apps/booking-panel/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/booking-panel/src/environments/settings.ts"
                                }
                            ],
                            "optimization": true,
                            "outputHashing": "all",
                            "sourceMap": false,
                            "namedChunks": false,
                            "extractLicenses": true,
                            "vendorChunk": false,
                            "buildOptimizer": true,
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "2mb",
                                    "maximumError": "5mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "6kb",
                                    "maximumError": "10kb"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/booking-panel/ngsw-config.json"
                        }
                    }
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "options": {
                        "proxyConfig": "config/proxy.conf.js",
                        "browserTarget": "booking-panel:build"
                    },
                    "configurations": {
                        "production": {
                            "browserTarget": "booking-panel:build:production"
                        }
                    }
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "booking-panel:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/booking-panel/src/**/*.ts",
                            "apps/booking-panel/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/booking-panel"],
                    "options": {
                        "jestConfig": "apps/booking-panel/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "booking-panel-e2e": {
            "root": "apps/booking-panel-e2e",
            "sourceRoot": "apps/booking-panel-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/booking-panel-e2e/cypress.json",
                        "tsConfig": "apps/booking-panel-e2e/tsconfig.e2e.json",
                        "devServerTarget": "booking-panel:serve"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "booking-panel:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/booking-panel-e2e/**/*.{js,ts}"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                }
            },
            "tags": [],
            "implicitDependencies": ["booking-panel"]
        },
        "bookings": {
            "projectType": "library",
            "root": "libs/bookings",
            "sourceRoot": "libs/bookings/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/bookings/src/**/*.ts",
                            "libs/bookings/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/bookings"],
                    "options": {
                        "jestConfig": "libs/bookings/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "calendar": {
            "projectType": "library",
            "root": "libs/calendar",
            "sourceRoot": "libs/calendar/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/calendar/src/**/*.ts",
                            "libs/calendar/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/calendar"],
                    "options": {
                        "jestConfig": "libs/calendar/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "caterer-ui": {
            "projectType": "application",
            "root": "apps/caterer-ui",
            "sourceRoot": "apps/caterer-ui/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "baseHref": ".",
                        "outputPath": "dist/apps/caterer-ui",
                        "index": "apps/caterer-ui/src/index.html",
                        "main": "apps/caterer-ui/src/main.ts",
                        "polyfills": "apps/caterer-ui/src/polyfills.ts",
                        "tsConfig": "apps/caterer-ui/tsconfig.app.json",
                        "fileReplacements": [
                            {
                                "replace": "libs/common/src/lib/settings.ts",
                                "with": "apps/caterer-ui/src/environments/settings.ts"
                            }
                        ],
                        "assets": [
                            "apps/caterer-ui/src/favicon.ico",
                            "apps/caterer-ui/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/caterer-ui/src/manifest.webmanifest"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/caterer-ui/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "scripts": [],
                        "vendorChunk": true,
                        "extractLicenses": false,
                        "buildOptimizer": false,
                        "sourceMap": true,
                        "optimization": false,
                        "namedChunks": true
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/caterer-ui/src/environments/environment.ts",
                                    "with": "apps/caterer-ui/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/caterer-ui/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/caterer-ui/ngsw-config.json"
                        },
                        "production": {
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/caterer-ui/src/environments/environment.ts",
                                    "with": "apps/caterer-ui/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/caterer-ui/src/environments/settings.ts"
                                }
                            ],
                            "optimization": true,
                            "outputHashing": "all",
                            "sourceMap": false,
                            "namedChunks": false,
                            "extractLicenses": true,
                            "vendorChunk": false,
                            "buildOptimizer": true,
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "2mb",
                                    "maximumError": "5mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "6kb",
                                    "maximumError": "10kb"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/caterer-ui/ngsw-config.json"
                        }
                    }
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "options": {
                        "proxyConfig": "config/proxy.conf.js",
                        "browserTarget": "caterer-ui:build"
                    },
                    "configurations": {
                        "production": {
                            "browserTarget": "caterer-ui:build:production"
                        }
                    }
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "caterer-ui:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/caterer-ui/src/**/*.ts",
                            "apps/caterer-ui/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/caterer-ui"],
                    "options": {
                        "jestConfig": "apps/caterer-ui/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "caterer-ui-e2e": {
            "root": "apps/caterer-ui-e2e",
            "sourceRoot": "apps/caterer-ui-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/caterer-ui-e2e/cypress.json",
                        "tsConfig": "apps/caterer-ui-e2e/tsconfig.e2e.json",
                        "devServerTarget": "caterer-ui:serve"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "caterer-ui:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": ["apps/caterer-ui-e2e/**/*.{js,ts}"]
                    },
                    "outputs": ["{options.outputFile}"]
                }
            },
            "tags": [],
            "implicitDependencies": ["caterer-ui"]
        },
        "catering": {
            "projectType": "library",
            "root": "libs/catering",
            "sourceRoot": "libs/catering/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/catering/src/**/*.ts",
                            "libs/catering/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/catering"],
                    "options": {
                        "jestConfig": "libs/catering/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "common": {
            "projectType": "library",
            "root": "libs/common",
            "sourceRoot": "libs/common/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/common/src/**/*.ts",
                            "libs/common/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/common"],
                    "options": {
                        "jestConfig": "libs/common/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "components": {
            "projectType": "library",
            "root": "libs/components",
            "sourceRoot": "libs/components/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/components/src/**/*.ts",
                            "libs/components/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/components"],
                    "options": {
                        "jestConfig": "libs/components/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "concierge": {
            "projectType": "application",
            "root": "apps/concierge",
            "sourceRoot": "apps/concierge/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "baseHref": ".",
                        "outputPath": "dist/apps/concierge",
                        "index": "apps/concierge/src/index.html",
                        "main": "apps/concierge/src/main.ts",
                        "polyfills": "apps/concierge/src/polyfills.ts",
                        "tsConfig": "apps/concierge/tsconfig.app.json",
                        "fileReplacements": [
                            {
                                "replace": "libs/common/src/lib/settings.ts",
                                "with": "apps/concierge/src/environments/settings.ts"
                            }
                        ],
                        "assets": [
                            "apps/concierge/src/favicon.ico",
                            "apps/concierge/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/concierge/src/manifest.webmanifest"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/concierge/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "scripts": [],
                        "vendorChunk": true,
                        "extractLicenses": false,
                        "buildOptimizer": false,
                        "sourceMap": true,
                        "optimization": false,
                        "namedChunks": true
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/concierge/src/environments/environment.ts",
                                    "with": "apps/concierge/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/concierge/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/concierge/ngsw-config.json"
                        },
                        "production": {
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/concierge/src/environments/environment.ts",
                                    "with": "apps/concierge/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/concierge/src/environments/settings.ts"
                                }
                            ],
                            "optimization": true,
                            "outputHashing": "all",
                            "sourceMap": false,
                            "namedChunks": false,
                            "extractLicenses": true,
                            "vendorChunk": false,
                            "buildOptimizer": true,
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "2mb",
                                    "maximumError": "5mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "6kb",
                                    "maximumError": "10kb"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/concierge/ngsw-config.json"
                        }
                    }
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "options": {
                        "proxyConfig": "config/proxy.conf.js",
                        "browserTarget": "concierge:build"
                    },
                    "configurations": {
                        "production": {
                            "browserTarget": "concierge:build:production"
                        }
                    }
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "concierge:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/concierge/src/**/*.ts",
                            "apps/concierge/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/concierge"],
                    "options": {
                        "jestConfig": "apps/concierge/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "concierge-e2e": {
            "root": "apps/concierge-e2e",
            "sourceRoot": "apps/concierge-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/concierge-e2e/cypress.json",
                        "tsConfig": "apps/concierge-e2e/tsconfig.e2e.json",
                        "devServerTarget": "concierge:serve"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "concierge:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": ["apps/concierge-e2e/**/*.{js,ts}"]
                    },
                    "outputs": ["{options.outputFile}"]
                }
            },
            "tags": [],
            "implicitDependencies": ["concierge"]
        },
        "control": {
            "projectType": "application",
            "root": "apps/control",
            "sourceRoot": "apps/control/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "baseHref": ".",
                        "outputPath": "dist/apps/control",
                        "index": "apps/control/src/index.html",
                        "main": "apps/control/src/main.ts",
                        "polyfills": "apps/control/src/polyfills.ts",
                        "tsConfig": "apps/control/tsconfig.app.json",
                        "fileReplacements": [
                            {
                                "replace": "libs/common/src/lib/settings.ts",
                                "with": "apps/control/src/environments/settings.ts"
                            }
                        ],
                        "assets": [
                            "apps/control/src/favicon.ico",
                            "apps/control/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/control/src/manifest.webmanifest"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/control/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "scripts": [],
                        "vendorChunk": true,
                        "extractLicenses": false,
                        "buildOptimizer": false,
                        "sourceMap": true,
                        "optimization": false,
                        "namedChunks": true
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/control/src/environments/environment.ts",
                                    "with": "apps/control/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/control/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/control/ngsw-config.json"
                        },
                        "production": {
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/control/src/environments/environment.ts",
                                    "with": "apps/control/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/control/src/environments/settings.ts"
                                }
                            ],
                            "optimization": true,
                            "outputHashing": "all",
                            "sourceMap": false,
                            "namedChunks": false,
                            "extractLicenses": true,
                            "vendorChunk": false,
                            "buildOptimizer": true,
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "2mb",
                                    "maximumError": "5mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "6kb",
                                    "maximumError": "10kb"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/control/ngsw-config.json"
                        }
                    }
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "options": {
                        "proxyConfig": "config/proxy.conf.js",
                        "browserTarget": "control:build"
                    },
                    "configurations": {
                        "production": {
                            "browserTarget": "control:build:production"
                        }
                    }
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "control:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/control/src/**/*.ts",
                            "apps/control/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/control"],
                    "options": {
                        "jestConfig": "apps/control/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "control-e2e": {
            "root": "apps/control-e2e",
            "sourceRoot": "apps/control-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/control-e2e/cypress.json",
                        "tsConfig": "apps/control-e2e/tsconfig.e2e.json",
                        "devServerTarget": "control:serve"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "control:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": ["apps/control-e2e/**/*.{js,ts}"]
                    },
                    "outputs": ["{options.outputFile}"]
                }
            },
            "tags": [],
            "implicitDependencies": ["control"]
        },
        "enrolment": {
            "projectType": "application",
            "root": "apps/enrolment",
            "sourceRoot": "apps/enrolment/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "outputs": ["{options.outputPath}"],
                    "options": {
                        "outputPath": "dist/apps/enrolment",
                        "index": "apps/enrolment/src/index.html",
                        "main": "apps/enrolment/src/main.ts",
                        "polyfills": "apps/enrolment/src/polyfills.ts",
                        "tsConfig": "apps/enrolment/tsconfig.app.json",
                        "baseHref": ".",
                        "assets": [
                            "apps/enrolment/src/favicon.ico",
                            "apps/enrolment/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/enrolment/src/manifest.webmanifest"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/enrolment/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "fileReplacements": [
                            {
                                "replace": "libs/common/src/lib/settings.ts",
                                "with": "apps/enrolment/src/environments/settings.ts"
                            }
                        ],
                        "scripts": [],
                        "serviceWorker": true,
                        "ngswConfigPath": "apps/enrolment/ngsw-config.json"
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/enrolment/src/environments/environment.ts",
                                    "with": "apps/enrolment/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/enrolment/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/enrolment/ngsw-config.json"
                        },
                        "production": {
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "500kb",
                                    "maximumError": "1mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "2kb",
                                    "maximumError": "4kb"
                                }
                            ],
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/enrolment/src/environments/environment.ts",
                                    "with": "apps/enrolment/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/enrolment/src/environments/settings.ts"
                                }
                            ],
                            "outputHashing": "all"
                        },
                        "development": {
                            "buildOptimizer": false,
                            "optimization": false,
                            "vendorChunk": true,
                            "extractLicenses": false,
                            "sourceMap": true,
                            "namedChunks": true
                        }
                    },
                    "defaultConfiguration": "production"
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "configurations": {
                        "production": {
                            "browserTarget": "enrolment:build:production"
                        },
                        "development": {
                            "browserTarget": "enrolment:build:development"
                        }
                    },
                    "defaultConfiguration": "development"
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "enrolment:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/enrolment/src/**/*.ts",
                            "apps/enrolment/src/**/*.html"
                        ]
                    }
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/enrolment"],
                    "options": {
                        "jestConfig": "apps/enrolment/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "enrolment-e2e": {
            "root": "apps/enrolment-e2e",
            "sourceRoot": "apps/enrolment-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/enrolment-e2e/cypress.json",
                        "devServerTarget": "enrolment:serve:development",
                        "tsConfig": "apps/enrolment-e2e/tsconfig.json"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "enrolment:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "outputs": ["{options.outputFile}"],
                    "options": {
                        "lintFilePatterns": ["apps/enrolment-e2e/**/*.{js,ts}"]
                    }
                }
            },
            "tags": [],
            "implicitDependencies": ["enrolment"]
        },
        "events": {
            "projectType": "library",
            "root": "libs/events",
            "sourceRoot": "libs/events/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/events/src/**/*.ts",
                            "libs/events/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/events"],
                    "options": {
                        "jestConfig": "libs/events/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "explore": {
            "projectType": "library",
            "root": "libs/explore",
            "sourceRoot": "libs/explore/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/explore/src/**/*.ts",
                            "libs/explore/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/explore"],
                    "options": {
                        "jestConfig": "libs/explore/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "form-fields": {
            "projectType": "library",
            "root": "libs/form-fields",
            "sourceRoot": "libs/form-fields/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/form-fields/src/**/*.ts",
                            "libs/form-fields/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/form-fields"],
                    "options": {
                        "jestConfig": "libs/form-fields/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "map-kiosk": {
            "projectType": "application",
            "root": "apps/map-kiosk",
            "sourceRoot": "apps/map-kiosk/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "baseHref": ".",
                        "outputPath": "dist/apps/map-kiosk",
                        "index": "apps/map-kiosk/src/index.html",
                        "main": "apps/map-kiosk/src/main.ts",
                        "polyfills": "apps/map-kiosk/src/polyfills.ts",
                        "tsConfig": "apps/map-kiosk/tsconfig.app.json",
                        "fileReplacements": [
                            {
                                "replace": "libs/common/src/lib/settings.ts",
                                "with": "apps/map-kiosk/src/environments/settings.ts"
                            }
                        ],
                        "assets": [
                            "apps/map-kiosk/src/favicon.ico",
                            "apps/map-kiosk/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/map-kiosk/src/manifest.webmanifest"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/map-kiosk/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "scripts": [],
                        "vendorChunk": true,
                        "extractLicenses": false,
                        "buildOptimizer": false,
                        "sourceMap": true,
                        "optimization": false,
                        "namedChunks": true
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/map-kiosk/src/environments/environment.ts",
                                    "with": "apps/map-kiosk/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/map-kiosk/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/map-kiosk/ngsw-config.json"
                        },
                        "production": {
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/map-kiosk/src/environments/environment.ts",
                                    "with": "apps/map-kiosk/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/map-kiosk/src/environments/settings.ts"
                                }
                            ],
                            "optimization": true,
                            "outputHashing": "all",
                            "sourceMap": false,
                            "namedChunks": false,
                            "extractLicenses": true,
                            "vendorChunk": false,
                            "buildOptimizer": true,
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "2mb",
                                    "maximumError": "5mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "6kb",
                                    "maximumError": "10kb"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/map-kiosk/ngsw-config.json"
                        }
                    }
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "options": {
                        "proxyConfig": "config/proxy.conf.js",
                        "browserTarget": "map-kiosk:build"
                    },
                    "configurations": {
                        "production": {
                            "browserTarget": "map-kiosk:build:production"
                        }
                    }
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "map-kiosk:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/map-kiosk/src/**/*.ts",
                            "apps/map-kiosk/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/map-kiosk"],
                    "options": {
                        "jestConfig": "apps/map-kiosk/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "map-kiosk-e2e": {
            "root": "apps/map-kiosk-e2e",
            "sourceRoot": "apps/map-kiosk-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/map-kiosk-e2e/cypress.json",
                        "tsConfig": "apps/map-kiosk-e2e/tsconfig.e2e.json",
                        "devServerTarget": "map-kiosk:serve"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "map-kiosk:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": ["apps/map-kiosk-e2e/**/*.{js,ts}"]
                    },
                    "outputs": ["{options.outputFile}"]
                }
            },
            "tags": [],
            "implicitDependencies": ["map-kiosk"]
        },
        "mocks": {
            "projectType": "library",
            "root": "libs/mocks",
            "sourceRoot": "libs/mocks/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/mocks/src/**/*.ts",
                            "libs/mocks/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/mocks"],
                    "options": {
                        "jestConfig": "libs/mocks/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "organisation": {
            "projectType": "library",
            "root": "libs/organisation",
            "sourceRoot": "libs/organisation/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/organisation/src/**/*.ts",
                            "libs/organisation/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/organisation"],
                    "options": {
                        "jestConfig": "libs/organisation/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "outlook-rooms-addin": {
            "projectType": "application",
            "root": "apps/outlook-rooms-addin",
            "sourceRoot": "apps/outlook-rooms-addin/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "baseHref": ".",
                        "outputPath": "dist/apps/outlook-rooms-addin",
                        "index": "apps/outlook-rooms-addin/src/index.html",
                        "main": "apps/outlook-rooms-addin/src/main.ts",
                        "polyfills": "apps/outlook-rooms-addin/src/polyfills.ts",
                        "tsConfig": "apps/outlook-rooms-addin/tsconfig.app.json",
                        "fileReplacements": [
                            {
                                "replace": "libs/common/src/lib/settings.ts",
                                "with": "apps/outlook-rooms-addin/src/environments/settings.ts"
                            }
                        ],
                        "assets": [
                            "apps/outlook-rooms-addin/src/favicon.ico",
                            "apps/outlook-rooms-addin/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/outlook-rooms-addin/src/manifest.webmanifest",
                            {
                                "glob": "manifest.xml",
                                "input": "apps/outlook-rooms-addin/",
                                "output": "/"
                            }
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/outlook-rooms-addin/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "scripts": [],
                        "vendorChunk": true,
                        "extractLicenses": false,
                        "buildOptimizer": false,
                        "sourceMap": true,
                        "optimization": false,
                        "namedChunks": true
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/outlook-rooms-addin/src/environments/environment.ts",
                                    "with": "apps/outlook-rooms-addin/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/outlook-rooms-addin/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/outlook-rooms-addin/ngsw-config.json"
                        },
                        "production": {
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/outlook-rooms-addin/src/environments/environment.ts",
                                    "with": "apps/outlook-rooms-addin/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/outlook-rooms-addin/src/environments/settings.ts"
                                }
                            ],
                            "optimization": true,
                            "outputHashing": "all",
                            "sourceMap": false,
                            "namedChunks": false,
                            "extractLicenses": true,
                            "vendorChunk": false,
                            "buildOptimizer": true,
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "2mb",
                                    "maximumError": "5mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "6kb",
                                    "maximumError": "10kb"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/outlook-rooms-addin/ngsw-config.json"
                        }
                    }
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "options": {
                        "proxyConfig": "config/proxy.conf.js",
                        "browserTarget": "outlook-rooms-addin:build",
                        "ssl": true
                    },
                    "configurations": {
                        "production": {
                            "browserTarget": "outlook-rooms-addin:build:production"
                        },
                        "development": {
                            "browserTarget": "outlook-rooms-addin:build:development"
                        }
                    }
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "outlook-rooms-addin:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/outlook-rooms-addin/src/**/*.ts",
                            "apps/outlook-rooms-addin/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/outlook-rooms-addin"],
                    "options": {
                        "jestConfig": "apps/outlook-rooms-addin/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "outlook-rooms-addin-e2e": {
            "root": "apps/outlook-rooms-addin-e2e",
            "sourceRoot": "apps/outlook-rooms-addin-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/outlook-rooms-addin-e2e/cypress.json",
                        "devServerTarget": "outlook-rooms-addin:serve",
                        "tsConfig": "apps/outlook-rooms-addin-e2e/tsconfig.json"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "outlook-rooms-addin:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/outlook-rooms-addin-e2e/**/*.{js,ts}"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                }
            },
            "tags": [],
            "implicitDependencies": ["outlook-rooms-addin"]
        },
        "spaces": {
            "projectType": "library",
            "root": "libs/spaces",
            "sourceRoot": "libs/spaces/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/spaces/src/**/*.ts",
                            "libs/spaces/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/spaces"],
                    "options": {
                        "jestConfig": "libs/spaces/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "timetable": {
            "projectType": "application",
            "root": "apps/timetable",
            "sourceRoot": "apps/timetable/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "outputs": ["{options.outputPath}"],
                    "options": {
                        "outputPath": "dist/apps/timetable",
                        "index": "apps/timetable/src/index.html",
                        "main": "apps/timetable/src/main.ts",
                        "polyfills": "apps/timetable/src/polyfills.ts",
                        "tsConfig": "apps/timetable/tsconfig.app.json",
                        "baseHref": ".",
                        "assets": [
                            "apps/timetable/src/favicon.ico",
                            "apps/timetable/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/timetable/src/manifest.webmanifest"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/timetable/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "scripts": [],
                        "serviceWorker": true,
                        "ngswConfigPath": "apps/timetable/ngsw-config.json"
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/timetable/src/environments/environment.ts",
                                    "with": "apps/timetable/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/timetable/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/timetable/ngsw-config.json"
                        },
                        "production": {
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "500kb",
                                    "maximumError": "1mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "2kb",
                                    "maximumError": "4kb"
                                }
                            ],
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/timetable/src/environments/environment.ts",
                                    "with": "apps/timetable/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/timetable/src/environments/settings.ts"
                                }
                            ],
                            "outputHashing": "all"
                        },
                        "development": {
                            "buildOptimizer": false,
                            "optimization": false,
                            "vendorChunk": true,
                            "extractLicenses": false,
                            "sourceMap": true,
                            "namedChunks": true
                        }
                    },
                    "defaultConfiguration": "production"
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "configurations": {
                        "production": {
                            "browserTarget": "timetable:build:production"
                        },
                        "development": {
                            "browserTarget": "timetable:build:development"
                        }
                    },
                    "defaultConfiguration": "development"
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "timetable:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/timetable/src/**/*.ts",
                            "apps/timetable/src/**/*.html"
                        ]
                    }
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/timetable"],
                    "options": {
                        "jestConfig": "apps/timetable/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "timetable-e2e": {
            "root": "apps/timetable-e2e",
            "sourceRoot": "apps/timetable-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/timetable-e2e/cypress.json",
                        "devServerTarget": "timetable:serve:development",
                        "tsConfig": "apps/timetable-e2e/tsconfig.json"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "timetable:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "outputs": ["{options.outputFile}"],
                    "options": {
                        "lintFilePatterns": ["apps/timetable-e2e/**/*.{js,ts}"]
                    }
                }
            },
            "tags": [],
            "implicitDependencies": ["timetable"]
        },
        "users": {
            "projectType": "library",
            "root": "libs/users",
            "sourceRoot": "libs/users/src",
            "prefix": "placeos",
            "architect": {
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "libs/users/src/**/*.ts",
                            "libs/users/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/libs/users"],
                    "options": {
                        "jestConfig": "libs/users/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "visitor-kiosk": {
            "projectType": "application",
            "root": "apps/visitor-kiosk",
            "sourceRoot": "apps/visitor-kiosk/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "baseHref": ".",
                        "outputPath": "dist/apps/visitor-kiosk",
                        "index": "apps/visitor-kiosk/src/index.html",
                        "main": "apps/visitor-kiosk/src/main.ts",
                        "polyfills": "apps/visitor-kiosk/src/polyfills.ts",
                        "tsConfig": "apps/visitor-kiosk/tsconfig.app.json",
                        "fileReplacements": [
                            {
                                "replace": "libs/common/src/lib/settings.ts",
                                "with": "apps/visitor-kiosk/src/environments/settings.ts"
                            }
                        ],
                        "assets": [
                            "apps/visitor-kiosk/src/favicon.ico",
                            "apps/visitor-kiosk/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/visitor-kiosk/src/manifest.webmanifest"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/visitor-kiosk/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "scripts": [],
                        "vendorChunk": true,
                        "extractLicenses": false,
                        "buildOptimizer": false,
                        "sourceMap": true,
                        "optimization": false,
                        "namedChunks": true
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/workplace/src/environments/environment.ts",
                                    "with": "apps/visitor-kiosk/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/visitor-kiosk/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/visitor-kiosk/ngsw-config.json"
                        },
                        "production": {
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/visitor-kiosk/src/environments/environment.ts",
                                    "with": "apps/visitor-kiosk/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/visitor-kiosk/src/environments/settings.ts"
                                }
                            ],
                            "optimization": true,
                            "outputHashing": "all",
                            "sourceMap": false,
                            "namedChunks": false,
                            "extractLicenses": true,
                            "vendorChunk": false,
                            "buildOptimizer": true,
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "2mb",
                                    "maximumError": "5mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "6kb",
                                    "maximumError": "10kb"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/visitor-kiosk/ngsw-config.json"
                        }
                    }
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "options": {
                        "proxyConfig": "config/proxy.conf.js",
                        "browserTarget": "visitor-kiosk:build"
                    },
                    "configurations": {
                        "production": {
                            "browserTarget": "visitor-kiosk:build:production"
                        }
                    }
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "visitor-kiosk:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/visitor-kiosk/src/**/*.ts",
                            "apps/visitor-kiosk/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/visitor-kiosk"],
                    "options": {
                        "jestConfig": "apps/visitor-kiosk/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "visitor-kiosk-e2e": {
            "root": "apps/visitor-kiosk-e2e",
            "sourceRoot": "apps/visitor-kiosk-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/visitor-kiosk-e2e/cypress.json",
                        "tsConfig": "apps/visitor-kiosk-e2e/tsconfig.e2e.json",
                        "devServerTarget": "visitor-kiosk:serve"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "visitor-kiosk:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/visitor-kiosk-e2e/**/*.{js,ts}"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                }
            },
            "tags": [],
            "implicitDependencies": ["visitor-kiosk"]
        },
        "workplace": {
            "projectType": "application",
            "root": "apps/workplace",
            "sourceRoot": "apps/workplace/src",
            "prefix": "placeos",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "baseHref": ".",
                        "outputPath": "dist/apps/workplace",
                        "index": "apps/workplace/src/index.html",
                        "main": "apps/workplace/src/main.ts",
                        "polyfills": "apps/workplace/src/polyfills.ts",
                        "tsConfig": "apps/workplace/tsconfig.app.json",
                        "fileReplacements": [
                            {
                                "replace": "libs/common/src/lib/settings.ts",
                                "with": "apps/workplace/src/environments/settings.ts"
                            }
                        ],
                        "assets": [
                            "apps/workplace/src/favicon.ico",
                            "apps/workplace/src/assets",
                            {
                                "glob": "**",
                                "input": "shared/assets",
                                "output": "/assets/"
                            },
                            {
                                "glob": "oauth-resp.html",
                                "input": "node_modules/@placeos/ts-client/dist/",
                                "output": "/"
                            },
                            "apps/workplace/src/manifest.webmanifest"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "apps/workplace/src/styles.css",
                            "shared/styles/application.scss",
                            "shared/styles/custom-element.scss",
                            "shared/styles/native-element.scss",
                            "shared/styles/utility.scss"
                        ],
                        "scripts": [],
                        "vendorChunk": true,
                        "extractLicenses": false,
                        "buildOptimizer": false,
                        "sourceMap": true,
                        "optimization": false,
                        "namedChunks": true
                    },
                    "configurations": {
                        "staging": {
                            "optimization": true,
                            "buildOptimizer": true,
                            "fileReplacements": [
                                {
                                    "replace": "apps/workplace/src/environments/environment.ts",
                                    "with": "apps/workplace/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/workplace/src/environments/settings.ts"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/workplace/ngsw-config.json"
                        },
                        "production": {
                            "fileReplacements": [
                                {
                                    "replace": "libs/mocks/src/index.ts",
                                    "with": "libs/mocks/src/empty.ts"
                                },
                                {
                                    "replace": "apps/workplace/src/environments/environment.ts",
                                    "with": "apps/workplace/src/environments/environment.prod.ts"
                                },
                                {
                                    "replace": "libs/common/src/lib/settings.ts",
                                    "with": "apps/workplace/src/environments/settings.ts"
                                }
                            ],
                            "optimization": true,
                            "outputHashing": "all",
                            "sourceMap": false,
                            "namedChunks": false,
                            "extractLicenses": true,
                            "vendorChunk": false,
                            "buildOptimizer": true,
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "2mb",
                                    "maximumError": "5mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "6kb",
                                    "maximumError": "10kb"
                                }
                            ],
                            "serviceWorker": true,
                            "ngswConfigPath": "apps/workplace/ngsw-config.json"
                        }
                    }
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "options": {
                        "proxyConfig": "config/proxy.conf.js",
                        "browserTarget": "workplace:build"
                    },
                    "configurations": {
                        "production": {
                            "browserTarget": "workplace:build:production"
                        }
                    }
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "workplace:build"
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": [
                            "apps/workplace/src/**/*.ts",
                            "apps/workplace/src/**/*.html"
                        ]
                    },
                    "outputs": ["{options.outputFile}"]
                },
                "test": {
                    "builder": "@nrwl/jest:jest",
                    "outputs": ["coverage/apps/workplace"],
                    "options": {
                        "jestConfig": "apps/workplace/jest.config.ts",
                        "passWithNoTests": true
                    }
                }
            },
            "tags": []
        },
        "workplace-e2e": {
            "root": "apps/workplace-e2e",
            "sourceRoot": "apps/workplace-e2e/src",
            "projectType": "application",
            "architect": {
                "e2e": {
                    "builder": "@nrwl/cypress:cypress",
                    "options": {
                        "cypressConfig": "apps/workplace-e2e/cypress.json",
                        "tsConfig": "apps/workplace-e2e/tsconfig.e2e.json",
                        "devServerTarget": "workplace:serve"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "workplace:serve:production"
                        }
                    }
                },
                "lint": {
                    "builder": "@nrwl/linter:eslint",
                    "options": {
                        "lintFilePatterns": ["apps/workplace-e2e/**/*.{js,ts}"]
                    },
                    "outputs": ["{options.outputFile}"]
                }
            },
            "tags": [],
            "implicitDependencies": ["workplace"]
        }
    }
}
