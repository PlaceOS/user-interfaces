{"version":3,"file":"apps_visitor-kiosk_src_app_explore_module_ts.js","mappings":"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","names":["i0","ctx_r0","temp","ctx_r1","humidity","ExploreSensorInfoComponent","constructor","_details","this","static","t","MAP_FEATURE_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","ExploreZonesService","AsyncHandler","_state","_org","_settings","super","_statuses","_count_key","_location","_label_location","_capacity","_draw","_points","_features","_bind","combineLatest","active_building","level","pipe","filter","bld","lvl","map","_","system_id","binding","getModule","id","subscription","listen","subscribe","d","parseData","bind","init","_this","_asyncToGenerator","initialised","first","toPromise","zone_metadata","Promise","all","levels","showMetadata","zone","areas","details","area","capacity","hide_label","label_location","draw_polygon","area_count_key","properties","coordinates","geometry","length","getCenterPoint","get","updateStatus","data","value","labels","features","area_id","filled","content","count","temperature","people_count","people_count_sum","queue_size","counter","push","location","z_index","track_id","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","MapPolygonComponent","color","points","fill","opacity","setFeatures","setStyles","i1","i2","i3","Yz7","factory","ɵfac","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","resource","name","map_id","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r4","ctx_r3","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_7_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","ctx_r4","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","ctx_r8","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_0","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","_r2","ExploreDesksService","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","switchMap","catchError","of","Array","shareReplay","desk_list","debounceTime","i","j","Desk","e","tap","processBindingChange","_booking_list","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","zones","bookings","next","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","options","getValue","devices","v","at_location","signs_of_life","departments","desk","staff_name","department","processDevices","timeout","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","can_book","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","forEach","event","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","ExploreParkingService","_poll","asObservable","active_levels","l","tags","events","startOfMinute","endOfMinute","existing_event","week_events","spaces","forkJoin","s","flatten","active_spaces","available_spaces","assigned","user_name","week_availablility","availability","day","day_events","isSameDay","available","_updateParkingSpaces","interval","styles","space","zoom_level","active_level","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","ExploreSearchService","_emergency_contacts","_filter","_loading","emergency_contacts","_role_assigned_contacts","contacts","_user_search","q","search_fn","_space_search","querySystems","organisation","Space","levelWithID","_points_of_interest","listChildMetadata","building","item","metadata","points_of_interest","poi","search_results","users","roled_contacts","search","toLowerCase","results","display_name","u","roles","role","is_role","sort","a","b","localeCompare","loading","queryUsers","authority_id","authority","searchStaff","moduleFromMetadata","contacts_map","setFilter","str","providedIn","option_r8","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","tmp_0_0","ExploreSearchComponent","checkClick","_el","contains","target","show","_input_el","blur","_search","_router","_route","search_str","right_size","setItem","Object","select","onTouch","checkButtonPosition","focusInput","focus","showSearch","closeSearch","query","navigate","relativeTo","queryParams","window_width","window","innerWidth","button_rect","_button_el","getBoundingClientRect","width","viewQuery","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","_r1","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","applySetting","font_size","AccessibilityControlsComponent","n","saveUserSetting","dark_mode","can_change_dark_mode","accessible","setDarkMode","state","theme","setTheme","AccessibilityControlsComponent_div_8_Template","lvl_r13","_r15","$implicit","ctx_r14","setLevel","ExploreComponent_ng_container_13_ng_container_2_button_8_Template","_r11","value_r18","ExploreComponent_ng_container_13_ng_container_4_div_8_Template","_r16","ctx_r10","legend","ExploreComponent_ng_container_13_ng_container_2_Template","ExploreComponent_ng_container_13_ng_container_4_Template","lvl_r20","_r22","ctx_r21","ctx_r19","_r24","ctx_r23","show_levels","ExploreComponent_ng_container_17_button_10_Template","value_r26","_r28","ctx_r27","show_legend","ExploreComponent_ng_container_19_div_10_Template","_r30","ctx_r29","updateZoom","ctx_r31","updateCenter","url","tmp_1_0","tmp_2_0","locate","ExploreComponent","logo","time","hide_zones","toggleZones","enabled","disable","unique","can_search","_s","_desks","_zones","_parking","_spaces","_space_pipe","_maps","reset_delay","show_accessibility","map_url","map_styles","map_positions","map_features","map_actions","map_labels","onMouse","resetKiosk","o","use_mapsindoors$","available$","VirtualKeyboardComponent","localStorage","getItem","queryParamMap","params","has","locateSpace","showStaff","locateUser","MapPinComponent","transform","feature","locate_details","module","locations","MapLocation","indexOf","pos","MapRadiusComponent","radius","document","activeElement","closeAll","i6","i7","hostBindings","ExploreSpacesService","SpacePipe","ExploreComponent_explore_search_6_Template","ExploreComponent_ng_template_11_Template","ExploreComponent_ng_container_13_Template","ExploreComponent_ng_container_17_Template","ExploreComponent_ng_container_19_Template","ExploreComponent_i_map_32_Template","ExploreComponent_indoor_maps_34_Template","ExploreComponent_explore_zoom_controls_36_Template","tmp_3_0","ANIMATION_SHOW_CONTRACT_EXPAND","ROUTES","path","component","AppExploreModule","RouterModule","forChild","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/map-kiosk/src/app/accessibility-controls.component.ts","./apps/map-kiosk/src/app/explore.component.ts","./apps/visitor-kiosk/src/app/explore.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { combineLatest } from 'rxjs';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n    ]).pipe(\n        filter(([bld, lvl]) => !!bld && !!lvl),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const capacity =\n                zone.capacity || this._capacity[zone.area_id] || 100;\n            const count =\n                zone[\n                    this._count_key[zone.area_id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[zone.area_id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[zone.area_id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${zone.area_id}`,\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        temp: zone.temperature,\n                        humidity: zone.humidity,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => {\n                const assigned =\n                    events.find((e) => e.asset_id === _.id)?.user_name ||\n                    _.assigned_to;\n                this._users[_.id] = assigned;\n                return !assigned;\n            })\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const features = [];\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                track_id: `parking:hover:${space.map_id}`,\n                location: `${space.map_id}`,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                z_index: 20,\n                data: { ...space, user: this._users[space.id], status },\n            });\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 1.1,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, flatten, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = [\n                ...spaces\n                    .filter(\n                        (_) =>\n                            _.email.toLowerCase().includes(search) ||\n                            _.name.toLowerCase().includes(search) ||\n                            _.display_name.toLowerCase().includes(search)\n                    )\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'space',\n                        name: s.display_name || s.name,\n                        description: `Capacity: ${s.capacity} `,\n                    })),\n                ...flatten(\n                    roled_contacts.map((u) =>\n                        (u as any).roles.map(\n                            (role) =>\n                                ({\n                                    id: u.email,\n                                    type: role || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                    )\n                ).filter(\n                    (_) =>\n                        _.name.toLowerCase().includes(search) ||\n                        _.description.toLowerCase().includes(search) ||\n                        _.type.toLowerCase().includes(search)\n                ),\n                ...contacts\n                    .map(\n                        (u) =>\n                            ({\n                                id: u.email,\n                                type: (u as any).type || 'contact',\n                                is_role: true,\n                                name: u.name,\n                                description: u.email,\n                            } as any)\n                    )\n                    .filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                ...users.map((u) => ({\n                    id: u.email,\n                    type: 'user',\n                    name: u.name,\n                    description: u.email,\n                })),\n                ...features\n                    .filter((_) => _.name.toLowerCase().includes(search))\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'feature',\n                        name: s.name,\n                        description: '',\n                        zone: (s as any).zone?.id,\n                    })),\n            ];\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'accessibility-controls',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"setDarkMode(!dark_mode)\"\n        >\n            <div>Dark Mode</div>\n            <mat-slide-toggle\n                [ngModel]=\"dark_mode\"\n                (ngModelChange)=\"setDarkMode($event)\"\n            ></mat-slide-toggle>\n        </button>\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"applySetting('accessible', !accessible)\"\n        >\n            <div>Text Size</div>\n            <mat-slide-toggle\n                [ngModel]=\"accessible\"\n                (ngModelChange)=\"applySetting('accessible', $event)\"\n            ></mat-slide-toggle>\n        </button>\n        <div class=\"flex items-center px-4 space-x-4\" *ngIf=\"accessible\">\n            <span class=\"text-sm\">A</span>\n            <mat-slider\n                class=\"flex-1 w-1/2 text-[16px]\"\n                [min]=\"10\"\n                [max]=\"24\"\n                [step]=\"2\"\n            >\n                <input\n                    matSliderThumb\n                    class=\"text-[16px]\"\n                    [ngModel]=\"font_size\"\n                    (ngModelChange)=\"applySetting('font_size', $event)\"\n                />\n            </mat-slider>\n            <span class=\"text-2xl\">A</span>\n            <span\n                class=\"text-base py-1 px-2 rounded bg-base-300 text-base-content my-2\"\n            >\n                {{ font_size }}px\n            </span>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AccessibilityControlsComponent extends AsyncHandler {\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public setDarkMode(state: boolean) {\n        this.timeout(\n            'dark_mode',\n            () => {\n                const theme = this._settings.get('theme');\n                if (state && theme !== 'dark') this._settings.setTheme('dark');\n                else if (!state && theme === 'dark')\n                    this._settings.setTheme('light');\n            },\n            100\n        );\n    }\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    MapsPeopleService,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n    VirtualKeyboardComponent,\n} from '@placeos/components';\nimport {\n    ExploreDesksService,\n    ExploreParkingService,\n    ExploreSpacesService,\n    ExploreStateService,\n    ExploreZonesService,\n} from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { Point } from '@placeos/svg-viewer';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { startOfMinute } from 'date-fns';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-explore]',\n    template: `\n        <div\n            topbar\n            class=\"relative flex items-center justify-between p-4 border-b border-base-300 bg-base-100 text-base-content\"\n        >\n            <h2 class=\"text-2xl\">Place<span class=\"text-primary\">OS</span></h2>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 right-2 flex items-center\"\n            >\n                <explore-search\n                    *ngIf=\"can_search && !(use_mapsindoors$ | async)\"\n                ></explore-search>\n                <button\n                    icon\n                    matRipple\n                    customTooltip\n                    [content]=\"accessibility_controls\"\n                    class=\"bg-base-200 flex sm:hidden\"\n                >\n                    <app-icon>accessible</app-icon>\n                </button>\n                <ng-template #accessibility_controls>\n                    <div class=\"bg-base-100 rounded p-2 w-[18rem]\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <ng-container *ngIf=\"(levels | async)?.length || legend.length\">\n            <div\n                options\n                class=\"flex items-center bg-base-content text-base-100 p-2 space-x-2\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"levelMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #levelMenu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            *ngFor=\"let lvl of levels | async\"\n                            (click)=\"setLevel(lvl)\"\n                        >\n                            {{ lvl.display_name || lvl.name }}\n                        </button>\n                    </mat-menu>\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"legendMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #legendMenu=\"matMenu\">\n                        <div\n                            class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                            *ngFor=\"let value of legend\"\n                        >\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [style.background-color]=\"value.color\"\n                            ></div>\n                            <div class=\"text-left opacity-60\">\n                                {{ value.name }}\n                            </div>\n                        </div>\n                    </mat-menu>\n                </ng-container>\n            </div>\n        </ng-container>\n        <div class=\"flex flex-1 h-1/2\">\n            <div\n                sidebar\n                class=\"w-[20rem] hidden sm:block bg-base-100 text-base-content border-r border-base-300 px-2 py-4\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_levels = !show_levels\"\n                    >\n                        <app-icon class=\"text-2xl\">corporate_fare</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_levels\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_levels ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <button\n                                *ngFor=\"let lvl of levels | async\"\n                                btn\n                                matRipple\n                                class=\"clear hover:bg-base-200 hover:opacity-100 w-full\"\n                                [class.opacity-30]=\"\n                                    lvl.id !== (level | async)?.id\n                                \"\n                                (click)=\"setLevel(lvl)\"\n                            >\n                                <div class=\"text-left w-full\">\n                                    {{ lvl.display_name || lvl.name }}\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_legend = !show_legend\"\n                    >\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_legend\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_legend ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <div\n                                class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                                *ngFor=\"let value of legend\"\n                            >\n                                <div\n                                    class=\"h-3 w-3 rounded-full\"\n                                    [style.background-color]=\"value.color\"\n                                ></div>\n                                <div class=\"text-left opacity-60\">\n                                    {{ value.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <button\n                    btn\n                    matRipple\n                    class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                    (click)=\"show_accessibility = !show_accessibility\"\n                >\n                    <app-icon class=\"text-2xl\">accessible</app-icon>\n                    <div class=\"flex-1 text-left font-medium\">\n                        Accessibility\n                    </div>\n                    <app-icon class=\"text-2xl\">{{\n                        show_accessibility\n                            ? 'keyboard_arrow_up'\n                            : 'keyboard_arrow_down'\n                    }}</app-icon>\n                </button>\n                <div\n                    class=\"px-8\"\n                    [@show]=\"show_accessibility ? 'show' : 'hide'\"\n                >\n                    <div class=\" py-4 space-y-2\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </div>\n                <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n            </div>\n            <div class=\"relative flex-1 h-full\">\n                <i-map\n                    *ngIf=\"!(use_mapsindoors$ | async)\"\n                    [src]=\"url | async\"\n                    [zoom]=\"(positions | async)?.zoom\"\n                    [center]=\"(positions | async)?.center\"\n                    (zoomChange)=\"updateZoom($event)\"\n                    (centerChange)=\"updateCenter($event)\"\n                    [styles]=\"styles | async\"\n                    [features]=\"features | async\"\n                    [actions]=\"actions | async\"\n                    [labels]=\"labels | async\"\n                ></i-map>\n                <indoor-maps\n                    *ngIf=\"use_mapsindoors$ | async\"\n                    [styles]=\"styles | async\"\n                    [actions]=\"actions | async\"\n                    [locate]=\"locate\"\n                ></indoor-maps>\n                <explore-zoom-controls\n                    *ngIf=\"!(use_mapsindoors$ | async)\"\n                    class=\"absolute bottom-2 sm:bottom-auto sm:top-1/2 transform -translate-y-1/2 right-0\"\n                ></explore-zoom-controls>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: var(--b2);\n            }\n\n            hr {\n                margin-top: 0.5rem !important;\n                margin-bottom: 0.5rem !important;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        SpacePipe,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    public show_levels: boolean = true;\n    public show_legend: boolean = false;\n    public show_accessibility: boolean = false;\n    public legend = [\n        { id: 'free', name: 'Space Available', color: '#43a047' },\n        { id: 'busy', name: 'Space In Use', color: '#e53935' },\n        { id: 'pending', name: 'Space Pending', color: '#ffb300' },\n        { id: 'not-bookable', name: 'Space Not-bookable', color: '#ccc' },\n    ];\n    public readonly levels = this._org.active_levels;\n    public readonly level = this._state.level;\n\n    /** Application logo to display */\n    public get logo() {\n        return this._settings.get('theme') === 'dark'\n            ? this._settings.get('app.logo_dark')\n            : this._settings.get('app.logo_light');\n    }\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get hide_zones() {\n        return this._settings.get('app.hide_zones');\n    }\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public locate = '';\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    public get can_search() {\n        return !!this._settings.get('app.explore.search_enabled');\n    }\n\n    public readonly use_mapsindoors$ = this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this._desks.setOptions({ custom: true });\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        this.resetKiosk();\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.subscription(\n            'level',\n            this._state.level.subscribe(() =>\n                this.timeout('update_location', () => {\n                    this._state.setFeatures('_located', []);\n                })\n            )\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('feature')) {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('feature'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else if (params.has('locate')) {\n                    this.locate = params.get('locate');\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    public resetKiosk() {\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { SharedComponentsModule } from './components/shared-components.module';\n\nimport { ExploreComponent } from 'apps/map-kiosk/src/app/explore.component';\nimport { ExploreLevelSelectComponent } from 'apps/map-kiosk/src/app/explore-level-select.component';\nimport { AccessibilityControlsComponent } from 'apps/map-kiosk/src/app/accessibility-controls.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        ExploreLevelSelectComponent,\n        AccessibilityControlsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}