{"version":3,"file":"apps_visitor-kiosk_src_app_explore_module_ts.js","mappings":"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","names":["i0","ctx_r2","temp","ctx_r3","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","ctx_r0","shown_id","ExploreSensorInfoComponent","AsyncHandler","show","this","_details","id","value","timeout","constructor","super","static","t","MAP_FEATURE_DATA","core","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","ExploreSensorInfoComponent_ng_template_3_Template","_r1","ExploreZonesService","_state","_org","_settings","_area_list","_statuses","_count_key","_location","_label_location","_capacity","_draw","_points","_features","_polygons$","BehaviorSubject","_bind","combineLatest","active_building","level","options","pipe","filter","bld","lvl","is_public","map","_","system_id","binding","bind_areas","getModule","bind_zone","zones","listen","debounceTime","a","z","location","subscription","subscribe","l","parseData","bind","init","_this","_asyncToGenerator","initialised","first","toPromise","zone_metadata","Promise","all","levels","showMetadata","zone","areas","details","area","capacity","hide_label","label_location","draw_polygon","area_count_key","properties","coordinates","geometry","length","getCenterPoint","get","push","map_id","setFeatures","track_id","x","y","content","MapCanvasComponent","data","polygons$","draw_points","draw_labels","updateStatus","labels","area_id","filled","at_location","count","temperature","people_count","people_count_sum","queue_size","counter","z_index","setLabels","style_map","colours","polygons","zone_id","colour","DEFAULT_COLOURS","name","points","color","fill","opacity","next","setStyles","i1","i2","i3","Yz7","factory","ɵfac","diff","reduce","m","x_min","x_max","y_min","y_max","ctx_r1","resource","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r4","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_7_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","ctx_r4","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","ctx_r8","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_0","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","_r2","ExploreDesksService","_bookings","_dialog","_in_use","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","switchMap","catchError","of","Array","shareReplay","desk_list","i","j","Desk","e","tap","d","processBindingChange","_booking_list","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","bookings","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","getValue","devices","v","signs_of_life","departments","desk","staff_name","department","processDevices","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","can_book","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","forEach","event","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","ExploreParkingService","_poll","asObservable","active_levels","tags","events","__","startOfMinute","endOfMinute","existing_event","week_events","spaces","forkJoin","s","flatten","active_spaces","available_spaces","assigned","user_name","week_availablility","availability","day","day_events","isSameDay","available","_updateParkingSpaces","interval","styles","space","zoom_level","active_level","ExploreSearchService","_maps_people","_emergency_contacts","_filter","_loading","emergency_contacts","_role_assigned_contacts","contacts","_user_search","q","search_fn","_space_search","querySystems","organisation","Space","levelWithID","_maps_people_search","available$","mapsindoors","services","LocationsService","getLocations","externalId","roomId","floorName","_points_of_interest","listChildMetadata","building","item","metadata","points_of_interest","poi","search_results","users","roled_contacts","mapspeople_items","search","toLowerCase","results","display_name","u","roles","role","is_role","sort","b","localeCompare","loading","queryUsers","authority_id","authority","searchStaff","moduleFromMetadata","contacts_map","setFilter","str","providedIn","option_r8","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","tmp_0_0","ExploreSearchComponent","checkClick","_el","contains","target","_input_el","blur","_search","_router","_route","search_str","right_size","setItem","Object","select","onTouch","checkButtonPosition","focusInput","focus","showSearch","closeSearch","query","navigate","relativeTo","queryParams","window_width","window","innerWidth","button_rect","_button_el","getBoundingClientRect","width","viewQuery","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","applySetting","font_size","AccessibilityControlsComponent","n","saveUserSetting","dark_mode","can_change_dark_mode","accessible","setDarkMode","state","theme","setTheme","AccessibilityControlsComponent_div_8_Template","lvl_r10","_r12","$implicit","ctx_r11","setLevel","ExploreComponent_ng_container_12_ng_container_2_button_8_Template","_r8","value_r15","ExploreComponent_ng_container_12_ng_container_4_div_8_Template","_r13","legend","ExploreComponent_ng_container_12_ng_container_2_Template","ExploreComponent_ng_container_12_ng_container_4_Template","lvl_r17","_r19","ctx_r18","ctx_r16","_r21","ctx_r20","show_levels","ExploreComponent_ng_container_16_button_10_Template","value_r23","_r25","ctx_r24","show_legend","ExploreComponent_ng_container_18_div_10_Template","ExploreComponent","logo","time","hide_zones","updateZoom","setPositions","positions","center","updateCenter","toggleZones","enabled","disable","unique","can_search","_s","_desks","_zones","_parking","_spaces","_space_pipe","_maps","reset_delay","show_accessibility","active_region","region","buildings","levelsForBuilding","url","map_url","map_styles","map_positions","map_features","map_actions","map_labels","locate","onMouse","resetKiosk","o","use_mapsindoors$","hash","VirtualKeyboardComponent","localStorage","getItem","queryParamMap","params","has","locateSpace","showStaff","locateUser","MapPinComponent","transform","feature","locate_details","module","locations","MapLocation","indexOf","pos","MapRadiusComponent","radius","document","activeElement","closeAll","i6","i7","hostBindings","ExploreSpacesService","SpacePipe","ExploreComponent_explore_search_6_Template","ExploreComponent_ng_template_10_Template","ExploreComponent_ng_container_12_Template","ExploreComponent_ng_container_16_Template","ExploreComponent_ng_container_18_Template","tmp_2_0","tmp_3_0","tmp_8_0","tmp_9_0","_c1","ANIMATION_SHOW_CONTRACT_EXPAND","ROUTES","path","component","AppExploreModule","RouterModule","forChild","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/map-kiosk/src/app/accessibility-controls.component.ts","./apps/map-kiosk/src/app/explore.component.ts","./apps/visitor-kiosk/src/app/explore.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ])\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l))\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                ? 'free'\n                : filled < 0.75\n                ? 'pending'\n                : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        tap(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now())\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now())\n                      ),\n                      type: 'parking',\n                      zones: bld?.id,\n                  })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => {\n                const assigned =\n                    events.find((e) => e.asset_id === _.id)?.user_name ||\n                    _.assigned_to;\n                this._users[_.id] = assigned;\n                return !assigned;\n            })\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const features = [];\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                track_id: `parking:hover:${space.map_id}`,\n                location: `${space.map_id}`,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                z_index: 20,\n                data: { ...space, user: this._users[space.id], status },\n            });\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 1.1,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([])\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    } as SearchResult)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'maps_features',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n        this._maps_people_search,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    } as any)\n                            )\n                        )\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ];\n                results.sort((a, b) => a.name.localeCompare(b.name));\n                return results;\n            }\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'accessibility-controls',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"setDarkMode(!dark_mode)\"\n        >\n            <div>Dark Mode</div>\n            <mat-slide-toggle\n                [ngModel]=\"dark_mode\"\n                (ngModelChange)=\"setDarkMode($event)\"\n            ></mat-slide-toggle>\n        </button>\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"applySetting('accessible', !accessible)\"\n        >\n            <div>Text Size</div>\n            <mat-slide-toggle\n                [ngModel]=\"accessible\"\n                (ngModelChange)=\"applySetting('accessible', $event)\"\n            ></mat-slide-toggle>\n        </button>\n        <div class=\"flex items-center pl-2 space-x-4\" *ngIf=\"accessible\">\n            <div class=\"text-sm\">A</div>\n            <mat-slider\n                class=\"flex-1 w-px min-w-0 text-[16px]\"\n                [min]=\"10\"\n                [max]=\"24\"\n                [step]=\"2\"\n            >\n                <input\n                    matSliderThumb\n                    class=\"text-[16px]\"\n                    [ngModel]=\"font_size\"\n                    (ngModelChange)=\"applySetting('font_size', $event)\"\n                />\n            </mat-slider>\n            <div class=\"text-2xl\">A</div>\n            <div\n                class=\"text-base py-1 px-2 rounded bg-base-300 text-base-content my-2\"\n            >\n                {{ font_size }}px\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AccessibilityControlsComponent extends AsyncHandler {\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public setDarkMode(state: boolean) {\n        this.timeout(\n            'dark_mode',\n            () => {\n                const theme = this._settings.get('theme');\n                if (state && theme !== 'dark') this._settings.setTheme('dark');\n                else if (!state && theme === 'dark')\n                    this._settings.setTheme('light');\n            },\n            100\n        );\n    }\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    flatten,\n    MapsPeopleService,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n    VirtualKeyboardComponent,\n} from '@placeos/components';\nimport {\n    ExploreDesksService,\n    ExploreParkingService,\n    ExploreSpacesService,\n    ExploreStateService,\n    ExploreZonesService,\n} from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { Point } from '@placeos/svg-viewer';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { startOfMinute } from 'date-fns';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { first, map, take, tap } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-explore]',\n    template: `\n        <div\n            topbar\n            class=\"relative flex items-center justify-between p-4 border-b border-base-300 bg-base-100 text-base-content\"\n        >\n            <h2 class=\"text-2xl\">Place<span class=\"text-primary\">OS</span></h2>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 right-2 flex items-center\"\n            >\n                <explore-search *ngIf=\"can_search\"></explore-search>\n                <button\n                    icon\n                    matRipple\n                    customTooltip\n                    [content]=\"accessibility_controls\"\n                    class=\"bg-base-200 flex sm:hidden\"\n                >\n                    <app-icon>accessible</app-icon>\n                </button>\n                <ng-template #accessibility_controls>\n                    <div class=\"bg-base-100 rounded p-2 w-[18rem]\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <ng-container *ngIf=\"(levels | async)?.length || legend.length\">\n            <div\n                options\n                class=\"flex sm:hidden items-center bg-base-content text-base-100 p-2 space-x-2\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"levelMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #levelMenu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            *ngFor=\"let lvl of levels | async\"\n                            (click)=\"setLevel(lvl)\"\n                        >\n                            {{ lvl.display_name || lvl.name }}\n                        </button>\n                    </mat-menu>\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"legendMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #legendMenu=\"matMenu\">\n                        <div\n                            class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                            *ngFor=\"let value of legend\"\n                        >\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [style.background-color]=\"value.color\"\n                            ></div>\n                            <div class=\"text-left opacity-60\">\n                                {{ value.name }}\n                            </div>\n                        </div>\n                    </mat-menu>\n                </ng-container>\n            </div>\n        </ng-container>\n        <div class=\"flex flex-1 h-1/2\">\n            <div\n                sidebar\n                class=\"w-[20rem] hidden sm:block bg-base-100 text-base-content border-r border-base-300 px-2 py-4\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_levels = !show_levels\"\n                    >\n                        <app-icon class=\"text-2xl\">corporate_fare</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_levels\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_levels ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <button\n                                *ngFor=\"let lvl of levels | async\"\n                                btn\n                                matRipple\n                                class=\"clear hover:bg-base-200 hover:opacity-100 w-full\"\n                                [class.opacity-30]=\"\n                                    lvl.id !== (level | async)?.id\n                                \"\n                                (click)=\"setLevel(lvl)\"\n                            >\n                                <div class=\"text-left w-full\">\n                                    {{ lvl.display_name || lvl.name }}\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_legend = !show_legend\"\n                    >\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_legend\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_legend ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <div\n                                class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                                *ngFor=\"let value of legend\"\n                            >\n                                <div\n                                    class=\"h-3 w-3 rounded-full\"\n                                    [style.background-color]=\"value.color\"\n                                ></div>\n                                <div class=\"text-left opacity-60\">\n                                    {{ value.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <button\n                    btn\n                    matRipple\n                    class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                    (click)=\"show_accessibility = !show_accessibility\"\n                >\n                    <app-icon class=\"text-2xl\">accessible</app-icon>\n                    <div class=\"flex-1 text-left font-medium\">\n                        Accessibility\n                    </div>\n                    <app-icon class=\"text-2xl\">{{\n                        show_accessibility\n                            ? 'keyboard_arrow_up'\n                            : 'keyboard_arrow_down'\n                    }}</app-icon>\n                </button>\n                <div\n                    class=\"px-8\"\n                    [@show]=\"show_accessibility ? 'show' : 'hide'\"\n                >\n                    <div class=\" py-4 space-y-2\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </div>\n                <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n            </div>\n            <div class=\"relative flex-1 h-full\">\n                <interactive-map\n                    [src]=\"url | async\"\n                    [zoom]=\"(positions | async)?.zoom\"\n                    [center]=\"(positions | async)?.center\"\n                    (zoomChange)=\"updateZoom($event)\"\n                    (centerChange)=\"updateCenter($event)\"\n                    [styles]=\"styles | async\"\n                    [features]=\"features | async\"\n                    [actions]=\"actions | async\"\n                    [labels]=\"labels | async\"\n                    [options]=\"{ controls: true }\"\n                    [focus]=\"locate\"\n                ></interactive-map>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: var(--b2);\n            }\n\n            hr {\n                margin-top: 0.5rem !important;\n                margin-bottom: 0.5rem !important;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        SpacePipe,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    public show_levels: boolean = true;\n    public show_legend: boolean = false;\n    public show_accessibility: boolean = false;\n    public legend = [\n        { id: 'free', name: 'Space Available', color: '#43a047' },\n        { id: 'busy', name: 'Space In Use', color: '#e53935' },\n        { id: 'pending', name: 'Space Pending', color: '#ffb300' },\n        { id: 'not-bookable', name: 'Space Not-bookable', color: '#ccc' },\n    ];\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, building]) => {\n            return (\n                (this._settings.get('app.use_region')\n                    ? flatten(\n                          this._org.buildings\n                              .filter((bld) => region.id === bld.parent_id)\n                              .map((bld) =>\n                                  this._org.levelsForBuilding(bld).map((_) => ({\n                                      ..._,\n                                      display_name: `${bld.display_name} - ${_.display_name}`,\n                                  }))\n                              )\n                      )\n                    : this._org.levelsForBuilding(building)) || []\n            );\n        }),\n        tap((l) => console.log('Levels:', l))\n    );\n    public readonly level = this._state.level;\n\n    /** Application logo to display */\n    public get logo() {\n        return this._settings.get('theme') === 'dark'\n            ? this._settings.get('app.logo_dark')\n            : this._settings.get('app.logo_light');\n    }\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get hide_zones() {\n        return this._settings.get('app.hide_zones');\n    }\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public locate = '';\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    public get can_search() {\n        return !!this._settings.get('app.explore.search_enabled');\n    }\n\n    public readonly use_mapsindoors$ = this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        if (\n            location.hash.includes('public=true') ||\n            location.search.includes('public=true')\n        ) {\n            this._state.setOptions({ is_public: true });\n        }\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this._desks.setOptions({ custom: true });\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        this.resetKiosk();\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.subscription(\n            'level',\n            this._state.level.subscribe(() =>\n                this.timeout('update_location', () => {\n                    this._state.setFeatures('_located', []);\n                })\n            )\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('feature')) {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('feature'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else if (params.has('locate')) {\n                    this.locate = params.get('locate');\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    public resetKiosk() {\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { SharedComponentsModule } from './components/shared-components.module';\n\nimport { ExploreComponent } from 'apps/map-kiosk/src/app/explore.component';\nimport { ExploreLevelSelectComponent } from 'apps/map-kiosk/src/app/explore-level-select.component';\nimport { AccessibilityControlsComponent } from 'apps/map-kiosk/src/app/accessibility-controls.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        ExploreLevelSelectComponent,\n        AccessibilityControlsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}