{"version":3,"file":"apps_visitor-kiosk_src_app_explore_module_ts.js","mappings":"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","names":["i0","ctx_r0","temp","ctx_r1","humidity","ExploreSensorInfoComponent","constructor","_details","this","static","t","MAP_FEATURE_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","ExploreZonesService","AsyncHandler","_state","_org","_settings","super","_area_list","_statuses","_count_key","_location","_label_location","_capacity","_draw","_points","_features","_bind","combineLatest","active_building","level","pipe","filter","bld","lvl","map","_","system_id","binding","bind_areas","getModule","id","bind_zone","zones","listen","debounceTime","a","z","value","location","subscription","subscribe","l","parseData","bind","init","_this","_asyncToGenerator","initialised","first","toPromise","zone_metadata","Promise","all","levels","showMetadata","zone","areas","details","area","capacity","hide_label","label_location","draw_polygon","area_count_key","properties","coordinates","geometry","length","getCenterPoint","get","push","map_id","updateStatus","labels","features","area_id","filled","at_location","content","count","temperature","people_count","people_count_sum","queue_size","counter","z_index","track_id","data","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","MapPolygonComponent","color","points","fill","opacity","setFeatures","setStyles","i1","i2","i3","Yz7","factory","ɵfac","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","resource","name","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r4","ctx_r3","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_7_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","ctx_r4","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","ctx_r8","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_0","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","_r2","ExploreDesksService","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","switchMap","catchError","of","Array","shareReplay","desk_list","i","j","Desk","e","tap","d","processBindingChange","_booking_list","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","bookings","next","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","options","getValue","devices","v","signs_of_life","departments","desk","staff_name","department","processDevices","timeout","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","can_book","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","forEach","event","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","ExploreParkingService","_poll","asObservable","active_levels","tags","events","startOfMinute","endOfMinute","existing_event","week_events","spaces","forkJoin","s","flatten","active_spaces","available_spaces","assigned","user_name","week_availablility","availability","day","day_events","isSameDay","available","_updateParkingSpaces","interval","styles","space","zoom_level","active_level","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","ExploreSearchService","_emergency_contacts","_filter","_loading","emergency_contacts","_role_assigned_contacts","contacts","_user_search","q","search_fn","_space_search","querySystems","organisation","Space","levelWithID","_points_of_interest","listChildMetadata","building","item","metadata","points_of_interest","poi","search_results","users","roled_contacts","search","toLowerCase","results","display_name","u","roles","role","is_role","sort","b","localeCompare","loading","queryUsers","authority_id","authority","searchStaff","moduleFromMetadata","contacts_map","setFilter","str","providedIn","option_r8","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","tmp_0_0","ExploreSearchComponent","checkClick","_el","contains","target","show","_input_el","blur","_search","_router","_route","search_str","right_size","setItem","Object","select","onTouch","checkButtonPosition","focusInput","focus","showSearch","closeSearch","query","navigate","relativeTo","queryParams","window_width","window","innerWidth","button_rect","_button_el","getBoundingClientRect","width","viewQuery","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","_r1","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","applySetting","font_size","AccessibilityControlsComponent","n","saveUserSetting","dark_mode","can_change_dark_mode","accessible","setDarkMode","state","theme","setTheme","AccessibilityControlsComponent_div_8_Template","lvl_r13","_r15","$implicit","ctx_r14","setLevel","ExploreComponent_ng_container_13_ng_container_2_button_8_Template","_r11","value_r18","ExploreComponent_ng_container_13_ng_container_4_div_8_Template","_r16","ctx_r10","legend","ExploreComponent_ng_container_13_ng_container_2_Template","ExploreComponent_ng_container_13_ng_container_4_Template","lvl_r20","_r22","ctx_r21","ctx_r19","_r24","ctx_r23","show_levels","ExploreComponent_ng_container_17_button_10_Template","value_r26","_r28","ctx_r27","show_legend","ExploreComponent_ng_container_19_div_10_Template","_r30","ctx_r29","updateZoom","ctx_r31","updateCenter","url","tmp_1_0","tmp_2_0","locate","ExploreComponent","logo","time","hide_zones","toggleZones","enabled","disable","unique","can_search","_s","_desks","_zones","_parking","_spaces","_space_pipe","_maps","reset_delay","show_accessibility","active_region","region","buildings","levelsForBuilding","map_url","map_styles","map_positions","map_features","map_actions","map_labels","onMouse","resetKiosk","o","use_mapsindoors$","available$","VirtualKeyboardComponent","localStorage","getItem","queryParamMap","params","has","locateSpace","showStaff","locateUser","MapPinComponent","transform","feature","locate_details","module","locations","MapLocation","indexOf","pos","MapRadiusComponent","radius","document","activeElement","closeAll","i6","i7","hostBindings","ExploreSpacesService","SpacePipe","ExploreComponent_explore_search_6_Template","ExploreComponent_ng_template_11_Template","ExploreComponent_ng_container_13_Template","ExploreComponent_ng_container_17_Template","ExploreComponent_ng_container_19_Template","ExploreComponent_i_map_32_Template","ExploreComponent_indoor_maps_34_Template","ExploreComponent_explore_zoom_controls_36_Template","tmp_3_0","ANIMATION_SHOW_CONTRACT_EXPAND","ROUTES","path","component","AppExploreModule","RouterModule","forChild","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/map-kiosk/src/app/accessibility-controls.component.ts","./apps/map-kiosk/src/app/explore.component.ts","./apps/visitor-kiosk/src/app/explore.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { combineLatest } from 'rxjs';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n    ]).pipe(\n        filter(([bld, lvl]) => !!bld && !!lvl),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ])\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l))\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                ? 'free'\n                : filled < 0.75\n                ? 'pending'\n                : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        temp: zone.temperature,\n                        humidity: zone.humidity,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => {\n                const assigned =\n                    events.find((e) => e.asset_id === _.id)?.user_name ||\n                    _.assigned_to;\n                this._users[_.id] = assigned;\n                return !assigned;\n            })\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const features = [];\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                track_id: `parking:hover:${space.map_id}`,\n                location: `${space.map_id}`,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                z_index: 20,\n                data: { ...space, user: this._users[space.id], status },\n            });\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 1.1,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, flatten, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = [\n                ...spaces\n                    .filter(\n                        (_) =>\n                            _.email.toLowerCase().includes(search) ||\n                            _.name.toLowerCase().includes(search) ||\n                            _.display_name.toLowerCase().includes(search)\n                    )\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'space',\n                        name: s.display_name || s.name,\n                        description: `Capacity: ${s.capacity} `,\n                    })),\n                ...flatten(\n                    roled_contacts.map((u) =>\n                        (u as any).roles.map(\n                            (role) =>\n                                ({\n                                    id: u.email,\n                                    type: role || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                    )\n                ).filter(\n                    (_) =>\n                        _.name.toLowerCase().includes(search) ||\n                        _.description.toLowerCase().includes(search) ||\n                        _.type.toLowerCase().includes(search)\n                ),\n                ...contacts\n                    .map(\n                        (u) =>\n                            ({\n                                id: u.email,\n                                type: (u as any).type || 'contact',\n                                is_role: true,\n                                name: u.name,\n                                description: u.email,\n                            } as any)\n                    )\n                    .filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                ...users.map((u) => ({\n                    id: u.email,\n                    type: 'user',\n                    name: u.name,\n                    description: u.email,\n                })),\n                ...features\n                    .filter((_) => _.name.toLowerCase().includes(search))\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'feature',\n                        name: s.name,\n                        description: '',\n                        zone: (s as any).zone?.id,\n                    })),\n            ];\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'accessibility-controls',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"setDarkMode(!dark_mode)\"\n        >\n            <div>Dark Mode</div>\n            <mat-slide-toggle\n                [ngModel]=\"dark_mode\"\n                (ngModelChange)=\"setDarkMode($event)\"\n            ></mat-slide-toggle>\n        </button>\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"applySetting('accessible', !accessible)\"\n        >\n            <div>Text Size</div>\n            <mat-slide-toggle\n                [ngModel]=\"accessible\"\n                (ngModelChange)=\"applySetting('accessible', $event)\"\n            ></mat-slide-toggle>\n        </button>\n        <div class=\"flex items-center pl-2 space-x-4\" *ngIf=\"accessible\">\n            <div class=\"text-sm\">A</div>\n            <mat-slider\n                class=\"flex-1 w-px min-w-0 text-[16px]\"\n                [min]=\"10\"\n                [max]=\"24\"\n                [step]=\"2\"\n            >\n                <input\n                    matSliderThumb\n                    class=\"text-[16px]\"\n                    [ngModel]=\"font_size\"\n                    (ngModelChange)=\"applySetting('font_size', $event)\"\n                />\n            </mat-slider>\n            <div class=\"text-2xl\">A</div>\n            <div\n                class=\"text-base py-1 px-2 rounded bg-base-300 text-base-content my-2\"\n            >\n                {{ font_size }}px\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AccessibilityControlsComponent extends AsyncHandler {\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public setDarkMode(state: boolean) {\n        this.timeout(\n            'dark_mode',\n            () => {\n                const theme = this._settings.get('theme');\n                if (state && theme !== 'dark') this._settings.setTheme('dark');\n                else if (!state && theme === 'dark')\n                    this._settings.setTheme('light');\n            },\n            100\n        );\n    }\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    flatten,\n    MapsPeopleService,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n    VirtualKeyboardComponent,\n} from '@placeos/components';\nimport {\n    ExploreDesksService,\n    ExploreParkingService,\n    ExploreSpacesService,\n    ExploreStateService,\n    ExploreZonesService,\n} from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { Point } from '@placeos/svg-viewer';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { startOfMinute } from 'date-fns';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { first, map, take, tap } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-explore]',\n    template: `\n        <div\n            topbar\n            class=\"relative flex items-center justify-between p-4 border-b border-base-300 bg-base-100 text-base-content\"\n        >\n            <h2 class=\"text-2xl\">Place<span class=\"text-primary\">OS</span></h2>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 right-2 flex items-center\"\n            >\n                <explore-search\n                    *ngIf=\"can_search && !(use_mapsindoors$ | async)\"\n                ></explore-search>\n                <button\n                    icon\n                    matRipple\n                    customTooltip\n                    [content]=\"accessibility_controls\"\n                    class=\"bg-base-200 flex sm:hidden\"\n                >\n                    <app-icon>accessible</app-icon>\n                </button>\n                <ng-template #accessibility_controls>\n                    <div class=\"bg-base-100 rounded p-2 w-[18rem]\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <ng-container *ngIf=\"(levels | async)?.length || legend.length\">\n            <div\n                options\n                class=\"flex sm:hidden items-center bg-base-content text-base-100 p-2 space-x-2\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"levelMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #levelMenu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            *ngFor=\"let lvl of levels | async\"\n                            (click)=\"setLevel(lvl)\"\n                        >\n                            {{ lvl.display_name || lvl.name }}\n                        </button>\n                    </mat-menu>\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"legendMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #legendMenu=\"matMenu\">\n                        <div\n                            class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                            *ngFor=\"let value of legend\"\n                        >\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [style.background-color]=\"value.color\"\n                            ></div>\n                            <div class=\"text-left opacity-60\">\n                                {{ value.name }}\n                            </div>\n                        </div>\n                    </mat-menu>\n                </ng-container>\n            </div>\n        </ng-container>\n        <div class=\"flex flex-1 h-1/2\">\n            <div\n                sidebar\n                class=\"w-[20rem] hidden sm:block bg-base-100 text-base-content border-r border-base-300 px-2 py-4\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_levels = !show_levels\"\n                    >\n                        <app-icon class=\"text-2xl\">corporate_fare</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_levels\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_levels ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <button\n                                *ngFor=\"let lvl of levels | async\"\n                                btn\n                                matRipple\n                                class=\"clear hover:bg-base-200 hover:opacity-100 w-full\"\n                                [class.opacity-30]=\"\n                                    lvl.id !== (level | async)?.id\n                                \"\n                                (click)=\"setLevel(lvl)\"\n                            >\n                                <div class=\"text-left w-full\">\n                                    {{ lvl.display_name || lvl.name }}\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_legend = !show_legend\"\n                    >\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_legend\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_legend ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <div\n                                class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                                *ngFor=\"let value of legend\"\n                            >\n                                <div\n                                    class=\"h-3 w-3 rounded-full\"\n                                    [style.background-color]=\"value.color\"\n                                ></div>\n                                <div class=\"text-left opacity-60\">\n                                    {{ value.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <button\n                    btn\n                    matRipple\n                    class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                    (click)=\"show_accessibility = !show_accessibility\"\n                >\n                    <app-icon class=\"text-2xl\">accessible</app-icon>\n                    <div class=\"flex-1 text-left font-medium\">\n                        Accessibility\n                    </div>\n                    <app-icon class=\"text-2xl\">{{\n                        show_accessibility\n                            ? 'keyboard_arrow_up'\n                            : 'keyboard_arrow_down'\n                    }}</app-icon>\n                </button>\n                <div\n                    class=\"px-8\"\n                    [@show]=\"show_accessibility ? 'show' : 'hide'\"\n                >\n                    <div class=\" py-4 space-y-2\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </div>\n                <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n            </div>\n            <div class=\"relative flex-1 h-full\">\n                <i-map\n                    *ngIf=\"!(use_mapsindoors$ | async)\"\n                    [src]=\"url | async\"\n                    [zoom]=\"(positions | async)?.zoom\"\n                    [center]=\"(positions | async)?.center\"\n                    (zoomChange)=\"updateZoom($event)\"\n                    (centerChange)=\"updateCenter($event)\"\n                    [styles]=\"styles | async\"\n                    [features]=\"features | async\"\n                    [actions]=\"actions | async\"\n                    [labels]=\"labels | async\"\n                ></i-map>\n                <indoor-maps\n                    *ngIf=\"use_mapsindoors$ | async\"\n                    [styles]=\"styles | async\"\n                    [actions]=\"actions | async\"\n                    [locate]=\"locate\"\n                ></indoor-maps>\n                <explore-zoom-controls\n                    *ngIf=\"!(use_mapsindoors$ | async)\"\n                    class=\"absolute bottom-2 sm:bottom-auto sm:top-1/2 transform -translate-y-1/2 right-0\"\n                ></explore-zoom-controls>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: var(--b2);\n            }\n\n            hr {\n                margin-top: 0.5rem !important;\n                margin-bottom: 0.5rem !important;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        SpacePipe,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    public show_levels: boolean = true;\n    public show_legend: boolean = false;\n    public show_accessibility: boolean = false;\n    public legend = [\n        { id: 'free', name: 'Space Available', color: '#43a047' },\n        { id: 'busy', name: 'Space In Use', color: '#e53935' },\n        { id: 'pending', name: 'Space Pending', color: '#ffb300' },\n        { id: 'not-bookable', name: 'Space Not-bookable', color: '#ccc' },\n    ];\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, building]) => {\n            return (\n                (this._settings.get('app.use_region')\n                    ? flatten(\n                          this._org.buildings\n                              .filter((bld) => region.id === bld.parent_id)\n                              .map((bld) =>\n                                  this._org.levelsForBuilding(bld).map((_) => ({\n                                      ..._,\n                                      display_name: `${bld.display_name} - ${_.display_name}`,\n                                  }))\n                              )\n                      )\n                    : this._org.levelsForBuilding(building)) || []\n            );\n        }),\n        tap((l) => console.log('Levels:', l))\n    );\n    public readonly level = this._state.level;\n\n    /** Application logo to display */\n    public get logo() {\n        return this._settings.get('theme') === 'dark'\n            ? this._settings.get('app.logo_dark')\n            : this._settings.get('app.logo_light');\n    }\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get hide_zones() {\n        return this._settings.get('app.hide_zones');\n    }\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public locate = '';\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    public get can_search() {\n        return !!this._settings.get('app.explore.search_enabled');\n    }\n\n    public readonly use_mapsindoors$ = this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this._desks.setOptions({ custom: true });\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        this.resetKiosk();\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.subscription(\n            'level',\n            this._state.level.subscribe(() =>\n                this.timeout('update_location', () => {\n                    this._state.setFeatures('_located', []);\n                })\n            )\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('feature')) {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('feature'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else if (params.has('locate')) {\n                    this.locate = params.get('locate');\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    public resetKiosk() {\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { SharedComponentsModule } from './components/shared-components.module';\n\nimport { ExploreComponent } from 'apps/map-kiosk/src/app/explore.component';\nimport { ExploreLevelSelectComponent } from 'apps/map-kiosk/src/app/explore-level-select.component';\nimport { AccessibilityControlsComponent } from 'apps/map-kiosk/src/app/accessibility-controls.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        ExploreLevelSelectComponent,\n        AccessibilityControlsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}