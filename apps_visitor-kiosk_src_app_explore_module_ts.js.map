{"version":3,"file":"apps_visitor-kiosk_src_app_explore_module_ts.js","mappings":"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","names":["i0","ctx_r0","temp","ctx_r1","humidity","ExploreSensorInfoComponent","constructor","_details","this","static","t","MAP_FEATURE_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","ExploreZonesService","AsyncHandler","_state","_org","_settings","super","_area_list","_statuses","_count_key","_location","_label_location","_capacity","_draw","_points","_features","_polygons$","BehaviorSubject","_bind","combineLatest","active_building","level","options","pipe","filter","bld","lvl","is_public","map","_","system_id","binding","bind_areas","getModule","id","bind_zone","zones","listen","debounceTime","a","z","value","location","subscription","subscribe","l","parseData","bind","init","_this","_asyncToGenerator","initialised","first","toPromise","zone_metadata","Promise","all","levels","showMetadata","zone","areas","details","area","capacity","hide_label","label_location","draw_polygon","area_count_key","properties","coordinates","geometry","length","getCenterPoint","get","push","map_id","setFeatures","track_id","x","y","content","MapCanvasComponent","data","polygons$","draw_points","draw_labels","updateStatus","labels","features","area_id","filled","at_location","count","temperature","people_count","people_count_sum","queue_size","counter","z_index","setLabels","style_map","colours","polygons","zone_id","colour","DEFAULT_COLOURS","name","points","color","fill","opacity","next","setStyles","i1","i2","i3","Yz7","factory","ɵfac","diff","reduce","m","x_min","x_max","y_min","y_max","resource","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r4","ctx_r3","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_7_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","ctx_r4","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","ctx_r8","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_0","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","_r2","ExploreDesksService","_bookings","_dialog","_in_use","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","switchMap","catchError","of","Array","shareReplay","desk_list","i","j","Desk","e","tap","d","processBindingChange","_booking_list","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","bookings","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","getValue","devices","v","signs_of_life","departments","desk","staff_name","department","processDevices","timeout","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","can_book","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","forEach","event","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","ExploreParkingService","_poll","asObservable","active_levels","tags","events","__","startOfMinute","endOfMinute","existing_event","week_events","spaces","forkJoin","s","flatten","active_spaces","available_spaces","assigned","user_name","week_availablility","availability","day","day_events","isSameDay","available","_updateParkingSpaces","interval","styles","space","zoom_level","active_level","ExploreSearchService","_maps_people","_emergency_contacts","_filter","_loading","emergency_contacts","_role_assigned_contacts","contacts","_user_search","q","search_fn","_space_search","querySystems","organisation","Space","levelWithID","_maps_people_search","available$","mapsindoors","services","LocationsService","getLocations","externalId","roomId","floorName","_points_of_interest","listChildMetadata","building","item","metadata","points_of_interest","poi","search_results","users","roled_contacts","mapspeople_items","search","toLowerCase","results","display_name","u","roles","role","is_role","sort","b","localeCompare","loading","queryUsers","authority_id","authority","searchStaff","moduleFromMetadata","contacts_map","setFilter","str","providedIn","option_r8","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","tmp_0_0","ExploreSearchComponent","checkClick","_el","contains","target","show","_input_el","blur","_search","_router","_route","search_str","right_size","setItem","Object","select","onTouch","checkButtonPosition","focusInput","focus","showSearch","closeSearch","query","navigate","relativeTo","queryParams","window_width","window","innerWidth","button_rect","_button_el","getBoundingClientRect","width","viewQuery","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","_r1","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","applySetting","font_size","AccessibilityControlsComponent","n","saveUserSetting","dark_mode","can_change_dark_mode","accessible","setDarkMode","state","theme","setTheme","AccessibilityControlsComponent_div_8_Template","lvl_r10","_r12","$implicit","ctx_r11","setLevel","ExploreComponent_ng_container_13_ng_container_2_button_8_Template","_r8","value_r15","ExploreComponent_ng_container_13_ng_container_4_div_8_Template","_r13","legend","ExploreComponent_ng_container_13_ng_container_2_Template","ExploreComponent_ng_container_13_ng_container_4_Template","lvl_r17","_r19","ctx_r18","ctx_r16","_r21","ctx_r20","show_levels","ExploreComponent_ng_container_17_button_10_Template","value_r23","_r25","ctx_r24","show_legend","ExploreComponent_ng_container_19_div_10_Template","ExploreComponent","logo","time","hide_zones","updateZoom","setPositions","positions","center","updateCenter","toggleZones","enabled","disable","unique","can_search","_s","_desks","_zones","_parking","_spaces","_space_pipe","_maps","reset_delay","show_accessibility","active_region","region","buildings","levelsForBuilding","url","map_url","map_styles","map_positions","map_features","map_actions","map_labels","locate","onMouse","resetKiosk","o","use_mapsindoors$","hash","VirtualKeyboardComponent","localStorage","getItem","queryParamMap","params","has","locateSpace","showStaff","locateUser","MapPinComponent","transform","feature","locate_details","module","locations","MapLocation","indexOf","pos","MapRadiusComponent","radius","document","activeElement","closeAll","i6","i7","hostBindings","ExploreSpacesService","SpacePipe","ExploreComponent_explore_search_6_Template","ExploreComponent_ng_template_11_Template","ExploreComponent_ng_container_13_Template","ExploreComponent_ng_container_17_Template","ExploreComponent_ng_container_19_Template","tmp_2_0","tmp_3_0","tmp_8_0","tmp_9_0","_c1","ANIMATION_SHOW_CONTRACT_EXPAND","ROUTES","path","component","AppExploreModule","RouterModule","forChild","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/map-kiosk/src/app/accessibility-controls.component.ts","./apps/map-kiosk/src/app/explore.component.ts","./apps/visitor-kiosk/src/app/explore.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ])\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l))\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                ? 'free'\n                : filled < 0.75\n                ? 'pending'\n                : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        temp: zone.temperature,\n                        humidity: zone.humidity,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        tap(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now())\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now())\n                      ),\n                      type: 'parking',\n                      zones: bld?.id,\n                  })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => {\n                const assigned =\n                    events.find((e) => e.asset_id === _.id)?.user_name ||\n                    _.assigned_to;\n                this._users[_.id] = assigned;\n                return !assigned;\n            })\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const features = [];\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                track_id: `parking:hover:${space.map_id}`,\n                location: `${space.map_id}`,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                z_index: 20,\n                data: { ...space, user: this._users[space.id], status },\n            });\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 1.1,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([])\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    } as SearchResult)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'maps_features',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n        this._maps_people_search,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    } as any)\n                            )\n                        )\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ];\n                results.sort((a, b) => a.name.localeCompare(b.name));\n                return results;\n            }\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'accessibility-controls',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"setDarkMode(!dark_mode)\"\n        >\n            <div>Dark Mode</div>\n            <mat-slide-toggle\n                [ngModel]=\"dark_mode\"\n                (ngModelChange)=\"setDarkMode($event)\"\n            ></mat-slide-toggle>\n        </button>\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"applySetting('accessible', !accessible)\"\n        >\n            <div>Text Size</div>\n            <mat-slide-toggle\n                [ngModel]=\"accessible\"\n                (ngModelChange)=\"applySetting('accessible', $event)\"\n            ></mat-slide-toggle>\n        </button>\n        <div class=\"flex items-center pl-2 space-x-4\" *ngIf=\"accessible\">\n            <div class=\"text-sm\">A</div>\n            <mat-slider\n                class=\"flex-1 w-px min-w-0 text-[16px]\"\n                [min]=\"10\"\n                [max]=\"24\"\n                [step]=\"2\"\n            >\n                <input\n                    matSliderThumb\n                    class=\"text-[16px]\"\n                    [ngModel]=\"font_size\"\n                    (ngModelChange)=\"applySetting('font_size', $event)\"\n                />\n            </mat-slider>\n            <div class=\"text-2xl\">A</div>\n            <div\n                class=\"text-base py-1 px-2 rounded bg-base-300 text-base-content my-2\"\n            >\n                {{ font_size }}px\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AccessibilityControlsComponent extends AsyncHandler {\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public setDarkMode(state: boolean) {\n        this.timeout(\n            'dark_mode',\n            () => {\n                const theme = this._settings.get('theme');\n                if (state && theme !== 'dark') this._settings.setTheme('dark');\n                else if (!state && theme === 'dark')\n                    this._settings.setTheme('light');\n            },\n            100\n        );\n    }\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    flatten,\n    MapsPeopleService,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n    VirtualKeyboardComponent,\n} from '@placeos/components';\nimport {\n    ExploreDesksService,\n    ExploreParkingService,\n    ExploreSpacesService,\n    ExploreStateService,\n    ExploreZonesService,\n} from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { Point } from '@placeos/svg-viewer';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { startOfMinute } from 'date-fns';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { first, map, take, tap } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-explore]',\n    template: `\n        <div\n            topbar\n            class=\"relative flex items-center justify-between p-4 border-b border-base-300 bg-base-100 text-base-content\"\n        >\n            <h2 class=\"text-2xl\">Place<span class=\"text-primary\">OS</span></h2>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 right-2 flex items-center\"\n            >\n                <explore-search\n                    *ngIf=\"can_search && !(use_mapsindoors$ | async)\"\n                ></explore-search>\n                <button\n                    icon\n                    matRipple\n                    customTooltip\n                    [content]=\"accessibility_controls\"\n                    class=\"bg-base-200 flex sm:hidden\"\n                >\n                    <app-icon>accessible</app-icon>\n                </button>\n                <ng-template #accessibility_controls>\n                    <div class=\"bg-base-100 rounded p-2 w-[18rem]\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <ng-container *ngIf=\"(levels | async)?.length || legend.length\">\n            <div\n                options\n                class=\"flex sm:hidden items-center bg-base-content text-base-100 p-2 space-x-2\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"levelMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #levelMenu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            *ngFor=\"let lvl of levels | async\"\n                            (click)=\"setLevel(lvl)\"\n                        >\n                            {{ lvl.display_name || lvl.name }}\n                        </button>\n                    </mat-menu>\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"legendMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #legendMenu=\"matMenu\">\n                        <div\n                            class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                            *ngFor=\"let value of legend\"\n                        >\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [style.background-color]=\"value.color\"\n                            ></div>\n                            <div class=\"text-left opacity-60\">\n                                {{ value.name }}\n                            </div>\n                        </div>\n                    </mat-menu>\n                </ng-container>\n            </div>\n        </ng-container>\n        <div class=\"flex flex-1 h-1/2\">\n            <div\n                sidebar\n                class=\"w-[20rem] hidden sm:block bg-base-100 text-base-content border-r border-base-300 px-2 py-4\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_levels = !show_levels\"\n                    >\n                        <app-icon class=\"text-2xl\">corporate_fare</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_levels\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_levels ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <button\n                                *ngFor=\"let lvl of levels | async\"\n                                btn\n                                matRipple\n                                class=\"clear hover:bg-base-200 hover:opacity-100 w-full\"\n                                [class.opacity-30]=\"\n                                    lvl.id !== (level | async)?.id\n                                \"\n                                (click)=\"setLevel(lvl)\"\n                            >\n                                <div class=\"text-left w-full\">\n                                    {{ lvl.display_name || lvl.name }}\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_legend = !show_legend\"\n                    >\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_legend\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_legend ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <div\n                                class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                                *ngFor=\"let value of legend\"\n                            >\n                                <div\n                                    class=\"h-3 w-3 rounded-full\"\n                                    [style.background-color]=\"value.color\"\n                                ></div>\n                                <div class=\"text-left opacity-60\">\n                                    {{ value.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <button\n                    btn\n                    matRipple\n                    class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                    (click)=\"show_accessibility = !show_accessibility\"\n                >\n                    <app-icon class=\"text-2xl\">accessible</app-icon>\n                    <div class=\"flex-1 text-left font-medium\">\n                        Accessibility\n                    </div>\n                    <app-icon class=\"text-2xl\">{{\n                        show_accessibility\n                            ? 'keyboard_arrow_up'\n                            : 'keyboard_arrow_down'\n                    }}</app-icon>\n                </button>\n                <div\n                    class=\"px-8\"\n                    [@show]=\"show_accessibility ? 'show' : 'hide'\"\n                >\n                    <div class=\" py-4 space-y-2\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </div>\n                <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n            </div>\n            <div class=\"relative flex-1 h-full\">\n                <interactive-map\n                    [src]=\"url | async\"\n                    [zoom]=\"(positions | async)?.zoom\"\n                    [center]=\"(positions | async)?.center\"\n                    (zoomChange)=\"updateZoom($event)\"\n                    (centerChange)=\"updateCenter($event)\"\n                    [styles]=\"styles | async\"\n                    [features]=\"features | async\"\n                    [actions]=\"actions | async\"\n                    [labels]=\"labels | async\"\n                    [options]=\"{ controls: true }\"\n                ></interactive-map>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: var(--b2);\n            }\n\n            hr {\n                margin-top: 0.5rem !important;\n                margin-bottom: 0.5rem !important;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        SpacePipe,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    public show_levels: boolean = true;\n    public show_legend: boolean = false;\n    public show_accessibility: boolean = false;\n    public legend = [\n        { id: 'free', name: 'Space Available', color: '#43a047' },\n        { id: 'busy', name: 'Space In Use', color: '#e53935' },\n        { id: 'pending', name: 'Space Pending', color: '#ffb300' },\n        { id: 'not-bookable', name: 'Space Not-bookable', color: '#ccc' },\n    ];\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, building]) => {\n            return (\n                (this._settings.get('app.use_region')\n                    ? flatten(\n                          this._org.buildings\n                              .filter((bld) => region.id === bld.parent_id)\n                              .map((bld) =>\n                                  this._org.levelsForBuilding(bld).map((_) => ({\n                                      ..._,\n                                      display_name: `${bld.display_name} - ${_.display_name}`,\n                                  }))\n                              )\n                      )\n                    : this._org.levelsForBuilding(building)) || []\n            );\n        }),\n        tap((l) => console.log('Levels:', l))\n    );\n    public readonly level = this._state.level;\n\n    /** Application logo to display */\n    public get logo() {\n        return this._settings.get('theme') === 'dark'\n            ? this._settings.get('app.logo_dark')\n            : this._settings.get('app.logo_light');\n    }\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get hide_zones() {\n        return this._settings.get('app.hide_zones');\n    }\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public locate = '';\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    public get can_search() {\n        return !!this._settings.get('app.explore.search_enabled');\n    }\n\n    public readonly use_mapsindoors$ = this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        if (\n            location.hash.includes('public=true') ||\n            location.search.includes('public=true')\n        ) {\n            this._state.setOptions({ is_public: true });\n        }\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this._desks.setOptions({ custom: true });\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        this.resetKiosk();\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.subscription(\n            'level',\n            this._state.level.subscribe(() =>\n                this.timeout('update_location', () => {\n                    this._state.setFeatures('_located', []);\n                })\n            )\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('feature')) {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('feature'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else if (params.has('locate')) {\n                    this.locate = params.get('locate');\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    public resetKiosk() {\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { SharedComponentsModule } from './components/shared-components.module';\n\nimport { ExploreComponent } from 'apps/map-kiosk/src/app/explore.component';\nimport { ExploreLevelSelectComponent } from 'apps/map-kiosk/src/app/explore-level-select.component';\nimport { AccessibilityControlsComponent } from 'apps/map-kiosk/src/app/accessibility-controls.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        ExploreLevelSelectComponent,\n        AccessibilityControlsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}