{"version":3,"file":"apps_visitor-kiosk_src_app_explore_module_ts.js","mappings":"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","names":["i0","ctx_r0","temp","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","shown_id","ExploreSensorInfoComponent","AsyncHandler","show","this","_details","id","value","timeout","constructor","super","static","__ngFactoryType__","MAP_FEATURE_DATA","core","VBU","selectors","features","decls","vars","consts","template","rf","ctx","ExploreSensorInfoComponent_ng_template_3_Template","stats_r2","ExploreZonesService","_state","_org","_settings","_area_list","_statuses","_count_key","_location","_label_location","_capacity","_draw","_points","_features","_polygons$","BehaviorSubject","_bind","combineLatest","active_building","level","options","pipe","filter","bld","lvl","is_public","map","_","system_id","binding","bind_areas","getModule","bind_zone","zones","listen","debounceTime","a","z","location","subscription","subscribe","l","parseData","bind","init","_this","_asyncToGenerator","initialised","first","toPromise","zone_metadata","Promise","all","levels","showMetadata","zone","areas","details","area","capacity","hide_label","label_location","draw_polygon","area_count_key","properties","coordinates","geometry","length","getCenterPoint","get","push","map_id","setFeatures","track_id","x","y","content","MapCanvasComponent","data","polygons$","draw_points","draw_labels","updateStatus","labels","area_id","filled","at_location","count","temperature","people_count","people_count_sum","queue_size","counter","z_index","setLabels","style_map","colours","polygons","zone_id","colour","DEFAULT_COLOURS","name","points","color","has","ExploreIconComponent","icon","full_size","fill","opacity","next","setStyles","i1","i2","i3","jDH","factory","ɵfac","diff","reduce","m","x_min","x_max","y_min","y_max","ctx_r1","resource","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r1","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_8_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","ctx_r2","mac","manufacturer","os","ssid","username","type","_r2","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_0","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","device_tooltip_r4","ExploreDesksService","_bookings","_dialog","_in_use","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","switchMap","catchError","of","Array","shareReplay","desk_list","i","j","Desk","e","d","processBindingChange","_booking_list","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","tap","bookings","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","getValue","devices","v","signs_of_life","departments","desk","staff_name","department","processDevices","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","no_scale","status","can_book","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","forEach","event","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","plate_number","ExploreParkingInfoComponent","is_concierge","app_name","toLowerCase","ExploreParkingInfoComponent_div_8_Template","ExploreParkingService","_parking","_poll","asObservable","on_book","active_levels","tags","events","__","startOfMinute","endOfMinute","rejected","user_events","spaces","forkJoin","s","flatten","active_spaces","_plate_numbers","available_spaces","users","available","assigned","u","extension_data","undefined","_updateParkingSpaces","startPolling","interval","stopPolling","clearInterval","styles","assigned_space","deny_parking_access","booked_space","space","hover","display_name","levelWithID","active_level","isSameDay","setHours","organisation","region","i6","TYPES","typeIndex","item","indexOf","is_role","ExploreSearchService","_maps_people","_emergency_contacts","_filter","_loading","emergency_contacts","_role_assigned_contacts","contacts","_user_search","q","search_fn","_space_search","querySystems","Space","_maps_people_search","available$","mapsindoors","services","LocationsService","getLocations","externalId","roomId","floorName","_map_features","listChildMetadata","building","metadata","map_features","feature_list","feature","_poi_metadata","_poi_list","mapping","levelsForBuilding","can_search","_points_of_interest","poi_list","level_id","search_results","roled_contacts","mapspeople_items","points_of_interest","search","results","roles","role","sort","b","localeCompare","loading","queryUsers","authority_id","authority","searchStaff","moduleFromMetadata","contacts_map","setFilter","str","providedIn","option_r3","$implicit","ctx_r3","select","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","tmp_5_0","ExploreSearchComponent","_el","_search","_router","_route","search_str","right_size","checkButtonPosition","clear","cancelClear","clearTimeout","focusInput","_input_el","focus","showSearch","closeSearch","blur","query","navigate","relativeTo","queryParams","window_width","window","innerWidth","button_rect","_button_el","getBoundingClientRect","width","viewQuery","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","auto_r6","origin_r5","SharedExploreModule","$C","G2t","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","ExploreSpaceInfoComponent","ExploreBookingModalComponent","i7","i8","i9","i10","i11","i12","applySetting","font_size","AccessibilityControlsComponent","n","saveUserSetting","dark_mode","can_change_dark_mode","accessible","setDarkMode","state","theme","setTheme","AccessibilityControlsComponent_div_8_Template","lvl_r3","setLevel","ExploreComponent_ng_container_12_ng_container_2_button_8_Template","levelMenu_r5","value_r6","ExploreComponent_ng_container_12_ng_container_4_div_8_Template","legendMenu_r7","legend","ExploreComponent_ng_container_12_ng_container_2_Template","ExploreComponent_ng_container_12_ng_container_4_Template","tmp_2_0","lvl_r10","_r9","tmp_4_0","_r8","show_levels","ExploreComponent_ng_container_16_button_10_Template","value_r12","_r11","show_legend","ExploreComponent_ng_container_18_div_10_Template","ExploreComponent","logo","time","hide_zones","updateZoom","setPositions","positions","center","updateCenter","toggleZones","enabled","disable","unique","_s","_desks","_zones","_spaces","_space_pipe","_maps","reset_delay","show_accessibility","active_region","buildings","url","map_url","map_styles","map_positions","map_actions","map_labels","locate","onMouse","resetKiosk","onTouch","o","use_mapsindoors$","hash","VirtualKeyboardComponent","localStorage","getItem","queryParamMap","params","locateSpace","showStaff","locateUser","MapPinComponent","transform","locate_details","module","locations","MapLocation","pos","MapRadiusComponent","radius","document","activeElement","closeAll","hostBindings","ExploreSpacesService","SpacePipe","ExploreComponent_explore_search_6_Template","ExploreComponent_ng_template_10_Template","ExploreComponent_ng_container_12_Template","ExploreComponent_ng_container_16_Template","ExploreComponent_ng_container_18_Template","accessibility_controls_r13","tmp_3_0","tmp_9_0","tmp_10_0","_c1","ANIMATION_SHOW_CONTRACT_EXPAND","ROUTES","path","component","AppExploreModule","RouterModule","forChild","SharedSpacesModule","SharedComponentsModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking-info.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/map-kiosk/src/app/accessibility-controls.component.ts","./apps/map-kiosk/src/app/explore.component.ts","./apps/visitor-kiosk/src/app/explore.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`,\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`,\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ]),\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l)),\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        }),\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise(),\n            ),\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                  ? 'free'\n                  : filled < 0.75\n                    ? 'pending'\n                    : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                if (\n                    this._state.has('style', zone_id, ['zones', 'zones-styles'])\n                ) {\n                    features.push({\n                        location: zone_id,\n                        content: ExploreIconComponent,\n                        data: {\n                            icon: { content: 'pin_drop' },\n                        },\n                        full_size: true,\n                        z_index: 98,\n                    } as ViewerFeature);\n                } else {\n                    style_map[`#${zone_id}`] = {\n                        fill: colour,\n                        opacity: 0.6,\n                    };\n                }\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        },\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        map(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { ParkingSpace } from 'libs/bookings/src/lib/parking.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\ninterface ParkingSpaceExtended extends ParkingSpace {\n    user: string;\n    status: string;\n    plate_number: string;\n}\n\n@Component({\n    selector: 'explore-parking-info',\n    template: `\n        <div\n            class=\"absolute bg-base-300 p-2 rounded-lg !rounded-tl-none shadow top-1/2 left-1/2 text-left\"\n            [class.!bg-error]=\"status === 'busy'\"\n            [class.!text-error-content]=\"status === 'busy'\"\n            [class.!bg-warning]=\"status === 'reserved'\"\n            [class.!text-warning-content]=\"status === 'reserved'\"\n            [class.!bg-success]=\"status === 'free'\"\n            [class.!text-success-content]=\"status === 'free'\"\n        >\n            <div class=\"absolute top-0.5 left-0.5 triangle\"></div>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex flex-col leading-tight min-w-24 pl-1\">\n                    <div class=\"whitespace-nowrap\">{{ name }}</div>\n                    <div class=\"capitalize text-sm font-medium\">\n                        {{ status }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-col relative h-full px-2 rounded bg-base-100 text-base-content shadow leading-tight\"\n                    *ngIf=\"is_concierge && plate_number\"\n                >\n                    <div\n                        class=\"text-[0.625rem] w-full text-center pt-1 whitespace-nowrap font-medium\"\n                    >\n                        Plate Number\n                    </div>\n                    <div class=\"font-mono pb-1 w-full text-center uppercase\">\n                        {{ plate_number || 'ABC3' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .triangle {\n                width: 0px;\n                height: 0px;\n                border-style: solid;\n                border-width: 0.5rem 0.5rem 0 0;\n                border-color: currentColor transparent transparent transparent;\n                transform: rotate(0deg);\n            }\n        `,\n    ],\n})\nexport class ExploreParkingInfoComponent {\n    public readonly status =\n        this._data.assigned_to === this._data.user && this._data.user\n            ? 'reserved'\n            : this._data.status;\n    public readonly user = this._data.user;\n    public readonly name = this._data.name;\n    public readonly map_id = this._data.map_id;\n    public readonly plate_number = this._data.plate_number;\n\n    public get is_concierge() {\n        return this._settings.app_name.toLowerCase().includes('concierge');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _data: ParkingSpaceExtended,\n        private _element: ElementRef<HTMLDivElement>,\n        private _settings: SettingsService,\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { StaffUser } from '@placeos/users';\nimport { PlaceZone, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    setHours,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ParkingService } from 'libs/bookings/src/lib/parking.service';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n    zone?: PlaceZone;\n    groups?: string[];\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n    public on_book: (ParkingSpace) => Promise<void> = null;\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking'))),\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now()),\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now()),\n                      ),\n                      type: 'parking',\n                      zones: this._settings.get('app.use_region')\n                          ? bld?.parent_id\n                          : bld?.id,\n                      rejected: false,\n                  }),\n        ),\n        shareReplay(1),\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly user_events = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            }),\n        ),\n        shareReplay(1),\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id }),\n                            ),\n                        ),\n                    ),\n                ),\n            ),\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1),\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id)),\n    );\n\n    private _users: Record<string, string> = {};\n    private _plate_numbers: Record<string, string> = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n        this._parking.users,\n    ]).pipe(\n        map(([events, spaces, users]) => {\n            const available = spaces.filter((_) => {\n                const event = events.find((e) => e.asset_id === _.id);\n                const assigned = `${\n                    event?.user_email || _.assigned_to || ''\n                }`.toLowerCase();\n                const user = users.find(\n                    (u) => u.email.toLowerCase() === assigned.toLowerCase(),\n                );\n                this._users[_.id] = assigned;\n                this._plate_numbers[_.id] =\n                    event?.extension_data?.plate_number ||\n                    user?.plate_number ||\n                    undefined;\n                return !assigned;\n            });\n            this._updateParkingSpaces(spaces, available);\n            return available;\n        }),\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _parking: ParkingService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n        this.subscription('spaces', this.available_spaces.subscribe());\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n    }\n\n    public startPolling() {\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n        this._poll.next(Date.now());\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private async _updateParkingSpaces(\n        spaces: ParkingSpace[],\n        available: ParkingSpace[],\n    ) {\n        const styles = {};\n        const features = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        let options = this._options.getValue();\n        const assigned_space = await this._parking.assigned_space\n            .pipe(take(1))\n            .toPromise();\n        const deny_parking_access = await this._parking.deny_parking_access\n            .pipe(take(1))\n            .toPromise();\n        const booked_space = await this._parking.booked_space\n            .pipe(take(1))\n            .toPromise();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const is_assigned = !!space.assigned_to;\n            const id = space.map_id || space.id;\n            const status = can_book\n                ? 'free'\n                : assigned_space\n                  ? 'pending'\n                  : 'busy';\n            styles[`#${id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                location: `${id}`,\n                content: ExploreParkingInfoComponent,\n                z_index: 20,\n                hover: true,\n                data: {\n                    ...space,\n                    user: this._users[space.id],\n                    plate_number: this._plate_numbers[space.id],\n                    status:\n                        status === 'pending' && assigned_space\n                            ? 'reserved'\n                            : status,\n                },\n            });\n            if (!can_book) continue;\n            const book_fn = async () => {\n                if (this.on_book) {\n                    await this.on_book(space);\n                    this._poll.next(Date.now());\n                    return;\n                }\n                if (deny_parking_access) {\n                    return notifyError(\n                        `Your user account has been denied parking access to ${\n                            space.zone?.display_name || space.zone?.name\n                        }.`,\n                    );\n                }\n                if (assigned_space) {\n                    return notifyError(\n                        `You are already assigned to parking space \"${\n                            space.name || space.id\n                        }\".`,\n                    );\n                }\n                if (booked_space?.find((_) => _.id === space.id)) {\n                    return notifyError(\n                        `You already have a parking space booked for the selected time.`,\n                    );\n                }\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`,\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`,\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                options = this._options.getValue();\n                let user = options.host || currentUser();\n                const user_email = user?.email;\n                const zone =\n                    this._org.levelWithID([\n                        space.zone_id || (space as any).zone,\n                    ]) || this._state.active_level;\n                const date =\n                    !options.date || isSameDay(options.date, Date.now())\n                        ? startOfMinute(Date.now()).valueOf()\n                        : setHours(options.date, 8).valueOf();\n                debugger;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: 11 * 60,\n                    all_day: true,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: [\n                        this._org.organisation.id,\n                        this._org.region?.id,\n                        zone.parent_id,\n                        zone.id,\n                    ],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    if (e === 'User cancelled') throw e;\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`,\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`,\n                );\n                this.timeout('poll', () => this._poll.next(Date.now()), 1000);\n            };\n            actions.push({\n                id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : [],\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setFeatures('parking', features);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null,\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90,\n                ),\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface PointOfInterest {\n    id: string;\n    name: string;\n    level_id: string;\n    location: string | [number, number];\n    short_link_id: string;\n    qr_code?: string;\n    qr_link?: string;\n    can_search?: boolean;\n}\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n    /** ID of the zone that the item is located */\n    zone?: string;\n}\n\nconst TYPES = ['space', 'contact', 'feature', 'user'];\n\nfunction typeIndex(item: SearchResult): number {\n    return TYPES.indexOf(item.is_role ? 'contact' : item.type);\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1),\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[])),\n                  )\n                : of([] as StaffUser[]),\n        ),\n        shareReplay(1),\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any,\n                                          ),\n                                      } as any),\n                              ),\n                      ),\n                  )\n                : of([]),\n        ),\n        catchError(() => []),\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([]),\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    }) as SearchResult,\n            );\n        }),\n        shareReplay(1),\n    );\n\n    private _map_features: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'map_features',\n                }).pipe(catchError(() => of({ details: [] }))),\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.map_features;\n                    if (!metadata) continue;\n                    const feature_list =\n                        metadata.details instanceof Array\n                            ? metadata.details\n                            : [];\n                    for (const feature of feature_list) {\n                        list.push({\n                            id: feature.id,\n                            type: 'feature',\n                            name: feature.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            }),\n        );\n\n    private _poi_metadata = this._org.initialised.pipe(\n        filter((_) => _),\n        switchMap(() =>\n            showMetadata(this._org.organisation.id, 'points-of-interest').pipe(\n                catchError((_) => of({ details: {} })),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    private _poi_list = combineLatest([\n        this._org.active_building,\n        this._poi_metadata,\n    ]).pipe(\n        filter(([bld]) => !!bld.id),\n        map(([bld, metadata]) => {\n            const mapping = metadata.details || {};\n            const levels = this._org.levelsForBuilding(bld);\n            const list: PointOfInterest[] = flatten(\n                levels.map((lvl) => mapping[lvl.id] || []),\n            );\n            return list.filter((_) => _.can_search);\n        }),\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._poi_list.pipe(\n            map((poi_list) => {\n                return poi_list.map(\n                    (item) =>\n                        ({\n                            id: item.id || item.location,\n                            type: 'feature',\n                            name: item.name,\n                            description: '',\n                            zone: item.level_id,\n                        }) as SearchResult,\n                );\n            }),\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._map_features,\n        this._maps_people_search,\n        this._points_of_interest,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n                points_of_interest,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search),\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    }) as any,\n                            ),\n                        ),\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search),\n                    ),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                    ...points_of_interest.filter((_) =>\n                        _.name.toLowerCase().includes(search),\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                }) as any,\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search),\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                ];\n                results.sort(\n                    (a, b) =>\n                        typeIndex(a) - typeIndex(b) ||\n                        a.name.localeCompare(b.name),\n                );\n                return results;\n            },\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1),\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data),\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService,\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices',\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setFilter($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (focus)=\"cancelClear()\"\n                (blur)=\"clear()\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0 : 5\"\n                    [value]=\"option.name\"\n                    (click)=\"select(option)\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public clear() {\n        this.timeout('clear', () => {\n            this.show = false;\n            this.search_str = '';\n            this.setFilter('');\n        });\n    }\n\n    public cancelClear() {\n        this.clearTimeout('clear');\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300,\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                  ? 'locate'\n                  : 'user';\n        query[type] = item.id;\n        if (type === 'locate') {\n            query.name = item.name;\n            query.zone = item.zone;\n        }\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n        this.focusInput();\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n    ExploreParkingInfoComponent,\n    ExploreIconComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'accessibility-controls',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"setDarkMode(!dark_mode)\"\n        >\n            <div>Dark Mode</div>\n            <mat-slide-toggle\n                [ngModel]=\"dark_mode\"\n                (ngModelChange)=\"setDarkMode($event)\"\n            ></mat-slide-toggle>\n        </button>\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"applySetting('accessible', !accessible)\"\n        >\n            <div>Text Size</div>\n            <mat-slide-toggle\n                [ngModel]=\"accessible\"\n                (ngModelChange)=\"applySetting('accessible', $event)\"\n            ></mat-slide-toggle>\n        </button>\n        <div class=\"flex items-center pl-2 space-x-4\" *ngIf=\"accessible\">\n            <div class=\"text-sm\">A</div>\n            <mat-slider\n                class=\"flex-1 w-px min-w-0 text-[16px]\"\n                [min]=\"10\"\n                [max]=\"24\"\n                [step]=\"2\"\n            >\n                <input\n                    matSliderThumb\n                    class=\"text-[16px]\"\n                    [ngModel]=\"font_size\"\n                    (ngModelChange)=\"applySetting('font_size', $event)\"\n                />\n            </mat-slider>\n            <div class=\"text-2xl\">A</div>\n            <div\n                class=\"text-base py-1 px-2 rounded bg-base-300 text-base-content my-2\"\n            >\n                {{ font_size }}px\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AccessibilityControlsComponent extends AsyncHandler {\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public setDarkMode(state: boolean) {\n        this.timeout(\n            'dark_mode',\n            () => {\n                const theme = this._settings.get('theme');\n                if (state && theme !== 'dark') this._settings.setTheme('dark');\n                else if (!state && theme === 'dark')\n                    this._settings.setTheme('light');\n            },\n            100\n        );\n    }\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    flatten,\n    log,\n    MapsPeopleService,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n    VirtualKeyboardComponent,\n} from '@placeos/components';\nimport {\n    ExploreDesksService,\n    ExploreParkingService,\n    ExploreSpacesService,\n    ExploreStateService,\n    ExploreZonesService,\n} from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { Point } from '@placeos/svg-viewer';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { startOfMinute } from 'date-fns';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { first, map, take, tap } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-explore]',\n    template: `\n        <div\n            topbar\n            class=\"relative flex items-center justify-between px-4 py-2 border-b border-base-300 bg-base-100 text-base-content\"\n        >\n            <a matRipple routerLink=\"/\" class=\"text-2xl rounded p-2\">\n                Place<span class=\"text-primary\">OS</span>\n            </a>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 right-2 flex items-center\"\n            >\n                <explore-search *ngIf=\"can_search\"></explore-search>\n                <button\n                    icon\n                    matRipple\n                    customTooltip\n                    [content]=\"accessibility_controls\"\n                    class=\"bg-base-200 flex sm:hidden\"\n                >\n                    <app-icon>accessible</app-icon>\n                </button>\n                <ng-template #accessibility_controls>\n                    <div class=\"bg-base-100 rounded p-2 w-[18rem]\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <ng-container *ngIf=\"(levels | async)?.length || legend.length\">\n            <div\n                options\n                class=\"flex sm:hidden items-center bg-base-content text-base-100 p-2 space-x-2\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"levelMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #levelMenu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            *ngFor=\"let lvl of levels | async\"\n                            (click)=\"setLevel(lvl)\"\n                        >\n                            {{ lvl.display_name || lvl.name }}\n                        </button>\n                    </mat-menu>\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"legendMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #legendMenu=\"matMenu\">\n                        <div\n                            class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                            *ngFor=\"let value of legend\"\n                        >\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [style.background-color]=\"value.color\"\n                            ></div>\n                            <div class=\"text-left opacity-60\">\n                                {{ value.name }}\n                            </div>\n                        </div>\n                    </mat-menu>\n                </ng-container>\n            </div>\n        </ng-container>\n        <div class=\"flex flex-1 h-1/2\">\n            <div\n                sidebar\n                class=\"w-[20rem] hidden sm:block bg-base-100 text-base-content border-r border-base-300 px-2 py-4\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_levels = !show_levels\"\n                    >\n                        <app-icon class=\"text-2xl\">corporate_fare</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_levels\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_levels ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <button\n                                *ngFor=\"let lvl of levels | async\"\n                                btn\n                                matRipple\n                                class=\"clear hover:bg-base-200 hover:opacity-100 w-full\"\n                                [class.opacity-30]=\"\n                                    lvl.id !== (level | async)?.id\n                                \"\n                                (click)=\"setLevel(lvl)\"\n                            >\n                                <div class=\"text-left w-full\">\n                                    {{ lvl.display_name || lvl.name }}\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_legend = !show_legend\"\n                    >\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_legend\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_legend ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <div\n                                class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                                *ngFor=\"let value of legend\"\n                            >\n                                <div\n                                    class=\"h-3 w-3 rounded-full\"\n                                    [style.background-color]=\"value.color\"\n                                ></div>\n                                <div class=\"text-left opacity-60\">\n                                    {{ value.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <button\n                    btn\n                    matRipple\n                    class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                    (click)=\"show_accessibility = !show_accessibility\"\n                >\n                    <app-icon class=\"text-2xl\">accessible</app-icon>\n                    <div class=\"flex-1 text-left font-medium\">\n                        Accessibility\n                    </div>\n                    <app-icon class=\"text-2xl\">{{\n                        show_accessibility\n                            ? 'keyboard_arrow_up'\n                            : 'keyboard_arrow_down'\n                    }}</app-icon>\n                </button>\n                <div\n                    class=\"px-8\"\n                    [@show]=\"show_accessibility ? 'show' : 'hide'\"\n                >\n                    <div class=\" py-4 space-y-2\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </div>\n                <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n            </div>\n            <div class=\"relative flex-1 h-full\">\n                <interactive-map\n                    [src]=\"url | async\"\n                    [zoom]=\"(positions | async)?.zoom\"\n                    [center]=\"(positions | async)?.center\"\n                    (zoomChange)=\"updateZoom($event)\"\n                    (centerChange)=\"updateCenter($event)\"\n                    [styles]=\"styles | async\"\n                    [features]=\"features | async\"\n                    [actions]=\"actions | async\"\n                    [labels]=\"labels | async\"\n                    [options]=\"{ controls: true }\"\n                    [focus]=\"locate\"\n                ></interactive-map>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: var(--b2);\n            }\n\n            hr {\n                margin-top: 0.5rem !important;\n                margin-bottom: 0.5rem !important;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        SpacePipe,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    public show_levels: boolean = true;\n    public show_legend: boolean = false;\n    public show_accessibility: boolean = false;\n    public legend = [\n        { id: 'free', name: 'Space Available', color: '#43a047' },\n        { id: 'busy', name: 'Space In Use', color: '#e53935' },\n        { id: 'pending', name: 'Space Pending', color: '#ffb300' },\n        { id: 'not-bookable', name: 'Space Not-bookable', color: '#ccc' },\n    ];\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, building]) => {\n            return (\n                (this._settings.get('app.use_region')\n                    ? flatten(\n                          this._org.buildings\n                              .filter((bld) => region.id === bld.parent_id)\n                              .map((bld) =>\n                                  this._org.levelsForBuilding(bld).map((_) => ({\n                                      ..._,\n                                      display_name: `${bld.display_name} - ${_.display_name}`,\n                                  })),\n                              ),\n                      )\n                    : this._org.levelsForBuilding(building)) || []\n            );\n        }),\n    );\n    public readonly level = this._state.level;\n\n    /** Application logo to display */\n    public get logo() {\n        return this._settings.get('theme') === 'dark'\n            ? this._settings.get('app.logo_dark')\n            : this._settings.get('app.logo_light');\n    }\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get hide_zones() {\n        return this._settings.get('app.hide_zones');\n    }\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public locate = '';\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    public get can_search() {\n        return !!this._settings.get('app.explore.search_enabled');\n    }\n\n    public readonly use_mapsindoors$ = this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        if (\n            location.hash.includes('public=true') ||\n            location.search.includes('public=true')\n        ) {\n            this._state.setOptions({ is_public: true });\n        }\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this._desks.setOptions({ custom: true });\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        this.resetKiosk(false);\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.subscription(\n            'level',\n            this._state.level.subscribe(() =>\n                this.timeout('update_location', () => {\n                    this._state.setFeatures('_located', []);\n                }),\n            ),\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    log('Explore', 'Level changed to:', params.get('level'));\n                    this._state.setLevel(params.get('level'));\n                    const level = this._org.levelWithID([params.get('level')]);\n                    if (!level) return;\n                    const bld = this._org.buildings.find(\n                        (_) => level.parent_id === _.id,\n                    );\n                    if (!bld) return;\n                    this._org.building = bld;\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    log('Explore', 'Focusing on space:', params.get('space'));\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    log('Explore', 'Focusing on user:', params.get('user'));\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`,\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user,\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('feature')) {\n                    log(\n                        'Explore',\n                        'Focusing on feature:',\n                        params.get('feature'),\n                    );\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('feature'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else if (params.has('locate')) {\n                    log(\n                        'Explore',\n                        'Focusing on location:',\n                        params.get('locate'),\n                    );\n                    this.locate = params.get('locate');\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('locate'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            }),\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature]),\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type),\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    public resetKiosk(navigate = true) {\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n        if (navigate) this._router.navigate(['/']);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { SharedComponentsModule } from './components/shared-components.module';\n\nimport { ExploreComponent } from 'apps/map-kiosk/src/app/explore.component';\nimport { ExploreLevelSelectComponent } from 'apps/map-kiosk/src/app/explore-level-select.component';\nimport { AccessibilityControlsComponent } from 'apps/map-kiosk/src/app/accessibility-controls.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        ExploreLevelSelectComponent,\n        AccessibilityControlsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}