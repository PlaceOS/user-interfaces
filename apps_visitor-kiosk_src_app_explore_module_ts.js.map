{"version":3,"file":"apps_visitor-kiosk_src_app_explore_module_ts.js","mappings":"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","names":["i0","ctx_r0","temp","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","shown_id","ExploreSensorInfoComponent","AsyncHandler","show","this","_details","id","value","timeout","constructor","super","static","t","MAP_FEATURE_DATA","core","VBU","selectors","features","decls","vars","consts","template","rf","ctx","ExploreSensorInfoComponent_ng_template_3_Template","stats_r2","ExploreZonesService","_state","_org","_settings","_area_list","_statuses","_count_key","_location","_label_location","_capacity","_draw","_points","_features","_polygons$","BehaviorSubject","_bind","combineLatest","active_building","level","options","pipe","filter","bld","lvl","is_public","map","_","system_id","binding","bind_areas","getModule","bind_zone","zones","listen","debounceTime","a","z","location","subscription","subscribe","l","parseData","bind","init","_this","_asyncToGenerator","initialised","first","toPromise","zone_metadata","Promise","all","levels","showMetadata","zone","areas","details","area","capacity","hide_label","label_location","draw_polygon","area_count_key","properties","coordinates","geometry","length","getCenterPoint","get","push","map_id","setFeatures","track_id","x","y","content","MapCanvasComponent","data","polygons$","draw_points","draw_labels","updateStatus","labels","area_id","filled","at_location","count","temperature","people_count","people_count_sum","queue_size","counter","z_index","setLabels","style_map","colours","polygons","zone_id","colour","DEFAULT_COLOURS","name","points","color","fill","opacity","next","setStyles","i1","i2","i3","jDH","factory","ɵfac","diff","reduce","m","x_min","x_max","y_min","y_max","ctx_r1","resource","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r1","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_8_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","ctx_r2","mac","manufacturer","os","ssid","username","type","_r2","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_0","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","device_tooltip_r4","ExploreDesksService","_bookings","_dialog","_in_use","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","switchMap","catchError","of","Array","shareReplay","desk_list","i","j","Desk","e","d","processBindingChange","_booking_list","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","tap","bookings","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","getValue","devices","v","signs_of_life","departments","desk","staff_name","department","processDevices","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","can_book","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","forEach","event","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","plate_number","ExploreParkingInfoComponent","is_concierge","app_name","toLowerCase","ExploreParkingInfoComponent_div_8_Template","ExploreParkingService","_parking","_poll","asObservable","on_book","active_levels","tags","events","__","startOfMinute","endOfMinute","user_events","spaces","forkJoin","s","flatten","active_spaces","_plate_numbers","available_spaces","users","available","assigned","u","undefined","_updateParkingSpaces","startPolling","interval","stopPolling","clearInterval","styles","assigned_space","deny_parking_access","booked_space","space","hover","display_name","active_level","i6","ExploreSearchService","_maps_people","_emergency_contacts","_filter","_loading","emergency_contacts","_role_assigned_contacts","contacts","_user_search","q","search_fn","_space_search","querySystems","organisation","Space","levelWithID","_maps_people_search","available$","mapsindoors","services","LocationsService","getLocations","externalId","roomId","floorName","_points_of_interest","listChildMetadata","building","item","metadata","points_of_interest","poi","search_results","roled_contacts","mapspeople_items","search","results","roles","role","is_role","sort","b","localeCompare","loading","queryUsers","authority_id","authority","searchStaff","moduleFromMetadata","contacts_map","setFilter","str","providedIn","option_r2","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","tmp_5_0","ExploreSearchComponent","checkClick","_el","contains","target","_input_el","blur","_search","_router","_route","search_str","right_size","setItem","Object","select","onTouch","checkButtonPosition","focusInput","focus","showSearch","closeSearch","query","navigate","relativeTo","queryParams","window_width","window","innerWidth","button_rect","_button_el","getBoundingClientRect","width","viewQuery","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","auto_r5","origin_r4","SharedExploreModule","$C","G2t","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","ExploreSpaceInfoComponent","ExploreBookingModalComponent","i7","i8","i9","i10","i11","i12","applySetting","font_size","AccessibilityControlsComponent","n","saveUserSetting","dark_mode","can_change_dark_mode","accessible","setDarkMode","state","theme","setTheme","AccessibilityControlsComponent_div_8_Template","lvl_r3","$implicit","ctx_r3","setLevel","ExploreComponent_ng_container_12_ng_container_2_button_8_Template","levelMenu_r5","value_r6","ExploreComponent_ng_container_12_ng_container_4_div_8_Template","legendMenu_r7","legend","ExploreComponent_ng_container_12_ng_container_2_Template","ExploreComponent_ng_container_12_ng_container_4_Template","tmp_2_0","lvl_r10","_r9","tmp_4_0","_r8","show_levels","ExploreComponent_ng_container_16_button_10_Template","value_r12","_r11","show_legend","ExploreComponent_ng_container_18_div_10_Template","ExploreComponent","logo","time","hide_zones","updateZoom","setPositions","positions","center","updateCenter","toggleZones","enabled","disable","unique","can_search","_s","_desks","_zones","_spaces","_space_pipe","_maps","reset_delay","show_accessibility","active_region","region","buildings","levelsForBuilding","url","map_url","map_styles","map_positions","map_features","map_actions","map_labels","locate","onMouse","resetKiosk","o","use_mapsindoors$","hash","VirtualKeyboardComponent","localStorage","getItem","queryParamMap","params","has","locateSpace","showStaff","locateUser","MapPinComponent","transform","feature","locate_details","module","locations","MapLocation","indexOf","pos","MapRadiusComponent","radius","document","activeElement","closeAll","hostBindings","ExploreSpacesService","SpacePipe","ExploreComponent_explore_search_6_Template","ExploreComponent_ng_template_10_Template","ExploreComponent_ng_container_12_Template","ExploreComponent_ng_container_16_Template","ExploreComponent_ng_container_18_Template","accessibility_controls_r13","tmp_3_0","tmp_9_0","tmp_10_0","_c1","ANIMATION_SHOW_CONTRACT_EXPAND","ROUTES","path","component","AppExploreModule","RouterModule","forChild","SharedSpacesModule","SharedComponentsModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking-info.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/map-kiosk/src/app/accessibility-controls.component.ts","./apps/map-kiosk/src/app/explore.component.ts","./apps/visitor-kiosk/src/app/explore.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ])\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l))\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                ? 'free'\n                : filled < 0.75\n                ? 'pending'\n                : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        map(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { ParkingSpace } from 'libs/bookings/src/lib/parking.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\ninterface ParkingSpaceExtended extends ParkingSpace {\n    user: string;\n    status: string;\n    plate_number: string;\n}\n\n@Component({\n    selector: 'explore-parking-info',\n    template: `\n        <div\n            class=\"absolute bg-base-300 p-2 rounded-lg !rounded-tl-none shadow top-1/2 left-1/2 text-left\"\n            [class.!bg-error]=\"status === 'busy'\"\n            [class.!text-error-content]=\"status === 'busy'\"\n            [class.!bg-warning]=\"status === 'reserved'\"\n            [class.!text-warning-content]=\"status === 'reserved'\"\n            [class.!bg-success]=\"status === 'free'\"\n            [class.!text-success-content]=\"status === 'free'\"\n        >\n            <div class=\"absolute top-0.5 left-0.5 triangle\"></div>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex flex-col leading-tight min-w-24 pl-1\">\n                    <div class=\"whitespace-nowrap\">{{ name }}</div>\n                    <div class=\"capitalize text-sm font-medium\">\n                        {{ status }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-col relative h-full px-2 rounded bg-base-100 text-base-content shadow leading-tight\"\n                    *ngIf=\"is_concierge && plate_number\"\n                >\n                    <div\n                        class=\"text-[0.625rem] w-full text-center pt-1 whitespace-nowrap font-medium\"\n                    >\n                        Plate Number\n                    </div>\n                    <div class=\"font-mono pb-1 w-full text-center\">\n                        {{ plate_number || 'ABC3' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .triangle {\n                width: 0px;\n                height: 0px;\n                border-style: solid;\n                border-width: 0.5rem 0.5rem 0 0;\n                border-color: currentColor transparent transparent transparent;\n                transform: rotate(0deg);\n            }\n        `,\n    ],\n})\nexport class ExploreParkingInfoComponent {\n    public readonly status =\n        this._data.assigned_to === this._data.user\n            ? 'reserved'\n            : this._data.status;\n    public readonly user = this._data.user;\n    public readonly name = this._data.name;\n    public readonly map_id = this._data.map_id;\n    public readonly plate_number = this._data.plate_number;\n\n    public get is_concierge() {\n        return this._settings.app_name.toLowerCase().includes('concierge');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _data: ParkingSpaceExtended,\n        private _element: ElementRef<HTMLDivElement>,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { StaffUser } from '@placeos/users';\nimport { PlaceZone, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ParkingService } from 'libs/bookings/src/lib/parking.service';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n    zone?: PlaceZone;\n    groups?: string[];\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n    public on_book: (ParkingSpace) => void = null;\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now())\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now())\n                      ),\n                      type: 'parking',\n                      zones: bld?.id,\n                  })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly user_events = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users: Record<string, string> = {};\n    private _plate_numbers: Record<string, string> = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n        this._parking.users,\n    ]).pipe(\n        map(([events, spaces, users]) => {\n            const available = spaces.filter((_) => {\n                const event = events.find((e) => e.asset_id === _.id);\n                const assigned = `${\n                    event?.user_email || _.assigned_to || ''\n                }`.toLowerCase();\n                const user = users.find(\n                    (u) => u.email.toLowerCase() === assigned.toLowerCase()\n                );\n                this._users[_.id] = assigned;\n                this._plate_numbers[_.id] = user?.plate_number || undefined;\n                return !assigned;\n            });\n            this._updateParkingSpaces(spaces, available);\n            return available;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _parking: ParkingService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription('spaces', this.available_spaces.subscribe());\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n    }\n\n    public startPolling() {\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n        this._poll.next(Date.now());\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private async _updateParkingSpaces(\n        spaces: ParkingSpace[],\n        available: ParkingSpace[]\n    ) {\n        const styles = {};\n        const features = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        const assigned_space = await this._parking.assigned_space\n            .pipe(take(1))\n            .toPromise();\n        const deny_parking_access = await this._parking.deny_parking_access\n            .pipe(take(1))\n            .toPromise();\n        const booked_space = await this._parking.booked_space\n            .pipe(take(1))\n            .toPromise();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                location: `${space.map_id}`,\n                content: ExploreParkingInfoComponent,\n                z_index: 20,\n                hover: true,\n                data: {\n                    ...space,\n                    user: this._users[space.id],\n                    plate_number: this._plate_numbers[space.id],\n                    status,\n                },\n            });\n            if (!can_book) continue;\n            const book_fn = async () => {\n                if (this.on_book) return this.on_book(space);\n                if (deny_parking_access) {\n                    return notifyError(\n                        `Your user account has been denied parking access to ${\n                            space.zone?.display_name || space.zone?.name\n                        }.`\n                    );\n                }\n                if (assigned_space) {\n                    return notifyError(\n                        `You are already assigned to parking space \"${\n                            space.name || space.id\n                        }\".`\n                    );\n                }\n                if (booked_space?.find((_) => _.id === space.id)) {\n                    return notifyError(\n                        `You already have a parking space booked for the selected time.`\n                    );\n                }\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    if (e === 'User cancelled') throw e;\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setFeatures('parking', features);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([])\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    } as SearchResult)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'maps_features',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n        this._maps_people_search,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    } as any)\n                            )\n                        )\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ];\n                results.sort((a, b) => a.name.localeCompare(b.name));\n                return results;\n            }\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n    ExploreParkingInfoComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'accessibility-controls',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"setDarkMode(!dark_mode)\"\n        >\n            <div>Dark Mode</div>\n            <mat-slide-toggle\n                [ngModel]=\"dark_mode\"\n                (ngModelChange)=\"setDarkMode($event)\"\n            ></mat-slide-toggle>\n        </button>\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"applySetting('accessible', !accessible)\"\n        >\n            <div>Text Size</div>\n            <mat-slide-toggle\n                [ngModel]=\"accessible\"\n                (ngModelChange)=\"applySetting('accessible', $event)\"\n            ></mat-slide-toggle>\n        </button>\n        <div class=\"flex items-center pl-2 space-x-4\" *ngIf=\"accessible\">\n            <div class=\"text-sm\">A</div>\n            <mat-slider\n                class=\"flex-1 w-px min-w-0 text-[16px]\"\n                [min]=\"10\"\n                [max]=\"24\"\n                [step]=\"2\"\n            >\n                <input\n                    matSliderThumb\n                    class=\"text-[16px]\"\n                    [ngModel]=\"font_size\"\n                    (ngModelChange)=\"applySetting('font_size', $event)\"\n                />\n            </mat-slider>\n            <div class=\"text-2xl\">A</div>\n            <div\n                class=\"text-base py-1 px-2 rounded bg-base-300 text-base-content my-2\"\n            >\n                {{ font_size }}px\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AccessibilityControlsComponent extends AsyncHandler {\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public setDarkMode(state: boolean) {\n        this.timeout(\n            'dark_mode',\n            () => {\n                const theme = this._settings.get('theme');\n                if (state && theme !== 'dark') this._settings.setTheme('dark');\n                else if (!state && theme === 'dark')\n                    this._settings.setTheme('light');\n            },\n            100\n        );\n    }\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    flatten,\n    log,\n    MapsPeopleService,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n    VirtualKeyboardComponent,\n} from '@placeos/components';\nimport {\n    ExploreDesksService,\n    ExploreParkingService,\n    ExploreSpacesService,\n    ExploreStateService,\n    ExploreZonesService,\n} from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { Point } from '@placeos/svg-viewer';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { startOfMinute } from 'date-fns';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { first, map, take, tap } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-explore]',\n    template: `\n        <div\n            topbar\n            class=\"relative flex items-center justify-between px-4 py-2 border-b border-base-300 bg-base-100 text-base-content\"\n        >\n            <a matRipple routerLink=\"/\" class=\"text-2xl rounded p-2\">\n                Place<span class=\"text-primary\">OS</span>\n            </a>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 right-2 flex items-center\"\n            >\n                <explore-search *ngIf=\"can_search\"></explore-search>\n                <button\n                    icon\n                    matRipple\n                    customTooltip\n                    [content]=\"accessibility_controls\"\n                    class=\"bg-base-200 flex sm:hidden\"\n                >\n                    <app-icon>accessible</app-icon>\n                </button>\n                <ng-template #accessibility_controls>\n                    <div class=\"bg-base-100 rounded p-2 w-[18rem]\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <ng-container *ngIf=\"(levels | async)?.length || legend.length\">\n            <div\n                options\n                class=\"flex sm:hidden items-center bg-base-content text-base-100 p-2 space-x-2\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"levelMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #levelMenu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            *ngFor=\"let lvl of levels | async\"\n                            (click)=\"setLevel(lvl)\"\n                        >\n                            {{ lvl.display_name || lvl.name }}\n                        </button>\n                    </mat-menu>\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"legendMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #legendMenu=\"matMenu\">\n                        <div\n                            class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                            *ngFor=\"let value of legend\"\n                        >\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [style.background-color]=\"value.color\"\n                            ></div>\n                            <div class=\"text-left opacity-60\">\n                                {{ value.name }}\n                            </div>\n                        </div>\n                    </mat-menu>\n                </ng-container>\n            </div>\n        </ng-container>\n        <div class=\"flex flex-1 h-1/2\">\n            <div\n                sidebar\n                class=\"w-[20rem] hidden sm:block bg-base-100 text-base-content border-r border-base-300 px-2 py-4\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_levels = !show_levels\"\n                    >\n                        <app-icon class=\"text-2xl\">corporate_fare</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_levels\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_levels ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <button\n                                *ngFor=\"let lvl of levels | async\"\n                                btn\n                                matRipple\n                                class=\"clear hover:bg-base-200 hover:opacity-100 w-full\"\n                                [class.opacity-30]=\"\n                                    lvl.id !== (level | async)?.id\n                                \"\n                                (click)=\"setLevel(lvl)\"\n                            >\n                                <div class=\"text-left w-full\">\n                                    {{ lvl.display_name || lvl.name }}\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_legend = !show_legend\"\n                    >\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_legend\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_legend ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <div\n                                class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                                *ngFor=\"let value of legend\"\n                            >\n                                <div\n                                    class=\"h-3 w-3 rounded-full\"\n                                    [style.background-color]=\"value.color\"\n                                ></div>\n                                <div class=\"text-left opacity-60\">\n                                    {{ value.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <button\n                    btn\n                    matRipple\n                    class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                    (click)=\"show_accessibility = !show_accessibility\"\n                >\n                    <app-icon class=\"text-2xl\">accessible</app-icon>\n                    <div class=\"flex-1 text-left font-medium\">\n                        Accessibility\n                    </div>\n                    <app-icon class=\"text-2xl\">{{\n                        show_accessibility\n                            ? 'keyboard_arrow_up'\n                            : 'keyboard_arrow_down'\n                    }}</app-icon>\n                </button>\n                <div\n                    class=\"px-8\"\n                    [@show]=\"show_accessibility ? 'show' : 'hide'\"\n                >\n                    <div class=\" py-4 space-y-2\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </div>\n                <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n            </div>\n            <div class=\"relative flex-1 h-full\">\n                <interactive-map\n                    [src]=\"url | async\"\n                    [zoom]=\"(positions | async)?.zoom\"\n                    [center]=\"(positions | async)?.center\"\n                    (zoomChange)=\"updateZoom($event)\"\n                    (centerChange)=\"updateCenter($event)\"\n                    [styles]=\"styles | async\"\n                    [features]=\"features | async\"\n                    [actions]=\"actions | async\"\n                    [labels]=\"labels | async\"\n                    [options]=\"{ controls: true }\"\n                    [focus]=\"locate\"\n                ></interactive-map>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: var(--b2);\n            }\n\n            hr {\n                margin-top: 0.5rem !important;\n                margin-bottom: 0.5rem !important;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        SpacePipe,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    public show_levels: boolean = true;\n    public show_legend: boolean = false;\n    public show_accessibility: boolean = false;\n    public legend = [\n        { id: 'free', name: 'Space Available', color: '#43a047' },\n        { id: 'busy', name: 'Space In Use', color: '#e53935' },\n        { id: 'pending', name: 'Space Pending', color: '#ffb300' },\n        { id: 'not-bookable', name: 'Space Not-bookable', color: '#ccc' },\n    ];\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, building]) => {\n            return (\n                (this._settings.get('app.use_region')\n                    ? flatten(\n                          this._org.buildings\n                              .filter((bld) => region.id === bld.parent_id)\n                              .map((bld) =>\n                                  this._org.levelsForBuilding(bld).map((_) => ({\n                                      ..._,\n                                      display_name: `${bld.display_name} - ${_.display_name}`,\n                                  }))\n                              )\n                      )\n                    : this._org.levelsForBuilding(building)) || []\n            );\n        }),\n        tap((l) => console.log('Levels:', l))\n    );\n    public readonly level = this._state.level;\n\n    /** Application logo to display */\n    public get logo() {\n        return this._settings.get('theme') === 'dark'\n            ? this._settings.get('app.logo_dark')\n            : this._settings.get('app.logo_light');\n    }\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get hide_zones() {\n        return this._settings.get('app.hide_zones');\n    }\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public locate = '';\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    public get can_search() {\n        return !!this._settings.get('app.explore.search_enabled');\n    }\n\n    public readonly use_mapsindoors$ = this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        if (\n            location.hash.includes('public=true') ||\n            location.search.includes('public=true')\n        ) {\n            this._state.setOptions({ is_public: true });\n        }\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this._desks.setOptions({ custom: true });\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        this.resetKiosk(false);\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.subscription(\n            'level',\n            this._state.level.subscribe(() =>\n                this.timeout('update_location', () => {\n                    this._state.setFeatures('_located', []);\n                })\n            )\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    log('Explore', 'Level changed to:', params.get('level'));\n                    this._state.setLevel(params.get('level'));\n                    const level = this._org.levelWithID([params.get('level')]);\n                    if (!level) return;\n                    const bld = this._org.buildings.find(\n                        (_) => level.parent_id === _.id\n                    );\n                    if (!bld) return;\n                    this._org.building = bld;\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    log('Explore', 'Focusing on space:', params.get('space'));\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    log('Explore', 'Focusing on user:', params.get('user'));\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('feature')) {\n                    log(\n                        'Explore',\n                        'Focusing on feature:',\n                        params.get('feature')\n                    );\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('feature'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else if (params.has('locate')) {\n                    log(\n                        'Explore',\n                        'Focusing on location:',\n                        params.get('locate')\n                    );\n                    this.locate = params.get('locate');\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('locate'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    public resetKiosk(navigate = true) {\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n        if (navigate) this._router.navigate(['/']);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { SharedComponentsModule } from './components/shared-components.module';\n\nimport { ExploreComponent } from 'apps/map-kiosk/src/app/explore.component';\nimport { ExploreLevelSelectComponent } from 'apps/map-kiosk/src/app/explore-level-select.component';\nimport { AccessibilityControlsComponent } from 'apps/map-kiosk/src/app/accessibility-controls.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        ExploreLevelSelectComponent,\n        AccessibilityControlsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}