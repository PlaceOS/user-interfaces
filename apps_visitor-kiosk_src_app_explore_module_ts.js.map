{"version":3,"file":"apps_visitor-kiosk_src_app_explore_module_ts.js","mappings":"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","names":["i0","ctx_r0","temp","ctx_r1","humidity","ExploreSensorInfoComponent","constructor","_details","this","static","t","MAP_FEATURE_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","ExploreZonesService","AsyncHandler","_state","_org","_settings","super","_statuses","_location","_capacity","_draw","_points","_features","_bind","level","pipe","map","lvl","system_id","binding","getModule","id","subscription","listen","subscribe","d","parseData","bind","init","_this","_asyncToGenerator","initialised","first","_","toPromise","zone_metadata","Promise","all","levels","bld","showMetadata","zone","areas","details","area","capacity","hide_label","label_location","draw_polygon","properties","coordinates","geometry","length","getCenterPoint","get","updateStatus","data","value","labels","features","filled","count","area_id","content","temperature","people_count","people_count_sum","queue_size","counter","push","location","z_index","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","track_id","MapPolygonComponent","color","points","fill","opacity","setFeatures","setStyles","i1","i2","i3","Yz7","factory","ɵfac","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","resource","name","map_id","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r4","ctx_r3","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_7_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","ctx_r4","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","ctx_r8","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","ctx_r2","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_1","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","_r1","ExploreDesksService","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","active_building","filter","switchMap","catchError","of","Array","shareReplay","desk_list","debounceTime","i","j","Desk","e","tap","processBindingChange","_booking_list","combineLatest","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","zones","bookings","next","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","options","getValue","devices","v","at_location","signs_of_life","departments","desk","staff_name","department","processDevices","timeout","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","i18n_0","ExploreSearchService","_emergency_contacts","_filter","_loading","emergency_contacts","asObservable","_role_assigned_contacts","contacts","_user_search","q","search_fn","_space_search","querySystems","organisation","Space","levelWithID","_points_of_interest","listChildMetadata","building","item","metadata","points_of_interest","poi","search_results","spaces","users","roled_contacts","search","toLowerCase","results","unique","display_name","s","u","roles","is_role","sort","a","b","localeCompare","loading","queryUsers","authority_id","authority","searchStaff","moduleFromMetadata","contacts_map","setFilter","str","providedIn","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","tmp_0_0","ExploreSearchComponent","checkClick","event","_el","contains","target","show","_input_el","blur","_search","_router","_route","search_str","setItem","Object","select","onTouch","showSearch","focus","closeSearch","query","navigate","relativeTo","queryParams","viewQuery","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","_r3","_r2","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","lvl_r1","$implicit","setLevel","number","ExploreLevelSelectComponent","active_levels","ExploreLevelSelectComponent_button_1_Template","_r5","updateZoom","updateCenter","url","tmp_1_0","tmp_2_0","styles","_c1","_r9","toggleZones","ExploreComponent_div_13_div_5_Template","can_search","disable","tmp_3_0","ExploreComponent","logo","time","startOfMinute","hide_zones","enabled","_s","_desks","_zones","_spaces","_space_pipe","_maps","reset_delay","map_url","map_styles","map_positions","map_features","map_actions","map_labels","onMouse","resetKiosk","o","use_mapsindoors$","is_initialised$","VirtualKeyboardComponent","localStorage","getItem","queryParamMap","params","has","locateSpace","showStaff","locateUser","MapPinComponent","space","transform","feature","locate_details","module","locations","MapLocation","indexOf","pos","MapRadiusComponent","radius","document","activeElement","closeAll","i6","i7","hostBindings","ExploreSpacesService","SpacePipe","ExploreComponent_i_map_6_Template","ExploreComponent_indoor_maps_8_Template","ExploreComponent_explore_search_12_Template","ExploreComponent_div_13_Template","_c2","src","ROUTES","path","component","AppExploreModule","RouterModule","forChild","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/map-kiosk/src/app/explore-level-select.component.ts","./apps/map-kiosk/src/app/explore.component.ts","./apps/visitor-kiosk/src/app/explore.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...roled_contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).roles[0] || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-base-100 m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'explore-level-select',\n    template: `\n        <div\n            class=\"m-2 rounded overflow-hidden bg-base-100 shadow border border-solid border-base-300\"\n        >\n            <button\n                *ngFor=\"let lvl of levels | async\"\n                class=\"flex flex-col items-center justify-center h-16 w-16 p-2 border-none\"\n                [class.active]=\"lvl.id === (level | async)?.id\"\n                (click)=\"setLevel(lvl)\"\n                matRipple\n            >\n                <div class=\"text-2xl\">{{ lvl.number }}</div>\n                <p class=\"text-sm whitespace-nowrap m-0\">\n                    {{ lvl.display_name || lvl.name }}\n                </p>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            .active {\n                background: var(--s) !important;\n                color: #fff !important;\n            }\n\n            button:not(:first-child) {\n                border-top: 1px solid var(--b3) !important;\n            }\n        `,\n    ],\n})\nexport class ExploreLevelSelectComponent {\n    public readonly levels = this._org.active_levels;\n    public readonly level = this._state.level;\n\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService\n    ) {}\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n        console.log('Levels:', levels, this._org.building);\n    }\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    InjectMapApiService,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n    VirtualKeyboardComponent,\n} from '@placeos/components';\nimport {\n    ExploreDesksService,\n    ExploreSpacesService,\n    ExploreStateService,\n    ExploreZonesService,\n} from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { startOfMinute } from 'date-fns';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-explore]',\n    template: `\n        <a\n            class=\"absolute top-0 left-0 bg-base-100 rounded-br-2xl p-4 z-10 shadow border-b border-r border-base-200\"\n            [routerLink]=\"['/']\"\n        >\n            <img class=\"w-32\" [src]=\"logo?.src\" />\n        </a>\n        <div\n            class=\"absolute top-0 left-1/2 -translate-x-1/2 bg-base-100 rounded-b-2xl px-4 pb-4 pt-3 z-10 shadow border-b border-r border-base-200 text-white\"\n        >\n            {{ time | date: 'fullDate' }}\n        </div>\n        <!-- <explore-map-stack class=\"z-0\"></explore-map-stack> -->\n        <div class=\"absolute inset-0\">\n            <i-map\n                *ngIf=\"!(use_mapsindoors$ | async)\"\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async)?.zoom\"\n                [center]=\"(positions | async)?.center\"\n                (zoomChange)=\"updateZoom($event)\"\n                (centerChange)=\"updateCenter($event)\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [labels]=\"labels | async\"\n            ></i-map>\n            <indoor-maps\n                *ngIf=\"use_mapsindoors$ | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n                [custom_coordinates]=\"{\n                    latitude: 30.3603774 ,\n                    longitude:  -97.7426772,\n                }\"\n            ></indoor-maps>\n        </div>\n        <explore-zoom-controls\n            class=\"absolute top-1/2 transform -translate-y-1/2 right-0\"\n        ></explore-zoom-controls>\n        <explore-level-select\n            class=\"absolute left-1 top-1/2 transform -translate-y-1/2 z-10\"\n        ></explore-level-select>\n        <explore-search\n            *ngIf=\"can_search\"\n            class=\"absolute top-1 right-1\"\n        ></explore-search>\n        <div\n            name=\"zones\"\n            class=\"p-2 bg-base-100 border border-base-200 absolute right-1 m-2 rounded flex flex-col items-center space-y-2\"\n            [class.top-2]=\"!can_search\"\n            [class.top-16]=\"can_search\"\n            *ngIf=\"!hide_zones\"\n        >\n            <div class=\"flex items-center\">\n                Zones\n                <mat-slide-toggle\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                zone-legend\n                *ngIf=\"!(options | async)?.disable?.includes('zones')\"\n                class=\"space-y-2\"\n            >\n                <div class=\"font-medium\">\n                    Zone Usage\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"h-3 w-3 rounded-full bg-success\"></div>\n                        <div class=\"w-20 text-center\">0 ~ 50%</div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"h-3 w-3 rounded-full bg-warning\"></div>\n                        <div class=\"w-20 text-center\">51 ~ 75%</div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"h-3 w-3 rounded-full bg-error\"></div>\n                        <div class=\"w-20 text-center\">76 ~ 100%</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"absolute bottom-2 right-2 p-2 rounded bg-base-100 shadow border border-base-200\"\n        >\n            <div class=\"font-medium\">Legend</div>\n            <div class=\"flex items-center space-x-2 p-2\">\n                <div class=\"h-3 w-3 rounded-full bg-success\"></div>\n                <div class=\"text-center\">Space Available</div>\n            </div>\n            <div class=\"flex items-center space-x-2 rounded bg-base-200 p-2\">\n                <div class=\"h-3 w-3 rounded-full bg-error\"></div>\n                <div class=\"text-center\">Space In Use</div>\n            </div>\n            <div class=\"flex items-center space-x-2 rounded bg-base-200 p-2\">\n                <div class=\"h-3 w-3 rounded-full bg-warning\"></div>\n                <div class=\"text-center\">Space Pending</div>\n            </div>\n            <div class=\"flex items-center space-x-2 p-2\">\n                <div class=\"h-3 w-3 rounded-full bg-base-300\"></div>\n                <div class=\"text-center\">Space Not-bookable</div>\n            </div>\n        </div>\n        <!-- <footer-menu class=\"w-full\"></footer-menu> -->\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: var(--b2);\n            }\n\n            @media screen and (max-height: 640px) {\n                explore-level-select {\n                    transform: translateY(0) !important;\n                    top: auto !important;\n                    bottom: 0 !important;\n                }\n            }\n\n            @media screen and (orientation: landscape) {\n                explore-level-select {\n                    transform: translateY(0) !important;\n                    top: auto !important;\n                    bottom: 0 !important;\n                }\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        SpacePipe,\n    ],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n\n    /** Application logo to display */\n    public get logo() {\n        return this._settings.get('theme') === 'dark'\n            ? this._settings.get('app.logo_dark')\n            : this._settings.get('app.logo_light');\n    }\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get hide_zones() {\n        return this._settings.get('app.hide_zones');\n    }\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    public get can_search() {\n        return !!this._settings.get('app.explore.search_enabled');\n    }\n\n    public readonly use_mapsindoors$ = this._maps.is_initialised$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this._desks.setOptions({ custom: true });\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        this.resetKiosk();\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.subscription(\n            'level',\n            this._state.level.subscribe(() =>\n                this.timeout('update_location', () => {\n                    this._state.setFeatures('_located', []);\n                })\n            )\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('feature')) {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('feature'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    public resetKiosk() {\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { SharedComponentsModule } from './components/shared-components.module';\n\nimport { ExploreComponent } from 'apps/map-kiosk/src/app/explore.component';\nimport { ExploreLevelSelectComponent } from 'apps/map-kiosk/src/app/explore-level-select.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [ExploreComponent, ExploreLevelSelectComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}