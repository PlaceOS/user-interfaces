{"version":3,"file":"apps_visitor-kiosk_src_app_explore_module_ts.js","mappings":"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","names":["i0","ctx_r0","temp","ctx_r1","humidity","ExploreSensorInfoComponent","constructor","_details","this","static","t","MAP_FEATURE_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","ExploreZonesService","AsyncHandler","_state","_org","_settings","super","_area_list","_statuses","_count_key","_location","_label_location","_capacity","_draw","_points","_features","_bind","combineLatest","active_building","level","options","pipe","filter","bld","lvl","is_public","map","_","system_id","binding","bind_areas","getModule","id","bind_zone","zones","listen","debounceTime","a","z","value","location","subscription","subscribe","l","parseData","bind","init","_this","_asyncToGenerator","initialised","first","toPromise","zone_metadata","Promise","all","levels","showMetadata","zone","areas","details","area","capacity","hide_label","label_location","draw_polygon","area_count_key","properties","coordinates","geometry","length","getCenterPoint","get","push","map_id","updateStatus","labels","features","area_id","filled","at_location","content","count","temperature","people_count","people_count_sum","queue_size","counter","z_index","track_id","data","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","MapPolygonComponent","color","points","fill","opacity","setFeatures","setStyles","i1","i2","i3","Yz7","factory","ɵfac","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","resource","name","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r4","ctx_r3","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_7_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","ctx_r4","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","ctx_r8","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_0","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","_r2","ExploreDesksService","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","switchMap","catchError","of","Array","shareReplay","desk_list","i","j","Desk","e","tap","d","processBindingChange","_booking_list","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","bookings","next","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","getValue","devices","v","signs_of_life","departments","desk","staff_name","department","processDevices","timeout","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","can_book","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","forEach","event","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","ExploreParkingService","_poll","asObservable","active_levels","tags","events","startOfMinute","endOfMinute","existing_event","week_events","spaces","forkJoin","s","flatten","active_spaces","available_spaces","assigned","user_name","week_availablility","availability","day","day_events","isSameDay","available","_updateParkingSpaces","interval","styles","space","zoom_level","active_level","ExploreSearchService","_maps_people","_emergency_contacts","_filter","_loading","emergency_contacts","_role_assigned_contacts","contacts","_user_search","q","search_fn","_space_search","querySystems","organisation","Space","levelWithID","_maps_people_search","available$","mapsindoors","services","LocationsService","getLocations","externalId","roomId","floorName","_points_of_interest","listChildMetadata","building","item","metadata","points_of_interest","poi","search_results","users","roled_contacts","mapspeople_items","search","toLowerCase","results","display_name","u","roles","role","is_role","sort","b","localeCompare","loading","queryUsers","authority_id","authority","searchStaff","moduleFromMetadata","contacts_map","setFilter","str","providedIn","option_r8","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","tmp_0_0","ExploreSearchComponent","checkClick","_el","contains","target","show","_input_el","blur","_search","_router","_route","search_str","right_size","setItem","Object","select","onTouch","checkButtonPosition","focusInput","focus","showSearch","closeSearch","query","navigate","relativeTo","queryParams","window_width","window","innerWidth","button_rect","_button_el","getBoundingClientRect","width","viewQuery","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","_r1","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","applySetting","font_size","AccessibilityControlsComponent","n","saveUserSetting","dark_mode","can_change_dark_mode","accessible","setDarkMode","state","theme","setTheme","AccessibilityControlsComponent_div_8_Template","lvl_r10","_r12","$implicit","ctx_r11","setLevel","ExploreComponent_ng_container_13_ng_container_2_button_8_Template","_r8","value_r15","ExploreComponent_ng_container_13_ng_container_4_div_8_Template","_r13","legend","ExploreComponent_ng_container_13_ng_container_2_Template","ExploreComponent_ng_container_13_ng_container_4_Template","lvl_r17","_r19","ctx_r18","ctx_r16","_r21","ctx_r20","show_levels","ExploreComponent_ng_container_17_button_10_Template","value_r23","_r25","ctx_r24","show_legend","ExploreComponent_ng_container_19_div_10_Template","ExploreComponent","logo","time","hide_zones","updateZoom","setPositions","positions","center","updateCenter","toggleZones","enabled","disable","unique","can_search","_s","_desks","_zones","_parking","_spaces","_space_pipe","_maps","reset_delay","show_accessibility","active_region","region","buildings","levelsForBuilding","url","map_url","map_styles","map_positions","map_features","map_actions","map_labels","locate","onMouse","resetKiosk","o","use_mapsindoors$","hash","VirtualKeyboardComponent","localStorage","getItem","queryParamMap","params","has","locateSpace","showStaff","locateUser","MapPinComponent","transform","feature","locate_details","module","locations","MapLocation","indexOf","pos","MapRadiusComponent","radius","document","activeElement","closeAll","i6","i7","hostBindings","ExploreSpacesService","SpacePipe","ExploreComponent_explore_search_6_Template","ExploreComponent_ng_template_11_Template","ExploreComponent_ng_container_13_Template","ExploreComponent_ng_container_17_Template","ExploreComponent_ng_container_19_Template","tmp_2_0","tmp_3_0","tmp_8_0","tmp_9_0","_c1","ANIMATION_SHOW_CONTRACT_EXPAND","ROUTES","path","component","AppExploreModule","RouterModule","forChild","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/map-kiosk/src/app/accessibility-controls.component.ts","./apps/map-kiosk/src/app/explore.component.ts","./apps/visitor-kiosk/src/app/explore.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { combineLatest } from 'rxjs';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ])\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l))\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                ? 'free'\n                : filled < 0.75\n                ? 'pending'\n                : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        temp: zone.temperature,\n                        humidity: zone.humidity,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        tap(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id })\n                            )\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    private _users = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => {\n                const assigned =\n                    events.find((e) => e.asset_id === _.id)?.user_name ||\n                    _.assigned_to;\n                this._users[_.id] = assigned;\n                return !assigned;\n            })\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const features = [];\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                track_id: `parking:hover:${space.map_id}`,\n                location: `${space.map_id}`,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                z_index: 20,\n                data: { ...space, user: this._users[space.id], status },\n            });\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 1.1,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([])\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    } as SearchResult)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'maps_features',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n        this._maps_people_search,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    } as any)\n                            )\n                        )\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ];\n                results.sort((a, b) => a.name.localeCompare(b.name));\n                return results;\n            }\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'accessibility-controls',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"setDarkMode(!dark_mode)\"\n        >\n            <div>Dark Mode</div>\n            <mat-slide-toggle\n                [ngModel]=\"dark_mode\"\n                (ngModelChange)=\"setDarkMode($event)\"\n            ></mat-slide-toggle>\n        </button>\n        <button\n            matRipple\n            class=\"flex items-center justify-between hover:bg-base-200 w-full p-2 rounded\"\n            (click)=\"applySetting('accessible', !accessible)\"\n        >\n            <div>Text Size</div>\n            <mat-slide-toggle\n                [ngModel]=\"accessible\"\n                (ngModelChange)=\"applySetting('accessible', $event)\"\n            ></mat-slide-toggle>\n        </button>\n        <div class=\"flex items-center pl-2 space-x-4\" *ngIf=\"accessible\">\n            <div class=\"text-sm\">A</div>\n            <mat-slider\n                class=\"flex-1 w-px min-w-0 text-[16px]\"\n                [min]=\"10\"\n                [max]=\"24\"\n                [step]=\"2\"\n            >\n                <input\n                    matSliderThumb\n                    class=\"text-[16px]\"\n                    [ngModel]=\"font_size\"\n                    (ngModelChange)=\"applySetting('font_size', $event)\"\n                />\n            </mat-slider>\n            <div class=\"text-2xl\">A</div>\n            <div\n                class=\"text-base py-1 px-2 rounded bg-base-300 text-base-content my-2\"\n            >\n                {{ font_size }}px\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AccessibilityControlsComponent extends AsyncHandler {\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public setDarkMode(state: boolean) {\n        this.timeout(\n            'dark_mode',\n            () => {\n                const theme = this._settings.get('theme');\n                if (state && theme !== 'dark') this._settings.setTheme('dark');\n                else if (!state && theme === 'dark')\n                    this._settings.setTheme('light');\n            },\n            100\n        );\n    }\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    flatten,\n    MapsPeopleService,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n    VirtualKeyboardComponent,\n} from '@placeos/components';\nimport {\n    ExploreDesksService,\n    ExploreParkingService,\n    ExploreSpacesService,\n    ExploreStateService,\n    ExploreZonesService,\n} from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { Point } from '@placeos/svg-viewer';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { startOfMinute } from 'date-fns';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { first, map, take, tap } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-explore]',\n    template: `\n        <div\n            topbar\n            class=\"relative flex items-center justify-between p-4 border-b border-base-300 bg-base-100 text-base-content\"\n        >\n            <h2 class=\"text-2xl\">Place<span class=\"text-primary\">OS</span></h2>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 right-2 flex items-center\"\n            >\n                <explore-search\n                    *ngIf=\"can_search && !(use_mapsindoors$ | async)\"\n                ></explore-search>\n                <button\n                    icon\n                    matRipple\n                    customTooltip\n                    [content]=\"accessibility_controls\"\n                    class=\"bg-base-200 flex sm:hidden\"\n                >\n                    <app-icon>accessible</app-icon>\n                </button>\n                <ng-template #accessibility_controls>\n                    <div class=\"bg-base-100 rounded p-2 w-[18rem]\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <ng-container *ngIf=\"(levels | async)?.length || legend.length\">\n            <div\n                options\n                class=\"flex sm:hidden items-center bg-base-content text-base-100 p-2 space-x-2\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"levelMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #levelMenu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            *ngFor=\"let lvl of levels | async\"\n                            (click)=\"setLevel(lvl)\"\n                        >\n                            {{ lvl.display_name || lvl.name }}\n                        </button>\n                    </mat-menu>\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear text-base-100\"\n                        [matMenuTriggerFor]=\"legendMenu\"\n                    >\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\"\n                            >keyboard_arrow_down</app-icon\n                        >\n                    </button>\n                    <mat-menu #legendMenu=\"matMenu\">\n                        <div\n                            class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                            *ngFor=\"let value of legend\"\n                        >\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [style.background-color]=\"value.color\"\n                            ></div>\n                            <div class=\"text-left opacity-60\">\n                                {{ value.name }}\n                            </div>\n                        </div>\n                    </mat-menu>\n                </ng-container>\n            </div>\n        </ng-container>\n        <div class=\"flex flex-1 h-1/2\">\n            <div\n                sidebar\n                class=\"w-[20rem] hidden sm:block bg-base-100 text-base-content border-r border-base-300 px-2 py-4\"\n            >\n                <ng-container *ngIf=\"(levels | async)?.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_levels = !show_levels\"\n                    >\n                        <app-icon class=\"text-2xl\">corporate_fare</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Level</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_levels\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_levels ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <button\n                                *ngFor=\"let lvl of levels | async\"\n                                btn\n                                matRipple\n                                class=\"clear hover:bg-base-200 hover:opacity-100 w-full\"\n                                [class.opacity-30]=\"\n                                    lvl.id !== (level | async)?.id\n                                \"\n                                (click)=\"setLevel(lvl)\"\n                            >\n                                <div class=\"text-left w-full\">\n                                    {{ lvl.display_name || lvl.name }}\n                                </div>\n                            </button>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <ng-container *ngIf=\"legend.length\">\n                    <button\n                        btn\n                        matRipple\n                        class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                        (click)=\"show_legend = !show_legend\"\n                    >\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"flex-1 text-left font-medium\">Legend</div>\n                        <app-icon class=\"text-2xl\">{{\n                            show_legend\n                                ? 'keyboard_arrow_up'\n                                : 'keyboard_arrow_down'\n                        }}</app-icon>\n                    </button>\n                    <div class=\"px-8\" [@show]=\"show_legend ? 'show' : 'hide'\">\n                        <div class=\"py-4 space-y-2\">\n                            <div\n                                class=\"flex items-center py-2 px-4 rounded hover:bg-base-200 w-full space-x-4\"\n                                *ngFor=\"let value of legend\"\n                            >\n                                <div\n                                    class=\"h-3 w-3 rounded-full\"\n                                    [style.background-color]=\"value.color\"\n                                ></div>\n                                <div class=\"text-left opacity-60\">\n                                    {{ value.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n                </ng-container>\n                <button\n                    btn\n                    matRipple\n                    class=\"flex items clear w-full space-x-4 hover:bg-base-200\"\n                    (click)=\"show_accessibility = !show_accessibility\"\n                >\n                    <app-icon class=\"text-2xl\">accessible</app-icon>\n                    <div class=\"flex-1 text-left font-medium\">\n                        Accessibility\n                    </div>\n                    <app-icon class=\"text-2xl\">{{\n                        show_accessibility\n                            ? 'keyboard_arrow_up'\n                            : 'keyboard_arrow_down'\n                    }}</app-icon>\n                </button>\n                <div\n                    class=\"px-8\"\n                    [@show]=\"show_accessibility ? 'show' : 'hide'\"\n                >\n                    <div class=\" py-4 space-y-2\">\n                        <accessibility-controls></accessibility-controls>\n                    </div>\n                </div>\n                <hr class=\"w-[calc(100%-4rem)] mx-auto\" />\n            </div>\n            <div class=\"relative flex-1 h-full\">\n                <interactive-map\n                    [src]=\"url | async\"\n                    [zoom]=\"(positions | async)?.zoom\"\n                    [center]=\"(positions | async)?.center\"\n                    (zoomChange)=\"updateZoom($event)\"\n                    (centerChange)=\"updateCenter($event)\"\n                    [styles]=\"styles | async\"\n                    [features]=\"features | async\"\n                    [actions]=\"actions | async\"\n                    [labels]=\"labels | async\"\n                    [options]=\"{ controls: true }\"\n                ></interactive-map>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: var(--b2);\n            }\n\n            hr {\n                margin-top: 0.5rem !important;\n                margin-bottom: 0.5rem !important;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        SpacePipe,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    public show_levels: boolean = true;\n    public show_legend: boolean = false;\n    public show_accessibility: boolean = false;\n    public legend = [\n        { id: 'free', name: 'Space Available', color: '#43a047' },\n        { id: 'busy', name: 'Space In Use', color: '#e53935' },\n        { id: 'pending', name: 'Space Pending', color: '#ffb300' },\n        { id: 'not-bookable', name: 'Space Not-bookable', color: '#ccc' },\n    ];\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, building]) => {\n            return (\n                (this._settings.get('app.use_region')\n                    ? flatten(\n                          this._org.buildings\n                              .filter((bld) => region.id === bld.parent_id)\n                              .map((bld) =>\n                                  this._org.levelsForBuilding(bld).map((_) => ({\n                                      ..._,\n                                      display_name: `${bld.display_name} - ${_.display_name}`,\n                                  }))\n                              )\n                      )\n                    : this._org.levelsForBuilding(building)) || []\n            );\n        }),\n        tap((l) => console.log('Levels:', l))\n    );\n    public readonly level = this._state.level;\n\n    /** Application logo to display */\n    public get logo() {\n        return this._settings.get('theme') === 'dark'\n            ? this._settings.get('app.logo_dark')\n            : this._settings.get('app.logo_light');\n    }\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get hide_zones() {\n        return this._settings.get('app.hide_zones');\n    }\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public locate = '';\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    public get can_search() {\n        return !!this._settings.get('app.explore.search_enabled');\n    }\n\n    public readonly use_mapsindoors$ = this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        if (\n            location.hash.includes('public=true') ||\n            location.search.includes('public=true')\n        ) {\n            this._state.setOptions({ is_public: true });\n        }\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this._desks.setOptions({ custom: true });\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        this.resetKiosk();\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.subscription(\n            'level',\n            this._state.level.subscribe(() =>\n                this.timeout('update_location', () => {\n                    this._state.setFeatures('_located', []);\n                })\n            )\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('feature')) {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('feature'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else if (params.has('locate')) {\n                    this.locate = params.get('locate');\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    public resetKiosk() {\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { SharedComponentsModule } from './components/shared-components.module';\n\nimport { ExploreComponent } from 'apps/map-kiosk/src/app/explore.component';\nimport { ExploreLevelSelectComponent } from 'apps/map-kiosk/src/app/explore-level-select.component';\nimport { AccessibilityControlsComponent } from 'apps/map-kiosk/src/app/accessibility-controls.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        ExploreLevelSelectComponent,\n        AccessibilityControlsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}