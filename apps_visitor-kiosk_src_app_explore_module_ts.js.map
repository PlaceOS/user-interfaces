{"version":3,"file":"apps_visitor-kiosk_src_app_explore_module_ts.js","mappings":"qhBAcYA,MAAA,UAAAA,CAGC,cACaA,MAAA,gBAAUA,QACpBA,MAAA,WAAcA,MAAA,GAAYA,gCAAZA,MAAA,GAAAA,MAAA,GAAAC,EAAAC,KAAA,sCAElBF,MAAA,UAAAA,CAGC,cACaA,MAAA,aAAOA,QACjBA,MAAA,WAAcA,MAAA,GAAeA,gCAAfA,MAAA,GAAAA,MAAA,GAAAG,EAAAC,SAAA,6BAElBJ,MAAA,UAAAA,CAGC,gBACwCA,MAAA,WAAKA,WAMnD,IAAMK,GAA0B,MAAjC,MAAOA,EAITC,YAA8CC,GAAAC,KAAAD,WAH9BC,KAAAN,KAAOM,KAAKD,SAASL,MAAQ,EAC7BM,KAAAJ,SAAWI,KAAKD,SAASH,UAAY,CAEoB,CAACK,SAAAD,KAAA,mBAAAE,iBAJjEL,GAA0BL,MAIfW,MAAgB,EAAAF,SAAAD,KAAA,UAAAI,EAAAC,IAAA,MAJ3BR,EAA0BS,UAAA,0BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,sgBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3B/BnB,MAAA,WAGIA,MAAA,EAAAqB,GAAA,YAAArB,CAMM,EAAAsB,GAAA,YANNtB,CAMM,EAAAuB,GAAA,aAcVvB,eAlBSA,MAAA,GAAAA,MAAA,OAAAoB,EAAAlB,MAOAF,MAAA,GAAAA,MAAA,OAAAoB,EAAAhB,UAMAJ,MAAA,GAAAA,MAAA,OAAAoB,EAAAlB,KAAA,uCASJG,CAA0B,mBCNhC,IAAMmB,EAAoB,MAA3B,MAAOA,UAA4BC,KA6BrCnB,YACYoB,EACAC,EACAC,GAERC,QAJQrB,KAAAkB,SACAlB,KAAAmB,OACAnB,KAAAoB,YA/BJpB,KAAAsB,UAA6B,GAC7BtB,KAAAuB,WAA8B,GAC9BvB,KAAAwB,UAA4B,GAC5BxB,KAAAyB,UAA6B,GAC7BzB,KAAA0B,MAA0B,GAC1B1B,KAAA2B,QAAuC,GACvC3B,KAAA4B,UAA6B,GAE7B5B,KAAA6B,SAAQC,MAAc,CAC1B9B,KAAKmB,KAAKY,gBACV/B,KAAKkB,OAAOc,QACbC,QACCC,KAAO,EAAEC,EAAKC,OAAWD,KAASC,IAAG,EACrCC,KAAI,EAAEC,EAAGF,MACLpC,KAAKsB,UAAY,GACjB,IAAIiB,EAAiBvC,KAAKmB,KAAKqB,QAAQ,mBACvC,IAAKD,EAAW,OAChB,MAAMC,KAAUC,OAAUF,EAAW,kBAAkBC,QACnD,GAAGJ,EAAIM,YAEX1C,KAAK2C,aACD,QACAH,EAAQI,SAASC,UAAWC,GAAM9C,KAAK+C,UAAUD,KAErD9C,KAAK2C,aAAa,UAAWH,EAAQQ,OAAM,IAU/ChD,KAAKiD,MACT,CAEaA,OAAI,IAAAC,EAAAlD,KAAA,SAAAmD,KAAA,kBACPD,EAAK/B,KAAKiC,YAAYnB,QAAKoB,KAAOf,GAAMA,IAAIgB,YAClD,MAAMC,QAAsBC,QAAQC,IAChCP,EAAK/B,KAAKuC,OAAOrB,IAAKF,MAClBwB,OAAaxB,EAAIO,GAAI,eAAeY,cAG5C,UAAWM,KAAQL,EAAe,CAC9B,MAAMM,EAASD,GAAME,SAAiBD,MACtC,GAAKA,EACL,UAAWE,KAAQF,EAAO,CACtB,MACIG,WACAC,aACAC,iBACAC,eACAC,kBACAL,EAAKM,YAAc,IACfC,eAAgBP,EAAKQ,UAAY,GACzCrB,EAAKzB,UAAUsC,EAAKrB,IAAMsB,GAAY,IACtCd,EAAK3B,WAAWwC,EAAKrB,IAAM0B,GAAkB,GAC7ClB,EAAK1B,UAAUuC,EAAKrB,KACD,IAAfuB,EACMC,IACCI,GAAaE,OACRC,GAAeH,GACf,MACN,KACVpB,EAAKxB,MAAMqC,EAAKrB,MACVyB,GACFjB,EAAK9B,UAAUsD,IAAI,iCACvBxB,EAAKvB,QAAQoC,EAAKrB,IAAM4B,GAAe,IAG/CpB,EAAKyB,eACLzB,EAAKP,aAAa,OAAQO,EAAKrB,MAAMgB,YAAa,EAnCrC,EAoCjB,CAEOE,UAAU6B,GACb,MAAMC,EAAQD,GAAMC,OAAS,GACvBC,EAAS,GACTC,EAAW,GAEjB,UAAWnB,KAAQiB,EAAO,CAOtB,MAAMG,EALFpB,EACI5D,KAAKuB,WAAWqC,EAAKqB,UACjBjF,KAAKoB,UAAUsD,IAAI,+BACnB,UAEY1E,KAAKyB,UAAUmC,EAAKqB,UAAY,KAGxD,GAFAjF,KAAKsB,UAAUsC,EAAKqB,SAChBD,EAAS,GAAM,OAASA,EAAS,IAAO,UAAY,QACnDhF,KAAKwB,UAAUoC,EAAKqB,SAAU,SACnC,IAAIC,EAAU,GACVtB,EAAKuB,QACLD,GAAW,GAAGtB,EAAKuB,OAAS,gBACT,IAAfvB,EAAKuB,MAAc,GAAK,SAG5BvB,EAAKwB,cACLF,GAAW,gBAAgBtB,EAAKwB,yBAChCxB,EAAKyB,aAAe,IACpBH,GAAW,GAAGtB,EAAK0B,oBACW,IAA1B1B,EAAK0B,iBAAyB,SAAW,cAE7C1B,EAAKhE,WAAUsF,GAAW,aAAatB,EAAKhE,eAC5CgE,EAAK2B,aAAYL,GAAW,eAAetB,EAAK2B,iBAChD3B,EAAK4B,UAASN,GAAW,UAAUtB,EAAK4B,aAC5CV,EAAOW,KAAK,CACRC,SAAU1F,KAAKwB,UAAUoC,EAAKqB,SAC9BC,UACAS,QAAS,MAGT3F,KAAKoB,UAAUsD,IAAI,uCAClBd,EAAKwB,aAAexB,EAAKhE,WAE1BmF,EAASU,KAAK,CACVC,SAAU1F,KAAKwB,UAAUoC,EAAKqB,SAC9BC,QAASrF,GACT+E,KAAM,CAAElF,KAAMkE,EAAKwB,YAAaxF,SAAUgE,EAAKhE,UAC/C+F,QAAS,KAIrB3F,KAAK4B,UAAYmD,EACZ/E,KAAKoB,UAAUsD,IAAI,sCACpB1E,KAAKkB,OAAO0E,UAAU,QAASd,GAEnC9E,KAAK2E,cACT,CAEQA,eACJ,MAAMkB,EAAY,GACZd,EAAW,GACXe,EAAU9F,KAAKoB,UAAUsD,IAAI,uBAAyB,GAC5D,UAAWqB,KAAW/F,KAAKsB,UAAW,CAClC,MAAM0E,EACFF,EAAQ,QAAQ9F,KAAKsB,UAAUyE,OAC/BD,EAAQ,GAAG9F,KAAKsB,UAAUyE,OAC1BE,IAAgB,GAAGjG,KAAKsB,UAAUyE,MAClC/F,KAAK0B,MAAMqE,GACXhB,EAASU,KAAK,CACVS,SAAU,QAAQH,IAClBL,SAAUjB,GAAezE,KAAK2B,QAAQoE,IACtCb,QAASiB,KACTvB,KAAM,CACFwB,MAAOJ,EACPK,OAAQrG,KAAK2B,QAAQoE,IAEzBJ,QAAS,KAGbE,EAAU,IAAIE,KAAa,CACvBO,KAAMN,EACNO,QAAS,IAIrBvG,KAAKkB,OAAOsF,YAAY,QAAS,IAAIzB,EAAU/E,KAAK4B,YACpD5B,KAAKkB,OAAOuF,UAAU,QAASZ,EACnC,CAAC5F,SAAAD,KAAA,mBAAAE,iBAhKQc,GAAmBxB,MAAAkH,KAAAlH,MAAAmH,KAAAnH,MAAAoH,MAAA,EAAA3G,SAAAD,KAAA,WAAAI,EAAAyG,IAAA,OAAnB7F,EAAmB8F,QAAnB9F,EAAmB+F,mBAAnB/F,CAAoB,KAmKjC,SAASyD,GAAe4B,GACpB,MAAMW,GAAyBX,GAAU,IAAIY,OACzC,CAACC,GAAIC,EAAGC,MAAC,CACLC,MAAOF,EAAID,EAAEG,MAAQF,EAAID,EAAEG,MAC3BC,MAAOH,EAAID,EAAEI,MAAQH,EAAID,EAAEI,MAC3BC,MAAOH,EAAIF,EAAEK,MAAQH,EAAIF,EAAEK,MAC3BC,MAAOJ,EAAIF,EAAEM,MAAQJ,EAAIF,EAAEM,QAE/B,CACIH,MAAO,IACPC,OAAO,IACPC,MAAO,IACPC,OAAO,MAGf,MAAO,CACHL,EAAGH,EAAKK,OAASL,EAAKM,MAAQN,EAAKK,OAAS,EAC5CD,EAAGJ,EAAKO,OAASP,EAAKQ,MAAQR,EAAKO,OAAS,EAEpD,wNCjMY/H,MAAA,UAAAA,CAGC,WAHDA,CAGC,WAEcA,MAAA,eAASA,QAChBA,MAAA,YAGIA,MAAA,GAKJA,mCALIA,MAAA,GAAAA,MAAA,IAAAG,EAAA8H,SAAAC,MAAA/H,EAAA8H,SAAAE,QAAA,gDAQZnI,MAAA,UAAAA,CAGC,UAHDA,CAGC,WAEcA,MAAA,UAAIA,QACXA,MAAA,4BAGJA,mFA/BRA,MAAA,YAKIA,MAAA,EAAAoI,GAAA,YAAApI,CAgBM,EAAAqI,GAAA,aAYNrI,MAAA,UAAAA,CAEC,UAFDA,CAEC,WAEcA,MAAA,UAAIA,QACXA,MAAA,oBACIA,MAAA,2CACJA,YAGRA,MAAA,UAAAA,CAEC,YAFDA,CAEC,YAEcA,MAAA,iBAAUA,QACjBA,MAAA,sBAEIA,MAAA,yBAAAsI,GAAAtI,MAAAuI,GAAA,MAAAC,EAAAxI,QAAA,OAAiBA,MAAAwI,EAAAC,KAAAC,WAAA,CAAAC,KAAAL,IAAiC,GAGrDtI,UAELA,MAAA,YAAAA,CAAkD,YACvCA,MAAA,eAAQA,QACfA,MAAA,0BASJA,0CAhEJA,MAAA,YAAAC,EAAAwI,MAIKzI,MAAA,GAAAA,MAAA,OAAAC,EAAAgI,UAiBAjI,MAAA,GAAAA,MAAA,OAAAC,EAAA2I,MAeiB5I,MAAA,GAAAA,MAAA,KAAAC,EAAA4I,YAWV7I,MAAA,GAAAA,MAAA,UAAAC,EAAAwI,KAAApD,MAAAsD,KAAA3I,CAA2B,iBAAAA,MAAA,GAAA8I,IAA3B9I,CAA2B,WAAAC,EAAA8I,eAU3B/I,MAAA,GAAAA,MAAA,cAAAgJ,EAAA/I,EAAAwI,KAAAvD,IAAA,cAAA8D,EAAA3D,MAAArF,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,UAAhCA,CAAgC,WAAAC,EAAA8I,gBAoBjD,IAAME,GAAyB,MAAhC,MAAOA,EAWT,iBAAWF,GACP,OAAOvI,KAAKoB,UAAUsD,IAAI,uBAC9B,CAEA5E,YAEY4I,EAQAtH,GARApB,KAAA0I,QAQA1I,KAAAoB,YAxBLpB,KAAAoI,KAAOpI,KAAK0I,MAAMN,KAClBpI,KAAAiI,KAAO,IAAIU,KAAU,CACxBC,KAAM,IAAIC,KAAY7I,KAAK0I,MAAME,MACjCT,KAAM,IAAIU,KAAY7I,KAAK0I,MAAMP,MACjCW,SAAU,IAAID,KAAY7I,KAAK0I,MAAMI,YAGzB9I,KAAAqI,WAAarI,KAAK0I,MAAMK,MACxB/I,KAAAyH,SAAWzH,KAAK0I,MAAMjB,QAiBnC,CAACxH,SAAAD,KAAA,mBAAAE,iBA1BKuI,GAAyBjJ,MAgBtBwJ,MAAexJ,MAAAkH,MAAA,EAAAzG,SAAAD,KAAA,UAAAI,EAAAC,IAAA,MAhBlBoI,EAAyBnI,UAAA,yBAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,w9BAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IArF9BnB,MAAA,aAAAA,CAAmD,QAC3CA,MAAA,uBAAiBA,QACrBA,MAAA,aAAAA,CAA8B,cAChBA,MAAA,WAAKA,YAGvBA,MAAA,EAAAyJ,GAAA,gBAqEAzJ,MAAA,aAAAA,CAEC,cAEOA,MAAA,gBACJA,iBAzECA,MAAA,GAAAA,MAAA,OAAAoB,EAAAqH,MAuEqBzI,MAAA,GAAAA,MAAA,mBAAAoB,EAAAqH,KAAApD,gGAOrB4D,CAAyB,6HClClBjJ,MAAA,SAAAA,CAGC,WACGA,MAAA,MAAgBA,QAASA,MAAA,GAC7BA,+BAD6BA,MAAA,GAAAA,MAAA,IAAAwI,EAAAkB,IAAA,gCAI7B1J,MAAA,SAAAA,CAMC,WACGA,MAAA,MAAyBA,QAASA,MAAA,GACtCA,+BADsCA,MAAA,GAAAA,MAAA,IAAA2J,EAAAC,aAAA,gCAEtC5J,MAAA,SAAAA,CAAgD,WAC5CA,MAAA,MAAeA,QAASA,MAAA,GAC5BA,+BAD4BA,MAAA,GAAAA,MAAA,IAAA6J,EAAAC,GAAA,gCAE5B9J,MAAA,SAAAA,CAAsD,WAClDA,MAAA,MAAiBA,QAASA,MAAA,GAC9BA,+BAD8BA,MAAA,GAAAA,MAAA,IAAA+J,EAAAC,KAAA,gCAE9BhK,MAAA,SAAAA,CAGC,WACGA,MAAA,MAAqBA,QACrBA,MAAA,GACJA,+BADIA,MAAA,GAAAA,MAAA,WAAAiK,EAAAb,KAAA,KAAAa,EAAAb,KAAAlB,QAAA,MAAA+B,EAAAb,KAAA,KAAAa,EAAAb,KAAAc,WAAAD,EAAAC,SAAA,gCAEJlK,MAAA,SAAAA,CAAsD,WAClDA,MAAA,MAAiBA,QAASA,MAAA,GAC9BA,+BAD8BA,MAAA,GAAAA,MAAA,IAAAmK,EAAAf,KAAAgB,KAAA,+CAtCtCpK,MAAA,WAGIA,MAAA,wBAAAA,MAAAqK,GAAA,MAAAC,EAAAtK,QAAA,OAAcA,MAAAsK,EAAAC,QAAO,GAErBvK,MAAA,WACAA,MAAA,WACIA,MAAA,EAAAwK,GAAA,WAMAxK,MAAA,MAAAA,CAAG,WAAAA,MAAA,MAAqBA,QAASA,MAAA,GAAeA,QAChDA,MAAA,MAAAA,CAAG,WAAAA,MAAA,OAAsBA,QAASA,MAAA,IAAeA,QACjDA,MAAA,GAAAyK,GAAA,WAAAzK,CAQI,GAAA0K,GAAA,WARJ1K,CAQI,GAAA2K,GAAA,WARJ3K,CAQI,GAAA4K,GAAA,WARJ5K,CAQI,GAAA6K,GAAA,YAiBR7K,kCA/BSA,MAAA,GAAAA,MAAA,OAAAG,EAAAuJ,MAAAvJ,EAAA2K,YAAAC,SAAA,QAI4B/K,MAAA,GAAAA,MAAA,IAAAG,EAAA6K,SAAA,KACChL,MAAA,GAAAA,MAAA,IAAAG,EAAA8K,UAAA,IAG7BjL,MAAA,GAAAA,MAAA,OAAAG,EAAAyJ,eAAAzJ,EAAA2K,YAAAC,SAAA,iBAOE/K,MAAA,GAAAA,MAAA,OAAAG,EAAA2J,KAAA3J,EAAA2K,YAAAC,SAAA,OAGE/K,MAAA,GAAAA,MAAA,OAAAG,EAAA6J,OAAA7J,EAAA2K,YAAAC,SAAA,SAKJ/K,MAAA,GAAAA,MAAA,OAAAG,EAAA+J,WAAA/J,EAAA2K,YAAAC,SAAA,aAKI/K,MAAA,GAAAA,MAAA,OAAAG,EAAAiJ,OAAAjJ,EAAA2K,YAAAC,SAAA,UArE7B,MAAMG,GAAQ,GAkGP,IAAMC,GAA2B,MAAlC,MAAOA,UAAmC1J,KAoB5C,eAAWqJ,GACP,OAAOtK,KAAKoB,UAAUsD,IAAI,mCAAqCgG,EACnE,CAGA,aAAWD,GACP,SAAOG,MAAqD,KAAhC5K,KAAKD,SAAS0K,WAAa,GAAW,CAC9DI,WAAW,GAEnB,CAMA,YAAWC,GACP,OAAgC,IAAzB9K,KAAKD,SAASyK,SAAiBxK,KAAK+K,IAC/C,CAEA,YAAWC,GACP,OAAOC,KAAKC,OACRC,MACqC,KAAhCnL,KAAKD,SAAS0K,WAAa,GAC5B,IAAIW,MAGhB,CAEA,kBAAWC,GACP,OAAOrL,KAAKgL,SAAW,GACjB,UACAhL,KAAKgL,SAAW,GAChB,UACA,SACV,CAEAlL,YACsCC,EAC1BqB,EACAkK,GAERjK,QAJkCrB,KAAAD,WAC1BC,KAAAoB,YACApB,KAAAsL,WAzDLtL,KAAA0J,SAAW,GAEF1J,KAAA4I,KAAO5I,KAAKD,SAAS6I,KAErB5I,KAAAkJ,IAAMlJ,KAAKD,SAASmJ,IAEpBlJ,KAAAoJ,aAAepJ,KAAKD,SAASqJ,aAE7BpJ,KAAAsJ,GAAKtJ,KAAKD,SAASuJ,GAEnBtJ,KAAAwJ,KAAOxJ,KAAKD,SAASyJ,KAErBxJ,KAAAwK,SAAWxK,KAAKD,SAASyK,UAAUe,QAAQ,GAE3CvL,KAAAwL,SAAWxL,KAAKD,SAASyL,UAAYxL,KAAKqL,eAEnDrL,KAAA+K,KAAO,CA4Cd,CAEOU,SAASC,EAAgB,GACxBA,EAAQ,IACZC,WAAW,KACP,MAAMC,EACF5L,KAAKsL,SAASO,cAAcC,eAAeA,cAC/C,IAAKF,EAAQ,OAAO5L,KAAKyL,WAAWC,GACpC,MAAMK,IACCC,SAASJ,EAAOK,MAAMC,IAAK,IAAM,IADlCH,IAECC,SAASJ,EAAOK,MAAME,KAAM,IAAM,IAEzCnM,KAAKoM,MAAQL,KAAc,GAAM,SAAW,MAC5C/L,KAAKqM,MAAQN,KAAc,GAAM,MAAQ,QACzC/L,KAAK2C,aACD,OACA3C,KAAKD,SAASuM,MAAMzJ,UAAWP,GAAOtC,KAAK+K,KAAOzI,GAAG,EAE1D,IACP,CAEaiK,WAAQ,IAAArJ,EAAAlD,KAAA,SAAAmD,KAAA,YACjB,GAAID,EAAKwG,SAAU,OACnB,MAAM8C,KAAM/J,OAAUS,EAAKnD,SAAS0M,OAAQ,oBAC5C,IAAKD,EAAK,OACVtJ,EAAKwG,SAAW,aAChB,MAAM5F,QAAgB0I,EACjBE,QAAQ,qBAAsB,CAACxJ,EAAKgG,MACpCyD,MAAOrK,GAAM,MAClBY,EAAKwG,SACD5F,GAAWA,EAAQ8I,YAAc9I,EAAQ8I,YAAc,EAAG,EAT7C,EAUrB,CAAC3M,SAAAD,KAAA,mBAAAE,iBA7FQyK,GAA0BnL,MAyDvBW,MAAgBX,MAAAkH,MAAAlH,aAAA,EAAAS,SAAAD,KAAA,UAAAI,EAAAC,IAAA,MAzDnBsK,EAA0BrK,UAAA,gCAAAyE,SAAA,CAAAvF,OAAAqN,MAAAvE,GAAA/H,MAAA,EAAAC,KAAA,EAAAC,YAAA,IAAAqM,yBArDJC,sFACAA,uFAHCA,iFAWAA,0FAGAA,gFAGAA,kFAMAA,qFAIAA,09BAjE5BvN,MAAA,UAAAA,CAIO,UAJPA,CAIO,aAWPA,MAAA,WAOIA,MAAA,+BAAcoB,EAAA2L,UAAU,GAE3B/M,QAEDA,MAAA,EAAAwN,GAAA,0BAAAxN,8BAvBIA,MAAA,WAAAoB,EAAAkK,SAAA,aAAAlK,EAAAkK,SAAA,MAUAtL,MAAA,GAAAA,MAAA,mBAAAoB,EAAA4K,UAIAhM,MAAA,GAAAA,MAAA,UAAAyN,EAAAzN,CAA0B,cAA1BA,CAA0B,YAAAoB,EAAAyL,MAA1B7M,CAA0B,YAAAoB,EAAAwL,MAA1B5M,CAA0B,2ZA4EzBmL,CAA2B,oBClEjC,IAAMuC,GAAoB,MAA3B,MAAOA,UAA4BjM,KAkJrCnB,YACYoB,EACAC,EACAC,EACA+L,EACAC,GAAkB,IAAAlK,EAE1B7B,QAAO6B,EAAAlD,KANCA,KAAAkB,SACAlB,KAAAmB,OACAnB,KAAAoB,YACApB,KAAAmN,YACAnN,KAAAoN,UAtJJpN,KAAAqN,QAAU,IAAIC,IAA0B,IACxCtN,KAAAuN,SAAW,IAAID,IAA6B,IAC5CtN,KAAAwN,UAAY,IAAIF,IAA0B,IAC1CtN,KAAAyN,eAAiB,IAAIH,IAA0B,IAC/CtN,KAAAsB,UAAoC,GACpCtB,KAAA0N,OAAiC,GACjC1N,KAAA2N,aAAuC,GAEvC3N,KAAA4N,YAAc,IAAIN,IAA0B,IAEpCtN,KAAA6N,cACZ7N,KAAKmB,KAAKY,gBAAgBE,QACtBC,KAAQC,KAAUA,IAAG,EACrB2L,KAAW3L,MACPwB,OAAaxB,EAAIO,GAAI,sBAAsBT,QACvC8L,KAAW,OAAMC,MAAG,CAAElK,QAAS,SAClC,EAELzB,KAAKC,GAAOA,GAAGwB,mBAAmBmK,MAAQ3L,EAAEwB,QAAU,KAAG,EACzDoK,KAAY,IAGJlO,KAAAmO,UAAYnO,KAAKkB,OAAOc,MAAMC,QAC1CmM,KAAa,KAAE,EACfN,KAAW1L,MACPuB,OAAavB,EAAIM,GAAI,SAAST,QAC1B8L,KAAW,OAAMC,MAAG,CAAElK,QAAS,OAAK,EACpCzB,KAAKgM,IACAA,GAAGvK,mBAAmBmK,MAAQI,EAAEvK,QAAU,IAAIzB,IAC1CiM,GACG,IAAIC,KAAK,IAAKD,EAAG1K,KAAMxB,SAGtC,EAEL2L,KAAYS,GAAM,KAAE,EACpBN,KAAY,IAGRlO,KAAA6B,MAAQ7B,KAAKkB,OAAOc,MAAMC,QAC9BmM,KAAa,MAAG,EAChBlM,KAAQI,KAAQA,IAAC,EACjBmM,KAAKrM,IACDpC,KAAKsB,UAAY,GACjB,MAAMiB,EAAYvC,KAAKmB,KAAKqB,QAAQ,mBACpC,IAAKD,EAAW,OAChB,IAAIC,KAAUC,OAAUF,EAAW,mBAAmBC,QAClDJ,EAAIM,IAEHF,IACLxC,KAAK2C,aACD,aACAH,EACKI,SACAC,UAAWC,GACR9C,KAAK0O,qBAAqB5L,GAAK,GAAIP,KAG/CvC,KAAK2C,aAAa,kBAAmBH,EAAQQ,QAAM,IAInDhD,KAAA2O,iBAAgB7M,MAAc,CAClC9B,KAAKuN,SACLvN,KAAKkB,OAAOc,QACbC,QACCC,KACI,EAAEI,EAAGF,MACAE,EAAEsM,SAAWtM,EAAE6F,QAAO0G,KAASzD,KAAK0D,OAAOC,cAAgB3M,IAAG,EAEvE0L,KAAU,EAAExL,EAAGN,MAAK,EACTgN,OAAc,CACjBpF,KAAM,OACNqF,gBAAcC,QAAYC,MAAW7M,EAAE6F,MAAQiD,KAAK0D,QACpDM,cAAYF,QAAYL,KAASvM,EAAE6F,MAAQiD,KAAK0D,QAChDO,MAAOrN,EAAMU,OAEpB,EACD0L,KAAa,MAAG,EAChBK,KAAKa,IACDtP,KAAKqN,QAAQkC,KAAKD,EAASjN,IAAKC,GAAMA,EAAEkN,WACxCxP,KAAK4N,YAAY2B,KACbD,EAASpN,OAAQI,GAAMA,EAAEmN,YAAYpN,IAAKC,GAAMA,EAAEkN,UAAS,IAElE,EACDtB,KAAY,IAGRlO,KAAA0P,iBAAgB5N,MAAc,CAClC9B,KAAKmO,UACLnO,KAAKqN,QACLrN,KAAKwN,UACLxN,KAAK4N,YACL5N,KAAKyN,eACLzN,KAAK6N,cACL7N,KAAKuN,WACNtL,QACCmM,KAAa,KAAE,EACf/L,KAAG,eAAAsN,KAAAxM,KACC,WACIyM,EACAC,EACAC,EACAL,EACAM,EACAC,IAEA9M,EAAK5B,UAAY,GACjB,MAAMU,QAAckB,EAAKhC,OAAOc,MAAMC,QAAKgO,KAAK,IAAI3M,YACpD,UAAaZ,KAAIwN,cAAcN,EAAO,CAClC,MAAMO,EAAUN,EAAOO,KAAM/B,GAAM3L,IAAO2L,GACpCgC,EAAeP,EAASM,KAAM/B,GAAM3L,IAAO2L,GAC3CiC,EAAYP,EAAMK,KAAM/B,GAAM3L,IAAO2L,GACrCkC,GACFd,EAAWW,KAAM/B,GAAM3L,IAAO2L,IAC7B8B,GACGjN,EAAK9B,UAAUsD,IAAI,yBACrB8L,MAAgBC,MAClB,CACItI,KAAMiD,KAAK0D,MACXhG,SAAU,GACVV,QAAMsI,QACNjJ,SAAU,CACN/E,KACA2M,MAAO,CAACrN,EAAM2O,UAAW3O,EAAMU,MAGvCsN,IACDY,OACH1N,EAAK5B,UAAUoB,GACXwN,IAAaM,GACNL,GAAYE,GAAiBE,GAIzBF,GAAiBE,GAElB,OADA,UAJAD,EACI,gBACA,OAIR,eAEdpN,EAAK2N,aAAajB,EACtB,GAAC,gBAAAkB,GAAA,OAAAnB,EAAAoB,MAAA/Q,KAAAgR,UAAA,EA3CF,KAuDHhR,KAAKiD,MACT,CAEaA,OAAI,IAAAgO,EAAAjR,KAAA,SAAAmD,KAAA,kBACP8N,EAAK9P,KAAKiC,YAAYnB,QAAKoB,KAAOf,GAAMA,IAAIgB,YAClD2N,EAAKC,WAAW,CACZC,gBACoD,IAAhDF,EAAK7P,UAAUsD,IAAI,2BAE3BuM,EAAKtO,aAAa,WAAYsO,EAAKtC,cAAc9L,aACjDoO,EAAKtO,aAAa,OAAQsO,EAAKpP,MAAMgB,aACrCoO,EAAKtO,aAAa,gBAAiBsO,EAAKpD,cAAchL,aACtDoO,EAAKtO,aAAa,UAAWsO,EAAKvB,cAAc7M,aAChDoO,EAAKtO,aACD,QACAsO,EAAK9C,UAAUtL,UAAW+M,GAAUqB,EAAKJ,aAAajB,IACxD,EAbW,EAcjB,CAEOsB,WAAWE,GACdpR,KAAKuN,SAASgC,KAAK,IAAKvP,KAAKuN,SAAS8D,cAAeD,GACzD,CAEO1C,sBACD7J,SACFtC,GAEA,MAAM+O,GAAWzM,GAAS,IAAI3C,OACzBqP,IAAO,CAAC,OAAQ,WAAWhH,SAASgH,EAAE7L,WAErCkK,GAAS/K,GAAS,IAAI3C,OACvBqP,GACkB,SAAfA,EAAE7L,UACc,YAAf6L,EAAE7L,UAAqC,SAAX6L,EAAE3H,OAE1B5J,KAAKuN,SAAS8D,WAAWlJ,MAAQiD,KAAK0D,SAAG,EAE1CD,KAASzD,KAAK0D,OAAOC,YAC5B/O,KAAKuN,SAAS8D,WAAWzC,UAE1B5O,KAAKqN,QAAQkC,KACTK,EACK1N,OAAQqP,GAAqB,YAAfA,EAAE7L,UAChBrD,IAAKkP,GAAMA,EAAE5J,QAAU4J,EAAE/B,WAElCxP,KAAK4N,YAAY2B,KACbK,EACK1N,OAAQqP,GAAqB,YAAfA,EAAE7L,UAA0B6L,EAAE9B,YAC5CpN,IAAKkP,GAAMA,EAAE5J,QAAU4J,EAAE/B,WAElCxP,KAAKwN,UAAU+B,KACXK,EACK1N,OAAQqP,GAAMA,EAAEC,aAChBnP,IAAKkP,GAAMA,EAAE5J,QAAU4J,EAAE/B,WAElCxP,KAAKyN,eAAe8B,KAChBK,EACK1N,OAAQqP,GAAMA,EAAEE,eAChBpP,IAAKkP,GAAMA,EAAE5J,QAAU4J,EAAE/B,YAGtC,MAAMkC,EAAc1R,KAAKoB,UAAUsD,IAAI,uBAAyB,GAChE,UAAWiN,KAAQ/B,EACf5P,KAAK0N,OAAOiE,EAAKhK,QAAUgK,EAAKnC,UAAYmC,EAAKC,WACjD5R,KAAK2N,aAAagE,EAAKhK,QAAUgK,EAAKnC,UAClCkC,EAAYC,EAAKE,aAAe,GAExC7R,KAAK8R,eAAeR,EAAS/O,GAC7BvC,KAAK+R,QAAQ,SAAU,IAAM/R,KAAK2E,eAAgB,IACtD,CAEQA,eACJ,MAAMkB,EAAY,GACZC,EAAU9F,KAAKoB,UAAUsD,IAAI,uBAAyB,GAC5D,UAAWsN,KAAWhS,KAAKsB,UAClBtB,KAAKsB,UAAU0Q,KACpBnM,EAAU,IAAImM,KAAa,CACvB1L,KACIR,EAAQ,QAAQ9F,KAAKsB,UAAU0Q,OAC/BlM,EAAQ,GAAG9F,KAAKsB,UAAU0Q,OAC1B/L,IAAgB,GAAGjG,KAAKsB,UAAU0Q,QAG9ChS,KAAKkB,OAAOuF,UAAU,QAASZ,EACnC,CAEQiM,eAAeR,EAAgC/O,GACnD,MAAM0P,EAAO,GACb,UAAWC,KAAUZ,EAAS,CAC1B,MAAMnK,EAAI+K,EAAO/K,EAAI+K,EAAOC,UACtB/K,EAAI8K,EAAO9K,EAAI8K,EAAOE,WAC5BH,EAAKxM,KAAK,CACNS,SAAU,gBAAgBiB,KAAKC,IAC/B1B,SAAU,CACNyB,EAAG+K,EAAOG,kBAAkB9H,SAAS,SAAW,EAAIpD,EAAIA,EACxDC,EAAG8K,EAAOG,kBAAkB9H,SAAS,UAAY,EAAInD,EAAIA,GAE7DlC,QAASyF,GACThF,QAAS,GACTf,KAAM,IAAKsN,EAAQzF,OAAQlK,KAGnCvC,KAAKkB,OAAOsF,YAAY,UAAWyL,EACvC,CAEQpB,aAAajB,GAAa,IAAA0C,EAAAtS,KAC9B,MAAMiS,EAAO,GACPM,EAAU,GACVnB,EAAUpR,KAAKuN,SAAS8D,WAC9B,UAAWM,KAAQ/B,EAAO,CAiBtB,GAhBAqC,EAAKxM,KAAK,CACNS,SAAU,cAAcyL,EAAKhK,QAAUgK,EAAKjP,KAC5CgD,SAAUiM,EAAKjP,GACfwC,QAASsN,KACTC,WAAW,EACXC,UAAU,EACV9N,KAAM,CACFlC,GAAIiP,EAAKhK,QAAUgK,EAAKjP,GACxBiF,OAAQgK,EAAKjK,KACbA,KAAMiK,EAAKjK,MAAQiK,EAAKhK,OACxBiB,KAAM5I,KAAK0N,OAAOiE,EAAKhK,SAAWgK,EAAKC,WACvCe,OAAQ3S,KAAKsB,UAAUqQ,EAAKhK,QAC5BkK,WAAY7R,KAAK2N,aAAagE,EAAKhK,SAAW,IAElDhC,QAAS,MAERgM,EAAKzB,SAAU,SACpB,MAAM0C,EAAO,eAAAC,KAAA1P,KAAG,YACZ,GAAgC,SAA5BmP,EAAKhR,UAAUqQ,EAAKjP,IACpB,SAAOoQ,MACH,GAAGnB,EAAKjK,MAAQ,uCAGxB,GACIiK,EAAKoB,QAAQvO,SACZmN,EAAKoB,OAAOC,KAAM1Q,MAAMoO,QAAcqC,OAAOxI,SAASjI,IAEvD,SAAOwQ,MACH,+BAA+BnB,EAAKjK,SAG5C4K,EAAKnF,UAAU8F,UACfX,EAAKnF,UAAU+D,WAAW,CAAEtH,KAAM,SAC9BwH,EAAQjJ,OACRmK,EAAKnF,UAAUlF,KAAKC,WAAW,CAC3BC,KAAMiJ,EAAQjJ,OAElBmK,EAAKnF,UAAUlF,KAAKC,WAAW,CAC3BgL,UAAW9B,EAAQ8B,WAG3B,IAAM/K,OAAMW,WAAUF,cAAe0J,EAAKa,gBACtCb,EAAKnF,UAAUlF,KAAKpD,MAAMsD,KAC1BmK,EAAKnF,UAAUlF,KAAKpD,MAAMiE,SAC1BwJ,EAAK/E,SAAS8D,YAAY+B,SAAU,EACpCzB,GAEJ/I,EAAOA,GAAQwI,EAAQhJ,SAAQsI,QAC/B,MAAM2C,EAAazK,GAAM0K,MACzBhB,EAAKnF,UAAUlF,KAAKC,WAAW,CAC3BqL,UAAW,CAAC5B,GACZnC,SAAUmC,EAAKjP,GACf8Q,WAAY7B,EAAKjK,KACjBS,OACAW,SAAUsI,EAAQ8B,QAAU,IAAUpK,EACtCnB,OAAQgK,GAAMhK,QAAUgK,GAAMjP,GAC9B+Q,YAAa9B,EAAKjK,KAClBkB,OACAyK,aACAK,aAAc,OACdrE,MAAOsC,EAAK/N,KACN,CAAC+N,EAAK/N,MAAM+M,UAAWgB,EAAK/N,MAAMlB,IAClC,WAEJ4P,EAAKnF,UAAUwG,cAAchH,MAAO6B,IACtCoF,cAAQC,IAAIrF,IAAC,EACbsE,MACI,uBAAuBnB,EAAKjK,MAAQiK,EAAKjP,OACrC8L,EAAEsF,SAAWtF,EAAEuF,OAASvF,KAG1BA,IAEV8D,EAAK5E,OAAOiE,EAAKhK,SACbyJ,EAAQhJ,SAAQsI,UACjBhJ,QACHsM,MACI,4BAA4BrC,EAAKjK,MAAQiK,EAAKjP,KAEtD,GAAC,kBA9DY,OAAAmQ,EAAA9B,MAAA/Q,KAAAgR,UAAA,KA+DbuB,EAAQ9M,KAAK,CACT/C,GAAIiP,EAAKjP,GACTuR,OAAQ,QACRC,SAAU,GACVC,SAAUvB,IAEdL,EAAQ9M,KAAK,CACT/C,GAAIiP,EAAKjP,GACTuR,OAAQ,WACRC,SAAU,GACVC,SAAUvB,IAGlB5S,KAAKkB,OAAOkT,WACR,QACApU,KAAKuN,SAAS8D,WAAWF,eAAiBoB,EAAU,IAExDvS,KAAKkB,OAAOsF,YAAY,QAASyL,GACjCjS,KAAK+R,QAAQ,SAAU,IAAM/R,KAAK2E,eAAgB,IACtD,CAEcwO,gBACVhL,EACAW,EACAV,GAAgB,EAChBX,EAAiB,MAAI,IAAA4M,EAAArU,KAAA,SAAAmD,KAAA,YAErB,IAAIyF,EAAO,KACX,GAAMyL,EAAKjT,UAAUsD,IAAI,gCAAiC,CACtD,MAAMqE,KAAQ8F,QACVyF,MACIlJ,KAAK0D,MACLuF,EAAKjT,UAAUsD,IAAI,+BAAiC,KAMtDZ,QAHMuQ,EAAKjH,QAAQmH,KAAK9L,GAA2B,CACrD7D,KAAM,CAAEuD,OAAMW,WAAUC,QAAOX,OAAMX,cAEf+M,cAAclR,YACxC,IAAKQ,EAAS,KAAM,iBACpBqE,EAAOrE,EAAQqE,KACfW,EAAWhF,EAAQgF,SACnBF,EAAO9E,EAAQ8E,KAEnB,MAAO,CAAET,OAAMW,WAAUF,OAAO,EAnBX,EAoBzB,CAAC3I,SAAAD,KAAA,mBAAAE,iBArYQgN,GAAmB1N,MAAAkH,KAAAlH,MAAAmH,KAAAnH,MAAAoH,MAAApH,MAAAiV,MAAAjV,MAAAkV,MAAA,EAAAzU,SAAAD,KAAA,WAAAI,EAAAyG,IAAA,OAAnBqG,EAAmBpG,QAAnBoG,EAAmBnG,mBAAnBmG,CAAoB,mDCF1B,IAAMyH,GAAsB,MAA7B,MAAOA,UAA8B1T,KAiHvCnB,YACYqB,EACAD,EACAE,EACA+L,EACAC,GAER/L,QANQrB,KAAAmB,OACAnB,KAAAkB,SACAlB,KAAAoB,YACApB,KAAAmN,YACAnN,KAAAoN,UArHJpN,KAAAuN,SAAW,IAAID,IAAgC,IAC/CtN,KAAA4U,MAAQ,IAAItH,IAAwB,GAE5BtN,KAAAoR,QAAUpR,KAAKuN,SAASsH,eAGxB7U,KAAA0D,OAAS1D,KAAKmB,KAAK2T,cAAc7S,QAC7CI,KAAK0S,GAAMA,EAAE7S,OAAQI,GAAMA,EAAE0S,KAAKzK,SAAS,cAI/BvK,KAAAiV,UAASnT,MAAc,CACnC9B,KAAKmB,KAAKY,gBACV/B,KAAKuN,SACLvN,KAAK4U,QACN3S,QACC6L,KAAU,EAAE3L,EAAKG,MAAC,EACd0M,OAAc,CACVC,gBAAcC,QAAYgG,MAAc5S,EAAE6F,MAAQiD,KAAK0D,QACvDM,cAAYF,QAAYiG,MAAY7S,EAAE6F,MAAQiD,KAAK0D,QACnDlF,KAAM,UACNyF,MAAOlN,GAAKO,OACd,EAENwL,KAAY,IAGAlO,KAAAoV,kBAAiBtT,MAAc,CAAC9B,KAAKuN,WAAWtL,QAC5D6L,KAAU,EAAExL,MAAC,EACT0M,OAAc,CACVC,gBAAcC,QAAYC,MAAW7M,EAAE6F,MAAQiD,KAAK0D,QACpDM,cAAYF,QAAYL,KAASvM,EAAE6F,MAAQiD,KAAK0D,QAChDlF,KAAM,UACN0J,MAAOhR,GAAGsG,SAAQ8H,SAAe4C,UACnC,EAENpF,KAAY,IAIAlO,KAAAqV,eAAcvT,MAAc,CACxC9B,KAAKmB,KAAKY,gBACV/B,KAAKuN,WACNtL,QACC6L,KAAU,EAAE3L,EAAKG,MAAC,EACd0M,OAAc,CACVC,gBAAcC,QAAYC,MAAW7M,EAAE6F,MAAQiD,KAAK0D,QACpDM,cAAYF,QACRoF,SAAQzF,KAASvM,EAAE6F,MAAQiD,KAAK0D,OAAQ,IAE5ClF,KAAM,UACNyF,MAAOlN,GAAKO,OACd,EAENwL,KAAY,IAIAlO,KAAAsV,OAAqCtV,KAAK0D,OAAOzB,QAC7D6L,KAAWxL,MACPiT,MACIjT,EAAED,IAAK0S,MACHpR,OAAaoR,EAAErS,GAAI,kBAAkBT,QACjCI,KAAKS,GACDA,EAAEgB,QAAQzB,IAAKmT,QAAYA,EAAGzP,QAASgP,EAAErS,YAIxD,EAELL,KAAKC,MAAMmT,MAAQnT,KAAE,EACrB4L,KAAY,IAGAlO,KAAA0V,iBAAgB5T,MAAc,CAC1C9B,KAAKsV,OACLtV,KAAKkB,OAAOc,QACbC,QACCI,KAAI,EAAEiT,EAAQtT,KAAWsT,EAAOpT,OAAQI,GAAMA,EAAEyD,UAAY/D,EAAMU,MAItD1C,KAAA2V,oBAAmB7T,MAAc,CAC7C9B,KAAKiV,OACLjV,KAAK0V,gBACNzT,QACCI,KAAI,EAAE4S,EAAQK,KACVA,EAAOpT,OACFI,IACI2S,EAAOjC,KAAMxE,GAAMA,EAAEgB,WAAalN,EAAEI,MAAQJ,EAAEsK,eAK/C5M,KAAA4V,sBAAqB9T,MAAc,CAC/C9B,KAAKqV,YACLrV,KAAKsV,OACLtV,KAAKuN,WACNtL,QACCI,KAAI,EAAE4S,EAAQK,GAAUnN,YACpB,MAAM0N,EAAe,GACrB,QAASxH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,MAAMyH,KAAMxB,MAAQnM,EAAMkG,GACpB0H,EAAad,EAAO/S,OAAQI,MAAM0T,MAAUF,EAAKxT,EAAE6F,OACzD0N,EAAaC,EAAI/G,WAAauG,EAAOpT,OAChCI,IAAOyT,EAAW/C,KAAMxE,GAAMA,EAAEgB,WAAalN,EAAEI,KAClD8B,OAEN,OAAOqR,KAYX7V,KAAK2C,aACD,YACAb,MAAc,CAAC9B,KAAKsV,OAAQtV,KAAK2V,mBAAmB9S,UAChD,EAAEyS,EAAQW,KACNjW,KAAKkW,qBAAqBZ,EAAQW,KAG9CjW,KAAKkR,WAAW,CACZC,gBACsD,IAAlDnR,KAAKoB,UAAUsD,IAAI,6BAE3B1E,KAAKmW,SAAS,OAAQ,IAAMnW,KAAK4U,MAAMrF,KAAKnE,KAAK0D,OAAQ,IAC7D,CAEOoC,WAAWE,GACdpR,KAAKuN,SAASgC,KAAK,IAAKvP,KAAKuN,SAAS8D,cAAeD,GACzD,CAEQ8E,qBAAqBZ,EAAQW,GAAS,IAAA/S,EAAAlD,KAC1C,MAAMoW,EAAS,GACTtR,EAAS,GACTyN,EAAU,GACVzM,EAAU9F,KAAKoB,UAAUsD,IAAI,uBAAyB,GACtD0M,EAAUpR,KAAKuN,SAAS8D,WAC9B,UAAWgF,KAASf,EAAQ,CACxB,MAAMgB,IAAaL,EAAUjD,KAAM1Q,GAAMA,EAAEI,KAAO2T,EAAM3T,IAClDiQ,EAAS2D,EAAW,OAAS,OAQnC,GAPAF,EAAO,IAAIC,EAAM1O,UAAY,CACzBrB,KACIR,EAAQ,WAAW6M,MACnB7M,EAAQ,GAAG6M,MACX1M,IAAgB,GAAG0M,KACvBpM,QAAS,KAER+P,EAAU,SACfxR,EAAOW,KAAK,CACR8Q,WAAY,EACZ7Q,SAAU,GAAG2Q,EAAM1O,SACnBzC,QAAS,GAAGmR,EAAM3O,eAEtB,MAAMkL,EAAO,eAAAjD,KAAAxM,KAAG,YACZ,GAAe,SAAXwP,EACA,SAAOG,MACH,GACIuD,EAAM3O,MAAQ,gDAI1B,GACI2O,EAAMtD,QAAQvO,SACb6R,EAAMtD,OAAOC,KAAM1Q,MAAMoO,QAAcqC,OAAOxI,SAASjI,IAExD,SAAOwQ,MACH,+BAA+BuD,EAAM3O,SAG7CxE,EAAKiK,UAAU8F,UACf/P,EAAKiK,UAAU+D,WAAW,CAAEtH,KAAM,YAC9BwH,EAAQjJ,OACRjF,EAAKiK,UAAUlF,KAAKC,WAAW,CAC3BC,KAAMiJ,EAAQjJ,OAElBjF,EAAKiK,UAAUlF,KAAKC,WAAW,CAC3BgL,UAAW9B,EAAQ8B,WAG3B,IAAM/K,OAAMW,WAAUF,cAAe1F,EAAKiQ,gBACtCjQ,EAAKiK,UAAUlF,KAAKpD,MAAMsD,KAC1BjF,EAAKiK,UAAUlF,KAAKpD,MAAMiE,SAC1B5F,EAAKqK,SAAS8D,YAAY+B,SAAU,EACpCiD,GAEJzN,EAAOA,GAAQwI,EAAQhJ,SAAQsI,QAC/B,MAAM2C,EAAazK,GAAM0K,MACnBlR,EAAMc,EAAKhC,OAAOsV,aACxBtT,EAAKiK,UAAUlF,KAAKC,WAAW,CAC3BqL,UAAW,CAAC8C,GACZ7G,SAAU6G,EAAM3T,GAChB8Q,WAAY6C,EAAM3O,KAClBS,OACAW,SAAUsI,EAAQ8B,QAAU,IAAUpK,EACtCnB,OAAQ0O,GAAO1O,QAAU0O,GAAO3T,GAChC+Q,YAAa4C,EAAM3O,KACnBkB,OACAyK,aACAK,aAAc,UACdrE,MAAOgH,EAAMzS,KACP,CAACyS,EAAMzS,MAAM+M,UAAW0F,EAAMzS,MAAMlB,IACpC,CAACN,EAAIuO,UAAWvO,EAAIM,YAExBQ,EAAKiK,UAAUwG,cAAchH,MAAO6B,IACtCoF,cAAQC,IAAIrF,IAAC,EACbsE,MACI,gCACIuD,EAAM3O,MAAQ2O,EAAM3T,OACnB8L,EAAEsF,SAAWtF,EAAEuF,OAASvF,KAE3BA,KACT,EACDwF,MACI,qCACIqC,EAAM3O,MAAQ2O,EAAM3T,KAGhC,GAAC,kBAhEY,OAAAiN,EAAAoB,MAAA/Q,KAAAgR,UAAA,KAiEbuB,EAAQ9M,KAAK,CACT/C,GAAI2T,GAAO1O,QAAU0O,GAAO3T,GAC5BuR,OAAQ,QACRC,SAAU,GACVC,SAAUvB,IAGlB5S,KAAKkB,OAAOkT,WACR,UACAhD,EAAQD,eAAiBoB,EAAU,IAEvCvS,KAAKkB,OAAOuF,UAAU,UAAW2P,GACjCpW,KAAKkB,OAAO0E,UAAU,UAAWd,EACrC,CAEcqO,gBACVhL,EACAW,EACAV,GAAgB,EAChBX,EAAgB,MAAI,IAAAwJ,EAAAjR,KAAA,SAAAmD,KAAA,YAEpB,IAAIyF,EAAO,KACX,GAAMqI,EAAK7P,UAAUsD,IAAI,kCAAmC,CACxD,MAAMqE,KAAQ8F,QACVyF,MACIlJ,KAAK0D,MACLmC,EAAK7P,UAAUsD,IAAI,iCAAmC,KAMxDZ,QAHMmN,EAAK7D,QAAQmH,KAAK9L,GAA2B,CACrD7D,KAAM,CAAEuD,OAAMW,WAAUC,QAAOX,OAAMX,cAEf+M,cAAclR,YACxC,IAAKQ,EAAS,KAAM,iBACpBqE,EAAOrE,EAAQqE,KACfW,EAAWhF,EAAQgF,SACnBF,EAAO9E,EAAQ8E,KAEnB,MAAO,CAAET,OAAMW,WAAUF,OAAO,EAnBZ,EAoBxB,CAAC3I,SAAAD,KAAA,mBAAAE,iBAzQQyU,GAAqBnV,MAAAkH,KAAAlH,MAAAmH,KAAAnH,MAAAoH,MAAApH,MAAAiV,MAAAjV,MAAAkV,MAAA,EAAAzU,SAAAD,KAAA,WAAAI,EAAAyG,IAAA,OAArB8N,EAAqB7N,QAArB6N,EAAqB5N,mBAArB4N,CAAsB,qECY5B,IAAM8B,GAA2B,MAAlC,MAAOA,EAcT3W,YAAoBoB,GAAAlB,KAAAkB,SAbJlB,KAAA0W,OAAS,IACrB1W,KAAKkB,OAAOyV,aACR1L,KAAK2L,IAAI,GAAiC,IAA7B5W,KAAKkB,OAAO2V,UAAU9L,MACnC/K,KAAKkB,OAAO2V,UAAUC,QAEd9W,KAAA+W,QAAU,IACtB/W,KAAKkB,OAAOyV,aACR1L,KAAK+L,IAAI,EAAGhX,KAAKkB,OAAO2V,UAAU9L,MAAQ,EAAI,MAC9C/K,KAAKkB,OAAO2V,UAAUC,QAEd9W,KAAAiX,MAAQ,IACpBjX,KAAKkB,OAAOyV,aAAa,EAAG,CAAExP,EAAG,GAAKC,EAAG,IAEK,CAACnH,SAAAD,KAAA,mBAAAE,iBAd1CuW,GAA2BjX,MAAAkH,KAAA,EAAAzG,SAAAD,KAAA,UAAAI,EAAAC,IAAA,MAA3BoW,EAA2BnW,UAAA,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,YAAA,IAAAyW,eApDhBnK,oFAWAA,qFAWAA,0WA5BhBvN,MAAA,cAKIA,MAAA,0BAASoB,EAAA8V,QAAQ,GAIjBlX,MAAA,cAAUA,MAAA,SAAGA,UAEjBA,MAAA,cAKIA,MAAA,0BAASoB,EAAAmW,SAAS,GAIlBvX,MAAA,cAAUA,MAAA,YAAMA,UAEpBA,MAAA,cAKIA,MAAA,0BAASoB,EAAAqW,OAAO,GAIhBzX,MAAA,cAAUA,MAAA,eAASA,ybA2BlBiX,CAA2B,+BCpBjC,IAAMU,GAAoB,MAA3B,MAAOA,EA+KTrX,YACYqB,EACAC,GADApB,KAAAmB,OACAnB,KAAAoB,YA/KJpB,KAAAoX,oBAAsB,IAAI9J,IAAwB,IAElDtN,KAAAqX,QAAU,IAAI/J,IAAwB,IAEtCtN,KAAAsX,SAAW,IAAIhK,KAAyB,GAEhCtN,KAAAuX,mBACZvX,KAAKoX,oBAAoBvC,eAErB7U,KAAAwX,wBAA0BxX,KAAKmB,KAAKY,gBAAgBE,QACxDC,KAAQC,KAAUA,IAAG,EACrB2L,KAAW3L,MAAQwB,OAAaxB,EAAIO,GAAI,wBAAqB,EAC7DL,KAAI,EAAGyB,aAAeA,GAAiB2T,UAAY,KAAE,EACrDvJ,KAAY,IAGRlO,KAAA0X,aAAwC1X,KAAKqX,QAAQpV,QACzDmM,KAAa,MAAG,EAChBK,KAAI,IAAMzO,KAAKsX,SAAS/H,MAAK,KAAK,EAClCzB,KAAW6J,GACPA,GAAGnT,OAAS,EACLxE,KAAK4X,UAAUD,GAAsC1V,QAClD8L,KAAW,OAAMC,MAAG,OAAmB,EAE3CA,MAAG,MAAkB,EAE/BE,KAAY,IAGRlO,KAAA6X,cAAqC7X,KAAKqX,QAAQpV,QACtDmM,KAAa,MAAG,EAChBK,KAAI,IAAMzO,KAAKsX,SAAS/H,MAAK,KAAK,EAClCzB,KAAW6J,GACPA,GAAGnT,OAAS,KACNsT,OAAa,CAAEH,IAAG5R,QAAS/F,KAAKmB,KAAK4W,aAAarV,KAAMT,QACpDI,KAAI,EAAGuC,UACHA,EACK1C,OAAQI,GAAMA,EAAEqF,QAChBtF,IACIC,GACG,IAAI0V,KAAM,IACH1V,EACHN,MAAOhC,KAAKmB,KAAK8W,YACb3V,EAAE+M,aAIzB,EAELrB,MAAG,MAAG,EAEhBD,KAAW,IAAM,KAGb/N,KAAAkY,oBACJlY,KAAKmB,KAAKY,gBAAgBE,QACtBC,KAAQC,KAAUA,IAAG,EACrB2L,KAAU,OACNqK,OAAkBnY,KAAKmB,KAAKiX,SAAS1V,GAAI,CACrCgF,KAAM,uBACPzF,QAAK8L,KAAW,OAAMC,MAAG,CAAElK,QAAS,SAAO,EAElDzB,KAAKuC,IACD,MAAMqN,EAAO,GACb,UAAWoG,KAAQzT,EAAM,CACrB,MAAM0T,EAAWD,EAAKC,SAASC,mBAC/B,GAAKD,EACL,UAAWE,KAAOF,EAASxU,QACvBmO,EAAKxM,KAAK,CACN/C,GAAI8V,EAAI9V,GACRkH,KAAM,UACNlC,KAAM8Q,EAAI9Q,KACV+L,YAAa,GACb7P,KAAMyU,EAAKzU,OAIvB,OAAOqO,KAIHjS,KAAAyY,kBAA6C3W,MAAc,CACvE9B,KAAKqX,QACLrX,KAAK6X,cACL7X,KAAK0X,aACL1X,KAAKoX,oBACLpX,KAAKwX,wBACLxX,KAAKkY,sBACNjW,QACCI,KAAI,EAAEH,EAAQoT,EAAQoD,EAAOjB,EAAUkB,EAAgB5T,MACnD,MAAM6T,EAAS1W,EAAO2W,cAChBC,EAAU,IACTxD,EACEpT,OACII,GACGA,EAAEgR,MAAMuF,cAActO,SAASqO,IAC/BtW,EAAEoF,KAAKmR,cAActO,SAASqO,IAC9BtW,EAAEyW,aAAaF,cAActO,SAASqO,IAE7CvW,IAAKmT,KACF9S,GAAI8S,EAAE9S,GACNkH,KAAM,QACNlC,KAAM8N,EAAEuD,cAAgBvD,EAAE9N,KAC1B+L,YAAa,aAAa+B,EAAExR,mBAEpC,EAAGyR,MACCkD,EAAetW,IAAK2W,GACfA,EAAUC,MAAM5W,IACZ6W,KAEOxW,GAAIsW,EAAE1F,MACN1J,KAAMsP,GAAQ,UACdC,SAAS,EACTzR,KAAMsR,EAAEtR,KACR+L,YAAauF,EAAE1F,WAIjCpR,OACGI,GACGA,EAAEoF,KAAKmR,cAActO,SAASqO,IAC9BtW,EAAEmR,YAAYoF,cAActO,SAASqO,IACrCtW,EAAEsH,KAAKiP,cAActO,SAASqO,OAEnCnB,EACEpV,IACI2W,KAEOtW,GAAIsW,EAAE1F,MACN1J,KAAOoP,EAAUpP,MAAQ,UACzBuP,SAAS,EACTzR,KAAMsR,EAAEtR,KACR+L,YAAauF,EAAE1F,SAG1BpR,OACII,GACGA,EAAEoF,KAAKmR,cAActO,SAASqO,IAC9BtW,EAAEmR,YAAYoF,cAActO,SAASqO,IACrCtW,EAAEsH,KAAKiP,cAActO,SAASqO,OAEvCF,EAAMrW,IAAK2W,KACVtW,GAAIsW,EAAE1F,MACN1J,KAAM,OACNlC,KAAMsR,EAAEtR,KACR+L,YAAauF,EAAE1F,YAEhBvO,EACE7C,OAAQI,GAAMA,EAAEoF,KAAKmR,cAActO,SAASqO,IAC5CvW,IAAKmT,KACF9S,GAAI8S,EAAE9S,GACNkH,KAAM,UACNlC,KAAM8N,EAAE9N,KACR+L,YAAa,GACb7P,KAAO4R,EAAU5R,MAAMlB,OAGnCoW,SAAQM,KAAK,CAACC,EAAGC,IAAMD,EAAE3R,KAAK6R,cAAcD,EAAE5R,OACvCoR,KACV,EACDrK,KAAI,IAAMzO,KAAKsX,SAAS/H,MAAK,KAAM,EACnCrB,KAAY,IAGAlO,KAAAwZ,QAAUxZ,KAAKsX,SAASzC,eAEjC7U,KAAA4X,UAAaD,GAChB3X,KAAKoB,UAAUsD,IAAI,0BAAuB,EACpC+U,OAAW,CAAE9B,IAAG+B,gBAAcC,UAAajX,KAAMT,QAC7CI,KAAKC,GAAMA,EAAEsC,QAAK,EAEtBgV,OAAYjC,GAMlB3X,KAAKyY,eAAe5V,YACpB7C,KAAKiD,MACT,CAEaA,OAAI,IAAAC,EAAAlD,KAAA,SAAAmD,KAAA,kBACPD,EAAK/B,KAAKiC,YAAYnB,QAAKoB,KAAOf,GAAMA,IAAIgB,YAClD,MAAMkJ,KAAMqN,OACR3W,EAAK/B,KAAKqB,QAAQ,qBAClB,oBAEJ,GAAIgK,EAAK,CACL,MAAMhK,EAAUgK,EAAIhK,QAAQ,sBAC5BA,EAAQI,SAASC,UAAWiX,IACxB,MAAM7H,EAAO,GACb,UAAWrI,KAAQkQ,EACf,UAAWlR,KAAQkR,EAAalQ,GAC5BqI,EAAKxM,KAAK,IAAKmD,EAAMgB,SAG7B1G,EAAKkU,oBAAoB7H,KAAK0C,EAAI,GAEtCzP,EAAQQ,OACX,EAlBY,EAmBjB,CAEO+W,UAAUC,GACbha,KAAKqX,QAAQ9H,KAAKyK,EACtB,CAAC/Z,SAAAD,KAAA,mBAAAE,iBA9MQiX,GAAoB3X,MAAAkH,KAAAlH,MAAAmH,MAAA,EAAA1G,SAAAD,KAAA,WAAAI,EAAAyG,IAAA,OAApBsQ,EAAoBrQ,QAApBqQ,EAAoBpQ,UAAAkT,WAFjB,gBAEH9C,CAAoB,mFCTrB3X,MAAA,wBAGIA,MAAA,sCAYAA,MAAA,mBAAAA,MAAA,MAMAA,mCACAA,MAAA,kBAAAA,CAGC,WAHDA,CAGC,WAHDA,CAGC,YAKwCA,MAAA,GAAiBA,QAC9CA,MAAA,YAAqBA,MAAA,GAAwBA,UAEjDA,MAAA,YAGIA,MAAA,GACJA,sCAbJA,MAAA,QAAA0a,GAMqC1a,MAAA,GAAAA,MAAA0a,EAAAxS,MACRlI,MAAA,GAAAA,MAAA0a,EAAAzG,aAKrBjU,MAAA,GAAAA,MAAA,IAAA0a,EAAAtQ,KAAA,gCAxBhBpK,MAAA,GAGIA,MAAA,EAAA2a,GAAA,sCAOA3a,MAAA,EAAA4a,GAAA,uDAkBJ5a,oCAxBSA,MAAA,GAAAA,MAAA,gBAAA6a,EAAA7a,MAAA,IAAA2J,EAAA2P,WAAAuB,EAAA7V,SAOkBhF,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAA,MAAA,IAAA2J,EAAA2P,SAAA,OA8ChC,IAAMwB,GAAuB,MAA9B,MAAOA,UAA+BrZ,KAYjCsZ,WAAWC,GACTxa,KAAKya,KAAK5O,eAAe6O,SAASF,EAAMG,UACzC3a,KAAK4a,MAAO,EACZ5a,KAAK6a,WAAWhP,eAAeiP,OAEvC,CAKAhb,YACY2a,EACAM,EACAC,EACAC,GAER5Z,QALQrB,KAAAya,MACAza,KAAA+a,UACA/a,KAAAgb,UACAhb,KAAAib,SAzBLjb,KAAA4a,MAAO,EACP5a,KAAAkb,WAAa,GACJlb,KAAA8Y,QAAU9Y,KAAK+a,QAAQtC,eACvBzY,KAAAwZ,QAAUxZ,KAAK+a,QAAQvB,QACvBxZ,KAAA+Z,UAAavE,GAAMxV,KAAK+a,QAAQhB,UAAUvE,GAC1CxV,KAAAmb,QAAW9M,GACvBA,aAAa+M,OAASpb,KAAKqb,OAAOhN,GAAKrO,KAAK+Z,UAAU1L,GAYFrO,KAAAsb,QAAW9M,GAC/DxO,KAAKua,WAAW/L,EASpB,CAEO+M,aACHvb,KAAK4a,MAAO,EACR5a,KAAK6a,WAAWhP,eAChB7L,KAAK+R,QACD,QACA,IAAM/R,KAAK6a,UAAUhP,cAAc2P,QACnC,IAGZ,CAEOC,YAAYjN,GACfxO,KAAK4a,MAAO,EACZ5a,KAAKkb,WAAa,GAClBlb,KAAK+Z,UAAU,IACX/Z,KAAK6a,WAAWhP,gBAChB7L,KAAK6a,UAAUhP,cAAc2P,QAC7Bxb,KAAK6a,UAAUhP,cAAciP,OAErC,CAEOO,OAAOhD,GACVrY,KAAKkb,WAAa7C,EAAK3Q,KACvB,MAAMgU,EAAa,GAOnBA,EALkB,UAAdrD,EAAKzO,KACC,QACc,YAAdyO,EAAKzO,KACL,UACA,QACIyO,EAAK3V,GACnB1C,KAAKgb,QAAQW,SAAS,GAAI,CACtBC,WAAY5b,KAAKib,OACjBY,YAAaH,GAErB,CAACzb,SAAAD,KAAA,mBAAAE,iBAlEQoa,GAAsB9a,mBAAAkH,IAAAlH,MAAAmH,MAAAnH,MAAAmH,MAAA,EAAA1G,SAAAD,KAAA,UAAAI,EAAAC,IAAA,MAAtBia,EAAsBha,UAAA,qBAAAwb,UAAA,SAAAnb,EAAAC,MAAA,EAAAD,oIAAtBC,EAAA2Z,WAAAzS,EAAkB,KAAAtI,OAAA,sBAAAsI,GAAA,OAAlBlH,EAAA0a,QAAAxT,EAAe,KAAAtI,uEA3ECuN,0FAyBZA,0jCA7CTvN,MAAA,UAAAA,CAMC,gBAIOA,MAAA,iBAAAsI,GAAA,OAAAlH,EAAAga,KAAgBha,EAAA6a,YAAA3T,GAAsBlH,EAAA2a,YAAY,GAElD/b,MAAA,GACJA,QACAA,MAAA,eAIIA,MAAA,yBAAAsI,GAAA,OAAAlH,EAAAsa,WAAApT,CAAA,EAAAtI,CAAwB,yBAAAsI,GAAA,OACPlH,EAAAua,QAAArT,EAAe,EADhCtI,CAAwB,yBAAAoB,EAAAga,OAAAha,EAAAsa,UAAA,GAJ5B1b,QAYAA,MAAA,EAAAuc,GAAA,sCAKAvc,MAAA,aAKJA,QACAA,MAAA,6BACIA,MAAA,GAAAwc,GAAA,yCA6BJxc,2CA9DIA,MAAA,OAAAoB,EAAAga,MAAAha,EAAAsa,YAOI1b,MAAA,GAAAA,MAAA,IAAAoB,EAAAga,MAAAha,EAAAsa,WAAA,sBAMA1b,MAAA,GAAAA,MAAA,UAAAoB,EAAAsa,WAAA1b,CAAwB,kBAAAyc,EAAxBzc,CAAwB,6BAAAyN,GASvBzN,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAAoB,EAAA4Y,UAYAha,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAoB,EAAA4Y,WAAA5Y,EAAAga,MAAAha,EAAAsa,4fAwDJZ,CAAuB,oCC/C7B,IAAM4B,GAAmB,MAA1B,MAAOA,EAAmBjc,SAAAD,KAAA,mBAAAE,iBAAnBgc,EAAmB,EAAAjc,SAAAD,KAAA,UAAAI,EAAA+b,IAAA,MAAnBD,IAAmBjc,SAAAD,KAAA,UAAAI,EAAAgc,IAAA,UAZxBC,KACAC,KACAC,KACAC,KACAC,MACAC,MACAC,MACAC,KACAC,eAIKX,CAAmB,wEC9CpB1c,MAAA,cAIIA,MAAA,yBAAAsd,EAAAtd,MAAAyc,GAAAc,UAAAC,EAAAxd,QAAA,OAASA,MAAAwd,EAAAC,SAAAH,GAAa,oBAGtBtd,MAAA,WAAsBA,MAAA,GAAgBA,QACtCA,MAAA,SACIA,MAAA,GACJA,sDAPAA,MAAA,SAAAsd,EAAApa,MAAA,OAAA2X,EAAA7a,MAAA,IAAAC,EAAAuC,QAAA,KAAAqY,EAAA3X,KAIsBlD,MAAA,GAAAA,MAAAsd,EAAAI,QAElB1d,MAAA,GAAAA,MAAA,IAAAsd,EAAA/D,cAAA+D,EAAApV,KAAA,MAkBb,IAAMyV,GAA2B,MAAlC,MAAOA,EAMTrd,YACYqB,EACAD,GADAlB,KAAAmB,OACAnB,KAAAkB,SAPIlB,KAAA0D,OAAS1D,KAAKmB,KAAK2T,cACnB9U,KAAAgC,MAAQhC,KAAKkB,OAAOc,MAEpBhC,KAAAid,SAAY7a,GAAQpC,KAAKkB,OAAO+b,SAAS7a,EAAIM,GAK1D,CAEU+I,WAAQ,IAAAvI,EAAAlD,KAAA,SAAAmD,KAAA,kBACXD,EAAK/B,KAAKiC,YAAYnB,QAAKoB,KAAOf,GAAMA,IAAIgB,kBAC7BJ,EAAK/B,KAAK2T,cAAc7S,QAAKgO,KAAK,IAAI3M,WAAY,EAFtD,EAGrB,CAACrD,SAAAD,KAAA,mBAAAE,iBAdQid,GAA2B3d,MAAAkH,OAAAlH,MAAAmH,KAAA,EAAA1G,SAAAD,KAAA,UAAAI,EAAAC,IAAA,MAA3B8c,EAA2B7c,UAAA,2BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,uZAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA9BhCnB,MAAA,WAGIA,MAAA,EAAA4d,GAAA,iCAYJ5d,eAXwBA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAoB,EAAA8C,wTA0BnByZ,CAA2B,0ECS5B3d,MAAA,cAKIA,MAAA,sBAAAsI,GAAAtI,MAAA6d,GAAA,MAAA9T,EAAA/J,QAAA,OAAcA,MAAA+J,EAAA+T,WAAAxV,GAAkB,EAAhCtI,CAAiC,wBAAAsI,GAAAtI,MAAA6d,GAAA,MAAA1T,EAAAnK,QAAA,OACjBA,MAAAmK,EAAA4T,aAAAzV,GAAoB,0HAKvCtI,wCATGA,MAAA,MAAAA,MAAA,IAAAC,EAAA+d,KAAAhe,CAAmB,cAAAie,EAAAje,MAAA,IAAAC,EAAAoX,YAAA,KAAA4G,EAAA1S,KAAnBvL,CAAmB,gBAAAke,EAAAle,MAAA,KAAAC,EAAAoX,YAAA,KAAA6G,EAAA5G,OAAnBtX,CAAmB,SAAAA,MAAA,KAAAC,EAAA2W,QAAnB5W,CAAmB,WAAAA,MAAA,KAAAC,EAAAsF,UAAnBvF,CAAmB,UAAAA,MAAA,KAAAC,EAAA8S,SAAnB/S,CAAmB,SAAAA,MAAA,KAAAC,EAAAqF,oCAUvBtF,MAAA,4EAEIA,MAAA,SAAAA,MAAA,IAAAG,EAAAyW,QAAA5W,CAAyB,UAAAA,MAAA,IAAAG,EAAA4S,iCAIjC/S,MAAA,oDAIAA,MAAA,mDAIAA,MAAA,8CAmBIA,MAAA,WAAAA,CAIC,YAEOA,MAAA,kBACAA,MAAA,YACIA,MAAA,YACAA,MAAA,YAA8BA,MAAA,aAAOA,UAEzCA,MAAA,YACIA,MAAA,YACAA,MAAA,YAA8BA,MAAA,eAAQA,UAE1CA,MAAA,aACIA,MAAA,aACAA,MAAA,aAA8BA,MAAA,gBAASA,wDAhCvDA,MAAA,WAAAA,CAMC,YAEOA,MAAA,aACAA,MAAA,yBAGIA,MAAA,yBAAAsI,GAAAtI,MAAAme,GAAA,MAAAC,EAAApe,QAAA,OAAiBA,MAAAoe,EAAAC,YAAA/V,GAAmB,oBACvCtI,UAELA,MAAA,EAAAse,GAAA,gCAqBJte,wCAjCIA,MAAA,SAAA6J,EAAA0U,WAAAve,CAA2B,SAAA6J,EAAA0U,YAQnBve,MAAA,GAAAA,MAAA,mBAAAke,EAAAle,MAAA,IAAA6J,EAAA+H,WAAA,MAAAsM,EAAAM,SAAAN,EAAAM,QAAAzT,SAAA,WAMH/K,MAAA,GAAAA,MAAA,gBAAAye,EAAAze,MAAA,IAAA6J,EAAA+H,WAAA,MAAA6M,EAAAD,SAAAC,EAAAD,QAAAzT,SAAA,+BAiFV,IAAM2T,GAAiB,MAAxB,MAAOA,UAAyBjd,KAKlC,QAAWkd,GACP,MAAuC,SAAhCne,KAAKoB,UAAUsD,IAAI,SACpB1E,KAAKoB,UAAUsD,IAAI,iBACnB1E,KAAKoB,UAAUsD,IAAI,iBAC7B,CAEA,QAAW0Z,GACP,SAAOlJ,MAAc9J,KAAK0D,MAC9B,CAEA,cAAWuP,GACP,OAAOre,KAAKoB,UAAUsD,IAAI,iBAC9B,CAuBO4Y,WAAWvS,GACd/K,KAAKkB,OAAOyV,aAAa5L,EAAM/K,KAAKkB,OAAO2V,UAAUC,OACzD,CAEOyG,aAAazG,GAChB9W,KAAKkB,OAAOyV,aAAa3W,KAAKkB,OAAO2V,UAAU9L,KAAM+L,EACzD,CAEa+G,YAAYS,GAAgB,IAAApb,EAAAlD,KAAA,SAAAmD,KAAA,YACrC,MAAMiO,QAAgBlO,EAAKkO,QAAQnP,QAAKgO,KAAK,IAAI3M,YAC3C0a,EAAWM,EAEXlN,EAAQ4M,QAAQ9b,OAAQI,GAAY,UAANA,GAAuB,YAANA,IAC/C,MAFAic,MAAO,IAAKnN,EAAQ4M,SAAW,GAAK,QAAS,YAGnD9a,EAAKgO,WAAW,CAAE8M,WAAW,EANQ,EAOzC,CAEA,cAAWD,GACP,QAAS/d,KAAKoB,UAAUsD,IAAI,6BAChC,CAIA5E,YACYoB,EACAsd,EACAC,EACAC,EACAC,EACAvd,EACAD,EACAyd,EACAxR,EACA6N,EACAD,EACA6D,EACAC,GAERzd,QAdQrB,KAAAkB,SACAlB,KAAAwe,KACAxe,KAAAye,SACAze,KAAA0e,SACA1e,KAAA2e,WACA3e,KAAAoB,YACApB,KAAAmB,OACAnB,KAAA4e,UACA5e,KAAAoN,UACApN,KAAAib,SACAjb,KAAAgb,UACAhb,KAAA6e,cACA7e,KAAA8e,QA1EL9e,KAAA+e,YAAc,IAiBL/e,KAAAwd,IAAMxd,KAAKkB,OAAO8d,QAElBhf,KAAAoW,OAASpW,KAAKkB,OAAO+d,WAErBjf,KAAA6W,UAAY7W,KAAKkB,OAAOge,cAExBlf,KAAA+E,SAAW/E,KAAKkB,OAAOie,aAEvBnf,KAAAuS,QAAUvS,KAAKkB,OAAOke,YAEtBpf,KAAA8E,OAAS9E,KAAKkB,OAAOme,WAErBrf,KAAAoR,QAAUpR,KAAKkB,OAAOkQ,QAEGpR,KAAAsf,QAAU,IAC/Ctf,KAAK+R,QAAQ,QAAS,IAAM/R,KAAKuf,aAAiC,IAAnBvf,KAAK+e,aACd/e,KAAAsb,QAAU,IAChDtb,KAAK+R,QAAQ,QAAS,IAAM/R,KAAKuf,aAAiC,IAAnBvf,KAAK+e,aAExC/e,KAAAkR,WAAcsO,GAAMxf,KAAKkB,OAAOgQ,WAAWsO,GAuB3Cxf,KAAAyf,iBAAmBzf,KAAK8e,MAAMY,UAkB9C,CAEajU,WAAQ,IAAAwF,EAAAjR,KAAA,SAAAmD,KAAA,kBACX8N,EAAK2N,QAAQxb,YAAYnB,QAAKoB,KAAOf,GAAMA,IAAIgB,YACrD2N,EAAKwN,OAAOvN,WAAW,CAAEkC,QAAQ,IACjCnC,EAAK8N,YACD9N,EAAK7P,UAAUsD,IAAI,gCAAkC,IACzDuM,EAAKsO,aACLI,KAAyBrB,QACmB,SAAxCsB,aAAaC,QAAQ,eACzB5O,EAAKtO,aACD,QACAsO,EAAK/P,OAAOc,MAAMa,UAAU,IACxBoO,EAAKc,QAAQ,kBAAmB,KAC5Bd,EAAK/P,OAAOsF,YAAY,WAAY,GAAE,KAIlDyK,EAAKtO,aACD,cACAsO,EAAKgK,OAAO6E,cAAcjd,UAAS,eAAA8M,KAAAxM,KAAC,UAAO4c,GAKvC,GAJIA,EAAOC,IAAI,UACX/O,EAAK/P,OAAO+b,SAAS8C,EAAOrb,IAAI,UAEpCuM,EAAK/P,OAAOsF,YAAY,WAAY,IAChCuZ,EAAOC,IAAI,SACX/O,EAAKgP,YAAYF,EAAOrb,IAAI,eAAQ,GAC7Bqb,EAAOC,IAAI,QAAS,CAC3B,IAAIpX,EAAOqI,EAAK7P,UAAUyD,MAAM,eAKhC,KAJK+D,GAAQmX,EAAOrb,IAAI,UAAYkE,EAAK0K,SACrC1K,EAAO,KACPA,QAAI,EAASsX,MAAUH,EAAOrb,IAAI,SAASpB,cAE1CsF,EACD,SAAOkK,MACH,8BAA8BiN,EAAOrb,IAAI,WAEjDuM,EAAKkP,WACDvX,aAAgBqF,MAAQrF,EAAK,GAAKA,GACpC+D,MAAOrK,KACLwQ,QAAY,oBAAoBiN,EAAOrb,IAAI,WAC3CuM,EAAK+J,QAAQW,SAAS,GAAI,CACtBC,WAAY3K,EAAKgK,OACjBY,YAAa,IAChB,QAEEkE,EAAOC,IAAI,WAClB/O,EAAKc,QAAQ,kBAAmB,KAC5Bd,EAAK/P,OAAOsF,YAAY,WAAY,CAChC,CACId,SAAUqa,EAAOrb,IAAI,WACrBQ,QAASkb,KACTxb,KAAM,KAEb,GAGLqM,EAAKc,QAAQ,kBAAmB,KAC5Bd,EAAK/P,OAAOsF,YAAY,WAAY,GAAE,EAGlD,GAAC,gBAAAsK,GAAA,OAAAnB,EAAAoB,MAAA/Q,KAAAgR,UAAA,EAzCkC,IA0CrC,EA5De,EA6DrB,CAEciP,YAAYvd,GAAU,IAAA4P,EAAAtS,KAAA,SAAAmD,KAAA,YAChC,MAAMkT,QAAc/D,EAAKuM,YAAYwB,UAAU3d,GAC/C,IAAK2T,EAAO,OACZ/D,EAAKpR,OAAO+b,SAAS3K,EAAKnR,KAAK8W,YAAY5B,EAAMhH,QAAQ3M,IACzD,MAAM4d,EAAe,CACjB5a,SAAU2Q,EAAM1O,OAChBzC,QAASkb,KACTxb,KAAM,CACFkP,QAAS,GAAGuC,EAAM0C,cAAgB1C,EAAM3O,iBAGhD4K,EAAKP,QAAQ,kBAAmB,IAC5BO,EAAKpR,OAAOsF,YAAY,WAAY,CAAC8Z,IACvC,EAb8B,EAcpC,CAEcH,WAAWvX,GAAU,IAAAyL,EAAArU,KAAA,SAAAmD,KAAA,YAC/B,IAAIod,EAAsBlM,EAAKlT,KAAKqB,QAAQ,qBAC5C,IAAK+d,EAAgB,OACS,iBAAnBA,IACPA,EAAiB,CACbhe,UAAWge,EACXC,OAAQ,qBAIhB,MAAMC,SAA2B,EADrBhe,OAAU8d,EAAehe,UAAWge,EAAeC,QAEjD9T,QAAQ,cAAe,CAC7B9D,EAAK0K,MACL1K,EAAKc,UAAYd,EAAKlG,MAE5BL,IAAKgM,GAAM,IAAIqS,IAAYrS,IAM7B,GALAoS,EAAUrH,KACN,CAACC,EAAGC,IACAiH,EAAerM,SAASyM,QAAQtH,EAAEzP,MAClC2W,EAAerM,SAASyM,QAAQrH,EAAE1P,QAErC6W,GAAWjc,OACZ,KAAM,kCAEV6P,EAAKnT,OAAO+b,SAAS5I,EAAKlT,KAAK8W,YAAY,CAACwI,EAAU,IAAIze,SAASU,IACnE,MAAMke,EAAWH,EAAU,GAAG1U,UACtBsG,oBAAqBoO,EAAU,GACjCH,EAAe,CACjB5a,SAC0B,aAAtB+a,EAAU,GAAG7W,KACP,CACIzC,EAAGkL,GAAkB9H,SAAS,SACxB,EAAIqW,EAAIzZ,EACRyZ,EAAIzZ,EACVC,EAAGiL,GAAkB9H,SAAS,UACxB,EAAIqW,EAAIxZ,EACRwZ,EAAIxZ,GAEdwZ,EACV1b,QAC0B,aAAtBub,EAAU,GAAG7W,KACPiX,KACAT,KACVza,QAAS,GACTf,KAAM,CACFkP,QAAS,GAAGlL,EAAKlB,eACjBoZ,OAAQL,EAAU,GAAGjW,SACrBC,UAAWgW,EAAU,GAAGhW,YAGhC4J,EAAKtC,QAAQ,kBAAmB,KAC5BsC,EAAKnT,OAAOsF,YAAY,WAAY,CAAC8Z,GAAQ,EAC9C,EApD4B,EAqDnC,CAEOf,aACEwB,SAASC,eAAuBlG,MAChCiG,SAASC,eAAuBlG,OACrC,MAAM9Y,EAAQ4d,aAAaC,QAAQ,eACnC7f,KAAKkB,OAAOyV,aAAa,EAAG,CAAExP,EAAG,GAAKC,EAAG,KACrCpF,GAAOhC,KAAKkB,OAAO+b,SAASjb,GAChChC,KAAKoN,QAAQ6T,UACjB,CAAChhB,SAAAD,KAAA,mBAAAE,iBA9NQge,GAAgB1e,MAAAkH,KAAAlH,MAAAkH,KAAAlH,MAAAkH,IAAAlH,MAAAkH,GAAAlH,MAAAkH,IAAAlH,MAAAmH,MAAAnH,MAAAoH,OAAApH,MAAAiV,OAAAjV,MAAAkV,MAAAlV,MAAA0hB,MAAA1hB,MAAA0hB,MAAA1hB,MAAA2hB,KAAA3hB,MAAAmH,MAAA,EAAA1G,SAAAD,KAAA,UAAAI,EAAAC,IAAA,MAAhB6d,EAAgB5d,UAAA,wBAAA8gB,aAAA,SAAAzgB,EAAAC,GAAA,EAAAD,uCAAhBC,EAAA0e,SAAS,KAAA9f,OAAA,+BAAToB,EAAA0a,SAAS,KAAA9b,wBARP,CACP6hB,IACAnU,GACAlM,EACA2T,GACA2M,MACH9hB,OAAAqN,MAAAvE,GAAA/H,MAAA,GAAAC,KAAA,GAAAC,OAAA,m4DAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3IGnB,MAAA,SAIIA,MAAA,WACJA,QACAA,MAAA,WAGIA,MAAA,mBACJA,QAEAA,MAAA,WACIA,MAAA,EAAA+hB,GAAA,iCAYA/hB,MAAA,EAAAgiB,GAAA,sCAKJhiB,QACAA,MAAA,GAAAiiB,GAAA,iDAIAjiB,MAAA,GAAAkiB,GAAA,gDAIAliB,MAAA,GAAAmiB,GAAA,0CAIAniB,MAAA,GAAAoiB,GAAA,cAqCApiB,MAAA,YAAAA,CAEC,aAC4BA,MAAA,aAAMA,QAC/BA,MAAA,aACIA,MAAA,aACAA,MAAA,aAAyBA,MAAA,sBAAeA,UAE5CA,MAAA,aACIA,MAAA,aACAA,MAAA,aAAyBA,MAAA,mBAAYA,UAEzCA,MAAA,aACIA,MAAA,aACAA,MAAA,aAAyBA,MAAA,oBAAaA,UAE1CA,MAAA,aACIA,MAAA,aACAA,MAAA,aAAyBA,MAAA,yBAAkBA,mBAhG/CA,MAAA,aAAAA,MAAA,GAAAqiB,KAEkBriB,MAAA,GAAAA,MAAA,YAAAoB,EAAAud,KAAA,KAAAvd,EAAAud,KAAA2D,IAAAtiB,OAKlBA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAoB,EAAAwd,KAAA,iBAKK5e,MAAA,GAAAA,MAAA,QAAAA,MAAA,KAAAoB,EAAA6e,mBAYAjgB,MAAA,GAAAA,MAAA,OAAAA,MAAA,KAAAoB,EAAA6e,mBAMJjgB,MAAA,GAAAA,MAAA,QAAAA,MAAA,MAAAoB,EAAA6e,mBAIAjgB,MAAA,GAAAA,MAAA,QAAAA,MAAA,MAAAoB,EAAA6e,mBAIAjgB,MAAA,GAAAA,MAAA,OAAAoB,EAAAmd,aAAAve,MAAA,MAAAoB,EAAA6e,mBAQAjgB,MAAA,GAAAA,MAAA,QAAAoB,EAAAyd,+kBA6FAH,CAAiB,KCjK9B,MAAM6D,GAAkB,CACpB,CAAEC,KAAM,GAAIC,UAAW/D,IACvB,CAAE8D,KAAM,eAAgBC,UAAW/D,KAehC,IAAMgE,GAAgB,MAAvB,MAAOA,EAAgBjiB,SAAAD,KAAA,mBAAAE,iBAAhBgiB,EAAgB,EAAAjiB,SAAAD,KAAA,UAAAI,EAAA+b,IAAA,MAAhB+F,IAAgBjiB,SAAAD,KAAA,UAAAI,EAAAgc,IAAA,UATrBC,KACA8F,KAAaC,SAASL,IACtBzF,KACA+F,MACAC,KACA/F,KACAL,aAGKgG,CAAgB","names":["i0","ctx_r0","temp","ctx_r1","humidity","ExploreSensorInfoComponent","constructor","_details","this","static","t","MAP_FEATURE_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","ExploreZonesService","AsyncHandler","_state","_org","_settings","super","_statuses","_count_key","_location","_capacity","_draw","_points","_features","_bind","combineLatest","active_building","level","pipe","filter","bld","lvl","map","_","system_id","binding","getModule","id","subscription","listen","subscribe","d","parseData","bind","init","_this","_asyncToGenerator","initialised","first","toPromise","zone_metadata","Promise","all","levels","showMetadata","zone","areas","details","area","capacity","hide_label","label_location","draw_polygon","area_count_key","properties","coordinates","geometry","length","getCenterPoint","get","updateStatus","data","value","labels","features","filled","area_id","content","count","temperature","people_count","people_count_sum","queue_size","counter","push","location","z_index","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","track_id","MapPolygonComponent","color","points","fill","opacity","setFeatures","setStyles","i1","i2","i3","Yz7","factory","ɵfac","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","resource","name","map_id","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","$event","_r4","ctx_r3","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_7_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","ctx_r4","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","ctx_r8","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","ngOnInit","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_1","$localize","ExploreDeviceInfoComponent_ng_template_5_Template","_r2","ExploreDesksService","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","switchMap","catchError","of","Array","shareReplay","desk_list","debounceTime","i","j","Desk","e","tap","processBindingChange","_booking_list","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","zones","bookings","next","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","options","getValue","devices","v","at_location","signs_of_life","departments","desk","staff_name","department","processDevices","timeout","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","ExploreParkingService","_poll","asObservable","active_levels","l","tags","events","startOfMinute","endOfMinute","existing_event","week_events","spaces","forkJoin","s","flatten","active_spaces","available_spaces","week_availablility","availability","day","day_events","isSameDay","available","_updateParkingSpaces","interval","styles","space","can_book","zoom_level","active_level","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","i18n_0","ExploreSearchService","_emergency_contacts","_filter","_loading","emergency_contacts","_role_assigned_contacts","contacts","_user_search","q","search_fn","_space_search","querySystems","organisation","Space","levelWithID","_points_of_interest","listChildMetadata","building","item","metadata","points_of_interest","poi","search_results","users","roled_contacts","search","toLowerCase","results","display_name","u","roles","role","is_role","sort","a","b","localeCompare","loading","queryUsers","authority_id","authority","searchStaff","moduleFromMetadata","contacts_map","setFilter","str","providedIn","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","tmp_0_0","ExploreSearchComponent","checkClick","event","_el","contains","target","show","_input_el","blur","_search","_router","_route","search_str","setItem","Object","select","onTouch","showSearch","focus","closeSearch","query","navigate","relativeTo","queryParams","viewQuery","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","_r3","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","lvl_r1","$implicit","ctx_r2","setLevel","number","ExploreLevelSelectComponent","ExploreLevelSelectComponent_button_1_Template","_r7","updateZoom","updateCenter","url","tmp_1_0","tmp_2_0","_r11","ctx_r10","toggleZones","ExploreComponent_div_16_div_5_Template","can_search","disable","tmp_3_0","ExploreComponent","logo","time","hide_zones","enabled","unique","_s","_desks","_zones","_parking","_spaces","_space_pipe","_maps","reset_delay","map_url","map_styles","map_positions","map_features","map_actions","map_labels","onMouse","resetKiosk","o","use_mapsindoors$","available$","VirtualKeyboardComponent","localStorage","getItem","queryParamMap","params","has","locateSpace","showStaff","locateUser","MapPinComponent","transform","feature","locate_details","module","locations","MapLocation","indexOf","pos","MapRadiusComponent","radius","document","activeElement","closeAll","i6","i7","hostBindings","ExploreSpacesService","SpacePipe","ExploreComponent_i_map_6_Template","ExploreComponent_indoor_maps_8_Template","ExploreComponent_explore_zoom_controls_10_Template","ExploreComponent_explore_level_select_12_Template","ExploreComponent_explore_search_14_Template","ExploreComponent_div_16_Template","_c1","src","ROUTES","path","component","AppExploreModule","RouterModule","forChild","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/map-kiosk/src/app/explore-level-select.component.ts","./apps/map-kiosk/src/app/explore.component.ts","./apps/visitor-kiosk/src/app/explore.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { combineLatest } from 'rxjs';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n    area_count_key: string;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n    ]).pipe(\n        filter(([bld, lvl]) => !!bld && !!lvl),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const count =\n                zone[\n                    this._count_key[zone.area_id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ];\n            const filled = count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_zone_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter(\n                (_) =>\n                    !events.find((e) => e.asset_id === _.id) && !_.assigned_to\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, flatten, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = [\n                ...spaces\n                    .filter(\n                        (_) =>\n                            _.email.toLowerCase().includes(search) ||\n                            _.name.toLowerCase().includes(search) ||\n                            _.display_name.toLowerCase().includes(search)\n                    )\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'space',\n                        name: s.display_name || s.name,\n                        description: `Capacity: ${s.capacity} `,\n                    })),\n                ...flatten(\n                    roled_contacts.map((u) =>\n                        (u as any).roles.map(\n                            (role) =>\n                                ({\n                                    id: u.email,\n                                    type: role || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                    )\n                ).filter(\n                    (_) =>\n                        _.name.toLowerCase().includes(search) ||\n                        _.description.toLowerCase().includes(search) ||\n                        _.type.toLowerCase().includes(search)\n                ),\n                ...contacts\n                    .map(\n                        (u) =>\n                            ({\n                                id: u.email,\n                                type: (u as any).type || 'contact',\n                                is_role: true,\n                                name: u.name,\n                                description: u.email,\n                            } as any)\n                    )\n                    .filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                ...users.map((u) => ({\n                    id: u.email,\n                    type: 'user',\n                    name: u.name,\n                    description: u.email,\n                })),\n                ...features\n                    .filter((_) => _.name.toLowerCase().includes(search))\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'feature',\n                        name: s.name,\n                        description: '',\n                        zone: (s as any).zone?.id,\n                    })),\n            ];\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-base-100 m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'explore-level-select',\n    template: `\n        <div\n            class=\"m-2 rounded overflow-hidden bg-base-100 shadow border border-solid border-base-300\"\n        >\n            <button\n                *ngFor=\"let lvl of levels | async\"\n                class=\"flex flex-col items-center justify-center h-16 w-16 p-2 border-none\"\n                [class.active]=\"lvl.id === (level | async)?.id\"\n                (click)=\"setLevel(lvl)\"\n                matRipple\n            >\n                <div class=\"text-2xl\">{{ lvl.number }}</div>\n                <p class=\"text-sm whitespace-nowrap m-0\">\n                    {{ lvl.display_name || lvl.name }}\n                </p>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            .active {\n                background: var(--s) !important;\n                color: #fff !important;\n            }\n\n            button:not(:first-child) {\n                border-top: 1px solid var(--b3) !important;\n            }\n        `,\n    ],\n})\nexport class ExploreLevelSelectComponent {\n    public readonly levels = this._org.active_levels;\n    public readonly level = this._state.level;\n\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService\n    ) {}\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n    }\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n    VirtualKeyboardComponent,\n} from '@placeos/components';\nimport {\n    ExploreDesksService,\n    ExploreParkingService,\n    ExploreSpacesService,\n    ExploreStateService,\n    ExploreZonesService,\n} from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { Point } from '@placeos/svg-viewer';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { startOfMinute } from 'date-fns';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-explore]',\n    template: `\n        <a\n            class=\"absolute top-0 left-0 bg-base-100 rounded-br-2xl p-4 z-10 shadow border-b border-r border-base-200\"\n            [routerLink]=\"['/']\"\n        >\n            <img class=\"w-32\" [src]=\"logo?.src\" />\n        </a>\n        <div\n            class=\"absolute top-0 left-1/2 -translate-x-1/2 bg-base-100 rounded-b-2xl px-4 pb-4 pt-3 z-10 shadow border-b border-r border-base-200 text-base-content\"\n        >\n            {{ time | date: 'fullDate' }}\n        </div>\n        <!-- <explore-map-stack class=\"z-0\"></explore-map-stack> -->\n        <div class=\"absolute inset-0\">\n            <i-map\n                *ngIf=\"!(use_mapsindoors$ | async)\"\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async)?.zoom\"\n                [center]=\"(positions | async)?.center\"\n                (zoomChange)=\"updateZoom($event)\"\n                (centerChange)=\"updateCenter($event)\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [labels]=\"labels | async\"\n            ></i-map>\n            <indoor-maps\n                *ngIf=\"use_mapsindoors$ | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></indoor-maps>\n        </div>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 transform -translate-y-1/2 right-0\"\n        ></explore-zoom-controls>\n        <explore-level-select\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute left-1 top-1/2 transform -translate-y-1/2 z-10\"\n        ></explore-level-select>\n        <explore-search\n            *ngIf=\"can_search && !(use_mapsindoors$ | async)\"\n            class=\"absolute top-1 right-1\"\n        ></explore-search>\n        <div\n            name=\"zones\"\n            class=\"p-2 bg-base-100 border border-base-200 absolute right-1 m-2 rounded flex flex-col items-center space-y-2\"\n            [class.top-2]=\"!can_search\"\n            [class.top-16]=\"can_search\"\n            *ngIf=\"!hide_zones\"\n        >\n            <div class=\"flex items-center\">\n                Zones\n                <mat-slide-toggle\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                zone-legend\n                *ngIf=\"!(options | async)?.disable?.includes('zones')\"\n                class=\"space-y-2\"\n            >\n                <div class=\"font-medium\">\n                    Zone Usage\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"h-3 w-3 rounded-full bg-success\"></div>\n                        <div class=\"w-20 text-center\">0 ~ 50%</div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"h-3 w-3 rounded-full bg-warning\"></div>\n                        <div class=\"w-20 text-center\">51 ~ 75%</div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"h-3 w-3 rounded-full bg-error\"></div>\n                        <div class=\"w-20 text-center\">76 ~ 100%</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"absolute bottom-2 right-2 p-2 rounded bg-base-100 shadow border border-base-200\"\n        >\n            <div class=\"font-medium\">Legend</div>\n            <div class=\"flex items-center space-x-2 p-2\">\n                <div class=\"h-3 w-3 rounded-full bg-success\"></div>\n                <div class=\"text-center\">Space Available</div>\n            </div>\n            <div class=\"flex items-center space-x-2 rounded bg-base-200 p-2\">\n                <div class=\"h-3 w-3 rounded-full bg-error\"></div>\n                <div class=\"text-center\">Space In Use</div>\n            </div>\n            <div class=\"flex items-center space-x-2 rounded bg-base-200 p-2\">\n                <div class=\"h-3 w-3 rounded-full bg-warning\"></div>\n                <div class=\"text-center\">Space Pending</div>\n            </div>\n            <div class=\"flex items-center space-x-2 p-2\">\n                <div class=\"h-3 w-3 rounded-full bg-base-300\"></div>\n                <div class=\"text-center\">Space Not-bookable</div>\n            </div>\n        </div>\n        <!-- <footer-menu class=\"w-full\"></footer-menu> -->\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                display: flex;\n                flex-direction: column;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: var(--b2);\n            }\n\n            @media screen and (max-height: 640px) {\n                explore-level-select {\n                    transform: translateY(0) !important;\n                    top: auto !important;\n                    bottom: 0 !important;\n                }\n            }\n\n            @media screen and (orientation: landscape) {\n                explore-level-select {\n                    transform: translateY(0) !important;\n                    top: auto !important;\n                    bottom: 0 !important;\n                }\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        SpacePipe,\n    ],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n\n    /** Application logo to display */\n    public get logo() {\n        return this._settings.get('theme') === 'dark'\n            ? this._settings.get('app.logo_dark')\n            : this._settings.get('app.logo_light');\n    }\n\n    public get time() {\n        return startOfMinute(Date.now());\n    }\n\n    public get hide_zones() {\n        return this._settings.get('app.hide_zones');\n    }\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    public get can_search() {\n        return !!this._settings.get('app.explore.search_enabled');\n    }\n\n    public readonly use_mapsindoors$ = this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this._desks.setOptions({ custom: true });\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        this.resetKiosk();\n        VirtualKeyboardComponent.enabled =\n            localStorage.getItem('OSK.enabled') === 'true';\n        this.subscription(\n            'level',\n            this._state.level.subscribe(() =>\n                this.timeout('update_location', () => {\n                    this._state.setFeatures('_located', []);\n                })\n            )\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('feature')) {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', [\n                            {\n                                location: params.get('feature'),\n                                content: MapPinComponent,\n                                data: {},\n                            },\n                        ]);\n                    });\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return;\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    public resetKiosk() {\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { SharedComponentsModule } from './components/shared-components.module';\n\nimport { ExploreComponent } from 'apps/map-kiosk/src/app/explore.component';\nimport { ExploreLevelSelectComponent } from 'apps/map-kiosk/src/app/explore-level-select.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [ExploreComponent, ExploreLevelSelectComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}