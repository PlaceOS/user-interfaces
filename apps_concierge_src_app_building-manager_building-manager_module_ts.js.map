{"version":3,"file":"apps_concierge_src_app_building-manager_building-manager_module_ts.js","mappings":"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","names":["BuildingManagementService","constructor","_org","_dialog","this","_options","BehaviorSubject","_change","options","asObservable","filtered_buildings","combineLatest","region_list","building_list","initialised","pipe","map","regions","list","zone","filter","_","parent_id","search","name","toLowerCase","includes","bld","parent","find","id","region","display_name","level_count","levelsForBuilding","length","setFilters","next","getValue","setSearchString","editBuilding","building","PlaceSystem","t","i0","i1","i2","core","Yz7","factory","Éµfac","providedIn","tmp_0_0","data_r6","data_r7","BuildingListComponent_ng_template_4_img_0_Template","BuildingListComponent_ng_template_4_span_1_Template","row_r11","_r13","row","ctx_r12","BuildingListComponent","_manager","buildings","Xpm","selectors","decls","vars","consts","template","rf","ctx","BuildingListComponent_ng_template_2_Template","BuildingListComponent_ng_template_4_Template","BuildingListComponent_ng_template_6_Template","_c0","_c1","_c2","_c3","_r2","_r0","_r4","BuildingManagerComponent","attrs","ROUTES","path","component","BuildingManagerModule","oAB","cJS","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/building-manager/building-management.service.ts","./apps/concierge/src/app/building-manager/building-list.component.ts","./apps/concierge/src/app/building-manager/building-manager.component.ts","./apps/concierge/src/app/building-manager/building-manager.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    PlaceSystem,\n    authority,\n    querySystems,\n    queryZones,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nexport interface BuildingListOptions {\n    zone?: string;\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BuildingManagementService {\n    private _options = new BehaviorSubject<BuildingListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly filtered_buildings = combineLatest([\n        this._org.region_list,\n        this._org.building_list,\n        this._options,\n        this._org.initialised,\n    ]).pipe(\n        map(([regions, list, options]) => {\n            if (options.zone) {\n                list = list.filter((_) => _.parent_id === options.zone);\n            }\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            for (const bld of list) {\n                const parent = regions.find((_) => _.id === bld.parent_id);\n                if (parent) {\n                    (bld as any).region = parent.display_name || parent.name;\n                }\n                (bld as any).level_count =\n                    this._org.levelsForBuilding(bld)?.length || 0;\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<BuildingListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editBuilding(building: PlaceSystem = new PlaceSystem()) {\n        // const ref = this._dialog.open(BuildingModalComponent, {\n        //     data: { building },\n        // });\n        // ref.afterClosed().subscribe((data) => {\n        //     if (data) setTimeout(() => this._change.next(Date.now()), 300);\n        // });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BuildingManagementService } from './building-management.service';\n\n@Component({\n    selector: 'building-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto\">\n            <custom-table\n                class=\"block min-w-[60rem] w-full h-full\"\n                [dataSource]=\"buildings\"\n                [columns]=\"[\n                    'display_name',\n                    'address',\n                    'timezone',\n                    'region',\n                    'level_count',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Name',\n                    'Location',\n                    'Timezone',\n                    'Region',\n                    'Levels',\n                    ' '\n                ]\"\n                [column_size]=\"['flex', '12r', '12r', '10r', '6r', '6r', '5r']\"\n                [template]=\"{\n                    images: image_template,\n                    zones: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No buildings\"\n            ></custom-table>\n        </div>\n        <ng-template #level_template let-data=\"data\">\n            {{ (data | level)?.display_name || (data | level)?.name }}\n        </ng-template>\n        <ng-template #image_template let-data=\"data\">\n            <img\n                *ngIf=\"data.length\"\n                [src]=\"data[0]\"\n                class=\"max-h-[3rem] max-w-[8rem]\"\n            />\n            <span *ngIf=\"!data.length\" class=\"opacity-30\">No Images</span>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <button\n                    btn\n                    icon\n                    matTooltip=\"Edit Building\"\n                    (click)=\"editBuilding(row)\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class BuildingListComponent {\n    public readonly buildings = this._manager.filtered_buildings;\n\n    public readonly editBuilding = (building) =>\n        this._manager.editBuilding(building);\n\n    constructor(private _manager: BuildingManagementService) {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-building-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header class=\"flex items-center justify-between mb-2 p-8\">\n                    <h2 class=\"text-2xl font-medium\">Building Management</h2>\n                    <button btn matRipple>Add Building</button>\n                </header>\n                <building-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></building-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: #fff;\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class BuildingManagerComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { BuildingManagerComponent } from './building-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { BuildingListComponent } from './building-list.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: BuildingManagerComponent },\n    { path: 'new', component: BuildingManagerComponent },\n];\n\n@NgModule({\n    declarations: [BuildingManagerComponent, BuildingListComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class BuildingManagerModule {}\n"],"x_google_ignoreList":[]}