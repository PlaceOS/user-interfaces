{"version":3,"sources":["./apps/concierge/src/app/day-view/dayview-topbar.component.ts","./apps/concierge/src/app/day-view/dayview-event.component.ts","./apps/concierge/src/app/day-view/dayview-space.component.ts","./apps/concierge/src/app/day-view/dayview-timeline.component.ts","./apps/concierge/src/app/day-view/day-view.component.ts","./apps/concierge/src/app/day-view/day-view.module.ts"],"names":["DayviewTopbarComponent","_state","_org","_route","_router","super","zones","types","id","name","type_list","this","map","i","setDate","d","newBooking","levels","active_levels","ui_options","options","updateZones","z","navigate","relativeTo","queryParams","zone_ids","join","setZones","updateTypes","setFilters","hide_type","reduce","list","item","includes","push","setUIOptions","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","get","split","length","level","levelWithID","building","buildings","find","bld","parent_id","filter","zone","lvl","updateUIOptions","DayviewEventComponent","top","height","overflow_top","overflow_height","view","e","setEvent","date","Date","event","format","addMinutes","duration","has_visitors","status","changes","start","startOfDay","diff","differenceInMinutes","setup","breakdown","DayviewSpaceComponent","events","filtered","bookings","bkn","resources","space","email","HOUR_BLOCKS","Array","fill","idx","DayviewTimelineComponent","_spaces","blocks","scroll","x","y","loading","space_list","combineLatest","active_building","details","spaces","startPolling","stopPolling","box","_ref_el","nativeElement","getBoundingClientRect","requestAnimationFrame","srcElement","scrollLeft","scrollTop","onScroll","DayViewComponent","ROUTES","path","component","DayViewModule","forChild"],"mappings":"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","file":"day-view-day-view-module.js","sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, Identity } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BookingUIOptions, EventsStateService } from './events-state.service';\n\n@Component({\n    selector: 'dayview-topbar',\n    template: `\n        <button mat-button class=\"w-12 xl:w-auto\" (click)=\"newBooking()\">\n            <div class=\"flex items-center\">\n                <app-icon\n                    class=\"mr-2\"\n                    [icon]=\"{ class: 'material-icons', content: 'add' }\"\n                ></app-icon>\n                <div class=\"hidden xl:block\">New Booking</div>\n            </div>\n        </button>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option *ngFor=\"let level of levels | async\" [value]=\"level.id\">\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"type_list\"\n                (ngModelChange)=\"updateTypes($event)\"\n                placeholder=\"No Events\"\n            >\n                <mat-select-trigger>Legend</mat-select-trigger>\n                <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(ui_options | async)?.show_overflow\"\n            (ngModelChange)=\"updateUIOptions({ show_overflow: $event })\"\n            ><div class=\"text-xs\">Setup / Breakdown</div></mat-slide-toggle\n        >\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(ui_options | async)?.show_cleaning\"\n            (ngModelChange)=\"updateUIOptions({ show_cleaning: $event })\"\n            ><div class=\"text-xs\">Cleaners View</div></mat-slide-toggle\n        >\n        <div class=\"flex-1 w-0\"></div>\n        <!-- <searchbar class=\"mr-2\"></searchbar> -->\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n            }\n\n            button {\n                min-width: 0;\n                padding: 0 .85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n                margin-left: 1em;\n            }\n\n            mat-slide-toggle div {\n                width: 5.5em;\n                white-space: initial;\n                line-height: 1.2em\n            }\n        `,\n    ],\n})\nexport class DayviewTopbarComponent extends BaseClass {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setDate(d);\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly ui_options = this._state.options;\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    /** List of levels for the active building */\n    public readonly updateTypes = (types) =>\n        this._state.setFilters({\n            hide_type: this.types.reduce((list, item) => {\n                !types.includes(item.id) ? list.push(item) : '';\n                return list;\n            }, []),\n        });\n\n    public updateUIOptions(options: BookingUIOptions) {\n        this._state.setUIOptions(options);\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) => levels.find((lvl) => lvl.id === zone));\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.updateTypes(this.type_list);\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { startOfDay, differenceInMinutes, format, addMinutes } from 'date-fns';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { EventsStateService } from './events-state.service';\n\n@Component({\n    selector: 'dayview-event',\n    template: `\n        <div\n            *ngIf=\"(ui_options | async)?.show_overflow\"\n            [class]=\"'overflow-block absolute rounded overflow-hidden w-full ' + type\"\n            [style.top]=\"overflow_top * 100 + '%'\"\n            [style.height]=\"overflow_height * 100 + '%'\"\n        ></div>\n        <div\n            name=\"event\"\n            matRipple\n            [class]=\"'absolute rounded overflow-hidden text-sm ' + type\"\n            *ngIf=\"event\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n            (click)=\"view(event)\"\n        >\n            <div class=\"info\">{{ event.organiser?.name }}</div>\n            <div class=\"info flex items-center\" *ngIf=\"event.duration > 30\">\n                <app-icon class=\"mx-2\" [icon]=\"{ class: 'material-icons', content: 'title' }\"></app-icon>\n                {{ event.title }}\n            </div>\n            <div class=\"info flex items-center\" *ngIf=\"event.duration > 60\">\n                <app-icon class=\"mx-2\" [icon]=\"{ class: 'material-icons', content: 'schedule' }\"></app-icon>\n                {{ time }}\n            </div>\n            <div class=\"info flex items-center\" *ngIf=\"event.duration > 90\">\n                <app-icon class=\"mx-2\" [icon]=\"{ class: 'material-icons', content: 'user' }\"></app-icon>\n                {{ event.attendees.length }} Attendee{{ event.attendees.length === 1 ? '' : 's' }}\n            </div>\n        </div>\n        <div\n            *ngIf=\"(ui_options | async)?.show_cleaning\"\n            class=\"catering-block absolute rounded overflow-hidden flex w-full shadow p-2\"\n            [style.top]=\"overflow_top * 100 + '%'\"\n            [style.height]=\"overflow_height * 100 + '%'\"\n        >\n            <div [class]=\"'icon flex mr-2 text-3xl rounded ' + event.cleaning_status\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: event.cleaning_status === 'done' ? 'done' : 'warning' }\"></app-icon>\n            </div>\n            <div class=\"text\">{{ event.cleaning_status === 'done' ? 'Finished' : 'Scheduled to' }} clean at {{ event.cleaning_time }}</div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                border-right: 1px solid rgba(0, 0, 0, 0.1);\n            }\n\n            [name='event'] {\n                background-color: #ccc;\n                width: 12rem;\n                z-index: 100;\n                transition: box-shadow 200ms;\n            }\n\n            [name='event']:hover {\n                box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14),\n                    0 2px 1px -1px rgba(0, 0, 0, 0.12);\n                cursor: pointer;\n                z-index: 999;\n            }\n\n            .overflow-block {\n                opacity: .3;\n                width: 12rem;\n            }\n\n            .catering-block {\n                background-color: #fff;\n                width: 12rem;\n                z-index: 999;\n            }\n\n            .internal {\n                background-color: #00a4c7;\n                color: #fff;\n            }\n\n            .icon {\n                height: 1.5em;\n                width: 1.5em;\n                color: #ffbf1f;\n                background-color: #f0f0f0;\n            }\n\n            .icon.done {\n                color: #21a453;\n            }\n\n            .external {\n                background-color: #d85be0;\n                color: #fff;\n            }\n\n            .cancelled {\n                background-color: #eee;\n            }\n\n            .info:first-child {\n                padding: 0.75em 0.5em;\n            }\n\n            .info {\n                padding: 0.25em 0.5em;\n            }\n        `,\n    ],\n})\nexport class DayviewEventComponent implements OnChanges {\n    /** Event to display */\n    @Input() public event: CalendarEvent;\n    /** Top position for the event */\n    public top: number = -999;\n    /** Height of the event on the calendar */\n    public height: number = 0;\n    /** Top position for the event */\n    public overflow_top: number = -999;\n    /** Height of the event on the calendar */\n    public overflow_height: number = 0;\n\n    public readonly view = (e) => this._state.setEvent(e);\n\n    public readonly ui_options = this._state.options;\n\n    public get time() {\n        const date = new Date(this.event.date);\n        return (\n            format(date, 'h:mm a') + ' - ' + format(addMinutes(date, this.event.duration), 'h:mm a')\n        );\n    }\n\n    public get type() {\n        return this.event.has_visitors\n            ? 'external'\n            : this.event.status === 'cancelled'\n            ? 'cancelled'\n            : 'internal';\n    }\n\n    constructor(private _state: EventsStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            const start = startOfDay(new Date(this.event.date));\n            const diff = differenceInMinutes(new Date(this.event.date), start);\n            this.top = diff / (24 * 60);\n            this.height = this.event.duration / (24 * 60);\n            this.overflow_top = (diff - this.event.setup) / (24 * 60);\n            this.overflow_height =\n                (this.event.duration + this.event.setup + this.event.breakdown) / (24 * 60);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\n\n@Component({\n    selector: 'dayview-space',\n    template: `\n        <dayview-event *ngFor=\"let event of events | async\" [event]=\"event\"></dayview-event>\n        `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                border-right: 1px solid rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class DayviewSpaceComponent {\n    /** Space to display events for */\n    @Input() public space: Space;\n\n    public shown_event: CalendarEvent;\n    /** List of events for the selected space */\n    public readonly events = this._state.filtered.pipe(\n        map((bookings) =>\n            bookings.filter((bkn) =>\n                bkn.resources.find((space) => this.space.email === space.email)\n            )\n        )\n    );\n\n    constructor(private _state: EventsStateService) {}\n\n    ngOnInit() {\n        this._state.filtered.subscribe((events) => {\n\n        });\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\n\nconst HOUR_BLOCKS = new Array(24).fill(0).map((_, idx) => {\n    return (idx % 12 === 0 ? 12 : idx % 12) + (idx >= 12 ? ' PM' : ' AM');\n});\n\n@Component({\n    selector: 'dayview-timeline',\n    template: `\n        <div class=\"time h-full overflow-hidden\">\n            <div class=\"headers relative\">\n                <div class=\"white-space absolute inset-0\" style=\"bottom: 1em\"></div>\n            </div>\n            <div *ngFor=\"let time of blocks\" name=\"change-transform\" class=\"relative\" [style.transform]=\"'translateY(-' + scroll.y + 'px)'\">\n                <div class=\"text absolute w-full text-xs\">{{ time }}</div>\n                <div class=\"bar absolute\"></div>\n            </div>\n        </div>\n        <div class=\"h-full flex-1 flex flex-col\">\n            <div class=\"headers flex relative overflow-hidden\">\n                <div class=\"bar absolute\"></div>\n                <div\n                    *ngFor=\"let space of space_list | async\"\n                    name=\"change-transform\"\n                    class=\"relative w\"\n                    [style.transform]=\"'translateX(-' + scroll.x + 'px)'\"\n                >\n                    <div class=\"bar absolute\"></div>\n                    <div class=\"name m-2 text-center\">{{ space.display_name || space.name }}</div>\n                </div>\n            </div>\n            <div\n                #scroll_el\n                class=\"content relative flex flex-1 overflow-auto\"\n                (scroll)=\"onScroll($event)\"\n            >\n                <div #ref class=\"ref absolute\"></div>\n                <dayview-space\n                    *ngFor=\"let space of space_list | async\"\n                    [space]=\"space\"\n                ></dayview-space>\n                <div\n                    *ngFor=\"let time of blocks; let i = index\"\n                    class=\"block absolute w-full\"\n                    [style.width]=\"(space_list | async).length * 12 + 'em'\"\n                    [style.top]=\"i * 4 + 'em'\"\n                ></div>\n            </div>\n        </div>\n        <mat-progress-bar *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        <dayview-event-details *ngIf=\"event | async\" [event]=\"event | async\"></dayview-event-details>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                flex: 1;\n                min-height: 50%;\n            }\n\n            .time {\n                width: 6em;\n            }\n\n            .time > div:not(.headers) {\n                height: 4em;\n            }\n\n            .bar {\n                width: 1em;\n                top: 0;\n                right: 0;\n                height: 1px;\n                background-color: rgba(0, 0, 0, 0.1);\n                z-index: 0;\n            }\n\n            .headers {\n                height: 4em;\n                max-width: calc(100vw - 12em);\n            }\n\n            .white-space {\n                background-color: #f0f0f0;\n                z-index: 999;\n            }\n\n            .headers .bar {\n                width: 1px;\n                bottom: 0;\n                right: -1px;\n                height: 2em;\n                background-color: rgba(0, 0, 0, 0.1);\n                top: auto;\n            }\n\n            .headers > .bar:first-child {\n                width: 1px;\n                bottom: 0;\n                right: auto;\n                left: 0;\n                height: 2em;\n                background-color: rgba(0, 0, 0, 0.1);\n                top: auto;\n            }\n\n            .w,\n            dayview-space {\n                width: 12em;\n                min-width: 12em;\n            }\n\n            dayview-space {\n                height: 96em;\n            }\n\n            .block {\n                height: 4em;\n                border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n                pointer-events: none;\n                min-width: 100%;\n                z-index: 0;\n            }\n\n            .text {\n                text-align: center;\n                transform: translateY(-50%);\n                padding: 0 2.5em;\n                opacity: 0.65;\n            }\n\n            .ref {\n                top: 0;\n                left: 0;\n                height: 1px;\n                width: 1px;\n                height: 96em;\n            }\n\n            .content {\n                max-width: calc(100vw - 12em);\n                border-top: 1px solid rgba(0, 0, 0, 0.1);\n                border-left: 1px solid rgba(0, 0, 0, 0.1);\n            }\n\n            mat-progress-bar {\n                position: absolute;\n                left: 0;\n                right: 0;\n                bottom: 0;\n            }\n\n            [name=\"change-transform\"] {\n                will-change: transform;\n            }\n        `,\n    ],\n})\nexport class DayviewTimelineComponent extends BaseClass {\n    /** Time blocks to display */\n    public readonly blocks: string[] = HOUR_BLOCKS;\n    /** Current scroll position of the content */\n    public scroll: { x: number; y: number } = { x: 0, y: 0 };\n    /** Reference Box */\n    public box: ClientRect;\n    /** Whether event data is loading */\n    public readonly loading = this._state.loading;\n    /** Whether event data is loading */\n    public readonly event = this._state.event;\n    /** List of spaces to display */\n    public readonly space_list = combineLatest([\n        this._org.active_building,\n        this._spaces.list,\n        this._state.zones,\n    ]).pipe(\n        map((details) => {\n            const [bld, spaces, zones] = details;\n            return (\n                spaces.filter(\n                    (space) =>\n                        space.zones.includes(bld.id) &&\n                        (!zones?.length || space.zones.find((z) => zones.includes(z)))\n                ) || []\n            );\n        })\n    );\n\n    @ViewChild('ref') private _ref_el: ElementRef;\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventsStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n\n    public ngAfterViewInit() {\n        this.box = this._ref_el.nativeElement.getBoundingClientRect();\n    }\n\n    public onScroll(e) {\n        if (this._ref_el) {\n            requestAnimationFrame(() =>\n                this.scroll = {\n                    x: e.srcElement.scrollLeft,\n                    y: e.srcElement.scrollTop\n                }\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-dayview]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden\">\n            <dayview-topbar></dayview-topbar>\n            <dayview-timeline></dayview-timeline>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `\n    ],\n})\nexport class DayViewComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayviewTopbarComponent } from './dayview-topbar.component';\nimport { DayviewTimelineComponent } from './dayview-timeline.component';\nimport { DayviewSpaceComponent } from './dayview-space.component';\nimport { DayviewEventComponent } from './dayview-event.component';\n\nimport { BookingModalComponent } from './booking-modal.component';\nimport { EventFormComponent } from './event-form.component';\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nconst ROUTES: Route[] = [{ path: '', component: DayViewComponent }];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayviewTopbarComponent,\n        DayviewTimelineComponent,\n        DayviewSpaceComponent,\n        DayviewEventComponent,\n\n        BookingModalComponent,\n        EventFormComponent\n    ],\n    imports: [CommonModule, FormsModule, UIModule, SharedSpacesModule, SharedUsersModule, RouterModule.forChild(ROUTES)],\n})\nexport class DayViewModule {}\n"],"sourceRoot":"webpack:///"}