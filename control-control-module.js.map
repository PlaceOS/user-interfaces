{"version":3,"sources":["./apps/workplace/src/app/control/list-item.component.ts","./apps/workplace/src/app/control/space-list.component.ts","./apps/workplace/src/app/control/control.component.ts","./apps/workplace/src/app/control/control.module.ts","./apps/workplace/src/app/bookings/space-flow/space-flow.service.ts"],"names":["ControlSpaceListItemComponent","_settings","_org","this","get","space","level","bld","buildings","find","building","id","parent_id","display_name","name","ControlSpaceListComponent","_spaces","super","space_list","initialised","pipe","first","_","subscribe","filter","support_url","sort","a","b","bld_a","space_a_name","toLowerCase","level_a_name","bld_a_name","bld_b","space_b_name","level_b_name","bld_b_name","localeCompare","search","search_str","space_name","level_name","bld_name","indexOf","ControlComponent","title","ROUTES","path","component","ControlModule","forChild","clearEventFormState","sessionStorage","removeItem","localStorage","SpaceFlowService","_calendar","_dialog","_event","_form","_filters","_loading_spaces","_loading_event","event","asObservable","form","filters","loading_spaces","loading_event","spaces","next","getValue","value","date","Date","valueOf","period_start","Math","floor","period_end","duration","zones","length","freeBusy","zone_ids","join","toPromise","then","list","capacity","clearState","setEvent","nearestTo","controls","subscription","storeState","setValue","ref","open","width","height","data","componentInstance","reason","attendees","push","metadata","close","setItem","JSON","stringify","toJSON","event_data","getItem","parse","form_data","patchValue","filter_data","markAllAsTouched","organiser","host","email","valid","key","invalid","Promise","reject","values"],"mappings":"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","file":"control-control-module.js","sourcesContent":["import { Component, Input } from '@angular/core';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'a-control-space-list-item',\n    template: `\n        <div\n            class=\"flex flex-wrap items-center sm:space-x-4 bg-white hover:bg-gray-100 overflow-hidden p-2 pl-4 mb-2\"\n            *ngIf=\"space\"\n            [class.with-image]=\"show_image\"\n        >\n            <div class=\"flex flex-col flex-1\">\n                <div class=\"text-xl\">{{ space.name }}</div>\n                <div class=\"flex items-center w-full text-sm\">\n                    <div class=\"flex-1\">{{ location }}</div>\n                    <div class=\"flex items-center text-lg\">\n                        <app-icon>account_circle</app-icon>\n                        {{ space.capacity || '0' }}\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"flex w-full sm:w-auto sm:flex-col items-center space-x-2 sm:space-x-0 sm:space-y-2 mt-4 sm:mt-0\"\n            >\n                <a\n                    mat-button\n                    button\n                    class=\"w-32 flex-1 sm:flex-none\"\n                    [href]=\"space.support_url | safe: 'url'\"\n                >\n                    Control\n                </a>\n                <a\n                    mat-button\n                    button\n                    class=\"w-32 flex-1 sm:flex-none inverse\"\n                    [routerLink]=\"['/explore']\"\n                    [queryParams]=\"{ space: space.id }\"\n                >\n                    Find\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ControlSpaceListItemComponent {\n    /** Space to display */\n    @Input() public space: Space;\n\n    public get show_image() {\n        return this._settings.get('app.space_display.show_images');\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find(\n            (building) => building.id === level.parent_id\n        );\n        return `${bld ? (bld.display_name || bld.name) + ', ' : ''}${\n            level.display_name || level.name\n        }`;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space, SpacesService } from '@placeos/spaces';\n\n@Component({\n    selector: 'a-control-space-list',\n    template: `\n        <div class=\"w-full flex items-center justify-center p-2\">\n            <mat-form-field overlay class=\"rounded\" appearance=\"outline\">\n                <app-icon class=\"text-xl\" matPrefix>search</app-icon>\n                <input\n                    matInput\n                    [(ngModel)]=\"search_str\"\n                    placeholder=\"Search...\"\n                />\n                <mat-spinner\n                    matSuffix\n                    class=\"top-2\"\n                    *ngIf=\"loading\"\n                    [diameter]=\"32\"\n                ></mat-spinner>\n            </mat-form-field>\n        </div>\n        <div\n            class=\"flex flex-col flex-1 overflow-auto w-full\"\n            *ngIf=\"filtered_list.length; else empty_state\"\n        >\n            <a-control-space-list-item\n                *ngFor=\"let space of filtered_list\"\n                [space]=\"space\"\n            ></a-control-space-list-item>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8\">\n                <app-icon>close</app-icon>\n                <p>\n                    {{\n                        search_str\n                            ? ' No matches for \"' + search_str + '\"'\n                            : 'No controllable spaces'\n                    }}\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 768px;\n                max-width: calc(100% - 2rem);\n            }\n        `,\n    ],\n})\nexport class ControlSpaceListComponent extends BaseClass implements OnInit {\n    /** List of controllable spaces */\n    public space_list: Space[] = [];\n    /** Filter string */\n    public search_str: string;\n    /** Whether space list is being filtered */\n    public loading: boolean;\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.space_list = this._spaces.filter(\n                (space) => !!space.support_url\n            );\n            this.space_list.sort((a, b) => {\n                const bld_a = this._org.buildings.find(\n                    (building) => building.id === a.level.parent_id\n                );\n                const space_a_name = (a.name || '').toLowerCase();\n                const level_a_name = (\n                    (a.level ? a.level.name : '') || ''\n                ).toLowerCase();\n                const bld_a_name = (\n                    (bld_a ? bld_a.name : '') || ''\n                ).toLowerCase();\n                const bld_b = this._org.buildings.find(\n                    (building) => building.id === b.level.parent_id\n                );\n                const space_b_name = (b.name || '').toLowerCase();\n                const level_b_name = (\n                    (b.level ? b.level.name : '') || ''\n                ).toLowerCase();\n                const bld_b_name = (\n                    (bld_b ? bld_b.name : '') || ''\n                ).toLowerCase();\n                return (\n                    bld_a_name.localeCompare(bld_b_name) ||\n                    level_a_name.localeCompare(level_b_name) ||\n                    space_a_name.localeCompare(space_b_name)\n                );\n            });\n        });\n    }\n\n    /** List of spaces filtered using the search string */\n    public get filtered_list(): Space[] {\n        const search = (this.search_str || '').toLowerCase();\n        return (this.space_list || []).filter((space) => {\n            const bld = this._org.buildings.find(\n                (building) => building.id === space.level.parent_id\n            );\n            const space_name = (space.name || '').toLowerCase();\n            const level_name = (\n                (space.level ? space.level.name : '') || ''\n            ).toLowerCase();\n            const bld_name = ((bld ? bld.name : '') || '').toLowerCase();\n            return (\n                space_name.indexOf(search) >= 0 ||\n                (level_name && level_name.indexOf(search) >= 0) ||\n                (bld_name && bld_name.indexOf(search) >= 0)\n            );\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BaseClass, SettingsService } from '@placeos/common';\nimport { clearEventFormState } from '../bookings/space-flow/space-flow.service';\n\n@Component({\n    selector: '[app-control]',\n    template: `\n        <a-topbar-header class=\"w-full\" [(menu)]=\"show_menu\"></a-topbar-header>\n        <main class=\"flex-1 h-1/2 w-full\">\n            <a-control-space-list></a-control-space-list>\n        </main>\n        <a-footer-menu></a-footer-menu>\n        <a-overlay-menu class=\"w-full\" [(show)]=\"show_menu\"></a-overlay-menu>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background: #f0f0f0;\n            }\n        `,\n    ],\n})\nexport class ControlComponent extends BaseClass implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Control';\n        clearEventFormState();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { ControlComponent } from './control.component';\nimport { SharedContentModule } from '../ui/shared.module';\nimport { ControlSpaceListComponent } from './space-list.component';\nimport { ControlSpaceListItemComponent } from './list-item.component';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [{ path: '', component: ControlComponent }];\n\n@NgModule({\n    declarations: [\n        ControlComponent,\n        ControlSpaceListComponent,\n        ControlSpaceListItemComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class ControlModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { first, shareReplay, switchMap } from 'rxjs/operators';\nimport { addMinutes, roundToNearestMinutes, isAfter, endOfDay } from 'date-fns';\n\nimport { BaseClass, currentUser, notifyError, unique } from '@placeos/common';\nimport {\n    CalendarEvent,\n    generateEventForm,\n    saveEvent,\n} from '@placeos/events';\nimport { CalendarService } from '@placeos/calendar';\nimport { OrganisationService } from '@placeos/organisation';\nimport { NewUserModalComponent } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface EventFormFilters {\n    capacity?: number;\n    zones?: string[];\n}\n\nexport function clearEventFormState(): void {\n    sessionStorage.removeItem('PLACEOS.event');\n    sessionStorage.removeItem('PLACEOS.event_form');\n    localStorage.removeItem('PLACEOS.event_filters');\n}\n\n@Injectable()\nexport class SpaceFlowService extends BaseClass {\n    /** Active event being worked on */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    /** Form fields for the current flow */\n    private _form = new BehaviorSubject<FormGroup>(null);\n    /** Form fields for the current flow */\n    private _filters = new BehaviorSubject<EventFormFilters>({});\n    /** Whether space listing is being retrieved */\n    private _loading_spaces = new BehaviorSubject<boolean>(false);\n    /** Whether changes to event are being saved */\n    private _loading_event = new BehaviorSubject<boolean>(false);\n\n    public readonly event = this._event.asObservable();\n    public readonly form = this._form.asObservable();\n    public get event_form() {\n        return this._form.getValue();\n    }\n    public readonly filters = this._filters.asObservable();\n    public readonly loading_spaces = this._loading_spaces.asObservable();\n    public readonly loading_event = this._loading_event.asObservable();\n    public get event_filters() {\n        return this._filters.getValue();\n    }\n    public readonly spaces = this._filters.pipe(\n        switchMap((filters) => {\n            this._loading_spaces.next(true);\n            const form = this._form.getValue().value;\n            if (!form.date) form.date = new Date().valueOf();\n            const period_start = Math.floor(\n                new Date(form.date).valueOf() / 1000\n            );\n            const period_end = Math.floor(\n                addMinutes(new Date(form.date), form.duration || 60).valueOf() /\n                    1000\n            );\n            const zones = filters?.zones?.length\n                ? filters.zones\n                : [this._org.building?.id];\n            return this._calendar\n                .freeBusy({\n                    zone_ids: zones.join(','),\n                    period_start,\n                    period_end,\n                }).toPromise()\n                .then((list) => {\n                    this._loading_spaces.next(false);\n                    return list.filter(\n                        (space) =>\n                            !filters.capacity ||\n                            filters.capacity >= space.capacity\n                    );\n                });\n        }),\n        shareReplay()\n    );\n\n    public get is_future_date() {\n        const date = this._form.getValue()?.controls?.date.value || new Date().valueOf();\n        return isAfter(new Date(date), endOfDay(new Date()));\n    }\n\n    public readonly clearState = () => clearEventFormState();\n\n    constructor(\n        private _calendar: CalendarService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.setEvent(\n            new CalendarEvent({\n                date: roundToNearestMinutes(addMinutes(new Date(), 2), {\n                    nearestTo: 5,\n                }).valueOf(),\n            })\n        );\n    }\n\n    /** Set the event being worked on */\n    public setEvent(event: CalendarEvent): void {\n        this._event.next(event);\n        const form = generateEventForm(event);\n        this._form.next(form);\n        this.subscription('form_change', () => this.storeState());\n    }\n\n    /** Set the value of the form control */\n    public setValue<T = any>(name: string, value: T): void {\n        const form = this._form.getValue();\n        if (form && form.controls[name]) {\n            form.controls[name].setValue(value);\n        }\n    }\n\n    public newAttendee() {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: {},\n            }\n        );\n        const form = this._form.getValue();\n        ref.componentInstance.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                const attendees = form.controls.attendees.value || [];\n                attendees.push(event.metadata);\n                form.controls.attendees.setValue(unique(attendees, 'email'));\n                ref.close();\n            });\n    }\n\n    /** Reset the form fields for the active event */\n    public clearForm(): void {\n        this.setEvent(this._event.getValue());\n        this._filters.next({});\n    }\n\n    /** Update the current form filters */\n    public updateFilters(filters: EventFormFilters) {\n        this._filters.next(filters);\n    }\n\n    /** Store current event details and form values */\n    public storeState(): void {\n        const form = this._form.getValue();\n        sessionStorage.setItem(\n            'PLACEOS.event',\n            JSON.stringify(this._event.getValue().toJSON())\n        );\n        sessionStorage.setItem('PLACEOS.event_form', JSON.stringify(form.value));\n        localStorage.setItem(\n            'PLACEOS.event_filters',\n            JSON.stringify(this._filters.getValue())\n        );\n    }\n\n    /** Load old event details and form values */\n    public loadState(): void {\n        const event_data = sessionStorage.getItem('PLACEOS.event') || '{}';\n        if (event_data) {\n            this._event.next(new CalendarEvent(JSON.parse(event_data)));\n        }\n        const form_data = sessionStorage.getItem('PLACEOS.event_form');\n        if (form_data) {\n            const form = generateEventForm(this._event.getValue());\n            form.patchValue(JSON.parse(form_data));\n            this._form.next(form);\n        }\n        const filter_data = localStorage.getItem('PLACEOS.event_filters');\n        if (filter_data) {\n            this._filters.next(JSON.parse(filter_data));\n        }\n    }\n\n    /** Save changes to event to the server */\n    public save(): Promise<void> {\n        const form = this._form.getValue();\n        form.markAllAsTouched();\n        if (!form.controls.organiser.value || !form.controls.host.value)\n            form.patchValue({\n                organiser: currentUser(),\n                host: currentUser().email,\n            });\n        if (!form.controls.title.value) {\n            form.patchValue({\n                title: currentUser().email\n            });\n        }\n        if (!form.valid) {\n            const list = [];\n            for (const key in form.controls) {\n                if (form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            return Promise.reject(\n                notifyError(\n                    `Some form fields are not valid: [${list.join(', ')}]`\n                )\n            );\n        }\n        this._loading_event.next(true);\n        const values = new CalendarEvent({\n            ...this._event.getValue(),\n            ...this._form.getValue().value,\n        });\n        return saveEvent(values).toPromise().then(\n            () => this._loading_event.next(false),\n            () => this._loading_event.next(false)\n        );\n    }\n}\n"],"sourceRoot":"webpack:///"}