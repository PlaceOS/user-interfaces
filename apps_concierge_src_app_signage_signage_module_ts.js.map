{"version":3,"file":"apps_concierge_src_app_signage_signage_module_ts.js","mappings":"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","names":["i0","ctx_r0","resource","toString","ctx_r1","SignageMediaPreviewModalComponent","constructor","_data","this","url","type","name","can_save","save","static","t","MAT_DIALOG_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","SignageMediaPreviewModalComponent_img_8_Template","SignageMediaPreviewModalComponent_video_9_Template","SignageMediaPreviewModalComponent_footer_10_Template","SignageStateService","_org","_dialog","_loading","BehaviorSubject","_change","_active_upload","loading","asObservable","media","combineLatest","active_building","pipe","filter","_","id","switchMap","bld","showMetadata","catchError","of","map","details","Array","randomString","description","duration","shareReplay","previewMedia","item","open","data","afterClosed","subscribe","URL","revokeObjectURL","previewFileMedia","createObjectURL","includes","addMedia","file","_this","_asyncToGenerator","_uploadFile","media_list","take","toPromise","push","building","updateMetadata","notifySuccess","next","Date","now","Promise","resolve","reject","fileReader","FileReader","addEventListener","e","blob","blobUtil","target","result","upload","uploadFiles","file_name","upload_details","randomInt","progress","size","created_at","status","takeWhile","state","access_url","readAsArrayBuffer","i1","i2","Yz7","factory","ɵfac","providedIn","link_r2","_r6","$implicit","ctx_r5","active_link","SignageComponent","AsyncHandler","_state","_router","super","links","ngOnInit","subscription","events","event","NavigationEnd","find","toLowerCase","features","attrs","_c0","SignageComponent_For_9_Template","_r1","SignageTopbarComponent","_route","zones","levels","active_levels","initialised","first","queryParamMap","params","has","get","split","length","level","levelWithID","buildings","parent_id","zone","lvl","i3","SignagePlaylistsComponent","SignageDisplaysComponent","SignageZonesComponent","SignageTriggersComponent","item_r8","_r12","ctx_r11","SignageMediaComponent_ng_container_1_ng_container_1_div_2_div_11_Template","ctx_r7","count","SignageMediaComponent_ng_container_1_ng_container_1_div_2_Template","ctx_r6","SignageMediaComponent_ng_container_1_ng_container_1_Template","tmp_0_0","_r3","$event","_r14","ctx_r13","previewFile","SignageMediaComponent","onEnter","show_dropzone","dataTransfer","types","hideOverlay","HTMLInputElement","preventDefault","timeout","element","files","notifyError","SignageMediaComponent_ng_container_1_Template","SignageMediaComponent_div_3_Template","SignageMediaComponent_ng_template_4_Template","SignageMediaComponent_ng_template_6_Template","_r5","ROUTES","path","component","children","redirectTo","pathMatch","COMPONENTS","SignageModule","oAB","cJS","CommonModule","FormsModule","UIModule","ComponentsModule","RouterModule","forChild","MatTabsModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/signage/signage-media-preview-modal.component.ts","./apps/concierge/src/app/signage/signage-state.service.ts","./apps/concierge/src/app/signage/signage.component.ts","./apps/concierge/src/app/signage/signage-topbar.component.ts","./apps/concierge/src/app/signage/signage-playlists.component.ts","./apps/concierge/src/app/signage/signage-displays.component.ts","./apps/concierge/src/app/signage/signage-zones.component.ts","./apps/concierge/src/app/signage/signage-triggers.component.ts","./apps/concierge/src/app/signage/signage-media.component.ts","./apps/concierge/src/app/signage/signage.module.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'signage-media-preview-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">Preview - {{ name }}</h1>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"bg-base-200\">\n            <div\n                class=\"max-w-[80vw] max-h-[65vh] w-[80vw] h-[65vh] flex items-center justify-center\"\n            >\n                <img\n                    *ngIf=\"type === 'image'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                />\n                <video\n                    *ngIf=\"type === 'video'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                    autoplay\n                    controls\n                ></video>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"can_save\"\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n        >\n            <button btn matRipple class=\"w-32\">Save Media</button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SignageMediaPreviewModalComponent {\n    public readonly resource = this._data.url;\n    public readonly type = this._data.type;\n    public readonly name = this._data.name;\n    public readonly can_save = this._data.save !== false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            url: URL;\n            type: 'image' | 'video';\n            save: boolean;\n            name: string;\n        }\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { uploadFiles } from '@placeos/cloud-uploads';\nimport { notifySuccess, randomInt, randomString } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    PlaceMetadata,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { Attachment } from '@placeos/users';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    takeWhile,\n} from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { SignageMedia } from './signage.classes';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SignageStateService {\n    private _loading = new BehaviorSubject(false);\n    private _change = new BehaviorSubject(0);\n    private _active_upload = new BehaviorSubject<Attachment>(null);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly media: Observable<SignageMedia[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-media').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map(\n            (_) =>\n                (_.details instanceof Array ? _.details : null) || [\n                    {\n                        id: `media-${randomString(8)}`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 15,\n                    },\n                    {\n                        id: `media-${randomString(8)}`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 30,\n                    },\n                    {\n                        id: `media-${randomString(8)}`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 60,\n                    },\n                    {\n                        id: `media-${randomString(8)}`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 15,\n                    },\n                    {\n                        id: `media-${randomString(8)}`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 30,\n                    },\n                    {\n                        id: `media-${randomString(8)}`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 60,\n                    },\n                ]\n        ),\n        shareReplay(1)\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public previewMedia(item: SignageMedia) {\n        const { url, type, name } = item;\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name, save: false },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n\n    public previewFileMedia(media: File) {\n        const url = URL.createObjectURL(media);\n        const type = media.type.includes('image') ? 'image' : 'video';\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name: media.name, save: true },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n\n    public async addMedia(file: File) {\n        const media = await this._uploadFile(file);\n        const media_list = await this.media.pipe(take(1)).toPromise();\n        media_list.push({\n            id: `media-${randomString(8)}`,\n            name: media.name,\n            description: '',\n            url: media.url,\n            type: file.type.includes('image') ? 'image' : 'video',\n            duration: 15,\n        });\n        const bld = this._org.building.id;\n        await updateMetadata(bld, {\n            name: 'signage-media',\n            details: media_list,\n            description: 'Media for signage displays',\n        }).toPromise();\n        notifySuccess('Successfully added media.');\n        this._active_upload.next(null);\n        this._change.next(Date.now());\n    }\n\n    private _uploadFile(file: File): Promise<Attachment> {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.addEventListener('loadend', (e: any) => {\n                const arrayBuffer = e.target.result;\n                const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n                const upload_list = uploadFiles([blob], {\n                    file_name: file.name,\n                });\n                const upload = upload_list[0];\n                const upload_details: Attachment = {\n                    id: `${randomInt(9999_9999_9999)}`,\n                    name: file.name,\n                    progress: 0,\n                    size: file.size,\n                    created_at: Date.now(),\n                    url: '',\n                };\n                upload.status\n                    .pipe(takeWhile((_) => _.status !== 'complete', true))\n                    .subscribe(\n                        (state) => {\n                            if (upload.access_url)\n                                upload_details.url = upload.access_url;\n                            upload_details.progress = state.progress;\n                            if (state.status === 'error') {\n                                upload_details.progress = -1;\n                                reject();\n                            }\n                        },\n                        reject,\n                        () => resolve(upload_details)\n                    );\n                this._active_upload.next(upload_details);\n            });\n            fileReader.readAsArrayBuffer(file);\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-staff]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"p-8\">\n                    <h2 class=\"text-2xl font-medium\">\n                        Signage - {{ active_link }}\n                    </h2>\n                </div>\n                <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n                    @for (link of links; track link) {\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"'/signage/' + (link | lowercase)\"\n                        (click)=\"active_link = link\"\n                        [active]=\"active_link == link\"\n                    >\n                        {{ link }}\n                    </a>\n                    }\n                </nav>\n                <mat-tab-nav-panel class=\"flex-1 h-1/2 overflow-auto\" #tabPanel>\n                    <router-outlet></router-outlet>\n                </mat-tab-nav-panel>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class SignageComponent extends AsyncHandler implements OnInit {\n    public readonly loading = this._state.loading;\n    public links = ['Playlists', 'Media', 'Displays', 'Zones', 'Triggers'];\n    public active_link = this.links[0];\n\n    constructor(private _state: SignageStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._router.events.subscribe((event) => {\n                if (event instanceof NavigationEnd) {\n                    this.active_link = this.links.find((_) =>\n                        this._router.url.includes(_.toLowerCase())\n                    );\n                }\n            })\n        );\n        this.active_link = this.links.find((_) =>\n            this._router.url.includes(_.toLowerCase())\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <!-- <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.only_onsite\"\n                (ngModelChange)=\"setFilters({ only_onsite: $event })\"\n                ><div class=\"text-xs\">Onsite Only</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar> -->\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class SignageTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    // public readonly filters = this._state.filters;\n    // /** Set filtered date */\n    // public readonly setDate = (date) => this._state.setFilters({ date });\n    // /** Set filtered date */\n    // public readonly setFilters = (filters) => this._state.setFilters(filters);\n    // /** Set filter string */\n    // public readonly setSearch = (str) => this._state.setSearchString(str);\n    // /** Update active zones for desks */\n    // public readonly updateZones = (zones) => {\n    //     this._router.navigate([], {\n    //         relativeTo: this._route,\n    //         queryParams: { zone_ids: zones.join(',') },\n    //     });\n    //     this._state.setFilters({ zones });\n    // };\n\n    constructor(\n        private _state: SignageStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                // this.updateZones(this.zones);\n            })\n        );\n        // this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-playlists',\n    template: ``,\n    styles: [``],\n})\nexport class SignagePlaylistsComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-displays',\n    template: ``,\n    styles: [``],\n})\nexport class SignageDisplaysComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-zones',\n    template: ``,\n    styles: [``],\n})\nexport class SignageZonesComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-triggers',\n    template: ``,\n    styles: [``],\n})\nexport class SignageTriggersComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { AsyncHandler, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'signage-media',\n    template: `\n        <div\n            class=\"relative bg-base-200 min-h-full w-full\"\n            (document:dragenter)=\"onEnter($event)\"\n            (document:drop)=\"hideOverlay($event)\"\n        >\n            <ng-container *ngIf=\"!(loading | async); else load_template\">\n                <ng-container\n                    *ngIf=\"(media | async)?.length; else empty_template\"\n                >\n                    <div\n                        class=\"flex flex-wrap items-start justify-start w-full p-2\"\n                    >\n                        <div\n                            class=\"m-2 p-2 bg-base-100 rounded-lg overflow-hidden h-[13rem] border border-base-300 shadow\"\n                            *ngFor=\"let item of media | async\"\n                        >\n                            <button\n                                class=\"w-64 h-36 overflow-hidden bg-base-200 rounded m-0 p-0 relative\"\n                                (click)=\"previewMedia(item)\"\n                            >\n                                <img\n                                    [src]=\"item.url\"\n                                    class=\"object-cover w-full h-full\"\n                                />\n                                <div\n                                    class=\"absolute top-2 left-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{\n                                            item.type === 'image'\n                                                ? 'Image'\n                                                : 'Video'\n                                        }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute top-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ count || 0 }} Playlist(s)\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute bottom-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                    *ngIf=\"item.duration\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ item.duration | mediaDuration }}\n                                    </div>\n                                </div>\n                            </button>\n                            <div\n                                class=\"flex items-center justify-between space-x-2\"\n                            >\n                                <div class=\"truncate flex-1 w-1/2 px-2\">\n                                    {{ item.name }}\n                                </div>\n                                <button icon matRipple>\n                                    <app-icon>more_vert</app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n            <div class=\"absolute inset-0\" *ngIf=\"show_dropzone\">\n                <div class=\"absolute inset-0 bg-base-200\"></div>\n                <div class=\"absolute inset-0 bg-base-content opacity-70\"></div>\n                <div\n                    class=\"absolute inset-4 border-4 border-dashed border-neutral text-base-100 rounded-xl flex flex-col items-center justify-center\"\n                >\n                    <app-icon class=\"text-8xl\">upload</app-icon>\n                    <p>Drop file to upload file</p>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 w-full opacity-0\"\n                    (change)=\"previewFile($event)\"\n                />\n            </div>\n        </div>\n        <ng-template #empty_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 opacity-30\"\n            >\n                <app-icon class=\"text-8xl\">hide_image</app-icon>\n                <p>No media found.</p>\n            </div>\n        </ng-template>\n        <ng-template #load_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Loading...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                min-height: 100%;\n            }\n        `,\n    ],\n})\nexport class SignageMediaComponent extends AsyncHandler {\n    public readonly loading = this._state.loading;\n    public readonly media = this._state.media;\n    public show_dropzone = false;\n\n    public readonly previewMedia = (item) => this._state.previewMedia(item);\n\n    public onEnter(e) {\n        this.show_dropzone = e?.dataTransfer?.types.includes('Files');\n    }\n\n    public hideOverlay(e) {\n        if (!(e.target instanceof HTMLInputElement)) {\n            e.preventDefault();\n        }\n        this.timeout('hide_overlay', () => (this.show_dropzone = false));\n    }\n\n    constructor(private _state: SignageStateService) {\n        super();\n    }\n\n    public previewFile(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const file = files[0];\n        if (\n            file &&\n            (file.type.includes('image') || file.type.includes('video'))\n        ) {\n            this._state.previewFileMedia(file);\n        } else {\n            notifyError('Invalid file type.');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { SignageComponent } from './signage.component';\nimport { SignageTopbarComponent } from './signage-topbar.component';\nimport { SignagePlaylistsComponent } from './signage-playlists.component';\nimport { SignageDisplaysComponent } from './signage-displays.component';\nimport { SignageZonesComponent } from './signage-zones.component';\nimport { SignageTriggersComponent } from './signage-triggers.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SignageMediaComponent } from './signage-media.component';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { ComponentsModule } from '@placeos/components';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: SignageComponent,\n        children: [\n            { path: '', component: SignagePlaylistsComponent },\n            { path: 'playlists', component: SignagePlaylistsComponent },\n            { path: 'media', component: SignageMediaComponent },\n            { path: 'displays', component: SignageDisplaysComponent },\n            { path: 'zones', component: SignageZonesComponent },\n            { path: 'triggers', component: SignageTriggersComponent },\n            { path: '*', redirectTo: 'playlists', pathMatch: 'full' },\n        ],\n    },\n];\n\nexport const COMPONENTS: Type<any>[] = [\n    SignageComponent,\n    SignageTopbarComponent,\n    SignagePlaylistsComponent,\n    SignageMediaComponent,\n    SignageDisplaysComponent,\n    SignageZonesComponent,\n    SignageTriggersComponent,\n    SignageMediaPreviewModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        ComponentsModule,\n        RouterModule.forChild(ROUTES),\n        MatTabsModule,\n    ],\n})\nexport class SignageModule {}\n"],"x_google_ignoreList":[]}