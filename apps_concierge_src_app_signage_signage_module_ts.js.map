{"version":3,"file":"apps_concierge_src_app_signage_signage_module_ts.js","mappings":"yZAAM,MAAOA,GAOTC,YAAYC,EAAkC,IAC1CC,KAAKC,GAAKF,EAAME,IAAM,GACtBD,KAAKE,KAAOH,EAAMG,MAAQ,GAC1BF,KAAKG,YAAcJ,EAAMI,aAAe,GACxCH,KAAKI,MAAQL,EAAMK,OAAS,GAC5BJ,KAAKK,gBAAkBN,EAAMM,iBAAmB,EACpD,EAGE,MAAOC,GAMTR,YAAYC,EAAiC,IACzCC,KAAKC,GAAKF,EAAME,IAAM,GACtBD,KAAKE,KAAOH,EAAMG,MAAQ,GAC1BF,KAAKG,YAAcJ,EAAMI,aAAe,GACxCH,KAAKO,UAAYR,EAAMQ,WAAa,EACxC,EAmCE,MAAOC,GAQTV,YAAYC,EAA+B,IACvCC,KAAKC,GAAKF,EAAME,IAAM,GACtBD,KAAKE,KAAOH,EAAMG,MAAQ,GAC1BF,KAAKG,YAAcJ,EAAMI,aAAe,GACxCH,KAAKS,KAAOV,EAAMU,MAAQ,QAC1BT,KAAKU,SAAWX,EAAMW,UAAY,GAClCV,KAAKW,IAAMZ,EAAMY,KAAO,EAC5B,sEC3DYC,MAAA,gCAGIA,MAAA,MAAAC,EAAAC,SAAAC,WAAAH,iCAEJA,MAAA,kCAGIA,MAAA,MAAAI,EAAAF,SAAAC,WAAAH,+BAMZA,MAAA,cAAAA,CAGC,eACsCA,MAAA,gBAAUA,WAKlD,IAAMK,EAAiC,MAAxC,MAAOA,EAMTnB,YAEYC,GAAAC,KAAAD,QAPIC,KAAAc,SAAWd,KAAKD,MAAMY,IACtBX,KAAAS,KAAOT,KAAKD,MAAMU,KAClBT,KAAAE,KAAOF,KAAKD,MAAMG,KAClBF,KAAAkB,UAA+B,IAApBlB,KAAKD,MAAMoB,IAUnC,CAACC,SAAApB,KAAA,mBAAAqB,iBAdKJ,GAAiCL,MAO9BU,MAAe,EAAAF,SAAApB,KAAA,UAAAuB,EAAAC,IAAA,MAPlBP,EAAiCQ,UAAA,kCAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,4rBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAnCtClB,MAAA,aAAAA,CAEC,UACoBA,MAAA,GAAoBA,QACrCA,MAAA,aAAAA,CAAwC,cAC1BA,MAAA,WAAKA,YAGvBA,MAAA,WAAAA,CAA0B,WAIlBA,MAAA,EAAAoB,GAAA,YAAApB,CAIE,EAAAqB,GAAA,eAQNrB,UAEJA,MAAA,GAAAsB,GAAA,uBAvBqBtB,MAAA,GAAAA,MAAA,aAAAmB,EAAA7B,KAAA,IAURU,MAAA,GAAAA,MAAA,iBAAAmB,EAAAtB,MAKAG,MAAA,GAAAA,MAAA,iBAAAmB,EAAAtB,MASRG,MAAA,GAAAA,MAAA,OAAAmB,EAAAb,uDAQAD,CAAiC,qJCnBlCL,MAAA,aAAAA,CAAyD,cAC3CA,MAAA,WAAKA,oDAiEfA,MAAA,eAGIA,MAAA,yBAAAuB,EAAAvB,MAAAwB,GAAAC,UAAAC,EAAA1B,MAAA,UAASA,MAAA0B,EAAAC,SAAAJ,GAAc,GAEvBvB,MAAA,WAAAA,CAAsC,YACLA,MAAA,GAAeA,QAC5CA,MAAA,aAAyBA,MAAA,GAAeA,QACxCA,MAAA,aAA4CA,MAAA,4BAE1CA,wCAJ2BA,MAAA,GAAAA,MAAAuB,EAAAjC,MACJU,MAAA,GAAAA,MAAAuB,EAAA1B,MACmBG,MAAA,GAAAA,YAAA,IAAAuB,EAAAzB,2PAtE5DE,MAAA,WAAAA,CAIC,cACqBA,MAAA,UAAIA,MAAA,aAAeA,MAAA,OAACA,UACtCA,MAAA,uBACIA,MAAA,cAMJA,QACAA,MAAA,cAAyBA,MAAA,iBAAWA,QACpCA,MAAA,uBACIA,MAAA,kBAMJA,QACAA,MAAA,eAAmBA,MAAA,YAAKA,QACxBA,MAAA,sBAYAA,MAAA,gBAKIA,MAAA,mBAAAA,MAAA4B,GAAA,MAAAC,EAAA7B,QAAA,OAASA,MAAA6B,EAAAC,mBAAkB,GAE3B9B,MAAA,kBACJA,QACAA,MAAA,oBAAAA,CAA+D,uBAA/DA,CAA+D,kBAMnDA,MAAA,eACJA,QACAA,MAAA,kBAKIA,MAAA,yBAAA+B,GAAA/B,MAAA4B,GAAA,MAAAI,EAAAhC,QAAA,OAAiBA,MAAAgC,EAAAC,OAAAC,KAAAH,GAAmB,GALxC/B,UASJA,MAAA,GAAAmC,GAAA,qDAaJnC,oEA1EAA,MAAA,YAAAI,EAAAgC,MAyBIpC,MAAA,IAAAA,MAAA,aAAAI,EAAAiC,WAAArC,CAAyB,UAAAA,MAAA,GAAAsC,IAAzBtC,CAAyB,iBAAAA,MAAA,GAAAuC,IAAzBvC,CAAyB,cAAAA,MAAA,GAAAwC,IAAzBxC,CAAyB,WAAAA,MAAA,GAAAyC,GAAAC,EAAAC,IAczB3C,MAAA,GAAAA,MAAA,oBAAA4C,GAiBQ5C,MAAA,GAAAA,MAAA,UAAAI,EAAA6B,OAAAY,WAAA7C,CAA6B,iBAAAA,MAAA,GAAA8C,IAOhB9C,MAAA,GAAAA,MAAA,UAAAA,MAAA,MAAAA,MAAA,MAAAI,EAAA2C,WAAA,gDAa7B/C,MAAA,cAAAA,CAGC,eACsCA,MAAA,mBAAAA,MAAAgD,GAAA,MAAAC,EAAAjD,QAAA,OAASA,MAAAiD,EAAAC,eAAc,GACtDlD,MAAA,qBACJA,oDAGAA,MAAA,cAAAA,CAIC,UAOOA,MAAA,4BAIJA,UAEJA,MAAA,mBAAAA,CAAkE,sBAAlEA,CAAkE,mBAOtDA,MAAA,yBAAA+B,GAAA,MAAAoB,EAAAnD,MAAAoD,GAAAC,IAAAC,EAAAtD,QAAA,OAAiBA,MAAAsD,EAAAC,YAAAJ,EAAA9D,GAAA0C,GAA2B,GAG5C/B,MAAA,mBAAwBA,MAAA,uBAAiBA,QACzCA,MAAA,oBAAwBA,MAAA,gBAASA,QACjCA,MAAA,oBAAyBA,MAAA,iBAAUA,QACnCA,MAAA,oBAAyBA,MAAA,iBAAUA,QACnCA,MAAA,oBAAyBA,MAAA,iBAAUA,QACnCA,MAAA,oBAAyBA,MAAA,iBAAUA,QACnCA,MAAA,oBAAyBA,MAAA,eAAQA,QACjCA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBAA0BA,MAAA,eAAQA,QAClCA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBAA0BA,MAAA,eAAQA,QAClCA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBAA0BA,MAAA,eAAQA,QAClCA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBAA0BA,MAAA,eAAQA,yDAtE1CA,MAAA,gCAAAmD,EAAAtD,MADAG,MAAA,oBAAAwD,GAIIxD,MAAA,GAAAA,MAAA,aAAAyD,EAAArB,KAAAsB,MAAAjE,gBAAA0D,EAAA9D,IAAAW,CAAuD,uBAAAyD,EAAArB,KAAAsB,MAAAjE,gBAAA0D,EAAA9D,KAKvDW,MAAA,GAAAA,MAAA,IAAAA,MAAA,KAAAyD,EAAArB,KAAAsB,MAAAjE,gBAAA0D,EAAA9D,KAAA8D,EAAArD,UAAA,KAYIE,MAAA,GAAAA,MAAA,UAAAyD,EAAArB,KAAAsB,MAAAjE,gBAAA0D,EAAA9D,KAAA,EAAAW,CAAmD,iBAAAA,MAAA,GAAA8C,IAIvC9C,MAAA,GAAAA,MAAA,WACAA,MAAA,GAAAA,MAAA,WACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YAGAA,MAAA,GAAAA,MAAA,YAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aACAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aACAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aACAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,uDAWxBA,MAAA,WAAAA,CAAkD,eAM1CA,MAAA,yBAAA2D,EAAA3D,MAAA4D,GAAAP,IAAAQ,EAAA7D,QAAA,OAASA,MAAA6D,EAAAC,YAAAH,GAAA,GAAoB,GAE7B3D,MAAA,cAAUA,MAAA,kBAAYA,UAE1BA,MAAA,eAKIA,MAAA,yBAAA2D,EAAA3D,MAAA4D,GAAAP,IAAAU,EAAA/D,QAAA,OAASA,MAAA+D,EAAAD,YAAAH,EAAiB,GAAE,GAE5B3D,MAAA,cAAUA,MAAA,oBAAcA,UAE5BA,MAAA,eAIIA,MAAA,yBAAA2D,EAAA3D,MAAA4D,GAAAP,IAAAW,EAAAhE,QAAA,OAASA,MAAAgE,EAAAC,aAAAN,GAAiB,GAE1B3D,MAAA,cAAUA,MAAA,gBAAUA,UAExBA,MAAA,gBAKIA,MAAA,yBAAA2D,EAAA3D,MAAA4D,GAAAP,IAAAa,EAAAlE,QAAA,OAASA,MAAAkE,EAAAC,YAAAR,GAAgB,GAEzB3D,MAAA,eAAUA,MAAA,aAAMA,6CA7BhBA,MAAA,GAAAA,MAAA,WAAAoE,GASApE,MAAA,GAAAA,MAAA,WAAAqE,2BAyBRrE,MAAA,aACIA,MAAA,oBACAA,MAAA,UAAgBA,MAAA,wBAAkBA,iBADrBA,MAAA,GAAAA,MAAA,gBAOtB,IAAMsE,EAA6B,MAApC,MAAOA,EA6CTpF,YACqCC,EAAyB,GAClDoF,EACAC,EACAC,GAHyBrF,KAAAD,QACzBC,KAAAmF,SACAnF,KAAAoF,UACApF,KAAAqF,cAhDLrF,KAAAsF,SAAU,EACDtF,KAAAuF,SAAWvF,KAAKD,MAChBC,KAAAI,MAAQJ,KAAKmF,OAAO/E,MAEpBJ,KAAA6C,OAAS,IAAI2C,IAAgB,IAE7BxF,KAAAgD,KAAO,IAAIyC,KAAU,CACjCxF,GAAI,IAAIyF,KAAY1F,KAAKuF,SAAStF,IAAM,IACxCC,KAAM,IAAIwF,KAAY1F,KAAKuF,SAASrF,MAAQ,GAAI,CAACyF,KAAWC,WAC5DzF,YAAa,IAAIuF,KAAY1F,KAAKuF,SAASpF,aAAe,IAC1DC,MAAO,IAAIsF,KAAY1F,KAAKuF,SAASnF,OAAS,IAC9CC,gBAAiB,IAAIqF,KAAY1F,KAAKuF,SAASlF,iBAAmB,MAGtDL,KAAAiD,cAAa4C,MAAc,CACvC7F,KAAKI,MACLJ,KAAKgD,KAAK8C,aAAaC,QAAKC,KAAUhG,KAAKgD,KAAKiD,kBACjDF,QACCG,KAAI,EAAEjD,SACDjD,KAAKgD,KAAKiD,cAAc7F,OAAS,IAAI8F,IACjCjG,GACGgD,EAAWkD,KAAMC,GAAMA,EAAEnG,KAAOA,IAChC,IAAIO,GAAa,CAAEP,UAKnBD,KAAA2D,aAAYkC,MAAc,CACtC7F,KAAKI,MACLJ,KAAK6C,OACL7C,KAAKgD,KAAK8C,aAAaC,QAAKC,KAAUhG,KAAKgD,KAAKiD,kBACjDF,QACCG,KAAI,EAAEG,EAAWxD,EAAQuD,KACrBC,EACKC,OAAQF,IAAOpG,KAAKgD,KAAKiD,cAAc7F,MAAMmG,SAASH,EAAEnG,KACxDqG,OAAQF,GACLA,EAAElG,KAAKsG,cAAcD,SAAS1D,EAAO2D,iBAalD,CAEIC,QAAQxG,GACX,OAAOD,KAAKgD,KAAKiD,cAAc7F,MAAMqG,QAAQxG,EACjD,CAEOyC,mBACHgE,WAAW,IAAM1G,KAAK2G,aAAaC,eAAeC,QAAS,IAC/D,CAEa/C,eAAY,IAAAgD,EAAA9G,KAAA,SAAA+G,KAAA,YACrBD,EAAK9D,KAAKgE,mBACVF,EAAK9D,KAAKiE,0BACNH,EAAK9D,KAAKkE,UACdJ,EAAKxB,SAAU,QACTwB,EAAK3B,OAAOrB,aAAagD,EAAK9D,KAAKiD,eAAekB,MAAOf,IAC3DgB,cAAY,yBACZN,EAAKxB,SAAU,EACTc,IAEVU,EAAKzB,YAAYgC,QAAQ,EAVJ,EAWzB,CAEOlD,YAAYlE,EAAYS,GAC3B,MAAQL,mBAAoBL,KAAKgD,KAAKiD,cAChCqB,EAAsB,IAAKjH,GACjCiH,EAAoBrH,GAAMS,EAC1BV,KAAKgD,KAAKuE,WAAW,CAAElH,gBAAiBiH,GAC5C,CAEO/E,SAASiF,GACZ,MAAQvH,MAAOuH,GACPpH,SAAUJ,KAAKgD,KAAKiD,cAC5BjG,KAAKgD,KAAKuE,WAAW,CACjBnH,MAAO,IAAIA,EAAOH,IAE1B,CAEO8E,YAAYyC,GACf,MAAQpH,QAAOC,mBAAoBL,KAAKgD,KAAKiD,cACvCwB,EAAQrH,EAAMqG,QAAQe,EAAKvH,IAC3B0D,EAAY,IAAIvD,UACfC,EAAgBmH,EAAKvH,IAC5B0D,EAAU+D,OAAOD,EAAO,GACxBzH,KAAKgD,KAAKuE,WAAW,CACjBnH,MAAOuD,EACPtD,gBAAiB,IAAKA,IAE9B,CAEOqE,YAAY8C,EAAoBG,GACnC,MAAQvH,SAAUJ,KAAKgD,KAAKiD,cACtBwB,EAAQrH,EAAMqG,QAAQe,EAAKvH,IAC3B0D,EAAY,IAAIvD,GACtBuD,EAAU+D,OAAOD,EAAO,GACxB9D,EAAU+D,OAAOD,EAAQE,EAAW,EAAGH,EAAKvH,IAC5CD,KAAKgD,KAAKuE,WAAW,CACjBnH,MAAOuD,GAEf,CAEOkB,aAAa2C,GAChB,MAAQ7G,MAAKF,OAAMP,QAASsH,EAChBxH,KAAKoF,QAAQwC,KAAK3G,EAAmC,CAC7D4G,KAAM,CAAElH,MAAKF,OAAMP,OAAMiB,MAAM,KAE/B2G,cAAcC,UAAU,IAAMC,IAAIC,gBAAgBtH,GAC1D,CAACS,SAAApB,KAAA,mBAAAqB,iBArHQ6D,GAA6BtE,MA8C1BU,MAAeV,MAAAsH,GAAAtH,MAAAuH,MAAAvH,MAAAuH,MAAA,EAAA/G,SAAApB,KAAA,UAAAuB,EAAAC,IAAA,MA9ClB0D,EAA6BzD,UAAA,6BAAA2G,UAAA,SAAAtG,EAAAC,MAAA,EAAAD,wuEAjOlClB,MAAA,aAAAA,CAEC,UACoBA,MAAA,GAA2CA,QAC5DA,MAAA,EAAAyH,GAAA,gBAGJzH,QACAA,MAAA,EAAA0H,GAAA,eAAA1H,CA4EO,EAAA2H,GAAA,eA5EP3H,CA4EO,EAAA4H,GAAA,2BAAA5H,MA5EPA,CA4EO,EAAA6H,GAAA,0BAAA7H,MA5EPA,CA4EO,GAAA8H,GAAA,yBAAA9H,+BAjFcA,MAAA,GAAAA,MAAA,GAAAmB,EAAAwD,SAAAtF,GAAA,0BACwBW,MAAA,GAAAA,MAAA,QAAAmB,EAAAuD,SAOxC1E,MAAA,GAAAA,MAAA,QAAAmB,EAAAuD,QAAA1E,CAAgB,WAAA+H,GA4EhB/H,MAAA,GAAAA,MAAA,QAAAmB,EAAAuD,+JA0IAJ,CAA6B,KC3M7B0D,EAAmB,MAA1B,MAAOA,EAgHT9I,YACY+I,EACAzD,GADApF,KAAA6I,OACA7I,KAAAoF,UAjHJpF,KAAA8I,SAAW,IAAItD,KAAgB,GAC/BxF,KAAA+I,QAAU,IAAIvD,IAAgB,GAC9BxF,KAAAgJ,eAAiB,IAAIxD,IAA4B,MAEzCxF,KAAAsF,QAAUtF,KAAK8I,SAASG,eAExBjJ,KAAAI,SAAoCyF,MAAc,CAC9D7F,KAAK6I,KAAKK,gBACVlJ,KAAK+I,UACNhD,QACCO,KAAO,EAAEF,OAASA,GAAGnG,KAAE,EACvBkJ,KAAU,EAAEC,MAAG,EACXC,OAAaD,EAAInJ,GAAI,iBAAiB8F,QAClCuD,KAAW,OAAMC,MAAG,QACvB,EAELrD,KACKE,IACIA,EAAEoD,mBAAmBC,MAAQrD,EAAEoD,QAAU,OAAS,CAC/C,CACIvJ,GAAI,aACJC,KAAM,qBACNC,YAAa,8BACbQ,IAAK,sHACLF,KAAM,QACNC,SAAU,IAEd,CACIT,GAAI,aACJC,KAAM,qBACNC,YAAa,8BACbQ,IAAK,sHACLF,KAAM,QACNC,SAAU,IAEd,CACIT,GAAI,aACJC,KAAM,qBACNC,YAAa,8BACbQ,IAAK,sHACLF,KAAM,QACNC,SAAU,IAEd,CACIT,GAAI,aACJC,KAAM,qBACNC,YAAa,8BACbQ,IAAK,sHACLF,KAAM,QACNC,SAAU,IAEd,CACIT,GAAI,aACJC,KAAM,qBACNC,YAAa,8BACbQ,IAAK,sHACLF,KAAM,QACNC,SAAU,IAEd,CACIT,GAAI,aACJC,KAAM,qBACNC,YAAa,8BACbQ,IAAK,sHACLF,KAAM,QACNC,SAAU,OAEjB,EAETgJ,MAAY,IAGA1J,KAAAO,aAA2CsF,MAAc,CACrE7F,KAAK6I,KAAKK,gBACVlJ,KAAK+I,UACNhD,QACCO,KAAO,EAAEF,OAASA,GAAGnG,KAAE,EACvBkJ,KAAU,EAAEC,MAAG,EACXC,OAAaD,EAAInJ,GAAI,qBAAqB8F,QACtCuD,KAAW,OAAMC,MAAG,QACvB,EAELrD,KAAKE,GAAOA,EAAEoD,mBAAmBC,MAAQrD,EAAEoD,QAAU,OAGzCxJ,KAAA2J,YAAyC9D,MAAc,CACnE7F,KAAK6I,KAAKK,gBACVlJ,KAAK+I,UACNhD,QACCO,KAAO,EAAEF,OAASA,GAAGnG,KAAE,EACvBkJ,KAAU,EAAEC,MAAG,EACXC,OAAaD,EAAInJ,GAAI,oBAAoB8F,QACrCuD,KAAW,OAAMC,MAAG,QACvB,EAELrD,KAAKE,GAAOA,EAAEoD,mBAAmBC,MAAQrD,EAAEoD,QAAU,OAGzCxJ,KAAA4J,SAAQ/D,MAAc,CAClC7F,KAAK6I,KAAKK,gBACVlJ,KAAK+I,UACNhD,QACCO,KAAO,EAAEF,OAASA,GAAGnG,KAAE,EACvBkJ,KAAU,EAAEC,MAAG,EACXS,OAAW,CAAEC,UAAWV,EAAInJ,GAAI8J,KAAM,UAAWC,MAAO,MAAOjE,QAC3DuD,KAAW,OAAMC,MAAG,CAAE1B,KAAM,SAC/B,EAEL3B,KAAKE,GAAMA,EAAEyB,MAAQ,IAMtB,CAEIoC,aAAa1E,EAA4B,IAAI1F,IACpCG,KAAKoF,QAAQwC,KAAK1C,EAA+B,CACzD2C,KAAMtC,IAENuC,cAAcC,UAAU,IAAM/H,KAAK+I,QAAQjG,KAAKoH,KAAKC,OAC7D,CAEarG,aAAayB,EAA2B6E,GAAS,GAAK,IAAAtD,EAAA9G,KAAA,SAAA+G,KAAA,YAC/D,MAAMqC,EAAMtC,EAAK+B,KAAKwB,SAASpK,GACzBqK,SACKxD,EAAKvG,UAAUwF,QAAKwE,KAAK,IAAIC,cAAgB,GAClDC,EAAMH,EAAcI,UAAWtE,GAAMA,EAAEnG,KAAOsF,EAAStF,IACzDwK,GAAO,GAAGH,EAAc5C,OAAO+C,EAAK,GACnClF,EAAStF,KAAKsF,EAAiBtF,GAAK,eAAY0K,MAAa,MAC7DP,GAAQE,EAAcM,KAAKrF,SAChC,EAAMsF,OAAezB,EAAK,CACtBlJ,KAAM,oBACNsJ,QAASc,EACTnK,YAAa,mCACdqK,aAAS,EACZM,MAAc,gBAAgBV,EAAS,UAAY,qBACnDtD,EAAKiC,QAAQjG,KAAKoH,KAAKC,MAAO,EAdiC,EAenE,CAEaY,eAAexF,GAAyB,IAAAyF,EAAAhL,KAAA,SAAA+G,KAAA,kBAC3CiE,EAAKlH,aAAayB,GAAU,EAAM,EADS,EAErD,CAEO0F,YAAYC,EAA0B,IAAI5K,IACjCN,KAAKoF,QAAQwC,KAAK1C,EAA+B,CACzD2C,KAAMqD,IAENpD,cAAcC,UAAU,IAAM/H,KAAK+I,QAAQjG,KAAKoH,KAAKC,OAC7D,CAEagB,YAAYD,EAAyBd,GAAS,GAAK,IAAAgB,EAAApL,KAAA,SAAA+G,KAAA,YAC5D,MAAMqC,EAAMgC,EAAKvC,KAAKwB,SAASpK,GACzBoL,QAAqBD,EAAKzB,SAAS5D,QAAKwE,KAAK,IAAIC,YACjDC,EAAMY,EAAaX,UAAWtE,GAAMA,EAAEnG,KAAOiL,EAAQjL,IACvDwK,GAAO,GAAGY,EAAa3D,OAAO+C,EAAK,GAClCS,EAAQjL,KAAKiL,EAAgBjL,GAAK,cAAW0K,MAAa,MAC1DP,GAAQiB,EAAaT,KAAKM,SAC/B,EAAML,OAAezB,EAAK,CACtBlJ,KAAM,mBACNsJ,QAAS6B,EACTlL,YAAa,kCACdqK,aAAS,EACZM,MAAc,gBAAgBV,EAAS,UAAY,oBACnDgB,EAAKrC,QAAQjG,KAAKoH,KAAKC,MAAO,EAb8B,EAchE,CAEamB,cAAcJ,GAAuB,IAAAK,EAAAvL,KAAA,SAAA+G,KAAA,kBACxCwE,EAAKJ,YAAYD,GAAS,EAAM,EADQ,EAElD,CAEOrG,aAAa2C,GAChB,MAAQ7G,MAAKF,OAAMP,QAASsH,EAChBxH,KAAKoF,QAAQwC,KAAK3G,EAAmC,CAC7D4G,KAAM,CAAElH,MAAKF,OAAMP,OAAMiB,MAAM,KAE/B2G,cAAcC,UAAU,IAAMC,IAAIC,gBAAgBtH,GAC1D,CAEO6K,iBAAiBpL,GACpB,MAAMO,EAAMqH,IAAIyD,gBAAgBrL,GAC1BK,EAAOL,EAAMK,KAAK8F,SAAS,SAAW,QAAU,QAC1CvG,KAAKoF,QAAQwC,KAAK3G,EAAmC,CAC7D4G,KAAM,CAAElH,MAAKF,OAAMP,KAAME,EAAMF,KAAMiB,MAAM,KAE3C2G,cAAcC,UAAU,IAAMC,IAAIC,gBAAgBtH,GAC1D,CAEa4B,SAASmJ,GAAU,IAAAC,EAAA3L,KAAA,SAAA+G,KAAA,YAC5B,MAAM3G,QAAcuL,EAAKC,YAAYF,GAC/BzI,QAAmB0I,EAAKvL,MAAM2F,QAAKwE,KAAK,IAAIC,YAClDvH,EAAW2H,KAAK,CACZ3K,GAAI,YAAS0K,MAAa,KAC1BzK,KAAME,EAAMF,KACZC,YAAa,GACbQ,IAAKP,EAAMO,IACXF,KAAMiL,EAAKjL,KAAK8F,SAAS,SAAW,QAAU,QAC9C7F,SAAU,KAEd,MAAM0I,EAAMuC,EAAK9C,KAAKwB,SAASpK,SAC/B,EAAM4K,OAAezB,EAAK,CACtBlJ,KAAM,gBACNsJ,QAASvG,EACT9C,YAAa,+BACdqK,aAAS,EACZM,MAAc,6BACda,EAAK3C,eAAelG,KAAK,MACzB6I,EAAK5C,QAAQjG,KAAKoH,KAAKC,MAAO,EAnBF,EAoBhC,CAEQyB,YAAYF,GAChB,OAAO,IAAIG,QAAQ,CAACC,EAASC,KACzB,MAAMC,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAYC,IACpC,MACMC,EAAOC,MADOF,EAAEG,OAAOC,OACwBb,EAAKjL,MAIpD+L,KAHcC,MAAY,CAACL,GAAO,CACpCM,UAAWhB,EAAKxL,OAEO,GACrByM,EAA6B,CAC/B1M,GAAI,MAAG2M,MAAU,gBACjB1M,KAAMwL,EAAKxL,KACX2M,SAAU,EACVC,KAAMpB,EAAKoB,KACXC,WAAY7C,KAAKC,MACjBxJ,IAAK,IAET6L,EAAOQ,OACFjH,QAAKkH,MAAW7G,GAAmB,aAAbA,EAAE4G,QAAuB,IAC/CjF,UACImF,IACOV,EAAOW,aACPR,EAAehM,IAAM6L,EAAOW,YAChCR,EAAeE,SAAWK,EAAML,SACX,UAAjBK,EAAMF,SACNL,EAAeE,UAAW,EAC1Bd,IAAM,EAGdA,EACA,IAAMD,EAAQa,IAEtB3M,KAAKgJ,eAAelG,KAAK6J,EAAc,GAE3CX,EAAWoB,kBAAkB1B,EAAI,EAEzC,CAACtK,SAAApB,KAAA,mBAAAqB,iBAxPQuH,GAAmBhI,MAAAsH,MAAAtH,MAAAuH,MAAA,EAAA/G,SAAApB,KAAA,WAAAuB,EAAA8L,IAAA,OAAnBzE,EAAmB0E,QAAnB1E,EAAmB2E,UAAAC,WAFhB,gBAEH5E,CAAmB,+GCvBZhI,MAAA,cAIIA,MAAA,mBAAAA,MAAA0C,GAAA,MAAAe,EAAAzD,QAAA,OAASA,MAAAyD,EAAAoJ,QAAApJ,EAAAqJ,aAAoB,GAG7B9M,MAAA,GACJA,gCADIA,MAAA,GAAAA,MAAA,QAAAC,EAAA8M,SAAA9M,EAAA6M,aAAA,+CAKJ9M,MAAA,SAGIA,MAAA,yBAAAgN,EAAAhN,MAAA4C,GAAAnB,UAAAwL,EAAAjN,QAAA,OAAAA,MAAAiN,EAAAH,YAAAE,EAAA,wBAGAhN,MAAA,GACJA,8CALIA,MAAA,yBAAAA,MAAA,IAAAgN,GAAAhN,CAA+C,SAAAI,EAAA0M,aAAAE,GAI/ChN,MAAA,GAAAA,MAAA,IAAAgN,EAAA,MAsBjB,IAAME,EAAiB,MAAxB,MAAOA,UAAyBC,KAK3BJ,SAASzN,GACZ,OAAOA,EAAK8N,QAAQ,KAAM,GAC9B,CAEOP,QAAQvN,GACX,OAAQA,GACJ,IAAK,YACDF,KAAKmF,OAAO8E,eACZ,MACJ,IAAK,WACDjK,KAAKmF,OAAO8F,cASxB,CAEAnL,YAAoBqF,EAAqC8I,GACrDC,QADgBlO,KAAAmF,SAAqCnF,KAAAiO,UAzBzCjO,KAAAsF,QAAUtF,KAAKmF,OAAOG,QAC/BtF,KAAAmO,MAAQ,CAAC,YAAa,QAAS,WAAY,QAAS,YACpDnO,KAAA0N,YAAc1N,KAAKmO,MAAM,EAyBhC,CAEOC,WACHpO,KAAKqO,aACD,cACArO,KAAKiO,QAAQK,OAAOvG,UAAWwG,IACvBA,aAAiBC,OACjBxO,KAAK0N,YAAc1N,KAAKmO,MAAMhI,KAAMC,GAChCpG,KAAKiO,QAAQtN,IAAI4F,SAASH,EAAEI,gBAAc,IAK1DxG,KAAK0N,YAAc1N,KAAKmO,MAAMhI,KAAMC,GAChCpG,KAAKiO,QAAQtN,IAAI4F,SAASH,EAAEI,eAEpC,CAACpF,SAAApB,KAAA,mBAAAqB,iBA5CQyM,GAAgBlN,MAAAsH,GAAAtH,MAAAuH,MAAA,EAAA/G,SAAApB,KAAA,UAAAuB,EAAAC,IAAA,MAAhBsM,EAAgBrM,UAAA,0BAAAgN,SAAA,CAAA7N,OAAA8N,MAAAC,GAAAjN,MAAA,GAAAC,KAAA,EAAAC,OAAA,qcAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAhDrBlB,MAAA,gBACAA,MAAA,WACIA,MAAA,iBACAA,MAAA,WAAAA,CAAgD,UAAhDA,CAAgD,UAGpCA,MAAA,GACJA,QACAA,MAAA,EAAAgO,GAAA,gBASJhO,QACAA,MAAA,WACIA,MAAA,EAAAiO,GAAA,WAAAjO,OAUJA,QACAA,MAAA,4BACIA,MAAA,oBACJA,oCA1BQA,MAAA,GAAAA,MAAA,cAAAmB,EAAA2L,YAAA,KAOC9M,MAAA,GAAAA,MAAA,iBAAAmB,EAAA2L,aAKY9M,MAAA,GAAAA,MAAA,WAAAkO,GACjBlO,MAAA,EAAAmB,EAAAoM,gRA6BPL,CAAiB,oBCNvB,IAAMiB,GAAuB,MAA9B,MAAOA,UAA+BhB,KAsBxCjO,YACYqF,EACA0D,EACAmG,EACAf,GAERC,QALQlO,KAAAmF,SACAnF,KAAA6I,OACA7I,KAAAgP,SACAhP,KAAAiO,UAxBLjO,KAAA4J,MAAkB,GAET5J,KAAAiP,OAASjP,KAAK6I,KAAKqG,aAyBnC,CAEad,WAAQ,IAAAtH,EAAA9G,KAAA,SAAA+G,KAAA,kBACXD,EAAK+B,KAAKsG,YAAYpJ,QAAKqJ,MAAOhJ,GAAMA,IAAIoE,YAClD1D,EAAKuH,aACD,cACAvH,EAAKkI,OAAOK,cAActH,UAAWuH,IACjC,GAAIA,EAAOC,IAAI,YAAa,CACxB,MAAM3F,EAAQ0F,EAAOE,IAAI,YAAYC,MAAM,KAC3C,GAAI7F,EAAM8F,OAAQ,CACd,MAAMC,EAAQ7I,EAAK+B,KAAK+G,YAAYhG,GACpC,IAAK+F,EACD,OAEJ7I,EAAK+B,KAAKwB,SAAWvD,EAAK+B,KAAKgH,UAAU1J,KACpCiD,GAAQA,EAAInJ,KAAO0P,EAAM7F,WAE9BhD,EAAK8C,MAAQA,OAK7B9C,EAAKuH,aACD,SACAvH,EAAK+B,KAAKqG,cAAcnH,UAAWkH,IAC/BnI,EAAK8C,MAAQ9C,EAAK8C,MAAMtD,OAAQwJ,GAC5Bb,EAAO9I,KAAM4J,GAAQA,EAAI9P,KAAO6P,KAE/BhJ,EAAK8C,MAAM8F,QAAUT,EAAOS,QAC7B5I,EAAK8C,MAAMgB,KAAKqE,EAAO,GAAGhP,GAAE,GAKxC,EAhCiB,EAiCrB,CAACmB,SAAApB,KAAA,mBAAAqB,iBAhEQ0N,GAAsBnO,MAAAsH,GAAAtH,MAAAuH,MAAAvH,MAAAoP,MAAApP,MAAAoP,MAAA,EAAA5O,SAAApB,KAAA,UAAAuB,EAAAC,IAAA,MAAtBuN,EAAsBtN,UAAA,qBAAAgN,SAAA,CAAA7N,OAAAc,MAAA,EAAAC,KAAA,EAAAC,OAAA,iGAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAxC3BlB,MAAA,6KAwCKmO,CAAuB,yCC5BxBnO,MAAA,QAAAA,MAAA,UAAAR,MAAAsP,OAAA,6CAGA9O,MAAA,UAAMA,MAAA,4BAAkCA,4BAAlCA,MAAA,GAAAA,YAAA,IAAAqP,EAAAvP,qDAGNE,MAAA,cAAuBA,MAAA,yBAAAsP,EAAAtP,MAAAuP,GAAAlM,IAAAmM,EAAAxP,QAAA,OAASA,MAAAwP,EAAAC,SAAAH,GAAa,GACzCtP,MAAA,cAAUA,MAAA,UAAIA,UAElBA,MAAA,cAA0CA,MAAA,yBAAAsP,EAAAtP,MAAAuP,GAAAlM,IAAAqM,EAAA1P,QAAA,OAASA,MAAA0P,EAAAC,WAAAL,GAAe,GAC9DtP,MAAA,cAAUA,MAAA,YAAMA,iCAGxBA,MAAA,gOAQD,IAAM4P,EAAyB,MAAhC,MAAOA,EA2BT1Q,YAAoBqF,GAAAnF,KAAAmF,SA1BJnF,KAAAsF,QAAUtF,KAAKmF,OAAOG,QACtBtF,KAAAO,UAAYP,KAAKmF,OAAO5E,UACxBP,KAAAI,MAAQJ,KAAKmF,OAAO/E,MAEpBJ,KAAAuQ,WAAcE,GAAMzQ,KAAKmF,OAAO4F,eAAe0F,GAC/CzQ,KAAAqQ,SAAYI,GAAMzQ,KAAKmF,OAAO8E,aAAawG,GAE3CzQ,KAAAsK,iBAAgBzE,MAAc,CAC1C7F,KAAKO,UACLP,KAAKI,QACN2F,QACCG,KAAI,EAAE3F,EAAWH,KACbG,EAAU2F,IAAKX,QACRA,EACH7E,SAAU6E,EAASnF,MAAMsQ,OACrB,CAACC,EAAKnJ,IACFmJ,GACCpL,EAASlF,gBAAgBmH,IACtBpH,EAAM+F,KAAMyK,GAAMA,EAAE3Q,KAAOuH,IAAO9G,UAClC,IACR,OAMkC,CAACU,SAAApB,KAAA,mBAAAqB,iBA3B1CmP,GAAyB5P,MAAAsH,GAAA,EAAA9G,SAAApB,KAAA,UAAAuB,EAAAC,IAAA,MAAzBgP,EAAyB/O,UAAA,wBAAAC,MAAA,EAAAC,KAAA,GAAAC,OAAA,sYAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAlC9BlB,MAAA,oBAYAA,MAAA,EAAAiQ,GAAA,yBAAAjQ,OAEc,EAAAkQ,GAAA,yBAAAlQ,MAFdA,CAEc,EAAAmQ,GAAA,yBAAAnQ,MAFdA,CAEc,EAAAoQ,GAAA,wFAZVpQ,MAAA,aAAAmB,EAAAuI,cAAA1J,CAA4B,UAAAA,MAAA,EAAA+N,IAA5B/N,CAA4B,iBAAAA,MAAA,EAAAsC,IAA5BtC,CAA4B,cAAAA,MAAA,GAAAuC,IAA5BvC,CAA4B,WAAAA,MAAA,GAAAwC,GAAA6N,EAAAC,EAAAC,IA0B3BvQ,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAAmB,EAAAuD,oEAMAkL,CAAyB,2BCjB1B5P,MAAA,QAAAA,MAAA,UAAAL,UAAAmP,OAAA,2CAGA9O,MAAA,UAAMA,MAAA,4BAAkCA,4BAAlCA,MAAA,GAAAA,YAAA,IAAAqP,EAAAvP,qDAGNE,MAAA,cAAuBA,MAAA,yBAAAsP,EAAAtP,MAAAuP,GAAAlM,IAAAmM,EAAAxP,QAAA,OAASA,MAAAwP,EAAAC,SAAAH,GAAa,GACzCtP,MAAA,cAAUA,MAAA,UAAIA,UAElBA,MAAA,cAA0CA,MAAA,yBAAAsP,EAAAtP,MAAAuP,GAAAlM,IAAAqM,EAAA1P,QAAA,OAASA,MAAA0P,EAAAC,WAAAL,GAAe,GAC9DtP,MAAA,cAAUA,MAAA,YAAMA,iCAGxBA,MAAA,wOAOD,IAAMwQ,EAAwB,MAA/B,MAAOA,EAwCTtR,YAAoBqF,GAAAnF,KAAAmF,SAvCJnF,KAAAsF,QAAUtF,KAAKmF,OAAOG,QACtBtF,KAAA2J,SAAW3J,KAAKmF,OAAOwE,SACvB3J,KAAAO,UAAYP,KAAKmF,OAAO5E,UACxBP,KAAAI,MAAQJ,KAAKmF,OAAO/E,MAEpBJ,KAAAuQ,WAAcE,GAAMzQ,KAAKmF,OAAO4F,eAAe0F,GAC/CzQ,KAAAqQ,SAAYI,GAAMzQ,KAAKmF,OAAO8E,aAAawG,GAE3CzQ,KAAAqL,gBAAexF,MAAc,CACzC7F,KAAK2J,SACL3J,KAAKO,UACLP,KAAKI,QACN2F,QACCG,KAAI,EAAEyD,EAAUpJ,EAAWH,KACvBuJ,EAASzD,IAAKgF,QACPA,EACH3K,UAAW2K,EAAQ3K,UAAU2F,IAAKjG,GAC9BM,EAAU4F,KAAMsK,GAAMA,EAAExQ,KAAOA,IAEnCS,SAAUwK,EAAQ3K,UAAUmQ,OAAO,CAACC,EAAK1Q,KACrC,MAAMsF,EAAWhF,EAAU4F,KAAMC,GAAMA,EAAEnG,KAAOA,GAChD,OAAKsF,EAEDoL,EACApL,EAASnF,MAAMsQ,OACX,CAACC,EAAKnJ,IACFmJ,GACCpL,EAASlF,gBAAgBmH,IACtBpH,EAAM+F,KAAMyK,GAAMA,EAAE3Q,KAAOuH,IACrB9G,UACN,IACR,GAVciQ,GAavB,OAKmC,CAACvP,SAAApB,KAAA,mBAAAqB,iBAxC1C+P,GAAwBxQ,MAAAsH,GAAA,EAAA9G,SAAApB,KAAA,UAAAuB,EAAAC,IAAA,MAAxB4P,EAAwB3P,UAAA,uBAAAC,MAAA,EAAAC,KAAA,GAAAC,OAAA,0YAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAvCrBlB,MAAA,oBAkBRA,MAAA,EAAAyQ,GAAA,yBAAAzQ,OAEc,EAAA0Q,GAAA,yBAAA1Q,MAFdA,CAEc,EAAA2Q,GAAA,yBAAA3Q,MAFdA,CAEc,EAAA4Q,GAAA,wFAlBV5Q,MAAA,aAAAmB,EAAAsJ,aAAAzK,CAA2B,UAAAA,MAAA,EAAA+N,IAA3B/N,CAA2B,iBAAAA,MAAA,EAAAsC,IAA3BtC,CAA2B,cAAAA,MAAA,GAAAuC,IAA3BvC,CAA2B,WAAAA,MAAA,GAAAwC,GAAA6N,EAAAC,EAAAC,IAgC1BvQ,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAAmB,EAAAuD,oEAKA8L,CAAwB,KCtCxBK,EAAqB,MAA5B,MAAOA,EAGT3R,YAAoBqF,GAAAnF,KAAAmF,SAFJnF,KAAAsF,QAAUtF,KAAKmF,OAAOG,OAEY,CAAClE,SAAApB,KAAA,mBAAAqB,iBAH1CoQ,GAAqB7Q,MAAAsH,GAAA,EAAA9G,SAAApB,KAAA,UAAAuB,EAAAC,IAAA,MAArBiQ,EAAqBhQ,UAAA,oBAAAC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,GAAA,WAArB0P,CAAqB,KCArBC,EAAwB,MAA/B,MAAOA,EAGT5R,YAAoBqF,GAAAnF,KAAAmF,SAFJnF,KAAAsF,QAAUtF,KAAKmF,OAAOG,OAEY,CAAClE,SAAApB,KAAA,mBAAAqB,iBAH1CqQ,GAAwB9Q,MAAAsH,GAAA,EAAA9G,SAAApB,KAAA,UAAAuB,EAAAC,IAAA,MAAxBkQ,EAAwBjQ,UAAA,uBAAAC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,GAAA,WAAxB2P,CAAwB,+BCmDL9Q,MAAA,YAIIA,MAAA,YAGAA,MAAA,YAGIA,MAAA,4BACJA,0CADIA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAA+Q,EAAAjR,UAAA,+CAlDhBE,MAAA,UAAAA,CAGC,cAGOA,MAAA,yBAAA+Q,EAAA/Q,MAAAgR,GAAAvP,UAAAwP,EAAAjR,MAAA,UAASA,MAAAiR,EAAAhN,aAAA8M,GAAkB,GAE3B/Q,MAAA,WAIAA,MAAA,YAGIA,MAAA,YAGAA,MAAA,YAGIA,MAAA,GAKJA,UAEJA,MAAA,YAGIA,MAAA,YAGAA,MAAA,YAGIA,MAAA,IACJA,UAEJA,MAAA,GAAAkR,GAAA,cAaJlR,QACAA,MAAA,YAAAA,CAEC,aAEOA,MAAA,IACJA,QACAA,MAAA,eAAAA,CAAuB,eACTA,MAAA,gBAASA,qDApDnBA,MAAA,GAAAA,MAAA,MAAA+Q,EAAAhR,IAAAC,OAYIA,MAAA,GAAAA,MAAA,cAAA+Q,EAAAlR,KAAA,qBAgBAG,MAAA,GAAAA,MAAA,IAAAmR,EAAAC,OAAA,mBAKHpR,MAAA,GAAAA,MAAA,OAAA+Q,EAAAjR,UAgBDE,MAAA,GAAAA,MAAA,IAAA+Q,EAAAzR,KAAA,gCAhEpBU,MAAA,GAGIA,MAAA,WAGIA,MAAA,EAAAqR,GAAA,+BAiEJrR,QACJA,+BAhE6BA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAsR,EAAA9R,mCATjCQ,MAAA,GACIA,MAAA,EAAAuR,GAAA,uCAyEJvR,+CAxESA,MAAA,GAAAA,MAAA,cAAAwR,EAAAxR,MAAA,IAAAC,EAAAT,QAAA,KAAAgS,EAAA1C,OAAA9O,CAA+B,WAAAsQ,6CAyExCtQ,MAAA,YACIA,MAAA,WAAAA,CAAgD,YAEhDA,MAAA,WAAAA,CAEC,iBAC8BA,MAAA,YAAMA,QACjCA,MAAA,OAAGA,MAAA,8BAAwBA,UAE/BA,MAAA,cAGIA,MAAA,kBAAA+B,GAAA/B,MAAAwB,GAAA,MAAAE,EAAA1B,QAAA,OAAUA,MAAA0B,EAAA+P,YAAA1P,GAAmB,GAHjC/B,kCAQJA,MAAA,WAAAA,CAEC,iBAC8BA,MAAA,gBAAUA,QACrCA,MAAA,OAAGA,MAAA,qBAAeA,kCAItBA,MAAA,YAGIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,gBAAUA,WAYtB,IAAM0R,EAAsB,MAA7B,MAAOA,UAA8BvE,KAOhCwE,QAAQpG,GACXnM,KAAKwS,cAAgBrG,GAAGsG,cAAcC,MAAMnM,SAAS,QACzD,CAEOoM,YAAYxG,GACTA,EAAEG,kBAAkBsG,kBACtBzG,EAAE0G,iBAEN7S,KAAK8S,QAAQ,eAAgB,IAAO9S,KAAKwS,eAAgB,EAC7D,CAEA1S,YAAoBqF,GAChB+I,QADgBlO,KAAAmF,SAjBJnF,KAAAsF,QAAUtF,KAAKmF,OAAOG,QACtBtF,KAAAI,MAAQJ,KAAKmF,OAAO/E,MAC7BJ,KAAAwS,eAAgB,EAEPxS,KAAA6E,aAAgB2C,GAASxH,KAAKmF,OAAON,aAAa2C,EAelE,CAEO6K,YAAY9D,GACf,MAAMwE,EAA4BxE,EAAMjC,OAExC,IAAKyG,GAASC,OAAOtD,OAAQ,OAE7B,MAAMhE,EADkBqH,EAAQC,MACb,GAEftH,IACCA,EAAKjL,KAAK8F,SAAS,UAAYmF,EAAKjL,KAAK8F,SAAS,UAEnDvG,KAAKmF,OAAOqG,iBAAiBE,IAAI,EAEjCtE,MAAY,qBAEpB,CAAChG,SAAApB,KAAA,mBAAAqB,iBApCQiR,GAAqB1R,MAAAsH,GAAA,EAAA9G,SAAApB,KAAA,UAAAuB,EAAAC,IAAA,MAArB8Q,EAAqB7Q,UAAA,oBAAAgN,SAAA,CAAA7N,OAAAc,MAAA,EAAAC,KAAA,EAAAC,OAAA,8xDAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAzH1BlB,MAAA,WAEIA,MAAA,qBAAA+B,GAAA,OAAsBZ,EAAAwQ,QAAA5P,EAAe,KAAA/B,MAArCA,CAAsC,gBAAA+B,GAAA,OACrBZ,EAAA4Q,YAAAhQ,EAAmB,KAAA/B,OAEpCA,MAAA,EAAAqS,GAAA,uCA2EArS,MAAA,EAAAsS,GAAA,aAeJtS,QACAA,MAAA,EAAAuS,GAAA,yBAAAvS,OAOc,EAAAwS,GAAA,yBAAAxS,8BAlGKA,MAAA,GAAAA,MAAA,QAAAA,MAAA,IAAAmB,EAAAuD,SAAA1E,CAA0B,WAAAuQ,GA2EVvQ,MAAA,GAAAA,MAAA,OAAAmB,EAAAyQ,wMAyC9BF,CAAsB,oBC/GnC,MAAMe,GAAkB,CACpB,CACIC,KAAM,GACNC,UAAWzF,EACX0F,SAAU,CACN,CAAEF,KAAM,GAAIG,WAAY,YAAaC,UAAW,QAChD,CAAEJ,KAAM,YAAaC,UAAW/C,GAChC,CAAE8C,KAAM,QAASC,UAAWjB,GAC5B,CAAEgB,KAAM,WAAYC,UAAWnC,GAC/B,CAAEkC,KAAM,QAASC,UAAW9B,GAC5B,CAAE6B,KAAM,WAAYC,UAAW7B,GAC/B,CAAE4B,KAAM,IAAKG,WAAY,YAAaC,UAAW,WAKhDC,GAA0B,CACnC7F,EACAiB,GACAyB,EACA8B,EACAlB,EACAK,EACAC,EACAzQ,EACAiE,GAcG,IAAM0O,GAAa,MAApB,MAAOA,EAAaxS,SAAApB,KAAA,mBAAAqB,iBAAbuS,EAAa,EAAAxS,SAAApB,KAAA,UAAAuB,EAAAsS,IAAA,MAAbD,IAAaxS,SAAApB,KAAA,UAAAuB,EAAAuS,IAAA,UARlBC,KACAC,KACAC,IACAC,MACAC,KAAaC,SAASf,IACtBgB,eAGKT,CAAa","names":["SignagePlaylist","constructor","_data","this","id","name","description","media","media_durations","SignageDisplay","playlists","SignageMedia","type","duration","url","i0","ctx_r0","resource","toString","ctx_r1","SignageMediaPreviewModalComponent","can_save","save","static","t","MAT_DIALOG_DATA","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","SignageMediaPreviewModalComponent_img_8_Template","SignageMediaPreviewModalComponent_video_9_Template","SignageMediaPreviewModalComponent_footer_10_Template","item_r12","_r14","$implicit","ctx_r13","addMedia","_r16","ctx_r15","focusSearchInput","$event","ctx_r17","search","next","SignagePlaylistModalComponent_main_4_button_23_Template","form","media_list","_c1","_c2","_c3","_c4","_r4","_r6","_r9","getValue","_c5","new_media","_r19","ctx_r18","savePlaylist","row_r20","_r23","row","ctx_r22","setDuration","_r21","ctx_r3","value","row_r24","_r28","ctx_r27","changeOrder","ctx_r29","ctx_r30","previewMedia","ctx_r31","removeMedia","first_r25","last_r26","SignagePlaylistModalComponent","_state","_dialog","_dialog_ref","loading","playlist","BehaviorSubject","FormGroup","FormControl","Validators","required","combineLatest","valueChanges","pipe","startWith","getRawValue","map","find","_","all_media","filter","includes","toLowerCase","indexOf","setTimeout","search_input","nativeElement","focus","_this","_asyncToGenerator","markAllAsTouched","updateValueAndValidity","invalid","catch","notifyError","close","new_media_durations","patchValue","item","index","splice","direction","open","data","afterClosed","subscribe","URL","revokeObjectURL","i1","i2","viewQuery","SignagePlaylistModalComponent_button_3_Template","SignagePlaylistModalComponent_main_4_Template","SignagePlaylistModalComponent_footer_5_Template","SignagePlaylistModalComponent_ng_template_6_Template","SignagePlaylistModalComponent_ng_template_8_Template","SignagePlaylistModalComponent_ng_template_10_Template","_r8","SignageStateService","_org","_loading","_change","_active_upload","asObservable","active_building","switchMap","bld","showMetadata","catchError","of","details","Array","shareReplay","displays","zones","queryZones","parent_id","tags","limit","editPlaylist","Date","now","remove","building","playlist_list","take","toPromise","idx","findIndex","randomString","push","updateMetadata","notifySuccess","removePlaylist","_this2","editDisplay","display","saveDisplay","_this3","display_list","removeDisplay","_this4","previewFileMedia","createObjectURL","file","_this5","_uploadFile","Promise","resolve","reject","fileReader","FileReader","addEventListener","e","blob","blobUtil","target","result","upload","uploadFiles","file_name","upload_details","randomInt","progress","size","created_at","status","takeWhile","state","access_url","readAsArrayBuffer","Yz7","factory","ɵfac","providedIn","newItem","active_link","singular","link_r5","ctx_r8","SignageComponent","AsyncHandler","replace","_router","super","links","ngOnInit","subscription","events","event","NavigationEnd","features","attrs","_c0","SignageComponent_button_7_Template","SignageComponent_For_10_Template","_r2","SignageTopbarComponent","_route","levels","active_levels","initialised","first","queryParamMap","params","has","get","split","length","level","levelWithID","buildings","zone","lvl","i3","row_r8","row_r9","_r11","ctx_r10","editItem","ctx_r12","deleteItem","SignagePlaylistsComponent","i","reduce","acc","m","SignagePlaylistsComponent_ng_template_1_Template","SignagePlaylistsComponent_ng_template_3_Template","SignagePlaylistsComponent_ng_template_5_Template","SignagePlaylistsComponent_mat_progress_bar_7_Template","_r1","_r3","_r5","SignageDisplaysComponent","SignageDisplaysComponent_ng_template_1_Template","SignageDisplaysComponent_ng_template_3_Template","SignageDisplaysComponent_ng_template_5_Template","SignageDisplaysComponent_mat_progress_bar_7_Template","SignageZonesComponent","SignageTriggersComponent","item_r8","_r12","ctx_r11","SignageMediaComponent_ng_container_1_ng_container_1_div_2_div_11_Template","ctx_r7","count","SignageMediaComponent_ng_container_1_ng_container_1_div_2_Template","ctx_r6","SignageMediaComponent_ng_container_1_ng_container_1_Template","tmp_0_0","previewFile","SignageMediaComponent","onEnter","show_dropzone","dataTransfer","types","hideOverlay","HTMLInputElement","preventDefault","timeout","element","files","SignageMediaComponent_ng_container_1_Template","SignageMediaComponent_div_3_Template","SignageMediaComponent_ng_template_4_Template","SignageMediaComponent_ng_template_6_Template","ROUTES","path","component","children","redirectTo","pathMatch","COMPONENTS","SignageModule","oAB","cJS","CommonModule","FormsModule","UIModule","ComponentsModule","RouterModule","forChild","MatTabsModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/signage/signage.classes.ts","./apps/concierge/src/app/signage/signage-media-preview-modal.component.ts","./apps/concierge/src/app/signage/signage-playlist-modal.component.ts","./apps/concierge/src/app/signage/signage-state.service.ts","./apps/concierge/src/app/signage/signage.component.ts","./apps/concierge/src/app/signage/signage-topbar.component.ts","./apps/concierge/src/app/signage/signage-playlists.component.ts","./apps/concierge/src/app/signage/signage-displays.component.ts","./apps/concierge/src/app/signage/signage-zones.component.ts","./apps/concierge/src/app/signage/signage-triggers.component.ts","./apps/concierge/src/app/signage/signage-media.component.ts","./apps/concierge/src/app/signage/signage.module.ts"],"sourcesContent":["export class SignagePlaylist {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly media: string[];\n    public readonly media_durations: Record<string, number>;\n\n    constructor(_data: Partial<SignagePlaylist> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.media = _data.media || [];\n        this.media_durations = _data.media_durations || {};\n    }\n}\n\nexport class SignageDisplay {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageDisplay> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageZone {\n    public readonly id: string;\n    public readonly zone_id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageZone> = {}) {\n        this.id = _data.id || '';\n        this.zone_id = _data.zone_id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageTrigger {\n    public readonly id: string;\n    public readonly zone_id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageTrigger> = {}) {\n        this.id = _data.id || '';\n        this.zone_id = _data.zone_id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageMedia {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly type: 'image' | 'video';\n    public readonly duration: number;\n    public readonly url: string;\n\n    constructor(_data: Partial<SignageMedia> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.type = _data.type || 'image';\n        this.duration = _data.duration || 15;\n        this.url = _data.url || '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'signage-media-preview-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">Preview - {{ name }}</h1>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"bg-base-200\">\n            <div\n                class=\"max-w-[80vw] max-h-[65vh] w-[80vw] h-[65vh] flex items-center justify-center\"\n            >\n                <img\n                    *ngIf=\"type === 'image'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                />\n                <video\n                    *ngIf=\"type === 'video'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                    autoplay\n                    controls\n                ></video>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"can_save\"\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n        >\n            <button btn matRipple class=\"w-32\">Save Media</button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SignageMediaPreviewModalComponent {\n    public readonly resource = this._data.url;\n    public readonly type = this._data.type;\n    public readonly name = this._data.name;\n    public readonly can_save = this._data.save !== false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            url: URL;\n            type: 'image' | 'video';\n            save: boolean;\n            name: string;\n        }\n    ) {}\n}\n","import {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport { SignageStateService } from './signage-state.service';\nimport { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { SignageMedia, SignagePlaylist } from './signage.classes';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { th } from 'date-fns/locale';\n\n@Component({\n    selector: 'signage-playlist-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">{{ playlist.id ? 'Edit' : 'New' }} Playlist</h1>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            class=\"p-2 flex flex-col\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <label for=\"name\">Name<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <input\n                    matInput\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\"\n                />\n            </mat-form-field>\n            <label for=\"description\">Description</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n            <label for=\"media\">Media</label>\n            <custom-table\n                class=\"block w-full mb-2\"\n                [dataSource]=\"media_list\"\n                [columns]=\"['_index', 'name', 'type', 'duration', 'actions']\"\n                [display_column]=\"[' ', 'Name', 'Type', 'Duration', ' ']\"\n                [column_size]=\"['3r', 'flex', '10r', '6r', '10r']\"\n                [template]=\"{\n                    duration: duration_template,\n                    actions: actions_template\n                }\"\n            >\n            </custom-table>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                [matMenuTriggerFor]=\"media_menu\"\n                (click)=\"focusSearchInput()\"\n            >\n                Add Media\n            </button>\n            <mat-menu #media_menu=\"matMenu\" class=\"w-[32rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <app-icon matPrefix class=\"text-2xl -left-1\">\n                        search\n                    </app-icon>\n                    <input\n                        #search_input\n                        matInput\n                        placeholder=\"Media Name\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    />\n                </mat-form-field>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let item of new_media | async | slice: 0:8\"\n                    (click)=\"addMedia(item)\"\n                >\n                    <div class=\"flex items-center w-full\">\n                        <div class=\"flex-1 truncate\">{{ item.name }}</div>\n                        <code class=\"capitalize\">{{ item.type }}</code>\n                        <code class=\"bg-base-300 text-base-content\">{{\n                            item.duration | mediaDuration\n                        }}</code>\n                    </div>\n                </button>\n            </mat-menu>\n        </main>\n        <footer\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"savePlaylist()\">\n                Save Playlist\n            </button>\n        </footer>\n        <ng-template #duration_template let-row=\"row\">\n            <button\n                matTooltip=\"Set Custom Duration\"\n                [matMenuTriggerFor]=\"duration_menu\"\n                [class.pointer-events-none]=\"row.type !== 'image'\"\n            >\n                <code\n                    [class.bg-warning]=\"form.value.media_durations[row.id]\"\n                    [class.text-warning-content]=\"\n                        form.value.media_durations[row.id]\n                    \"\n                >\n                    {{\n                        form.value.media_durations[row.id] || row.duration\n                            | mediaDuration\n                    }}\n                </code>\n            </button>\n            <mat-menu #duration_menu=\"matMenu\" class=\"w-[20rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <mat-select\n                        [ngModel]=\"form.value.media_durations[row.id] || 0\"\n                        (ngModelChange)=\"setDuration(row.id, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                        <mat-option [value]=\"0\">Use Media Default</mat-option>\n                        <mat-option [value]=\"5\">5 seconds</mat-option>\n                        <mat-option [value]=\"10\">10 seconds</mat-option>\n                        <mat-option [value]=\"15\">15 seconds</mat-option>\n                        <mat-option [value]=\"30\">30 seconds</mat-option>\n                        <mat-option [value]=\"45\">45 seconds</mat-option>\n                        <mat-option [value]=\"60\">1 minute</mat-option>\n                        <mat-option [value]=\"75\"\n                            >1 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"90\"\n                            >1 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"105\"\n                            >1 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"120\">2 minute</mat-option>\n                        <mat-option [value]=\"135\"\n                            >2 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"150\"\n                            >2 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"165\"\n                            >2 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"180\">3 minute</mat-option>\n                        <mat-option [value]=\"195\"\n                            >3 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"210\"\n                            >3 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"225\"\n                            >3 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"240\">4 minute</mat-option>\n                        <mat-option [value]=\"255\"\n                            >4 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"270\"\n                            >4 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"285\"\n                            >4 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"300\">5 minute</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </mat-menu>\n        </ng-template>\n        <ng-template\n            #actions_template\n            let-row=\"row\"\n            let-first=\"first\"\n            let-last=\"last\"\n        >\n            <div class=\"w-full flex items-center justify-end\">\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Media to previous item\"\n                    [disabled]=\"first\"\n                    (click)=\"changeOrder(row, -1)\"\n                >\n                    <app-icon>arrow_upward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Media to next item\"\n                    [disabled]=\"last\"\n                    (click)=\"changeOrder(row, 1)\"\n                >\n                    <app-icon>arrow_downward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Preview Media\"\n                    (click)=\"previewMedia(row)\"\n                >\n                    <app-icon>visibility</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Remove Media from Playlist\"\n                    class=\"text-error\"\n                    (click)=\"removeMedia(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Playlist...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignagePlaylistModalComponent {\n    public loading = false;\n    public readonly playlist = this._data;\n    public readonly media = this._state.media;\n\n    public readonly search = new BehaviorSubject('');\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this.playlist.id || ''),\n        name: new FormControl(this.playlist.name || '', [Validators.required]),\n        description: new FormControl(this.playlist.description || ''),\n        media: new FormControl(this.playlist.media || []),\n        media_durations: new FormControl(this.playlist.media_durations || {}),\n    });\n\n    public readonly media_list = combineLatest([\n        this.media,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([media_list, { media }]) =>\n            (this.form.getRawValue().media || []).map(\n                (id) =>\n                    media_list.find((_) => _.id === id) ||\n                    new SignageMedia({ id })\n            )\n        )\n    );\n\n    public readonly new_media = combineLatest([\n        this.media,\n        this.search,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([all_media, search, _]) =>\n            all_media\n                .filter((_) => !this.form.getRawValue().media.includes(_.id))\n                .filter((_) =>\n                    _.name.toLowerCase().includes(search.toLowerCase())\n                )\n        )\n    );\n\n    @ViewChild('search_input')\n    public search_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: SignagePlaylist = {} as any,\n        private _state: SignageStateService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<SignagePlaylistModalComponent>\n    ) {}\n\n    public indexOf(id: string) {\n        return this.form.getRawValue().media.indexOf(id);\n    }\n\n    public focusSearchInput() {\n        setTimeout(() => this.search_input.nativeElement?.focus(), 100);\n    }\n\n    public async savePlaylist() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n        this.loading = true;\n        await this._state.savePlaylist(this.form.getRawValue()).catch((_) => {\n            notifyError('Error saving playlist');\n            this.loading = false;\n            throw _;\n        });\n        this._dialog_ref.close();\n    }\n\n    public setDuration(id: string, duration: number) {\n        const { media_durations } = this.form.getRawValue();\n        const new_media_durations = { ...media_durations };\n        new_media_durations[id] = duration;\n        this.form.patchValue({ media_durations: new_media_durations });\n    }\n\n    public addMedia(item: SignageMedia) {\n        const { id } = item;\n        const { media } = this.form.getRawValue();\n        this.form.patchValue({\n            media: [...media, id],\n        });\n    }\n\n    public removeMedia(item: SignageMedia) {\n        const { media, media_durations } = this.form.getRawValue();\n        const index = media.indexOf(item.id);\n        const new_media = [...media];\n        delete media_durations[item.id];\n        new_media.splice(index, 1);\n        this.form.patchValue({\n            media: new_media,\n            media_durations: { ...media_durations },\n        });\n    }\n\n    public changeOrder(item: SignageMedia, direction: number) {\n        const { media } = this.form.getRawValue();\n        const index = media.indexOf(item.id);\n        const new_media = [...media];\n        new_media.splice(index, 1);\n        new_media.splice(index + direction, 0, item.id);\n        this.form.patchValue({\n            media: new_media,\n        });\n    }\n\n    public previewMedia(item: SignageMedia) {\n        const { url, type, name } = item;\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name, save: false },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { uploadFiles } from '@placeos/cloud-uploads';\nimport {\n    notifySuccess,\n    predictableRandomInt,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    PlaceMetadata,\n    queryZones,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { Attachment } from '@placeos/users';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    takeWhile,\n} from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport {\n    SignageDisplay,\n    SignageMedia,\n    SignagePlaylist,\n} from './signage.classes';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SignageStateService {\n    private _loading = new BehaviorSubject(false);\n    private _change = new BehaviorSubject(0);\n    private _active_upload = new BehaviorSubject<Attachment>(null);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly media: Observable<SignageMedia[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-media').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map(\n            (_) =>\n                (_.details instanceof Array ? _.details : null) || [\n                    {\n                        id: `media-0001`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 15,\n                    },\n                    {\n                        id: `media-0002`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 30,\n                    },\n                    {\n                        id: `media-0003`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 60,\n                    },\n                    {\n                        id: `media-0004`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 15,\n                    },\n                    {\n                        id: `media-0005`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 30,\n                    },\n                    {\n                        id: `media-0006`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 60,\n                    },\n                ]\n        ),\n        shareReplay(1)\n    );\n\n    public readonly playlists: Observable<SignagePlaylist[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-playlists').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : null))\n    );\n\n    public readonly displays: Observable<SignageDisplay[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-displays').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : null))\n    );\n\n    public readonly zones = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            queryZones({ parent_id: bld.id, tags: 'signage', limit: 100 }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((_) => _.data || [])\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public editPlaylist(playlist: SignagePlaylist = new SignagePlaylist()) {\n        const ref = this._dialog.open(SignagePlaylistModalComponent, {\n            data: playlist,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async savePlaylist(playlist: SignagePlaylist, remove = false) {\n        const bld = this._org.building.id;\n        const playlist_list =\n            (await this.playlists.pipe(take(1)).toPromise()) || [];\n        const idx = playlist_list.findIndex((_) => _.id === playlist.id);\n        if (idx >= 0) playlist_list.splice(idx, 1);\n        if (!playlist.id) (playlist as any).id = `playlist-${randomString(8)}`;\n        if (!remove) playlist_list.push(playlist);\n        await updateMetadata(bld, {\n            name: 'signage-playlists',\n            details: playlist_list,\n            description: 'Playlists for signage displays',\n        }).toPromise();\n        notifySuccess(`Successfully ${remove ? 'removed' : 'saved'} playlist.`);\n        this._change.next(Date.now());\n    }\n\n    public async removePlaylist(playlist: SignagePlaylist) {\n        await this.savePlaylist(playlist, true);\n    }\n\n    public editDisplay(display: SignageDisplay = new SignageDisplay()) {\n        const ref = this._dialog.open(SignagePlaylistModalComponent, {\n            data: display,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async saveDisplay(display: SignageDisplay, remove = false) {\n        const bld = this._org.building.id;\n        const display_list = await this.displays.pipe(take(1)).toPromise();\n        const idx = display_list.findIndex((_) => _.id === display.id);\n        if (idx >= 0) display_list.splice(idx, 1);\n        if (!display.id) (display as any).id = `display-${randomString(8)}`;\n        if (!remove) display_list.push(display);\n        await updateMetadata(bld, {\n            name: 'signage-displays',\n            details: display_list,\n            description: 'Displays for signage displays',\n        }).toPromise();\n        notifySuccess(`Successfully ${remove ? 'removed' : 'saved'} display.`);\n        this._change.next(Date.now());\n    }\n\n    public async removeDisplay(display: SignageDisplay) {\n        await this.saveDisplay(display, true);\n    }\n\n    public previewMedia(item: SignageMedia) {\n        const { url, type, name } = item;\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name, save: false },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n\n    public previewFileMedia(media: File) {\n        const url = URL.createObjectURL(media);\n        const type = media.type.includes('image') ? 'image' : 'video';\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name: media.name, save: true },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n\n    public async addMedia(file: File) {\n        const media = await this._uploadFile(file);\n        const media_list = await this.media.pipe(take(1)).toPromise();\n        media_list.push({\n            id: `media-${randomString(8)}`,\n            name: media.name,\n            description: '',\n            url: media.url,\n            type: file.type.includes('image') ? 'image' : 'video',\n            duration: 15,\n        });\n        const bld = this._org.building.id;\n        await updateMetadata(bld, {\n            name: 'signage-media',\n            details: media_list,\n            description: 'Media for signage displays',\n        }).toPromise();\n        notifySuccess('Successfully added media.');\n        this._active_upload.next(null);\n        this._change.next(Date.now());\n    }\n\n    private _uploadFile(file: File): Promise<Attachment> {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.addEventListener('loadend', (e: any) => {\n                const arrayBuffer = e.target.result;\n                const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n                const upload_list = uploadFiles([blob], {\n                    file_name: file.name,\n                });\n                const upload = upload_list[0];\n                const upload_details: Attachment = {\n                    id: `${randomInt(9999_9999_9999)}`,\n                    name: file.name,\n                    progress: 0,\n                    size: file.size,\n                    created_at: Date.now(),\n                    url: '',\n                };\n                upload.status\n                    .pipe(takeWhile((_) => _.status !== 'complete', true))\n                    .subscribe(\n                        (state) => {\n                            if (upload.access_url)\n                                upload_details.url = upload.access_url;\n                            upload_details.progress = state.progress;\n                            if (state.status === 'error') {\n                                upload_details.progress = -1;\n                                reject();\n                            }\n                        },\n                        reject,\n                        () => resolve(upload_details)\n                    );\n                this._active_upload.next(upload_details);\n            });\n            fileReader.readAsArrayBuffer(file);\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-staff]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"p-8 h-28 flex items-center justify-between\">\n                    <h2 class=\"text-2xl font-medium\">\n                        Signage - {{ active_link }}\n                    </h2>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        (click)=\"newItem(active_link)\"\n                        *ngIf=\"active_link !== 'Media'\"\n                    >\n                        Add {{ singular(active_link) }}\n                    </button>\n                </div>\n                <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n                    @for (link of links; track link) {\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"'/signage/' + (link | lowercase)\"\n                        (click)=\"active_link = link\"\n                        [active]=\"active_link == link\"\n                    >\n                        {{ link }}\n                    </a>\n                    }\n                </nav>\n                <mat-tab-nav-panel class=\"flex-1 h-1/2 overflow-auto\" #tabPanel>\n                    <router-outlet></router-outlet>\n                </mat-tab-nav-panel>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class SignageComponent extends AsyncHandler implements OnInit {\n    public readonly loading = this._state.loading;\n    public links = ['Playlists', 'Media', 'Displays', 'Zones', 'Triggers'];\n    public active_link = this.links[0];\n\n    public singular(name: string) {\n        return name.replace(/s$/, '');\n    }\n\n    public newItem(name: string) {\n        switch (name) {\n            case 'Playlists':\n                this._state.editPlaylist();\n                break;\n            case 'Displays':\n                this._state.editDisplay();\n                break;\n            case 'Zones':\n                // this._state.editZone();\n                break;\n            case 'Triggers':\n                // this._state.editTrigger();\n                break;\n        }\n    }\n\n    constructor(private _state: SignageStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._router.events.subscribe((event) => {\n                if (event instanceof NavigationEnd) {\n                    this.active_link = this.links.find((_) =>\n                        this._router.url.includes(_.toLowerCase())\n                    );\n                }\n            })\n        );\n        this.active_link = this.links.find((_) =>\n            this._router.url.includes(_.toLowerCase())\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <!-- <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.only_onsite\"\n                (ngModelChange)=\"setFilters({ only_onsite: $event })\"\n                ><div class=\"text-xs\">Onsite Only</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar> -->\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class SignageTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    // public readonly filters = this._state.filters;\n    // /** Set filtered date */\n    // public readonly setDate = (date) => this._state.setFilters({ date });\n    // /** Set filtered date */\n    // public readonly setFilters = (filters) => this._state.setFilters(filters);\n    // /** Set filter string */\n    // public readonly setSearch = (str) => this._state.setSearchString(str);\n    // /** Update active zones for desks */\n    // public readonly updateZones = (zones) => {\n    //     this._router.navigate([], {\n    //         relativeTo: this._route,\n    //         queryParams: { zone_ids: zones.join(',') },\n    //     });\n    //     this._state.setFilters({ zones });\n    // };\n\n    constructor(\n        private _state: SignageStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                // this.updateZones(this.zones);\n            })\n        );\n        // this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { SignagePlaylist } from './signage.classes';\nimport { map, take, tap } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'signage-playlists',\n    template: `\n        <custom-table\n            class=\"block min-w-[48rem]\"\n            [dataSource]=\"playlist_list\"\n            [columns]=\"['name', 'description', 'media', 'duration', 'actions']\"\n            [display_column]=\"['Name', 'Description', 'Media', 'Duration', ' ']\"\n            [column_size]=\"['8r', 'flex', '10r', '6r', '5r']\"\n            [template]=\"{\n                media: media_template,\n                duration: duration_template,\n                actions: actions_template\n            }\"\n        ></custom-table>\n        <ng-template #media_template let-row=\"row\">\n            {{ row.media.length }} Media Item(s)\n        </ng-template>\n        <ng-template #duration_template let-row=\"row\">\n            <code>{{ row.duration | mediaDuration }}</code>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button icon matRipple (click)=\"editItem(row)\">\n                <app-icon>edit</app-icon>\n            </button>\n            <button icon matRipple class=\"text-error\" (click)=\"deleteItem(row)\">\n                <app-icon>delete</app-icon>\n            </button>\n        </ng-template>\n        <mat-progress-bar\n            class=\"absolute inset-x-0 bottom-0\"\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [``],\n})\nexport class SignagePlaylistsComponent {\n    public readonly loading = this._state.loading;\n    public readonly playlists = this._state.playlists;\n    public readonly media = this._state.media;\n\n    public readonly deleteItem = (i) => this._state.removePlaylist(i);\n    public readonly editItem = (i) => this._state.editPlaylist(i);\n\n    public readonly playlist_list = combineLatest([\n        this.playlists,\n        this.media,\n    ]).pipe(\n        map(([playlists, media]) =>\n            playlists.map((playlist) => ({\n                ...playlist,\n                duration: playlist.media.reduce(\n                    (acc, item) =>\n                        acc +\n                        (playlist.media_durations[item] ||\n                            media.find((m) => m.id === item)?.duration ||\n                            15),\n                    0\n                ),\n            }))\n        )\n    );\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'signage-displays',\n    template: ` <custom-table\n            class=\"block min-w-[48rem]\"\n            [dataSource]=\"display_list\"\n            [columns]=\"[\n                'name',\n                'description',\n                'playlists',\n                'duration',\n                'actions'\n            ]\"\n            [display_column]=\"['Name', 'Description', 'Media', 'Duration', ' ']\"\n            [column_size]=\"['8r', 'flex', '10r', '6r', '5r']\"\n            [template]=\"{\n                playlists: playlists_template,\n                duration: duration_template,\n                actions: actions_template\n            }\"\n        ></custom-table>\n        <ng-template #playlists_template let-row=\"row\">\n            {{ row.playlists.length }} Playlist(s)\n        </ng-template>\n        <ng-template #duration_template let-row=\"row\">\n            <code>{{ row.duration | mediaDuration }}</code>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button icon matRipple (click)=\"editItem(row)\">\n                <app-icon>edit</app-icon>\n            </button>\n            <button icon matRipple class=\"text-error\" (click)=\"deleteItem(row)\">\n                <app-icon>delete</app-icon>\n            </button>\n        </ng-template>\n        <mat-progress-bar\n            class=\"absolute inset-x-0 bottom-0\"\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>`,\n    styles: [``],\n})\nexport class SignageDisplaysComponent {\n    public readonly loading = this._state.loading;\n    public readonly displays = this._state.displays;\n    public readonly playlists = this._state.playlists;\n    public readonly media = this._state.media;\n\n    public readonly deleteItem = (i) => this._state.removePlaylist(i);\n    public readonly editItem = (i) => this._state.editPlaylist(i);\n\n    public readonly display_list = combineLatest([\n        this.displays,\n        this.playlists,\n        this.media,\n    ]).pipe(\n        map(([displays, playlists, media]) =>\n            displays.map((display) => ({\n                ...display,\n                playlists: display.playlists.map((id) =>\n                    playlists.find((i) => i.id === id)\n                ),\n                duration: display.playlists.reduce((acc, id) => {\n                    const playlist = playlists.find((_) => _.id === id);\n                    if (!playlist) return acc;\n                    return (\n                        acc +\n                        playlist.media.reduce(\n                            (acc, item) =>\n                                acc +\n                                (playlist.media_durations[item] ||\n                                    media.find((m) => m.id === item)\n                                        ?.duration ||\n                                    15),\n                            0\n                        )\n                    );\n                }, 0),\n            }))\n        )\n    );\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-zones',\n    template: ``,\n    styles: [``],\n})\nexport class SignageZonesComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-triggers',\n    template: ``,\n    styles: [``],\n})\nexport class SignageTriggersComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { AsyncHandler, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'signage-media',\n    template: `\n        <div\n            class=\"relative bg-base-200 min-h-full w-full\"\n            (document:dragenter)=\"onEnter($event)\"\n            (document:drop)=\"hideOverlay($event)\"\n        >\n            <ng-container *ngIf=\"!(loading | async); else load_template\">\n                <ng-container\n                    *ngIf=\"(media | async)?.length; else empty_template\"\n                >\n                    <div\n                        class=\"flex flex-wrap items-start justify-start w-full p-2\"\n                    >\n                        <div\n                            class=\"m-2 p-2 bg-base-100 rounded-lg overflow-hidden h-[13rem] border border-base-300 shadow\"\n                            *ngFor=\"let item of media | async\"\n                        >\n                            <button\n                                class=\"w-64 h-36 overflow-hidden bg-base-200 rounded m-0 p-0 relative\"\n                                (click)=\"previewMedia(item)\"\n                            >\n                                <img\n                                    [src]=\"item.url\"\n                                    class=\"object-cover w-full h-full\"\n                                />\n                                <div\n                                    class=\"absolute top-2 left-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{\n                                            item.type === 'image'\n                                                ? 'Image'\n                                                : 'Video'\n                                        }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute top-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ count || 0 }} Playlist(s)\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute bottom-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                    *ngIf=\"item.duration\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ item.duration | mediaDuration }}\n                                    </div>\n                                </div>\n                            </button>\n                            <div\n                                class=\"flex items-center justify-between space-x-2\"\n                            >\n                                <div class=\"truncate flex-1 w-1/2 px-2\">\n                                    {{ item.name }}\n                                </div>\n                                <button icon matRipple>\n                                    <app-icon>more_vert</app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n            <div class=\"absolute inset-0\" *ngIf=\"show_dropzone\">\n                <div class=\"absolute inset-0 bg-base-200\"></div>\n                <div class=\"absolute inset-0 bg-base-content opacity-70\"></div>\n                <div\n                    class=\"absolute inset-4 border-4 border-dashed border-neutral text-base-100 rounded-xl flex flex-col items-center justify-center\"\n                >\n                    <app-icon class=\"text-8xl\">upload</app-icon>\n                    <p>Drop file to upload file</p>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 w-full opacity-0\"\n                    (change)=\"previewFile($event)\"\n                />\n            </div>\n        </div>\n        <ng-template #empty_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 opacity-30\"\n            >\n                <app-icon class=\"text-8xl\">hide_image</app-icon>\n                <p>No media found.</p>\n            </div>\n        </ng-template>\n        <ng-template #load_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Loading...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                min-height: 100%;\n            }\n        `,\n    ],\n})\nexport class SignageMediaComponent extends AsyncHandler {\n    public readonly loading = this._state.loading;\n    public readonly media = this._state.media;\n    public show_dropzone = false;\n\n    public readonly previewMedia = (item) => this._state.previewMedia(item);\n\n    public onEnter(e) {\n        this.show_dropzone = e?.dataTransfer?.types.includes('Files');\n    }\n\n    public hideOverlay(e) {\n        if (!(e.target instanceof HTMLInputElement)) {\n            e.preventDefault();\n        }\n        this.timeout('hide_overlay', () => (this.show_dropzone = false));\n    }\n\n    constructor(private _state: SignageStateService) {\n        super();\n    }\n\n    public previewFile(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const file = files[0];\n        if (\n            file &&\n            (file.type.includes('image') || file.type.includes('video'))\n        ) {\n            this._state.previewFileMedia(file);\n        } else {\n            notifyError('Invalid file type.');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { SignageComponent } from './signage.component';\nimport { SignageTopbarComponent } from './signage-topbar.component';\nimport { SignagePlaylistsComponent } from './signage-playlists.component';\nimport { SignageDisplaysComponent } from './signage-displays.component';\nimport { SignageZonesComponent } from './signage-zones.component';\nimport { SignageTriggersComponent } from './signage-triggers.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SignageMediaComponent } from './signage-media.component';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: SignageComponent,\n        children: [\n            { path: '', redirectTo: 'playlists', pathMatch: 'full' },\n            { path: 'playlists', component: SignagePlaylistsComponent },\n            { path: 'media', component: SignageMediaComponent },\n            { path: 'displays', component: SignageDisplaysComponent },\n            { path: 'zones', component: SignageZonesComponent },\n            { path: 'triggers', component: SignageTriggersComponent },\n            { path: '*', redirectTo: 'playlists', pathMatch: 'full' },\n        ],\n    },\n];\n\nexport const COMPONENTS: Type<any>[] = [\n    SignageComponent,\n    SignageTopbarComponent,\n    SignagePlaylistsComponent,\n    SignageMediaComponent,\n    SignageDisplaysComponent,\n    SignageZonesComponent,\n    SignageTriggersComponent,\n    SignageMediaPreviewModalComponent,\n    SignagePlaylistModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        ComponentsModule,\n        RouterModule.forChild(ROUTES),\n        MatTabsModule,\n    ],\n})\nexport class SignageModule {}\n"],"x_google_ignoreList":[]}