{"version":3,"file":"apps_concierge_src_app_signage_signage_module_ts.js","mappings":"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","names":["i0","ctx_r0","resource","toString","SignageMediaPreviewModalComponent_main_6_img_2_Template","SignageMediaPreviewModalComponent_main_6_video_3_Template","type","_r2","save","emit","loading","SignageMediaPreviewModalComponent","constructor","_data","this","EventEmitter","url","name","file","can_save","static","__ngFactoryType__","MAT_DIALOG_DATA","core","VBU","selectors","outputs","decls","vars","consts","template","rf","ctx","SignageMediaPreviewModalComponent_main_6_Template","SignageMediaPreviewModalComponent_footer_7_Template","SignageMediaPreviewModalComponent_ng_template_8_Template","load_state_r3","form","value","default_duration","valid_from","savePlaylist","SignagePlaylistModalComponent","_state","_dialog","_dialog_ref","playlist","media","search","BehaviorSubject","FormGroup","id","FormControl","Validators","required","description","default_animation","MediaAnimation","Cut","orientation","enabled","random","Math","max","valid_until","_this","_asyncToGenerator","markAllAsTouched","updateValueAndValidity","invalid","form_value","getRawValue","result","getUnixTime","catch","_","notifyError","close","i1","i2","viewQuery","SignagePlaylistModalComponent_button_3_Template","SignagePlaylistModalComponent_main_4_Template","SignagePlaylistModalComponent_footer_5_Template","SignagePlaylistModalComponent_ng_template_6_Template","ctx_r1","start_time","item","video_length","play_time","_r1","preview","SignageMediaModalComponent_main_4_Conditional_12_Template","SignageMediaModalComponent_main_4_Conditional_17_Template","SignageMediaModalComponent_main_4_Conditional_18_Template","thumbnail","media_type","_r3","saveMedia","SignageMediaModalComponent","includes","media_url","_file_url","URL","createObjectURL","file_thumbnail","thumbnail_url","animation","Default","startOfDay","Date","now","valueOf","addYears","endOfDay","patchValue","file_metadata","floor","ngOnDestroy","revokeObjectURL","valid","disableClose","new_media","onError","e","updateSignageMedia","toPromise","onAdd","notifySuccess","SignageMediaModalComponent_button_3_Template","SignageMediaModalComponent_main_4_Template","SignageMediaModalComponent_footer_5_Template","SignageMediaModalComponent_ng_template_6_Template","load_state_r4","SignageDisplayModalComponent","_org","display","display_name","new_display","PlaceSystem","signage","zones","unique","organisation","region","building","filter","updateSystem","addSystem","SignageDisplayModalComponent_button_3_Template","SignageDisplayModalComponent_main_4_Template","SignageDisplayModalComponent_footer_5_Template","SignageDisplayModalComponent_ng_template_6_Template","SignageStateService","AsyncHandler","changed","_change","next","_settings","super","_loading","_active_upload","asObservable","has_changed","combineLatest","active_building","pipe","debounceTime","switchMap","bld","querySignageMedia","limit","map","data","sort","a","b","created_at","shareReplay","playlists","querySignagePlaylists","localeCompare","displays","active_region","querySystems","zone_id","get","queryZones","catchError","of","editPlaylist","SignagePlaylist","Promise","resolve","open","afterClosed","subscribe","timeout","editMedia","SignageMedia","playlist_id","_ref","_getMediaMetadata","_generateThumbnail","f","m","addMedia","previewMedia","_x","apply","arguments","editDisplay","_this2","console","log","removeDisplay","_this3","openConfirmModal","title","content","icon","reason","map_id","email","module_list","length","removeSystem","_this4","updateSignagePlaylist","addSignagePlaylist","removePlaylist","_this5","removeSignagePlaylist","updatePlaylistMedia","list","updateSignagePlaylistMedia","previewFileFromInput","event","element","target","files","undefined","previewFileMedia","_this6","ref","componentInstance","new_media_list","listSignagePlaylistMedia","items","media_item","_this7","upload","reject","state","resolved","uploadFile","s","link","is_landscape","thumbnail_image","dataURLtoFile","dataURL","filename","prefix","split","mimeType","byteString","atob","arrayBuffer","ArrayBuffer","uint8Array","Uint8Array","i","charCodeAt","File","media_id","media_uri","thumbnail_id","key","addSignageMedia","updateMedia","removeMedia","_this8","removeSignageMedia","video","document","createElement","src","addEventListener","videoWidth","videoHeight","duration","load","img","Image","onload","width","height","max_width","max_height","_this9","_generateVideoThumbnail","_generateImageThumbnail","image","_generateThumbnailFromResource","onerror","autoplay","muted","onloadeddata","source_width","source_height","canvas","getContext","thumbnailWidth","thumbnailHeight","aspectRatio","drawImage","toDataURL","i3","jDH","factory","ɵfac","providedIn","newItem","active_link","singular","link_r4","$implicit","SignageComponent","_router","navigate","queryParams","links","previewFile","ngOnInit","subscription","events","NavigationEnd","find","toLowerCase","features","attrs","_c0","SignageComponent_button_7_Template","SignageComponent_For_11_Template","tabPanel_r5","SignageTopbarComponent","_route","levels","active_levels","initialised","first","queryParamMap","params","has","level","levelWithID","buildings","parent_id","zone","lvl","push","media_r4","SignageMediaListComponent_Conditional_5_For_3_Conditional_1_Template","SignageMediaListComponent_Conditional_5_For_3_Conditional_2_Template","SignageMediaListComponent_Conditional_5_For_3_div_3_Template","SignageMediaListComponent_Conditional_5_For_3_img_5_Template","SignageMediaListComponent_Conditional_5_For_3_div_8_Template","editItem","previewItem","removeItem","menu_r5","$event","drop","SignageMediaListComponent_Conditional_5_For_3_Template","_forTrack0","playlist_ids","SignageMediaListComponent","startOfMinute","playlist_count","ngOnChanges","changes","Array","fill","idx","inputs","SignageMediaListComponent_Conditional_5_Template","SignageMediaListComponent_Conditional_7_Template","getValue","tmp_1_0","SignagePlaylistMediaListComponent_Conditional_47_ng_container_2_Conditional_2_Template","SignagePlaylistMediaListComponent_Conditional_47_ng_container_2_Conditional_3_Template","SignagePlaylistMediaListComponent_Conditional_47_ng_container_2_div_4_Template","item_r5","_r4","ctx_r2","menu_r6","SignagePlaylistMediaListComponent_Conditional_47_ng_container_2_Template","SignagePlaylistMediaListComponent","_playlist","selected_playlist","take","_ref2","_playlist_media","startWith","animation_name","CrossFade","SlideBottom","SlideLeft","SlideRight","SlideTop","previousIndex","currentIndex","moveItemInArray","SignagePlaylistMediaListComponent_div_29_Template","SignagePlaylistMediaListComponent_Conditional_47_Template","SignagePlaylistMediaListComponent_Conditional_49_Template","menu_r7","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","tmp_8_0","tmp_9_0","tmp_10_0","tmp_11_0","playlist_r2","_c2","$index_r4","_c3","SignageMediaComponent_Conditional_9_For_1_Template","_r5","addPlaylist","SignageMediaComponent_Conditional_11_button_5_Template","tmp_2_0","_r6","hideOverlay","SignageMediaComponent","onEnter","clearTimeout","show_dropzone","dataTransfer","types","HTMLInputElement","preventDefault","query","previousContainer","SignageMediaComponent_Conditional_9_Template","SignageMediaComponent_Conditional_11_Template","SignageMediaComponent_signage_media_list_14_Template","SignageMediaComponent_signage_playlist_media_list_15_Template","SignageMediaComponent_div_16_Template","_c1","SearchOverlayComponent_For_8_Conditional_1_ng_container_0_Template","result_template","item_r2","selected","SearchOverlayComponent_For_8_Conditional_1_Template","SearchOverlayComponent_For_8_Conditional_2_Template","SearchOverlayComponent","item_list","_items","stopPropagation","SearchOverlayComponent_For_8_Template","SearchOverlayComponent_Conditional_9_Template","extra","SignageItemPlaylistsComponent_Conditional_5_For_2_div_1_Template","item_r4","remove","media_count","ondrop","SignageItemPlaylistsComponent_Conditional_5_For_2_Template","add","active_playlists","SignageItemPlaylistsComponent","_playlist_ids","ids","ngContentSelectors","SignageItemPlaylistsComponent_div_3_Template","SignageItemPlaylistsComponent_Conditional_5_Template","SignageItemPlaylistsComponent_Conditional_7_Template","selected_trigger","trigger_r1","display_r2","SignageDisplaysComponent_Conditional_6_For_2_Conditional_2_For_1_Template","triggers","SignageDisplaysComponent_Conditional_6_For_2_Conditional_2_Template","tmp_16_0","active_display","switching","SignageDisplaysComponent_Conditional_6_For_2_Template","_c4","zone_r5","tmp_15_0","SignageDisplaysComponent_Conditional_10_div_6_For_2_Template","adding","SignageDisplaysComponent_Conditional_10_div_6_Template","active_trigger","signage_path","_r7","SignageDisplaysComponent","listSystemTriggers","tap","setTimeout","sys_id","control_system_id","trigger","updateTrigger","version","old_playlist","SignageDisplaysComponent_Conditional_6_Template","SignageDisplaysComponent_Conditional_8_Template","SignageDisplaysComponent_Conditional_10_Template","SignageDisplaysComponent_Conditional_12_Template","SignageDisplaysComponent_search_overlay_13_Template","zone_r2","SignageZonesComponent_Conditional_6_For_2_Conditional_2_For_1_Template","SignageZonesComponent_Conditional_6_For_2_Conditional_2_Template","active_zone","SignageZonesComponent_Conditional_6_For_2_Template","SignageZonesComponent","listZoneTriggers","updateZone","SignageZonesComponent_Conditional_6_Template","SignageZonesComponent_Conditional_8_Template","SignageZonesComponent_Conditional_10_Template","SignageZonesComponent_Conditional_12_Template","SignageZonesComponent_search_overlay_13_Template","ROUTES","path","component","children","redirectTo","pathMatch","COMPONENTS","SignageModule","$C","G2t","CommonModule","FormsModule","UIModule","ComponentsModule","RouterModule","forChild","MatTabsModule","DragDropModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/signage/signage-media-preview-modal.component.ts","./apps/concierge/src/app/signage/signage-playlist-modal.component.ts","./apps/concierge/src/app/signage/signage-media-modal.component.ts","./apps/concierge/src/app/signage/signage-display-modal.component.ts","./apps/concierge/src/app/signage/signage-state.service.ts","./apps/concierge/src/app/signage/signage.component.ts","./apps/concierge/src/app/signage/signage-topbar.component.ts","./apps/concierge/src/app/signage/signage-media-list.component.ts","./apps/concierge/src/app/signage/signage-playlist-media-list.component.ts","./apps/concierge/src/app/signage/signage-media.component.ts","./apps/concierge/src/app/signage/search-overlay.component.ts","./apps/concierge/src/app/signage/signage-item-playlists.component.ts","./apps/concierge/src/app/signage/signage-displays.component.ts","./apps/concierge/src/app/signage/signage-zones.component.ts","./apps/concierge/src/app/signage/signage.module.ts"],"sourcesContent":["import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'signage-media-preview-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">Preview - {{ name }}</h1>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"bg-base-200\" *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"max-w-[80vw] max-h-[65vh] w-[80vw] h-[65vh] flex items-center justify-center\"\n            >\n                <img\n                    *ngIf=\"type === 'image'\"\n                    class=\"w-full h-full object-contain object-center\"\n                    auth\n                    [source]=\"resource.toString()\"\n                />\n                <video\n                    *ngIf=\"type === 'video'\"\n                    class=\"w-full h-full object-contain object-center\"\n                    auth\n                    [source]=\"resource.toString()\"\n                    autoplay\n                    controls\n                ></video>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"can_save && !loading\"\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save.emit()\">\n                Save Media\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-8 w-[28rem] h-[20rem] max-w-[80vw] max-h-[65vh]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignageMediaPreviewModalComponent {\n    @Output() public readonly save = new EventEmitter<any>();\n    public loading = '';\n    public readonly resource = this._data.url;\n    public readonly type = this._data.type;\n    public readonly name = this._data.name;\n    public readonly file = this._data.file;\n    public readonly can_save = this._data.save !== false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            url: URL;\n            type: 'image' | 'video';\n            save: boolean;\n            name: string;\n            file?: File;\n        },\n    ) {}\n}\n","import {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport { SignageStateService } from './signage-state.service';\nimport { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { notifyError } from '@placeos/common';\nimport { MediaAnimation } from '@placeos/ts-client/dist/esm/signage/media.class';\nimport { SignagePlaylist } from '@placeos/ts-client';\nimport { addYears, endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'signage-playlist-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between border-b border-base-300\"\n        >\n            <h1 class=\"p-2 font-medium text-xl\">\n                {{ playlist.id ? 'Edit' : 'New' }} Playlist\n            </h1>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            class=\"p-4 flex flex-col w-[32rem] max-w-[calc(100vw-2rem)]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <label for=\"name\">Name<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <input\n                    matInput\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\"\n                />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n            <div class=\"flex items-center space-x-8 mb-4\">\n                <mat-checkbox formControlName=\"enabled\">Enabled</mat-checkbox>\n                <mat-checkbox formControlName=\"random\">\n                    Shuffle Playback\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center space-x-4\">\n                <label\n                    for=\"default-duration\"\n                    class=\"w-auto min-w-0 m-0 space-x-2 flex items-center\"\n                >\n                    <div>Default Play Time</div>\n                    <app-icon\n                        class=\"text-xl\"\n                        matTooltip=\"Default length of time to hold images on screen\"\n                    >\n                        info\n                    </app-icon>\n                </label>\n                <div class=\"text-xs font-mono\">\n                    {{ form.value.default_duration / 1000 | mediaDuration }}\n                </div>\n            </div>\n            <mat-slider min=\"5000\" max=\"300000\" step=\"1000\">\n                <input\n                    name=\"default-duration\"\n                    matSliderThumb\n                    formControlName=\"default_duration\"\n                />\n            </mat-slider>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex-1\">\n                    <label for=\"orientation\">Orientation</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"orientation\"\n                            formControlName=\"orientation\"\n                            placeholder=\"Unspecified\"\n                        >\n                            <mat-option value=\"unspecified\">\n                                Unspecified\n                            </mat-option>\n                            <mat-option value=\"landscape\">Landscape</mat-option>\n                            <mat-option value=\"portrait\">Portrait</mat-option>\n                            <mat-option value=\"square\">Square</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1\">\n                    <label for=\"animation\">Animation</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"animation\"\n                            formControlName=\"default_animation\"\n                            placeholder=\"Playlist Default\"\n                        >\n                            <mat-option [value]=\"1\">Cut</mat-option>\n                            <mat-option [value]=\"2\">Cross Fade</mat-option>\n                            <mat-option [value]=\"3\">Slide Top</mat-option>\n                            <mat-option [value]=\"4\">Slide Left</mat-option>\n                            <mat-option [value]=\"5\">Slide Right</mat-option>\n                            <mat-option [value]=\"6\">Slide Bottom</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <label for=\"description\">Description</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                    class=\"min-h-32\"\n                ></textarea>\n            </mat-form-field>\n            <div class=\"flex space-x-4\">\n                <div class=\"flex-1\">\n                    <label for=\"valid-from\">Valid From</label>\n                    <a-date-field\n                        name=\"valid-from\"\n                        formControlName=\"valid_from\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex-1\">\n                    <label for=\"valid-until\">Valid Until</label>\n                    <a-date-field\n                        name=\"valid-until\"\n                        [from]=\"form.value.valid_from\"\n                        formControlName=\"valid_until\"\n                        [disabled]=\"!form.value.valid_from\"\n                    ></a-date-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"p-4 flex items-center justify-end space-x-2 border-t border-base-300\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"savePlaylist()\">\n                Save Playlist\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Playlist...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignagePlaylistModalComponent {\n    public loading = false;\n    public readonly playlist = this._data;\n    public readonly media = this._state.media;\n\n    public readonly search = new BehaviorSubject('');\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this.playlist.id || ''),\n        name: new FormControl(this.playlist.name || '', [Validators.required]),\n        description: new FormControl(this.playlist.description || ''),\n        default_animation: new FormControl<MediaAnimation>(\n            this.playlist.default_animation || MediaAnimation.Cut,\n        ),\n        orientation: new FormControl(\n            this.playlist.orientation || 'unspecified',\n        ),\n        enabled: new FormControl(this.playlist.enabled),\n        random: new FormControl(this.playlist.random),\n        default_duration: new FormControl(\n            Math.max(this.playlist.default_duration || 15 * 1000, 5000),\n        ),\n        valid_from: new FormControl(this.playlist.valid_from * 1000),\n        valid_until: new FormControl(this.playlist.valid_until * 1000),\n    });\n\n    @ViewChild('search_input')\n    public search_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: SignagePlaylist = {} as any,\n        private _state: SignageStateService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<SignagePlaylistModalComponent>,\n    ) {}\n\n    public async savePlaylist() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n        this.loading = true;\n        const form_value = this.form.getRawValue();\n        const result = await this._state\n            .savePlaylist({\n                ...form_value,\n                valid_from: getUnixTime(form_value.valid_from),\n                valid_until: getUnixTime(form_value.valid_until),\n            })\n            .catch((_) => {\n                notifyError('Error saving playlist');\n                this.loading = false;\n                throw _;\n            });\n        this._dialog_ref.close(result);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { notifySuccess } from '@placeos/common';\nimport { SignageMedia, updateSignageMedia } from '@placeos/ts-client';\nimport { MediaAnimation } from '@placeos/ts-client/dist/esm/signage/media.class';\nimport { addYears, endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'signage-media-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between border-b border-base-300\"\n        >\n            <h2 class=\"p-2 text-xl font-medium\">\n                {{ item.id ? 'Edit' : 'New' }} Media Item\n            </h2>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 max-w-[calc(100vw-2rem)] w-[32rem] max-h-[65vh] overflow-auto\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col\">\n                <button\n                    matRipple\n                    class=\"relative w-full h-48 mx-auto bg-base-300 rounded-xl overflow-hidden mb-4\"\n                    (click)=\"preview()\"\n                >\n                    <img\n                        class=\"h-full w-full object-contain object-center\"\n                        auth\n                        [source]=\"thumbnail || url\"\n                    />\n                    <div\n                        class=\"absolute top-2 left-2 px-2 py-1 rounded text-xs bg-base-400 capitalize\"\n                    >\n                        {{ media_type }}\n                    </div>\n                </button>\n                <label for=\"name\">Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        formControlName=\"name\"\n                        placeholder=\"Media Name\"\n                    />\n                    <mat-error>A name is required</mat-error>\n                </mat-form-field>\n                @if (media_type === 'video') {\n                    <div class=\"flex items-center space-x-4\">\n                        <label for=\"start-time\" class=\"w-auto min-w-0 m-0\"\n                            >Start Time</label\n                        >\n                        <div class=\"text-xs font-mono\">\n                            {{\n                                form.value.start_time / 1000\n                                    | mediaDuration: true\n                            }}\n                        </div>\n                    </div>\n                    <mat-slider\n                        min=\"0\"\n                        [max]=\"(item.video_length || 300000) - 1000\"\n                        step=\"100\"\n                    >\n                        <input\n                            name=\"start-time\"\n                            matSliderThumb\n                            formControlName=\"start_time\"\n                        />\n                    </mat-slider>\n                }\n                <div class=\"flex items-center space-x-4\">\n                    <label for=\"play-time\" class=\"w-auto min-w-0 m-0\">\n                        Play Time</label\n                    >\n                    <div class=\"text-xs font-mono\">\n                        @if (form.value.play_time) {\n                            {{\n                                form.value.play_time / 1000\n                                    | mediaDuration: true\n                            }}\n                        } @else {\n                            <span class=\"opacity-30\">\n                                Default ({{\n                                    item.video_length\n                                        ? (item.video_length / 1000\n                                          | mediaDuration)\n                                        : ''\n                                }})\n                            </span>\n                        }\n                    </div>\n                </div>\n                <mat-slider\n                    [min]=\"form.value.start_time\"\n                    [max]=\"item.video_length || 300000\"\n                    step=\"100\"\n                >\n                    <input\n                        name=\"play-time\"\n                        matSliderThumb\n                        formControlName=\"play_time\"\n                    />\n                </mat-slider>\n                <label for=\"animation\">Animation</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"animation\"\n                        formControlName=\"animation\"\n                        placeholder=\"Playlist Default\"\n                    >\n                        <mat-option [value]=\"0\">Playlist Default</mat-option>\n                        <mat-option [value]=\"1\">Cut</mat-option>\n                        <mat-option [value]=\"2\">Cross Fade</mat-option>\n                        <mat-option [value]=\"3\">Slide Top</mat-option>\n                        <mat-option [value]=\"4\">Slide Left</mat-option>\n                        <mat-option [value]=\"5\">Slide Right</mat-option>\n                        <mat-option [value]=\"6\">Slide Bottom</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Description\"\n                        formControlName=\"description\"\n                        class=\"min-h-32\"\n                    ></textarea>\n                </mat-form-field>\n                <div class=\"flex space-x-4\">\n                    <div class=\"flex-1\">\n                        <label for=\"valid-from\">Valid From</label>\n                        <a-date-field\n                            name=\"valid-from\"\n                            formControlName=\"valid_from\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex-1\">\n                        <label for=\"valid-until\">Valid Until</label>\n                        <a-date-field\n                            name=\"valid-until\"\n                            [from]=\"form.value.valid_from\"\n                            formControlName=\"valid_until\"\n                        ></a-date-field>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end p-4 border-t border-base-300\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"saveMedia()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-8 max-w-[calc(100vw-2rem)] min-h-64 w-[32rem] space-y-4\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving media item...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignageMediaModalComponent {\n    public loading = false;\n    public readonly item = this._data.media;\n    public readonly file = this._data.file;\n    public readonly thumbnail =\n        this._data.file_thumbnail || this._data.media.thumbnail_url;\n\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        description: new FormControl(''),\n        animation: new FormControl<MediaAnimation>(MediaAnimation.Default),\n        start_time: new FormControl(0),\n        play_time: new FormControl<number | null>(null),\n        valid_from: new FormControl(startOfDay(Date.now()).valueOf()),\n        valid_until: new FormControl(\n            addYears(endOfDay(Date.now()), 10).valueOf(),\n        ),\n    });\n\n    private _file_url: string;\n\n    public readonly preview = () =>\n        this._data.preview({\n            media_url: this.url,\n            media_type: this.media_type,\n            name: this.form.value.name,\n        });\n\n    public get media_type() {\n        if (!this.file) return this.item.media_type;\n        return (\n            (this.file.type.includes('video')\n                ? 'video'\n                : this.file.type.includes('image')\n                  ? 'image'\n                  : '') || this.item.media_type\n        );\n    }\n\n    public get url() {\n        if (this.item.id) return this.item.media_url;\n        if (this._file_url) return this._file_url;\n        this._file_url = URL.createObjectURL(this.file);\n        return this._file_url;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            media: SignageMedia;\n            file?: File;\n            file_metadata?: [boolean, number];\n            file_thumbnail?: string;\n            onAdd: (f, m) => Promise<SignageMedia>;\n            preview: (url) => void;\n        },\n        private _dialog_ref: MatDialogRef<SignageMediaModalComponent>,\n    ) {\n        this.form.patchValue({\n            ...this._data.media,\n            valid_from: this._data.media.valid_from * 1000,\n            valid_until: this._data.media.valid_until * 1000,\n        });\n        if (this._data.file) {\n            this.form.patchValue({\n                name: this._data.file.name,\n            });\n        }\n        if (this._data.file_metadata) {\n            (this.item as any).video_length = Math.floor(\n                this._data.file_metadata[1] * 1000,\n            );\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this._file_url) URL.revokeObjectURL(this._file_url);\n    }\n\n    public async saveMedia() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (!this.form.valid) return;\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const form_value = this.form.getRawValue();\n        const new_media = {\n            ...this.item,\n            ...form_value,\n            valid_from: getUnixTime(new Date(form_value.valid_from)),\n            valid_until: getUnixTime(form_value.valid_until),\n        };\n        const onError = (e) => {\n            this._dialog_ref.disableClose = false;\n            this.loading = false;\n            throw e;\n        };\n        if (this.item.id) {\n            await updateSignageMedia(this.item.id, new_media)\n                .toPromise()\n                .catch(onError);\n        } else {\n            await this._data.onAdd(this.file, new_media).catch(onError);\n        }\n        this._dialog_ref.disableClose = false;\n        this._dialog_ref.close();\n        notifySuccess('Successfully saved media item.');\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { addSystem, PlaceSystem, updateSystem } from '@placeos/ts-client';\n\n@Component({\n    selector: 'signage-display-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between border-b border-base-300 p-2\"\n        >\n            <h1 class=\"p-2 font-medium text-xl\">\n                {{ display.id ? 'Edit' : 'New' }} Display\n            </h1>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            class=\"p-4 flex flex-col w-[32rem] max-w-[calc(100vw-2rem)]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col\">\n                <label for=\"name\">Name<span required>*</span></label>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                        required\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Description\"\n                        formControlName=\"description\"\n                        class=\"min-h-32\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"orientation\">Orientation</label>\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\n                    <mat-select\n                        name=\"orientation\"\n                        formControlName=\"orientation\"\n                        placeholder=\"Unspecified\"\n                    >\n                        <mat-option value=\"unspecified\">\n                            Unspecified\n                        </mat-option>\n                        <mat-option value=\"landscape\">Landscape</mat-option>\n                        <mat-option value=\"portrait\">Portrait</mat-option>\n                        <mat-option value=\"square\">Square</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end p-4 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving display...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignageDisplayModalComponent {\n    public loading = false;\n    public readonly display = this._data.display;\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data.display?.id || ''),\n        name: new FormControl(this._data.display?.display_name || '', [\n            Validators.required,\n        ]),\n        description: new FormControl(this._data.display?.description || ''),\n        orientation: new FormControl(\n            this._data.display?.orientation || 'unspecified',\n        ),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { display?: PlaceSystem },\n        private _dialog_ref: MatDialogRef<SignageDisplayModalComponent>,\n        private _org: OrganisationService,\n    ) {}\n\n    public async save() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n        this.loading = true;\n        const form_value = this.form.getRawValue();\n        const new_display = new PlaceSystem({\n            ...form_value,\n            name: `SIGNAGE ${form_value.name}`,\n            display_name: form_value.name,\n            signage: true,\n            zones: unique(\n                [\n                    this._org.organisation.id,\n                    this._org.region?.id,\n                    this._org.building?.id,\n                    ...this.display.zones,\n                ].filter((_) => !!_),\n            ),\n        });\n        const method = this.display.id\n            ? updateSystem(this.display.id, new_display)\n            : addSystem(new_display);\n        const result = await method.toPromise();\n        this._dialog_ref.close(result);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    uploadFile,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    addSignageMedia,\n    addSignagePlaylist,\n    listSignagePlaylistMedia,\n    PlaceSystem,\n    querySignageMedia,\n    querySignagePlaylists,\n    querySystems,\n    queryZones,\n    removeSignageMedia,\n    removeSignagePlaylist,\n    removeSystem,\n    SignageMedia,\n    SignagePlaylist,\n    updateSignageMedia,\n    updateSignagePlaylist,\n    updateSignagePlaylistMedia,\n    updateSystem,\n} from '@placeos/ts-client';\nimport { Attachment } from '@placeos/users';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\nimport { SignageMediaModalComponent } from './signage-media-modal.component';\nimport { SignageDisplayModalComponent } from './signage-display-modal.component';\n\nfunction dataURLtoBlob(dataURL) {\n    // Split the data URL to get the mime type and the data\n    const [prefix, data] = dataURL.split(',');\n    const mimeType = prefix.split(':')[1].split(';')[0];\n\n    // Convert base64 to raw binary data\n    const byteString = atob(data);\n\n    // Create an ArrayBuffer and fill it with the binary data\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const uint8Array = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n        uint8Array[i] = byteString.charCodeAt(i);\n    }\n\n    // Create and return the Blob\n    return new Blob([arrayBuffer], { type: mimeType });\n}\n\nfunction dataURLtoFile(dataURL, filename) {\n    // Split the data URL to get the mime type and the data\n    const [prefix, data] = dataURL.split(',');\n    const mimeType = prefix.split(':')[1].split(';')[0];\n\n    // Convert base64 to raw binary data\n    const byteString = atob(data);\n\n    // Create an ArrayBuffer and fill it with the binary data\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const uint8Array = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < byteString.length; i++) {\n        uint8Array[i] = byteString.charCodeAt(i);\n    }\n\n    // Create and return the File\n    return new File([uint8Array], filename, { type: mimeType });\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SignageStateService extends AsyncHandler {\n    private _loading = new BehaviorSubject(false);\n    private _change = new BehaviorSubject(0);\n    private _active_upload = new BehaviorSubject<Attachment>(null);\n\n    public readonly loading = this._loading.asObservable();\n    public readonly has_changed = this._change.asObservable();\n\n    public readonly media: Observable<SignageMedia[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        debounceTime(300),\n        switchMap(([bld]) => querySignageMedia({ limit: 2500 } as any)),\n        map((_) => _.data.sort((a, b) => b.created_at - a.created_at)),\n        shareReplay(1),\n    );\n\n    public readonly playlists: Observable<SignagePlaylist[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        debounceTime(300),\n        switchMap(() => querySignagePlaylists({ limit: 500 } as any)),\n        map((_) => (_.data || []).sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1),\n    );\n\n    public readonly displays: Observable<PlaceSystem[]> = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([region, bld]) => !!bld?.id),\n        switchMap(([region, bld]) =>\n            querySystems({\n                zone_id:\n                    (this._settings.get('app.use_region') ? region?.id : '') ||\n                    bld?.id,\n                limit: 500,\n                signage: true,\n            }).pipe(\n                map((_) =>\n                    (_.data || [])\n                        .sort((a, b) =>\n                            (a.display_name || a.name).localeCompare(\n                                b.display_name || b.name,\n                            ),\n                        )\n                        .filter((_) => _.signage),\n                ),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    public readonly zones = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        switchMap(([bld]) =>\n            queryZones({\n                limit: 250,\n            } as any).pipe(catchError(() => of({ data: [] }))),\n        ),\n        map((_) =>\n            (_.data || []).sort((a, b) =>\n                (a.display_name || a.name).localeCompare(\n                    b.display_name || b.name,\n                ),\n            ),\n        ),\n    );\n\n    public changed() {\n        this._change.next(Date.now());\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public editPlaylist(playlist: SignagePlaylist = new SignagePlaylist({})) {\n        return new Promise<SignagePlaylist | null>((resolve) => {\n            const ref = this._dialog.open(SignagePlaylistModalComponent, {\n                data: playlist,\n            });\n            ref.afterClosed().subscribe((result) => {\n                this.timeout('changed', () => this._change.next(Date.now()));\n                resolve(result);\n            });\n        });\n    }\n\n    public editMedia(\n        media: SignageMedia = new SignageMedia({}),\n        file?: File,\n        playlist_id: string = '',\n    ) {\n        return new Promise<SignagePlaylist | null>(async (resolve) => {\n            const ref = this._dialog.open(SignageMediaModalComponent, {\n                data: {\n                    media,\n                    file,\n                    file_metadata: file\n                        ? await this._getMediaMetadata(file)\n                        : [media.orientation === 'landscape', 0],\n                    file_thumbnail: file\n                        ? await this._generateThumbnail(file, 1024, 720)\n                        : '',\n                    playlist_id,\n                    onAdd: (f, m) => this.addMedia(f, m),\n                    preview: (item) => this.previewMedia(item),\n                },\n            });\n            ref.afterClosed().subscribe((result) => {\n                this.timeout('changed', () => this._change.next(Date.now()));\n                resolve(result);\n            });\n        });\n    }\n\n    public async editDisplay(display: PlaceSystem = new PlaceSystem({})) {\n        console.log('Edit Display:', display);\n        const ref = this._dialog.open(SignageDisplayModalComponent, {\n            data: { display },\n        });\n        const result = await ref.afterClosed().toPromise();\n        this.timeout('changed', () => this._change.next(Date.now()));\n        return result;\n    }\n\n    public async removeDisplay(display: PlaceSystem) {\n        const result = await openConfirmModal(\n            {\n                title: `Remove Display`,\n                content: `\n                Are you sure you wish to remove the display \"<strong>${display.display_name}</strong>\"?\n                `,\n                icon: { content: 'delete' },\n            },\n            this._dialog,\n        );\n        if (result.reason !== 'done') return;\n        result.loading('Removing display...');\n        if (display.map_id || display.email || display.module_list.length > 0) {\n            await updateSystem(display.id, {\n                signage: false,\n            } as any).toPromise();\n        } else {\n            await removeSystem(display.id).toPromise();\n        }\n        this._change.next(Date.now());\n        result.close();\n    }\n\n    public async savePlaylist(playlist: Partial<SignagePlaylist>) {\n        const call = playlist.id\n            ? updateSignagePlaylist(playlist.id, playlist)\n            : addSignagePlaylist(playlist);\n        const new_playlist = await call.toPromise();\n        notifySuccess(`Successfully saved playlist.`);\n        this._change.next(Date.now());\n    }\n\n    public async removePlaylist(playlist: SignagePlaylist) {\n        if (!playlist?.id) return;\n        const result = await openConfirmModal(\n            {\n                title: `Remove Playlist`,\n                content: `\n            Are you sure you wish to remove the playlist \"<strong>${playlist.name}</strong>\"?<br/><br/>`,\n                icon: { content: 'delete' },\n            },\n            this._dialog,\n        );\n        if (result.reason !== 'done') return;\n        await removeSignagePlaylist(playlist.id).toPromise();\n        notifySuccess(`Successfully removed playlist.`);\n    }\n\n    public async updatePlaylistMedia(playlist_id: string, list: string[]) {\n        await updateSignagePlaylistMedia(playlist_id, list).toPromise();\n        notifySuccess(`Successfully updated playlist media.`);\n    }\n\n    public previewMedia(item: SignageMedia) {\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: {\n                url: item.media_url,\n                type: item.media_type,\n                name: item.name,\n                save: false,\n            },\n        });\n    }\n\n    public previewFileFromInput(event, playlist_id: string = '') {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const file = files[0];\n        if (\n            file &&\n            (file.type.includes('image') || file.type.includes('video'))\n        ) {\n            this.editMedia(undefined, file, playlist_id);\n        } else {\n            notifyError('Invalid file type.');\n        }\n    }\n\n    public previewFileMedia(media: File, playlist_id: string = '') {\n        const url = URL.createObjectURL(media);\n        const type = media.type.includes('image') ? 'image' : 'video';\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name: media.name, save: true, file: media },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n        ref.componentInstance.save.subscribe(async () => {\n            ref.componentInstance.loading = 'Saving...';\n            const new_media = await this.addMedia(media).catch((e) => {\n                notifyError('Error saving media.');\n                ref.componentInstance.loading = '';\n                throw e;\n            });\n            if (playlist_id && new_media.id) {\n                const media_list =\n                    await listSignagePlaylistMedia(playlist_id).toPromise();\n                const new_media_list = [...media_list.items, new_media.id];\n                await updateSignagePlaylistMedia(\n                    playlist_id,\n                    new_media_list,\n                ).toPromise();\n            }\n            ref.close();\n        });\n    }\n\n    public async addMedia(\n        file: File,\n        media_item: SignageMedia = new SignageMedia({}),\n    ) {\n        const upload = (file) =>\n            new Promise<{ id: string; link: string }>((resolve, reject) => {\n                let state = null;\n                let resolved = false;\n                uploadFile(file).subscribe(\n                    (s) => {\n                        state = s;\n                        if (s.link) {\n                            resolved = true;\n                            resolve({ id: s.upload.id, link: s.link });\n                        }\n                    },\n                    reject,\n                    () => (!resolved ? resolve(state) : null),\n                );\n            });\n        const [is_landscape, _] = await this._getMediaMetadata(file);\n        const thumbnail_image = await this._generateThumbnail(\n            file,\n            1280,\n            720,\n        ).catch((_) => null);\n        const media = await upload(file);\n        let thumbnail = null;\n        if (thumbnail_image) {\n            thumbnail = await upload(\n                dataURLtoFile(thumbnail_image, `thumb+${file.name}`),\n            );\n        }\n        const data = {\n            ...new SignageMedia({\n                ...media_item,\n                name: media_item.name || file.name,\n                media_id: media.id,\n                media_uri: media.link,\n                media_type: file.type.includes('image') ? 'image' : 'video',\n                orientation: is_landscape ? 'landscape' : 'portrait',\n                thumbnail_id: thumbnail.id,\n            }),\n        };\n        for (const key in data) {\n            if (!data[key]) delete data[key];\n        }\n        const result = await addSignageMedia(data).toPromise();\n        this._active_upload.next(null);\n        this._change.next(Date.now());\n        return result;\n    }\n\n    public async updateMedia(item: SignageMedia) {\n        if (!item?.id) return;\n        await updateSignageMedia(item.id, item).toPromise();\n    }\n\n    public async removeMedia(item: SignageMedia) {\n        if (!item?.id) return;\n        const result = await openConfirmModal(\n            {\n                title: `Remove Media item`,\n                content: `\n                Are you sure you wish to remove the media item \"<strong>${item.name}</strong>\"?<br/><br/>\n                <i class=\"text-sm\">The item will be removed from all playlists and the files deleted from storage.</i>\n                `,\n                icon: { content: 'delete' },\n            },\n            this._dialog,\n        );\n        if (result.reason !== 'done') return;\n        result.loading('Removing media...');\n        await removeSignageMedia(item.id).toPromise();\n        this._change.next(Date.now());\n        result.close();\n    }\n\n    private _getMediaMetadata(file: File) {\n        return new Promise<[boolean, number]>((resolve) => {\n            const url = URL.createObjectURL(file);\n            // file is loaded\n            if (file.type.includes('video')) {\n                let video = document.createElement('video');\n                video.src = url.toString();\n                video.addEventListener('loadedmetadata', () => {\n                    const { videoWidth, videoHeight } = video;\n                    resolve([videoWidth > videoHeight, video.duration]);\n                });\n                video.load();\n            } else {\n                let img = new Image();\n                img.onload = () => resolve([img.width > img.height, 0]);\n                img.src = url.toString(); // is the data URL because called with readAsDataURL\n            }\n        });\n    }\n\n    private async _generateThumbnail(\n        file: File,\n        max_width: number,\n        max_height: number,\n    ) {\n        console.log('File:', file, max_width, max_height);\n        if (file.type.includes('video')) {\n            return this._generateVideoThumbnail(file, max_width, max_height);\n        } else {\n            return this._generateImageThumbnail(file, max_width, max_height);\n        }\n    }\n\n    private _generateImageThumbnail(\n        file: File,\n        max_width: number,\n        max_height: number,\n    ) {\n        return new Promise<string>((resolve, reject) => {\n            const img = new Image();\n            img.src = URL.createObjectURL(file);\n            console.log('Image:', img.src);\n\n            img.onload = () => {\n                const image = this._generateThumbnailFromResource(\n                    img,\n                    img.width,\n                    img.height,\n                    max_width,\n                    max_height,\n                );\n                URL.revokeObjectURL(img.src);\n                resolve(image);\n            };\n\n            img.onerror = reject;\n        });\n    }\n\n    private _generateVideoThumbnail(\n        file: File,\n        max_width: number,\n        max_height: number,\n    ) {\n        return new Promise<string>((resolve, reject) => {\n            // Create video element\n            const video = document.createElement('video');\n            video.autoplay = true;\n            video.muted = true;\n            video.src = URL.createObjectURL(file);\n\n            video.onloadeddata = () => {\n                const image = this._generateThumbnailFromResource(\n                    video,\n                    video.videoWidth,\n                    video.videoHeight,\n                    max_width,\n                    max_height,\n                );\n\n                // Clean up\n                URL.revokeObjectURL(video.src);\n                resolve(image);\n            };\n\n            video.onerror = reject;\n        });\n    }\n\n    private _generateThumbnailFromResource(\n        data,\n        source_width,\n        source_height,\n        max_width: number,\n        max_height: number,\n    ) {\n        // Create canvas element\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        // Calculate thumbnail dimensions\n        let thumbnailWidth = source_width;\n        let thumbnailHeight = source_height;\n        const aspectRatio = thumbnailWidth / thumbnailHeight;\n\n        if (thumbnailWidth > max_width) {\n            thumbnailWidth = max_height;\n            thumbnailHeight = thumbnailWidth / aspectRatio;\n        }\n\n        if (thumbnailHeight > max_height) {\n            thumbnailHeight = max_width;\n            thumbnailWidth = thumbnailHeight * aspectRatio;\n        }\n\n        canvas.width = thumbnailWidth;\n        canvas.height = thumbnailHeight;\n\n        // Draw video frame on canvas\n        ctx.drawImage(data, 0, 0, thumbnailWidth, thumbnailHeight);\n\n        // Convert canvas to data URL\n        const dataURL = canvas.toDataURL('image/jpeg');\n\n        return dataURL;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-staff]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"p-8 h-28 flex items-center justify-between\">\n                    <h2 class=\"text-2xl font-medium\">\n                        Digital Signage Management\n                    </h2>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-40\"\n                        *ngIf=\"\n                            active_link === 'Media' ||\n                            active_link === 'Displays'\n                        \"\n                        (click)=\"newItem(active_link)\"\n                    >\n                        Add {{ singular(active_link) }}\n                    </button>\n                </div>\n                <div class=\"px-8\">\n                    <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n                        @for (link of links; track link) {\n                            <a\n                                mat-tab-link\n                                [routerLink]=\"'/signage/' + (link | lowercase)\"\n                                (click)=\"active_link = link\"\n                                [active]=\"active_link == link\"\n                            >\n                                {{ link }}\n                            </a>\n                        }\n                    </nav>\n                </div>\n                <mat-tab-nav-panel\n                    class=\"flex-1 h-1/2 overflow-auto px-8 py-4\"\n                    #tabPanel\n                >\n                    <router-outlet></router-outlet>\n                </mat-tab-nav-panel>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class SignageComponent extends AsyncHandler implements OnInit {\n    public readonly loading = this._state.loading;\n    public links = ['Media', 'Displays', 'Zones'];\n    public active_link = this.links[0];\n\n    public readonly previewFile = (event) =>\n        this._state.previewFileFromInput(event);\n\n    public singular(name: string) {\n        if (name === 'Media') return 'Playlist';\n        if (name === 'Playlists') return 'Playlist';\n        if (name === 'Displays') return 'Display';\n        return '';\n    }\n\n    public async newItem(name: string) {\n        let result = null;\n        switch (name) {\n            case 'Media':\n            case 'Playlists':\n                result = await this._state.editPlaylist();\n                if (result) {\n                    this._router.navigate(['/signage/media'], {\n                        queryParams: { playlist: result.id },\n                    });\n                }\n                break;\n            case 'Displays':\n                result = await this._state.editDisplay();\n                if (!result) return;\n                this._router.navigate(['/signage/displays'], {\n                    queryParams: { display: result.id },\n                });\n                break;\n        }\n    }\n\n    constructor(\n        private _state: SignageStateService,\n        private _router: Router,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._router.events.subscribe((event) => {\n                if (event instanceof NavigationEnd) {\n                    this.active_link = this.links.find((_) =>\n                        this._router.url.includes(_.toLowerCase()),\n                    );\n                }\n            }),\n        );\n        this.active_link = this.links.find((_) =>\n            this._router.url.includes(_.toLowerCase()),\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <!-- <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.only_onsite\"\n                (ngModelChange)=\"setFilters({ only_onsite: $event })\"\n                ><div class=\"text-xs\">Onsite Only</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar> -->\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class SignageTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    // public readonly filters = this._state.filters;\n    // /** Set filtered date */\n    // public readonly setDate = (date) => this._state.setFilters({ date });\n    // /** Set filtered date */\n    // public readonly setFilters = (filters) => this._state.setFilters(filters);\n    // /** Set filter string */\n    // public readonly setSearch = (str) => this._state.setSearchString(str);\n    // /** Update active zones for desks */\n    // public readonly updateZones = (zones) => {\n    //     this._router.navigate([], {\n    //         relativeTo: this._route,\n    //         queryParams: { zone_ids: zones.join(',') },\n    //     });\n    //     this._state.setFilters({ zones });\n    // };\n\n    constructor(\n        private _state: SignageStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                // this.updateZones(this.zones);\n            })\n        );\n        // this.setSearch('');\n    }\n}\n","import { Component, Input, SimpleChanges, ViewChild } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SignageStateService } from './signage-state.service';\nimport { SignageMedia } from '@placeos/ts-client';\nimport { CdkDropList } from '@angular/cdk/drag-drop';\nimport { getUnixTime, startOfMinute } from 'date-fns';\n\n@Component({\n    selector: 'signage-media-list',\n    template: `\n        <div class=\"p-4\">\n            <h3 class=\"text-xl font-medium text-center mb-4\">Media</h3>\n            <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n                <input\n                    matInput\n                    placeholder=\"Search...\"\n                    [ngModel]=\"search.getValue()\"\n                    (ngModelChange)=\"search.next($event)\"\n                />\n            </mat-form-field>\n        </div>\n        @if ((media | async)?.length > 0) {\n            <div\n                class=\"grid w-full gap-4 md:grid-cols-2 lg:grid-cols-3 p-4\"\n                cdkDropList\n                id=\"media-list\"\n                [cdkDropListData]=\"media | async\"\n                [cdkDropListConnectedTo]=\"playlist_ids\"\n                (cdkDropListDropped)=\"drop($event)\"\n            >\n                @for (media of media | async; track media.id) {\n                    <div\n                        class=\"relative bg-base-100 rounded-lg flex flex-col items-center justify-center p-3 hover:opacity-80 border border-base-300\"\n                        cdkDrag\n                    >\n                        @if (media.valid_from && now < media.valid_from) {\n                            <div\n                                class=\"absolute inset-0 z-0 bg-warning opacity-10 rounded-lg\"\n                            ></div>\n                        } @else if (\n                            media.valid_until && now > media.valid_until\n                        ) {\n                            <div\n                                class=\"absolute inset-0 z-0 bg-error opacity-10 rounded-lg\"\n                            ></div>\n                        }\n                        <div\n                            class=\"min-h-10 min-w-10 border-4 rounded-2xl border-base-400 bg-base-300 border-dashed flex items-center justify-center\"\n                            *cdkDragPlaceholder\n                        >\n                            <app-icon class=\"text-2xl text-base-100\">\n                                add\n                            </app-icon>\n                        </div>\n                        <div\n                            preview\n                            class=\"relative w-full h-36 bg-base-200 rounded-lg overflow-hidden\"\n                        >\n                            <img\n                                auth\n                                [source]=\"media.thumbnail_url\"\n                                *ngIf=\"media.thumbnail_url\"\n                                class=\"w-full h-full object-contain rounded-lg\"\n                            />\n                            <div\n                                class=\"absolute top-1 left-1 px-2 py-1 text-xs rounded-lg capitalize font-mono\"\n                                [class.bg-info]=\"media.media_type === 'video'\"\n                                [class.text-info-content]=\"\n                                    media.media_type === 'video'\n                                \"\n                                [class.bg-warning]=\"\n                                    media.media_type === 'image'\n                                \"\n                                [class.text-warning-content]=\"\n                                    media.media_type === 'image'\n                                \"\n                            >\n                                {{ media.media_type }}\n                            </div>\n                            <div\n                                class=\"absolute bottom-1 right-1 px-2 py-1 text-xs rounded-lg bg-info text-info-content capitalize font-mono\"\n                                *ngIf=\"media.play_time\"\n                            >\n                                {{ media.play_time / 1000 | mediaDuration }}\n                            </div>\n                        </div>\n                        <div\n                            class=\"flex items-center justify-between w-full relative top-1\"\n                        >\n                            <div\n                                class=\"text-base-content truncate flex-1 w-1/2\"\n                                [matTooltip]=\"media.name\"\n                            >\n                                {{ media.name }}\n                            </div>\n                            <button\n                                icon\n                                matRipple\n                                [matMenuTriggerFor]=\"menu\"\n                                aria-label=\"Media Actions\"\n                            >\n                                <app-icon>more_vert</app-icon>\n                            </button>\n                            <mat-menu #menu=\"matMenu\">\n                                <button mat-menu-item (click)=\"editItem(media)\">\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon class=\"text-2xl\"\n                                            >edit</app-icon\n                                        >\n                                        <div class=\"pr-2\">Edit Media Item</div>\n                                    </div>\n                                </button>\n                                <button\n                                    mat-menu-item\n                                    (click)=\"previewItem(media)\"\n                                >\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon class=\"text-2xl\"\n                                            >visibility</app-icon\n                                        >\n                                        <div class=\"pr-2\">\n                                            Preview Media Item\n                                        </div>\n                                    </div>\n                                </button>\n                                <button\n                                    mat-menu-item\n                                    (click)=\"removeItem(media)\"\n                                >\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon class=\"text-2xl text-error\">\n                                            delete\n                                        </app-icon>\n                                        <div class=\"pr-2\">\n                                            Remove Media Item\n                                        </div>\n                                    </div>\n                                </button>\n                            </mat-menu>\n                        </div>\n                    </div>\n                }\n            </div>\n        } @else {\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-2 opacity-30 mx-auto flex-1\"\n            >\n                <app-icon class=\"text-6xl\">hide_image</app-icon>\n                <p>No media found.</p>\n            </div>\n        }\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class SignageMediaListComponent {\n    @Input() public playlist_count = 0;\n    public readonly search = new BehaviorSubject<string>('');\n    public readonly media = combineLatest([\n        this.search,\n        this._state.media,\n    ]).pipe(\n        map(([search, media]) =>\n            media.filter((_) =>\n                _.name.toLowerCase().includes(search.toLowerCase()),\n            ),\n        ),\n    );\n\n    public playlist_ids: string[] = [];\n\n    public get now() {\n        return getUnixTime(startOfMinute(Date.now()));\n    }\n\n    public readonly previewItem = (item: SignageMedia) =>\n        this._state.previewMedia(item);\n\n    public readonly editItem = (item: SignageMedia) =>\n        this._state.editMedia(item);\n\n    public readonly removeItem = async (item: SignageMedia) =>\n        this._state.removeMedia(item);\n\n    constructor(private _state: SignageStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.playlist_count) {\n            this.playlist_ids = new Array(this.playlist_count)\n                .fill(0)\n                .map((_, idx) => `playlist-${idx}`);\n        }\n    }\n\n    public drop(event) {}\n}\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { SignageStateService } from './signage-state.service';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport {\n    listSignagePlaylistMedia,\n    MediaAnimation,\n    SignageMedia,\n    SignagePlaylist,\n} from '@placeos/ts-client';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Router } from '@angular/router';\nimport { getUnixTime, startOfMinute } from 'date-fns';\n\n@Component({\n    selector: 'signage-playlist-media-list',\n    template: `\n        <div class=\"flex flex-col space-y-4 relative p-4 h-full w-full\">\n            <h3 class=\"text-xl font-medium text-center\">\n                Playlist - {{ (selected_playlist | async)?.name }}\n            </h3>\n            <button\n                icon\n                matRipple\n                [matMenuTriggerFor]=\"menu\"\n                class=\"absolute top-2 right-2 !m-0\"\n            >\n                <app-icon>more_vert</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"editPlaylist()\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">edit</app-icon>\n                        <div class=\"pr-2\">Edit Playlist</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"removePlaylist()\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div class=\"pr-2\">Remove Playlist</div>\n                    </div>\n                </button>\n            </mat-menu>\n            <div details class=\"flex items-center flex-wrap\">\n                <div\n                    class=\"ml-2 text-xs px-2 py-1 m-1 rounded\"\n                    [class.bg-success]=\"(selected_playlist | async)?.enabled\"\n                    [class.text-success-content]=\"\n                        (selected_playlist | async)?.enabled\n                    \"\n                    [class.bg-error]=\"!(selected_playlist | async)?.enabled\"\n                    [class.text-error-content]=\"\n                        !(selected_playlist | async)?.enabled\n                    \"\n                >\n                    {{\n                        (selected_playlist | async)?.enabled\n                            ? 'Enabled'\n                            : 'Disabled'\n                    }}\n                </div>\n                <div\n                    class=\"ml-2 text-xs px-2 py-1 m-1 rounded bg-secondary text-secondary-content\"\n                    *ngIf=\"(selected_playlist | async)?.random\"\n                >\n                    Shuffle ON\n                </div>\n                <div\n                    class=\"text-xs px-2 py-1 m-1 \"\n                    matTooltip=\"Default Transition Animation\"\n                >\n                    Animation:\n                    <span\n                        class=\"ml-1 uppercase bg-base-200 px-2 py-1 rounded\"\n                        >{{\n                            animation_name(\n                                (selected_playlist | async)?.default_animation\n                            )\n                        }}</span\n                    >\n                </div>\n                <div\n                    class=\"text-xs px-2 py-1 m-1\"\n                    matTooltip=\"Default Playback Duration\"\n                >\n                    Duration:\n                    <span\n                        class=\"ml-1 font-mono bg-base-200 px-2 py-1 rounded\"\n                        >{{\n                            (selected_playlist | async)?.default_duration / 1000\n                                | mediaDuration\n                        }}</span\n                    >\n                </div>\n                <div\n                    class=\"text-xs px-2 py-1 m-1\"\n                    matTooltip=\"Prefered Orientation\"\n                >\n                    Orientation:\n                    <span\n                        class=\"ml-1 uppercase bg-base-200 px-2 py-1 rounded\"\n                        >{{ (selected_playlist | async)?.orientation }}</span\n                    >\n                </div>\n            </div>\n            @if ((media | async).length > 0) {\n                <div\n                    cdkDropList\n                    class=\"flex-1 h-1/2 overflow-auto flex flex-col space-y-2\"\n                    id=\"playlist-list\"\n                    [cdkDropListData]=\"media | async\"\n                    [cdkDropListConnectedTo]=\"playlist_ids\"\n                    (cdkDropListDropped)=\"drop($event)\"\n                >\n                    <ng-container *ngFor=\"let item of media | async\">\n                        <div\n                            cdkDrag\n                            class=\"relative w-full bg-base-100 h-20 rounded-lg flex items-center p-2 space-x-2 border border-base-300\"\n                        >\n                            @if (item.valid_from && now < item.valid_from) {\n                                <div\n                                    class=\"absolute inset-0 z-0 bg-warning opacity-10 rounded-lg\"\n                                ></div>\n                            } @else if (\n                                item.valid_until && now > item.valid_until\n                            ) {\n                                <div\n                                    class=\"absolute inset-0 z-0 bg-error opacity-10 rounded-lg\"\n                                ></div>\n                            }\n                            <div\n                                class=\"min-h-10 min-w-10 border-4 rounded-2xl border-base-400 bg-base-300 border-dashed flex items-center justify-center\"\n                                *cdkDragPlaceholder\n                            >\n                                <app-icon class=\"text-2xl text-base-100\">\n                                    add\n                                </app-icon>\n                            </div>\n                            <button\n                                matRipple\n                                cdkDragHandle\n                                class=\"flex items-center justify-center w-6 h-full rounded hover:bg-base-200\"\n                                matTooltip=\"Drag to reorder\"\n                            >\n                                <app-icon>drag_handle</app-icon>\n                            </button>\n                            <div\n                                preview\n                                class=\"w-[4.5rem] h-16 bg-base-200 rounded-lg overflow-hidden\"\n                            >\n                                <img\n                                    auth\n                                    [source]=\"item.thumbnail_url\"\n                                    class=\"w-full h-full object-contain\"\n                                />\n                            </div>\n                            <div\n                                class=\"text-base-content truncate flex-1 w-1/2\"\n                            >\n                                {{ item.name }}\n                            </div>\n                            <button\n                                icon\n                                matRipple\n                                aria-label=\"Media Actions\"\n                                [matMenuTriggerFor]=\"menu\"\n                            >\n                                <app-icon>more_vert</app-icon>\n                            </button>\n                            <mat-menu #menu=\"matMenu\">\n                                <button mat-menu-item (click)=\"editItem(item)\">\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon class=\"text-2xl\">\n                                            edit\n                                        </app-icon>\n                                        <div class=\"pr-2\">Edit Media Item</div>\n                                    </div>\n                                </button>\n                                <button\n                                    mat-menu-item\n                                    (click)=\"previewItem(item)\"\n                                >\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon class=\"text-2xl\">\n                                            visibility\n                                        </app-icon>\n                                        <div class=\"pr-2\">\n                                            Preview Media Item\n                                        </div>\n                                    </div>\n                                </button>\n                                <button\n                                    mat-menu-item\n                                    (click)=\"removeItem(item)\"\n                                >\n                                    <div class=\"flex items-center space-x-2\">\n                                        <app-icon class=\"text-2xl text-error\">\n                                            delete\n                                        </app-icon>\n                                        <div class=\"pr-2\">\n                                            Remove Media Item\n                                        </div>\n                                    </div>\n                                </button>\n                            </mat-menu>\n                        </div>\n                    </ng-container>\n                </div>\n            } @else {\n                <div\n                    class=\"flex flex-col items-center justify-center p-8 space-y-2 opacity-30 mx-auto flex-1\"\n                >\n                    <app-icon class=\"text-6xl\">hide_image</app-icon>\n                    <p>No media in playlist.</p>\n                </div>\n            }\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class SignagePlaylistMediaListComponent {\n    @Input() public playlist = '';\n    @Input() public playlist_count = 0;\n\n    public playlist_ids: string[] = [];\n\n    private _playlist = new BehaviorSubject<string>('');\n\n    public readonly editPlaylist = async () => {\n        const playlist = await this.selected_playlist.pipe(take(1)).toPromise();\n        this._state.editPlaylist(playlist);\n    };\n\n    public readonly removeItem = async (item: SignageMedia) => {\n        const playlist = await this._playlist_media.pipe(take(1)).toPromise();\n        const list = playlist.items.filter((_) => _ !== item.id);\n        await this._state.updatePlaylistMedia(this.playlist, list);\n        this._playlist.next(this.playlist);\n    };\n\n    public readonly previewItem = (item: SignageMedia) =>\n        this._state.previewMedia(item);\n\n    public readonly editItem = (item: SignageMedia) =>\n        this._state.editMedia(item);\n\n    public readonly removePlaylist = async () =>\n        this._state.removePlaylist(\n            await this.selected_playlist.pipe(take(1)).toPromise(),\n        );\n\n    public readonly selected_playlist = combineLatest([\n        this._playlist,\n        this._state.playlists,\n    ]).pipe(\n        map(([playlist, list]) => {\n            const item = list.find((_) => _.id === playlist);\n            if (!item) this._router.navigate(['/signage/media', {}]);\n            return item;\n        }),\n    );\n\n    private _playlist_media = this._playlist.pipe(\n        filter((playlist) => !!playlist),\n        debounceTime(300),\n        switchMap((playlist) =>\n            listSignagePlaylistMedia(playlist).pipe(\n                catchError(() => of({ id: '', items: [] })),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    public readonly media = combineLatest([\n        this._playlist_media,\n        this._state.media,\n    ]).pipe(\n        map(([playlist, media]) =>\n            playlist.items\n                .map((_) => media.find((m) => m.id === _))\n                .filter((_) => _),\n        ),\n        startWith([]),\n    );\n\n    public get now() {\n        return getUnixTime(startOfMinute(Date.now()));\n    }\n\n    constructor(\n        private _state: SignageStateService,\n        private _router: Router,\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.playlist) {\n            this._playlist.next(this.playlist);\n        }\n        if (changes.playlist_count) {\n            this.playlist_ids = new Array(this.playlist_count)\n                .fill(0)\n                .map((_, idx) => `playlist-${idx}`);\n        }\n    }\n\n    public animation_name(value: MediaAnimation) {\n        switch (value) {\n            case MediaAnimation.Cut:\n                return 'Cut';\n            case MediaAnimation.CrossFade:\n                return 'Cross Fade';\n            case MediaAnimation.SlideBottom:\n                return 'Slide Bottom';\n            case MediaAnimation.SlideLeft:\n                return 'Slide Left';\n            case MediaAnimation.SlideRight:\n                return 'Slide Right';\n            case MediaAnimation.SlideTop:\n                return 'Slide Top';\n        }\n        return 'Default';\n    }\n\n    public async drop(event: CdkDragDrop<SignageMedia[]>) {\n        if (event.previousIndex === event.currentIndex) return;\n        const id = await this._playlist.pipe(take(1)).toPromise();\n        const playlist = await this._playlist_media.pipe(take(1)).toPromise();\n        if (!id && playlist) return;\n        const list = [...playlist.items];\n        moveItemInArray(list, event.previousIndex, event.currentIndex);\n        await this._state.updatePlaylistMedia(id, list);\n        this._playlist.next(this.playlist);\n    }\n}\n","import { Component, ViewChild } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SignageMediaListComponent } from './signage-media-list.component';\nimport { listSignagePlaylistMedia, SignagePlaylist } from '@placeos/ts-client';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\n\n@Component({\n    selector: 'signage-media',\n    template: `\n        <div class=\"relative h-full w-full overflow-visible flex space-x-4\">\n            <div\n                sidebar\n                class=\"w-64 h-full flex flex-col space-y-4 py-4 overflow-auto\"\n            >\n                <h3 class=\"text-xl font-medium text-center\">Playlists</h3>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <input\n                        matInput\n                        placeholder=\"Search...\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                    />\n                </mat-form-field>\n                <a\n                    matRipple\n                    class=\"w-full px-6 rounded-3xl min-h-12 flex items-center hover:bg-base-200\"\n                    [class.!bg-secondary]=\"!selected_playlist\"\n                    [class.text-secondary-content]=\"!selected_playlist\"\n                    [routerLink]=\"[]\"\n                    [queryParams]=\"{ playlist: '' }\"\n                >\n                    All Media\n                </a>\n                <hr class=\"w-full\" />\n                @if ((playlists | async)?.length > 0) {\n                    @for (playlist of playlists | async; track playlist.id) {\n                        <a\n                            matRipple\n                            class=\"w-full px-6 rounded-3xl h-12 min-h-12 flex items-center hover:bg-base-200\"\n                            [class.!bg-secondary]=\"\n                                selected_playlist === playlist.id\n                            \"\n                            [class.text-secondary-content]=\"\n                                selected_playlist === playlist.id\n                            \"\n                            [routerLink]=\"[]\"\n                            [queryParams]=\"{ playlist: playlist.id }\"\n                            cdkDropList\n                            [id]=\"'playlist-' + $index\"\n                            [cdkDropListConnectedTo]=\"[\n                                'media-list',\n                                'playlist-list',\n                            ]\"\n                            (cdkDropListDropped)=\"\n                                selected_playlist === playlist.id\n                                    ? ''\n                                    : drop(playlist, $event)\n                            \"\n                        >\n                            <div class=\"flex-1\">\n                                {{ playlist.name }}\n                            </div>\n                        </a>\n                    }\n                } @else {\n                    <div\n                        class=\"flex flex-col items-center justify-center p-8 space-y-2 opacity-30\"\n                    >\n                        <app-icon class=\"text-6xl\">hide_image</app-icon>\n                        <p class=\"text-center\">\n                            {{\n                                search.getValue()\n                                    ? 'No matching playlists found'\n                                    : 'No playlists'\n                            }}\n                        </p>\n                    </div>\n                    <button\n                        *ngIf=\"!search.getValue()\"\n                        btn\n                        matRipple\n                        class=\"inverse\"\n                        (click)=\"addPlaylist()\"\n                    >\n                        <div class=\"flex items-center justify-center w-full\">\n                            <app-icon class=\"text-2xl\">add</app-icon>\n                            <span class=\"ml-2 mr-4\">Add Playlist</span>\n                        </div>\n                    </button>\n                }\n            </div>\n            <div\n                class=\"relative flex-1 w-1/2 h-full overflow-hidden rounded-lg border border-base-300 shadow\"\n                (dragover)=\"onEnter($event)\"\n                (dragenter)=\"onEnter($event)\"\n                (window:drop)=\"hideOverlay($event)\"\n            >\n                <div class=\"h-full w-full overflow-auto\">\n                    <signage-media-list\n                        *ngIf=\"!selected_playlist\"\n                        [playlist_count]=\"(playlists | async)?.length\"\n                    ></signage-media-list>\n                    <signage-playlist-media-list\n                        *ngIf=\"selected_playlist\"\n                        [playlist]=\"selected_playlist\"\n                        [playlist_count]=\"(playlists | async)?.length\"\n                    ></signage-playlist-media-list>\n                </div>\n                <div\n                    class=\"absolute inset-0\"\n                    *ngIf=\"show_dropzone\"\n                    (dragleave)=\"hideOverlay($event)\"\n                    (drop)=\"previewFile($event)\"\n                >\n                    <div\n                        class=\"absolute inset-0 bg-base-content opacity-60\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-4 border-4 border-dashed border-base-300 flex flex-col items-center justify-center rounded-2xl text-base-100 space-y-4\"\n                    >\n                        <app-icon class=\"text-6xl\">cloud_upload</app-icon>\n                        <p>Drop Media to upload</p>\n                    </div>\n                    <input\n                        type=\"file\"\n                        (change)=\"previewFile($event)\"\n                        class=\"absolute inset-0 opacity-0\"\n                    />\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-height: 100%;\n            }\n        `,\n    ],\n})\nexport class SignageMediaComponent extends AsyncHandler {\n    public readonly search = new BehaviorSubject<string>('');\n    public readonly loading = this._state.loading;\n    public readonly playlists = combineLatest([\n        this.search,\n        this._state.playlists,\n    ]).pipe(\n        map(([search, list]) =>\n            list.filter((_) =>\n                _.name.toLowerCase().includes(search.toLowerCase()),\n            ),\n        ),\n    );\n    public selected_playlist = '';\n    public show_dropzone = false;\n\n    public readonly addPlaylist = async () => {\n        const result = await this._state.editPlaylist();\n        if (result) {\n            this._router.navigate([\n                '/signage/media',\n                { query: { playlist: result.id } },\n            ]);\n        }\n    };\n    public readonly previewMedia = (item) => this._state.previewMedia(item);\n    public readonly previewFile = (event) =>\n        this._state.previewFileFromInput(event, this.selected_playlist);\n\n    public onEnter(e) {\n        this.clearTimeout('hide_overlay');\n        this.show_dropzone = e?.dataTransfer?.types.includes('Files');\n    }\n\n    public hideOverlay(e) {\n        if (!this.show_dropzone) return;\n        if (!(e.target instanceof HTMLInputElement)) {\n            e.preventDefault();\n        }\n        this.timeout('hide_overlay', () => (this.show_dropzone = false));\n    }\n\n    constructor(\n        private _state: SignageStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('playlist')) {\n                    this.selected_playlist = params.get('playlist');\n                }\n            }),\n        );\n    }\n\n    public async drop(\n        playlist: SignagePlaylist,\n        event: CdkDragDrop<SignagePlaylist[]>,\n    ) {\n        const media = event.previousContainer.data[event.previousIndex];\n        const media_list = await listSignagePlaylistMedia(\n            playlist.id,\n        ).toPromise();\n        const new_media_list = [...media_list.items, media.id];\n        await this._state.updatePlaylistMedia(playlist.id, new_media_list);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'search-overlay',\n    template: `\n        <div\n            class=\"absolute inset-0 flex flex-col p-8 items-center\"\n            (click)=\"close.next()\"\n            (window:keydown.esc)=\"close.next()\"\n        >\n            <div class=\"absolute inset-0 bg-base-content opacity-70 z-0\"></div>\n            <div\n                class=\"relative mb-4 w-[32rem] max-w-[calc(100%-2rem)] mx-auto z-10\"\n                (click)=\"$event.stopPropagation()\"\n            >\n                <input\n                    class=\"rounded-[4rem] text-xl text-base-content bg-base-100 border border-base-300 shadow pl-14 pr-6 py-4 w-full\"\n                    [ngModel]=\"search.getValue()\"\n                    (ngModelChange)=\"search.next($event)\"\n                    placeholder=\"Search...\"\n                />\n                <app-icon\n                    class=\"absolute left-3 top-1/2 -translate-y-1/2 text-3xl pointer-events-none\"\n                >\n                    search\n                </app-icon>\n            </div>\n            <div\n                class=\"overflow-auto max-h-[65%] w-[32rem] max-w-[calc(100%-2rem)] mx-auto rounded z-10\"\n                (click)=\"$event.stopPropagation()\"\n            >\n                @for (item of item_list; track item) {\n                    <button\n                        matRipple\n                        class=\"w-full text-left\"\n                        (click)=\"selected.next(item)\"\n                    >\n                        @if (result_template) {\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    result_template;\n                                    context: { item: item }\n                                \"\n                            ></ng-container>\n                        } @else {\n                            <div\n                                class=\"p-4 w-full bg-base-100 hover:bg-base-200 border border-base-300\"\n                            >\n                                {{ item.name || item }}\n                            </div>\n                        }\n                    </button>\n                }\n                @if (!item_list?.length) {\n                    <button\n                        matRipple\n                        class=\"w-full p-4 text-base-100\"\n                        (click)=\"close.next()\"\n                    >\n                        <div class=\"opacity-30\">\n                            No items available to select\n                        </div>\n                    </button>\n                }\n            </div>\n            <button\n                icon\n                matRipple\n                class=\"absolute top-10 right-8 text-base-100 text-xl h-12 w-12\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class SearchOverlayComponent<T extends {} = any> {\n    @Input() public item_list: T[] = [];\n    @Input() public result_template: TemplateRef<any>;\n\n    @Output() public selected = new EventEmitter<T>();\n    @Output() public close = new EventEmitter<void>();\n\n    public readonly search = new BehaviorSubject('');\n    private _items = new BehaviorSubject<T[]>([]);\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item_list) {\n            this._items.next(this.item_list || []);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { SignageStateService } from './signage-state.service';\nimport { map, startWith } from 'rxjs/operators';\nimport { SignagePlaylist } from '@placeos/ts-client';\n\n@Component({\n    selector: `signage-item-playlists`,\n    template: `\n        <div class=\"flex items-center justify-center space-x-2\">\n            <h3 class=\"text-xl font-medium\">\n                {{ item?.display_name || item?.name }}\n            </h3>\n            <div\n                *ngIf=\"extra\"\n                class=\"px-2 py-1 text-xs font-mono bg-base-200 rounded-lg uppercase\"\n            >\n                {{ extra }}\n            </div>\n        </div>\n        <ng-content></ng-content>\n        @if ((active_playlists | async).length > 0 && item) {\n            <div\n                cdkDropList\n                class=\"flex-1 h-1/2 overflow-auto flex flex-col space-y-2 mt-4\"\n                (cdkDropListDropped)=\"ondrop.next($event)\"\n            >\n                @for (item of active_playlists | async; track item.id) {\n                    <div\n                        cdkDrag\n                        class=\"w-full bg-base-100 h-20 rounded-lg flex items-center p-2 space-x-2 border border-base-300\"\n                    >\n                        <div\n                            class=\"h-20 w-full border-4 border-dashed border-base-400 bg-base-300 rounded-xl\"\n                            *cdkDragPlaceholder\n                        ></div>\n                        <button\n                            matRipple\n                            cdkDragHandle\n                            class=\"flex items-center justify-center w-6 h-full rounded hover:bg-base-200\"\n                            matTooltip=\"Drag to reorder\"\n                        >\n                            <app-icon>drag_handle</app-icon>\n                        </button>\n                        <div class=\"text-base-content flex-1 w-1/2\">\n                            <div class=\"truncate\">\n                                {{ item.name }}\n                            </div>\n                            <div class=\"truncate text-sm opacity-30\">\n                                {{ item.media_count || 0 }} Media items\n                            </div>\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            aria-label=\"Media Actions\"\n                            [matMenuTriggerFor]=\"menu\"\n                        >\n                            <app-icon>more_vert</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <a\n                                mat-menu-item\n                                [routerLink]=\"['/signage', 'media']\"\n                                [queryParams]=\"{\n                                    playlist: item.id,\n                                }\"\n                            >\n                                <div class=\"flex items-center space-x-2\">\n                                    <app-icon class=\"text-2xl\">\n                                        visibility\n                                    </app-icon>\n                                    <div class=\"pr-2\">View Playlist</div>\n                                </div>\n                            </a>\n                            <button mat-menu-item (click)=\"remove.next(item)\">\n                                <div class=\"flex items-center space-x-2\">\n                                    <app-icon class=\"text-2xl text-error\">\n                                        delete\n                                    </app-icon>\n                                    <div class=\"pr-2\">Remove Playlist</div>\n                                </div>\n                            </button>\n                        </mat-menu>\n                    </div>\n                }\n            </div>\n            <button btn matRipple (click)=\"add.emit()\">Add Playlist</button>\n        } @else {\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-2 mx-auto flex-1\"\n            >\n                <div\n                    class=\"flex flex-col items-center justify-center opacity-30\"\n                >\n                    <app-icon class=\"text-6xl\">hide_image</app-icon>\n                    <p>No playlists in {{ name }}.</p>\n                </div>\n                <button btn matRipple (click)=\"add.emit()\" class=\"w-40\">\n                    Add Playlist\n                </button>\n            </div>\n        }\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class SignageItemPlaylistsComponent {\n    @Input() public item: any;\n    @Input() public name: string = 'zone';\n    @Input() public extra: string = '';\n    @Output() public readonly add = new EventEmitter();\n    @Output() public readonly remove = new EventEmitter<SignagePlaylist>();\n    @Output() public readonly ondrop = new EventEmitter<any>();\n\n    private _playlist_ids = new BehaviorSubject<string[]>([]);\n\n    public readonly active_playlists = combineLatest([\n        this._state.playlists,\n        this._playlist_ids,\n        this._state.has_changed,\n    ]).pipe(\n        map(([playlists, ids]) =>\n            ids.map((id) => playlists.find((_) => _.id === id)),\n        ),\n        startWith([]),\n    );\n\n    constructor(private _state: SignageStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item) {\n            this._playlist_ids.next(this.item?.playlists || []);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { SignageStateService } from './signage-state.service';\nimport { map, shareReplay, switchMap, take, tap } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler, notifySuccess, SettingsService } from '@placeos/common';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport {\n    listSystemTriggers,\n    SignagePlaylist,\n    updateSystem,\n    updateTrigger,\n} from '@placeos/ts-client';\n\n@Component({\n    selector: 'signage-displays',\n    template: `\n        <div class=\"relative h-full w-full overflow-visible flex space-x-4\">\n            <div sidebar class=\"w-64 h-full flex flex-col space-y-4 py-4\">\n                <h3 class=\"text-xl font-medium text-center\">Displays</h3>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <input\n                        matInput\n                        placeholder=\"Search...\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                    />\n                </mat-form-field>\n                @if ((displays | async)?.length > 0) {\n                    <div class=\"h-1/2 flex-1 w-full overflow-auto space-y-2\">\n                        @for (display of displays | async; track display.id) {\n                            <a\n                                matRipple\n                                class=\"w-full px-6 rounded-3xl min-h-12 flex items-center hover:bg-base-200 truncate z-10\"\n                                [class.!bg-secondary]=\"\n                                    selected.getValue() === display.id\n                                \"\n                                [class.text-secondary-content]=\"\n                                    selected.getValue() === display.id\n                                \"\n                                [routerLink]=\"[]\"\n                                [queryParams]=\"{ display: display.id }\"\n                            >\n                                {{ display.display_name || display.name }}\n                            </a>\n                            @if (\n                                (active_display | async)?.id === display.id &&\n                                !switching\n                            ) {\n                                @for (\n                                    trigger of triggers | async;\n                                    track trigger.id\n                                ) {\n                                    <div\n                                        class=\"relative flex items-center space-x-2 z-0\"\n                                    >\n                                        <div class=\"w-6\">\n                                            <div\n                                                class=\"absolute h-16 w-4 border-b-2 border-l-2 border-base-300 top-1/2 left-6 -translate-y-full\"\n                                            ></div>\n                                        </div>\n                                        <a\n                                            matRipple\n                                            class=\"w-1/2 flex-1 px-6 rounded-3xl min-h-12 flex items-center hover:bg-base-200 truncate\"\n                                            [class.!bg-secondary]=\"\n                                                selected_trigger.getValue() ===\n                                                trigger?.id\n                                            \"\n                                            [class.text-secondary-content]=\"\n                                                selected_trigger.getValue() ===\n                                                trigger?.id\n                                            \"\n                                            [routerLink]=\"[]\"\n                                            [queryParams]=\"{\n                                                display: display.id,\n                                                trigger: trigger?.id,\n                                            }\"\n                                        >\n                                            <span class=\"max-w-full truncate\">{{\n                                                trigger?.display_name ||\n                                                    trigger?.name ||\n                                                    'Trigger'\n                                            }}</span>\n                                        </a>\n                                    </div>\n                                }\n                            }\n                        }\n                    </div>\n                } @else {\n                    <div\n                        class=\"flex flex-col items-center justify-center p-8 space-y-2 opacity-30\"\n                    >\n                        <app-icon class=\"text-6xl\">hide_image</app-icon>\n                        <p class=\"text-center\">\n                            {{\n                                search.getValue()\n                                    ? 'No matching displays found'\n                                    : 'No displays'\n                            }}\n                        </p>\n                    </div>\n                }\n            </div>\n            <div\n                class=\"relative flex flex-col flex-1 w-1/2 h-full overflow-auto rounded-lg border border-base-300 p-4 shadow space-y-4\"\n            >\n                @if (active_display | async) {\n                    <signage-item-playlists\n                        class=\"flex flex-col flex-1\"\n                        [item]=\"\n                            (active_trigger | async) || (active_display | async)\n                        \"\n                        [name]=\"\n                            (active_trigger | async) ? 'trigger' : 'display'\n                        \"\n                        [extra]=\"\n                            (active_trigger | async)\n                                ? ''\n                                : (active_display | async)?.orientation\n                        \"\n                        (add)=\"this.adding = true\"\n                        (remove)=\"removePlaylist($event)\"\n                        (ondrop)=\"drop($event)\"\n                    >\n                        <div\n                            class=\"flex flex-wrap items-center overflow-auto mt-4\"\n                            *ngIf=\"!(active_trigger | async)\"\n                        >\n                            @for (\n                                zone of (active_display | async)?.zones;\n                                track zone\n                            ) {\n                                <a\n                                    class=\"px-2 py-1 font-mono text-xs bg-base-200 rounded whitespace-nowrap m-1\"\n                                    matRipple\n                                    [routerLink]=\"['/signage', 'zones']\"\n                                    [queryParams]=\"{ zone: zone }\"\n                                >\n                                    {{\n                                        (zone | zone | async)?.display_name ||\n                                            (zone | zone | async)?.name\n                                    }}\n                                </a>\n                            }\n                            <button\n                                class=\"underline font-mono text-xs px-2 py-1 rounded m-1\"\n                                matRipple\n                            >\n                                Add Zone\n                            </button>\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"absolute top-2 right-2 !m-0\"\n                        >\n                            <app-icon>more_vert</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <a\n                                mat-menu-item\n                                [href]=\"\n                                    signage_path +\n                                    '/#/signage/' +\n                                    (active_display | async)?.id\n                                \"\n                                target=\"_blank\"\n                                ref=\"noopener noreferrer\"\n                            >\n                                <div class=\"flex items-center space-x-2\">\n                                    <app-icon class=\"text-2xl\"\n                                        >open_in_new</app-icon\n                                    >\n                                    <div class=\"pr-2\">Open Signage Player</div>\n                                </div>\n                            </a>\n                            <button mat-menu-item (click)=\"removeDisplay()\">\n                                <div class=\"flex items-center space-x-2\">\n                                    <app-icon class=\"text-2xl text-error\"\n                                        >delete</app-icon\n                                    >\n                                    <div class=\"pr-2\">Remove Display</div>\n                                </div>\n                            </button>\n                        </mat-menu>\n                    </signage-item-playlists>\n                } @else {\n                    <div\n                        class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 opacity-30\"\n                    >\n                        <app-icon class=\"text-6xl\">desktop_windows</app-icon>\n                        <p>Select a display from the left to view playlists</p>\n                    </div>\n                }\n                <search-overlay\n                    *ngIf=\"adding\"\n                    [item_list]=\"playlists | async\"\n                    (selected)=\"addPlaylist($event)\"\n                    (close)=\"adding = false\"\n                ></search-overlay>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class SignageDisplaysComponent extends AsyncHandler {\n    public adding = false;\n    public switching = false;\n    public readonly search = new BehaviorSubject<string>('');\n    public readonly loading = this._state.loading;\n    public readonly displays = combineLatest([\n        this.search,\n        this._state.displays,\n    ]).pipe(\n        map(([search, list]) =>\n            list.filter((_) =>\n                _.name.toLowerCase().includes(search.toLowerCase()),\n            ),\n        ),\n    );\n    public readonly selected = new BehaviorSubject('');\n    public readonly selected_trigger = new BehaviorSubject('');\n    public readonly active_display = combineLatest([\n        this.displays,\n        this.selected,\n    ]).pipe(map(([displays, id]) => displays.find((item) => item.id === id)));\n\n    public readonly triggers = this.selected.pipe(\n        switchMap((id) => listSystemTriggers(id)),\n        map((_) => _.data),\n        tap((_) => setTimeout(() => (this.switching = false), 200)),\n        shareReplay(1),\n    );\n\n    public readonly active_trigger = combineLatest([\n        this.triggers,\n        this.selected_trigger,\n        this.selected,\n    ]).pipe(\n        map(([list, id, sys_id]) =>\n            list.find(\n                (item) => item.id === id && item.control_system_id === sys_id,\n            ),\n        ),\n    );\n\n    public readonly playlists = combineLatest([\n        this.active_display,\n        this.active_trigger,\n        this._state.playlists,\n        this._state.has_changed,\n    ]).pipe(\n        map(([display, trigger, playlists]) =>\n            playlists.filter(\n                (_) =>\n                    !(trigger || display)?.playlists.find((id) => _.id === id),\n            ),\n        ),\n    );\n\n    public readonly removeDisplay = async () =>\n        this._state.removeDisplay(\n            await this.active_display.pipe(take(1)).toPromise(),\n        );\n\n    public get signage_path() {\n        return this._settings.get('app.signage_path') || '/signage';\n    }\n\n    constructor(\n        private _state: SignageStateService,\n        private _route: ActivatedRoute,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._route.queryParamMap.subscribe((params) => {\n                this.switching =\n                    params.get('display') !== this.selected.getValue();\n                this.selected.next(params.get('display') || '');\n                this.selected_trigger.next(params.get('trigger') || '');\n            }),\n        );\n    }\n\n    public async addPlaylist(playlist: SignagePlaylist) {\n        const display = await this.active_display.pipe(take(1)).toPromise();\n        const trigger = await this.active_trigger.pipe(take(1)).toPromise();\n        const item = trigger || display;\n        const playlists = [...item.playlists, playlist.id];\n        const method: any = trigger ? updateTrigger : updateSystem;\n        await method(\n            item.id,\n            { playlists, version: display.version },\n            'patch',\n        ).toPromise();\n        notifySuccess(\n            `Successfully added playlist to the ${trigger ? 'trigger' : 'display'}`,\n        );\n        this._state.changed();\n        this.adding = false;\n    }\n\n    public async removePlaylist(playlist: SignagePlaylist) {\n        const display = await this.active_display.pipe(take(1)).toPromise();\n        const trigger = await this.active_trigger.pipe(take(1)).toPromise();\n        const item = trigger || display;\n        const playlists = item.playlists.filter((id) => playlist.id !== id);\n        const method: any = trigger ? updateTrigger : updateSystem;\n        await method(\n            item.id,\n            { playlists, version: display.version },\n            'patch',\n        ).toPromise();\n        notifySuccess(\n            `Successfully removed playlist from ${trigger ? 'trigger' : 'display'}`,\n        );\n        this._state.changed();\n        this.adding = false;\n    }\n\n    public async drop(event: CdkDragDrop<SignagePlaylist[]>) {\n        const display = await this.active_display.pipe(take(1)).toPromise();\n        const trigger = await this.active_trigger.pipe(take(1)).toPromise();\n        const item = trigger || display;\n        const old_playlist = item.playlists;\n        const playlists = [...old_playlist];\n        moveItemInArray(playlists, event.previousIndex, event.currentIndex);\n        (item as any).playlists = playlists;\n        this._state.changed();\n        const method: any = trigger ? updateTrigger : updateSystem;\n        await method(item.id, { playlists, version: display.version }, 'patch')\n            .toPromise()\n            .catch((e) => {\n                (item as any).playlists = old_playlist;\n                this._state.changed();\n                throw e;\n            });\n        notifySuccess(\n            `Successfully re-ordered playlists on ${trigger ? 'trigger' : 'display'}`,\n        );\n        this._state.changed();\n    }\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { SignageStateService } from './signage-state.service';\nimport {\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler, notifySuccess, unique } from '@placeos/common';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport {\n    listZoneTriggers,\n    SignagePlaylist,\n    updateTrigger,\n    updateZone,\n} from '@placeos/ts-client';\n\n@Component({\n    selector: 'signage-zones',\n    template: `\n        <div class=\"relative h-full w-full overflow-visible flex space-x-4\">\n            <div sidebar class=\"w-64 h-full flex flex-col space-y-4 py-4\">\n                <h3 class=\"text-xl font-medium text-center\">Zones</h3>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <input\n                        matInput\n                        placeholder=\"Search...\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                    />\n                </mat-form-field>\n                @if ((zones | async)?.length > 0) {\n                    <div class=\"h-1/2 flex-1 w-full overflow-auto space-y-2\">\n                        @for (zone of zones | async; track zone.id) {\n                            <a\n                                matRipple\n                                class=\"w-full px-6 rounded-3xl min-h-12 flex items-center hover:bg-base-200 truncate z-10\"\n                                [class.!bg-secondary]=\"\n                                    selected.getValue() === zone.id\n                                \"\n                                [class.text-secondary-content]=\"\n                                    selected.getValue() === zone.id\n                                \"\n                                [routerLink]=\"[]\"\n                                [queryParams]=\"{ zone: zone.id }\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </a>\n                            @if (\n                                (active_zone | async)?.id === zone.id &&\n                                !switching\n                            ) {\n                                @for (\n                                    trigger of triggers | async;\n                                    track trigger.id\n                                ) {\n                                    <div\n                                        class=\"relative flex items-center space-x-2 z-0\"\n                                    >\n                                        <div class=\"w-6\">\n                                            <div\n                                                class=\"absolute h-16 w-4 border-b-2 border-l-2 border-base-300 top-1/2 left-6 -translate-y-full\"\n                                            ></div>\n                                        </div>\n                                        <a\n                                            matRipple\n                                            class=\"w-full px-6 rounded-3xl min-h-12 flex items-center hover:bg-base-200 truncate\"\n                                            [class.!bg-secondary]=\"\n                                                selected_trigger.getValue() ===\n                                                trigger?.id\n                                            \"\n                                            [class.text-secondary-content]=\"\n                                                selected_trigger.getValue() ===\n                                                trigger?.id\n                                            \"\n                                            [routerLink]=\"[]\"\n                                            [queryParams]=\"{\n                                                zone: zone.id,\n                                                trigger: trigger?.id,\n                                            }\"\n                                        >\n                                            {{\n                                                trigger?.display_name ||\n                                                    trigger?.name ||\n                                                    'Trigger'\n                                            }}\n                                        </a>\n                                    </div>\n                                }\n                            }\n                        }\n                    </div>\n                } @else {\n                    <div\n                        class=\"flex flex-col items-center justify-center p-8 space-y-2 opacity-30\"\n                    >\n                        <app-icon class=\"text-6xl\">hide_image</app-icon>\n                        <p class=\"text-center\">\n                            {{\n                                search.getValue()\n                                    ? 'No matching zones found'\n                                    : 'No zones'\n                            }}\n                        </p>\n                    </div>\n                }\n            </div>\n            <div\n                class=\"relative flex flex-col flex-1 w-1/2 h-full overflow-auto rounded-lg border border-base-300 p-4 shadow space-y-4\"\n            >\n                @if (active_zone | async) {\n                    <signage-item-playlists\n                        class=\"flex flex-col flex-1\"\n                        [item]=\"\n                            (active_trigger | async) || (active_zone | async)\n                        \"\n                        [name]=\"(active_trigger | async) ? 'trigger' : 'zone'\"\n                        (add)=\"this.adding = true\"\n                        (remove)=\"removePlaylist($event)\"\n                        (ondrop)=\"drop($event)\"\n                    ></signage-item-playlists>\n                } @else {\n                    <div\n                        class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 opacity-30\"\n                    >\n                        <app-icon class=\"text-6xl\">desktop_windows</app-icon>\n                        <p>Select a zone from the left to view playlists</p>\n                    </div>\n                }\n                <search-overlay\n                    *ngIf=\"adding\"\n                    [item_list]=\"playlists | async\"\n                    (selected)=\"addPlaylist($event)\"\n                    (close)=\"adding = false\"\n                ></search-overlay>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class SignageZonesComponent extends AsyncHandler {\n    public adding = false;\n    public switching = false;\n    public readonly search = new BehaviorSubject<string>('');\n    public readonly loading = this._state.loading;\n    public readonly zones = combineLatest([\n        this.search,\n        this._state.zones,\n    ]).pipe(\n        map(([search, list]) =>\n            list.filter((_) =>\n                _.name.toLowerCase().includes(search.toLowerCase()),\n            ),\n        ),\n    );\n    public readonly selected = new BehaviorSubject('');\n    public readonly selected_trigger = new BehaviorSubject('');\n    public readonly active_zone = combineLatest([\n        this.zones,\n        this.selected,\n    ]).pipe(map(([zones, id]) => zones.find((item) => item.id === id)));\n\n    public readonly triggers = this.selected.pipe(\n        switchMap((id) => listZoneTriggers(id)),\n        map((_) => _.data),\n        tap((_) => setTimeout(() => (this.switching = false), 100)),\n        shareReplay(1),\n    );\n\n    public readonly active_trigger = combineLatest([\n        this.triggers,\n        this.selected_trigger,\n    ]).pipe(map(([list, id]) => list.find((item) => item.id === id)));\n\n    public readonly playlists = combineLatest([\n        this.active_zone,\n        this.active_trigger,\n        this._state.playlists,\n        this._state.has_changed,\n    ]).pipe(\n        map(([zone, trigger, playlists]) =>\n            playlists.filter(\n                (_) => !(trigger || zone)?.playlists.find((id) => _.id === id),\n            ),\n        ),\n    );\n\n    constructor(\n        private _state: SignageStateService,\n        private _route: ActivatedRoute,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.params',\n            this._route.queryParamMap.subscribe((params) => {\n                this.switching =\n                    params.get('zone') !== this.selected.getValue();\n                this.selected.next(params.get('zone') || '');\n                this.selected_trigger.next(params.get('trigger') || '');\n            }),\n        );\n    }\n\n    public async addPlaylist(playlist: SignagePlaylist) {\n        const zone = await this.active_zone.pipe(take(1)).toPromise();\n        const trigger = await this.active_trigger.pipe(take(1)).toPromise();\n        const item = trigger || zone;\n        const playlists = [...item.playlists, playlist.id];\n        const method: any = trigger ? updateTrigger : updateZone;\n        await method(\n            item.id,\n            { playlists, version: zone.version },\n            'patch',\n        ).toPromise();\n        notifySuccess(\n            `Successfully added playlist to the ${trigger ? 'trigger' : 'zone'}`,\n        );\n        this._state.changed();\n        this.adding = false;\n    }\n\n    public async removePlaylist(playlist: SignagePlaylist) {\n        const zone = await this.active_zone.pipe(take(1)).toPromise();\n        const trigger = await this.active_trigger.pipe(take(1)).toPromise();\n        const item = trigger || zone;\n        const playlists = item.filter((id) => playlist.id !== id);\n        const method: any = trigger ? updateTrigger : updateZone;\n        await method(\n            item.id,\n            { playlists, version: zone.version },\n            'patch',\n        ).toPromise();\n        notifySuccess(\n            `Successfully removed playlist from ${trigger ? 'trigger' : 'zone'}`,\n        );\n        this._state.changed();\n        this.adding = false;\n    }\n\n    public async drop(event: CdkDragDrop<SignagePlaylist[]>) {\n        const zone = await this.active_zone.pipe(take(1)).toPromise();\n        const trigger = await this.active_trigger.pipe(take(1)).toPromise();\n        const item = trigger || zone;\n        const old_playlist = item.playlists;\n        const playlists = [...old_playlist];\n        moveItemInArray(playlists, event.previousIndex, event.currentIndex);\n        (item as any).playlists = playlists;\n        this._state.changed();\n        const method: any = trigger ? updateTrigger : updateZone;\n        await method(item.id, { playlists, version: zone.version }, 'patch')\n            .toPromise()\n            .catch((e) => {\n                (item as any).playlists = old_playlist;\n                this._state.changed();\n                throw e;\n            });\n        notifySuccess(\n            `Successfully re-ordered playlists on ${trigger ? 'trigger' : 'zone'}`,\n        );\n        this._state.changed();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { UIModule } from '../ui/ui.module';\nimport { SignageComponent } from './signage.component';\nimport { SignageTopbarComponent } from './signage-topbar.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SignageMediaComponent } from './signage-media.component';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\nimport { SignagePlaylistMediaListComponent } from './signage-playlist-media-list.component';\nimport { SignageMediaListComponent } from './signage-media-list.component';\nimport { SignageDisplaysComponent } from './signage-displays.component';\nimport { SearchOverlayComponent } from './search-overlay.component';\nimport { SignageZonesComponent } from './signage-zones.component';\nimport { SignageItemPlaylistsComponent } from './signage-item-playlists.component';\nimport { SignageMediaModalComponent } from './signage-media-modal.component';\nimport { SignageDisplayModalComponent } from './signage-display-modal.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: SignageComponent,\n        children: [\n            { path: '', redirectTo: 'media', pathMatch: 'full' },\n            { path: 'media', component: SignageMediaComponent },\n            { path: 'displays', component: SignageDisplaysComponent },\n            { path: 'zones', component: SignageZonesComponent },\n            { path: '*', redirectTo: 'media', pathMatch: 'full' },\n        ],\n    },\n];\n\nexport const COMPONENTS: Type<any>[] = [\n    SignageComponent,\n    SignageTopbarComponent,\n    SignageMediaComponent,\n    SignageMediaModalComponent,\n    SignageMediaPreviewModalComponent,\n    SignagePlaylistModalComponent,\n    SignageMediaListComponent,\n    SignagePlaylistMediaListComponent,\n\n    SignageDisplaysComponent,\n    SignageDisplayModalComponent,\n    SignageZonesComponent,\n    SearchOverlayComponent,\n    SignageItemPlaylistsComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        ComponentsModule,\n        RouterModule.forChild(ROUTES),\n        MatTabsModule,\n        DragDropModule,\n    ],\n})\nexport class SignageModule {}\n"],"x_google_ignoreList":[]}