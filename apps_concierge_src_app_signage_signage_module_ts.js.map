{"version":3,"file":"apps_concierge_src_app_signage_signage_module_ts.js","mappings":"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","names":["SignagePlaylist","constructor","_data","this","id","name","description","media","media_durations","SignageDisplay","orientation","playlists","SignageMedia","type","duration","url","i0","ctx_r4","resource","toString","ctx_r5","SignageMediaPreviewModalComponent_main_6_img_2_Template","SignageMediaPreviewModalComponent_main_6_video_3_Template","ctx_r0","_r7","ctx_r6","save","emit","ctx_r2","loading","SignageMediaPreviewModalComponent","EventEmitter","file","can_save","static","t","MAT_DIALOG_DATA","core","Xpm","selectors","outputs","decls","vars","consts","template","rf","ctx","SignageMediaPreviewModalComponent_main_6_Template","SignageMediaPreviewModalComponent_footer_7_Template","SignageMediaPreviewModalComponent_ng_template_8_Template","_r3","item_r12","_r14","$implicit","ctx_r13","addMedia","_r16","ctx_r15","focusSearchInput","$event","ctx_r17","search","next","SignagePlaylistModalComponent_main_4_button_25_Template","ctx_r1","form","media_list","_c1","_c2","_c3","_c4","_r4","_r6","_r9","getValue","_c5","new_media","_r19","ctx_r18","savePlaylist","row_r20","_r23","row","ctx_r22","setDuration","_r21","ctx_r3","value","row_r24","_r28","ctx_r27","changeOrder","ctx_r29","ctx_r30","previewMedia","ctx_r31","removeMedia","first_r25","last_r26","SignagePlaylistModalComponent","_state","_dialog","_dialog_ref","playlist","BehaviorSubject","FormGroup","FormControl","Validators","required","combineLatest","valueChanges","pipe","startWith","getRawValue","map","find","_","all_media","filter","includes","toLowerCase","indexOf","setTimeout","search_input","nativeElement","focus","_this","_asyncToGenerator","markAllAsTouched","updateValueAndValidity","invalid","catch","notifyError","close","new_media_durations","patchValue","item","index","splice","direction","open","data","afterClosed","subscribe","URL","revokeObjectURL","i1","i2","viewQuery","SignagePlaylistModalComponent_button_3_Template","SignagePlaylistModalComponent_main_4_Template","SignagePlaylistModalComponent_footer_5_Template","SignagePlaylistModalComponent_ng_template_6_Template","SignagePlaylistModalComponent_ng_template_8_Template","SignagePlaylistModalComponent_ng_template_10_Template","_r8","addPlaylist","SignageDisplayModalComponent_main_4_button_37_Template","playlist_list","new_playlists","saveDisplay","_r24","ctx_r23","ctx_r25","ctx_r26","previewPlaylist","removePlaylist","first_r21","last_r22","data_r28","SignageDisplayModalComponent","display","reduce","a","b","tap","console","log","all_playlist","SignageDisplayModalComponent_button_3_Template","SignageDisplayModalComponent_main_4_Template","SignageDisplayModalComponent_footer_5_Template","SignageDisplayModalComponent_ng_template_6_Template","SignageDisplayModalComponent_ng_template_8_Template","SignageDisplayModalComponent_ng_template_10_Template","SignageStateService","_org","_loading","_change","_active_upload","asObservable","active_building","switchMap","bld","showMetadata","catchError","of","details","Array","shareReplay","displays","zones","queryZones","parent_id","tags","limit","editPlaylist","Date","now","remove","building","take","toPromise","idx","findIndex","randomString","push","updateMetadata","notifySuccess","_this2","editDisplay","_this3","display_list","removeDisplay","_this4","previewFileMedia","_this5","createObjectURL","ref","componentInstance","e","_this6","_uploadFile","is_landscape","Promise","resolve","reader","FileReader","onload","video","document","createElement","addEventListener","videoWidth","videoHeight","src","result","img","Image","width","height","readAsDataURL","reject","fileReader","blob","blobUtil","target","upload","uploadFiles","file_name","upload_details","randomInt","progress","size","created_at","status","takeWhile","state","access_url","readAsArrayBuffer","Yz7","factory","ɵfac","providedIn","newItem","active_link","singular","link_r5","ctx_r8","SignageComponent","AsyncHandler","replace","_router","super","links","ngOnInit","subscription","events","event","NavigationEnd","features","attrs","_c0","SignageComponent_button_7_Template","SignageComponent_For_10_Template","_r2","SignageTopbarComponent","_route","levels","active_levels","initialised","first","queryParamMap","params","has","get","split","length","level","levelWithID","buildings","zone","lvl","i3","row_r8","row_r9","_r11","ctx_r10","editItem","ctx_r12","deleteItem","SignagePlaylistsComponent","i","acc","m","SignagePlaylistsComponent_ng_template_1_Template","SignagePlaylistsComponent_ng_template_3_Template","SignagePlaylistsComponent_ng_template_5_Template","SignagePlaylistsComponent_mat_progress_bar_7_Template","_r1","_r5","SignageDisplaysComponent","SignageDisplaysComponent_ng_template_1_Template","SignageDisplaysComponent_ng_template_3_Template","SignageDisplaysComponent_ng_template_5_Template","SignageDisplaysComponent_mat_progress_bar_7_Template","SignageZonesComponent","SignageTriggersComponent","item_r8","_r12","ctx_r11","SignageMediaComponent_ng_container_1_ng_container_1_div_2_div_11_Template","ctx_r7","count","SignageMediaComponent_ng_container_1_ng_container_1_div_2_Template","SignageMediaComponent_ng_container_1_ng_container_1_Template","tmp_0_0","previewFile","SignageMediaComponent","onEnter","show_dropzone","dataTransfer","types","hideOverlay","HTMLInputElement","preventDefault","timeout","element","files","SignageMediaComponent_ng_container_1_Template","SignageMediaComponent_div_3_Template","SignageMediaComponent_ng_template_4_Template","SignageMediaComponent_ng_template_6_Template","ROUTES","path","component","children","redirectTo","pathMatch","COMPONENTS","SignageModule","oAB","cJS","CommonModule","FormsModule","UIModule","ComponentsModule","RouterModule","forChild","MatTabsModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/signage/signage.classes.ts","./apps/concierge/src/app/signage/signage-media-preview-modal.component.ts","./apps/concierge/src/app/signage/signage-playlist-modal.component.ts","./apps/concierge/src/app/signage/signage-display-modal.component.ts","./apps/concierge/src/app/signage/signage-state.service.ts","./apps/concierge/src/app/signage/signage.component.ts","./apps/concierge/src/app/signage/signage-topbar.component.ts","./apps/concierge/src/app/signage/signage-playlists.component.ts","./apps/concierge/src/app/signage/signage-displays.component.ts","./apps/concierge/src/app/signage/signage-zones.component.ts","./apps/concierge/src/app/signage/signage-triggers.component.ts","./apps/concierge/src/app/signage/signage-media.component.ts","./apps/concierge/src/app/signage/signage.module.ts"],"sourcesContent":["export class SignagePlaylist {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly media: string[];\n    public readonly media_durations: Record<string, number>;\n\n    constructor(_data: Partial<SignagePlaylist> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.media = _data.media || [];\n        this.media_durations = _data.media_durations || {};\n    }\n}\n\nexport class SignageDisplay {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly orientation: 'landscape' | 'portrait';\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageDisplay> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.orientation = _data.orientation || 'landscape';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageZone {\n    public readonly id: string;\n    public readonly zone_id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageZone> = {}) {\n        this.id = _data.id || '';\n        this.zone_id = _data.zone_id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageTrigger {\n    public readonly id: string;\n    public readonly zone_id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageTrigger> = {}) {\n        this.id = _data.id || '';\n        this.zone_id = _data.zone_id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageMedia {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly type: 'image' | 'video';\n    public readonly duration: number;\n    public readonly orientation: 'landscape' | 'portrait';\n    public readonly url: string;\n\n    constructor(_data: Partial<SignageMedia> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.type = _data.type || 'image';\n        this.duration = _data.duration || 15;\n        this.orientation = _data.orientation || 'landscape';\n        this.url = _data.url || '';\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { uploadFile } from '@placeos/common';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n    selector: 'signage-media-preview-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">Preview - {{ name }}</h1>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"bg-base-200\" *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"max-w-[80vw] max-h-[65vh] w-[80vw] h-[65vh] flex items-center justify-center\"\n            >\n                <img\n                    *ngIf=\"type === 'image'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                />\n                <video\n                    *ngIf=\"type === 'video'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                    autoplay\n                    controls\n                ></video>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"can_save && !loading\"\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save.emit()\">\n                Save Media\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-8 w-[28rem] h-[20rem] max-w-[80vw] max-h-[65vh]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignageMediaPreviewModalComponent {\n    @Output() public readonly save = new EventEmitter<any>();\n    public loading = '';\n    public readonly resource = this._data.url;\n    public readonly type = this._data.type;\n    public readonly name = this._data.name;\n    public readonly file = this._data.file;\n    public readonly can_save = this._data.save !== false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            url: URL;\n            type: 'image' | 'video';\n            save: boolean;\n            name: string;\n            file?: File;\n        }\n    ) {}\n}\n","import {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport { SignageStateService } from './signage-state.service';\nimport { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { SignageMedia, SignagePlaylist } from './signage.classes';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { th } from 'date-fns/locale';\n\n@Component({\n    selector: 'signage-playlist-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">{{ playlist.id ? 'Edit' : 'New' }} Playlist</h1>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            class=\"p-2 flex flex-col\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <label for=\"name\">Name<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <input\n                    matInput\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\"\n                />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n            <label for=\"description\">Description</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n            <label for=\"media\">Media</label>\n            <custom-table\n                class=\"block w-full mb-2\"\n                [dataSource]=\"media_list\"\n                [columns]=\"['_index', 'name', 'type', 'duration', 'actions']\"\n                [display_column]=\"[' ', 'Name', 'Type', 'Duration', ' ']\"\n                [column_size]=\"['3r', 'flex', '10r', '6r', '10r']\"\n                [template]=\"{\n                    duration: duration_template,\n                    actions: actions_template\n                }\"\n            >\n            </custom-table>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                [matMenuTriggerFor]=\"media_menu\"\n                (click)=\"focusSearchInput()\"\n            >\n                Add Media\n            </button>\n            <mat-menu #media_menu=\"matMenu\" class=\"w-[32rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <app-icon matPrefix class=\"text-2xl -left-1\">\n                        search\n                    </app-icon>\n                    <input\n                        #search_input\n                        matInput\n                        placeholder=\"Media Name\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    />\n                </mat-form-field>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let item of new_media | async | slice: 0:8\"\n                    (click)=\"addMedia(item)\"\n                >\n                    <div class=\"flex items-center w-full\">\n                        <div class=\"flex-1 truncate\">{{ item.name }}</div>\n                        <code class=\"capitalize\">{{ item.type }}</code>\n                        <code class=\"bg-base-300 text-base-content\">{{\n                            item.duration | mediaDuration\n                        }}</code>\n                    </div>\n                </button>\n            </mat-menu>\n        </main>\n        <footer\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"savePlaylist()\">\n                Save Playlist\n            </button>\n        </footer>\n        <ng-template #duration_template let-row=\"row\">\n            <button\n                matTooltip=\"Set Custom Duration\"\n                [matMenuTriggerFor]=\"duration_menu\"\n                [class.pointer-events-none]=\"row.type !== 'image'\"\n            >\n                <code\n                    [class.bg-warning]=\"form.value.media_durations[row.id]\"\n                    [class.text-warning-content]=\"\n                        form.value.media_durations[row.id]\n                    \"\n                >\n                    {{\n                        form.value.media_durations[row.id] || row.duration\n                            | mediaDuration\n                    }}\n                </code>\n            </button>\n            <mat-menu #duration_menu=\"matMenu\" class=\"w-[20rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <mat-select\n                        [ngModel]=\"form.value.media_durations[row.id] || 0\"\n                        (ngModelChange)=\"setDuration(row.id, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                        <mat-option [value]=\"0\">Use Media Default</mat-option>\n                        <mat-option [value]=\"5\">5 seconds</mat-option>\n                        <mat-option [value]=\"10\">10 seconds</mat-option>\n                        <mat-option [value]=\"15\">15 seconds</mat-option>\n                        <mat-option [value]=\"30\">30 seconds</mat-option>\n                        <mat-option [value]=\"45\">45 seconds</mat-option>\n                        <mat-option [value]=\"60\">1 minute</mat-option>\n                        <mat-option [value]=\"75\"\n                            >1 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"90\"\n                            >1 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"105\"\n                            >1 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"120\">2 minute</mat-option>\n                        <mat-option [value]=\"135\"\n                            >2 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"150\"\n                            >2 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"165\"\n                            >2 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"180\">3 minute</mat-option>\n                        <mat-option [value]=\"195\"\n                            >3 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"210\"\n                            >3 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"225\"\n                            >3 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"240\">4 minute</mat-option>\n                        <mat-option [value]=\"255\"\n                            >4 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"270\"\n                            >4 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"285\"\n                            >4 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"300\">5 minute</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </mat-menu>\n        </ng-template>\n        <ng-template\n            #actions_template\n            let-row=\"row\"\n            let-first=\"first\"\n            let-last=\"last\"\n        >\n            <div class=\"w-full flex items-center justify-end\">\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Media to previous item\"\n                    [disabled]=\"first\"\n                    (click)=\"changeOrder(row, -1)\"\n                >\n                    <app-icon>arrow_upward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Media to next item\"\n                    [disabled]=\"last\"\n                    (click)=\"changeOrder(row, 1)\"\n                >\n                    <app-icon>arrow_downward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Preview Media\"\n                    (click)=\"previewMedia(row)\"\n                >\n                    <app-icon>visibility</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Remove Media from Playlist\"\n                    class=\"text-error\"\n                    (click)=\"removeMedia(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Playlist...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignagePlaylistModalComponent {\n    public loading = false;\n    public readonly playlist = this._data;\n    public readonly media = this._state.media;\n\n    public readonly search = new BehaviorSubject('');\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this.playlist.id || ''),\n        name: new FormControl(this.playlist.name || '', [Validators.required]),\n        description: new FormControl(this.playlist.description || ''),\n        media: new FormControl(this.playlist.media || []),\n        media_durations: new FormControl(this.playlist.media_durations || {}),\n    });\n\n    public readonly media_list = combineLatest([\n        this.media,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([media_list, { media }]) =>\n            (this.form.getRawValue().media || []).map(\n                (id) =>\n                    media_list.find((_) => _.id === id) ||\n                    new SignageMedia({ id })\n            )\n        )\n    );\n\n    public readonly new_media = combineLatest([\n        this.media,\n        this.search,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([all_media, search, _]) =>\n            all_media\n                .filter((_) => !this.form.getRawValue().media.includes(_.id))\n                .filter((_) =>\n                    _.name.toLowerCase().includes(search.toLowerCase())\n                )\n        )\n    );\n\n    @ViewChild('search_input')\n    public search_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: SignagePlaylist = {} as any,\n        private _state: SignageStateService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<SignagePlaylistModalComponent>\n    ) {}\n\n    public indexOf(id: string) {\n        return this.form.getRawValue().media.indexOf(id);\n    }\n\n    public focusSearchInput() {\n        setTimeout(() => this.search_input.nativeElement?.focus(), 100);\n    }\n\n    public async savePlaylist() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n        this.loading = true;\n        await this._state.savePlaylist(this.form.getRawValue()).catch((_) => {\n            notifyError('Error saving playlist');\n            this.loading = false;\n            throw _;\n        });\n        this._dialog_ref.close();\n    }\n\n    public setDuration(id: string, duration: number) {\n        const { media_durations } = this.form.getRawValue();\n        const new_media_durations = { ...media_durations };\n        new_media_durations[id] = duration;\n        this.form.patchValue({ media_durations: new_media_durations });\n    }\n\n    public addMedia(item: SignageMedia) {\n        const { id } = item;\n        const { media } = this.form.getRawValue();\n        this.form.patchValue({\n            media: [...media, id],\n        });\n    }\n\n    public removeMedia(item: SignageMedia) {\n        const { media, media_durations } = this.form.getRawValue();\n        const index = media.indexOf(item.id);\n        const new_media = [...media];\n        delete media_durations[item.id];\n        new_media.splice(index, 1);\n        this.form.patchValue({\n            media: new_media,\n            media_durations: { ...media_durations },\n        });\n    }\n\n    public changeOrder(item: SignageMedia, direction: number) {\n        const { media } = this.form.getRawValue();\n        const index = media.indexOf(item.id);\n        const new_media = [...media];\n        new_media.splice(index, 1);\n        new_media.splice(index + direction, 0, item.id);\n        this.form.patchValue({\n            media: new_media,\n        });\n    }\n\n    public previewMedia(item: SignageMedia) {\n        const { url, type, name } = item;\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name, save: false },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n}\n","import { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\nimport { SignageDisplay, SignagePlaylist } from './signage.classes';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport { SignageStateService } from './signage-state.service';\nimport { ta } from 'date-fns/locale';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'signage-display-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">{{ display.id ? 'Edit' : 'New' }} Display</h1>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            class=\"p-2 flex flex-col\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <label for=\"name\">Name<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <input\n                    matInput\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\"\n                />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n            <label for=\"description\">Description</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n            <label for=\"description\">Orientation<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <mat-select formControlName=\"orientation\">\n                    <mat-option value=\"landscape\">Landscape</mat-option>\n                    <mat-option value=\"portrait\">Portrait</mat-option>\n                </mat-select>\n                <mat-error>Orientation is required</mat-error>\n            </mat-form-field>\n            <label for=\"media\">Playlists</label>\n            <custom-table\n                class=\"block w-full mb-2\"\n                [dataSource]=\"playlist_list\"\n                [columns]=\"['_index', 'name', 'type', 'duration', 'actions']\"\n                [display_column]=\"[' ', 'Name', 'Type', 'Duration', ' ']\"\n                [column_size]=\"['3r', 'flex', '10r', '6r', '10r']\"\n                [template]=\"{\n                    duration: duration_template,\n                    actions: actions_template\n                }\"\n            >\n            </custom-table>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                [matMenuTriggerFor]=\"media_menu\"\n                (click)=\"focusSearchInput()\"\n            >\n                Add Playlist\n            </button>\n            <mat-menu #media_menu=\"matMenu\" class=\"w-[32rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <app-icon matPrefix class=\"text-2xl -left-1\">\n                        search\n                    </app-icon>\n                    <input\n                        #search_input\n                        matInput\n                        placeholder=\"Media Name\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    />\n                </mat-form-field>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let item of new_playlists | async | slice: 0:8\"\n                    (click)=\"addPlaylist(item)\"\n                >\n                    <div class=\"flex items-center w-full\">\n                        <div class=\"flex-1 truncate\">{{ item.name }}</div>\n                        <code class=\"bg-base-300 text-base-content\">{{\n                            item.duration | mediaDuration\n                        }}</code>\n                    </div>\n                </button>\n            </mat-menu>\n        </main>\n        <footer\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"saveDisplay()\">\n                Save Display\n            </button>\n        </footer>\n        <ng-template\n            #actions_template\n            let-row=\"row\"\n            let-first=\"first\"\n            let-last=\"last\"\n        >\n            <div class=\"w-full flex items-center justify-end\">\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Playlist to previous item\"\n                    [disabled]=\"first\"\n                    (click)=\"changeOrder(row, -1)\"\n                >\n                    <app-icon>arrow_upward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Playlist to next item\"\n                    [disabled]=\"last\"\n                    (click)=\"changeOrder(row, 1)\"\n                >\n                    <app-icon>arrow_downward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Preview Playlist\"\n                    (click)=\"previewPlaylist(row)\"\n                >\n                    <app-icon>visibility</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Remove Playlist from Display\"\n                    class=\"text-error\"\n                    (click)=\"removePlaylist(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n\n        <ng-template #duration_template let-data=\"data\">\n            <code class=\"bg-base-300 text-base-content\">\n                {{ data | mediaDuration }}\n            </code>\n        </ng-template>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Display...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignageDisplayModalComponent {\n    public loading = false;\n    public readonly display = this._data;\n    public readonly playlists = combineLatest([\n        this._state.playlists,\n        this._state.media,\n    ]).pipe(\n        map(([playlists, media]) =>\n            playlists.map((_) => ({\n                ..._,\n                duration: _.media.reduce(\n                    (a, b) =>\n                        a +\n                        (_.media_durations[b] ||\n                            media.find(({ id }) => id === b)?.duration ||\n                            0),\n                    0\n                ),\n            }))\n        ),\n        tap(console.log)\n    );\n\n    public readonly search = new BehaviorSubject('');\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this.display.id || ''),\n        name: new FormControl(this.display.name || '', [Validators.required]),\n        description: new FormControl(this.display.description || ''),\n        orientation: new FormControl(this.display.orientation || 'landscape', [\n            Validators.required,\n        ]),\n        playlists: new FormControl(this.display.playlists || []),\n    });\n\n    public readonly playlist_list = combineLatest([\n        this.playlists,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([playlist_list, _]) =>\n            (this.form.getRawValue().playlists || []).map(\n                (id) =>\n                    playlist_list.find((_) => _.id === id) ||\n                    new SignagePlaylist({ id })\n            )\n        )\n    );\n\n    public readonly new_playlists = combineLatest([\n        this.playlists,\n        this.search,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([all_playlist, search, _]) =>\n            all_playlist\n                .filter(\n                    (_) => !this.form.getRawValue().playlists.includes(_.id)\n                )\n                .filter((_) =>\n                    _.name.toLowerCase().includes(search.toLowerCase())\n                )\n        )\n    );\n\n    @ViewChild('search_input')\n    public search_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: SignageDisplay = {} as any,\n        private _state: SignageStateService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<SignageDisplayModalComponent>\n    ) {}\n\n    public focusSearchInput() {\n        setTimeout(() => this.search_input.nativeElement?.focus(), 100);\n    }\n\n    public async saveDisplay() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n        this.loading = true;\n        await this._state.saveDisplay(this.form.getRawValue()).catch((_) => {\n            notifyError('Error saving display.');\n            this.loading = false;\n            throw _;\n        });\n        this._dialog_ref.close();\n    }\n\n    public addPlaylist(item: SignagePlaylist) {\n        const { id } = item;\n        const { playlists } = this.form.getRawValue();\n        this.form.patchValue({\n            playlists: [...playlists, id],\n        });\n    }\n\n    public removePlaylist(item: SignagePlaylist) {\n        const { playlists } = this.form.getRawValue();\n        const index = playlists.indexOf(item.id);\n        const new_playlists = [...playlists];\n        new_playlists.splice(index, 1);\n        this.form.patchValue({\n            playlists: new_playlists,\n        });\n    }\n\n    public changeOrder(item: SignagePlaylist, direction: number) {\n        const { playlists } = this.form.getRawValue();\n        const index = playlists.indexOf(item.id);\n        const new_playlists = [...playlists];\n        new_playlists.splice(index, 1);\n        new_playlists.splice(index + direction, 0, item.id);\n        this.form.patchValue({\n            playlists: new_playlists,\n        });\n    }\n\n    public previewPlaylist(item: SignagePlaylist) {}\n}\n","import { Injectable } from '@angular/core';\nimport { uploadFiles } from '@placeos/cloud-uploads';\nimport {\n    notifyError,\n    notifySuccess,\n    predictableRandomInt,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    PlaceMetadata,\n    queryZones,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { Attachment } from '@placeos/users';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    takeWhile,\n} from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport {\n    SignageDisplay,\n    SignageMedia,\n    SignagePlaylist,\n} from './signage.classes';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\nimport { SignageDisplayModalComponent } from './signage-display-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SignageStateService {\n    private _loading = new BehaviorSubject(false);\n    private _change = new BehaviorSubject(0);\n    private _active_upload = new BehaviorSubject<Attachment>(null);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly media: Observable<SignageMedia[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-media').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map(\n            (_) =>\n                (_.details instanceof Array ? _.details : null) || [\n                    {\n                        id: `media-0001`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 15,\n                    },\n                    {\n                        id: `media-0002`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 30,\n                    },\n                    {\n                        id: `media-0003`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 60,\n                    },\n                    {\n                        id: `media-0004`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 15,\n                    },\n                    {\n                        id: `media-0005`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 30,\n                    },\n                    {\n                        id: `media-0006`,\n                        name: 'Welcome to PlaceOS',\n                        description: 'This is a sample media file',\n                        url: 'https://assets-global.website-files.com/6171e55cb416782d0a8e7a4c/6171e8d5fe3ffc10c0c800bc_PlaceOS-Logo-Dark-Alt.png',\n                        type: 'image',\n                        duration: 60,\n                    },\n                ]\n        ),\n        shareReplay(1)\n    );\n\n    public readonly playlists: Observable<SignagePlaylist[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-playlists').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : []))\n    );\n\n    public readonly displays: Observable<SignageDisplay[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-displays').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : []))\n    );\n\n    public readonly zones = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            queryZones({ parent_id: bld.id, tags: 'signage', limit: 100 }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((_) => _.data || [])\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public editPlaylist(playlist: SignagePlaylist = new SignagePlaylist()) {\n        const ref = this._dialog.open(SignagePlaylistModalComponent, {\n            data: playlist,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async savePlaylist(playlist: SignagePlaylist, remove = false) {\n        const bld = this._org.building.id;\n        const playlist_list =\n            (await this.playlists.pipe(take(1)).toPromise()) || [];\n        const idx = playlist_list.findIndex((_) => _.id === playlist.id);\n        if (idx >= 0) playlist_list.splice(idx, 1);\n        if (!playlist.id) (playlist as any).id = `playlist-${randomString(8)}`;\n        if (!remove) playlist_list.push(playlist);\n        await updateMetadata(bld, {\n            name: 'signage-playlists',\n            details: playlist_list,\n            description: 'Playlists for signage displays',\n        }).toPromise();\n        notifySuccess(`Successfully ${remove ? 'removed' : 'saved'} playlist.`);\n        this._change.next(Date.now());\n    }\n\n    public async removePlaylist(playlist: SignagePlaylist) {\n        await this.savePlaylist(playlist, true);\n    }\n\n    public editDisplay(display: SignageDisplay = new SignageDisplay()) {\n        const ref = this._dialog.open(SignageDisplayModalComponent, {\n            data: display,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async saveDisplay(display: SignageDisplay, remove = false) {\n        const bld = this._org.building.id;\n        const display_list = await this.displays.pipe(take(1)).toPromise();\n        const idx = display_list.findIndex((_) => _.id === display.id);\n        if (idx >= 0) display_list.splice(idx, 1);\n        if (!display.id) (display as any).id = `display-${randomString(8)}`;\n        if (!remove) display_list.push(display);\n        await updateMetadata(bld, {\n            name: 'signage-displays',\n            details: display_list,\n            description: 'Displays for signage displays',\n        }).toPromise();\n        notifySuccess(`Successfully ${remove ? 'removed' : 'saved'} display.`);\n        this._change.next(Date.now());\n    }\n\n    public async removeDisplay(display: SignageDisplay) {\n        await this.saveDisplay(display, true);\n    }\n\n    public previewMedia(item: SignageMedia) {\n        const { url, type, name } = item;\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name, save: false },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n\n    public previewFileMedia(media: File) {\n        const url = URL.createObjectURL(media);\n        const type = media.type.includes('image') ? 'image' : 'video';\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name: media.name, save: true, file: media },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n        ref.componentInstance.save.subscribe(async () => {\n            ref.componentInstance.loading = 'Saving...';\n            await this.addMedia(media).catch((e) => {\n                notifyError('Error saving media.');\n                ref.componentInstance.loading = '';\n                throw e;\n            });\n            ref.close();\n        });\n    }\n\n    public async addMedia(file: File) {\n        const media = await this._uploadFile(file);\n        const media_list = await this.media.pipe(take(1)).toPromise();\n        const check_landscape = new Promise((resolve) => {\n            var reader = new FileReader();\n            reader.onload = () => {\n                // file is loaded\n                if (file.type.includes('video')) {\n                    let video = document.createElement('video');\n                    video.addEventListener(\n                        'loadedmetadata',\n                        () => resolve(video.videoWidth > video.videoHeight),\n                        false\n                    );\n                    video.src = reader.result as string;\n                    return;\n                }\n                let img = new Image();\n                img.onload = () => resolve(img.width > img.height);\n                img.src = reader.result as string; // is the data URL because called with readAsDataURL\n            };\n            reader.readAsDataURL(file);\n        });\n        const is_landscape = await check_landscape;\n        media_list.push({\n            id: `media-${randomString(8)}`,\n            name: media.name,\n            description: '',\n            url: media.url,\n            type: file.type.includes('image') ? 'image' : 'video',\n            orientation: is_landscape ? 'landscape' : 'portrait',\n            duration: 15,\n        });\n        const bld = this._org.building.id;\n        await updateMetadata(bld, {\n            name: 'signage-media',\n            details: media_list,\n            description: 'Media for signage displays',\n        }).toPromise();\n        notifySuccess('Successfully added media.');\n        this._active_upload.next(null);\n        this._change.next(Date.now());\n    }\n\n    private _uploadFile(file: File): Promise<Attachment> {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.addEventListener('loadend', (e: any) => {\n                const arrayBuffer = e.target.result;\n                const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n                const upload_list = uploadFiles([blob], {\n                    file_name: file.name,\n                });\n                const upload = upload_list[0];\n                const upload_details: Attachment = {\n                    id: `${randomInt(9999_9999_9999)}`,\n                    name: file.name,\n                    progress: 0,\n                    size: file.size,\n                    created_at: Date.now(),\n                    url: '',\n                };\n                upload.status\n                    .pipe(takeWhile((_) => _.status !== 'complete', true))\n                    .subscribe(\n                        (state) => {\n                            if (upload.access_url)\n                                upload_details.url = upload.access_url;\n                            upload_details.progress = state.progress;\n                            if (state.status === 'error') {\n                                upload_details.progress = -1;\n                                reject();\n                            }\n                        },\n                        reject,\n                        () => resolve(upload_details)\n                    );\n                this._active_upload.next(upload_details);\n            });\n            fileReader.readAsArrayBuffer(file);\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-staff]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"p-8 h-28 flex items-center justify-between\">\n                    <h2 class=\"text-2xl font-medium\">\n                        Signage - {{ active_link }}\n                    </h2>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        (click)=\"newItem(active_link)\"\n                        *ngIf=\"active_link !== 'Media'\"\n                    >\n                        Add {{ singular(active_link) }}\n                    </button>\n                </div>\n                <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n                    @for (link of links; track link) {\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"'/signage/' + (link | lowercase)\"\n                        (click)=\"active_link = link\"\n                        [active]=\"active_link == link\"\n                    >\n                        {{ link }}\n                    </a>\n                    }\n                </nav>\n                <mat-tab-nav-panel class=\"flex-1 h-1/2 overflow-auto\" #tabPanel>\n                    <router-outlet></router-outlet>\n                </mat-tab-nav-panel>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class SignageComponent extends AsyncHandler implements OnInit {\n    public readonly loading = this._state.loading;\n    public links = ['Playlists', 'Media', 'Displays', 'Zones', 'Triggers'];\n    public active_link = this.links[0];\n\n    public singular(name: string) {\n        return name.replace(/s$/, '');\n    }\n\n    public newItem(name: string) {\n        switch (name) {\n            case 'Playlists':\n                this._state.editPlaylist();\n                break;\n            case 'Displays':\n                this._state.editDisplay();\n                break;\n            case 'Zones':\n                // this._state.editZone();\n                break;\n            case 'Triggers':\n                // this._state.editTrigger();\n                break;\n        }\n    }\n\n    constructor(private _state: SignageStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._router.events.subscribe((event) => {\n                if (event instanceof NavigationEnd) {\n                    this.active_link = this.links.find((_) =>\n                        this._router.url.includes(_.toLowerCase())\n                    );\n                }\n            })\n        );\n        this.active_link = this.links.find((_) =>\n            this._router.url.includes(_.toLowerCase())\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <!-- <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.only_onsite\"\n                (ngModelChange)=\"setFilters({ only_onsite: $event })\"\n                ><div class=\"text-xs\">Onsite Only</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar> -->\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class SignageTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    // public readonly filters = this._state.filters;\n    // /** Set filtered date */\n    // public readonly setDate = (date) => this._state.setFilters({ date });\n    // /** Set filtered date */\n    // public readonly setFilters = (filters) => this._state.setFilters(filters);\n    // /** Set filter string */\n    // public readonly setSearch = (str) => this._state.setSearchString(str);\n    // /** Update active zones for desks */\n    // public readonly updateZones = (zones) => {\n    //     this._router.navigate([], {\n    //         relativeTo: this._route,\n    //         queryParams: { zone_ids: zones.join(',') },\n    //     });\n    //     this._state.setFilters({ zones });\n    // };\n\n    constructor(\n        private _state: SignageStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                // this.updateZones(this.zones);\n            })\n        );\n        // this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { SignagePlaylist } from './signage.classes';\nimport { map, take, tap } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'signage-playlists',\n    template: `\n        <custom-table\n            class=\"block min-w-[48rem]\"\n            [dataSource]=\"playlist_list\"\n            [columns]=\"['name', 'description', 'media', 'duration', 'actions']\"\n            [display_column]=\"['Name', 'Description', 'Media', 'Duration', ' ']\"\n            [column_size]=\"['8r', 'flex', '10r', '6r', '5r']\"\n            [template]=\"{\n                media: media_template,\n                duration: duration_template,\n                actions: actions_template\n            }\"\n        ></custom-table>\n        <ng-template #media_template let-row=\"row\">\n            {{ row.media.length }} Media Item(s)\n        </ng-template>\n        <ng-template #duration_template let-row=\"row\">\n            <code>{{ row.duration | mediaDuration }}</code>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button icon matRipple (click)=\"editItem(row)\">\n                <app-icon>edit</app-icon>\n            </button>\n            <button icon matRipple class=\"text-error\" (click)=\"deleteItem(row)\">\n                <app-icon>delete</app-icon>\n            </button>\n        </ng-template>\n        <mat-progress-bar\n            class=\"absolute inset-x-0 bottom-0\"\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [``],\n})\nexport class SignagePlaylistsComponent {\n    public readonly loading = this._state.loading;\n    public readonly playlists = this._state.playlists;\n    public readonly media = this._state.media;\n\n    public readonly deleteItem = (i) => this._state.removePlaylist(i);\n    public readonly editItem = (i) => this._state.editPlaylist(i);\n\n    public readonly playlist_list = combineLatest([\n        this.playlists,\n        this.media,\n    ]).pipe(\n        map(([playlists, media]) =>\n            playlists.map((playlist) => ({\n                ...playlist,\n                duration: playlist.media.reduce(\n                    (acc, item) =>\n                        acc +\n                        (playlist.media_durations[item] ||\n                            media.find((m) => m.id === item)?.duration ||\n                            15),\n                    0\n                ),\n            }))\n        )\n    );\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'signage-displays',\n    template: ` <custom-table\n            class=\"block min-w-[52rem]\"\n            [dataSource]=\"display_list\"\n            [columns]=\"[\n                'name',\n                'description',\n                'playlists',\n                'orientation',\n                'duration',\n                'actions'\n            ]\"\n            [display_column]=\"[\n                'Name',\n                'Description',\n                'Media',\n                'Orientation',\n                'Duration',\n                ' '\n            ]\"\n            [column_size]=\"['8r', 'flex', '8r', '7r', '6r', '5r']\"\n            [template]=\"{\n                playlists: playlists_template,\n                duration: duration_template,\n                actions: actions_template\n            }\"\n        ></custom-table>\n        <ng-template #playlists_template let-row=\"row\">\n            {{ row.playlists.length }} Playlist(s)\n        </ng-template>\n        <ng-template #duration_template let-row=\"row\">\n            <code>{{ row.duration | mediaDuration }}</code>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button icon matRipple (click)=\"editItem(row)\">\n                <app-icon>edit</app-icon>\n            </button>\n            <button icon matRipple class=\"text-error\" (click)=\"deleteItem(row)\">\n                <app-icon>delete</app-icon>\n            </button>\n        </ng-template>\n        <mat-progress-bar\n            class=\"absolute inset-x-0 bottom-0\"\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>`,\n    styles: [``],\n})\nexport class SignageDisplaysComponent {\n    public readonly loading = this._state.loading;\n    public readonly displays = this._state.displays;\n    public readonly playlists = this._state.playlists;\n    public readonly media = this._state.media;\n\n    public readonly deleteItem = (i) => this._state.removePlaylist(i);\n    public readonly editItem = (i) => this._state.editPlaylist(i);\n\n    public readonly display_list = combineLatest([\n        this.displays,\n        this.playlists,\n        this.media,\n    ]).pipe(\n        map(([displays, playlists, media]) =>\n            (displays || []).map((display) => ({\n                ...display,\n                playlists:\n                    display.playlists?.map((id) =>\n                        playlists.find((i) => i.id === id)\n                    ) || [],\n                duration: display.playlists.reduce((acc, id) => {\n                    const playlist = playlists.find((_) => _.id === id);\n                    if (!playlist) return acc;\n                    return (\n                        acc +\n                        playlist.media.reduce(\n                            (acc, item) =>\n                                acc +\n                                (playlist.media_durations[item] ||\n                                    media.find((m) => m.id === item)\n                                        ?.duration ||\n                                    15),\n                            0\n                        )\n                    );\n                }, 0),\n            }))\n        )\n    );\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-zones',\n    template: ``,\n    styles: [``],\n})\nexport class SignageZonesComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-triggers',\n    template: ``,\n    styles: [``],\n})\nexport class SignageTriggersComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { AsyncHandler, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'signage-media',\n    template: `\n        <div\n            class=\"relative bg-base-200 min-h-full w-full\"\n            (document:dragenter)=\"onEnter($event)\"\n            (document:drop)=\"hideOverlay($event)\"\n        >\n            <ng-container *ngIf=\"!(loading | async); else load_template\">\n                <ng-container\n                    *ngIf=\"(media | async)?.length; else empty_template\"\n                >\n                    <div\n                        class=\"flex flex-wrap items-start justify-start w-full p-2\"\n                    >\n                        <div\n                            class=\"m-2 p-2 bg-base-100 rounded-lg overflow-hidden h-[13rem] border border-base-300 shadow\"\n                            *ngFor=\"let item of media | async\"\n                        >\n                            <button\n                                class=\"w-64 h-36 overflow-hidden bg-base-200 rounded m-0 p-0 relative\"\n                                (click)=\"previewMedia(item)\"\n                            >\n                                <img\n                                    [src]=\"item.url\"\n                                    class=\"object-cover w-full h-full\"\n                                />\n                                <div\n                                    class=\"absolute top-2 left-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{\n                                            item.type === 'image'\n                                                ? 'Image'\n                                                : 'Video'\n                                        }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute top-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ count || 0 }} Playlist(s)\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute bottom-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                    *ngIf=\"item.duration\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ item.duration | mediaDuration }}\n                                    </div>\n                                </div>\n                            </button>\n                            <div\n                                class=\"flex items-center justify-between space-x-2\"\n                            >\n                                <div class=\"truncate flex-1 w-1/2 px-2\">\n                                    {{ item.name }}\n                                </div>\n                                <button icon matRipple>\n                                    <app-icon>more_vert</app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n            <div class=\"absolute inset-0\" *ngIf=\"show_dropzone\">\n                <div class=\"absolute inset-0 bg-base-200\"></div>\n                <div class=\"absolute inset-0 bg-base-content opacity-70\"></div>\n                <div\n                    class=\"absolute inset-4 border-4 border-dashed border-neutral text-base-100 rounded-xl flex flex-col items-center justify-center\"\n                >\n                    <app-icon class=\"text-8xl\">upload</app-icon>\n                    <p>Drop file to upload file</p>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 w-full opacity-0\"\n                    (change)=\"previewFile($event)\"\n                />\n            </div>\n        </div>\n        <ng-template #empty_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 opacity-30\"\n            >\n                <app-icon class=\"text-8xl\">hide_image</app-icon>\n                <p>No media found.</p>\n            </div>\n        </ng-template>\n        <ng-template #load_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Loading...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                min-height: 100%;\n            }\n        `,\n    ],\n})\nexport class SignageMediaComponent extends AsyncHandler {\n    public readonly loading = this._state.loading;\n    public readonly media = this._state.media;\n    public show_dropzone = false;\n\n    public readonly previewMedia = (item) => this._state.previewMedia(item);\n\n    public onEnter(e) {\n        this.show_dropzone = e?.dataTransfer?.types.includes('Files');\n    }\n\n    public hideOverlay(e) {\n        if (!(e.target instanceof HTMLInputElement)) {\n            e.preventDefault();\n        }\n        this.timeout('hide_overlay', () => (this.show_dropzone = false));\n    }\n\n    constructor(private _state: SignageStateService) {\n        super();\n    }\n\n    public previewFile(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const file = files[0];\n        if (\n            file &&\n            (file.type.includes('image') || file.type.includes('video'))\n        ) {\n            this._state.previewFileMedia(file);\n        } else {\n            notifyError('Invalid file type.');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { SignageComponent } from './signage.component';\nimport { SignageTopbarComponent } from './signage-topbar.component';\nimport { SignagePlaylistsComponent } from './signage-playlists.component';\nimport { SignageDisplaysComponent } from './signage-displays.component';\nimport { SignageZonesComponent } from './signage-zones.component';\nimport { SignageTriggersComponent } from './signage-triggers.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SignageMediaComponent } from './signage-media.component';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\nimport { SignageDisplayModalComponent } from './signage-display-modal.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: SignageComponent,\n        children: [\n            { path: '', redirectTo: 'playlists', pathMatch: 'full' },\n            { path: 'playlists', component: SignagePlaylistsComponent },\n            { path: 'media', component: SignageMediaComponent },\n            { path: 'displays', component: SignageDisplaysComponent },\n            { path: 'zones', component: SignageZonesComponent },\n            { path: 'triggers', component: SignageTriggersComponent },\n            { path: '*', redirectTo: 'playlists', pathMatch: 'full' },\n        ],\n    },\n];\n\nexport const COMPONENTS: Type<any>[] = [\n    SignageComponent,\n    SignageTopbarComponent,\n    SignagePlaylistsComponent,\n    SignageMediaComponent,\n    SignageDisplaysComponent,\n    SignageZonesComponent,\n    SignageTriggersComponent,\n    SignageMediaPreviewModalComponent,\n    SignagePlaylistModalComponent,\n    SignageDisplayModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        ComponentsModule,\n        RouterModule.forChild(ROUTES),\n        MatTabsModule,\n    ],\n})\nexport class SignageModule {}\n"],"x_google_ignoreList":[]}