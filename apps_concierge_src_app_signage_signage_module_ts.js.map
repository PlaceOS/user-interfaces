{"version":3,"file":"apps_concierge_src_app_signage_signage_module_ts.js","mappings":"yXAAM,MAAOA,EAOTC,YAAYC,EAAkC,IAC1CC,KAAKC,GAAKF,EAAME,IAAM,GACtBD,KAAKE,KAAOH,EAAMG,MAAQ,GAC1BF,KAAKG,YAAcJ,EAAMI,aAAe,GACxCH,KAAKI,MAAQL,EAAMK,OAAS,GAC5BJ,KAAKK,gBAAkBN,EAAMM,iBAAmB,EACpD,EAGE,MAAOC,GAOTR,YAAYC,EAAiC,IACzCC,KAAKC,GAAKF,EAAME,IAAM,GACtBD,KAAKE,KAAOH,EAAMG,MAAQ,GAC1BF,KAAKG,YAAcJ,EAAMI,aAAe,GACxCH,KAAKO,YAAcR,EAAMQ,aAAe,YACxCP,KAAKQ,UAAYT,EAAMS,WAAa,EACxC,EAmCE,MAAOC,GASTX,YAAYC,EAA+B,IACvCC,KAAKC,GAAKF,EAAME,IAAM,GACtBD,KAAKE,KAAOH,EAAMG,MAAQ,GAC1BF,KAAKG,YAAcJ,EAAMI,aAAe,GACxCH,KAAKU,KAAOX,EAAMW,MAAQ,QAC1BV,KAAKW,SAAWZ,EAAMY,UAAY,GAClCX,KAAKO,YAAcR,EAAMQ,aAAe,YACxCP,KAAKY,IAAMb,EAAMa,KAAO,EAC5B,iFC7DYC,MAAA,kCAGIA,MAAA,MAAAC,EAAAC,SAAAC,WAAAH,iCAEJA,MAAA,oCAGIA,MAAA,MAAAC,EAAAC,SAAAC,WAAAH,kCAXRA,MADJ,WACIA,CADwD,WASpDA,MALA,EAAAI,GAAA,YAKAJ,CADE,EAAAK,GAAA,eASVL,gCAZaA,MAAA,GAAAA,MAAA,iBAAAC,EAAAJ,MAKAG,cAAA,iBAAAC,EAAAJ,gDAYTG,MAJJ,cAIIA,CADH,eACsCA,MAAA,mBAAAA,MAAAM,GAAA,MAAAL,EAAAD,QAAA,OAAAA,MAASC,EAAAM,KAAAC,OAAW,GACnDR,MAAA,kBAERA,qCAEIA,MAAA,aAGIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,GACPA,gCAFiBA,cAAA,eACVA,MAAA,GAAAA,MAAAC,EAAAQ,UAMZ,IAAMC,EAAiC,MAAxC,MAAOA,EASTzB,YAEYC,GAAAC,KAAAD,QAVcC,KAAAoB,KAAO,IAAII,MAC9BxB,KAAAsB,QAAU,GACDtB,KAAAe,SAAWf,KAAKD,MAAMa,IACtBZ,KAAAU,KAAOV,KAAKD,MAAMW,KAClBV,KAAAE,KAAOF,KAAKD,MAAMG,KAClBF,KAAAyB,KAAOzB,KAAKD,MAAM0B,KAClBzB,KAAA0B,UAA+B,IAApB1B,KAAKD,MAAMqB,IAWnC,CAACO,SAAA3B,KAAA,mBAAA4B,iBAlBKL,GAAiCV,MAU9BgB,MAAe,EAAAF,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MAVlBR,EAAiCS,UAAA,kCAAAC,QAAA,CAAAb,KAAA,QAAAc,MAAA,GAAAC,KAAA,EAAAC,OAAA,q4BAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA1ClCzB,MAHJ,aAGIA,CADH,UACoBA,MAAA,GAAoBA,QAEjCA,MADJ,aACIA,CADoC,cAC1BA,MAAA,WAElBA,YA2BAA,MA1BA,EAAA2B,GAAA,aA0BA3B,CA1B4D,EAAA4B,GAAA,eA0B5D5B,CALC,EAAA6B,GAAA,yBAAA7B,8BA1BoBA,MAAA,GAAAA,MAAA,aAAA0B,EAAArC,KAAA,IAKMW,MAAA,GAAgBA,MAAhB,QAAA0B,EAAAjB,QAAgBT,CAAA,WAAA8B,GAmBtC9B,cAAA,OAAA0B,EAAAb,WAAAa,EAAAjB,2DAkBAC,CAAiC,yUC9B9BV,MADJ,cACIA,CADqD,cAC3CA,MAAA,WACdA,oDAiEIA,MAAA,eAGIA,MAAA,yBAAA+B,EAAA/B,MAAAgC,GAAAC,UAAAC,EAAAlC,MAAA,UAAAA,MAASkC,EAAAC,SAAAJ,GAAc,GAGnB/B,MADJ,WACIA,CADkC,YACLA,MAAA,GAAeA,QAC5CA,MAAA,aAAyBA,MAAA,GAAeA,QACxCA,MAAA,aAA4CA,MAAA,4BAIpDA,wCANqCA,MAAA,GAAAA,MAAA+B,EAAA1C,MACJW,MAAA,GAAAA,MAAA+B,EAAAlC,MACmBG,MAAA,GAAAA,YAAA,IAAA+B,EAAAjC,qDAlExDE,MALJ,YAKIA,CADH,cACqBA,MAAA,UAAIA,MAAA,aAAeA,MAAA,OAAQA,UAC7CA,MAAA,uBACIA,MAAA,cAMAA,MAAA,eAAWA,MAAA,sBACfA,UACAA,MAAA,cAAyBA,MAAA,kBAAWA,QACpCA,MAAA,wBACIA,MAAA,kBAMJA,QACAA,MAAA,eAAmBA,MAAA,YAAKA,QACxBA,MAAA,sBAYAA,MAAA,gBAKIA,MAAA,mBAAAA,MAAAoC,GAAA,MAAAF,EAAAlC,QAAA,OAAAA,MAASkC,EAAAG,mBAAkB,GAE3BrC,MAAA,kBACJA,QAMQA,MALR,mBAKQA,CALuD,uBAKvDA,CADH,kBAEOA,MAAA,eACJA,QACAA,MAAA,iBAKIA,MAAA,yBAAAsC,GAAAtC,MAAAoC,GAAA,MAAAF,EAAAlC,QAAA,OAAAA,MAAiBkC,EAAAK,OAAAC,KAAAF,GAAmB,GAG5CtC,UACAA,MAAA,GAAAyC,GAAA,qDAcRzC,oEA5EIA,MAAA,YAAAkC,EAAAQ,MA0BI1C,MAAA,IAIAA,MAJA,aAAAkC,EAAAS,WAIA3C,CAJyB,UAAAA,MAAA,GAAA4C,IAIzB5C,CAH6D,iBAAAA,MAAA,GAAA6C,IAG7D7C,CAFyD,cAAAA,MAAA,GAAA8C,IAEzD9C,CADkD,WAAAA,MAAA,GAAA+C,GAAAC,EAAAC,IAWlDjD,cAAA,oBAAAkD,GAiBQlD,MAAA,GAEAA,MAFA,UAAAkC,EAAAK,OAAAY,WAEAnD,CAF6B,iBAAAA,MAAA,GAAAoD,IAOhBpD,MAAA,GAAAA,MAAA,UAAAA,MAAA,MAAAA,MAAA,MAAAkC,EAAAmB,WAAA,gDAiBzBrD,MAJJ,cAIIA,CADH,eACsCA,MAAA,mBAAAA,MAAAsD,GAAA,MAAApB,EAAAlC,QAAA,OAAAA,MAASkC,EAAAqB,eAAc,GACtDvD,MAAA,qBAERA,oDAOQA,MALJ,cAKIA,CADH,UAOOA,MAAA,4BAKRA,UAMQA,MALR,kBAKQA,CAL0D,sBAK1DA,CADH,mBAGOA,MAAA,yBAAAsC,GAAA,MAAAkB,EAAAxD,MAAAyD,GAAAC,IAAAxB,EAAAlC,QAAA,OAAAA,MAAiBkC,EAAAyB,YAAAH,EAAApE,GAAAkD,GAA2B,GAG5CtC,MAAA,mBAAwBA,MAAA,uBAAiBA,QACzCA,MAAA,oBAAwBA,MAAA,gBAASA,QACjCA,MAAA,oBAAyBA,MAAA,iBAAUA,QACnCA,MAAA,oBAAyBA,MAAA,iBAAUA,QACnCA,MAAA,oBAAyBA,MAAA,iBAAUA,QACnCA,MAAA,oBAAyBA,MAAA,iBAAUA,QACnCA,MAAA,oBAAyBA,MAAA,eAAQA,QACjCA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBAA0BA,MAAA,eAAQA,QAClCA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBAA0BA,MAAA,eAAQA,QAClCA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBAA0BA,MAAA,eAAQA,QAClCA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBACKA,MAAA,0BAAmBA,QAExBA,MAAA,oBAA0BA,MAAA,eAGtCA,yDAzEIA,MAAA,gCAAAwD,EAAA3D,MADAG,MAAA,oBAAA4D,GAII5D,QACAA,MADA,aAAAkC,EAAAQ,KAAAmB,MAAArE,gBAAAgE,EAAApE,IACAY,CADuD,uBAAAkC,EAAAQ,KAAAmB,MAAArE,gBAAAgE,EAAApE,KAKvDY,cAAA,IAAAA,MAAA,KAAAkC,EAAAQ,KAAAmB,MAAArE,gBAAAgE,EAAApE,KAAAoE,EAAA1D,UAAA,KAYIE,MAAA,GAEAA,MAFA,UAAAkC,EAAAQ,KAAAmB,MAAArE,gBAAAgE,EAAApE,KAAA,EAEAY,CAFmD,iBAAAA,MAAA,GAAAoD,IAIvCpD,cAAA,WACAA,MAAA,GAAAA,MAAA,WACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YAGAA,MAAA,GAAAA,MAAA,YAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aACAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aACAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aACAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,aAGAA,MAAA,GAAAA,MAAA,uDAYpBA,MADJ,WACIA,CAD8C,eAM1CA,MAAA,yBAAA8D,EAAA9D,MAAA+D,GAAAL,IAAAxB,EAAAlC,QAAA,OAAAA,MAASkC,EAAA8B,YAAAF,GAAA,GAAoB,GAE7B9D,MAAA,cAAUA,MAAA,kBACdA,UACAA,MAAA,eAKIA,MAAA,yBAAA8D,EAAA9D,MAAA+D,GAAAL,IAAAxB,EAAAlC,QAAA,OAAAA,MAASkC,EAAA8B,YAAAF,EAAiB,GAAE,GAE5B9D,MAAA,cAAUA,MAAA,oBACdA,UACAA,MAAA,eAIIA,MAAA,yBAAA8D,EAAA9D,MAAA+D,GAAAL,IAAAxB,EAAAlC,QAAA,OAAAA,MAASkC,EAAA+B,aAAAH,GAAiB,GAE1B9D,MAAA,cAAUA,MAAA,gBACdA,UACAA,MAAA,gBAKIA,MAAA,yBAAA8D,EAAA9D,MAAA+D,GAAAL,IAAAxB,EAAAlC,QAAA,OAAAA,MAASkC,EAAAgC,YAAAJ,GAAgB,GAEzB9D,MAAA,eAAUA,MAAA,aAElBA,6CA/BQA,cAAA,WAAAmE,GASAnE,MAAA,GAAAA,MAAA,WAAAoE,2BAyBRpE,MAAA,aACIA,MAAA,oBACAA,MAAA,UAAgBA,MAAA,wBACpBA,iBAFiBA,cAAA,gBAOtB,IAAMqE,EAA6B,MAApC,MAAOA,EA6CTpF,YACqCC,EAAyB,GAClDoF,EACAC,EACAC,GAHyBrF,KAAAD,QACzBC,KAAAmF,SACAnF,KAAAoF,UACApF,KAAAqF,cAhDLrF,KAAAsB,SAAU,EACDtB,KAAAsF,SAAWtF,KAAKD,MAChBC,KAAAI,MAAQJ,KAAKmF,OAAO/E,MAEpBJ,KAAAoD,OAAS,IAAImC,IAAgB,IAE7BvF,KAAAuD,KAAO,IAAIiC,KAAU,CACjCvF,GAAI,IAAIwF,KAAYzF,KAAKsF,SAASrF,IAAM,IACxCC,KAAM,IAAIuF,KAAYzF,KAAKsF,SAASpF,MAAQ,GAAI,CAACwF,KAAWC,WAC5DxF,YAAa,IAAIsF,KAAYzF,KAAKsF,SAASnF,aAAe,IAC1DC,MAAO,IAAIqF,KAAYzF,KAAKsF,SAASlF,OAAS,IAC9CC,gBAAiB,IAAIoF,KAAYzF,KAAKsF,SAASjF,iBAAmB,MAGtDL,KAAAwD,cAAaoC,MAAc,CACvC5F,KAAKI,MACLJ,KAAKuD,KAAKsC,aAAaC,QAAKC,KAAU/F,KAAKuD,KAAKyC,kBACjDF,QACCG,KAAI,EAAEzC,SACDxD,KAAKuD,KAAKyC,cAAc5F,OAAS,IAAI6F,IACjChG,GACGuD,EAAW0C,KAAMC,GAAMA,EAAElG,KAAOA,IAChC,IAAIQ,GAAa,CAAER,UAKnBD,KAAAkE,aAAY0B,MAAc,CACtC5F,KAAKI,MACLJ,KAAKoD,OACLpD,KAAKuD,KAAKsC,aAAaC,QAAKC,KAAU/F,KAAKuD,KAAKyC,kBACjDF,QACCG,KAAI,EAAEG,EAAWhD,EAAQ+C,KACrBC,EACKC,OAAQF,IAAOnG,KAAKuD,KAAKyC,cAAc5F,MAAMkG,SAASH,EAAElG,KACxDoG,OAAQF,GACLA,EAAEjG,KAAKqG,cAAcD,SAASlD,EAAOmD,iBAalD,CAEIC,QAAQvG,GACX,OAAOD,KAAKuD,KAAKyC,cAAc5F,MAAMoG,QAAQvG,EACjD,CAEOiD,mBACHuD,WAAW,IAAMzG,KAAK0G,aAAaC,eAAeC,QAAS,IAC/D,CAEaxC,eAAY,IAAAyC,EAAA7G,KAAA,SAAA8G,KAAA,YACrBD,EAAKtD,KAAKwD,mBACVF,EAAKtD,KAAKyD,0BACNH,EAAKtD,KAAK0D,UACdJ,EAAKvF,SAAU,QACTuF,EAAK1B,OAAOf,aAAayC,EAAKtD,KAAKyC,eAAekB,MAAOf,IAC3DgB,cAAY,yBACZN,EAAKvF,SAAU,EACT6E,IAEVU,EAAKxB,YAAY+B,QAAQ,EAVJ,EAWzB,CAEO5C,YAAYvE,EAAYU,GAC3B,MAAQN,mBAAoBL,KAAKuD,KAAKyC,cAChCqB,EAAsB,IAAKhH,GACjCgH,EAAoBpH,GAAMU,EAC1BX,KAAKuD,KAAK+D,WAAW,CAAEjH,gBAAiBgH,GAC5C,CAEOrE,SAASuE,GACZ,MAAQtH,MAAOsH,GACPnH,SAAUJ,KAAKuD,KAAKyC,cAC5BhG,KAAKuD,KAAK+D,WAAW,CACjBlH,MAAO,IAAIA,EAAOH,IAE1B,CAEO8E,YAAYwC,GACf,MAAQnH,QAAOC,mBAAoBL,KAAKuD,KAAKyC,cACvCwB,EAAQpH,EAAMoG,QAAQe,EAAKtH,IAC3BiE,EAAY,IAAI9D,UACfC,EAAgBkH,EAAKtH,IAC5BiE,EAAUuD,OAAOD,EAAO,GACxBxH,KAAKuD,KAAK+D,WAAW,CACjBlH,MAAO8D,EACP7D,gBAAiB,IAAKA,IAE9B,CAEOwE,YAAY0C,EAAoBG,GACnC,MAAQtH,SAAUJ,KAAKuD,KAAKyC,cACtBwB,EAAQpH,EAAMoG,QAAQe,EAAKtH,IAC3BiE,EAAY,IAAI9D,GACtB8D,EAAUuD,OAAOD,EAAO,GACxBtD,EAAUuD,OAAOD,EAAQE,EAAW,EAAGH,EAAKtH,IAC5CD,KAAKuD,KAAK+D,WAAW,CACjBlH,MAAO8D,GAEf,CAEOY,aAAayC,GAChB,MAAQ3G,MAAKF,OAAMR,QAASqH,EAChBvH,KAAKoF,QAAQuC,KAAKpG,EAAmC,CAC7DqG,KAAM,CAAEhH,MAAKF,OAAMR,OAAMkB,MAAM,KAE/ByG,cAAcC,UAAU,IAAMC,IAAIC,gBAAgBpH,GAC1D,CAACe,SAAA3B,KAAA,mBAAA4B,iBArHQsD,GAA6BrE,MA8C1BgB,MAAehB,MAAAoH,GAAApH,MAAAqH,MAAArH,MAAAqH,MAAA,EAAAvG,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MA9ClBmD,EAA6BlD,UAAA,6BAAAmG,UAAA,SAAA7F,EAAAC,MAAA,EAAAD,yuEA/N9BzB,MAHJ,aAGIA,CADH,UACoBA,MAAA,GAA2CA,QAC5DA,MAAA,EAAAuH,GAAA,gBAGJvH,QAkNAA,MAjNA,EAAAwH,GAAA,eAiNAxH,CA7MC,EAAAyH,GAAA,gBA6MDzH,CAhIC,EAAA0H,GAAA,2BAAA1H,MAgIDA,CA3H8C,EAAA2H,GAAA,0BAAA3H,MA2H9CA,CAvCC,GAAA4H,GAAA,yBAAA5H,+BA/KoBA,MAAA,GAAAA,MAAA,GAAA0B,EAAA+C,SAAArF,GAAA,0BACwBY,cAAA,QAAA0B,EAAAjB,SAOxCT,QAAgBA,MAAhB,QAAA0B,EAAAjB,QAAgBT,CAAA,WAAA6H,GA6EhB7H,cAAA,QAAA0B,EAAAjB,kKA0IA4D,CAA6B,qQC9N1BrE,MADJ,cACIA,CADqD,cAC3CA,MAAA,WACdA,oDAyEIA,MAAA,eAGIA,MAAA,yBAAA+B,EAAA/B,MAAAgC,GAAAC,UAAAC,EAAAlC,MAAA,UAAAA,MAASkC,EAAA4F,YAAA/F,GAAiB,GAGtB/B,MADJ,WACIA,CADkC,YACLA,MAAA,GAAeA,QAC5CA,MAAA,aAA4CA,MAAA,4BAIpDA,wCALqCA,MAAA,GAAAA,MAAA+B,EAAA1C,MACeW,MAAA,GAAAA,YAAA,IAAA+B,EAAAjC,qDAzExDE,MALJ,YAKIA,CADH,cACqBA,MAAA,UAAIA,MAAA,aAAeA,MAAA,OAAQA,UAC7CA,MAAA,uBACIA,MAAA,cAMAA,MAAA,eAAWA,MAAA,sBACfA,UACAA,MAAA,cAAyBA,MAAA,kBAAWA,QACpCA,MAAA,wBACIA,MAAA,kBAMJA,QACAA,MAAA,eAAyBA,MAAA,kBAAWA,MAAA,cAAeA,MAAA,QAAQA,UAGnDA,MAFR,uBAEQA,CAF4C,mBAE5CA,CADsC,oBACRA,MAAA,gBAASA,QACvCA,MAAA,oBAA6BA,MAAA,eACjCA,UACAA,MAAA,gBAAWA,MAAA,8BACfA,UACAA,MAAA,eAAmBA,MAAA,gBAASA,QAC5BA,MAAA,sBAYAA,MAAA,gBAKIA,MAAA,mBAAAA,MAAAoC,GAAA,MAAAF,EAAAlC,QAAA,OAAAA,MAASkC,EAAAG,mBAAkB,GAE3BrC,MAAA,qBACJA,QAMQA,MALR,mBAKQA,CALuD,uBAKvDA,CADH,kBAEOA,MAAA,eACJA,QACAA,MAAA,iBAKIA,MAAA,yBAAAsC,GAAAtC,MAAAoC,GAAA,MAAAF,EAAAlC,QAAA,OAAAA,MAAiBkC,EAAAK,OAAAC,KAAAF,GAAmB,GAG5CtC,UACAA,MAAA,GAAA+H,GAAA,qDAaR/H,oEAnFIA,MAAA,YAAAkC,EAAAQ,MAkCI1C,MAAA,IAIAA,MAJA,aAAAkC,EAAA8F,cAIAhI,CAJ4B,UAAAA,MAAA,GAAA4C,IAI5B5C,CAH6D,iBAAAA,MAAA,GAAA6C,IAG7D7C,CAFyD,cAAAA,MAAA,GAAA8C,IAEzD9C,CADkD,WAAAA,MAAA,GAAA+C,GAAAkF,EAAAC,IAWlDlI,cAAA,oBAAAkD,GAiBQlD,MAAA,GAEAA,MAFA,UAAAkC,EAAAK,OAAAY,WAEAnD,CAF6B,iBAAAA,MAAA,GAAAoD,KAOhBpD,MAAA,GAAAA,MAAA,UAAAA,MAAA,MAAAA,MAAA,MAAAkC,EAAAiG,eAAA,gDAgBzBnI,MAJJ,cAIIA,CADH,eACsCA,MAAA,mBAAAA,MAAAsD,GAAA,MAAApB,EAAAlC,QAAA,OAAAA,MAASkC,EAAAkG,cAAa,GACrDpI,MAAA,oBAERA,oDAQQA,MADJ,WACIA,CAD8C,eAM1CA,MAAA,yBAAAwD,EAAAxD,MAAAyD,GAAAC,IAAAxB,EAAAlC,QAAA,OAAAA,MAASkC,EAAA8B,YAAAR,GAAA,GAAoB,GAE7BxD,MAAA,cAAUA,MAAA,kBACdA,UACAA,MAAA,eAKIA,MAAA,yBAAAwD,EAAAxD,MAAAyD,GAAAC,IAAAxB,EAAAlC,QAAA,OAAAA,MAASkC,EAAA8B,YAAAR,EAAiB,GAAE,GAE5BxD,MAAA,cAAUA,MAAA,oBACdA,UACAA,MAAA,eAIIA,MAAA,yBAAAwD,EAAAxD,MAAAyD,GAAAC,IAAAxB,EAAAlC,QAAA,OAAAA,MAASkC,EAAAmG,gBAAA7E,GAAoB,GAE7BxD,MAAA,cAAUA,MAAA,gBACdA,UACAA,MAAA,gBAKIA,MAAA,yBAAAwD,EAAAxD,MAAAyD,GAAAC,IAAAxB,EAAAlC,QAAA,OAAAA,MAASkC,EAAAoG,eAAA9E,GAAmB,GAE5BxD,MAAA,eAAUA,MAAA,aAElBA,6CA/BQA,cAAA,WAAAuI,GASAvI,MAAA,GAAAA,MAAA,WAAAwI,8BA0BRxI,MAAA,aACIA,MAAA,4BACJA,6BADIA,cAAA,IAAAA,MAAA,IAAAyI,GAAA,6BAIJzI,MAAA,aACIA,MAAA,oBACAA,MAAA,UAAgBA,MAAA,uBACpBA,iBAFiBA,cAAA,gBAOtB,IAAM0I,EAA4B,MAAnC,MAAOA,EAmETzJ,YACqCC,EAAwB,GACjDoF,EACAC,EACAC,GAHyBrF,KAAAD,QACzBC,KAAAmF,SACAnF,KAAAoF,UACApF,KAAAqF,cAtELrF,KAAAsB,SAAU,EACDtB,KAAAwJ,QAAUxJ,KAAKD,MACfC,KAAAQ,aAAYoF,MAAc,CACtC5F,KAAKmF,OAAO3E,UACZR,KAAKmF,OAAO/E,QACb0F,QACCG,KAAI,EAAEzF,EAAWJ,KACbI,EAAUyF,IAAKE,QACRA,EACHxF,SAAUwF,EAAE/F,MAAMqJ,OACd,CAACC,EAAGC,IACAD,GACCvD,EAAE9F,gBAAgBsJ,IACfvJ,EAAM8F,KAAK,EAAGjG,QAASA,IAAO0J,IAAIhJ,UAClC,GACR,QAEL,EAEPiJ,MAAIC,QAAQC,MAGA9J,KAAAoD,OAAS,IAAImC,IAAgB,IAE7BvF,KAAAuD,KAAO,IAAIiC,KAAU,CACjCvF,GAAI,IAAIwF,KAAYzF,KAAKwJ,QAAQvJ,IAAM,IACvCC,KAAM,IAAIuF,KAAYzF,KAAKwJ,QAAQtJ,MAAQ,GAAI,CAACwF,KAAWC,WAC3DxF,YAAa,IAAIsF,KAAYzF,KAAKwJ,QAAQrJ,aAAe,IACzDI,YAAa,IAAIkF,KAAYzF,KAAKwJ,QAAQjJ,aAAe,YAAa,CAClEmF,KAAWC,WAEfnF,UAAW,IAAIiF,KAAYzF,KAAKwJ,QAAQhJ,WAAa,MAGzCR,KAAA6I,iBAAgBjD,MAAc,CAC1C5F,KAAKQ,UACLR,KAAKuD,KAAKsC,aAAaC,QAAKC,KAAU/F,KAAKuD,KAAKyC,kBACjDF,QACCG,KAAI,EAAE4C,EAAe1C,MAChBnG,KAAKuD,KAAKyC,cAAcxF,WAAa,IAAIyF,IACrChG,GACG4I,EAAc3C,KAAMC,GAAMA,EAAElG,KAAOA,IACnC,IAAIJ,EAAgB,CAAEI,UAKtBD,KAAAgJ,iBAAgBpD,MAAc,CAC1C5F,KAAKQ,UACLR,KAAKoD,OACLpD,KAAKuD,KAAKsC,aAAaC,QAAKC,KAAU/F,KAAKuD,KAAKyC,kBACjDF,QACCG,KAAI,EAAE8D,EAAc3G,EAAQ+C,KACxB4D,EACK1D,OACIF,IAAOnG,KAAKuD,KAAKyC,cAAcxF,UAAU8F,SAASH,EAAElG,KAExDoG,OAAQF,GACLA,EAAEjG,KAAKqG,cAAcD,SAASlD,EAAOmD,iBAalD,CAEIrD,mBACHuD,WAAW,IAAMzG,KAAK0G,aAAaC,eAAeC,QAAS,IAC/D,CAEaqC,cAAW,IAAApC,EAAA7G,KAAA,SAAA8G,KAAA,YACpBD,EAAKtD,KAAKwD,mBACVF,EAAKtD,KAAKyD,0BACNH,EAAKtD,KAAK0D,UACdJ,EAAKvF,SAAU,QACTuF,EAAK1B,OAAO8D,YAAYpC,EAAKtD,KAAKyC,eAAekB,MAAOf,IAC1DgB,cAAY,yBACZN,EAAKvF,SAAU,EACT6E,IAEVU,EAAKxB,YAAY+B,QAAQ,EAVL,EAWxB,CAEOuB,YAAYpB,GACf,MAAQtH,MAAOsH,GACP/G,aAAcR,KAAKuD,KAAKyC,cAChChG,KAAKuD,KAAK+D,WAAW,CACjB9G,UAAW,IAAIA,EAAWP,IAElC,CAEOkJ,eAAe5B,GAClB,MAAQ/G,aAAcR,KAAKuD,KAAKyC,cAC1BwB,EAAQhH,EAAUgG,QAAQe,EAAKtH,IAC/B+I,EAAgB,IAAIxI,GAC1BwI,EAAcvB,OAAOD,EAAO,GAC5BxH,KAAKuD,KAAK+D,WAAW,CACjB9G,UAAWwI,GAEnB,CAEOnE,YAAY0C,EAAuBG,GACtC,MAAQlH,aAAcR,KAAKuD,KAAKyC,cAC1BwB,EAAQhH,EAAUgG,QAAQe,EAAKtH,IAC/B+I,EAAgB,IAAIxI,GAC1BwI,EAAcvB,OAAOD,EAAO,GAC5BwB,EAAcvB,OAAOD,EAAQE,EAAW,EAAGH,EAAKtH,IAChDD,KAAKuD,KAAK+D,WAAW,CACjB9G,UAAWwI,GAEnB,CAEOE,gBAAgB3B,GAAwB,CAAC5F,SAAA3B,KAAA,mBAAA4B,iBAxHvC2H,GAA4B1I,MAoEzBgB,MAAehB,MAAAoH,GAAApH,MAAAqH,MAAArH,MAAAqH,MAAA,EAAAvG,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MApElBwH,EAA4BvH,UAAA,4BAAAmG,UAAA,SAAA7F,EAAAC,MAAA,EAAAD,+nEA7J7BzB,MAHJ,aAGIA,CADH,UACoBA,MAAA,GAAyCA,QAC1DA,MAAA,EAAAmJ,GAAA,gBAGJnJ,QAgJAA,MA/IA,EAAAoJ,GAAA,eA+IApJ,CA3IC,EAAAqJ,GAAA,eA2IDrJ,CAvDC,EAAAsJ,GAAA,0BAAAtJ,MAuDDA,CA7CC,EAAAuJ,GAAA,yBAAAvJ,MA6CDA,CALgD,GAAAwJ,GAAA,yBAAAxJ,+BA/I3BA,MAAA,GAAAA,MAAA,GAAA0B,EAAAiH,QAAAvJ,GAAA,yBACwBY,cAAA,QAAA0B,EAAAjB,SAOxCT,QAAgBA,MAAhB,QAAA0B,EAAAjB,QAAgBT,CAAA,WAAAyJ,GAoFhBzJ,cAAA,QAAA0B,EAAAjB,kKAiEAiI,CAA4B,KC3I5BgB,EAAmB,MAA1B,MAAOA,EA4DTzK,YACY0K,EACApF,GADApF,KAAAwK,OACAxK,KAAAoF,UA7DJpF,KAAAyK,SAAW,IAAIlF,KAAgB,GAC/BvF,KAAA0K,QAAU,IAAInF,IAAgB,GAC9BvF,KAAA2K,eAAiB,IAAIpF,IAA4B,MAEzCvF,KAAAsB,QAAUtB,KAAKyK,SAASG,eAExB5K,KAAAI,SAAoCwF,MAAc,CAC9D5F,KAAKwK,KAAKK,gBACV7K,KAAK0K,UACN5E,QACCO,KAAO,EAAEF,OAASA,GAAGlG,KAAE,EACvB6K,KAAU,EAAEC,MAAG,EACXC,OAAaD,EAAI9K,GAAI,iBAAiB6F,QAClCmF,KAAW,OAAMC,MAAG,QACvB,EAELjF,KAAKE,IAAOA,EAAEgF,mBAAmBC,MAAQjF,EAAEgF,QAAU,OAAS,KAAE,EAChEE,MAAY,IAGArL,KAAAQ,aAA2CoF,MAAc,CACrE5F,KAAKwK,KAAKK,gBACV7K,KAAK0K,UACN5E,QACCO,KAAO,EAAEF,OAASA,GAAGlG,KAAE,EACvB6K,KAAU,EAAEC,MAAG,EACXC,OAAaD,EAAI9K,GAAI,qBAAqB6F,QACtCmF,KAAW,OAAMC,MAAG,QACvB,EAELjF,KAAKE,GAAOA,EAAEgF,mBAAmBC,MAAQjF,EAAEgF,QAAU,KAGzCnL,KAAAsL,YAAyC1F,MAAc,CACnE5F,KAAKwK,KAAKK,gBACV7K,KAAK0K,UACN5E,QACCO,KAAO,EAAEF,OAASA,GAAGlG,KAAE,EACvB6K,KAAU,EAAEC,MAAG,EACXC,OAAaD,EAAI9K,GAAI,oBAAoB6F,QACrCmF,KAAW,OAAMC,MAAG,QACvB,EAELjF,KAAKE,GAAOA,EAAEgF,mBAAmBC,MAAQjF,EAAEgF,QAAU,KAGzCnL,KAAAuL,SAAQ3F,MAAc,CAClC5F,KAAKwK,KAAKK,gBACV7K,KAAK0K,UACN5E,QACCO,KAAO,EAAEF,OAASA,GAAGlG,KAAE,EACvB6K,KAAU,EAAEC,MAAG,EACXS,OAAW,CAAEC,UAAWV,EAAI9K,GAAIyL,KAAM,UAAWC,MAAO,MAAO7F,QAC3DmF,KAAW,OAAMC,MAAG,CAAEtD,KAAM,SAC/B,EAEL3B,KAAKE,GAAMA,EAAEyB,MAAQ,IAMtB,CAEIgE,aAAatG,EAA4B,IAAIzF,GACpCG,KAAKoF,QAAQuC,KAAKzC,EAA+B,CACzD0C,KAAMtC,IAENuC,cAAcC,UAAU,IAAM9H,KAAK0K,QAAQrH,KAAKwI,KAAKC,OAC7D,CAEa1H,aAAakB,EAA2ByG,GAAS,GAAK,IAAAlF,EAAA7G,KAAA,SAAA8G,KAAA,YAC/D,MAAMiE,EAAMlE,EAAK2D,KAAKwB,SAAS/L,GACzB4I,SACKhC,EAAKrG,UAAUsF,QAAKmG,KAAK,IAAIC,cAAgB,GAClDC,EAAMtD,EAAcuD,UAAWjG,GAAMA,EAAElG,KAAOqF,EAASrF,IACzDkM,GAAO,GAAGtD,EAAcpB,OAAO0E,EAAK,GACnC7G,EAASrF,KAAKqF,EAAiBrF,GAAK,eAAYoM,MAAa,MAC7DN,GAAQlD,EAAcyD,KAAKhH,SAChC,EAAMiH,OAAexB,EAAK,CACtB7K,KAAM,oBACNiL,QAAStC,EACT1I,YAAa,mCACd+L,aAAS,EACZM,MAAc,gBAAgBT,EAAS,UAAY,qBACnDlF,EAAK6D,QAAQrH,KAAKwI,KAAKC,MAAO,EAdiC,EAenE,CAEa3C,eAAe7D,GAAyB,IAAAmH,EAAAzM,KAAA,SAAA8G,KAAA,kBAC3C2F,EAAKrI,aAAakB,GAAU,EAAM,EADS,EAErD,CAEOoH,YAAYlD,EAA0B,IAAIlJ,IACjCN,KAAKoF,QAAQuC,KAAK4B,EAA8B,CACxD3B,KAAM4B,IAEN3B,cAAcC,UAAU,IAAM9H,KAAK0K,QAAQrH,KAAKwI,KAAKC,OAC7D,CAEa7C,YAAYO,EAAyBuC,GAAS,GAAK,IAAAY,EAAA3M,KAAA,SAAA8G,KAAA,YAC5D,MAAMiE,EAAM4B,EAAKnC,KAAKwB,SAAS/L,GACzB2M,QAAqBD,EAAKrB,SAASxF,QAAKmG,KAAK,IAAIC,YACjDC,EAAMS,EAAaR,UAAWjG,GAAMA,EAAElG,KAAOuJ,EAAQvJ,IACvDkM,GAAO,GAAGS,EAAanF,OAAO0E,EAAK,GAClC3C,EAAQvJ,KAAKuJ,EAAgBvJ,GAAK,cAAWoM,MAAa,MAC1DN,GAAQa,EAAaN,KAAK9C,SAC/B,EAAM+C,OAAexB,EAAK,CACtB7K,KAAM,mBACNiL,QAASyB,EACTzM,YAAa,kCACd+L,aAAS,EACZM,MAAc,gBAAgBT,EAAS,UAAY,oBACnDY,EAAKjC,QAAQrH,KAAKwI,KAAKC,MAAO,EAb8B,EAchE,CAEae,cAAcrD,GAAuB,IAAAsD,EAAA9M,KAAA,SAAA8G,KAAA,kBACxCgG,EAAK7D,YAAYO,GAAS,EAAM,EADQ,EAElD,CAEO1E,aAAayC,GAChB,MAAQ3G,MAAKF,OAAMR,QAASqH,EAChBvH,KAAKoF,QAAQuC,KAAKpG,EAAmC,CAC7DqG,KAAM,CAAEhH,MAAKF,OAAMR,OAAMkB,MAAM,KAE/ByG,cAAcC,UAAU,IAAMC,IAAIC,gBAAgBpH,GAC1D,CAEOmM,iBAAiB3M,GAAW,IAAA4M,EAAAhN,KAC/B,MAAMY,EAAMmH,IAAIkF,gBAAgB7M,GAC1BM,EAAON,EAAMM,KAAK4F,SAAS,SAAW,QAAU,QAChD4G,EAAMlN,KAAKoF,QAAQuC,KAAKpG,EAAmC,CAC7DqG,KAAM,CAAEhH,MAAKF,OAAMR,KAAME,EAAMF,KAAMkB,MAAM,EAAMK,KAAMrB,KAE3D8M,EAAIrF,cAAcC,UAAU,IAAMC,IAAIC,gBAAgBpH,IACtDsM,EAAIC,kBAAkB/L,KAAK0G,WAAShB,OAAC,YACjCoG,EAAIC,kBAAkB7L,QAAU,kBAC1B0L,EAAKhK,SAAS5C,GAAO8G,MAAOkG,IAC9BjG,cAAY,uBACZ+F,EAAIC,kBAAkB7L,QAAU,GAC1B8L,IAEVF,EAAI9F,OACR,GACJ,CAEapE,SAASvB,GAAU,IAAA4L,EAAArN,KAAA,SAAA8G,KAAA,YAiB5B,MAAM1G,QAfF,IAAIkN,QAAgB,CAACC,EAASC,KAC1B,IAAIC,EAAQ,KACRC,GAAW,GACfC,QAAWlM,GAAMqG,UACZ8F,IACGH,EAAQG,EACJA,EAAEC,OACFH,GAAW,EACXH,EAAQK,EAAEC,MAAI,EAGtBL,EACA,IAAQE,EAA4B,KAAjBH,EAAQE,GAAc,GAI/CjK,QAAmB6J,EAAKjN,MAAM0F,QAAKmG,KAAK,IAAIC,YAC5C4B,EAAiB,IAAIR,QAA4BC,IACnD,MAAM3M,EAAMmH,IAAIkF,gBAAgBxL,GAEhC,GAAIA,EAAKf,KAAK4F,SAAS,SAAU,CAC7B,IAAIyH,EAAQC,SAASC,cAAc,SACnCF,EAAMG,IAAMtN,EAAII,WAChB+M,EAAMI,iBAAiB,iBAAkB,KACrC,MAAQC,aAAYC,eAAgBN,EACpCR,EAAQ,CAACa,EAAaC,EAAa1N,GAAS,GAEhDoN,EAAMO,MACV,KAAO,CACH,IAAIC,EAAM,IAAIC,MACdD,EAAIE,OAAS,IAAMlB,EAAQ,CAACgB,EAAIG,MAAQH,EAAII,OAAQ,IACpDJ,EAAIL,IAAMtN,EAAII,UAClB,KAEG4N,EAAcjO,SAAkBmN,EACvCtK,EAAW8I,KAAK,CACZrM,GAAI,YAASoM,MAAa,KAC1BnM,KAAMuB,EAAKvB,KACXC,YAAa,GACbS,IAAKR,EACLM,KAAMe,EAAKf,KAAK4F,SAAS,SAAW,QAAU,QAC9C/F,YAAaqO,EAAe,YAAc,WAC1CjO,SAAUA,GAAY,KAE1B,MAAMoK,EAAMsC,EAAK7C,KAAKwB,SAAS/L,SAC/B,EAAMsM,OAAexB,EAAK,CACtB7K,KAAM,gBACNiL,QAAS3H,EACTrD,YAAa,+BACd+L,YACHmB,EAAK1C,eAAetH,KAAK,MACzBgK,EAAK3C,QAAQrH,KAAKwI,KAAKC,MAAO,EArDF,EAsDhC,CAACnK,SAAA3B,KAAA,mBAAA4B,iBAxMQ2I,GAAmB1J,MAAAoH,MAAApH,MAAAqH,MAAA,EAAAvG,SAAA3B,KAAA,WAAA8B,EAAA+M,IAAA,OAAnBtE,EAAmBuE,QAAnBvE,EAAmBwE,UAAAC,WAFhB,gBAEHzE,CAAmB,gHCrBZ1J,MAAA,cAIIA,MAAA,mBAAAA,MAAAoC,GAAA,MAAAF,EAAAlC,QAAA,OAAAA,MAASkC,EAAAkM,QAAAlM,EAAAmM,aAAoB,GAG7BrO,MAAA,GACJA,gCADIA,cAAA,QAAAkC,EAAAoM,SAAApM,EAAAmM,aAAA,+CAKJrO,MAAA,+BAGIA,MAAA,yBAAAuO,EAAAvO,MAAAgC,GAAAC,UAAAC,EAAAlC,QAAA,OAAAA,MAAAkC,EAAAmM,YAAAE,EAAA,GAGAvO,MAAA,GACJA,8CAHIA,MAFA,yBAAAA,MAAA,IAAAuO,GAEAvO,CAF+C,SAAAkC,EAAAmM,aAAAE,GAI/CvO,MAAA,GAAAA,MAAA,IAAAuO,EAAA,MAsBjB,IAAMC,EAAiB,MAAxB,MAAOA,UAAyBC,KAK3BH,SAASjP,GACZ,OAAOA,EAAKqP,QAAQ,KAAM,GAC9B,CAEON,QAAQ/O,GACX,OAAQA,GACJ,IAAK,YACDF,KAAKmF,OAAOyG,eACZ,MACJ,IAAK,WACD5L,KAAKmF,OAAOuH,cASxB,CAEA5M,YAAoBqF,EAAqCqK,GACrDC,QADgBzP,KAAAmF,SAAqCnF,KAAAwP,UAzBzCxP,KAAAsB,QAAUtB,KAAKmF,OAAO7D,QAC/BtB,KAAA0P,MAAQ,CAAC,YAAa,QAAS,WAAY,QAAS,YACpD1P,KAAAkP,YAAclP,KAAK0P,MAAM,EAyBhC,CAEOC,WACH3P,KAAK4P,aACD,cACA5P,KAAKwP,QAAQK,OAAO/H,UAAWgI,IACvBA,aAAiBC,OACjB/P,KAAKkP,YAAclP,KAAK0P,MAAMxJ,KAAMC,GAChCnG,KAAKwP,QAAQ5O,IAAI0F,SAASH,EAAEI,gBAAc,IAK1DvG,KAAKkP,YAAclP,KAAK0P,MAAMxJ,KAAMC,GAChCnG,KAAKwP,QAAQ5O,IAAI0F,SAASH,EAAEI,eAEpC,CAAC5E,SAAA3B,KAAA,mBAAA4B,iBA5CQyN,GAAgBxO,MAAAoH,GAAApH,MAAAqH,MAAA,EAAAvG,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MAAhBsN,EAAgBrN,UAAA,0BAAAgO,SAAA,CAAAnP,OAAAoP,MAAAC,GAAAhO,MAAA,GAAAC,KAAA,EAAAC,OAAA,qcAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAhDrBzB,MAAA,gBACAA,MAAA,WACIA,MAAA,iBAGQA,MAFR,WAEQA,CAFwC,UAExCA,CADoD,UAEhDA,MAAA,GACJA,QACAA,MAAA,EAAAsP,GAAA,gBASJtP,QACAA,MAAA,WACIA,MAAA,EAAAuP,GAAA,UAAAvP,OAUJA,QACAA,MAAA,4BACIA,MAAA,oBAGZA,oCA5BgBA,MAAA,GAAAA,MAAA,cAAA0B,EAAA2M,YAAA,KAOCrO,cAAA,iBAAA0B,EAAA2M,aAKYrO,cAAA,WAAAwP,GACjBxP,cAAA0B,EAAAmN,gRA6BPL,CAAiB,oBCNvB,IAAMiB,GAAuB,MAA9B,MAAOA,UAA+BhB,KAsBxCxP,YACYqF,EACAqF,EACA+F,EACAf,GAERC,QALQzP,KAAAmF,SACAnF,KAAAwK,OACAxK,KAAAuQ,SACAvQ,KAAAwP,UAxBLxP,KAAAuL,MAAkB,GAETvL,KAAAwQ,OAASxQ,KAAKwK,KAAKiG,aAyBnC,CAEad,WAAQ,IAAA9I,EAAA7G,KAAA,SAAA8G,KAAA,kBACXD,EAAK2D,KAAKkG,YAAY5K,QAAK6K,MAAOxK,GAAMA,IAAI+F,YAClDrF,EAAK+I,aACD,cACA/I,EAAK0J,OAAOK,cAAc9I,UAAW+I,IACjC,GAAIA,EAAOC,IAAI,YAAa,CACxB,MAAMvF,EAAQsF,EAAOE,IAAI,YAAYC,MAAM,KAC3C,GAAIzF,EAAM0F,OAAQ,CACd,MAAMC,EAAQrK,EAAK2D,KAAK2G,YAAY5F,GACpC,IAAK2F,EACD,OAEJrK,EAAK2D,KAAKwB,SAAWnF,EAAK2D,KAAK4G,UAAUlL,KACpC6E,GAAQA,EAAI9K,KAAOiR,EAAMzF,WAE9B5E,EAAK0E,MAAQA,CACjB,CACJ,KAGR1E,EAAK+I,aACD,SACA/I,EAAK2D,KAAKiG,cAAc3I,UAAW0I,IAC/B3J,EAAK0E,MAAQ1E,EAAK0E,MAAMlF,OAAQgL,GAC5Bb,EAAOtK,KAAMoL,GAAQA,EAAIrR,KAAOoR,KAE/BxK,EAAK0E,MAAM0F,QAAUT,EAAOS,QAC7BpK,EAAK0E,MAAMe,KAAKkE,EAAO,GAAGvQ,GAAE,GAKxC,EAhCiB,EAiCrB,CAAC0B,SAAA3B,KAAA,mBAAA4B,iBAhEQ0O,GAAsBzP,MAAAoH,GAAApH,MAAAqH,MAAArH,MAAA0Q,MAAA1Q,MAAA0Q,MAAA,EAAA5P,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MAAtBuO,EAAsBtO,UAAA,qBAAAgO,SAAA,CAAAnP,OAAAqB,MAAA,EAAAC,KAAA,EAAAC,OAAA,iGAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAxC3BzB,MAAA,6KAwCKyP,CAAuB,kPC5BxBzP,MAAA,QAAAA,MAAA,UAAAT,MAAA6Q,OAAA,6CAGApQ,MAAA,UAAMA,MAAA,4BAAkCA,4BAAlCA,oBAAA,IAAA2Q,EAAA7Q,qDAGNE,MAAA,cAAuBA,MAAA,yBAAA4Q,EAAA5Q,MAAAgC,GAAA0B,IAAAmN,EAAA7Q,QAAA,OAAAA,MAAS6Q,EAAAC,SAAAF,GAAa,GACzC5Q,MAAA,cAAUA,MAAA,UACdA,UACAA,MAAA,cAA0CA,MAAA,yBAAA4Q,EAAA5Q,MAAAgC,GAAA0B,IAAAmN,EAAA7Q,QAAA,OAAAA,MAAS6Q,EAAAE,WAAAH,GAAe,GAC9D5Q,MAAA,cAAUA,MAAA,YACdA,iCAEJA,MAAA,wBAQD,IAAMgR,GAAyB,MAAhC,MAAOA,EA2BT/R,YAAoBqF,GAAAnF,KAAAmF,SA1BJnF,KAAAsB,QAAUtB,KAAKmF,OAAO7D,QACtBtB,KAAAQ,UAAYR,KAAKmF,OAAO3E,UACxBR,KAAAI,MAAQJ,KAAKmF,OAAO/E,MAEpBJ,KAAA4R,WAAcE,GAAM9R,KAAKmF,OAAOgE,eAAe2I,GAC/C9R,KAAA2R,SAAYG,GAAM9R,KAAKmF,OAAOyG,aAAakG,GAE3C9R,KAAA6I,iBAAgBjD,MAAc,CAC1C5F,KAAKQ,UACLR,KAAKI,QACN0F,QACCG,KAAI,EAAEzF,EAAWJ,KACbI,EAAUyF,IAAKX,QACRA,EACH3E,SAAU2E,EAASlF,MAAMqJ,OACrB,CAACsI,EAAKxK,IACFwK,GACCzM,EAASjF,gBAAgBkH,IACtBnH,EAAM8F,KAAM8L,GAAMA,EAAE/R,KAAOsH,IAAO5G,UAClC,IACR,OAMkC,CAACgB,SAAA3B,KAAA,mBAAA4B,iBA3B1CiQ,GAAyBhR,MAAAoH,GAAA,EAAAtG,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MAAzB8P,EAAyB7P,UAAA,wBAAAE,MAAA,EAAAC,KAAA,GAAAC,OAAA,sYAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAlC9BzB,MAAA,oBA0BAA,MAdA,EAAAoR,GAAA,yBAAApR,MAcAA,CAd2C,EAAAqR,GAAA,yBAAArR,MAc3CA,CAX8C,EAAAsR,GAAA,yBAAAtR,MAW9CA,CAR6C,EAAAuR,GAAA,wFAZzCvR,MAJA,aAAA0B,EAAAsG,cAIAhI,CAJ4B,UAAAA,MAAA,EAAAqP,IAI5BrP,CAHmE,iBAAAA,MAAA,EAAA4C,IAGnE5C,CAFoE,cAAAA,MAAA,GAAA6C,IAEpE7C,CADiD,WAAAA,MAAA,GAAA8C,GAAA0O,EAAAvJ,EAAAwJ,IAuBhDzR,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAA0B,EAAAjB,qEAMAuQ,CAAyB,2QCT1BhR,MAAA,QAAAA,MAAA,UAAAL,UAAAyQ,OAAA,2CAGApQ,MAAA,UAAMA,MAAA,4BAAkCA,4BAAlCA,oBAAA,IAAA2Q,EAAA7Q,qDAGNE,MAAA,cAAuBA,MAAA,yBAAA4Q,EAAA5Q,MAAAgC,GAAA0B,IAAAmN,EAAA7Q,QAAA,OAAAA,MAAS6Q,EAAAC,SAAAF,GAAa,GACzC5Q,MAAA,cAAUA,MAAA,UACdA,UACAA,MAAA,cAA0CA,MAAA,yBAAA4Q,EAAA5Q,MAAAgC,GAAA0B,IAAAmN,EAAA7Q,QAAA,OAAAA,MAAS6Q,EAAAE,WAAAH,GAAe,GAC9D5Q,MAAA,cAAUA,MAAA,YACdA,iCAEJA,MAAA,wBAOD,IAAM0R,GAAwB,MAA/B,MAAOA,EAyCTzS,YAAoBqF,GAAAnF,KAAAmF,SAxCJnF,KAAAsB,QAAUtB,KAAKmF,OAAO7D,QACtBtB,KAAAsL,SAAWtL,KAAKmF,OAAOmG,SACvBtL,KAAAQ,UAAYR,KAAKmF,OAAO3E,UACxBR,KAAAI,MAAQJ,KAAKmF,OAAO/E,MAEpBJ,KAAA4R,WAAcE,GAAM9R,KAAKmF,OAAOgE,eAAe2I,GAC/C9R,KAAA2R,SAAYG,GAAM9R,KAAKmF,OAAOyG,aAAakG,GAE3C9R,KAAA4M,gBAAehH,MAAc,CACzC5F,KAAKsL,SACLtL,KAAKQ,UACLR,KAAKI,QACN0F,QACCG,KAAI,EAAEqF,EAAU9K,EAAWJ,MACtBkL,GAAY,IAAIrF,IAAKuD,QACfA,EACHhJ,UACIgJ,EAAQhJ,WAAWyF,IAAKhG,GACpBO,EAAU0F,KAAM4L,GAAMA,EAAE7R,KAAOA,KAC9B,GACTU,SAAU6I,EAAQhJ,UAAUiJ,OAAO,CAACsI,EAAK9R,KACrC,MAAMqF,EAAW9E,EAAU0F,KAAMC,GAAMA,EAAElG,KAAOA,GAChD,OAAKqF,EAEDyM,EACAzM,EAASlF,MAAMqJ,OACX,CAACsI,EAAKxK,IACFwK,GACCzM,EAASjF,gBAAgBkH,IACtBnH,EAAM8F,KAAM8L,GAAMA,EAAE/R,KAAOsH,IACrB5G,UACN,IACR,GAVcoR,GAavB,OAKmC,CAACpQ,SAAA3B,KAAA,mBAAA4B,iBAzC1C2Q,GAAwB1R,MAAAoH,GAAA,EAAAtG,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MAAxBwQ,EAAwBvQ,UAAA,uBAAAE,MAAA,EAAAC,KAAA,GAAAC,OAAA,0YAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA/CrBzB,MAAA,oBAwCRA,MAdA,EAAA2R,GAAA,yBAAA3R,MAcAA,CAd+C,EAAA4R,GAAA,yBAAA5R,MAc/CA,CAX8C,EAAA6R,GAAA,yBAAA7R,MAW9CA,CAR6C,EAAA8R,GAAA,wFAZzC9R,MAlBA,aAAA0B,EAAAqK,aAkBA/L,CAlB2B,UAAAA,MAAA,EAAAqP,IAkB3BrP,CAVE,iBAAAA,MAAA,EAAA4C,IAUF5C,CAFE,cAAAA,MAAA,GAAA6C,IAEF7C,CADsD,WAAAA,MAAA,GAAA8C,GAAAiP,EAAA9J,EAAAwJ,IAuBrDzR,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAA0B,EAAAjB,qEAKAiR,CAAwB,KC9CxBM,GAAqB,MAA5B,MAAOA,EAGT/S,YAAoBqF,GAAAnF,KAAAmF,SAFJnF,KAAAsB,QAAUtB,KAAKmF,OAAO7D,OAEY,CAACK,SAAA3B,KAAA,mBAAA4B,iBAH1CiR,GAAqBhS,MAAAoH,GAAA,EAAAtG,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MAArB8Q,EAAqB7Q,UAAA,oBAAAE,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,GAAA,WAArBsQ,CAAqB,KCArBC,GAAwB,MAA/B,MAAOA,EAGThT,YAAoBqF,GAAAnF,KAAAmF,SAFJnF,KAAAsB,QAAUtB,KAAKmF,OAAO7D,OAEY,CAACK,SAAA3B,KAAA,mBAAA4B,iBAH1CkR,GAAwBjS,MAAAoH,GAAA,EAAAtG,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MAAxB+Q,EAAwB9Q,UAAA,uBAAAE,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,GAAA,WAAxBuQ,CAAwB,8CCmBLjS,MAAA,iEAMIA,MAAA,gBAAAkS,EAAArS,KAAAG,MAAA,IAAAkS,EAAAnS,KAAAmS,EAAAnS,IAAAC,kCAmCJA,MAAA,YAIIA,MAAA,YAGAA,MAAA,YAGIA,MAAA,4BAERA,0CAFQA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAkS,EAAApS,UAAA,+CAvDZE,MAJJ,UAIIA,CADH,cAGOA,MAAA,yBAAAkS,EAAAlS,MAAAM,GAAA2B,UAAAkQ,EAAAnS,MAAA,UAAAA,MAASmS,EAAAlO,aAAAiO,GAAkB,GAE3BlS,MAAA,EAAAoS,GAAA,kCAaApS,MAAA,YAGIA,MAAA,YAGAA,MAAA,YAGIA,MAAA,GAMRA,UACAA,MAAA,YAGIA,MAAA,YAGAA,MAAA,aAGIA,MAAA,IAERA,UACAA,MAAA,GAAAqS,GAAA,cAaJrS,QAIIA,MAHJ,YAGIA,CADH,aAEOA,MAAA,IACJA,QAEIA,MADJ,eACIA,CADmB,eACTA,MAAA,gBAGtBA,qDAhEaA,MAAA,GAAAA,MAAA,iBAAAkS,EAAArS,KAAAG,MAAA,IAAAkS,EAAAnS,KAAAmS,EAAAnS,KAqBGC,MAAA,GAAAA,MAAA,cAAAkS,EAAArS,KAAA,qBAgBAG,MAAA,GAAAA,MAAA,IAAAmS,EAAAG,OAAA,mBAKHtS,cAAA,OAAAkS,EAAApS,UAgBDE,MAAA,GAAAA,MAAA,IAAAkS,EAAA7S,KAAA,gCAzEpBW,MAAA,GAGIA,MAAA,WAGIA,MAAA,EAAAuS,GAAA,+BA0EJvS,uCAxEyBA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAmS,EAAA5S,mCATjCS,MAAA,GACIA,MAAA,EAAAwS,GAAA,sFACKxS,QAA+BA,MAA/B,cAAAyS,EAAAzS,MAAA,IAAAmS,EAAA5S,QAAA,KAAAkT,EAAArC,OAA+BpQ,CAAA,WAAA0S,6CAkFxC1S,MAAA,YAEIA,MADA,WACAA,CADgD,YAK5CA,MAHJ,WAGIA,CADH,iBAC8BA,MAAA,YAAMA,QACjCA,MAAA,OAAGA,MAAA,8BACPA,UACAA,MAAA,cAGIA,MAAA,kBAAAsC,GAAAtC,MAAA2S,GAAA,MAAAR,EAAAnS,QAAA,OAAAA,MAAUmS,EAAAS,YAAAtQ,GAAmB,GAErCtC,kCAMIA,MAHJ,WAGIA,CADH,iBAC8BA,MAAA,gBAAUA,QACrCA,MAAA,OAAGA,MAAA,qBACPA,kCAGAA,MAAA,YAGIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,gBACPA,WAWL,IAAM6S,GAAsB,MAA7B,MAAOA,UAA8BpE,KAOhCqE,QAAQvG,GACXpN,KAAK4T,cAAgBxG,GAAGyG,cAAcC,MAAMxN,SAAS,QACzD,CAEOyN,YAAY3G,GACTA,EAAE4G,kBAAkBC,kBACtB7G,EAAE8G,iBAENlU,KAAKmU,QAAQ,eAAgB,IAAOnU,KAAK4T,eAAgB,EAC7D,CAEA9T,YAAoBqF,GAChBsK,QADgBzP,KAAAmF,SAjBJnF,KAAAsB,QAAUtB,KAAKmF,OAAO7D,QACtBtB,KAAAI,MAAQJ,KAAKmF,OAAO/E,MAC7BJ,KAAA4T,eAAgB,EAEP5T,KAAA8E,aAAgByC,GAASvH,KAAKmF,OAAOL,aAAayC,EAelE,CAEOkM,YAAY3D,GACf,MAAMsE,EAA4BtE,EAAMkE,OAExC,IAAKI,GAASC,OAAOpD,OAAQ,OAE7B,MAAMxP,EADkB2S,EAAQC,MACb,GAEf5S,IACCA,EAAKf,KAAK4F,SAAS,UAAY7E,EAAKf,KAAK4F,SAAS,UAEnDtG,KAAKmF,OAAO4H,iBAAiBtL,IAAI,EAEjC0F,MAAY,qBAEpB,CAACxF,SAAA3B,KAAA,mBAAA4B,iBApCQ8R,GAAqB7S,MAAAoH,GAAA,EAAAtG,SAAA3B,KAAA,UAAA8B,EAAAC,IAAA,MAArB2R,EAAqB1R,UAAA,oBAAAgO,SAAA,CAAAnP,OAAAqB,MAAA,EAAAC,KAAA,EAAAC,OAAA,g3DAAAC,SAAA,SAAAC,EAAAC,GAAA,KAAAD,EAAA,iBAlI1BzB,MAAA,WAGIA,MADA,qBAAAsC,GAAAtC,aAAAoC,GAAApC,MAAsB0B,EAAAoR,QAAAxQ,GAAe,KAAAtC,MACrCA,CADsC,gBAAAsC,GAAAtC,aAAAoC,GAAApC,MACrB0B,EAAAwR,YAAA5Q,GAAmB,KAAAtC,OAEpCA,MAAA,EAAAyT,GAAA,uCAoFAzT,MAAA,EAAA0T,GAAA,aAeJ1T,QASAA,MARA,EAAA2T,GAAA,yBAAA3T,MAQAA,CAR6B,EAAA4T,GAAA,yBAAA5T,gCApGVA,QAA0BA,MAA1B,QAAAA,MAAA,IAAA0B,EAAAjB,SAA0BT,CAAA,WAAA6T,GAoFV7T,MAAA,GAAAA,MAAA,OAAA0B,EAAAqR,6MAyC9BF,CAAsB,oBCvHnC,MAAMiB,GAAkB,CACpB,CACIC,KAAM,GACNC,UAAWxF,EACXyF,SAAU,CACN,CAAEF,KAAM,GAAIG,WAAY,YAAaC,UAAW,QAChD,CAAEJ,KAAM,YAAaC,UAAWhD,IAChC,CAAE+C,KAAM,QAASC,UAAWnB,IAC5B,CAAEkB,KAAM,WAAYC,UAAWtC,IAC/B,CAAEqC,KAAM,QAASC,UAAWhC,IAC5B,CAAE+B,KAAM,WAAYC,UAAW/B,IAC/B,CAAE8B,KAAM,IAAKG,WAAY,YAAaC,UAAW,WAKhDC,GAA0B,CACnC5F,EACAiB,GACAuB,GACA6B,GACAnB,GACAM,GACAC,GACAvR,EACA2D,EACAqE,GAcG,IAAM2L,GAAa,MAApB,MAAOA,EAAavT,SAAA3B,KAAA,mBAAA4B,iBAAbsT,EAAa,EAAAvT,SAAA3B,KAAA,UAAA8B,EAAAqT,GAAA,MAAbD,IAAavT,SAAA3B,KAAA,UAAA8B,EAAAsT,IAAA,UARlBC,KACAC,KACAC,KACAC,MACAC,KAAaC,SAASf,IACtBgB,eAGKT,CAAa","names":["SignagePlaylist","constructor","_data","this","id","name","description","media","media_durations","SignageDisplay","orientation","playlists","SignageMedia","type","duration","url","i0","ctx_r0","resource","toString","SignageMediaPreviewModalComponent_main_6_img_2_Template","SignageMediaPreviewModalComponent_main_6_video_3_Template","_r2","save","emit","loading","SignageMediaPreviewModalComponent","EventEmitter","file","can_save","static","t","MAT_DIALOG_DATA","core","VBU","selectors","outputs","decls","vars","consts","template","rf","ctx","SignageMediaPreviewModalComponent_main_6_Template","SignageMediaPreviewModalComponent_footer_7_Template","SignageMediaPreviewModalComponent_ng_template_8_Template","load_state_r3","item_r4","_r3","$implicit","ctx_r1","addMedia","_r1","focusSearchInput","$event","search","next","SignagePlaylistModalComponent_main_4_button_25_Template","form","media_list","_c1","_c2","_c3","_c4","duration_template_r6","actions_template_r7","media_menu_r5","getValue","_c5","new_media","_r8","savePlaylist","row_r10","_r9","row","setDuration","duration_menu_r11","value","row_r13","_r12","changeOrder","previewMedia","removeMedia","first_r14","last_r15","SignagePlaylistModalComponent","_state","_dialog","_dialog_ref","playlist","BehaviorSubject","FormGroup","FormControl","Validators","required","combineLatest","valueChanges","pipe","startWith","getRawValue","map","find","_","all_media","filter","includes","toLowerCase","indexOf","setTimeout","search_input","nativeElement","focus","_this","_asyncToGenerator","markAllAsTouched","updateValueAndValidity","invalid","catch","notifyError","close","new_media_durations","patchValue","item","index","splice","direction","open","data","afterClosed","subscribe","URL","revokeObjectURL","i1","i2","viewQuery","SignagePlaylistModalComponent_button_3_Template","SignagePlaylistModalComponent_main_4_Template","SignagePlaylistModalComponent_footer_5_Template","SignagePlaylistModalComponent_ng_template_6_Template","SignagePlaylistModalComponent_ng_template_8_Template","SignagePlaylistModalComponent_ng_template_10_Template","load_state_r16","addPlaylist","SignageDisplayModalComponent_main_4_button_37_Template","playlist_list","duration_template_r7","actions_template_r6","new_playlists","saveDisplay","previewPlaylist","removePlaylist","first_r11","last_r12","data_r13","SignageDisplayModalComponent","display","reduce","a","b","tap","console","log","all_playlist","SignageDisplayModalComponent_button_3_Template","SignageDisplayModalComponent_main_4_Template","SignageDisplayModalComponent_footer_5_Template","SignageDisplayModalComponent_ng_template_6_Template","SignageDisplayModalComponent_ng_template_8_Template","SignageDisplayModalComponent_ng_template_10_Template","load_state_r14","SignageStateService","_org","_loading","_change","_active_upload","asObservable","active_building","switchMap","bld","showMetadata","catchError","of","details","Array","shareReplay","displays","zones","queryZones","parent_id","tags","limit","editPlaylist","Date","now","remove","building","take","toPromise","idx","findIndex","randomString","push","updateMetadata","notifySuccess","_this2","editDisplay","_this3","display_list","removeDisplay","_this4","previewFileMedia","_this5","createObjectURL","ref","componentInstance","e","_this6","Promise","resolve","reject","state","resolved","uploadFile","s","link","video_metadata","video","document","createElement","src","addEventListener","videoWidth","videoHeight","load","img","Image","onload","width","height","is_landscape","jDH","factory","ɵfac","providedIn","newItem","active_link","singular","link_r4","SignageComponent","AsyncHandler","replace","_router","super","links","ngOnInit","subscription","events","event","NavigationEnd","features","attrs","_c0","SignageComponent_button_7_Template","SignageComponent_For_10_Template","tabPanel_r5","SignageTopbarComponent","_route","levels","active_levels","initialised","first","queryParamMap","params","has","get","split","length","level","levelWithID","buildings","zone","lvl","i3","row_r2","row_r4","ctx_r4","editItem","deleteItem","SignagePlaylistsComponent","i","acc","m","SignagePlaylistsComponent_ng_template_1_Template","SignagePlaylistsComponent_ng_template_3_Template","SignagePlaylistsComponent_ng_template_5_Template","SignagePlaylistsComponent_mat_progress_bar_7_Template","media_template_r6","actions_template_r8","SignageDisplaysComponent","SignageDisplaysComponent_ng_template_1_Template","SignageDisplaysComponent_ng_template_3_Template","SignageDisplaysComponent_ng_template_5_Template","SignageDisplaysComponent_mat_progress_bar_7_Template","playlists_template_r6","SignageZonesComponent","SignageTriggersComponent","item_r3","ctx_r3","SignageMediaComponent_ng_container_1_ng_container_1_div_2_img_2_Template","SignageMediaComponent_ng_container_1_ng_container_1_div_2_div_12_Template","count","SignageMediaComponent_ng_container_1_ng_container_1_div_2_Template","SignageMediaComponent_ng_container_1_ng_container_1_Template","tmp_3_0","empty_template_r5","_r6","previewFile","SignageMediaComponent","onEnter","show_dropzone","dataTransfer","types","hideOverlay","target","HTMLInputElement","preventDefault","timeout","element","files","SignageMediaComponent_ng_container_1_Template","SignageMediaComponent_div_3_Template","SignageMediaComponent_ng_template_4_Template","SignageMediaComponent_ng_template_6_Template","load_template_r7","ROUTES","path","component","children","redirectTo","pathMatch","COMPONENTS","SignageModule","$C","G2t","CommonModule","FormsModule","UIModule","ComponentsModule","RouterModule","forChild","MatTabsModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/signage/signage.classes.ts","./apps/concierge/src/app/signage/signage-media-preview-modal.component.ts","./apps/concierge/src/app/signage/signage-playlist-modal.component.ts","./apps/concierge/src/app/signage/signage-display-modal.component.ts","./apps/concierge/src/app/signage/signage-state.service.ts","./apps/concierge/src/app/signage/signage.component.ts","./apps/concierge/src/app/signage/signage-topbar.component.ts","./apps/concierge/src/app/signage/signage-playlists.component.ts","./apps/concierge/src/app/signage/signage-displays.component.ts","./apps/concierge/src/app/signage/signage-zones.component.ts","./apps/concierge/src/app/signage/signage-triggers.component.ts","./apps/concierge/src/app/signage/signage-media.component.ts","./apps/concierge/src/app/signage/signage.module.ts"],"sourcesContent":["export class SignagePlaylist {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly media: string[];\n    public readonly media_durations: Record<string, number>;\n\n    constructor(_data: Partial<SignagePlaylist> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.media = _data.media || [];\n        this.media_durations = _data.media_durations || {};\n    }\n}\n\nexport class SignageDisplay {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly orientation: 'landscape' | 'portrait';\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageDisplay> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.orientation = _data.orientation || 'landscape';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageZone {\n    public readonly id: string;\n    public readonly zone_id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageZone> = {}) {\n        this.id = _data.id || '';\n        this.zone_id = _data.zone_id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageTrigger {\n    public readonly id: string;\n    public readonly zone_id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageTrigger> = {}) {\n        this.id = _data.id || '';\n        this.zone_id = _data.zone_id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageMedia {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly type: 'image' | 'video';\n    public readonly duration: number;\n    public readonly orientation: 'landscape' | 'portrait';\n    public readonly url: string;\n\n    constructor(_data: Partial<SignageMedia> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.type = _data.type || 'image';\n        this.duration = _data.duration || 15;\n        this.orientation = _data.orientation || 'landscape';\n        this.url = _data.url || '';\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { uploadFile } from '@placeos/common';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n    selector: 'signage-media-preview-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">Preview - {{ name }}</h1>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"bg-base-200\" *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"max-w-[80vw] max-h-[65vh] w-[80vw] h-[65vh] flex items-center justify-center\"\n            >\n                <img\n                    *ngIf=\"type === 'image'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                />\n                <video\n                    *ngIf=\"type === 'video'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                    autoplay\n                    controls\n                ></video>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"can_save && !loading\"\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save.emit()\">\n                Save Media\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-8 w-[28rem] h-[20rem] max-w-[80vw] max-h-[65vh]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignageMediaPreviewModalComponent {\n    @Output() public readonly save = new EventEmitter<any>();\n    public loading = '';\n    public readonly resource = this._data.url;\n    public readonly type = this._data.type;\n    public readonly name = this._data.name;\n    public readonly file = this._data.file;\n    public readonly can_save = this._data.save !== false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            url: URL;\n            type: 'image' | 'video';\n            save: boolean;\n            name: string;\n            file?: File;\n        }\n    ) {}\n}\n","import {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport { SignageStateService } from './signage-state.service';\nimport { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { SignageMedia, SignagePlaylist } from './signage.classes';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { th } from 'date-fns/locale';\n\n@Component({\n    selector: 'signage-playlist-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">{{ playlist.id ? 'Edit' : 'New' }} Playlist</h1>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            class=\"p-2 flex flex-col\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <label for=\"name\">Name<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <input\n                    matInput\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\"\n                />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n            <label for=\"description\">Description</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n            <label for=\"media\">Media</label>\n            <custom-table\n                class=\"block w-full mb-2\"\n                [dataSource]=\"media_list\"\n                [columns]=\"['_index', 'name', 'type', 'duration', 'actions']\"\n                [display_column]=\"[' ', 'Name', 'Type', 'Duration', ' ']\"\n                [column_size]=\"['3r', 'flex', '10r', '6r', '10r']\"\n                [template]=\"{\n                    duration: duration_template,\n                    actions: actions_template\n                }\"\n            >\n            </custom-table>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                [matMenuTriggerFor]=\"media_menu\"\n                (click)=\"focusSearchInput()\"\n            >\n                Add Media\n            </button>\n            <mat-menu #media_menu=\"matMenu\" class=\"w-[32rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <app-icon matPrefix class=\"text-2xl -left-1\">\n                        search\n                    </app-icon>\n                    <input\n                        #search_input\n                        matInput\n                        placeholder=\"Media Name\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    />\n                </mat-form-field>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let item of new_media | async | slice: 0:8\"\n                    (click)=\"addMedia(item)\"\n                >\n                    <div class=\"flex items-center w-full\">\n                        <div class=\"flex-1 truncate\">{{ item.name }}</div>\n                        <code class=\"capitalize\">{{ item.type }}</code>\n                        <code class=\"bg-base-300 text-base-content\">{{\n                            item.duration | mediaDuration\n                        }}</code>\n                    </div>\n                </button>\n            </mat-menu>\n        </main>\n        <footer\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"savePlaylist()\">\n                Save Playlist\n            </button>\n        </footer>\n        <ng-template #duration_template let-row=\"row\">\n            <button\n                matTooltip=\"Set Custom Duration\"\n                [matMenuTriggerFor]=\"duration_menu\"\n                [class.pointer-events-none]=\"row.type !== 'image'\"\n            >\n                <code\n                    [class.bg-warning]=\"form.value.media_durations[row.id]\"\n                    [class.text-warning-content]=\"\n                        form.value.media_durations[row.id]\n                    \"\n                >\n                    {{\n                        form.value.media_durations[row.id] || row.duration\n                            | mediaDuration\n                    }}\n                </code>\n            </button>\n            <mat-menu #duration_menu=\"matMenu\" class=\"w-[20rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <mat-select\n                        [ngModel]=\"form.value.media_durations[row.id] || 0\"\n                        (ngModelChange)=\"setDuration(row.id, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                        <mat-option [value]=\"0\">Use Media Default</mat-option>\n                        <mat-option [value]=\"5\">5 seconds</mat-option>\n                        <mat-option [value]=\"10\">10 seconds</mat-option>\n                        <mat-option [value]=\"15\">15 seconds</mat-option>\n                        <mat-option [value]=\"30\">30 seconds</mat-option>\n                        <mat-option [value]=\"45\">45 seconds</mat-option>\n                        <mat-option [value]=\"60\">1 minute</mat-option>\n                        <mat-option [value]=\"75\"\n                            >1 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"90\"\n                            >1 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"105\"\n                            >1 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"120\">2 minute</mat-option>\n                        <mat-option [value]=\"135\"\n                            >2 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"150\"\n                            >2 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"165\"\n                            >2 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"180\">3 minute</mat-option>\n                        <mat-option [value]=\"195\"\n                            >3 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"210\"\n                            >3 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"225\"\n                            >3 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"240\">4 minute</mat-option>\n                        <mat-option [value]=\"255\"\n                            >4 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"270\"\n                            >4 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"285\"\n                            >4 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"300\">5 minute</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </mat-menu>\n        </ng-template>\n        <ng-template\n            #actions_template\n            let-row=\"row\"\n            let-first=\"first\"\n            let-last=\"last\"\n        >\n            <div class=\"w-full flex items-center justify-end\">\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Media to previous item\"\n                    [disabled]=\"first\"\n                    (click)=\"changeOrder(row, -1)\"\n                >\n                    <app-icon>arrow_upward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Media to next item\"\n                    [disabled]=\"last\"\n                    (click)=\"changeOrder(row, 1)\"\n                >\n                    <app-icon>arrow_downward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Preview Media\"\n                    (click)=\"previewMedia(row)\"\n                >\n                    <app-icon>visibility</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Remove Media from Playlist\"\n                    class=\"text-error\"\n                    (click)=\"removeMedia(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Playlist...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignagePlaylistModalComponent {\n    public loading = false;\n    public readonly playlist = this._data;\n    public readonly media = this._state.media;\n\n    public readonly search = new BehaviorSubject('');\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this.playlist.id || ''),\n        name: new FormControl(this.playlist.name || '', [Validators.required]),\n        description: new FormControl(this.playlist.description || ''),\n        media: new FormControl(this.playlist.media || []),\n        media_durations: new FormControl(this.playlist.media_durations || {}),\n    });\n\n    public readonly media_list = combineLatest([\n        this.media,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([media_list, { media }]) =>\n            (this.form.getRawValue().media || []).map(\n                (id) =>\n                    media_list.find((_) => _.id === id) ||\n                    new SignageMedia({ id })\n            )\n        )\n    );\n\n    public readonly new_media = combineLatest([\n        this.media,\n        this.search,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([all_media, search, _]) =>\n            all_media\n                .filter((_) => !this.form.getRawValue().media.includes(_.id))\n                .filter((_) =>\n                    _.name.toLowerCase().includes(search.toLowerCase())\n                )\n        )\n    );\n\n    @ViewChild('search_input')\n    public search_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: SignagePlaylist = {} as any,\n        private _state: SignageStateService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<SignagePlaylistModalComponent>\n    ) {}\n\n    public indexOf(id: string) {\n        return this.form.getRawValue().media.indexOf(id);\n    }\n\n    public focusSearchInput() {\n        setTimeout(() => this.search_input.nativeElement?.focus(), 100);\n    }\n\n    public async savePlaylist() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n        this.loading = true;\n        await this._state.savePlaylist(this.form.getRawValue()).catch((_) => {\n            notifyError('Error saving playlist');\n            this.loading = false;\n            throw _;\n        });\n        this._dialog_ref.close();\n    }\n\n    public setDuration(id: string, duration: number) {\n        const { media_durations } = this.form.getRawValue();\n        const new_media_durations = { ...media_durations };\n        new_media_durations[id] = duration;\n        this.form.patchValue({ media_durations: new_media_durations });\n    }\n\n    public addMedia(item: SignageMedia) {\n        const { id } = item;\n        const { media } = this.form.getRawValue();\n        this.form.patchValue({\n            media: [...media, id],\n        });\n    }\n\n    public removeMedia(item: SignageMedia) {\n        const { media, media_durations } = this.form.getRawValue();\n        const index = media.indexOf(item.id);\n        const new_media = [...media];\n        delete media_durations[item.id];\n        new_media.splice(index, 1);\n        this.form.patchValue({\n            media: new_media,\n            media_durations: { ...media_durations },\n        });\n    }\n\n    public changeOrder(item: SignageMedia, direction: number) {\n        const { media } = this.form.getRawValue();\n        const index = media.indexOf(item.id);\n        const new_media = [...media];\n        new_media.splice(index, 1);\n        new_media.splice(index + direction, 0, item.id);\n        this.form.patchValue({\n            media: new_media,\n        });\n    }\n\n    public previewMedia(item: SignageMedia) {\n        const { url, type, name } = item;\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name, save: false },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n}\n","import { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\nimport { SignageDisplay, SignagePlaylist } from './signage.classes';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport { SignageStateService } from './signage-state.service';\nimport { ta } from 'date-fns/locale';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'signage-display-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">{{ display.id ? 'Edit' : 'New' }} Display</h1>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            class=\"p-2 flex flex-col\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <label for=\"name\">Name<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <input\n                    matInput\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\"\n                />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n            <label for=\"description\">Description</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n            <label for=\"description\">Orientation<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <mat-select formControlName=\"orientation\">\n                    <mat-option value=\"landscape\">Landscape</mat-option>\n                    <mat-option value=\"portrait\">Portrait</mat-option>\n                </mat-select>\n                <mat-error>Orientation is required</mat-error>\n            </mat-form-field>\n            <label for=\"media\">Playlists</label>\n            <custom-table\n                class=\"block w-full mb-2\"\n                [dataSource]=\"playlist_list\"\n                [columns]=\"['_index', 'name', 'type', 'duration', 'actions']\"\n                [display_column]=\"[' ', 'Name', 'Type', 'Duration', ' ']\"\n                [column_size]=\"['3r', 'flex', '10r', '6r', '10r']\"\n                [template]=\"{\n                    duration: duration_template,\n                    actions: actions_template\n                }\"\n            >\n            </custom-table>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                [matMenuTriggerFor]=\"media_menu\"\n                (click)=\"focusSearchInput()\"\n            >\n                Add Playlist\n            </button>\n            <mat-menu #media_menu=\"matMenu\" class=\"w-[32rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <app-icon matPrefix class=\"text-2xl -left-1\">\n                        search\n                    </app-icon>\n                    <input\n                        #search_input\n                        matInput\n                        placeholder=\"Media Name\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    />\n                </mat-form-field>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let item of new_playlists | async | slice: 0:8\"\n                    (click)=\"addPlaylist(item)\"\n                >\n                    <div class=\"flex items-center w-full\">\n                        <div class=\"flex-1 truncate\">{{ item.name }}</div>\n                        <code class=\"bg-base-300 text-base-content\">{{\n                            item.duration | mediaDuration\n                        }}</code>\n                    </div>\n                </button>\n            </mat-menu>\n        </main>\n        <footer\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"saveDisplay()\">\n                Save Display\n            </button>\n        </footer>\n        <ng-template\n            #actions_template\n            let-row=\"row\"\n            let-first=\"first\"\n            let-last=\"last\"\n        >\n            <div class=\"w-full flex items-center justify-end\">\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Playlist to previous item\"\n                    [disabled]=\"first\"\n                    (click)=\"changeOrder(row, -1)\"\n                >\n                    <app-icon>arrow_upward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Playlist to next item\"\n                    [disabled]=\"last\"\n                    (click)=\"changeOrder(row, 1)\"\n                >\n                    <app-icon>arrow_downward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Preview Playlist\"\n                    (click)=\"previewPlaylist(row)\"\n                >\n                    <app-icon>visibility</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Remove Playlist from Display\"\n                    class=\"text-error\"\n                    (click)=\"removePlaylist(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n\n        <ng-template #duration_template let-data=\"data\">\n            <code class=\"bg-base-300 text-base-content\">\n                {{ data | mediaDuration }}\n            </code>\n        </ng-template>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Display...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignageDisplayModalComponent {\n    public loading = false;\n    public readonly display = this._data;\n    public readonly playlists = combineLatest([\n        this._state.playlists,\n        this._state.media,\n    ]).pipe(\n        map(([playlists, media]) =>\n            playlists.map((_) => ({\n                ..._,\n                duration: _.media.reduce(\n                    (a, b) =>\n                        a +\n                        (_.media_durations[b] ||\n                            media.find(({ id }) => id === b)?.duration ||\n                            0),\n                    0\n                ),\n            }))\n        ),\n        tap(console.log)\n    );\n\n    public readonly search = new BehaviorSubject('');\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this.display.id || ''),\n        name: new FormControl(this.display.name || '', [Validators.required]),\n        description: new FormControl(this.display.description || ''),\n        orientation: new FormControl(this.display.orientation || 'landscape', [\n            Validators.required,\n        ]),\n        playlists: new FormControl(this.display.playlists || []),\n    });\n\n    public readonly playlist_list = combineLatest([\n        this.playlists,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([playlist_list, _]) =>\n            (this.form.getRawValue().playlists || []).map(\n                (id) =>\n                    playlist_list.find((_) => _.id === id) ||\n                    new SignagePlaylist({ id })\n            )\n        )\n    );\n\n    public readonly new_playlists = combineLatest([\n        this.playlists,\n        this.search,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([all_playlist, search, _]) =>\n            all_playlist\n                .filter(\n                    (_) => !this.form.getRawValue().playlists.includes(_.id)\n                )\n                .filter((_) =>\n                    _.name.toLowerCase().includes(search.toLowerCase())\n                )\n        )\n    );\n\n    @ViewChild('search_input')\n    public search_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: SignageDisplay = {} as any,\n        private _state: SignageStateService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<SignageDisplayModalComponent>\n    ) {}\n\n    public focusSearchInput() {\n        setTimeout(() => this.search_input.nativeElement?.focus(), 100);\n    }\n\n    public async saveDisplay() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n        this.loading = true;\n        await this._state.saveDisplay(this.form.getRawValue()).catch((_) => {\n            notifyError('Error saving display.');\n            this.loading = false;\n            throw _;\n        });\n        this._dialog_ref.close();\n    }\n\n    public addPlaylist(item: SignagePlaylist) {\n        const { id } = item;\n        const { playlists } = this.form.getRawValue();\n        this.form.patchValue({\n            playlists: [...playlists, id],\n        });\n    }\n\n    public removePlaylist(item: SignagePlaylist) {\n        const { playlists } = this.form.getRawValue();\n        const index = playlists.indexOf(item.id);\n        const new_playlists = [...playlists];\n        new_playlists.splice(index, 1);\n        this.form.patchValue({\n            playlists: new_playlists,\n        });\n    }\n\n    public changeOrder(item: SignagePlaylist, direction: number) {\n        const { playlists } = this.form.getRawValue();\n        const index = playlists.indexOf(item.id);\n        const new_playlists = [...playlists];\n        new_playlists.splice(index, 1);\n        new_playlists.splice(index + direction, 0, item.id);\n        this.form.patchValue({\n            playlists: new_playlists,\n        });\n    }\n\n    public previewPlaylist(item: SignagePlaylist) {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n    notifyError,\n    notifySuccess,\n    randomString,\n    uploadFile,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    PlaceMetadata,\n    queryZones,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { Attachment } from '@placeos/users';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\n\nimport {\n    SignageDisplay,\n    SignageMedia,\n    SignagePlaylist,\n} from './signage.classes';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\nimport { SignageDisplayModalComponent } from './signage-display-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SignageStateService {\n    private _loading = new BehaviorSubject(false);\n    private _change = new BehaviorSubject(0);\n    private _active_upload = new BehaviorSubject<Attachment>(null);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly media: Observable<SignageMedia[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-media').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : null) || []),\n        shareReplay(1)\n    );\n\n    public readonly playlists: Observable<SignagePlaylist[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-playlists').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : []))\n    );\n\n    public readonly displays: Observable<SignageDisplay[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-displays').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : []))\n    );\n\n    public readonly zones = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            queryZones({ parent_id: bld.id, tags: 'signage', limit: 100 }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((_) => _.data || [])\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public editPlaylist(playlist: SignagePlaylist = new SignagePlaylist()) {\n        const ref = this._dialog.open(SignagePlaylistModalComponent, {\n            data: playlist,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async savePlaylist(playlist: SignagePlaylist, remove = false) {\n        const bld = this._org.building.id;\n        const playlist_list =\n            (await this.playlists.pipe(take(1)).toPromise()) || [];\n        const idx = playlist_list.findIndex((_) => _.id === playlist.id);\n        if (idx >= 0) playlist_list.splice(idx, 1);\n        if (!playlist.id) (playlist as any).id = `playlist-${randomString(8)}`;\n        if (!remove) playlist_list.push(playlist);\n        await updateMetadata(bld, {\n            name: 'signage-playlists',\n            details: playlist_list,\n            description: 'Playlists for signage displays',\n        }).toPromise();\n        notifySuccess(`Successfully ${remove ? 'removed' : 'saved'} playlist.`);\n        this._change.next(Date.now());\n    }\n\n    public async removePlaylist(playlist: SignagePlaylist) {\n        await this.savePlaylist(playlist, true);\n    }\n\n    public editDisplay(display: SignageDisplay = new SignageDisplay()) {\n        const ref = this._dialog.open(SignageDisplayModalComponent, {\n            data: display,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async saveDisplay(display: SignageDisplay, remove = false) {\n        const bld = this._org.building.id;\n        const display_list = await this.displays.pipe(take(1)).toPromise();\n        const idx = display_list.findIndex((_) => _.id === display.id);\n        if (idx >= 0) display_list.splice(idx, 1);\n        if (!display.id) (display as any).id = `display-${randomString(8)}`;\n        if (!remove) display_list.push(display);\n        await updateMetadata(bld, {\n            name: 'signage-displays',\n            details: display_list,\n            description: 'Displays for signage displays',\n        }).toPromise();\n        notifySuccess(`Successfully ${remove ? 'removed' : 'saved'} display.`);\n        this._change.next(Date.now());\n    }\n\n    public async removeDisplay(display: SignageDisplay) {\n        await this.saveDisplay(display, true);\n    }\n\n    public previewMedia(item: SignageMedia) {\n        const { url, type, name } = item;\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name, save: false },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n\n    public previewFileMedia(media: File) {\n        const url = URL.createObjectURL(media);\n        const type = media.type.includes('image') ? 'image' : 'video';\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name: media.name, save: true, file: media },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n        ref.componentInstance.save.subscribe(async () => {\n            ref.componentInstance.loading = 'Saving...';\n            await this.addMedia(media).catch((e) => {\n                notifyError('Error saving media.');\n                ref.componentInstance.loading = '';\n                throw e;\n            });\n            ref.close();\n        });\n    }\n\n    public async addMedia(file: File) {\n        const upload = () =>\n            new Promise<string>((resolve, reject) => {\n                let state = null;\n                let resolved = false;\n                uploadFile(file).subscribe(\n                    (s) => {\n                        state = s;\n                        if (s.link) {\n                            resolved = true;\n                            resolve(s.link);\n                        }\n                    },\n                    reject,\n                    () => (!resolved ? resolve(state) : null)\n                );\n            });\n        const media = await upload();\n        const media_list = await this.media.pipe(take(1)).toPromise();\n        const video_metadata = new Promise<[boolean, number]>((resolve) => {\n            const url = URL.createObjectURL(file);\n            // file is loaded\n            if (file.type.includes('video')) {\n                let video = document.createElement('video');\n                video.src = url.toString();\n                video.addEventListener('loadedmetadata', () => {\n                    const { videoWidth, videoHeight } = video;\n                    resolve([videoWidth > videoHeight, duration]);\n                });\n                video.load();\n            } else {\n                let img = new Image();\n                img.onload = () => resolve([img.width > img.height, 0]);\n                img.src = url.toString(); // is the data URL because called with readAsDataURL\n            }\n        });\n        const [is_landscape, duration] = await video_metadata;\n        media_list.push({\n            id: `media-${randomString(8)}`,\n            name: file.name,\n            description: '',\n            url: media,\n            type: file.type.includes('image') ? 'image' : 'video',\n            orientation: is_landscape ? 'landscape' : 'portrait',\n            duration: duration || 15,\n        });\n        const bld = this._org.building.id;\n        await updateMetadata(bld, {\n            name: 'signage-media',\n            details: media_list,\n            description: 'Media for signage displays',\n        }).toPromise();\n        this._active_upload.next(null);\n        this._change.next(Date.now());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-staff]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"p-8 h-28 flex items-center justify-between\">\n                    <h2 class=\"text-2xl font-medium\">\n                        Signage - {{ active_link }}\n                    </h2>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        (click)=\"newItem(active_link)\"\n                        *ngIf=\"active_link !== 'Media'\"\n                    >\n                        Add {{ singular(active_link) }}\n                    </button>\n                </div>\n                <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n                    @for (link of links; track link) {\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"'/signage/' + (link | lowercase)\"\n                        (click)=\"active_link = link\"\n                        [active]=\"active_link == link\"\n                    >\n                        {{ link }}\n                    </a>\n                    }\n                </nav>\n                <mat-tab-nav-panel class=\"flex-1 h-1/2 overflow-auto\" #tabPanel>\n                    <router-outlet></router-outlet>\n                </mat-tab-nav-panel>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class SignageComponent extends AsyncHandler implements OnInit {\n    public readonly loading = this._state.loading;\n    public links = ['Playlists', 'Media', 'Displays', 'Zones', 'Triggers'];\n    public active_link = this.links[0];\n\n    public singular(name: string) {\n        return name.replace(/s$/, '');\n    }\n\n    public newItem(name: string) {\n        switch (name) {\n            case 'Playlists':\n                this._state.editPlaylist();\n                break;\n            case 'Displays':\n                this._state.editDisplay();\n                break;\n            case 'Zones':\n                // this._state.editZone();\n                break;\n            case 'Triggers':\n                // this._state.editTrigger();\n                break;\n        }\n    }\n\n    constructor(private _state: SignageStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._router.events.subscribe((event) => {\n                if (event instanceof NavigationEnd) {\n                    this.active_link = this.links.find((_) =>\n                        this._router.url.includes(_.toLowerCase())\n                    );\n                }\n            })\n        );\n        this.active_link = this.links.find((_) =>\n            this._router.url.includes(_.toLowerCase())\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <!-- <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.only_onsite\"\n                (ngModelChange)=\"setFilters({ only_onsite: $event })\"\n                ><div class=\"text-xs\">Onsite Only</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar> -->\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class SignageTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    // public readonly filters = this._state.filters;\n    // /** Set filtered date */\n    // public readonly setDate = (date) => this._state.setFilters({ date });\n    // /** Set filtered date */\n    // public readonly setFilters = (filters) => this._state.setFilters(filters);\n    // /** Set filter string */\n    // public readonly setSearch = (str) => this._state.setSearchString(str);\n    // /** Update active zones for desks */\n    // public readonly updateZones = (zones) => {\n    //     this._router.navigate([], {\n    //         relativeTo: this._route,\n    //         queryParams: { zone_ids: zones.join(',') },\n    //     });\n    //     this._state.setFilters({ zones });\n    // };\n\n    constructor(\n        private _state: SignageStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                // this.updateZones(this.zones);\n            })\n        );\n        // this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { SignagePlaylist } from './signage.classes';\nimport { map, take, tap } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'signage-playlists',\n    template: `\n        <custom-table\n            class=\"block min-w-[48rem]\"\n            [dataSource]=\"playlist_list\"\n            [columns]=\"['name', 'description', 'media', 'duration', 'actions']\"\n            [display_column]=\"['Name', 'Description', 'Media', 'Duration', ' ']\"\n            [column_size]=\"['8r', 'flex', '10r', '6r', '5r']\"\n            [template]=\"{\n                media: media_template,\n                duration: duration_template,\n                actions: actions_template\n            }\"\n        ></custom-table>\n        <ng-template #media_template let-row=\"row\">\n            {{ row.media.length }} Media Item(s)\n        </ng-template>\n        <ng-template #duration_template let-row=\"row\">\n            <code>{{ row.duration | mediaDuration }}</code>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button icon matRipple (click)=\"editItem(row)\">\n                <app-icon>edit</app-icon>\n            </button>\n            <button icon matRipple class=\"text-error\" (click)=\"deleteItem(row)\">\n                <app-icon>delete</app-icon>\n            </button>\n        </ng-template>\n        <mat-progress-bar\n            class=\"absolute inset-x-0 bottom-0\"\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [``],\n})\nexport class SignagePlaylistsComponent {\n    public readonly loading = this._state.loading;\n    public readonly playlists = this._state.playlists;\n    public readonly media = this._state.media;\n\n    public readonly deleteItem = (i) => this._state.removePlaylist(i);\n    public readonly editItem = (i) => this._state.editPlaylist(i);\n\n    public readonly playlist_list = combineLatest([\n        this.playlists,\n        this.media,\n    ]).pipe(\n        map(([playlists, media]) =>\n            playlists.map((playlist) => ({\n                ...playlist,\n                duration: playlist.media.reduce(\n                    (acc, item) =>\n                        acc +\n                        (playlist.media_durations[item] ||\n                            media.find((m) => m.id === item)?.duration ||\n                            15),\n                    0\n                ),\n            }))\n        )\n    );\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'signage-displays',\n    template: ` <custom-table\n            class=\"block min-w-[52rem]\"\n            [dataSource]=\"display_list\"\n            [columns]=\"[\n                'name',\n                'description',\n                'playlists',\n                'orientation',\n                'duration',\n                'actions'\n            ]\"\n            [display_column]=\"[\n                'Name',\n                'Description',\n                'Media',\n                'Orientation',\n                'Duration',\n                ' '\n            ]\"\n            [column_size]=\"['8r', 'flex', '8r', '7r', '6r', '5r']\"\n            [template]=\"{\n                playlists: playlists_template,\n                duration: duration_template,\n                actions: actions_template\n            }\"\n        ></custom-table>\n        <ng-template #playlists_template let-row=\"row\">\n            {{ row.playlists.length }} Playlist(s)\n        </ng-template>\n        <ng-template #duration_template let-row=\"row\">\n            <code>{{ row.duration | mediaDuration }}</code>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button icon matRipple (click)=\"editItem(row)\">\n                <app-icon>edit</app-icon>\n            </button>\n            <button icon matRipple class=\"text-error\" (click)=\"deleteItem(row)\">\n                <app-icon>delete</app-icon>\n            </button>\n        </ng-template>\n        <mat-progress-bar\n            class=\"absolute inset-x-0 bottom-0\"\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>`,\n    styles: [``],\n})\nexport class SignageDisplaysComponent {\n    public readonly loading = this._state.loading;\n    public readonly displays = this._state.displays;\n    public readonly playlists = this._state.playlists;\n    public readonly media = this._state.media;\n\n    public readonly deleteItem = (i) => this._state.removePlaylist(i);\n    public readonly editItem = (i) => this._state.editPlaylist(i);\n\n    public readonly display_list = combineLatest([\n        this.displays,\n        this.playlists,\n        this.media,\n    ]).pipe(\n        map(([displays, playlists, media]) =>\n            (displays || []).map((display) => ({\n                ...display,\n                playlists:\n                    display.playlists?.map((id) =>\n                        playlists.find((i) => i.id === id)\n                    ) || [],\n                duration: display.playlists.reduce((acc, id) => {\n                    const playlist = playlists.find((_) => _.id === id);\n                    if (!playlist) return acc;\n                    return (\n                        acc +\n                        playlist.media.reduce(\n                            (acc, item) =>\n                                acc +\n                                (playlist.media_durations[item] ||\n                                    media.find((m) => m.id === item)\n                                        ?.duration ||\n                                    15),\n                            0\n                        )\n                    );\n                }, 0),\n            }))\n        )\n    );\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-zones',\n    template: ``,\n    styles: [``],\n})\nexport class SignageZonesComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-triggers',\n    template: ``,\n    styles: [``],\n})\nexport class SignageTriggersComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { AsyncHandler, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'signage-media',\n    template: `\n        <div\n            class=\"relative bg-base-200 min-h-full w-full\"\n            (document:dragenter)=\"onEnter($event)\"\n            (document:drop)=\"hideOverlay($event)\"\n        >\n            <ng-container *ngIf=\"!(loading | async); else load_template\">\n                <ng-container\n                    *ngIf=\"(media | async)?.length; else empty_template\"\n                >\n                    <div\n                        class=\"flex flex-wrap items-start justify-start w-full p-2\"\n                    >\n                        <div\n                            class=\"m-2 p-2 bg-base-100 rounded-lg overflow-hidden h-[13rem] w-[17rem] border border-base-300 shadow\"\n                            *ngFor=\"let item of media | async\"\n                        >\n                            <button\n                                class=\"w-64 h-36 overflow-hidden bg-base-200 rounded m-0 p-0 relative\"\n                                (click)=\"previewMedia(item)\"\n                            >\n                                <img\n                                    *ngIf=\"\n                                        item.type === 'video'\n                                            ? (item.url | thumbnail)\n                                            : item.url\n                                    \"\n                                    [src]=\"\n                                        item.type === 'video'\n                                            ? (item.url | thumbnail)\n                                            : item.url\n                                    \"\n                                    class=\"object-contain w-full h-full\"\n                                />\n                                <div\n                                    class=\"absolute top-2 left-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{\n                                            item.type === 'image'\n                                                ? 'Image'\n                                                : 'Video'\n                                        }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute top-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ count || 0 }} Playlist(s)\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute bottom-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                    *ngIf=\"item.duration\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ item.duration | mediaDuration }}\n                                    </div>\n                                </div>\n                            </button>\n                            <div\n                                class=\"flex items-center justify-between space-x-2\"\n                            >\n                                <div class=\"truncate flex-1 w-1/2 px-2\">\n                                    {{ item.name }}\n                                </div>\n                                <button icon matRipple>\n                                    <app-icon>more_vert</app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n            <div class=\"absolute inset-0\" *ngIf=\"show_dropzone\">\n                <div class=\"absolute inset-0 bg-base-200\"></div>\n                <div class=\"absolute inset-0 bg-base-content opacity-70\"></div>\n                <div\n                    class=\"absolute inset-4 border-4 border-dashed border-neutral text-base-100 rounded-xl flex flex-col items-center justify-center\"\n                >\n                    <app-icon class=\"text-8xl\">upload</app-icon>\n                    <p>Drop file to upload file</p>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 w-full opacity-0\"\n                    (change)=\"previewFile($event)\"\n                />\n            </div>\n        </div>\n        <ng-template #empty_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 opacity-30\"\n            >\n                <app-icon class=\"text-8xl\">hide_image</app-icon>\n                <p>No media found.</p>\n            </div>\n        </ng-template>\n        <ng-template #load_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Loading...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                min-height: 100%;\n            }\n        `,\n    ],\n})\nexport class SignageMediaComponent extends AsyncHandler {\n    public readonly loading = this._state.loading;\n    public readonly media = this._state.media;\n    public show_dropzone = false;\n\n    public readonly previewMedia = (item) => this._state.previewMedia(item);\n\n    public onEnter(e) {\n        this.show_dropzone = e?.dataTransfer?.types.includes('Files');\n    }\n\n    public hideOverlay(e) {\n        if (!(e.target instanceof HTMLInputElement)) {\n            e.preventDefault();\n        }\n        this.timeout('hide_overlay', () => (this.show_dropzone = false));\n    }\n\n    constructor(private _state: SignageStateService) {\n        super();\n    }\n\n    public previewFile(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const file = files[0];\n        if (\n            file &&\n            (file.type.includes('image') || file.type.includes('video'))\n        ) {\n            this._state.previewFileMedia(file);\n        } else {\n            notifyError('Invalid file type.');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { SignageComponent } from './signage.component';\nimport { SignageTopbarComponent } from './signage-topbar.component';\nimport { SignagePlaylistsComponent } from './signage-playlists.component';\nimport { SignageDisplaysComponent } from './signage-displays.component';\nimport { SignageZonesComponent } from './signage-zones.component';\nimport { SignageTriggersComponent } from './signage-triggers.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SignageMediaComponent } from './signage-media.component';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\nimport { SignageDisplayModalComponent } from './signage-display-modal.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: SignageComponent,\n        children: [\n            { path: '', redirectTo: 'playlists', pathMatch: 'full' },\n            { path: 'playlists', component: SignagePlaylistsComponent },\n            { path: 'media', component: SignageMediaComponent },\n            { path: 'displays', component: SignageDisplaysComponent },\n            { path: 'zones', component: SignageZonesComponent },\n            { path: 'triggers', component: SignageTriggersComponent },\n            { path: '*', redirectTo: 'playlists', pathMatch: 'full' },\n        ],\n    },\n];\n\nexport const COMPONENTS: Type<any>[] = [\n    SignageComponent,\n    SignageTopbarComponent,\n    SignagePlaylistsComponent,\n    SignageMediaComponent,\n    SignageDisplaysComponent,\n    SignageZonesComponent,\n    SignageTriggersComponent,\n    SignageMediaPreviewModalComponent,\n    SignagePlaylistModalComponent,\n    SignageDisplayModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        ComponentsModule,\n        RouterModule.forChild(ROUTES),\n        MatTabsModule,\n    ],\n})\nexport class SignageModule {}\n"],"x_google_ignoreList":[]}