{"version":3,"sources":["./libs/explore/src/lib/explore-space-info.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./node_modules/date-fns/esm/formatISO/index.js","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/desk.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-map-control.component.ts","./node_modules/@angular/material/fesm2015/slide-toggle.js","./libs/explore/src/lib/explore-map-view.component.ts","./apps/visitor-kiosk/src/app/explore/footer-legend/footer-legend.component.html","./apps/visitor-kiosk/src/app/explore/footer-legend/footer-legend.component.ts","./apps/visitor-kiosk/src/app/explore/explore.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/visitor-kiosk/src/app/explore/explore.module.ts"],"names":["ExploreSpaceInfoComponent","_details","_element","space","this","events","status","tries","setTimeout","parent","nativeElement","parentElement","ngOnInit","position","parseInt","style","top","left","y_pos","x_pos","DurationFieldComponent","max","min","step","specialPreprops","duration","duration_options","generateDurationOptions","changes","time","new_value","_onChange","value","disabled","fn","_onTouch","blocks","date","option","push","id","name","add","format","formatDuration","hours","Math","floor","minutes","provide","useExisting","multi","setValue","ExploreBookingModalComponent","_data","_dialog_ref","loading","booking","attendees","resource","form","markAllAsTouched","on_error","msg","disableClose","valid","list","key","controls","invalid","join","system_ids","resources","map","s","period_start","period_end","toPromise","catch","e","length","display_name","close","ExploreStateService","_org","_spaces","_settings","super","_level","BehaviorSubject","_positions","zoom","center","x","y","_styles","_features","_actions","_labels","_options","_message","level","asObservable","message","spaces","combineLatest","pipe","filter","zones","includes","map_url","lvl","map_id","map_positions","map_features","debounceTime","features","options","show_zones","show_devices","concat","show_contacts","map_actions","i","Object","values","reduce","a","map_labels","labels","map_styles","styles","style_mappings","keys","h","display","init","getValue","initialised","first","_","active_building","subscribe","bld","level_list","levelsForBuilding","find","setLevel","setOptions","get","next","zone_id","levelWithID","style_map","feature_map","actions","actions_map","labels_map","DEFAULT_COLOURS","free","pending","reserved","busy","unknown","ExploreSpacesService","_state","_dialog","_bookings","_statuses","_bind","unsubWith","mod","binding","subscription","listen","d","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","bookable","open","data","bookings","timeout","clearTimeout","updateStatus","colours","fill","opacity","setStyles","location","hover","content","setFeatures","action","callback","bookSpace","setActions","ExploreZonesService","_location","_capacity","building","buildings","parent_id","system_id","bindings","area_management","organisation","console","log","parseData","zone_metadata","Promise","all","levels","zone","areas","details","area","properties","capacity","label_location","filled","count","area_id","setLabels","formatISO","dirtyDate","dirtyOptions","arguments","TypeError","originalDate","toDate","isValid","RangeError","String","representation","result","tzOffset","dateDelimiter","timeDelimiter","day","addLeadingZeros","getDate","month","getMonth","year","getFullYear","offset","getTimezoneOffset","absoluteOffset","abs","hourOffset","minuteOffset","sign","hour","getHours","minute","getMinutes","second","getSeconds","separator","FieldDateAdapter","displayFormat","FIELD_DATE_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","_from","valueOf","Date","startOf","_to","endOf","toISOString","old_date","new_date","from","show_tooltip","useClass","useValue","UserSearchFieldComponent","query_fn","q","search$","Subject","search_results$","distinctUntilChanged","switchMap","query","of","guests","forkJoin","catchError","search","search_str","toLowerCase","item","cancelReset","blurInput","_input_el","blur","user_list","active_user","resetSearchString","FormFieldsModule","DeskConfirmModalComponent","event","desks","host","can_set_date","reason","emit","DeskQuestionsModalComponent","travelled","required","unwell","contact","failure","asset_id","booking_start","getUnixTime","roundToNearestMinutes","addMinutes","nearestTo","booking_end","booking_type","type","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","user_email","user_id","user_name","title","description","checked_in","rejected","approved","approver_id","approver_email","approver_name","extension_data","access","all_day","isSameDay","start","end","addHours","isAfter","BOOKINGS_ENDPOINT","queryBookings","DesksService","error_on_host","Array","ref","success","race","componentInstance","afterClosed","desk_list","startOfDay","endOfDay","email","users","desk","idx","makeDeskBooking","for_user","groups","method","encodeURIComponent","updateBooking","createBooking","ExploreDeviceInfoComponent","_overlay","username","user","mac","manufacturer","os","ssid","variance","toFixed","diameter","bg_color","distance_color","overlay_ref","onEnter","loadUser","onLeave","onClick","onTouch","formatDistanceToNow","last_seen","addSuffix","distance","system","execute","assigned_to","_portal","create","positionStrategy","flexibleConnectedTo","_dot","withPositions","originX","originY","overlayX","overlayY","attach","dispose","ExploreDeskInfoComponent","ExploreDesksService","_desks_service","_in_use","_desks","_reserved","_poll","_desk_bookings","j","processBindingChange","_state_change","in_use","is_used","some","is_reserved","processDesks","enable_booking","delay","interval","clearInterval","devices","v","at_location","processDevices","desk_id","device","map_width","map_height","coordinates_from","book_fn","bookDesk","ExploreZoomControlComponent","zoomIn","setPositions","positions","zoomOut","reset","ExploreMapControlComponent","_router","_route","building_list","active_levels","navigate","relativeTo","queryParams","setBuilding","queryParamMap","params","has","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggleChange","source","checked","MatSlideToggleBase","_elementRef","_MatSlideToggleMixinBase","MatSlideToggle","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","_animationMode","_onTouched","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","markForCheck","monitor","focusOrigin","_inputElement","focus","resolve","then","stopMonitoring","stopPropagation","_emitChangeEvent","isDisabled","origin","focusVia","detectChanges","ɵfac","t","ɵcmp","selectors","viewQuery","rf","ctx","_t","_thumbEl","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","$event","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","textContent","trim","toString","directives","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","ExploreMapViewComponent","_s","_zones","url","o","locateSpace","locateUser","feature","locate_details","location_services","module","locations","sort","b","priority","indexOf","pos","radius","FooterLegendComponent","colour","dark","icon_list","icon","src","ExploreComponent","localStorage","getItem","refreshKiosk","level_id","phone_numbers","emergency","closeAll","post","getTime","SharedExploreModule","ROUTES","path","component","AppExploreModule","forChild"],"mappings":"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","file":"explore-explore-module.js","sourcesContent":["import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            *ngIf=\"space\"\n            name=\"space-info\"\n            [id]=\"space.id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 mb-2\">{{ space.display_name || space.name }}</h4>\n                <div capacity class=\"text-sm\" *ngIf=\"space.capacity >= 0\">\n                    <span>Capacity: </span>{{ space.capacity }}\n                    {{ space.capacity === 1 ? 'person' : 'people' }}\n                </div>\n                <div class=\"flex flex-wrap my-2 text-sm\">\n                    <div\n                        status\n                        [class]=\"\n                            'capitalize rounded p-1 px-2 text-light ' + status\n                        \"\n                    >\n                        {{ status }}\n                    </div>\n                    <div available-until *ngIf=\"status !== 'not-bookable'\">\n                        {{ available_until }}\n                    </div>\n                </div>\n                <div features *ngIf=\"space.features?.length > 0\">\n                    <h4 class=\"m-0 mb-2\">Room Features</h4>\n                    <ul class=\"pl-2\">\n                        <li\n                            class=\"text-sm\"\n                            *ngFor=\"let feature of space.features\"\n                        >\n                            {{ feature }}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n\n                &.busy {\n                    background-color: #e53935;\n                }\n\n                &.pending {\n                    background-color: #ffb300;\n                }\n\n                &.not-bookable {\n                    background-color: #757575;\n                }\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Identity } from '@placeos/common';\nimport { formatDuration } from 'date-fns';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                        {{ option.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 30;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for (const option of this.specialPreprops) {\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(option / 60),\n                          minutes: option % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(option / 60), minutes: option % 60 })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(time / 60),\n                          minutes: time % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(time / 60), minutes: time % 60 })}`,\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { CalendarEvent, generateEventForm, saveEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { querySpaceAvailability } from '@placeos/calendar';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                        />\n                        <mat-error>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.duration\">\n                        <label>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button mat-button (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public booking: CalendarEvent;\n    public form: FormGroup;\n    public loading = '';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.booking = new CalendarEvent({\n            attendees: [{ ...(this._data.space || {}), resource: true } as any],\n        });\n        this.form = generateEventForm(this.booking);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        const on_error = (msg) => {\n            this.loading = '';\n            notifyError(msg);\n            this._dialog_ref.disableClose = false;\n        };\n        if (!this.form.valid) {\n            const list = [];\n            for (const key in this.form.controls) {\n                if (this.form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            throw on_error(\n                `Some form fields are not valid: [${list.join(', ')}]`\n            );\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = 'Checking space availability...';\n        const spaces = await querySpaceAvailability({\n            system_ids: this.form.controls.resources.value\n                ?.map((s) => s.id)\n                .join(','),\n            period_start: Math.floor(this.form.value.date / 1000),\n            period_end:\n                Math.floor(this.form.value.date / 1000) +\n                this.form.value.duration * 60,\n        })\n            .toPromise()\n            .catch((e) => {\n                on_error(\n                    'Space is unavailble for the selected time and duration'\n                );\n                throw e;\n            });\n        if (spaces.length <= 0) {\n            return on_error(\n                'Space is unavailble for the selected time and duration'\n            );\n        }\n        this.loading = 'Creating booking...';\n        await saveEvent(new CalendarEvent(this.form.value))\n            .toPromise()\n            .catch((e) => {\n                on_error('Error creating booking.');\n                throw e;\n            });\n        notifySuccess(\n            `Successfully created booking in ${\n                this._data.space.display_name || this._data.space.name\n            }`\n        );\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\n\nexport interface MapOptions {\n    show_zones?: boolean;\n    show_devices?: boolean;\n    show_contacts?: boolean;\n    show_levels?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({});\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._spaces.list,\n    ]).pipe(\n        map(([level, spaces]) =>\n            spaces.filter((space) => space.zones.includes(level.id))\n        )\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                switch (key) {\n                    case 'devices':\n                        options.show_zones && options.show_devices\n                            ? (list = list.concat(features[key]))\n                            : '';\n                        break;\n                    case 'contacts':\n                        options.show_contacts\n                            ? (list = list.concat(features[key]))\n                            : '';\n                        break;\n                    default:\n                        list = list.concat(features[key]);\n                }\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = this._actions.pipe(\n        debounceTime(200),\n        map((i) => Object.values(i).reduce((list, a) => list.concat(a), []))\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (key !== 'zones' || options.show_zones) {\n                    list = list.concat(labels[key]);\n                }\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            const style_mappings = Object.keys(styles).reduce(\n                (a, h) => ({ ...a, ...styles[h] }),\n                {}\n            );\n            if (!options.show_zones) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            style_mappings['text'] = { display: 'none' };\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            this.setOptions({\n                show_devices:\n                    this._settings.get('app.explore.display_devices') !== false,\n            });\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) {\n            this._level.next(lvl);\n        }\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    HashMap,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] === 'busy' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._dialog.open(ExploreBookingModalComponent, {\n            data: { space },\n        });\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            features.push({\n                location: space.map_id,\n                hover: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends BaseClass {\n    private _statuses: HashMap<string> = {};\n    private _labels: HashMap<ViewerLabel> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings.area_management ||\n                this._org.organisation.bindings.area_management;\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            console.log('Bind:', binding);\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, { name: 'map_regions' }).toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (areas) {\n                for (const area of areas) {\n                    this._capacity[area.id] = area.properties?.capacity || 100;\n                    this._location[area.id] = area.properties\n                        ?.label_location || { x: 0.5, y: 0.5 };\n                }\n            }\n        }\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            this._labels[zone.area_id] = {\n                location: this._location[zone.area_id],\n                content: `${zone.count} ${\n                    zone.count === 1 ? 'Device' : 'Devices'\n                }`,\n            };\n            labels.push(this._labels[zone.area_id]);\n        }\n        this._state.setLabels('zones', labels);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            if (!this._statuses[zone_id]) continue;\n            style_map[`#${zone_id}`] = {\n                fill:\n                    colours[`zone-${this._statuses[zone_id]}`] ||\n                    colours[`${this._statuses[zone_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[zone_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('zones', style_map);\n    }\n}\n","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    Injectable,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport { BaseClass, HashMap } from '@placeos/common';\nimport { format, formatISO } from 'date-fns';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" overlay (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends BaseClass\n    implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || dayjs().startOf('d').toDate();\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || dayjs().endOf('d').add(1, 'y').toDate();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .startOf('m')\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        console.log('Date:', this.date);\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { BaseClass, flatten } from '@placeos/common';\nimport { searchGuests, searchStaff, User } from '@placeos/users';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field text-black\" form-field>\n            <mat-form-field overlay appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event)\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    [value]=\"option\"\n                    (click)=\"blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs text-black opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends BaseClass\n    implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = this.search_str.toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        console.log('Blur', this._input_el);\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            50\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { ComponentsModule } from '@placeos/components';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\n\nexport * from './action-field.component';\nexport * from './counter.component';\nexport * from './date-field.component';\nexport * from './duration-field.component';\nexport * from './time-field.component';\nexport * from './user-list-field.component';\nexport * from './user-search-field.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        ComponentsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\nimport { BuildingLevel, Desk } from '@placeos/organisation';\nimport { User } from '@placeos/users';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"mb-4\" *ngIf=\"!hide_reason\">\n                    <label>Reason</label>\n                    <div>{{ reason || '~No set reason~' }}</div>\n                </div>\n                <p>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button mat-button (click)=\"confirm()\">Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public readonly reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_set_host');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\">COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button mat-button (click)=\"submit()\">Submit</button>\n            </footer>\n            <button close mat-icon-button mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\">\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close mat-icon-button mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent implements OnInit {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form: FormGroup;\n    public failure: boolean;\n\n    public ngOnInit() {\n        this.form = new FormGroup({\n            travelled: new FormControl('', [Validators.required]),\n            unwell: new FormControl('', [Validators.required]),\n            contact: new FormControl('', [Validators.required]),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            notifyError('All the questions must be answered');\n            return;\n        } else if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType = 'desk' | 'parking' | 'locker' | '';\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n\n    constructor(data: Partial<Booking> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            data.booking_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 2), {\n                        nearestTo: 5,\n                    })\n            );\n        this.booking_end =\n            data.booking_end ||\n            getUnixTime(addMinutes(this.booking_start, data.duration || 60));\n        this.booking_type = data.booking_type || '';\n        this.type = data.type || 'booking';\n        this.date = data.date || this.booking_start * 1000;\n        this.duration =\n            data.duration ||\n            differenceInMinutes(\n                this.booking_start * 1000,\n                this.booking_end * 1000\n            );\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title = data.title || 'Desk booking';\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.all_day = data.all_day ?? true;\n        this.status = this.rejected\n            ? 'declined'\n            : this.approved\n            ? 'approved'\n            : 'tentative';\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        return isAfter(start, end);\n    }\n}\n","import { del, get, patch, post, put } from \"@placeos/ts-client\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nimport { toQueryString } from \"libs/common/src/lib/api\";\nimport { Booking } from \"./booking.class\";\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item)))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>) {\n    return post(`${BOOKINGS_ENDPOINT}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n) => (data.id ? updateBooking(data.id, data) : createBooking(data));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { DialogEvent, notifyError, notifySuccess } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { StaffUser, User } from '@placeos/users';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n}\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            (mouseenter)=\"loadUser()\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-4 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-2 w-2 absolute center rounded-full pointer-events-auto shadow\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n\n        <ng-template cdk-portal>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white p-4 top-0 left-0 shadow pointer-events-none\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p><label>MAC:</label> {{ mac }}</p>\n                    <p><label>Accuracy:</label> {{ variance }}m</p>\n                    <p><label>Last Seen:</label> {{ last_seen }}</p>\n                    <p type *ngIf=\"manufacturer\">\n                        <label>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                    <p ssid *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                    <p username *ngIf=\"username\">\n                        <label>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user\">\n                        <label>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Diameter of the radius circle */\n    public readonly diameter = this._details.variance * 100;\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public overlay_ref: OverlayRef = null;\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n    @ViewChild('dot') private _dot: ElementRef<HTMLDivElement>;\n\n    @HostListener('mouseenter') public onEnter = () => this.loadUser();\n    @HostListener('mouseleave') public onLeave = () => this.close();\n    @HostListener('click') public onClick = () => this.loadUser();\n    @HostListener('touchend') public onTouch = () => this.loadUser();\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n        }, 200);\n    }\n\n    public async loadUser() {\n        this.open();\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (mod) {\n            this.username = 'Loading...';\n            const details = await mod\n                .execute('check_ownership_of', [this.mac])\n                .catch((_) => null);\n            this.username =\n                details && details.assigned_to ? details.assigned_to : '';\n        }\n    }\n\n    public open() {\n        if (this.overlay_ref) this.close();\n        if (!this._portal) return;\n        this.overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._dot)\n                .withPositions([\n                    {\n                        originX: this.x_pos === 'start' ? 'end' : 'start',\n                        originY: this.y_pos === 'top' ? 'bottom' : 'top',\n                        overlayX: this.x_pos || 'end',\n                        overlayY: this.y_pos || 'bottom',\n                    },\n                ]),\n        });\n        this.overlay_ref.attach(this._portal);\n        console.log('Open');\n    }\n\n    public close() {\n        if (this.overlay_ref) {\n            this.overlay_ref.dispose();\n            this.overlay_ref = null;\n        }\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface DeskInfoData {\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            name=\"space-info\"\n            [id]=\"map_id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 map-id class=\"m-0 font-medium\">{{ map_id }}</h4>\n                <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                    {{ start | date: 'shortTime' }} &ndash;\n                    {{ end | date: 'shortTime' }}\n                </p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { catchError, first, map, switchMap } from 'rxjs/operators';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { DesksService, queryBookings } from '@placeos/bookings';\nimport { StaffUser } from '@placeos/users';\nimport { Desk, OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _desks = new BehaviorSubject<string[]>([]);\n    private _reserved = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._poll,\n    ]).pipe(\n        switchMap(([lvl]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(new Date())),\n                period_end: getUnixTime(endOfDay(new Date())),\n                type: 'desk',\n                zones: lvl.id,\n            })\n        )\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, { name: 'desks' }).pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: HashMap) => new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => [])\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings?.area_management ||\n                this._org.organisation.bindings?.area_management;\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.processBindingChange(d, system_id))\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n            binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:desk_ids`\n            );\n            this.subscription(\n                `lvl-desks_list`,\n                binding.listen().subscribe((d) => this._desks.next(d || []))\n            );\n            this.subscription('lvl-desk_list_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._reserved,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, reserved]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const is_reserved = reserved.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used\n                        ? 'free'\n                        : is_reserved\n                        ? 'reserved'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _desks_service: DesksService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking: this._settings.get('app.desks.enabled') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) =>\n                this._in_use.next(_.map((i) => i.asset_id))\n            )\n        );\n        this.interval(\n            'poll',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._reserved.next(\n            desks\n                .filter((v) => !v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                hover: true,\n                data: {\n                    map_id: desk.name,\n                    status: this._statuses[desk.map_id],\n                },\n            });\n            const book_fn = () =>\n                this._desks_service.bookDesk({\n                    desks: [desk as Desk],\n                    host: options.host,\n                    date: options.date as Date,\n                });\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button z-in mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon>add</app-icon>\n        </button>\n        <button z-out mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon>remove</app-icon>\n        </button>\n        <button reset mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: 0.5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 0.5rem;\n            }\n\n            mat-form-field {\n                min-width: 10rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends BaseClass implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); };\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); };\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, notifyError, SettingsService } from '@placeos/common';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { MapPinComponent, MapRadiusComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-0 right-0\"\n        ></explore-zoom-controls>\n        <explore-map-controls\n            class=\"absolute top-0 left-0\"\n        ></explore-map-controls>\n        <!-- <explore-search class=\"absolute top-0 right-0\"></explore-search> -->\n        <div\n            name=\"zones\"\n            class=\"p-2 bg-white border border-gray-400 absolute left-0 m-2 rounded flex items-center\"\n        >\n            Zones\n            <mat-slide-toggle\n                class=\"ml-2\"\n                [ngModel]=\"(options | async)?.show_zones\"\n                (ngModelChange)=\"setOptions({ show_zones: $event })\"\n            ></mat-slide-toggle>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            [name='zones'] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService, ExploreDesksService, ExploreZonesService],\n})\nexport class ExploreMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    const space = this._spaces.find(params.get('space'));\n                    if (!space) return;\n                    this.locateSpace(space);\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private locateSpace(space: Space) {\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.organisation.bindings\n            .location_services;\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [user.email, user.id])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","<div class=\"footer-legend\">\n    <div class=\"tag\" (click)=\"show = !show\">\n        <button mat-button class=\"content\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_up' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"header\">\n        <div class=\"text\">Keys</div>\n    </div>\n    <div class=\"colour-legend\">\n        <div class=\"colour\" *ngFor=\"let item of colours\" [class.dark]=\"item.dark\" [style.background-color]=\"item.colour\">\n            {{ item.name }}\n        </div>\n    </div>\n    <div class=\"icon-legend\" [class.show]=\"show\">\n        <div class=\"icon\" *ngFor=\"let item of icon_list\">\n            <app-icon [icon]=\"item.icon\"></app-icon>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@placeos/common';\n\n@Component({\n  selector: 'a-footer-legend',\n  templateUrl: './footer-legend.component.html',\n  styleUrls: ['./footer-legend.component.scss']\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        { id: 'not-bookable', name: 'Not Bookable', colour: '#7D7D7D', dark: true },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' }\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        { id: '', name: 'Lifts Up/Down', icon: { type: 'img', src: 'assets/img/lift.svg' } },\n        { id: '', name: 'Fire Extinguisher', icon: { type: 'img', src: 'assets/img/fireExt.svg' } },\n        { id: '', name: 'First Aid & AED', icon: { type: 'img', src: 'assets/img/aid.svg' } },\n        { id: '', name: 'Cafe/Service', icon: { type: 'img', src: 'assets/img/Cafe.svg' } },\n        { id: '', name: 'Mail/Noticeboard', icon: { type: 'img', src: 'assets/img/mail.svg' } },\n        { id: '', name: 'Restrooms M/F', icon: { type: 'img', src: 'assets/img/Restrooms.svg' } },\n        { id: '', name: 'Map Kiosk', icon: { type: 'img', src: 'assets/img/kiosk.svg' } },\n        { id: '', name: 'Screen', icon: { type: 'img', src: 'assets/img/Screen.svg' } },\n        { id: '', name: 'Projector', icon: { type: 'img', src: 'assets/img/Projector.svg' } },\n        { id: '', name: 'Showers', icon: { type: 'img', src: 'assets/img/shower.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair2.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table1.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table3.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table4.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table5.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table6.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table7.svg' } },\n        { id: '', name: 'Funzone Games', icon: { type: 'img', src: 'assets/img/Tennis.svg' } },\n        { id: '', name: 'Concierge Pods', icon: { type: 'img', src: 'assets/img/Pod.svg' } },\n        { id: '', name: 'Phone Booths', icon: { type: 'img', src: 'assets/img/booth.svg' } }\n    ];\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseClass, log, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends BaseClass implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        }\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            bld => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Reset the timeout for refreshing the kiosk view\n     */\n    public resetRefresh() {\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public refreshKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        this._dialog.closeAll();\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        } else {\n            this._router.navigate(['/explore', 'none'], { queryParams: { level } });\n        }\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', new Date().getTime());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from '../ui/shared.module';\nimport { FooterLegendComponent } from './footer-legend/footer-legend.component';\nimport { FiltersComponent } from './filters/filters.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        FooterLegendComponent,\n        FiltersComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ComponentsModule,\n        FormsModule,\n        SharedExploreModule\n    ],\n    entryComponents: [\n        FiltersComponent\n    ]\n})\nexport class AppExploreModule {}\n"],"sourceRoot":"webpack:///"}