{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/index.ts","./src/app/explore/search/search.component.ts","./src/app/explore/search/search.component.html","./src/app/explore/map-view/map-view.component.ts","./src/app/explore/map-view/map-view.component.html","./src/app/explore/zoom-controls/zoom-controls.component.ts","./src/app/explore/zoom-controls/zoom-controls.component.html","./src/app/explore/footer-legend/footer-legend.component.ts","./src/app/explore/footer-legend/footer-legend.component.html","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/booking.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/bookings.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/booking.interfaces.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/bookings.ts","./src/app/explore/explore.component.ts","./src/app/explore/explore.component.html","./src/app/explore/map-legend/map-legend.component.ts","./src/app/explore/map-legend/map-legend.component.html","./src/app/explore/status-managers/zone-status.directive.ts","./src/app/explore/status-managers/space-status.component.ts","./src/app/explore/status-managers/desk-status.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/bookings.service.ts","./src/app/explore/filters/filters.component.ts","./src/app/explore/filters/filters.component.html","./src/app/explore/explore.module.ts","./src/app/explore/overlays/space-info/space-info.component.ts","./src/app/explore/overlays/space-info/space-info.component.html"],"names":[],"mappings":"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","file":"explore-explore-module.js","sourcesContent":["export * from './lib/bookings';\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ElementRef\n} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, map } from 'rxjs/operators';\nimport { Observable, Subject, of } from 'rxjs';\n\nimport { BaseClass, HashMap, Identity } from '@user-interfaces/common';\nimport { Space, SpacesService } from '@user-interfaces/spaces';\nimport { Building, OrganisationService } from '@user-interfaces/organisation';\nimport { PeopleService, User } from '@user-interfaces/users';\n\n// TODO: Add handling for role users. e.g. Fire Wardens, First Aiders\n// TODO: Add handling for searching for features\n// TODO: Add handling for searching for desks\n\n@Component({\n    selector: 'explore-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss']\n})\nexport class ExploreSearchComponent extends BaseClass implements OnInit, OnChanges {\n\n    @Input() public options: Identity[] = [];\n    /** Type of data to show when searching */\n    @Input() public type: 'space' | 'user' | 'feature' | 'desk' | 'any' | '';\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Level shown on the map */\n    @Input() public zone: string;\n    /** Display string for the placeholder of the search input */\n    @Input() public placeholder: string;\n    /** Clear contents of the search input on changes */\n    @Input() public clear: number;\n    /** Whether search data is loading */\n    public loading: boolean;\n    /** Search filter value */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<Identity[]>;\n    /** Post search and filtering list of items */\n    public results: Identity[] = [];\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Input field reference */\n    @ViewChild('input', { static: false }) private input_field: ElementRef<HTMLInputElement>;\n\n    public get option_details(): HashMap<string> {\n        const details = {};\n        for (const item of this.results) {\n            details[item.id] = item instanceof Space ? this.spaceDetails(item) : item.email;\n        }\n        return details;\n    }\n\n    public spaceDetails(space: Space) {\n        const building = this._org.buildings.find(\n            bld => bld.id === space.level.parent_id\n        );\n        return building ? `${building.name}, ${space.level.name}` : space.level.name;\n    }\n\n    public get building(): Building {\n        const level = this._org.levelWithID([this.zone]);\n        if (!level) {\n            return null;\n        }\n        return this._org.buildings.find(bld => bld.id === level.parent_id);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _people: PeopleService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                if (this.options && this.options.length) {\n                    return Promise.resolve(this.options);\n                }\n                if ((this.type !== 'user' && this.type !== 'any') || query.length < 3) {\n                    return Promise.resolve([]);\n                }\n                const q = (typeof query === 'string' ? query || '' : '');\n                const ppl = this._people.query({q});\n                return ppl;\n            }),\n            catchError(err => {\n                console.error(err);\n                return of([]);\n            }),\n            map((users: User[]) => {\n                const spaces = this._spaces.space_list.filter(space =>\n                    !this.zone ? true : space.zones.indexOf(this.building.id) >= 0\n                );\n                const search = (this.search_str || '').toLowerCase();\n                const filter = item =>\n                    (item.name || '').toLowerCase().indexOf(search) >= 0 ||\n                    (item.email || '').toLowerCase().indexOf(search) >= 0;\n                let result_list = [];\n                if (this.type === 'space') {\n                    result_list = spaces;\n                } else if (this.type === 'user') {\n                    result_list = users;\n                } else {\n                    result_list = (spaces as any).concat(users);\n                }\n                this.loading = false;\n                return result_list.filter(filter);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.results = list;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.autofocus && this.autofocus) {\n            this.focusField();\n        }\n        if (changes.options) {\n            this.search_str = '';\n            this.search$.next(`${this.search_str}`);\n            this.results = this.options;\n            this.focusField();\n        }\n        if (changes.clear) {\n            this.timeout('clear', () => {\n                this.search_str = '';\n                this.search$.next(`${this.search_str}`);\n                this.results = [];\n            }, 50);\n        }\n    }\n\n    public focusField() {\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n\n    /**\n     * Update the selected item to display the location for on the map\n     * @param item Space or User to display location for\n     */\n    public selectOption(item: User | Space) {\n        if (item instanceof Space) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { space: item.id, level: item.level.id },\n                queryParamsHandling: 'merge'\n            });\n        } else {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { user: item.email },\n                queryParamsHandling: 'merge'\n            });\n        }\n        this.search_str = item.name;\n    }\n}\n","<div class=\"searchbar\" *ngIf=\"type\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input\n            #input\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (focus)=\"search_str = ''\"\n            (ngModelChange)=\"search$.next($event)\"\n            [matAutocomplete]=\"auto\"\n            [placeholder]=\"placeholder || 'Search...'\"\n        />\n    </div>\n    <div class=\"suffix\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selectOption($event.option.value)\">\n    <mat-option *ngFor=\"let option of results\" [value]=\"option\">\n        <div class=\"content\">\n            <div class=\"details\">\n                <div class=\"name\">{{ option.name }}</div>\n                <div class=\"email\">{{ option_details[option.id] }}</div>\n            </div>\n            <div class=\"phone\" *ngIf=\"option.phone\">{{ option.phone }}</div>\n        </div>\n    </mat-option>\n</mat-autocomplete>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Point, ViewerFeature, ViewerStyles } from '@yuion/svg-viewer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, Identity, notifyError, notifyWarn, SettingsService } from '@user-interfaces/common';\nimport { PeopleService, User } from '@user-interfaces/users';\nimport { BuildingLevel, OrganisationService } from '@user-interfaces/organisation';\nimport { SpacesService } from '@user-interfaces/spaces';\n\nimport { MapStatus, MapListener } from '../status-managers/status.interfaces';\nimport { FiltersComponent } from '../filters/filters.component';\n\nimport * as dayjs from 'dayjs';\n\nexport enum MapOrientation {\n    Landspace = 0,\n    Portrait = 1,\n    LandspaceReverse = 2,\n    PortraitReverse = 3,\n}\n\n@Component({\n    selector: 'explore-map-view',\n    templateUrl: './map-view.component.html',\n    styleUrls: ['./map-view.component.scss'],\n})\nexport class MapViewComponent extends BaseClass implements OnInit {\n    /** Type of data to show when searching */\n    public type: 'space' | 'user' | 'feature' | 'desk' | 'any' | '';\n    /** Zoom level of the map */\n    public zoom: number;\n    /** Center offset of the map */\n    public center: Point;\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n    /** List of listeners for the map */\n    public listeners: MapListener[];\n    /** List of features to render on the map */\n    public features: ViewerFeature[];\n    /** ID of the active level to display on the map */\n    public active_level: string;\n    /** Mapping of status lists to types */\n    public status_map: { spaces?: MapStatus[]; desks?: MapStatus[]; zones?: MapStatus[] } = {};\n    /** Mapping of listener lists to types */\n    public listener_map: {\n        spaces?: MapListener[];\n        desks?: MapListener[];\n        zones?: MapListener[];\n    } = {};\n    /** Mapping of features lists to types */\n    public feature_map: {\n        spaces?: ViewerFeature[];\n        desks?: ViewerFeature[];\n        zones?: ViewerFeature[];\n    } = {};\n    /** Message to display over the map */\n    public message: string;\n    /** Whether location data is loading */\n    public loading: boolean;\n    /** Feature on the map to focus */\n    public focus: ViewerFeature;\n    /** List of active desk filters */\n    public desk_filters: Identity[] = [];\n    /** Last time the view was cleared */\n    public clear_time: number;\n    /** List of role users to search */\n    public search_options: User[] = [];\n    /** List of role users to search */\n    public role_users: HashMap<User[]> = {};\n    /** Type of user role to search */\n    public user_role: 'fire' | 'aid' | '';\n    /** Whether there was an error finding a user */\n    public user_error: boolean;\n    /** ID of the users current location */\n    public located: string;\n    /** List of desk features available for the active level */\n    public available_desk_features: string[];\n\n    public get time() {\n        return dayjs().format('h:mm A');\n    }\n\n    /** URL of the active map */\n    public get map_url(): string {\n        const level: BuildingLevel =\n            this._org.levelWithID([this.active_level]) || ({ map_id: '' } as any);\n        if (localStorage) {\n            const rotation = +localStorage.getItem('KIOSK.orientation');\n            if (rotation) {\n                switch (rotation) {\n                    case MapOrientation.Portrait:\n                        return level.map_id.replace('.svg', '_portrait.svg');\n                    case MapOrientation.LandspaceReverse:\n                        return level.map_id.replace('.svg', '_landscape_reverse.svg');\n                    case MapOrientation.PortraitReverse:\n                        return level.map_id.replace('.svg', '_portrait_reverse.svg');\n                }\n            }\n        }\n        return level.map_id || '';\n    }\n\n    public get search_placeholder() {\n        switch (this.type) {\n            case 'space':\n                return 'Search for spaces...';\n            case 'user':\n                return this.user_role\n                    ? `Search for ${this.role_display}...`\n                    : 'Search for people...';\n        }\n        return '';\n    }\n\n    public get role_display() {\n        switch (this.user_role) {\n            case 'aid':\n                return 'first aiders';\n            case 'fire':\n                return 'fire wardens';\n        }\n        return '';\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _spaces: SpacesService,\n        private _people: PeopleService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this.active_level) {\n            const bld = this._org.building;\n            if (bld && bld.levels.length) {\n                this.active_level = bld.levels[0].id;\n            }\n        }\n        this.located = localStorage.getItem('KIOSK.location');\n        this.subscription(\n            'reset',\n            this._settings.listen('KIOSK.reset').subscribe(() => this.clearView())\n        );\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('search_type')) {\n                    if ((params.get('search_type') as any) !== this.type) {\n                        this.timeout('clear', () => this.clearView(), 50);\n                    }\n                    this.type = params.get('search_type') as any;\n                    if (params.get('search_type') === 'none') {\n                        this.type = '';\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('space')) {\n                    this.loadSpaceLocation(params.get('space'));\n                }\n                if (params.has('bootstrap') && params.has('level')) {\n                    this.bootstrap(\n                        params.get('level'),\n                        +params.get('orientation'),\n                        params.get('location')\n                    );\n                }\n                if (params.has('user')) {\n                    this.user_error = true;\n                    this.loadUserLocation(params.get('user')).then(\n                        (user) => {\n                            this.loading = false;\n                            this.message = this.focus\n                                ? this.location(this.active_level)\n                                : `Unable to locate ${user ? user.name : params.get('user')}`;\n                            this.user_error = !this.focus;\n                            this.processFeatures();\n                        },\n                        (err) => {\n                            this.loading = false;\n                            this.message = `Unable to locate user`;\n                            this.user_error = true;\n                            if (err && err.status !== 404) {\n                                notifyError(`Error loading user location. ${err.message}`);\n                            }\n                        }\n                    );\n                }\n                this.processStatuses();\n                this.processFeatures();\n            })\n        );\n        this.loadRoleUsers();\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processStatuses() {\n        const styles: ViewerStyles = {};\n        (this.status_map.spaces || []).forEach((space) => (styles[`#${space.id}`] = space.styles));\n        (this.status_map.desks || []).forEach((desk) => (styles[`#${desk.id}`] = desk.styles));\n        (this.status_map.zones || []).forEach((zone) => (styles[`#${zone.id}`] = zone.styles));\n        this.style_map = styles;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processListeners() {\n        let listeners: MapListener[] = [];\n        listeners = listeners.concat(this.listener_map.spaces || []);\n        listeners = listeners.concat(this.listener_map.desks || []);\n        listeners = listeners.concat(this.listener_map.zones || []);\n        this.listeners = listeners;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processFeatures() {\n        let features: ViewerFeature[] = [];\n        if (this.focus && this.focus.content) {\n            features.push(this.focus);\n        }\n        features = features.concat(this.feature_map.spaces || []);\n        features = features.concat(this.feature_map.desks || []);\n        features = features.concat(this.feature_map.zones || []);\n        if (this.located) {\n            features.push({\n                location: this.located,\n                content: null, // MapPinComponent,\n                data: {\n                    text: 'You are here',\n                },\n            } as any);\n        }\n        this.features = features;\n    }\n\n    public setRoleUsers(role: 'fire' | 'aid') {\n        if (this.user_role === role) {\n            this.user_role = null;\n            this.search_options = [];\n        } else {\n            this.user_role = role;\n            this.search_options = this.role_users[role] || [];\n        }\n    }\n\n    /**\n     * Open bottom sheet for selecting desk filters\n     */\n    public openDeskFilters() {\n        const filters = [];\n        const level = this._org.levelWithID([this.active_level]);\n        const building = this._org.buildings.find((bld) => bld.id === level.parent_id);\n        const feature_list = this.available_desk_features || building.attributes || [];\n        for (const feature of feature_list) {\n            if (!filters.find((i) => i.id === feature) && feature) {\n                filters.push({\n                    id: feature,\n                    name: feature,\n                    active: !!this.desk_filters.find((filter) => filter.id === feature),\n                });\n            }\n        }\n        if (filters.length <= 0) {\n            notifyWarn(`No desk filters for ${building.name}`);\n            return;\n        }\n        const ref = this._dialog.open(FiltersComponent);\n        ref.componentInstance.filters = filters;\n        ref.componentInstance.name = 'Desk';\n        ref.afterClosed().subscribe(() => {\n            this.desk_filters = ref.componentInstance.filters.filter((i) => i.active);\n        });\n    }\n\n    /**\n     * Load and store location details for the space\n     * @param space_id Engine system ID of the space to locate\n     */\n    private loadSpaceLocation(space_id: string) {\n        const space = this._spaces.space_list.filter((space) => space.id === space_id)[0];\n        if (space) {\n            if (!space.level) {\n                return this.timeout('locate_space', () => this.loadSpaceLocation(space_id));\n            }\n            this.message = `Loading location of ${space.name}`;\n            this.loading = true;\n            this.focus = {\n                location: space.map_id,\n                content: null, // MapPinComponent,\n                zoom: 100,\n                data: {\n                    text: space.name,\n                },\n            } as any;\n            this.loading = false;\n            this.message = '';\n        }\n    }\n\n    public location(level_id: string): string {\n        const level = this._org.levelWithID([level_id]) || {\n            name: 'Level X',\n            parent_id: '',\n        };\n        const building = this._org.buildings.find((bld) => bld.id === level.parent_id) || {\n            name: 'Building X',\n        };\n        return `${building.name}, ${level.name}`;\n    }\n\n    /**\n     * Load and store the location for the user\n     * @param user_email Email address of the selected user\n     */\n    private async loadUserLocation(user_email: string) {\n        this.focus = null;\n        this.loading = true;\n        this.message = `Loading user details...`;\n        const name = user_email.split('.')[0];\n        const user = (await this._people.query({ q: name })).find(\n            (a_user) => a_user.email === user_email\n        );\n        if (!user) {\n            return user;\n        }\n        this.message = `Loading location for ${user.name}...`;\n        // const location = await user.locate();\n        // if (!location || !location.level) {\n        //     return user;\n        // }\n        // this.active_level = location.level.id;\n        // if (location.fixed) {\n        //     this.focus = {\n        //         id: location.id,\n        //         content: MapPinComponent,\n        //         zoom: 100,\n        //         data: {\n        //             text: `${user.name} is here`\n        //         }\n        //     };\n        // } else {\n        //     this.focus = {\n        //         coordinates: {\n        //             x: location.x,\n        //             y: location.y\n        //         },\n        //         content: MapRangeComponent,\n        //         zoom: 100,\n        //         data: {\n        //             text: `${user.name} is here`,\n        //             diameter: 1000 || location.confidence || 5\n        //         }\n        //     };\n        // }\n        // this.loading = false;\n        // this.message = '';\n        return user;\n    }\n\n    private async loadRoleUsers() {\n        const building_id = localStorage.getItem('KIOSK.building');\n        const building = this._org.buildings.find((bld) => bld.id === building_id);\n        if (building) {\n            // this.role_users.aid = await this._service.Groups.show('FirstAid', {\n            //     location: building.code\n            // });\n            // this.role_users.fire = await this._service.Groups.show('FireWarden', {\n            //     location: building.code\n            // });\n        }\n    }\n\n    private clearView() {\n        this.desk_filters = [];\n        this.status_map.desks = [];\n        this.status_map.zones = [];\n        this.focus = null;\n        this.clear_time = new Date().getTime();\n        this.loading = false;\n        this.user_role = null;\n        this.message = '';\n        this.user_error = false;\n        this.processStatuses();\n        this.processFeatures();\n    }\n\n    /**\n     * Bootstrap application from URL params\n     * @param level_id Level zone ID to bootstrap\n     * @param orientation Map orientation to bootstrap\n     */\n    private bootstrap(level_id: string, orientation: number, location: string) {\n        if (localStorage) {\n            const level = this._org.levelWithID([level_id]);\n            if (!level) {\n                return;\n            }\n            const building = this._org.buildings.find((bld) => bld.id === level.parent_id);\n            if (!building) {\n                return;\n            }\n            localStorage.setItem('KIOSK.level', level_id);\n            localStorage.setItem('KIOSK.building', building.id);\n            if (orientation) {\n                localStorage.setItem('KIOSK.orientation', `${orientation}`);\n            }\n            if (location) {\n                localStorage.setItem('KIOSK.location', `${location}`);\n                this.located = location;\n            }\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { bootstrap: null },\n                queryParamsHandling: 'merge',\n            });\n        }\n    }\n}\n","<div class=\"map-view\">\n    <div class=\"header\">\n        <explore-search\n            [options]=\"search_options\"\n            [type]=\"type\"\n            [zone]=\"active_level\"\n            [clear]=\"clear_time\"\n            [placeholder]=\"search_placeholder\"\n        ></explore-search>\n    </div>\n    <div class=\"body\">\n        <div class=\"status-list\" hidden>\n            <i\n                space-status\n                [zone]=\"active_level\"\n                (status)=\"status_map.spaces = $event; processStatuses()\"\n                (listeners)=\"listener_map.spaces = $event; processListeners()\"\n                (features)=\"feature_map.spaces = $event; processFeatures()\"\n            ></i>\n            <i\n                desk-status\n                *ngIf=\"type === ''\"\n                [filters]=\"desk_filters\"\n                [zone]=\"active_level\"\n                (status)=\"status_map.desks = $event; processStatuses()\"\n                (features)=\"available_desk_features = $event\"\n            ></i>\n            <i\n                zone-status\n                [zone]=\"active_level\"\n                (status)=\"status_map.zones = $event; processStatuses()\"\n            ></i>\n        </div>\n        <a-map-controls *ngIf=\"type !== 'user'\" overlay [(level)]=\"active_level\"></a-map-controls>\n        <a-map\n            *ngIf=\"!user_error\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [src]=\"map_url\"\n            [cssStyles]=\"style_map\"\n            [listeners]=\"listeners\"\n            [features]=\"features\"\n        >\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </a-map>\n        <a-zoom-controls overlay [(zoom)]=\"zoom\" [(position)]=\"center\"></a-zoom-controls>\n        <div class=\"message\" [class.no-user]=\"user_error\" *ngIf=\"message\">\n            <div class=\"text\">{{ message }}</div>\n            <div class=\"loader\">\n                <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n            </div>\n        </div>\n        <div class=\"select-role\" *ngIf=\"type === 'user'\">\n            <div class=\"info\">Or search for:</div>\n            <div class=\"actions\">\n                <button\n                    mat-button\n                    [class.inverse]=\"user_role !== 'fire'\"\n                    (click)=\"setRoleUsers('fire')\"\n                >\n                    Fire Wardens\n                </button>\n                <button\n                    mat-button\n                    [class.inverse]=\"user_role !== 'aid'\"\n                    (click)=\"setRoleUsers('aid')\"\n                >\n                    First Aiders\n                </button>\n            </div>\n        </div>\n        <button\n            *ngIf=\"type === ''\"\n            mat-button\n            class=\"filters\"\n            [class.active]=\"desk_filters && desk_filters.length\"\n            (click)=\"openDeskFilters()\"\n        >\n            <div class=\"content\">\n                <div class=\"text\">Filters</div>\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'filter_list' }\"></app-icon>\n            </div>\n        </button>\n    </div>\n    <a-footer-legend></a-footer-legend>\n    <div [class]=\"'time ' + type\">{{ time }}</div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Point } from '@yuion/svg-viewer';\n\n@Component({\n    selector: 'a-zoom-controls',\n    templateUrl: './zoom-controls.component.html',\n    styleUrls: ['./zoom-controls.component.scss']\n})\nexport class ZoomControlsComponent implements OnInit {\n    /** Current zoom level of the map */\n    @Input() public zoom: number;\n    /** Current center position of the map */\n    @Input() public position: Point;\n    /** Emitter for changes to the zoom value */\n    @Output() public zoomChange = new EventEmitter<number>();\n    /** Emitter for changes to the position */\n    @Output() public positionChange = new EventEmitter<Point>();\n\n    public min_zoom: number = 1;\n\n    public max_zoom: number = 10;\n\n    constructor() {}\n\n    public ngOnInit(): void {\n\n    }\n\n    public zoomIn() {\n        this.zoom = (this.zoom || this.min_zoom) * 1.2;\n        if (this.zoom > this.max_zoom) {\n            this.zoom = this.max_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public zoomOut() {\n        this.zoom = (this.zoom || this.min_zoom) * (1 / 1.2);\n        if (this.zoom < this.min_zoom) {\n            this.zoom = this.min_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public reset() {\n        this.zoom = this.min_zoom;\n        this.position = { x: 0.5, y: 0.5 };\n        this.zoomChange.emit(this.zoom);\n        this.positionChange.emit(this.position);\n    }\n}\n","<div class=\"zoom-control\">\n    <button mat-icon-button name=\"zoom-in\" (click)=\"zoomIn()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"zoom-out\" (click)=\"zoomOut()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"reset\" (click)=\"reset()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'replay' }\"></app-icon>\n    </button>\n</div>\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@user-interfaces/common';\n\n@Component({\n  selector: 'a-footer-legend',\n  templateUrl: './footer-legend.component.html',\n  styleUrls: ['./footer-legend.component.scss']\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        { id: 'not-bookable', name: 'Not Bookable', colour: '#7D7D7D', dark: true },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' }\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        { id: '', name: 'Lifts Up/Down', icon: { type: 'img', src: 'assets/img/lift.svg' } },\n        { id: '', name: 'Fire Extinguisher', icon: { type: 'img', src: 'assets/img/fireExt.svg' } },\n        { id: '', name: 'First Aid & AED', icon: { type: 'img', src: 'assets/img/aid.svg' } },\n        { id: '', name: 'Cafe/Service', icon: { type: 'img', src: 'assets/img/Cafe.svg' } },\n        { id: '', name: 'Mail/Noticeboard', icon: { type: 'img', src: 'assets/img/mail.svg' } },\n        { id: '', name: 'Restrooms M/F', icon: { type: 'img', src: 'assets/img/Restrooms.svg' } },\n        { id: '', name: 'Map Kiosk', icon: { type: 'img', src: 'assets/img/kiosk.svg' } },\n        { id: '', name: 'Screen', icon: { type: 'img', src: 'assets/img/Screen.svg' } },\n        { id: '', name: 'Projector', icon: { type: 'img', src: 'assets/img/Projector.svg' } },\n        { id: '', name: 'Showers', icon: { type: 'img', src: 'assets/img/shower.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair2.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table1.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table3.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table4.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table5.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table6.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table7.svg' } },\n        { id: '', name: 'Funzone Games', icon: { type: 'img', src: 'assets/img/Tennis.svg' } },\n        { id: '', name: 'Concierge Pods', icon: { type: 'img', src: 'assets/img/Pod.svg' } },\n        { id: '', name: 'Phone Booths', icon: { type: 'img', src: 'assets/img/booth.svg' } }\n    ];\n}\n","<div class=\"footer-legend\">\n    <div class=\"tag\" (click)=\"show = !show\">\n        <button mat-button class=\"content\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_up' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"header\">\n        <div class=\"text\">Keys</div>\n    </div>\n    <div class=\"colour-legend\">\n        <div class=\"colour\" *ngFor=\"let item of colours\" [class.dark]=\"item.dark\" [style.background-color]=\"item.colour\">\n            {{ item.name }}\n        </div>\n    </div>\n    <div class=\"icon-legend\" [class.show]=\"show\">\n        <div class=\"icon\" *ngFor=\"let item of icon_list\">\n            <app-icon [icon]=\"item.icon\"></app-icon>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </div>\n</div>\n","\nimport { BaseDataClass, HashMap } from '@user-interfaces/common'\n\nimport * as dayjs from 'dayjs';\n\n/** General purpose booking class */\nexport class Booking extends BaseDataClass {\n    /** User Id */\n    public readonly user_id: string;\n    /** User email */\n    public readonly user_email: string;\n    /** User name */\n    public readonly user_name: string;\n    /** Desk asset id */\n    public readonly asset_id: string;\n    /** Zones */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: 'desk' | null;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Metadata */\n    public readonly extension_data: HashMap<any>;\n    /** Default type */\n    public readonly type: string;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n\n    constructor(data: Partial<Booking> = {}) {\n        super(data);\n        this.asset_id = data.asset_id;\n        this.zones = data.zones;\n        this.booking_type = data.booking_type;\n        this.type = data.type || 'booking';\n        const time = (data as any).booking_start * 1000 || data.date;\n        const start = time\n            ? dayjs(time).valueOf()\n            : dayjs()\n                  .minute(Math.ceil(dayjs().minute() / 5) * 5)\n                  .startOf('m')\n                  .valueOf();\n        this.date = start;\n        this.duration = data.duration || dayjs((data as any).booking_end * 1000).diff(start, 'm') || 60;\n        this.timezone = data.timezone;\n        this.user_email = data.user_email;\n        this.user_id = data.user_id;\n        this.user_name = data.user_name;\n        this.title = data.title || 'Desk booking';\n        this.description = data.description;\n        this.checked_in = data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.approver_id = data.approver_id;\n        this.approver_email = data.approver_email;\n        this.approver_name = data.approver_name;\n        this.extension_data = data.extension_data;\n        this.all_day = data.all_day || true;\n        this.status = this.rejected ? 'declined' : this.approved ? 'approved' : 'tentative';\n    }\n\n    public toJSON(this: Booking): HashMap<any> {\n        const data = super.toJSON();\n        data.booking_start = dayjs(this.date).unix();\n        if (this.all_day) {\n            data.booking_end = dayjs(this.date).endOf('d').unix();\n        } else {\n            data.booking_end = dayjs(this.date).add(this.duration, 'm').unix();\n        }\n        if (!data.timezone) {\n            data.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        if (!this.id) {\n            delete data.id;\n        }\n        delete data.date;\n        delete data.duration;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = dayjs(this.date);\n        const end = this.all_day ? dayjs(this.date).endOf('d') : start.add(this.duration, 'm');\n        return start.isAfter(end, 'm');\n    }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n    declarations: [],\n    imports: [],\n    providers: [],\n    exports: []\n})\nexport class SharedBookingsModule {}\n","import { HashMap } from '@user-interfaces/common';\nimport { Space } from '@user-interfaces/spaces';\nimport { User } from '@user-interfaces/users';\n\nexport interface IBookingOptions {\n    space: Space;\n    date?: number;\n    title?: string;\n    max_duration?: number;\n    min_duration?: number;\n}\nexport interface BookingNote {\n    /** Type of note */\n    type: 'equipment' | 'catering' | 'description' | 'private' | 'other';\n    /** Name of the note's author */\n    author: string;\n    /** Contents of the note */\n    message: string;\n    /** Time the note was added to the booking */\n    date: number;\n    /** Display value for the time */\n    time?: string;\n    /** ID of the space associated with the note */\n    space?: string;\n}\n\nexport const BOOKING_MUTABLE_FIELDS = [\n    'name',\n    'email',\n    'title',\n    'date',\n    'duration',\n    'organiser',\n    'body',\n    'type',\n    'has_catering',\n    'recurrence',\n    'space_list',\n    'attendees',\n    'configuration',\n] as const;\ntype BookingMutableTuple = typeof BOOKING_MUTABLE_FIELDS;\nexport type BookingMutableFields = BookingMutableTuple[number];\n\n/** Details about recurrence associated with the booking */\nexport interface BookingRecurrenceDetails {\n    /** CRON tab of the recurrence of the event */\n    readonly pattern: string;\n    /** Interval */\n    readonly interval: number;\n    /** Unix epoch in ms of the recurrence end date */\n    readonly end: number;\n    /** Calendar UID of the initial event */\n    readonly icaluid: string;\n}\n\nexport interface SpaceRules {\n    auto_approve: boolean;\n    hide: boolean;\n    room_type?: string;\n    max_length?: number;\n    min_length?: number;\n}\n\nexport interface BookingRule {\n    conditions: HashMap<string>;\n    rules: {\n        room_type?: string;\n        book_ahead?: string;\n        book_length?: string;\n        auto_approve?: boolean;\n    };\n}\n\nexport interface SpaceRuleOptions {\n    user: User;\n    space: Space;\n    time?: number;\n    duration?: number;\n    visitor_type?: string;\n    rules?: HashMap<readonly BookingRule[]>;\n}\n\nexport interface SpaceCheckOptions {\n    user: User;\n    space: Space;\n    time?: number;\n    visitor_type?: string;\n    duration?: number;\n    rules: HashMap<readonly string[] | string>;\n}\n","export * from './booking.class';\nexport * from './booking.interfaces';\nexport * from './booking.utilities';\nexport * from './bookings.module';\nexport * from './bookings.service';\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseClass, log, SettingsService } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\n@Component({\n    selector: 'app-explore',\n    templateUrl: './explore.component.html',\n    styleUrls: ['./explore.component.scss']\n})\nexport class ExploreComponent extends BaseClass implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        }\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            bld => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Reset the timeout for refreshing the kiosk view\n     */\n    public resetRefresh() {\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public refreshKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        this._dialog.closeAll();\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        } else {\n            this._router.navigate(['/explore', 'none'], { queryParams: { level } });\n        }\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', new Date().getTime());\n    }\n}\n","<div class=\"explore page\" (window:mousedown)=\"resetRefresh()\" (window:touchstart)=\"resetRefresh()\">\n    <header class=\"header\">\n        <div class=\"block\">\n            In an Emergency dial xtn 9 or {{ emergency_phone }}\n        </div>\n        <div class=\"nav\">\n            <a\n                mat-button\n                class=\"first\"\n                [routerLink]=\"['/explore', 'none']\"\n                routerLinkActive=\"active\"\n                queryParamsHandling=\"preserve\"\n            >\n                Workpoints\n            </a>\n            <a\n                mat-button\n                class=\"second\"\n                [routerLink]=\"['/explore', 'space']\"\n                routerLinkActive=\"active\"\n                queryParamsHandling=\"preserve\"\n            >\n                Spaces\n            </a>\n            <a\n                mat-button\n                class=\"third\"\n                [routerLink]=\"['/explore', 'user']\"\n                routerLinkActive=\"active\"\n                queryParamsHandling=\"preserve\"\n            >\n                People\n            </a>\n        </div>\n    </header>\n    <main class=\"body\">\n        <explore-map-view></explore-map-view>\n    </main>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    BaseClass,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@user-interfaces/common';\n\n@Component({\n    selector: 'a-map-legend',\n    templateUrl: './map-legend.component.html',\n    styleUrls: ['./map-legend.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class ExploreMapLegendComponent extends BaseClass implements OnInit {\n    /** Mapping of legend item groups */\n    public legend_items: HashMap<Identity[]> = {};\n    /** Mapping of map colours */\n    public colours: HashMap<string> = {};\n    /** Whether group names should be displayed */\n    public show_group_names: boolean;\n    /** Whether the legend items should be shown */\n    public show_legend = false;\n\n    /** List of group names for legend items */\n    public get group_names(): string[] {\n        return Object.keys(this.legend_items || {});\n    }\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const explore_settings =\n            this._settings.get('app.explore') || ({} as any);\n        this.legend_items = explore_settings.legend || {};\n        this.colours = explore_settings.colors || {};\n        this.show_group_names = !!explore_settings.show_legend_group_names;\n    }\n}\n","<div\n    class=\"map-legend\"\n    *ngIf=\"group_names && group_names.length\"\n    (click)=\"show_legend = !show_legend\"\n>\n    <h4>\n        <div class=\"title\">Legend</div>\n        <div class=\"icon\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: show_legend ? 'arrow_drop_up' : 'arrow_drop_down' }\"\n            ></app-icon>\n        </div>\n    </h4>\n    <div class=\"contents\" [@show]=\"show_legend ? 'show' : 'hide'\">\n        <ul>\n            <ng-container *ngFor=\"let group of group_names\">\n                <li class=\"group\" *ngIf=\"show_group_names\">\n                    <div class=\"bar\"></div>\n                    <div class=\"name\">{{ group }}</div>\n                    <div class=\"bar\"></div>\n                </li>\n                <li class=\"item\" name=\"item.key\" *ngFor=\"let item of legend_items[group]\">\n                    <div class=\"ref\">\n                        <ng-container *ngIf=\"item.icon; else colour_display\">\n                            <app-icon [icon]=\"item.icon\"></app-icon>\n                        </ng-container>\n                        <ng-template #colour_display>\n                            <div\n                                class=\"colour\"\n                                [style.background-color]=\"item.color || colours[item.key]\"\n                            ></div>\n                        </ng-template>\n                    </div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </li>\n            </ng-container>\n        </ul>\n    </div>\n</div>\n","import { Directive, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\nimport { MapStatus } from './status.interfaces';\n\n@Directive({\n    selector: '[zone-status]'\n})\nexport class ExploreZoneStatusDirective extends BaseClass implements OnInit, OnDestroy {\n    /** ID of the zone to show the statuses for */\n    @Input() public zone: string;\n    /** Updates the status based of the given time. Unix epoch in milliseconds */\n    @Input() public date: number;\n    /** Emitter for changes to the space status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** ID of the system to grab the zone usage details from */\n    public system_id: string;\n    /** Mapping of zones IDs to their utilisation */\n    public zone_usage: HashMap<number> = {};\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n\n    constructor(private _settings: SettingsService, private _org: OrganisationService) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        this.colour_map = this._settings.get('app.explore.colors') || {};\n    }\n\n    public ngOnDestroy() {\n        this.clearZones(this.zone);\n    }\n\n    public calculateStatus() {\n        const level = this._org.levelWithID([this.zone]);\n        if (!level) return;\n        const min_usage = level.settings.min_usage || 0;\n        const status_list: MapStatus[] = [];\n        for (const zone in this.zone_usage) {\n            if (this.zone_usage[zone] && this.zone_usage.hasOwnProperty(zone)) {\n                const usage = Math.max(min_usage, this.zone_usage[zone]);\n                const status = usage < 40 ? 'low' : (usage < 75 ? 'medium' : 'high');\n                status_list.push({\n                    id: zone,\n                    styles: {\n                        fill: this.colour_map[`zone-${status}`] || '#ccc'\n                    },\n                    status_id: status\n                })\n            }\n        }\n        this.status.emit(status_list);\n    }\n\n    public loadZones() {\n        const level = this._org.levelWithID([this.zone]);\n        if (!level) return;\n        const building = this._org.buildings.find(bld => bld.id === level.parent_id);\n        if (!building) return;\n        const floor_management = building.systems.floor_management;\n        if (!floor_management) return;\n        this.system_id = floor_management;\n        const mod = getModule(this.system_id, 'FloorManagement');\n        if (mod) {\n            this.subscription(`zone-${this.zone}.binding`, mod.binding(this.zone).bind());\n            this.subscription(`zone-${this.zone}.usage`, mod.binding(this.zone).listen().subscribe((usage => {\n                this.zone_usage = usage;\n                this.calculateStatus();\n            })));\n        }\n    }\n\n    public clearZones(zone_id: string) {\n        this.unsub(`zone-${zone_id}.binding`);\n        this.unsub(`zone-${zone_id}.usage`);\n        delete this.zone_usage;\n        this.zone_usage = {};\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnInit,\n    OnDestroy,\n    SimpleChanges,\n    OnChanges\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { ExploreSpaceInfoComponent } from '../overlays/space-info/space-info.component';\nimport { MapStatus, MapListener, SpaceStatus } from './status.interfaces';\nimport { ExploreBookingModalComponent, ExploreBookingModalData } from '../../overlays/explore-booking-modal/explore-booking-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\nimport { ViewerFeature } from '@yuion/svg-viewer';\nimport { Space, SpacesService } from '@user-interfaces/spaces';\nimport { CalendarEvent } from '@user-interfaces/events';\n\n@Component({\n    selector: '[space-status]',\n    template: `\n        <div class=\"bindings\" *ngIf=\"space_list\">\n            <i\n                *ngFor=\"let space of space_list\"\n                binding\n                [sys]=\"space.id\"\n                mod=\"Bookings\"\n                bind=\"today\"\n                (modelChange)=\"processSpaceBookings(space, $event)\"\n            ></i>\n        </div>\n        <ng-content></ng-content>\n    `\n})\nexport class ExploreSpaceStatusComponent extends BaseClass\n    implements OnInit, OnChanges, OnDestroy {\n    /** ID of the zone to grab the spaces */\n    @Input() public zone: string;\n    /** Updates the status based of the given time. Unix epoch in milliseconds */\n    @Input() public date: number;\n    /** Emitter for changes to the space status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** Emitter for changes to the space status */\n    @Output() public listeners = new EventEmitter<MapListener[]>();\n    /** Emitter for changes to the space status */\n    @Output() public features = new EventEmitter<ViewerFeature[]>();\n    /** List of spaces to grab the statuses for */\n    public space_list: Space[] = [];\n    /** Mapping of spaces to active bookings */\n    public active_bookings: HashMap<CalendarEvent[]> = {};\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n\n    constructor(private _settings: SettingsService, private _dialog: MatDialog, private _spaces: SpacesService) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        this.colour_map = this._settings.get('app.explore.colors') || {};\n        this.subscription(\n            'spaces',\n            this._spaces.list.subscribe(() => this.loadSpaces())\n        );\n        this.interval('update_status', () => this.calculateStatus(), 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone || changes.date) {\n            this.loadSpaces();\n        }\n    }\n\n    public ngOnDestroy() {\n        this.clearSpaces();\n    }\n\n    /**\n     * Determine the availability statuses for all the spaces in the set zone\n     */\n    public calculateStatus() {\n        this.timeout('process_statuses', () => {\n            const statuses: MapStatus[] = [];\n            for (const space of this.space_list) {\n                const status = this.getStatus(space, this.date);\n                statuses.push({\n                    id: `${space.map_id}-status`,\n                    styles: {\n                        fill: this.colour_map[`space-${status}`] || '#000',\n                        opacity: 0.8\n                    },\n                    status_id: status\n                });\n            }\n            this.status.emit(statuses);\n        });\n    }\n\n    /**\n     * Get the status of the space at the set time\n     * @param space Space to get the status for\n     */\n    private getStatus(space: Space, datetime?: number): SpaceStatus {\n        if (!space.bookable) {\n            return 'not-bookable';\n        }\n        const bookings = this.active_bookings[space.id] || [];\n        const date = dayjs(datetime)\n            .startOf('m')\n            .second(1);\n        const current_booking = bookings.find(booking => {\n            const start = dayjs(booking.date).startOf('m');\n            const end = start.add(booking.duration, 'm');\n            return date.isAfter(start, 's') && date.isBefore(end, 'm');\n        });\n        if (current_booking) {\n            return 'unavailable';\n        }\n        return 'available';\n    }\n\n    /**\n     * Process raw booking data for the given space\n     * @param space Space associated with the bookings\n     * @param data List of booking data\n     */\n    public processSpaceBookings(space: Space, data: HashMap[]) {\n        const bookings = (data || []).map(\n            bkn_data => new CalendarEvent(bkn_data)\n        );\n        this.active_bookings[space.id] = bookings;\n        this.calculateStatus();\n    }\n\n    /**\n     * Load listeners for space data\n     */\n    private loadSpaces() {\n        this.clearSpaces();\n        this.space_list = this._spaces.space_list.filter(space => space.zones.indexOf(this.zone) >= 0);\n        const listeners: MapListener[] = [];\n        for (const space of this.space_list) {\n            listeners.push({\n                id: `${space.map_id}-status`,\n                event: 'mouseenter',\n                callback: () =>\n                    this.features.emit([\n                        {\n                            location: space.map_id,\n                            content: ExploreSpaceInfoComponent,\n                            data: this.generateSpaceData(space)\n                        } as any\n                    ])\n            });\n            listeners.push({\n                id: `${space.map_id}-status`,\n                event: 'mouseleave',\n                callback: () => this.features.emit([])\n            });\n            // if (space.bookable) {\n            //     listeners.push({\n            //         id: `${space.map_id}-status`,\n            //         event: 'click',\n            //         callback: () => this.bookSpace(space)\n            //     });\n            // }\n        }\n        this.listeners.emit(listeners);\n    }\n\n    /**\n     * Clear current space and booking data\n     */\n    private clearSpaces() {\n        delete this.active_bookings;\n        this.active_bookings = {};\n    }\n\n    private generateSpaceData(space: Space) {\n        const data: any = { space, bookings: this.active_bookings[space.id] };\n        return data;\n    }\n\n    private bookSpace(space: Space) {\n        const ref = this._dialog.open<ExploreBookingModalComponent, ExploreBookingModalData>(\n            ExploreBookingModalComponent,\n            {\n                maxHeight: 'none',\n                maxWidth: '32em',\n                height: 'auto',\n                width: 'auto',\n                data: {\n                    space\n                }\n            }\n        );\n    }\n}\n","import {\n    Component,\n    Output,\n    EventEmitter,\n    Input,\n    SimpleChanges,\n    OnChanges,\n    OnDestroy,\n} from '@angular/core';\nimport { interval } from 'rxjs';\nimport { first, switchMap } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, Identity, SettingsService, unique } from '@user-interfaces/common';\nimport { BookingsService } from '@user-interfaces/bookings';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\nimport { MapStatus } from './status.interfaces';\n\n@Component({\n    selector: '[desk-status]',\n    template: ` <ng-content></ng-content> `,\n})\nexport class ExploreDeskStatusComponent extends BaseClass implements OnChanges, OnDestroy {\n    /** ID of the active level */\n    @Input() public zone: string;\n    /** ID of the active level */\n    @Input() public filters: Identity[];\n    /** ID of the desk to checkin */\n    @Input() public checkin: string;\n    /** Emitter for changes to the desk status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** Emitter for available desk features */\n    @Output() public features = new EventEmitter<string[]>();\n    /** ID of the desk management system */\n    public system_id: string;\n    /** List of desks for the active level */\n    public id_list: string[];\n    /** List of desk IDs in use on the active level */\n    public in_use: string[];\n    /** List of desk IDs that are reserved on the active level */\n    public reserved: string[];\n    /** Number of occupied desks on the active level */\n    public occupied: number = 0;\n    /** Number of free desks on the active level */\n    public free: number = 0;\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n\n    public last_desks_list: any[];\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.colour_map = this._settings.get('app.explore.colors') || {};\n        this.initPolling();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone) {\n            this.initPolling();\n            this.processDeskData(this.last_desks_list || []);\n            this.calculateStatus();\n        }\n        if (changes.filters) {\n            this.processDeskData(this.last_desks_list || []);\n            this.calculateStatus();\n        }\n    }\n\n    public initPolling() {\n        if (!this._org.levelWithID([this.zone])) {\n            return this.timeout('init_polling', () => this.initPolling());\n        }\n        const level = this._org.levelWithID([this.zone]);\n        this.subscription(\n            'poll',\n            interval(15 * 1000)\n                .pipe(\n                    switchMap((_) =>\n                        this._bookings.query({\n                            building: level.parent_id,\n                            level: this.zone,\n                        })\n                    )\n                )\n                .subscribe((desk_list: any[]) => {\n                    this.processDeskData(desk_list);\n                    this.calculateStatus();\n                    this.last_desks_list = desk_list;\n                })\n        );\n    }\n\n    public calculateStatus() {\n        const desk_list = this.id_list || [];\n        const status_list: MapStatus[] = [];\n        for (const desk_id of desk_list) {\n            const in_use = (this.in_use || []).find((id) => id === desk_id);\n            const reserved = (this.reserved || []).find((id) => id === desk_id);\n            const status = in_use ? 'unavailable' : reserved ? 'reserved' : 'available';\n            status_list.push({\n                id: desk_id,\n                styles: {\n                    fill: this.colour_map[`desk-${status}`],\n                    stroke: this.colour_map[`desk-${status}-stroke`],\n                },\n                status_id: status,\n            });\n        }\n        this.status.emit(status_list);\n    }\n\n    /**\n     * Process API desk data\n     * @param desk_list List of desk data from the API\n     */\n    private processDeskData(desk_list: any[]) {\n        if (!desk_list || !desk_list.length) {\n            return;\n        }\n        const filtered_list = this.filters.length\n            ? desk_list.filter((desk) => {\n                  const features = unique(desk.attributes.split(','));\n                  let matches = 0;\n                  for (const feature of features) {\n                      if (this.filters.find((filter) => filter.id === feature)) {\n                          matches++;\n                      }\n                  }\n                  return matches >= this.filters.length;\n              })\n            : desk_list;\n        this.features.emit(\n            unique(\n                desk_list.reduce(\n                    (features, desk) => features.concat(desk.attributes.split(',')),\n                    []\n                )\n            )\n        );\n\n        this.id_list = filtered_list.map((desk) => desk.id);\n        this.in_use = filtered_list.reduce((list, desk) => {\n            if (!desk.free) {\n                list.push(desk.id);\n            }\n            return list;\n        }, []);\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BaseAPIService, HashMap } from '@user-interfaces/common';\n\nimport { Booking } from './booking.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor() {\n        super();\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n    }\n\n\n    public checkIn(booking: Booking, state: boolean = true) {\n        return this.task(booking.id, 'check_in', {}, 'post', { state });\n    }\n\n    public approve(id: string, fields?: HashMap) {\n        return this.task(id, 'approve', fields);\n    }\n\n    public reject(id: string, fields?: HashMap) {\n        return this.task(id, 'reject', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { Identity } from '@user-interfaces/common';\n\n@Component({\n    selector: 'filter-list',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss']\n})\nexport class FiltersComponent {\n    /** Type of item being filtered */\n    public name: string;\n    /** List of available filter options */\n    public filters: Identity[] = [];\n\n    constructor(private _dialog_ref: MatDialogRef<FiltersComponent>) { }\n\n    public applyChanges() {\n        this._dialog_ref.close();\n    }\n}\n","<header>{{ name }} Filters</header>\n<mat-checkbox *ngFor=\"let item of filters\" [checked]=\"item.active\" (change)=\"item.active = $event.checked\">\n    {{ item.name }}\n</mat-checkbox>\n<button mat-button (click)=\"applyChanges()\">Apply</button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from '../ui/shared.module';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { ExploreSpaceStatusComponent } from './status-managers/space-status.component';\nimport { ExploreDeskStatusComponent } from './status-managers/desk-status.component';\nimport { ExploreZoneStatusDirective } from './status-managers/zone-status.directive';\nimport { ZoomControlsComponent } from './zoom-controls/zoom-controls.component';\nimport { ExploreSpaceInfoComponent } from './overlays/space-info/space-info.component';\nimport { ExploreSearchComponent } from './search/search.component';\nimport { ExploreMapLegendComponent } from './map-legend/map-legend.component';\nimport { FooterLegendComponent } from './footer-legend/footer-legend.component';\nimport { FiltersComponent } from './filters/filters.component';\nimport { ComponentsModule } from '@user-interfaces/components';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        MapViewComponent,\n        ExploreSpaceStatusComponent,\n        ExploreDeskStatusComponent,\n        ExploreZoneStatusDirective,\n        ZoomControlsComponent,\n        ExploreSpaceInfoComponent,\n        ExploreSearchComponent,\n        ExploreMapLegendComponent,\n        FooterLegendComponent,\n        FiltersComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ComponentsModule,\n        FormsModule\n    ],\n    entryComponents: [\n        ExploreSpaceInfoComponent,\n        FiltersComponent\n    ]\n})\nexport class ExploreModule {}\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { formatDuration } from 'date-fns';\n\nimport { getFreeBookingSlots } from '@user-interfaces/bookings';\nimport { BaseClass, HashMap } from '@user-interfaces/common';\nimport { CalendarEvent } from '@user-interfaces/events';\nimport { Space } from '@user-interfaces/spaces';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-space-info',\n    templateUrl: './space-info.component.html',\n    styleUrls: ['./space-info.component.scss']\n})\nexport class ExploreSpaceInfoComponent extends BaseClass implements OnInit {\n    /** Status of the space */\n    public status: string;\n    /** String of time until next booking */\n    public available_until: string;\n\n    public context: HashMap = {};\n\n    /** Named position of the element location on the map */\n    public get quadrant(): 'top left' | 'top right' | 'bottom left' | 'bottom right' {\n        if (!this.context || !this.context.position) {\n            return 'top left';\n        }\n        const pos = this.context.position;\n        return pos.x > 50 && pos.y > 50\n            ? 'bottom right'\n            : pos.x < 50 && pos.y > 50\n                ? 'bottom left'\n                : pos.y < 50\n                    ? 'top right'\n                    : 'top left';\n    }\n\n    /** CSS class for the current status of the space */\n    public get status_class(): string {\n        return (this.status || '').toLowerCase().split(' ').join('-');\n    }\n\n    /** Space to display on the component */\n    public get space(): Space {\n        if (!this.context || !this.context.data) {\n            return null;\n        }\n        return this.context.data.space;\n    }\n\n    /** List of bookings from the space for the currently displayed time */\n    public get bookings(): CalendarEvent[] {\n        if (!this.context || !this.context.data) {\n            return [];\n        }\n        return this.context.data.bookings || [];\n    }\n\n    constructor() {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.processBookings();\n        this.interval('update_bookings', () => this.processBookings(), 60 * 1000);\n    }\n\n    /**\n     * Calculate availability of space based off given bookings\n     */\n    public processBookings(): void {\n        if (!this.space) { return; }\n        const free_slots = getFreeBookingSlots(this.bookings);\n        const now = dayjs();\n        const next_free_slot = free_slots.find(slot => {\n            const start = dayjs(slot.start);\n            const end = dayjs(slot.end);\n            return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n        });\n        const start = dayjs(next_free_slot.start);\n        const end = dayjs(next_free_slot.end);\n        const currently_free = (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n        const time_until_next_block = formatDuration({ minutes: currently_free ? end.diff(now, 'm') : start.diff(now, 'm') });\n        const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n        const free_today = currently_free && !end.isSame(now, 'd');\n        this.status = !this.space.bookable ? 'Not Bookable' : currently_free ? 'Available' : 'Meeting in Progress';\n        this.available_until = free_today\n            ? 'No meetings today'\n            : currently_free\n                ? `Free until ${end.format('h:mm a')}(${time_until_next_block})`\n                : free_tomorrow\n                    ? 'Unavailable today'\n                    : `Free at ${start.format('h:mm a')}(${time_until_next_block})`\n    }\n}\n","<div *ngIf=\"space\" [id]=\"space.id\" [class]=\"'space-info ' + quadrant\">\n    <div class=\"arrow\"></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"availability\">\n            <div name=\"status\" [class]=\"status_class\">{{ status }}</div>\n            <div name=\"available-until\" *ngIf=\"status_class !== 'not-bookable'\">{{ available_until }}</div>\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}