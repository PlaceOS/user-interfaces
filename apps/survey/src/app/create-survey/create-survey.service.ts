import { Injectable } from '@angular/core';
import { Observable, BehaviorSubject } from 'rxjs';
import { BaseClass } from '@placeos/common';

export enum QuestionType {
    text = 'text',
    checkbox = 'checkbox',
    dropdown = 'dropdown',
    rating = 'rating',
}
export interface Question {
    type: QuestionType;
    name: string;
    title: string;
    choices?: any[];
}

@Injectable({
    providedIn: 'root',
})
export class CreateSurveyService extends BaseClass {
    //Store of survey questions generated by user
    private _questions: BehaviorSubject<Question[]> = new BehaviorSubject<
        Question[]
    >([]);
    questions$: Observable<Question[]> = this._questions.asObservable();

    set questions(questions: Question[]) {
        this._questions.next(questions);
    }

    get questions() {
        return this._questions.getValue();
    }

    //Store of JSON generated from survey questions
    private _surveyJSON: BehaviorSubject<any> = new BehaviorSubject<any>({}); //TODO: data type

    surveyJSON$: Observable<any> = this._surveyJSON.asObservable();

    set surveyJSON(json: any) {
        this._surveyJSON.next(json);
    }

    get surveyJSON() {
        return this._surveyJSON.getValue();
    }

    constructor() {
        super();
    }

    generateJSON() {
        console.log('triggered');
    }
}
