{"version":3,"file":"commands.js","mappings":";UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;;;;ACPD;;;AAGG;;AAEH;AAEA,MAAM,CAAC,OAAP,CAAe,MAAK,CAClB;AACD,CAFD;AAIA;;;AAGG;;AACH,SAAS,MAAT,CAAgB,KAAhB,EAAiD;AAC/C,QAAM,OAAO,GAAsC;AACjD,QAAI,EAAE,MAAM,CAAC,YAAP,CAAoB,2BAApB,CAAgD,oBADL;AAEjD,WAAO,EAAE,mBAFwC;AAGjD,QAAI,EAAE,YAH2C;AAIjD,cAAU,EAAE;AAJqC,GAAnD,CAD+C,CAQ/C;;AACA,QAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,IAAvB,CAA4B,oBAA5B,CAAiD,YAAjD,CAA8D,QAA9D,EAAwE,OAAxE,EAT+C,CAW/C;;AACA,OAAK,CAAC,SAAN;AACD;;AAED,SAAS,SAAT,GAAkB;AAChB,SAAO,OAAO,IAAP,KAAgB,WAAhB,GACH,IADG,GAEH,OAAO,MAAP,KAAkB,WAAlB,GACA,MADA,GAEA,OAAO,qBAAP,KAAkB,WAAlB,GACA,qBADA,GAEA,SANJ;AAOD;;AAED,MAAM,CAAC,GAAG,SAAS,EAAnB,EAEA;;AACA,CAAC,CAAC,MAAF,GAAW,MAAX,C","sources":["webpack:///webpack/bootstrap?","webpack:///webpack/runtime/global?","webpack:///./commands/commands.ts?"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event: Office.AddinCommands.Event) {\n  const message: Office.NotificationMessageDetails = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal() as any;\n\n// The add-in command functions need to be available in global scope\ng.action = action;\n"],"names":[],"sourceRoot":""}