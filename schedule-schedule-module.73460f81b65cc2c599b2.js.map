{"version":3,"sources":["./src/app/schedule/schedule-state.service.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/isToday/index.js","./src/app/schedule/event-list/event-list-item.component.ts","./src/app/schedule/event-list/event-list.component.ts","./src/app/schedule/event-list/event-view.component.ts","./src/app/schedule/schedule.component.ts","./src/app/schedule/view-event/booking-details.component.ts","./src/app/schedule/view-event/event-edit.component.ts","./src/app/schedule/view-event/event-details.component.ts","./src/app/schedule/view-event/view-event.component.ts","./src/app/schedule/schedule.routes.ts","./src/app/schedule/schedule.module.ts"],"names":["ScheduleStateService","_events","_bookings","_calendars","_dialog","_router","super","_loading","BehaviorSubject","_poll","_active_item","_event_list","_options","date","Date","valueOf","loading","this","asObservable","events","options","calendars","calendar_list","active_item","pipe","debounceTime","switchMap","id","show","calendar","getValue","throwError","catchError","_","of","map","_item","shareReplay","filtered_events","combineLatest","filter","e","subscription","next","start","startOfDay","duration","dirtyDate","requiredArgs","arguments","isSameDay","now","isToday","end","endOfDay","addDays","Promise","all","query","period_start","Math","floor","period_end","type","bookings","concat","subscribe","event_list","list","item","find","i","sort","a","b","console","log","delay","interval","clearInterval","sessionStorage","booking","setItem","JSON","stringify","navigate","details","title","content","icon","is_event","method","delete","err","catch","close","statusText","message","queryParamsHandling","ScheduleEventListItemComponent","isAfter","event","status","isBefore","addMinutes","location","has_visitors","all_day","format","ScheduleEventListComponent","ScheduleEventViewComponent","_state","_el","end_of_week","mapping","count","length","min_date","setDate","d","setOptions","setCalendar","startPolling","ngOnDestroy","stopPolling","day_lists","Array","prototype","slice","call","nativeElement","querySelectorAll","scroll_top","target","scrollTop","active_day","el","offsetTop","getAttribute","timeout","querySelector","scrollIntoView","behavior","inline","scrollTo","onScroll","ScheduleComponent","show_menu","BookingDetailsComponent","when","add","isSame","deleteEvent","toPromise","space","name","map_id","asset_id","zones","open","width","maxWidth","maxHeight","data","EventEditComponent","change","form","changes","emit","markAllAsTouched","valid","dialog_ref","componentInstance","reason","warn","EventDetailsComponent","_users","_spaces","editing","duplicateEvent","editEvent","creator","current","formatDuration","minutes","catering","order","items","resources","email","attendees","meeting_link","body","catering_items","catering_note","ROUTES","path","component","children","ScheduleViewEventComponent","_route","_location","o","setID","paramMap","queryParamMap","param","queryParam","has","get","first","clearTimeout","back","redirectTo","ScheduleModule","forChild"],"mappings":"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","file":"schedule-schedule-module.73460f81b65cc2c599b2.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Booking, BookingsService } from '@user-interfaces/bookings';\nimport { CalendarService } from '@user-interfaces/calendar';\nimport {\n    BaseClass,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    timePeriodsIntersect\n} from '@user-interfaces/common';\nimport { CalendarEvent, EventsService } from '@user-interfaces/events';\nimport { addDays, endOfDay, isToday, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, of, throwError } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap\n} from 'rxjs/operators';\n\nexport interface ScheduleOptions {\n    date: number;\n    calendar?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends BaseClass {\n    private _loading = new BehaviorSubject<string>('');\n    private _poll = new BehaviorSubject<boolean>(false);\n\n    private _active_item = new BehaviorSubject<string>('');\n\n    private _event_list = new BehaviorSubject<(CalendarEvent | Booking)[]>([]);\n\n    private _options = new BehaviorSubject<ScheduleOptions>({\n        date: new Date().valueOf(),\n    });\n\n    private _item: CalendarEvent | Booking;\n\n    public readonly loading = this._loading.asObservable();\n    public readonly events = this._event_list.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly calendars = this._calendars.calendar_list;\n\n    public readonly active_item = this._active_item.pipe(\n        debounceTime(500),\n        switchMap((id) => {\n            return id\n                ? this._events.show(id, {\n                      calendar: this._options.getValue().calendar,\n                  })\n                : throwError('No ID');\n        }),\n        catchError((_) =>\n            this._active_item.getValue()\n                ? this._bookings.show(this._active_item.getValue())\n                : of(null)\n        ),\n        catchError((_) => of(null)),\n        map((_: CalendarEvent | Booking | null) => {\n            this._item = _;\n            return _;\n        }),\n        shareReplay()\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._options,\n        this._event_list,\n    ]).pipe(\n        map(([options, events]) => {\n            return events.filter(\n                (e) =>\n                    (options.calendar && e instanceof CalendarEvent) ||\n                    ((!options.calendar || options.calendar === 'desks') &&\n                        e instanceof Booking)\n            );\n        })\n    );\n\n    public get date() {\n        return this._options.getValue().date;\n    }\n\n    constructor(\n        private _events: EventsService,\n        private _bookings: BookingsService,\n        private _calendars: CalendarService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n        this.subscription(\n            'event_list',\n            combineLatest([this._options, this._poll])\n                .pipe(\n                    debounceTime(1000),\n                    switchMap(([options]) => {\n                        this._loading.next(' ');\n                        const start = startOfDay(options.date).valueOf();\n                        let duration = isToday(start) ? 6 : 4;\n                        const end = endOfDay(\n                            addDays(start, duration)\n                        ).valueOf();\n                        return Promise.all([\n                            this._events.query({\n                                period_start: Math.floor(start / 1000),\n                                period_end: Math.floor(end / 1000),\n                                calendars: options.calendar,\n                            }),\n                            this._bookings.query({\n                                period_start: Math.floor(start / 1000),\n                                period_end: Math.floor(end / 1000),\n                                type: 'desk',\n                            }),\n                        ]);\n                    }),\n                    map(([events, bookings]) =>\n                        (events as any[]).concat(bookings)\n                    ),\n                    catchError((_) => [])\n                )\n                .subscribe((event_list) => {\n                    const start = startOfDay(\n                        this._options.getValue().date\n                    ).valueOf();\n                    const end = endOfDay(addDays(start, 6)).valueOf();\n                    let list = this._event_list.getValue().filter((item) => {\n                        return (\n                            !timePeriodsIntersect(\n                                start,\n                                end,\n                                item.date,\n                                item.date + item.duration * 60 * 1000\n                            ) && !event_list.find((i) => i.id === item.id)\n                        );\n                    });\n                    list = list.concat(event_list);\n                    list.sort((a, b) => a.date - b.date);\n                    this._event_list.next(list);\n                    this._loading.next('');\n                })\n        );\n    }\n\n    public setOptions(options: Partial<ScheduleOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setItem(id: string) {\n        console.log('Set ID:', id);\n        this._active_item.next(id);\n    }\n\n    public startPolling(delay: number = 15 * 1000) {\n        this._poll.next(!this._poll.getValue());\n        this.interval(\n            'poll',\n            () => this._poll.next(!this._poll.getValue()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public duplicateEvent() {\n        if (sessionStorage) {\n            const booking = new CalendarEvent({\n                ...(this._item as any),\n                id: '',\n            });\n            sessionStorage.setItem(\n                'STAFF.booking_form',\n                JSON.stringify(booking)\n            );\n        }\n        this._router.navigate(['/book']);\n    }\n\n    public async deleteEvent() {\n        if (!this._item) return;\n        const details = await openConfirmModal(\n            {\n                title: 'Cancel Meeting',\n                content: `Are you sure you want to cancel this meeting: ${this._item.title}`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (!details) return;\n        const is_event = this._item instanceof CalendarEvent;\n        details.loading(\n            `Cancelling ${is_event ? 'meeting' : 'desk booking'}...`\n        );\n        const method = is_event ? this._events.delete : this._bookings.delete;\n        const err = await method(this._item.id).catch((_) => _);\n        details.close();\n        if (err)\n            return notifyError(\n                `Error unable to cancel ${\n                    is_event ? 'meeting' : 'desk booking'\n                }. Error: ${err.statusText || err.message || err}`\n            );\n        notifySuccess(\n            `Successfully cancelled ${is_event ? 'meeting' : 'desk booking'}.`\n        );\n        this._router.navigate(['/schedule', 'listing'], {\n            queryParamsHandling: 'preserve',\n        });\n    }\n}\n","import isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import { Component, HostListener, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { addMinutes, format, isAfter, isBefore } from 'date-fns';\n\nimport { Booking } from '@user-interfaces/bookings';\nimport { CalendarEvent } from '@user-interfaces/events';\n\n@Component({\n    selector: 'schedule-event-item',\n    template: `\n        <a\n            matRipple\n            [routerLink]=\"['/schedule', 'view', this.event.id]\"\n            [queryParams]=\"query\"\n            class=\"flex mb-1\"\n        >\n            <div\n                [class]=\"\n                    'h-20 w-20 flex flex-col items-center justify-center ' +\n                    status\n                \"\n                [class.done]=\"is_done\"\n            >\n                <div class=\"icon\" [ngSwitch]=\"event.status\">\n                    <app-icon *ngSwitchCase=\"'cancelled'\">cancel</app-icon>\n                    <app-icon *ngSwitchDefault>forum</app-icon>\n                </div>\n                <div>{{ time }}</div>\n                <label *ngIf=\"event.status === 'cancelled'\">(Cancelled)</label>\n            </div>\n            <div\n                class=\"flex flex-col h-20 flex-1 w-1/2 bg-white p-2 justify-center\"\n            >\n                <div class=\"text-lg font-medium capitalize pl-1 truncate\">\n                    {{ event.title }}\n                </div>\n                <div class=\"flex items-center\">\n                    <app-icon\n                        *ngIf=\"!!location\"\n                        [icon]=\"{\n                            type: 'icon',\n                            class: 'material-icons',\n                            content: 'place'\n                        }\"\n                    ></app-icon>\n                    <div class=\"truncate pl-1\">{{ location || 'No location' }}</div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            .confirmed,\n            .approved {\n                background: #388e3c;\n                color: #fff;\n            }\n\n            .tentative {\n                background: #ffa000;\n                color: #000;\n            }\n\n            .declined,\n            .cancelled {\n                background: #d32f2f;\n                color: #fff;\n            }\n\n            .done {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class ScheduleEventListItemComponent {\n    /** Booking to display */\n    @Input() public event: CalendarEvent | Booking;\n\n    public get isFuture(): boolean {\n        return isAfter(this.event.date, new Date());\n    }\n\n    public get status(): string {\n        return this.event.status;\n    }\n\n    public get is_done(): boolean {\n        return isBefore(\n            addMinutes(this.event.date, this.event.duration),\n            new Date()\n        );\n    }\n\n    /** Display location of the booking event */\n    public get location(): string {\n        if (\n            !this.event ||\n            this.event.type === 'date' ||\n            this.event.type === 'empty'\n        ) {\n            return 'No location';\n        }\n        return this.event.location;\n    }\n\n    /** Image name to display for the event */\n    public get type_image(): string {\n        if (\n            !this.event ||\n            this.event.type === 'date' ||\n            this.event.type === 'empty'\n        ) {\n            return 'block';\n        }\n        if (this.event instanceof CalendarEvent && this.event.has_visitors) {\n            return 'external';\n        }\n        return 'book_room';\n    }\n\n    public get time(): string {\n        return this.event.all_day || this.event.duration > 23 * 60\n            ? 'All Day'\n            : format(this.event.date, 'h:mm a');\n    }\n\n    public get query() {\n        return {\n            calendar: (this.event as CalendarEvent).calendar,\n            type: this.event.type,\n        };\n    }\n\n    constructor(private _router: Router) {}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from '@user-interfaces/bookings';\nimport { CalendarEvent } from '@user-interfaces/events';\n\n@Component({\n    selector: 'schedule-event-date-list',\n    template: `\n        <div class=\"text-xl mb-4\">\n            {{ date | date: 'fullDate' }}\n        </div>\n        <ng-container *ngIf=\"events?.length; else empty_state\">\n            <schedule-event-item\n                id=\"{{ i }}\"\n                *ngFor=\"let item of events; let i = index\"\n                [event]=\"item\"\n            ></schedule-event-item>\n        </ng-container>\n        <ng-template #empty_state>\n            <div class=\"p-8\">No events for {{ date | date }}</div>\n        </ng-template>\n        <div class=\"mb-4\"></div>\n    `,\n    styles: [`\n    `],\n})\nexport class ScheduleEventListComponent {\n    @Input() public date: number;\n    @Input() public events: (CalendarEvent | Booking)[];\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { BaseClass, timePeriodsIntersect } from '@user-interfaces/common';\nimport { ScheduleStateService } from '../schedule-state.service';\nimport {\n    addDays,\n    endOfDay,\n    format,\n    isBefore,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'schedule-event-list',\n    template: `\n        <div\n            class=\"flex p-2 items-center bg-white border-b border-gray-200 shadow space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"h-12\">\n                <mat-select\n                    name=\"calendars\"\n                    [ngModel]=\"(options | async).calendar\"\n                    (ngModelChange)=\"setCalendar($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let cal of calendars | async\"\n                        [value]=\"cal.id\"\n                    >\n                        {{ cal.summary }}\n                    </mat-option>\n                    <mat-option value=\"desks\">Desks</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-0\"></div>\n            <button mat-button class=\"clear\" [matMenuTriggerFor]=\"legend\">\n                Legend\n            </button>\n            <mat-menu #legend=\"matMenu\">\n                <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                    <div class=\"bg-success h-2 w-2 rounded-full mr-4\"></div>\n                    Approved\n                </div>\n                <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                    <div class=\"bg-pending h-2 w-2 rounded-full mr-4\"></div>\n                    Tentative\n                </div>\n                <div class=\"flex items-center px-4 py-2 hover:bg-gray-100\">\n                    <div class=\"bg-error h-2 w-2 rounded-full mr-4\"></div>\n                    Declined\n                </div>\n            </mat-menu>\n            <button mat-icon-button class=\"relative\" #dateMenu>\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'event' }\"\n                ></app-icon>\n                <input\n                    matInput\n                    class=\"opacity-0 absolute inset-0\"\n                    [ngModel]=\"(options | async)?.date\"\n                    (ngModelChange)=\"setDate($event); scrollTo($event)\"\n                    [matDatepicker]=\"picker\"\n                    [min]=\"min_date\"\n                />\n\n                <mat-datepicker-toggle\n                    class=\"opacity-0 absolute inset-0\"\n                    matSuffix\n                    [for]=\"picker\"\n                ></mat-datepicker-toggle>\n            </button>\n            <mat-datepicker #picker ></mat-datepicker>\n        </div>\n        <main class=\"w-full flex-1 h-1/2 flex flex-col\">\n            <div\n                class=\"flex-1 w-full h-1/2 overflow-auto p-4\"\n                (scroll)=\"onScroll($event)\"\n            >\n                <schedule-event-date-list\n                    *ngFor=\"let details of events | async | keyvalue\"\n                    [attr.date]=\"details.key | date: 'yyyy-MM-dd'\"\n                    [date]=\"details.key\"\n                    [events]=\"details.value\"\n                ></schedule-event-date-list>\n            </div>\n            <mat-progress-bar\n                mode=\"indeterminate\"\n                *ngIf=\"loading | async\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 50%;\n                flex: 1;\n            }\n        `,\n    ],\n})\nexport class ScheduleEventViewComponent extends BaseClass implements OnInit {\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n    public readonly calendars = this._state.calendars;\n\n    public readonly events = combineLatest([\n        this._state.filtered_events,\n        this._state.options,\n    ]).pipe(\n        map(([events, options]) => {\n            let start = startOfDay(new Date());\n            const end_of_week = addDays(options.date || start, 12);\n            const mapping = {};\n            let count = 0;\n            while (count < events.length || isBefore(start, end_of_week)) {\n                const end = endOfDay(start);\n                const list = events.filter((e) =>\n                    timePeriodsIntersect(\n                        start.valueOf(),\n                        end.valueOf(),\n                        e.date,\n                        e.date + e.duration * 60 * 1000\n                    )\n                );\n                count += list.length;\n                mapping[start.valueOf()] = list;\n                start = addDays(start, 1);\n            }\n            return mapping;\n        })\n    );\n\n    public readonly min_date = startOfDay(new Date());\n    public readonly setDate = (d) => this._state.setOptions({ date: d });\n    public readonly setCalendar = (d) =>\n        this._state.setOptions({ calendar: d });\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this._state.stopPolling();\n    }\n\n    public onScroll(event): void {\n        const day_lists = Array.prototype.slice.call(\n            this._el?.nativeElement.querySelectorAll(\n                'schedule-event-date-list'\n            ) || []\n        );\n        if (!day_lists?.length) return;\n        const scroll_top = event.target.scrollTop;\n        let active_day: HTMLElement = null;\n        for (const el of day_lists) {\n            if (el.offsetTop - scroll_top > 0) {\n                active_day = el;\n                break;\n            }\n        }\n        if (!active_day) return;\n        const date = new Date(active_day.getAttribute('date'));\n        if (!isSameDay(date, this._state.date)) {\n            console.log('Date:', format(date, 'dd MMM yyyy'));\n            this.setDate(date.valueOf());\n        }\n    }\n\n    public scrollTo(date: number) {\n        this.timeout(\n            'scroll_to',\n            () => {\n                const el: HTMLElement = this._el?.nativeElement.querySelector(\n                    `[date=\"${format(date, 'yyyy-MM-dd')}\"]`\n                );\n                if (!el) return;\n                el.scrollIntoView({ behavior: 'smooth', inline: 'center' });\n            },\n            1000\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-schedule',\n    template: `\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n        <router-outlet></router-outlet>\n        <a-footer-menu class=\"w-full\"></a-footer-menu>\n        <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ScheduleComponent {\n    /** Name of the page to render */\n    public page: string;\n    /** Whether to show menu */\n    public show_menu = false;\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Booking } from '@user-interfaces/bookings';\nimport { BaseClass } from '@user-interfaces/common';\nimport { Space } from '@user-interfaces/spaces';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ViewRoomModalComponent } from '../../overlays/view-room-modal/view-room-modal.component';\nimport { ScheduleStateService } from '../schedule-state.service';\n\n@Component({\n    selector: 'schedule-booking-details',\n    template: `\n        <div>\n            <div class=\"flex flex-col items-center mb-4\">\n                <div class=\"text-xl capitalize mb-2 font-medium\">\n                    {{ (event | async)?.title || 'No Title' }}\n                </div>\n            </div>\n            <div\n                class=\"rounded py-4 bg-white border-gray-300 shadow space-y-4 w-full text-lg\"\n            >\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">perm_identity</app-icon>\n                    <div class=\"flex-1\">{{ (event | async)?.user_name }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">schedule</app-icon>\n                    <div class=\"flex-1\">{{ when | async }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">place</app-icon>\n                    <div class=\"flex-1\">{{ (event | async)?.description }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-4\">\n                    <button\n                        *ngIf=\"(event | async)?.asset_id\"\n                        (click)=\"locate()\"\n                        class=\"w-24\"\n                        mat-button\n                    >\n                        View\n                    </button>\n                    <div class=\"flex-1\"></div>\n                    <button\n                        (click)=\"deleteEvent()\"\n                        class=\"error w-24\"\n                        mat-button\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div {\n                margin: auto;\n                width: 640px;\n                max-width: 100vw;\n                padding: 1rem;\n            }\n        `,\n    ],\n})\nexport class BookingDetailsComponent extends BaseClass {\n    public readonly event: Observable<Booking> = this._state.active_item as any;\n\n    public readonly when = this.event.pipe(\n        map((item) => {\n            if (!item) {\n                return 'Unable to determine.';\n            }\n            const date = dayjs(item.date);\n            const end = date.add(item.duration || 60, 'm');\n            if (item.all_day || item.duration > 23 * 60) {\n                return `${date.format('DD MMM YYYY')} - All Day`;\n            } else {\n                if (date.isSame(end, 'd')) {\n                    return `${date.format(\n                        'DD MMM YYYY, h:mm A'\n                    )} - ${end.format('h:mm A')}`;\n                } else {\n                    return `${date.format(\n                        'DD MMM YYYY, h:mm A'\n                    )} - ${end.format('DD MMM YYYY, h:mm A')}`;\n                }\n            }\n        })\n    );\n\n    public readonly deleteEvent = () => this._state.deleteEvent();\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async locate() {\n        const item = await this.event.toPromise();\n        const space = new Space({\n            name: 'Desk Booking',\n            map_id: item.asset_id,\n            zones: item.zones,\n        });\n        if (!space.level) {\n            // this._service.notifyInfo('The space cannot be located.');\n        }\n        this._dialog.open(ViewRoomModalComponent, {\n            width: '32em',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space },\n        });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BaseClass } from '@user-interfaces/common';\nimport { CalendarEvent, generateEventForm } from '@user-interfaces/events';\nimport { BookingConfirmComponent } from '../../bookings/overlays/booking-confirm/booking-confirm.component';\n\n@Component({\n    selector: 'schedule-event-edit',\n    template: `\n        <form\n            class=\"grid m-auto mt-8\"\n            *ngIf=\"form && event\"\n            [formGroup]=\"form\"\n            (ngSubmit)=\"save()\"\n        >\n            <booking-edit [form]=\"form\" [event]=\"event\"></booking-edit>\n            <div\n                class=\"footer flex items-center justify-center w-full p-2 space-x-2\"\n            >\n                <button\n                    mat-button\n                    type=\"button\"\n                    class=\"inverse\"\n                    (click)=\"cancel()\"\n                >\n                    Cancel\n                </button>\n                <button mat-button type=\"submit\">Save</button>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            form {\n                grid-template-columns: max-content;\n                grid-template-rows: 1fr auto;\n                grid-template-areas:\n                    'edit'\n                    'actions';\n                max-width: 600px;\n            }\n\n            booking-edit,\n            schedule-event-view {\n                grid-area: edit;\n            }\n\n            .footer {\n                grid-area: actions;\n            }\n        `,\n    ],\n})\nexport class EventEditComponent\n    extends BaseClass\n    implements OnInit, OnChanges, OnDestroy {\n    /** Booking to display */\n    @Input() public event: CalendarEvent;\n    /** Emitter for action on the display view */\n    @Output() public change = new EventEmitter<{ type: string }>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>();\n    /** Form field data */\n    public form: FormGroup;\n\n    constructor(private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.event) {\n            this.form = generateEventForm(this.event);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.event && this.event) {\n            this.form = generateEventForm(this.event);\n        }\n    }\n\n    /**\n     * Exit the edit form\n     */\n    public cancel() {\n        this.change.emit({ type: 'cancel_edit' });\n    }\n\n    /**\n     * Save changes to the booking\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.event },\n            });\n            dialog_ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'success') {\n                    this.change.emit({ type: 'view' });\n                    dialog_ref.close();\n                }\n            });\n        } else {\n            console.warn('Some form fields are invalid:', this.form);\n        }\n    }\n\n    public handleEvent(event) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@user-interfaces/catering';\nimport { BaseClass } from '@user-interfaces/common';\nimport { CalendarEvent } from '@user-interfaces/events';\nimport { Space, SpacesService } from '@user-interfaces/spaces';\nimport { StaffService, User } from '@user-interfaces/users';\nimport { formatDuration } from 'date-fns';\nimport * as dayjs from 'dayjs';\nimport { ViewAttendeesModalComponent } from '../../overlays/view-attendees-modal/view-attendees-modal.component';\nimport { ViewCateringModalComponent } from '../../overlays/view-catering-modal/view-catering-modal.component';\nimport { ViewRoomModalComponent } from '../../overlays/view-room-modal/view-room-modal.component';\nimport { ScheduleStateService } from '../schedule-state.service';\n\n@Component({\n    selector: 'schedule-event-details',\n    template: `\n        <div *ngIf=\"!editing; else edit_state\">\n            <div class=\"flex flex-col items-center mb-4\">\n                <div class=\"text-xl capitalize mb-2 font-medium\">\n                    {{ event?.title || 'No Title' }}\n                </div>\n            </div>\n            <div\n                class=\"rounded py-4 bg-white border-gray-300 shadow space-y-4 w-full text-lg\"\n            >\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">perm_identity</app-icon>\n                    <div class=\"flex-1\">{{ event?.organiser?.name }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div class=\"flex items-center space-x-2 px-3\">\n                    <app-icon class=\"text-2xl\">schedule</app-icon>\n                    <div class=\"flex-1\">{{ when }}</div>\n                </div>\n                <hr class=\"ml-12\" />\n                <div\n                    class=\"flex items-center space-x-2 px-3\"\n                    *ngIf=\"spaces && spaces.length\"\n                >\n                    <app-icon class=\"text-2xl\">place</app-icon>\n                    <div class=\"flex flex-col\" *ngIf=\"event.type === 'event'\">\n                        <div class=\"flex\" *ngFor=\"let item of spaces\">\n                            <label class=\"flex-1 w-1/2\">{{\n                                item?.name || 'No location'\n                            }}</label>\n                            <button\n                                mat-button\n                                class=\"clear underline\"\n                                *ngIf=\"item?.map_id\"\n                                (click)=\"showSpace(item)\"\n                            >\n                                View\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"spaces && spaces.length\" />\n                <div\n                    class=\"flex items-center space-x-2 px-3\"\n                    *ngIf=\"attendees?.length\"\n                >\n                    <app-icon class=\"text-2xl\">people_outline</app-icon>\n                    <div class=\"flex-1 flex items-center\">\n                        <p class=\"flex-1 w-1/2\">\n                            {{ attendees.length }} Attendees\n                        </p>\n                        <button\n                            mat-button\n                            class=\"clear underline\"\n                            *ngIf=\"attendees.length > 0\"\n                            (click)=\"showAttendees()\"\n                        >\n                            View\n                        </button>\n                    </div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"attendees?.length\" />\n                <div class=\"flex items-center space-x-2 px-3\" *ngIf=\"link\">\n                    <app-icon class=\"text-2xl\">screen_share</app-icon>\n                    <div class=\"flex-1\">\n                        <a class=\"underline\" href=\"{{ link }}\" target=\"blank\">{{\n                            link\n                        }}</a>\n                    </div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"link\" />\n                <div class=\"flex space-x-2 px-3\" *ngIf=\"catering_items?.length\">\n                    <app-icon class=\"text-2xl\">people_outline</app-icon>\n                    <div class=\"flex-1 flex items-center\">\n                        <p class=\"flex-1 w-1/2\">Catered</p>\n                        <button\n                            mat-button\n                            class=\"clear underline\"\n                            (click)=\"showCatering()\"\n                        >\n                            View\n                        </button>\n                    </div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"catering_items?.length\" />\n                <div class=\"flex space-x-2 px-3\" *ngIf=\"body\">\n                    <app-icon class=\"text-2xl\">subject</app-icon>\n                    <div class=\"flex flex-col\" [innerHTML]=\"body\"></div>\n                </div>\n                <hr class=\"ml-12\" *ngIf=\"body\" />\n                <div class=\"flex items-center space-x-2 px-4\">\n                    <!-- <button (click)=\"editEvent()\" class=\"flex-1\" mat-button>\n                        Edit\n                    </button> -->\n                    <button\n                        (click)=\"duplicateEvent()\"\n                        class=\"flex-1 inverse\"\n                        mat-button\n                    >\n                        Duplicate\n                    </button>\n                    <button\n                        (click)=\"deleteEvent()\"\n                        class=\"flex-1 error\"\n                        mat-button\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        </div>\n        <ng-template #edit_state>\n            <schedule-event-edit [event]=\"event\"></schedule-event-edit>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                margin: auto;\n                width: 640px;\n                max-width: 100vw;\n                padding: 1rem;\n            }\n        `,\n    ],\n})\nexport class EventDetailsComponent extends BaseClass {\n    @Input() public event: CalendarEvent;\n\n    public editing = false;\n\n    public readonly deleteEvent = () => this._state.deleteEvent();\n    public readonly duplicateEvent = () => this._state.duplicateEvent();\n    public readonly editEvent = () => this.editing = true;\n\n    constructor(\n        private _users: StaffService,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _state: ScheduleStateService\n    ) {\n        super();\n    }\n\n    /** Host of the event */\n    public get organiser(): string {\n        return this.event.creator || this._users.current.name;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'h:mm A'\n                )}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        return formatDuration({ minutes: this.event.duration || 60 });\n    }\n\n    /** Display catering items */\n    public get catering_items(): CateringItem[] {\n        if (!this.event.catering?.length) {\n            return;\n        }\n        const order = this.event.catering[0];\n        return order ? [...order.items] : [];\n    }\n\n    public get catering_note(): string {\n        // return this.event.catering_notes;\n        // TODO\n        return '';\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event.resources?.length) {\n            return [];\n        }\n        return this.event.resources.map((i) => this._spaces.find(i.email));\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        return (\n            this.event.attendees?.filter(\n                (i) => i.email !== this.event.creator\n            ) || []\n        );\n    }\n\n    /** Display string for meeting link */\n    public get link(): string {\n        return this.event.meeting_link;\n    }\n\n    /** Display string for notes */\n    public get body(): string {\n        return this.event.body;\n    }\n\n    public showCatering() {\n        this._dialog.open(ViewCateringModalComponent, {\n            width: '32em',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                catering: this.catering_items,\n                catering_note: this.catering_note,\n            },\n        });\n    }\n\n    public showAttendees() {\n        this._dialog.open(ViewAttendeesModalComponent, {\n            width: '32em',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { attendees: this.attendees },\n        });\n    }\n\n    public showSpace(item: Space) {\n        const space = this._spaces.find(item.id);\n        this._dialog.open(ViewRoomModalComponent, {\n            width: 'auto',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space },\n        });\n    }\n}\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@user-interfaces/common';\nimport { combineLatest } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ScheduleStateService } from '../schedule-state.service';\n\n\n@Component({\n    selector: 'schedule-view-event',\n    template: `\n        <div class=\"w-full h-12 flex items-center bg-white shadow px-2\">\n            <button mat-button class=\"clear\" (click)=\"back()\">\n                <div class=\"flex items-center\">\n                    <app-icon class=\"mr-2\">keyboard_backspace</app-icon>\n                    Back\n                </div>\n            </button>\n        </div>\n        <main class=\"flex-1 h-1/2 w-full overflow-auto\">\n            <div *ngIf=\"(event | async) && !(loading | async); else load_state\">\n                <ng-container [ngSwitch]=\"type\">\n                    <schedule-booking-details *ngSwitchCase=\"'booking'\">\n                    </schedule-booking-details>\n                    <schedule-event-details\n                        *ngSwitchDefault\n                        [event]=\"(event | async)\"\n                    ></schedule-event-details>\n                </ng-container>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <div\n                class=\"p-8 flex flex-col items-center justify-center h-full w-full\"\n            >\n                <mat-spinner class=\"mb-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ (loading | async) || 'Loading event details...' }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 50%;\n                flex: 1;\n            }\n        `,\n    ],\n})\nexport class ScheduleViewEventComponent extends BaseClass implements OnInit {\n    public readonly loading = this._state.loading;\n    public readonly event = this._state.active_item;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setID = (id) => this._state.setItem(id);\n\n    public type: string = '';\n\n    constructor(\n        private _state: ScheduleStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _location: Location\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'route.params',\n            combineLatest([\n                this._route.paramMap,\n                this._route.queryParamMap,\n            ]).subscribe(([param, queryParam]) => {\n                if (param.has('id')) {\n                    this.setID(param.get('id'));\n                }\n                if (queryParam.has('type')) this.type = queryParam.get('type');\n                if (queryParam.has('calendar')) {\n                    this.setOptions({ calendar: queryParam.get('calendar') });\n                }\n            })\n        );\n        this.timeout(\n            'check_event',\n            async () =>\n                this._router.navigate(['/schedule', 'listing'], {\n                    queryParamsHandling: 'preserve',\n                }),\n            3000\n        );\n        this._state.active_item\n            .pipe(first((_) => !!_))\n            .subscribe(() => this.clearTimeout('check_event'));\n    }\n\n    public back() {\n        this._location.back();\n    }\n}\n","import { Routes } from '@angular/router';\nimport { ScheduleEventViewComponent } from './event-list/event-view.component';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        component: ScheduleComponent,\n        children: [\n            { path: 'listing', component: ScheduleEventViewComponent },\n            { path: 'view/:id', component: ScheduleViewEventComponent },\n            { path: '**', redirectTo: 'listing' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SharedContentModule } from '../ui/shared.module';\nimport { ScheduleEventListItemComponent } from './event-list/event-list-item.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component';\nimport { ScheduleEventViewComponent } from './event-list/event-view.component';\nimport { ScheduleComponent } from './schedule.component';\nimport { ROUTES } from './schedule.routes';\nimport { BookingDetailsComponent } from './view-event/booking-details.component';\nimport { EventDetailsComponent } from './view-event/event-details.component';\nimport { EventEditComponent } from './view-event/event-edit.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleViewEventComponent,\n        ScheduleEventViewComponent,\n        ScheduleEventListComponent,\n        ScheduleEventListItemComponent,\n        EventDetailsComponent,\n        EventEditComponent,\n        BookingDetailsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ScrollingModule,\n    ],\n})\nexport class ScheduleModule {}\n"],"sourceRoot":"webpack:///"}