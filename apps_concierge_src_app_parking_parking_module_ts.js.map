{"version":3,"file":"apps_concierge_src_app_parking_parking_module_ts.js","mappings":"u1BA2DgBA,MAAA,YAIIA,MAAA,GACJA,kCADIA,cAAA,IAAAC,EAAAC,WAAA,+BALJF,MADJ,WACIA,CADmB,SACdA,MAAA,GAAqCA,QAC1CA,MAAA,EAAAG,EAAA,cAMJH,4BAPSA,MAAA,GAAAA,MAAAC,EAAAG,WAAAH,EAAAC,YAEAF,cAAA,OAAAC,EAAAG,WAAAH,EAAAC,sCAULF,MAAA,YAIIA,MAAA,GACJA,kCADIA,cAAA,IAAAK,EAAAC,gBAAA,+BALJN,MADJ,WACIA,CADmB,SACdA,MAAA,GAA+CA,QACpDA,MAAA,EAAAO,EAAA,cAMJP,4BAPSA,MAAA,GAAAA,MAAAK,EAAAG,gBAAAH,EAAAC,iBAEAN,cAAA,OAAAK,EAAAG,gBAAAH,EAAAC,2CAQTN,MAAA,4BAQIA,MAAA,cAAUA,MAAA,UACdA,8CANIA,MAAA,wBAAAA,MAAA,QAAAS,EAAAC,eAAAC,EAAAC,qCAaAZ,MANJ,WAMIA,CADH,cACaA,MAAA,mBACdA,kCAOIA,MANJ,WAMIA,CADH,cACaA,MAAA,UACdA,oCAPAA,MAlBA,EAAAa,EAAA,aAkBAb,CAXC,EAAAc,EAAA,aAWDd,CAHC,EAAAe,GAAA,iCAdIf,MAAA,eAAAS,KAAAO,aAAAP,EAAAC,gBAUAV,cAAA,eAAAS,KAAAO,YAAAP,EAAAC,iBAQAV,cAAA,aAAAS,EAAA,KAAAA,EAAAO,oCAWDhB,MAAA,aAIIA,MAAA,WACJA,mCAPJA,MAAA,YACIA,MAAA,GACAA,MAAA,EAAAiB,GAAA,eAMJjB,4BAPIA,cAAA,UAAAkB,GAAA,MAAAA,EAAAC,eAAA,KAAAD,EAAAC,eAAAC,aAAA,KAEKpB,cAAA,eAAAkB,GAAA,MAAAA,EAAAC,gBAAAD,EAAAC,eAAAC,yDAyBGpB,MAjBZ,WAiBYA,CAjBM,cAiBNA,CAFP,WAEOA,CAD+C,YAE3CA,MAAA,GASJA,QACAA,MAAA,iBAA2BA,MAAA,qBAGvCA,cAEIA,MADJ,oBACIA,CADsB,eACAA,MAAA,yBAAAqB,EAAArB,MAAAsB,GAAAC,IAAAZ,EAAAX,QAAA,OAAAA,MAASW,EAAAa,QAAAH,GAAY,GAEnCrB,MADJ,YACIA,CADqC,kBACVA,MAAA,sBAAeA,QAC1CA,MAAA,aAAkBA,MAAA,0BAE1BA,YACAA,MAAA,gBAAsBA,MAAA,yBAAAqB,EAAArB,MAAAsB,GAAAC,IAAAZ,EAAAX,QAAA,OAAAA,MAASW,EAAAc,OAAAJ,GAAW,GAElCrB,MADJ,YACIA,CADqC,kBACVA,MAAA,iBAAUA,QACrCA,MAAA,aAAkBA,MAAA,0BAG9BA,+CAzCQA,QAQAA,MARA,2CAAAqB,EAAA,KAAAA,EAAAK,QAQA1B,CARyD,iCAAAqB,EAAA,KAAAA,EAAAK,QAQzD1B,CAP+C,yCAAAqB,EAAA,KAAAA,EAAAK,QAO/C1B,CANuD,+BAAAqB,EAAA,KAAAA,EAAAK,QAMvD1B,CAL6C,wCAAAqB,EAAA,KAAAA,EAAAK,QAK7C1B,CAJsD,8BAAAqB,EAAA,KAAAA,EAAAK,QAItD1B,CAH4C,8BAAAqB,EAAA,KAAAA,EAAAK,QAG5C1B,CAF4C,4CAAAqB,EAAA,KAAAA,EAAAK,QAE5C1B,CAD0D,kCAAAqB,EAAA,KAAAA,EAAAK,SAG1D1B,MADA,oBAAA2B,EACA3B,CAD0B,4BAAAqB,EAAA,KAAAA,EAAAK,SAKlB1B,MAAA,GAAAA,MAAA,qBAAAqB,EAAA,KAAAA,EAAAK,QAAA,4BAAAL,EAAA,KAAAA,EAAAK,QAAA,+BAAAL,EAAA,KAAAA,EAAAK,QAAA,oEA+BZ1B,MADJ,WACIA,CADyD,eAMrDA,MAAA,yBAAA4B,EAAA5B,MAAA6B,GAAAN,IAAAZ,EAAAX,QAAA,OAAAA,MAASW,EAAAmB,gBAAAF,GAAoB,GAE7B5B,MAAA,iBAA2BA,MAAA,UAEnCA,4CANQA,QACAA,MADA,oBAAAW,EAAAoB,KACA/B,CAD0B,WAAA4B,EAAAZ,YAAA,UAAAY,EAAAF,SAYvC,IAAMM,EAA4B,MAAnC,MAAOA,EASTC,YAAoBC,GAAAC,KAAAD,SARJC,KAAAC,OAASD,KAAKD,OAAOG,SACrBF,KAAAG,QAAUH,KAAKD,OAAOI,QACtBH,KAAAI,QAAUJ,KAAKD,OAAOK,QAEtBJ,KAAAV,OAAUe,GAAML,KAAKD,OAAOO,cAAcD,GAC1CL,KAAAX,QAAWgB,GAAML,KAAKD,OAAOQ,eAAeF,GAC5CL,KAAAL,gBAAmBU,GAAML,KAAKD,OAAOJ,gBAAgBU,EAEnB,CAACG,SAAAR,KAAA,mBAAAS,iBAT1CZ,GAA4BhC,MAAA6C,KAAA,EAAAF,SAAAR,KAAA,UAAAW,EAAAC,IAAA,MAA5Bf,EAA4BgB,UAAA,4BAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,64DAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAhLjCrD,MAAA,yCAIAA,MAAA,qCA2JAA,MA7GA,EAAAuD,EAAA,yBAAAvD,MA6GAA,CA7G4C,EAAAwD,EAAA,yBAAAxD,MA6G5CA,CAlG0C,EAAAyD,GAAA,yBAAAzD,MAkG1CA,CAvF2C,GAAA0D,GAAA,yBAAA1D,MAuF3CA,CA3D2C,GAAA2D,GAAA,2BAAA3D,MA2D3CA,CAhD4C,GAAA4D,GAAA,yBAAA5D,OA6D5CA,MAAA,uGA3KIA,MAAA,qBAAA6D,EAAA7D,MAAA,IAAAsD,EAAAf,WAAAsB,EAAAC,SAAA,cAKA9D,MAAA,GA0CAA,MA1CA,OAAAsD,EAAAlB,OA0CApC,CA1Ce,UAAAA,MAAA,GAAA+D,EAAA/D,MAAA,GAAAgE,EAAAC,GAAAjE,MAAA,GAAAkE,GAAAlE,MAAA,GAAAmE,EAAAC,GAAApE,MAAA,GAAAqE,EAAAC,GAAAtE,MAAA,GAAAuE,EAAAC,GAAAxE,MAAA,GAAAyE,EAAAC,IAAA1E,MAAA,GAAA2E,EAAAC,KA0Cf5E,CAFE,gBAAA6E,EAAA7E,MAAA,IAAAsD,EAAAhB,UAAA,KAAAuC,EAAAC,OAEF9E,CADoC,8FAiInCgC,CAA4B,kYCpHzBhC,MArBJ,UAqBIA,CADH,gBAEOA,MAAA,GAQRA,wCAfIA,MAbA,qBAAA+E,EAAAC,aAAA/E,EAAAgF,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,eAAAiB,EAAAC,aAAA/E,EAAAgF,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,SAaA9D,CAVC,+BAAA+E,EAAAC,aAAA/E,EAAAgF,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,eAAAiB,EAAAC,aAAA/E,EAAAgF,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,SAUD9D,CANC,mBAAA+E,EAAAC,aAAA/E,EAAAgF,IAAA,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,QAMD9D,CAL2D,6BAAA+E,EAAAC,aAAA/E,EAAAgF,IAAA,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,QAK3D9D,CAFC,iBAAA+E,EAAAC,aAAA/E,EAAAgF,IAAA,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,QAED9D,CADyD,2BAAA+E,EAAAC,aAAA/E,EAAAgF,IAAA,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,SAIzD9D,MAAA,aAAA+E,EAAAG,cAAAH,EAAAC,aAAA/E,EAAAgF,MAIIjF,MAAA,GAAAA,MAAA,UAAA+E,EAAAC,aAAA/E,EAAAgF,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,2BAAAiB,EAAAC,aAAA/E,EAAAgF,KAAAF,EAAAC,aAAA/E,EAAAgF,IAAAnB,SAAA,0FAWR9D,MAAA,cAEIA,MAAA,yBAAAmF,EAAAnF,MAAAoF,GAAA7D,IAAAwD,EAAA/E,QAAA,OAAAA,MAAS+E,EAAAM,gBAAAF,EAAAF,IAAuB,GAEhCjF,MAAA,YAAcA,MAAA,GAAUA,QACxBA,MAAA,YACIA,MAAA,GAERA,yCAJkBA,MAAA,GAAAA,MAAAsF,GAEVtF,MAAA,GAAAA,MAAA,IAAAmF,EAAAF,GAAA,6BAKRjF,MAAA,YAA0CA,MAAA,sBAAgBA,mCAOtDA,MAAA,YAIIA,MAAA,GACJA,oCADIA,cAAA,IAAAuF,EAAA,+CAVRvF,MAAA,cAGIA,MAAA,mBAAAA,MAAAsB,GAAA,MAAAiE,EAAAvF,QAAAwF,KAAAT,EAAA/E,QAAA,OAAAA,MAAS+E,EAAAM,gBAAAE,EAAsB,YAAW,GAE1CvF,MAAA,YAAcA,MAAA,GAA+BA,QAC7CA,MAAA,EAAAyF,GAAA,cAMJzF,iDAPkBA,MAAA,GAAAA,MAAA0F,EAAAC,eAAAJ,GAETvF,cAAA,OAAA0F,EAAAC,yCAPT3F,MADA,EAAA4F,GAAA,aACA5F,CAD0C,EAAA6F,GAAA,qCAApC7F,MAAA,QAAAuF,GAEDvF,cAAA,OAAAuF,6CAeDvF,MADJ,WACIA,CAD6C,eAIzCA,MAAA,yBAAA8F,EAAA9F,MAAA+F,GAAAxE,IAAAwD,EAAA/E,QAAA,OAAAA,MAAS+E,EAAAiB,UAAAF,GAAc,GAGvB9F,MAAA,cAAUA,MAAA,UACdA,UACAA,MAAA,eAKIA,MAAA,yBAAA8F,EAAA9F,MAAA+F,GAAAxE,IAAAwD,EAAA/E,QAAA,OAAAA,MAAS+E,EAAAkB,YAAAH,GAAgB,GAEzB9F,MAAA,cAAUA,MAAA,YAElBA,aAML,IAAMkG,EAA0B,MAAjC,MAAOA,UAAkCC,KAW3ClE,YACYC,EACAkE,GAERC,QAHQlE,KAAAD,SACAC,KAAAiE,aAZIjE,KAAAmE,OAASnE,KAAKD,OAAOoE,OACrBnE,KAAAG,QAAUH,KAAKD,OAAOI,QACtBH,KAAAI,QAAUJ,KAAKD,OAAOK,QACtBJ,KAAAE,SAAWF,KAAKD,OAAOG,SAEvBF,KAAA6C,aAAuC,GAEvC7C,KAAA6D,UAAaO,GAAOpE,KAAKD,OAAO8D,UAAUO,GAC1CpE,KAAA8D,YAAeM,GAAMpE,KAAKD,OAAO+D,YAAYM,EAO7D,CAEOC,WACHrE,KAAKsE,aACD,cACAC,OAAc,CAACvE,KAAKmE,OAAQnE,KAAKE,WAAWsE,UACxC,EAAEL,EAAQjE,KACNF,KAAKyE,kBAAkBN,EAAQjE,IAG/C,CAEOgD,gBAAgBJ,EAAY4B,GACf1E,KAAKiE,WAAWU,KAAK7B,KAAE,EAEnC8B,MACIF,EACM,2CACA,sCAElB,CAEO3B,cAAcxD,GACjB,OAAQA,GACJ,IAAK,gBACD,MAAO,oDACX,IAAK,gBAEL,IAAK,aACD,MAAO,yCACX,IAAK,OACD,MAAO,iCACX,IAAK,OACD,MAAO,4CAEf,MAAO,2CACX,CAEQkF,kBAAkBN,EAAwBjE,GAC9C,UAAW2E,KAASV,EAAQ,CACxB,MAAMW,EAAU5E,EAAS6E,KACpBC,GACGA,EAAEC,WAAaJ,EAAM/B,IACR,aAAbkC,EAAEzF,QACW,cAAbyF,EAAEzF,QACW,UAAbyF,EAAEzF,QAGNS,KAAK6C,aAAagC,EAAM/B,IADxB+B,EAAMK,cAAgBJ,EACQ,gBAE9BD,EAAMK,aACNJ,GACAA,EAAQ/G,aAAe8G,EAAMK,YAEC,gBAE9BL,EAAMK,aACNJ,GACAA,EAAQ/G,aAAe8G,EAAMK,YAEC,cACtBL,EAAMK,aAAeJ,EACC,OAEA,MAEtC,CACJ,CAACtE,SAAAR,KAAA,mBAAAS,iBAnFQsD,GAAyBlG,MAAA6C,KAAA7C,MAAAsH,OAAA,EAAA3E,SAAAR,KAAA,UAAAW,EAAAC,IAAA,MAAzBmD,EAAyBlD,UAAA,yBAAAuE,SAAA,CAAAvH,OAAAiD,MAAA,GAAAC,KAAA,GAAAC,OAAA,o0BAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAtH9BrD,MAAA,yCAIAA,MAAA,qCAyFAA,MA5DA,EAAAwH,GAAA,0BAAAxH,MA4DAA,CA5D4C,EAAAyH,GAAA,yBAAAzH,MA4D5CA,CA3B0D,EAAA0H,GAAA,yBAAA1H,MA2B1DA,CAhB8D,GAAA2H,GAAA,yBAAA3H,OAqC9DA,MAAA,6EAjHIA,MAAA,qBAAA4H,EAAA5H,MAAA,IAAAsD,EAAAf,WAAAqF,EAAA9D,SAAA,YAKA9D,MAAA,GAyBAA,MAzBA,OAAAsD,EAAAgD,OAyBAtG,CAzBe,UAAAA,MAAA,GAAAyE,GAAAzE,MAAA,GAAAgE,GAAA6D,GAAA7H,MAAA,GAAAkE,GAAA4D,GAAA9H,MAAA,GAAAmE,IAAAnE,MAAA,GAAAqE,GAAA0D,GAAA/H,MAAA,GAAAuE,GAAAyD,IAyBfhI,CAFE,gBAAAiI,EAAAjI,MAAA,IAAAsD,EAAAhB,UAAA,KAAA2F,EAAAnD,OAEF9E,CADoC,0FAwFnCkG,CAA0B,2LC9FvBlG,MAAA,gCAKIA,MAAA,mBAAAA,MAAAkI,GAAA,MAAAnD,EAAA/E,QAAA,OAAAA,MAAS+E,EAAAoD,kBAAiB,GAG1BnI,MAAA,YAAkBA,MAAA,eAASA,QAC3BA,MAAA,cAAUA,MAAA,SACdA,wCAJIA,MAAA,oBAAAoI,EAAApI,MAAA,IAAA+E,EAAAzC,WAAA,MAAA8F,EAAAC,OAAAD,EAAAC,MAAAC,mDAMRtI,MAAA,eAKIA,MAAA,mBAAAA,MAAAoF,GAAA,MAAAL,EAAA/E,QAAA,OAAAA,MAAS+E,EAAAwD,iBAAgB,GAEzBvI,MAAA,YAAkBA,MAAA,cAAQA,QAC1BA,MAAA,cAAUA,MAAA,SACdA,oDACAA,MAAA,eAKIA,MAAA,mBAAAA,MAAAwI,GAAA,MAAAzD,EAAA/E,QAAA,OAAAA,MAAS+E,EAAA0D,iBAAgB,GAEzBzI,MAAA,YAAkBA,MAAA,qBAAeA,QACjCA,MAAA,cAAUA,MAAA,SACdA,qCAegBA,MAAA,YACIA,MAAA,uBACAA,MAAA,aAAyBA,MAAA,SAC7BA,gDAFIA,cAAA,WAAA0I,EAAA1I,MAAA,IAAA2I,EAAAC,YAAA,KAAAF,EAAAG,aAAA,gCAFR7I,MAJJ,kBAIIA,CADH,YAEOA,MAAA,EAAA8I,GAAA,cAIA9I,MAAA,SAAKA,MAAA,GAEbA,gDATIA,MAAA,QAAA2I,EAAA1D,IAGqCjF,MAAA,GAAAA,MAAA,OAAA+E,EAAAgE,YAI5B/I,MAAA,GAAAA,MAAA2I,EAAAE,cAAAF,EAAAK,gDAerBhJ,MAAA,qBAEIA,MAAA,sBAAAiJ,GAAAjJ,MAAAsB,GAAA,MAAAyD,EAAA/E,QAAA,OAAAA,MAAc+E,EAAAmE,QAAAD,GAAe,GAChCjJ,SAiBN,IAAMmJ,EAAuB,MAA9B,MAAOA,UAA+BhD,KAsBxC,cAAW4C,GACP,QAAS5G,KAAKiH,UAAUC,IAAI,iBAChC,CAEOC,qBACHnH,KAAKoH,QAAQC,KAAKC,KAA4B,CAC1CjE,KAAM,CAAEqB,KAAM,YAEtB,CAEA5E,YACYC,EACAwH,EACAC,EACAC,EACAR,EACAG,GAERlD,QAPQlE,KAAAD,SACAC,KAAAuH,OACAvH,KAAAwH,SACAxH,KAAAyH,UACAzH,KAAAiH,YACAjH,KAAAoH,UArCLpH,KAAA0H,KAAO,GAEP1H,KAAAkG,MAAkB,GAETlG,KAAA2H,OAAS3H,KAAKD,OAAO4H,OAErB3H,KAAAG,QAAUH,KAAKD,OAAOI,QAEtBH,KAAA+G,QAAWa,GAAM5H,KAAKD,OAAO8H,WAAW,CAAEC,KAAMF,IAEhD5H,KAAA+H,UAAaC,GACzBhI,KAAKD,OAAO8H,WAAW,CAAElF,OAAQqF,IAErBhI,KAAAiI,YAAeC,IAC3BlI,KAAKyH,QAAQU,SAAS,GAAI,CACtBC,WAAYpI,KAAKwH,OACjBa,YAAa,CAAEC,SAAUJ,EAAEK,KAAK,QAEpCvI,KAAKD,OAAO8H,WAAW,CAAE3B,MAAOgC,GAAG,CAsBvC,CAEa7D,WAAQ,IAAAmE,EAAAxI,KAAA,SAAAyI,KAAA,kBACXD,EAAKjB,KAAKmB,YAAYC,QAAKC,KAAO5D,GAAMA,IAAI6D,YAClDL,EAAKlE,aACD,cACAkE,EAAKhB,OAAOsB,cAActE,UAAWuE,IACjC,GAAIA,EAAOC,IAAI,YAAa,CACxB,MAAM9C,EAAQ6C,EAAO7B,IAAI,YAAY+B,MAAM,KAC3C,GAAI/C,EAAMC,OAAQ,CACd,MAAM+C,EAAQV,EAAKjB,KAAK4B,YAAYjD,GAEpC,GADAsC,EAAKtC,MAAQA,GACRgD,EAAO,OACZV,EAAKjB,KAAK6B,SAAWZ,EAAKjB,KAAK8B,UAAUtE,KACpCuE,GAAQA,EAAIxG,KAAOoG,EAAMzC,WAE9B+B,EAAKzI,OAAO8H,WAAW,CAAE3B,MAAOA,GACpC,CACJ,KAGRsC,EAAKlE,aACD,SACAkE,EAAKzI,OAAO4H,OAAOnD,UAAWmD,IACtBa,EAAK5B,aACT4B,EAAKtC,MAAQsC,EAAKtC,MAAMqD,OAAQC,GAC5B7B,EAAO5C,KAAM0E,GAAQA,EAAI3G,KAAO0G,KAE/BhB,EAAKtC,MAAMC,QAAUwB,EAAOxB,QAC7BqC,EAAKtC,MAAMwD,KAAK/B,EAAO,GAAG7E,IAE9B0F,EAAKP,YAAYO,EAAKtC,OAAK,IAGnCsC,EAAKlE,aACD,gBACAkE,EAAKf,QAAQxH,OAAOuE,UAAWnE,IACvBA,aAAasJ,MAAenB,EAAKoB,aAAW,IAGxDpB,EAAKoB,aAAc,EAtCF,EAuCrB,CAEO5D,kBACHhG,KAAKD,OAAO8D,WAChB,CAEOuC,iBACHpG,KAAKD,OAAO8J,UAChB,CAEavD,iBAAc,IAAAwD,EAAA9J,KAAA,SAAAyI,KAAA,YACvB,MAAQX,cAAegC,EAAK3J,QAAQwI,QAAKoB,KAAK,IAAIlB,YAClDiB,EAAK/J,OAAOJ,qBAAgBqK,EAAW,CACnClC,KAAMA,GAAQmC,KAAKC,MACnBC,oBAAoB,GACrB,EALoB,EAM3B,CAEQP,cACJ5J,KAAKoK,QACD,cACA,KACI,MAAMC,EAAQrK,KAAKyH,QAAQ6C,KAAKrB,MAAM,MAAQ,CAAC,IAC/CjJ,KAAK0H,KAAO2C,EAAMA,EAAMlE,OAAS,GAAG8C,MAAM,KAAK,EAAC,EAEpD,GAER,CAACzI,SAAAR,KAAA,mBAAAS,iBA7GQuG,GAAsBnJ,MAAA6C,KAAA7C,MAAAsH,MAAAtH,MAAA0M,MAAA1M,MAAA0M,MAAA1M,MAAA2M,MAAA3M,MAAA4M,OAAA,EAAAjK,SAAAR,KAAA,UAAAW,EAAAC,IAAA,MAAtBoG,EAAsBnG,UAAA,qBAAAuE,SAAA,CAAAvH,OAAAiD,MAAA,GAAAC,KAAA,GAAAC,OAAA,6lCAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAzGvBrD,MADJ,UACIA,CADsD,UAElDA,MAAA,GAKJA,QACAA,MAAA,WACAA,MAAA,kCAGIA,MAAA,uBAAAiJ,GAAA,OAAe3F,EAAA4G,UAAAjB,EAAiB,GACnCjJ,QACDA,MAAA,4BAOIA,MAAA,EAAA6M,GAAA,gBAWJ7M,QAWAA,MAVA,EAAA8M,GAAA,eAUA9M,CAJC,GAAA+M,GAAA,gBAcL/M,QAGQA,MAFR,WAEQA,CAFkD,sBAElDA,CAD2D,oBAEvDA,MAAA,yBAAAiJ,GAAAjJ,aAAAsD,EAAA+E,MAAAY,KAAA3F,EAAA+E,MAAAY,IAAA,GACAjJ,MAAA,yBAAAiJ,GAAA,OAAiB3F,EAAA8G,YAAAnB,EAAmB,GAIpCjJ,MAAA,GAAAgN,GAAA,uCAaRhN,UACAA,MAAA,aACAA,MAAA,gBAIIA,MAAA,0BAASsD,EAAAgG,oBAAoB,GAG7BtJ,MAAA,eAAUA,MAAA,gBACdA,UACAA,MAAA,GAAAiN,GAAA,uBAIJjN,sBAxFQA,MAAA,GAAAA,MAAA,eAAAsD,EAAAuG,KAAA,iDASA7J,MAAA,GAAAA,MAAA,eAAAoI,EAAApI,MAAA,IAAAsD,EAAAhB,UAAA,KAAA8F,EAAAtD,QAIA9E,MAAA,GAAAA,MAAA,oBAAAkN,EAAAlN,MAAA,KAAAsD,EAAAhB,WAAA,MAAA4K,EAAA7E,OAAA6E,EAAA7E,MAAAC,OAAA,oCASKtI,MAAA,GAAAA,MAAA,kBAAAsD,EAAAuG,MAYJ7J,cAAA,iBAAAsD,EAAAuG,MAUA7J,cAAA,kBAAAsD,EAAAuG,MAWG7J,MAAA,GAAAA,MAAA,UAAAsD,EAAA+E,OAMsBrI,cAAA,UAAAA,MAAA,MAAAsD,EAAAwG,SAwBzB9J,MAAA,GAAAA,MAAA,kBAAAsD,EAAAuG,MAAA,QAAAvG,EAAAuG,sTAmBJV,CAAuB,4GC9ExBnJ,MAAA,WAIIA,MAAA,WACAA,MAAA,OAAGA,MAAA,2DACPA,WAyBL,IAAMmN,EAAiB,MAAxB,MAAOA,UAAyBhH,KAMlClE,YAAoBC,EAAqC0H,GACrDvD,QADgBlE,KAAAD,SAAqCC,KAAAyH,UAJzCzH,KAAA2H,OAAS3H,KAAKD,OAAO4H,OAE9B3H,KAAA0H,KAAO,EAId,CAEOrD,WACHrE,KAAKD,OAAOkL,eACZjL,KAAKsE,aACD,gBACAtE,KAAKyH,QAAQxH,OAAOuE,UAAWnE,IAC3B,GAAIA,aAAasJ,KAAe,CAC5B,MAAMuB,EAAYlL,KAAKyH,QAAQ6C,KAAKrB,MAAM,MAAQ,CAAC,IACnDjJ,KAAK0H,KAAOwD,EAAUb,EAAMlE,OAAS,GAAG8C,MAAM,KAAK,EACvD,KAGR,MAAMoB,EAAQrK,KAAKyH,QAAQ6C,KAAKrB,MAAM,MAAQ,CAAC,IAC/CjJ,KAAK0H,KAAO2C,EAAMA,EAAMlE,OAAS,GAAG8C,MAAM,KAAK,EACnD,CAACzI,SAAAR,KAAA,mBAAAS,iBAvBQuK,GAAgBnN,MAAA6C,KAAA7C,MAAAsH,MAAA,EAAA3E,SAAAR,KAAA,UAAAW,EAAAC,IAAA,MAAhBoK,EAAgBnK,UAAA,kBAAAuE,SAAA,CAAAvH,OAAAiD,MAAA,GAAAC,KAAA,EAAAC,OAAA,8bAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjErBrD,MAAA,aACAA,MAAA,YACIA,MAAA,oBAGQA,MAFR,UAEQA,CAFU,UAEVA,CADiB,SAObA,MAAA,gBACJA,QACAA,MAAA,SAMIA,MAAA,qBAWZA,YACAA,MAAA,WACIA,MAAA,oBACJA,QACAA,MAAA,GAAAsN,GAAA,+BAOJtN,oBAlCgBA,MAAA,GAEAA,MAFA,aAAAA,MAAA,EAAAgE,IAEAhE,CAFqC,oBAAAsD,EAAAuG,MAQrC7J,MAAA,GAEAA,MAFA,aAAAA,MAAA,EAAAkE,IAEAlE,CAFqC,oBAAAsD,EAAAuG,MAoB5C7J,MAAA,GAAAA,MAAA,gBAAA4H,EAAA5H,MAAA,KAAAsD,EAAAwG,UAAAlC,EAAAU,uVA8BJ6E,CAAiB,6MC1DNnN,MAFR,UAEQA,CAFyC,UAEzCA,CADuC,SAMnCA,MAAA,cACJA,QACAA,MAAA,SAWIA,MAAA,aACJA,QACAA,MAAA,SAWIA,MAAA,WAERA,UACAA,MAAA,8BACJA,yCApCyBA,cAAA,WAAAuN,GAGbvN,QACAA,MADA,aAAAA,MAAA,EAAAgE,IACAhE,CADoD,oBAAA+E,EAAA8E,MAOpD7J,MAAA,GAOAA,MAPA,aAAAA,MAAA,EAAAkE,IAOAlE,CADE,mBAAA+E,EAAA8E,MAOF7J,MAAA,GAOAA,MAPA,aAAAA,MAAA,EAAAmE,IAOAnE,CADE,iBAAA+E,EAAA8E,8BAad7J,MAAA,YAIIA,MAAA,YAGAA,MAAA,UACIA,MAAA,6DAERA,WA4BT,IAAMwN,EAAoB,MAA3B,MAAOA,UAA4BrH,KAMrClE,YAAoBC,EAAqC0H,GACrDvD,QADgBlE,KAAAD,SAAqCC,KAAAyH,UAJzCzH,KAAA2H,OAAS3H,KAAKD,OAAO4H,OAE9B3H,KAAA0H,KAAO,EAId,CAEOrD,WACHrE,KAAKD,OAAOkL,eACZjL,KAAKsE,aACD,gBACAtE,KAAKyH,QAAQxH,OAAOuE,UAAWnE,IACvBA,aAAasJ,MAAe3J,KAAK4J,aAAW,IAGxD5J,KAAK4J,aACT,CAEQA,cACJ5J,KAAKoK,QACD,cACA,KACI,MAAMC,EAAQrK,KAAKyH,QAAQ6C,KAAKrB,MAAM,MAAQ,CAAC,IAC/CjJ,KAAK0H,KAAO2C,EAAMA,EAAMlE,OAAS,GAAG8C,MAAM,KAAK,EAAC,EAEpD,GAER,CAACzI,SAAAR,KAAA,mBAAAS,iBA9BQ4K,GAAmBxN,MAAA6C,KAAA7C,MAAAsH,MAAA,EAAA3E,SAAAR,KAAA,UAAAW,EAAAC,IAAA,MAAnByK,EAAmBxK,UAAA,sBAAAuE,SAAA,CAAAvH,OAAAiD,MAAA,GAAAC,KAAA,EAAAC,OAAA,wkBAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAtFxBrD,MAAA,gBACAA,MAAA,WACIA,MAAA,iBACAA,MAAA,YACIA,MAAA,oBACAA,MAAA,EAAAyN,GAAA,eAuCIzN,MADJ,UACIA,CADyD,WAErDA,MAAA,mBAERA,UACAA,MAAA,EAAA0N,GAAA,+BAYR1N,sBAvDgCA,MAAA,GAAAA,MAAA,kBAAAsD,EAAAuG,MA4CnB7J,MAAA,GAAAA,MAAA,gBAAAoI,EAAApI,MAAA,KAAAsD,EAAAwG,UAAA1B,EAAAE,sZAqCRkF,CAAoB,yZCpDrBxN,MAAA,cAEIA,MAAA,yBAAAK,EAAAL,MAAAkI,GAAA3G,IAAAoM,EAAA3N,QAAA,OAAAA,MAAS2N,EAAAtI,gBAAAhF,EAAA4E,IAAuB,GAEhCjF,MAAA,WAAcA,MAAA,GAAUA,QACxBA,MAAA,WACIA,MAAA,GAERA,yCAJkBA,MAAA,GAAAA,MAAA4N,GAEV5N,MAAA,GAAAA,MAAA,IAAAK,EAAAwN,MAAA,6BASJ7N,MAJJ,WAIIA,CADH,cACaA,MAAA,WACdA,iCALAA,MAAA,EAAA8N,GAAA,mBACK9N,MAAA,sCASDA,MAAA,aAAuCA,MAAA,SAAGA,mCAF9CA,MAAA,YACIA,MAAA,GACAA,MAAA,EAAA+N,GAAA,eACJ/N,6BAFIA,cAAA,IAAAgO,EAAA,KACOhO,cAAA,QAAAgO,6CAKPhO,MADJ,WACIA,CAD6C,eAIzCA,MAAA,yBAAAiO,EAAAjO,MAAAkO,GAAA3M,IAAAoM,EAAA3N,QAAA,OAAAA,MAAS2N,EAAA3B,SAAAiC,GAAa,GAGtBjO,MAAA,cAAUA,MAAA,UACdA,UACAA,MAAA,eAEIA,MAAA,yBAAAiO,EAAAjO,MAAAkO,GAAA3M,IAAAoM,EAAA3N,QAAA,OAAAA,MAAS2N,EAAAQ,WAAAF,GAAe,GAIxBjO,MAAA,cAAUA,MAAA,YAElBA,aAML,IAAMoO,EAAyB,MAAhC,MAAOA,EAUTnM,YAAoBC,GAAAC,KAAAD,SATJC,KAAAG,QAAUH,KAAKD,OAAOI,QACtBH,KAAAI,QAAUJ,KAAKD,OAAOK,QAEtBJ,KAAAkM,UAAY,IAAIC,KAA6B,IAC7CnM,KAAAoM,UAAYpM,KAAKD,OAAOsM,MAExBrM,KAAA6J,SAAYyC,GAAOtM,KAAKD,OAAO8J,SAASyC,GACxCtM,KAAAgM,WAAcM,GAAMtM,KAAKD,OAAOiM,WAAWM,EAET,CAAC9L,SAAAR,KAAA,mBAAAS,iBAV1CwL,GAAyBpO,MAAA6C,KAAA,EAAAF,SAAAR,KAAA,UAAAW,EAAAC,IAAA,MAAzBqL,EAAyBpL,UAAA,yBAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,2yBAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAlF9BrD,MAAA,yCAIAA,MAAA,qCAsDAA,MAzBA,EAAA0O,GAAA,yBAAA1O,MAyBAA,CAzB0D,EAAA2O,GAAA,yBAAA3O,MAyB1DA,CAd8C,EAAA4O,GAAA,yBAAA5O,MAc9CA,CAN6C,GAAA6O,GAAA,yBAAA7O,OA0B7CA,MAAA,6EA7EIA,MAAA,qBAAA4H,EAAA5H,MAAA,IAAAsD,EAAAf,WAAAqF,EAAA9D,SAAA,WAKA9D,MAAA,GAyBAA,MAzBA,OAAAsD,EAAAiL,UAyBAvO,CAzBkB,UAAAA,MAAA,GAAA2E,GAAA3E,MAAA,GAAAgE,GAAA8K,GAAA9O,MAAA,GAAAkE,IAAAlE,MAAA,GAAAmE,GAAA4K,GAAA/O,MAAA,GAAAqE,IAAArE,MAAA,GAAAuE,GAAAyK,GAAAhP,MAAA,GAAAyE,GAAAwK,IAyBlBjP,CAFE,gBAAAiI,EAAAjI,MAAA,IAAAsD,EAAAhB,UAAA,KAAA2F,EAAAnD,OAEF9E,CADoC,0EAoDnCoO,CAAyB,qEC/D/B,IAAMc,EAAoB,MAA3B,MAAOA,UAA4B/I,KASrClE,YACYkN,EACAC,EACAC,EACA3F,GAERrD,QALQlE,KAAAgN,WACAhN,KAAAiN,cACAjN,KAAAkN,WACAlN,KAAAuH,OAZLvH,KAAAsK,IAAMtK,KAAKgN,SAASG,QACpBnN,KAAAoN,OAASpN,KAAKgN,SAASK,WACvBrN,KAAAoF,SAAWpF,KAAKgN,SAASM,aACzBtN,KAAAuN,QAAUvN,KAAKgN,SAASQ,YACxBxN,KAAAyN,OAASzN,KAAKgN,SAASU,WAEvB1N,KAAA2N,OAAS,EAShB,CAEatJ,WAAQ,IAAAmE,EAAAxI,KAAA,SAAAyI,KAAA,kBACXD,EAAKjB,KAAKmB,YAAYC,QAAKC,KAAO5D,GAAMA,IAAI6D,YAClDL,EAAKlE,aACD,gBACAkE,EAAK0E,SAAS/M,QAAQqE,UAAWQ,IAC7B,MAAM4I,EAAapF,EAAKjB,KAAKsG,oBACvBrE,EACFxE,EAAEkB,MAAM,IACR0H,EAAW7I,KAAMC,GAAMA,EAAE8I,KAAKnM,SAAS,aAAamB,GACxD0F,EAAKwE,SAASe,SAASvE,EAAI,IAGnChB,EAAKlE,aAAa,eAAgBkE,EAAKyE,YAAYhC,gBACnDzC,EAAKlE,aACD,kBACAkE,EAAK0E,SAAS/M,QAAQqE,UAAWQ,IAC7BwD,EAAKyE,YAAYpF,WAAW7C,EAAC,IAGrCwD,EAAKyE,YAAYe,QAAO,eAAAC,KAAAxF,KAAG,UAAO5D,GAC9B,MAAM1E,QAAgBqI,EAAK0E,SAAS/M,QAC/BwI,QAAKoB,KAAK,IACVlB,kBACCL,EAAK0E,SAASvN,qBAAgBqK,EAAW,CAC3CnF,QACAiD,KAAM3H,EAAQ2H,MAEtB,GAAC,gBAAAoG,GAAA,OAAAD,EAAAE,MAAAnO,KAAAoO,UAAA,EARuB,EAQtB,EA3Be,EA4BrB,CAAC5N,SAAAR,KAAA,mBAAAS,iBA9CQsM,GAAmBlP,MAAA6C,MAAA7C,MAAA6C,MAAA7C,MAAAsH,KAAAtH,MAAA0M,MAAA,EAAA/J,SAAAR,KAAA,UAAAW,EAAAC,IAAA,MAAnBmM,EAAmBlM,UAAA,kBAAAuE,SAAA,CAAAvH,MAFjB,CAACwQ,OAAsBxQ,OAAAiD,MAAA,EAAAC,KAAA,GAAAC,OAAA,gKAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAf9BrD,MAAA,WAGIA,MAAA,4GASJA,eARQA,QAMAA,MANA,MAAAA,MAAA,IAAAsD,EAAAmJ,KAMAzM,CANmB,SAAAA,MAAA,IAAAsD,EAAAiM,QAMnBvP,CALyB,WAAAA,MAAA,KAAAsD,EAAAiE,UAKzBvH,CAJ6B,UAAAA,MAAA,KAAAsD,EAAAoM,SAI7B1P,CAH2B,SAAAA,MAAA,KAAAsD,EAAAsM,QAG3B5P,CAFyB,UAAAA,MAAA,GAAAgE,IAEzBhE,CAD8B,QAAAsD,EAAAwM,4CAQjCZ,CAAoB,8BCNjC,MAaMuB,GAAkB,CACpB,CACI5G,KAAM,MACN6G,UAAWlD,EACXmD,SAAU,CACN,CAAE9G,KAAM,SAAU6G,UAAW1O,GAC7B,CAAE6H,KAAM,eAAgB6G,UAAWtC,GACnC,CAAEvE,KAAM,aAAc6G,UAAWxB,GACjC,CAAErF,KAAM,SAAU6G,UAAWxK,GAC7B,CAAE2D,KAAM,KAAM+G,WAAY,YAGlC,CACI/G,KAAM,GACN6G,UAAWvD,EACXwD,SAAU,CACN,CAAE9G,KAAM,SAAU6G,UAAW1O,GAC7B,CAAE6H,KAAM,QAAS6G,UAAWtC,GAC5B,CAAEvE,KAAM,SAAU6G,UAAWxK,GAC7B,CAAE2D,KAAM,KAAM+G,WAAY,YAGlC,CAAE/G,KAAM,KAAM+G,WAAY,KAiBvB,IAAMC,GAAgB,MAAvB,MAAOA,EAAgBlO,SAAAR,KAAA,mBAAAS,iBAAhBiO,EAAgB,EAAAlO,SAAAR,KAAA,UAAAW,EAAAgO,GAAA,MAAhBD,IAAgBlO,SAAAR,KAAA,UAAAW,EAAAiO,IAAA,UAXrBC,KACAC,IACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MACAC,KAAaC,SAAShB,cAGjBI,CAAgB","names":["i0","row_r1","user_email","ParkingBookingsListComponent_ng_template_4_div_3_Template","user_name","row_r2","booked_by_email","ParkingBookingsListComponent_ng_template_6_div_3_Template","booked_by_name","row_r3","checked_out_at","ctx_r3","time_format","ParkingBookingsListComponent_ng_template_8_div_0_Template","ParkingBookingsListComponent_ng_template_8_div_1_Template","ParkingBookingsListComponent_ng_template_8_div_2_Template","checked_in","ParkingBookingsListComponent_ng_template_10_span_2_Template","row_r5","extension_data","plate_number","row_r7","_r6","row","approve","reject","status","menu_r8","row_r10","_r9","editReservation","menu","ParkingBookingsListComponent","constructor","_state","this","events","bookings","options","loading","e","rejectBooking","approveBooking","static","t","i1","core","VBU","selectors","decls","vars","consts","template","rf","ctx","ParkingBookingsListComponent_ng_template_4_Template","ParkingBookingsListComponent_ng_template_6_Template","ParkingBookingsListComponent_ng_template_8_Template","ParkingBookingsListComponent_ng_template_10_Template","ParkingBookingsListComponent_ng_template_12_Template","ParkingBookingsListComponent_ng_template_14_Template","tmp_6_0","includes","_c7","_c0","state_template_r13","_c1","_c2","person_template_r11","_c3","host_template_r12","_c4","plate_template_r14","_c5","status_template_r15","_c6","action_template_r16","tmp_9_0","search","ctx_r1","space_status","id","statusTooltip","row_r4","_r3","copyToClipboard","data_r5","data_r7","data","ParkingSpaceListComponent_ng_template_8_button_1_div_3_Template","row_r9","assigned_name","ParkingSpaceListComponent_ng_template_8_div_0_Template","ParkingSpaceListComponent_ng_template_8_button_1_Template","row_r11","_r10","editSpace","removeSpace","ParkingSpaceListComponent","AsyncHandler","_clipboard","super","spaces","s","ngOnInit","subscription","combineLatest","subscribe","_updateStatusList","type","copy","notifySuccess","space","booking","find","_","asset_id","assigned_to","i2","features","ParkingSpaceListComponent_ng_template_4_Template","ParkingSpaceListComponent_ng_template_6_Template","ParkingSpaceListComponent_ng_template_8_Template","ParkingSpaceListComponent_ng_template_10_Template","tmp_4_0","name_template_r13","assigned_template_r14","status_template_r12","action_template_r15","tmp_7_0","_r1","newParkingSpace","tmp_1_0","zones","length","newParkingUser","_r4","newReservation","tmp_3_0","level_r5","parent_id","display_name","ParkingTopbarComponent_mat_option_14_div_2_Template","use_region","name","$event","setDate","ParkingTopbarComponent","_settings","get","manageRestrictions","_dialog","open","BookingRulesModalComponent","_org","_route","_router","path","levels","d","setOptions","date","setSearch","str","updateZones","z","navigate","relativeTo","queryParams","zone_ids","join","_this","_asyncToGenerator","initialised","pipe","first","toPromise","queryParamMap","params","has","split","level","levelWithID","building","buildings","bld","filter","zone","lvl","push","NavigationEnd","_updatePath","editUser","_this2","take","undefined","Date","now","allow_time_changes","timeout","parts","url","i3","i4","i5","ParkingTopbarComponent_button_8_Template","ParkingTopbarComponent_button_9_Template","ParkingTopbarComponent_button_10_Template","ParkingTopbarComponent_mat_option_14_Template","ParkingTopbarComponent_date_options_20_Template","tmp_2_0","ParkingComponent","startPolling","url_parts","ParkingComponent_div_11_Template","tabPanel_r1","NewParkingComponent","NewParkingComponent_div_5_Template","NewParkingComponent_div_9_Template","ctx_r2","data_r4","email","ParkingUsersListComponent_ng_template_6_div_0_Template","ParkingUsersListComponent_ng_template_8_span_2_Template","data_r6","row_r8","_r7","removeUser","ParkingUsersListComponent","new_items","BehaviorSubject","user_list","users","u","ParkingUsersListComponent_ng_template_4_Template","ParkingUsersListComponent_ng_template_6_Template","ParkingUsersListComponent_ng_template_8_Template","ParkingUsersListComponent_ng_template_10_Template","name_template_r9","plate_template_r11","denied_template_r10","action_template_r12","ParkingMapComponent","_explore","_ex_parking","_parking","map_url","styles","map_styles","map_features","actions","map_actions","labels","map_labels","locate","level_list","levelsForBuilding","tags","setLevel","on_book","_ref","_x","apply","arguments","ExploreParkingService","ROUTES","component","children","redirectTo","AppParkingModule","$C","G2t","CommonModule","UIModule","FormsModule","ReactiveFormsModule","FormFieldsModule","MatTabsModule","MatProgressBarModule","SharedBookingsModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/parking/parking-bookings-list.component.ts","./apps/concierge/src/app/parking/parking-space-list.component.ts","./apps/concierge/src/app/parking/parking-topbar.component.ts","./apps/concierge/src/app/parking/parking.component.ts","./apps/concierge/src/app/parking/new-parking.component.ts","./apps/concierge/src/app/parking/parking-users-list.component.ts","./apps/concierge/src/app/parking/parking-map.component.ts","./apps/concierge/src/app/parking/parking.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'parking-bookings-list',\n    template: `\n        <mat-progress-bar\n            [class.opacity-0]=\"!(loading | async)?.includes('bookings')\"\n            class=\"sticky left-0 w-full\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[76rem] block text-sm\"\n            [data]=\"events\"\n            [columns]=\"[\n                {\n                    key: 'state',\n                    name: 'In Use',\n                    content: state_template,\n                    size: '4.75rem',\n                    sortable: false,\n                },\n                { key: 'asset_name', name: 'Bay Number' },\n                {\n                    key: 'user_name',\n                    name: 'Reserved For',\n                    content: person_template,\n                },\n                {\n                    key: 'booked_by_name',\n                    name: 'Reserved By',\n                    content: host_template,\n                },\n                {\n                    key: 'plate_number',\n                    name: 'Plate Number',\n                    content: plate_template,\n                    size: '10rem',\n                    sortable: false,\n                },\n                {\n                    key: 'status',\n                    name: 'Status',\n                    content: status_template,\n                    size: '9.5rem',\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    size: '3.5rem',\n                    sortable: false,\n                },\n            ]\"\n            [filter]=\"(options | async)?.search\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #person_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.user_name || row.user_email }}</div>\n                <div\n                    *ngIf=\"row.user_name && row.user_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.user_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.booked_by_name || row.booked_by_email }}</div>\n                <div\n                    *ngIf=\"row.booked_by_name && row.booked_by_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.booked_by_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #state_template let-row=\"row\">\n            <div\n                *ngIf=\"!row?.checked_in && row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-base-300 text-base-100 mx-auto\"\n                [matTooltip]=\"\n                    'Left at ' + (row.checked_out_at * 1000 | date: time_format)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row?.checked_in && !row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n                matTooltip=\"Has not arrived at space\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"row?.checked_in\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n                matTooltip=\"Arrived at space\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #plate_template let-row=\"row\">\n            <div class=\"p-4 font-mono text-sm uppercase\">\n                {{ row?.extension_data?.plate_number }}\n                <span\n                    *ngIf=\"!row?.extension_data?.plate_number\"\n                    class=\"opacity-30\"\n                >\n                    N/A\n                </span>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <div class=\"px-4\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl border-none w-[7.5rem] h-10\"\n                    [class.text-success-content]=\"row?.status === 'approved'\"\n                    [class.bg-success]=\"row?.status === 'approved'\"\n                    [class.text-error-content]=\"row?.status === 'declined'\"\n                    [class.bg-error]=\"row?.status === 'declined'\"\n                    [class.text-neutral-content]=\"row?.status === 'ended'\"\n                    [class.bg-neutral]=\"row?.status === 'ended'\"\n                    [class.opacity-30]=\"row?.status === 'ended'\"\n                    [class.text-warning-content]=\"row?.status === 'tentative'\"\n                    [class.bg-warning]=\"row?.status === 'tentative'\"\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"row?.status === 'ended'\"\n                >\n                    <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                        <div class=\"flex-1 text-left\">\n                            {{\n                                row?.status === 'ended'\n                                    ? 'Ended'\n                                    : row?.status === 'approved'\n                                      ? 'Approved'\n                                      : row?.status === 'declined'\n                                        ? 'Declined'\n                                        : 'Pending'\n                            }}\n                        </div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approve(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_available</app-icon>\n                        <div class=\"pr-2\">Approve Reservation</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"reject(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_busy</app-icon>\n                        <div class=\"pr-2\">Decline Reservation</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center justify-end space-x-2 mx-auto\">\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"row.checked_in || row.status === 'ended'\"\n                    (click)=\"editReservation(row)\"\n                >\n                    <app-icon class=\"text-2xl\">edit</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <div class=\"w-full h-20\"></div>\n    `,\n    styles: [``],\n})\nexport class ParkingBookingsListComponent {\n    public readonly events = this._state.bookings;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly reject = (e) => this._state.rejectBooking(e);\n    public readonly approve = (e) => this._state.approveBooking(e);\n    public readonly editReservation = (e) => this._state.editReservation(e);\n\n    constructor(private _state: ParkingStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\nimport { AsyncHandler, notifySuccess } from '@placeos/common';\nimport { combineLatest } from 'rxjs';\nimport { ParkingSpace } from '@placeos/explore';\nimport { Booking } from '@placeos/bookings';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n@Component({\n    selector: 'parking-space-list',\n    template: `\n        <mat-progress-bar\n            [class.opacity-0]=\"!(loading | async)?.includes('spaces')\"\n            class=\"w-full\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[52rem] block text-sm\"\n            [data]=\"spaces\"\n            [columns]=\"[\n                { key: 'name', name: 'Parking Bay', content: name_template },\n                {\n                    key: 'assigned_to',\n                    name: 'Assigned',\n                    content: assigned_template,\n                },\n                { key: 'notes', name: 'Notes' },\n                {\n                    key: 'status',\n                    name: 'Status',\n                    content: status_template,\n                    sortable: false,\n                    size: '4.5rem',\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    sortable: false,\n                    size: '6.5rem',\n                },\n            ]\"\n            [filter]=\"(options | async)?.search\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #status_template let-row=\"row\">\n            <div\n                class=\"flex items-center justify-center h-8 w-8 rounded  mx-auto\"\n                [class.bg-warning]=\"\n                    !space_status[row.id]?.includes('free') &&\n                    !space_status[row.id]?.includes('busy')\n                \"\n                [class.text-warning-content]=\"\n                    !space_status[row.id]?.includes('free') &&\n                    !space_status[row.id]?.includes('busy')\n                \"\n                [class.bg-success]=\"space_status[row.id]?.includes('free')\"\n                [class.text-success-content]=\"\n                    space_status[row.id]?.includes('free')\n                \"\n                [class.bg-error]=\"space_status[row.id]?.includes('busy')\"\n                [class.text-error-content]=\"\n                    space_status[row.id]?.includes('busy')\n                \"\n                [matTooltip]=\"statusTooltip(space_status[row.id])\"\n                matTooltipPosition=\"left\"\n            >\n                <app-icon class=\"text-2xl\">\n                    {{\n                        space_status[row.id]?.includes('assigned')\n                            ? 'person'\n                            : space_status[row.id]?.includes('reuse')\n                              ? 'event_available'\n                              : 'question_mark'\n                    }}\n                </app-icon>\n            </div>\n        </ng-template>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <button\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(row.id)\"\n            >\n                <div class=\"\">{{ data }}</div>\n                <div class=\"text-[0.625rem] opacity-30 font-mono\">\n                    {{ row.id }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #assigned_template let-row=\"row\" let-data=\"data\">\n            <div *ngIf=\"!data\" class=\"p-4 opacity-30\">No Assigned User</div>\n            <button\n                *ngIf=\"data\"\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(data, 'assigned')\"\n            >\n                <div class=\"\">{{ row.assigned_name || data }}</div>\n                <div\n                    *ngIf=\"row.assigned_name\"\n                    class=\"text-[0.625rem] opacity-30 font-mono\"\n                >\n                    {{ data }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2 mx-auto\">\n                <button\n                    icon\n                    matRipple\n                    (click)=\"editSpace(row)\"\n                    matTooltip=\"Edit Parking Space\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"text-error\"\n                    matTooltip=\"Remove Parking Space\"\n                    (click)=\"removeSpace(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <div class=\"w-full h-20\"></div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceListComponent extends AsyncHandler {\n    public readonly spaces = this._state.spaces;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n    public readonly bookings = this._state.bookings;\n\n    public readonly space_status: Record<string, string> = {};\n\n    public readonly editSpace = (s?) => this._state.editSpace(s);\n    public readonly removeSpace = (s) => this._state.removeSpace(s);\n\n    constructor(\n        private _state: ParkingStateService,\n        private _clipboard: Clipboard,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'bookings',\n            combineLatest([this.spaces, this.bookings]).subscribe(\n                ([spaces, bookings]) =>\n                    this._updateStatusList(spaces, bookings),\n            ),\n        );\n    }\n\n    public copyToClipboard(id: string, type?: string) {\n        const success = this._clipboard.copy(id);\n        if (success)\n            notifySuccess(\n                type\n                    ? 'Assigned user email copied to clipboard.'\n                    : 'Parking Bay ID copied to clipboard.',\n            );\n    }\n\n    public statusTooltip(status: string) {\n        switch (status) {\n            case 'assigned_free':\n                return 'Space is assigned to a user but available for use';\n            case 'assigned_busy':\n                return 'Space is assigned to a user and in use';\n            case 'reuse_busy':\n                return 'Space is assigned to a user and in use';\n            case 'busy':\n                return 'Space is unassigned and in use';\n            case 'free':\n                return 'Space is unassigned and available for use';\n        }\n        return 'Space is unassigned and available for use';\n    }\n\n    private _updateStatusList(spaces: ParkingSpace[], bookings: Booking[]) {\n        for (const space of spaces) {\n            const booking = bookings.find(\n                (_) =>\n                    _.asset_id === space.id &&\n                    _.status !== 'declined' &&\n                    _.status !== 'cancelled' &&\n                    _.status !== 'ended',\n            );\n            if (space.assigned_to && !booking) {\n                this.space_status[space.id] = 'assigned_free';\n            } else if (\n                space.assigned_to &&\n                booking &&\n                booking.user_email === space.assigned_to\n            ) {\n                this.space_status[space.id] = 'assigned_busy';\n            } else if (\n                space.assigned_to &&\n                booking &&\n                booking.user_email !== space.assigned_to\n            ) {\n                this.space_status[space.id] = 'reuse_busy';\n            } else if (!space.assigned_to && booking) {\n                this.space_status[space.id] = 'busy';\n            } else {\n                this.space_status[space.id] = 'free';\n            }\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ParkingStateService } from './parking-state.service';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'parking-topbar',\n    template: `\n        <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n            <h2 class=\"text-2xl font-medium\">\n                {{\n                    path !== 'events'\n                        ? 'Parking Management'\n                        : 'Parking Reservations'\n                }}\n            </h2>\n            <div class=\"flex-1 w-px\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(options | async)?.search\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <div\n                [matTooltip]=\"\n                    (options | async)?.zones?.length\n                        ? ''\n                        : 'Select a level to add a space'\n                \"\n            >\n                <button\n                    btn\n                    matRipple\n                    *ngIf=\"path === 'manage'\"\n                    class=\"space-x-2 w-40\"\n                    (click)=\"newParkingSpace()\"\n                    [disabled]=\"!(options | async)?.zones?.length\"\n                >\n                    <div class=\"pl-2\">New Space</div>\n                    <app-icon>add</app-icon>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                *ngIf=\"path === 'users'\"\n                class=\"space-x-2 w-40\"\n                (click)=\"newParkingUser()\"\n            >\n                <div class=\"pl-2\">New User</div>\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                matRipple\n                *ngIf=\"path === 'events'\"\n                class=\"space-x-2 w-48\"\n                (click)=\"newReservation()\"\n            >\n                <div class=\"pl-2\">New Reservation</div>\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n        <div class=\"flex items-center bg-base-100 px-8 mb-2 h-14\">\n            <mat-form-field appearance=\"outline\" class=\"w-56 no-subscript\">\n                <mat-select\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                    multiple\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"text-xs opacity-30\" *ngIf=\"use_region\">\n                                {{ (level.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>{{ level.display_name || level.name }}</div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-0\"></div>\n            <button\n                icon\n                matRipple\n                class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Parking Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <date-options\n                *ngIf=\"path === 'events' || path === 'map'\"\n                (dateChange)=\"setDate($event)\"\n            ></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class ParkingTopbarComponent extends AsyncHandler implements OnInit {\n    public path = '';\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n    /** Options set for week view */\n    public readonly options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setOptions({ date: d });\n    /** Set filter string */\n    public readonly setSearch = (str) =>\n        this._state.setOptions({ search: str });\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setOptions({ zones: z });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'parking' },\n        });\n    }\n\n    constructor(\n        private _state: ParkingStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id,\n                        );\n                        this._state.setOptions({ zones: zones });\n                    }\n                }\n            }),\n        );\n        this.subscription(\n            'levels',\n            this._state.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone),\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            }),\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) this._updatePath();\n            }),\n        );\n        this._updatePath();\n    }\n\n    public newParkingSpace() {\n        this._state.editSpace();\n    }\n\n    public newParkingUser() {\n        this._state.editUser();\n    }\n\n    public async newReservation() {\n        const { date } = await this.options.pipe(take(1)).toPromise();\n        this._state.editReservation(undefined, {\n            date: date || Date.now(),\n            allow_time_changes: true,\n        });\n    }\n\n    private _updatePath() {\n        this.timeout(\n            'update_path',\n            () => {\n                const parts = this._router.url?.split('/') || [''];\n                this.path = parts[parts.length - 1].split('?')[0];\n            },\n            50,\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-parking',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden bg-base-100\">\n            <parking-topbar></parking-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'spaces']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'spaces'\"\n                    >\n                        Manage Spaces\n                    </a>\n                    <!-- <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Make Booking\n                    </a> -->\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-4\">\n                <router-outlet></router-outlet>\n            </div>\n            <div\n                *ngIf=\"!(levels | async)?.length\"\n                class=\"absolute inset-0 flex flex-col items-center justify-center z-50\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-50 z-0\"></div>\n                <p>No parking floors for the currently selected building</p>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class ParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-new-parking',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full relative\">\n                <parking-topbar></parking-topbar>\n                <div class=\"px-8 pb-2\" *ngIf=\"path !== 'events'\">\n                    <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n                        <a\n                            mat-tab-link\n                            [routerLink]=\"['/book', 'parking', 'new', 'manage']\"\n                            [active]=\"path === 'manage'\"\n                        >\n                            Spaces\n                        </a>\n                        <a\n                            mat-tab-link\n                            [routerLink]=\"[\n                                '/book',\n                                'parking',\n                                'new',\n                                'manage',\n                                'users'\n                            ]\"\n                            [active]=\"path === 'users'\"\n                        >\n                            Users\n                        </a>\n                        <a\n                            mat-tab-link\n                            [routerLink]=\"[\n                                '/book',\n                                'parking',\n                                'new',\n                                'manage',\n                                'map'\n                            ]\"\n                            [active]=\"path === 'map'\"\n                        >\n                            Map\n                        </a>\n                    </nav>\n                    <mat-tab-nav-panel #tabPanel></mat-tab-nav-panel>\n                </div>\n                <div class=\"relative flex-1 h-1/2 w-full overflow-auto px-8\">\n                    <div class=\"w-full h-full overflow-auto\">\n                        <router-outlet></router-outlet>\n                    </div>\n                </div>\n                <div\n                    *ngIf=\"!(levels | async)?.length\"\n                    class=\"absolute inset-0 flex flex-col items-center justify-center z-50\"\n                >\n                    <div\n                        class=\"absolute inset-0 bg-base-100 opacity-80 z-0\"\n                    ></div>\n                    <p class=\"z-10 opacity-60\">\n                        No parking floors for the currently selected building\n                    </p>\n                </div>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class NewParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) this._updatePath();\n            })\n        );\n        this._updatePath();\n    }\n\n    private _updatePath() {\n        this.timeout(\n            'update_path',\n            () => {\n                const parts = this._router.url?.split('/') || [''];\n                this.path = parts[parts.length - 1].split('?')[0];\n            },\n            50\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'parking-users-list',\n    template: `\n        <mat-progress-bar\n            [class.opacity-0]=\"!(loading | async)?.includes('users')\"\n            class=\"w-full\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[68rem] block text-sm\"\n            [data]=\"user_list\"\n            [columns]=\"[\n                { key: 'name', name: 'User', content: name_template },\n                { key: 'car_color', name: 'Car Colour' },\n                {\n                    key: 'plate_number',\n                    name: 'Plate Number',\n                    content: plate_template,\n                },\n                { key: 'notes', name: 'Notes' },\n                {\n                    key: 'deny',\n                    name: 'Deny',\n                    size: '4.5rem',\n                    content: denied_template,\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    sortable: false,\n                    size: '6.5rem',\n                },\n            ]\"\n            [filter]=\"(options | async)?.search\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <button\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(row.id)\"\n            >\n                <div class=\"\">{{ data }}</div>\n                <div class=\"text-[0.625rem] opacity-30 font-mono\">\n                    {{ row.email }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #denied_template let-data=\"data\">\n            <div\n                *ngIf=\"data\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-error text-error-content mx-auto\"\n            >\n                <app-icon>close</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #plate_template let-data=\"data\">\n            <div class=\"p-4 font-mono text-sm uppercase\">\n                {{ data }}\n                <span *ngIf=\"!data\" class=\"opacity-30\">N/A</span>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2 mx-auto\">\n                <button\n                    icon\n                    matRipple\n                    (click)=\"editUser(row)\"\n                    matTooltip=\"Edit User\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    (click)=\"removeUser(row)\"\n                    class=\"text-error\"\n                    matTooltip=\"Remove User\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <div class=\"w-full h-20\"></div>\n    `,\n    styles: [``],\n})\nexport class ParkingUsersListComponent {\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly new_items = new BehaviorSubject<FormGroup[]>([]);\n    public readonly user_list = this._state.users;\n\n    public readonly editUser = (u?) => this._state.editUser(u);\n    public readonly removeUser = (u) => this._state.removeUser(u);\n\n    constructor(private _state: ParkingStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { ExploreParkingService, ExploreStateService } from '@placeos/explore';\nimport { ParkingStateService } from './parking-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'parking-map',\n    template: `\n        <div\n            class=\"relative w-full h-[calc(100%-1.5rem)] my-2 bg-base-200 rounded-xl shadow\"\n        >\n            <interactive-map\n                [src]=\"url | async\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [labels]=\"labels | async\"\n                [options]=\"{ controls: true }\"\n                [focus]=\"locate\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [``],\n    providers: [ExploreParkingService],\n})\nexport class ParkingMapComponent extends AsyncHandler {\n    public url = this._explore.map_url;\n    public styles = this._explore.map_styles;\n    public features = this._explore.map_features;\n    public actions = this._explore.map_actions;\n    public labels = this._explore.map_labels;\n\n    public locate = '';\n\n    constructor(\n        private _explore: ExploreStateService,\n        private _ex_parking: ExploreParkingService,\n        private _parking: ParkingStateService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'parking_level',\n            this._parking.options.subscribe((_) => {\n                const level_list = this._org.levelsForBuilding();\n                const zone =\n                    _.zones[0] ||\n                    level_list.find((_) => _.tags.includes('parking'))?.id;\n                this._explore.setLevel(zone);\n            }),\n        );\n        this.subscription('parking_poll', this._ex_parking.startPolling());\n        this.subscription(\n            'parking_options',\n            this._parking.options.subscribe((_) => {\n                this._ex_parking.setOptions(_);\n            }),\n        );\n        this._ex_parking.on_book = async (space) => {\n            const options = await this._parking.options\n                .pipe(take(1))\n                .toPromise();\n            await this._parking.editReservation(undefined, {\n                space,\n                date: options.date,\n            });\n        };\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { UIModule } from '../ui/ui.module';\n\nimport { ParkingBookingsListComponent } from './parking-bookings-list.component';\nimport { ParkingSpaceListComponent } from './parking-space-list.component';\nimport { ParkingSpaceModalComponent } from './parking-space-modal.component';\nimport { ParkingTopbarComponent } from './parking-topbar.component';\nimport { ParkingComponent } from './parking.component';\nimport { NewParkingComponent } from './new-parking.component';\nimport { ParkingUsersListComponent } from './parking-users-list.component';\nimport { ParkingUserModalComponent } from './parking-user-modal.component';\nimport { ParkingMapComponent } from './parking-map.component';\nimport { ParkingBookingModalComponent } from './parking-booking-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\n\nconst COMPONENTS = [\n    NewParkingComponent,\n    ParkingComponent,\n    ParkingBookingsListComponent,\n    ParkingBookingModalComponent,\n    ParkingSpaceListComponent,\n    ParkingUsersListComponent,\n    ParkingTopbarComponent,\n    ParkingSpaceModalComponent,\n    ParkingUserModalComponent,\n    ParkingMapComponent,\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'manage/users', component: ParkingUsersListComponent },\n            { path: 'manage/map', component: ParkingMapComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: ParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'users', component: ParkingUsersListComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FormFieldsModule,\n        MatTabsModule,\n        MatProgressBarModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppParkingModule {}\n"],"x_google_ignoreList":[]}