{"version":3,"file":"apps_concierge_src_app_parking_parking_module_ts.js","mappings":"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","names":["i0","row_r1","all_day","duration","date","ctx_r1","time_format","date_end","row_r3","user_email","ParkingBookingsListComponent_ng_template_6_div_3_Template","user_name","row_r4","booked_by_email","ParkingBookingsListComponent_ng_template_8_div_3_Template","booked_by_name","row_r5","checked_out_at","ParkingBookingsListComponent_ng_template_10_div_0_Template","ParkingBookingsListComponent_ng_template_10_div_1_Template","ParkingBookingsListComponent_ng_template_10_div_2_Template","checked_in","ParkingBookingsListComponent_ng_template_12_span_2_Template","row_r6","extension_data","plate_number","row_r8","_r7","row","approve","reject","status","menu_r9","row_r11","_r10","editReservation","menu","state","ParkingBookingsListComponent","this","_settings","constructor","_state","events","bookings","options","loading","e","rejectBooking","approveBooking","static","__ngFactoryType__","i1","i2","core","VBU","selectors","decls","vars","consts","template","rf","ctx","ParkingBookingsListComponent_ng_template_4_Template","ParkingBookingsListComponent_ng_template_6_Template","ParkingBookingsListComponent_ng_template_8_Template","ParkingBookingsListComponent_ng_template_10_Template","ParkingBookingsListComponent_ng_template_12_Template","ParkingBookingsListComponent_ng_template_14_Template","ParkingBookingsListComponent_ng_template_16_Template","tmp_7_0","includes","_c8","_c0","state_template_r15","_c1","date_template_r12","_c2","_c3","person_template_r13","_c4","host_template_r14","_c5","plate_template_r16","_c6","status_template_r17","_c7","action_template_r18","tmp_10_0","search","space_status","id","statusTooltip","_r3","copyToClipboard","data_r5","data_r7","_r6","data","ParkingSpaceListComponent_ng_template_8_button_1_div_3_Template","row_r9","assigned_name","ParkingSpaceListComponent_ng_template_8_div_0_Template","ParkingSpaceListComponent_ng_template_8_button_1_Template","editSpace","removeSpace","ParkingSpaceListComponent","AsyncHandler","_clipboard","super","spaces","s","ngOnInit","subscription","combineLatest","subscribe","_updateStatusList","type","copy","notifySuccess","space","booking","find","_","asset_id","assigned_to","features","ParkingSpaceListComponent_ng_template_4_Template","ParkingSpaceListComponent_ng_template_6_Template","ParkingSpaceListComponent_ng_template_8_Template","ParkingSpaceListComponent_ng_template_10_Template","tmp_4_0","name_template_r13","assigned_template_r14","status_template_r12","action_template_r15","_r1","newParkingSpace","tmp_1_0","zones","length","newParkingUser","_r4","newReservation","tmp_3_0","level_r5","parent_id","display_name","ParkingTopbarComponent_mat_option_14_div_2_Template","use_region","name","manageRestrictions","$event","setDate","ParkingTopbarComponent","get","_dialog","open","BookingRulesModalComponent","_org","_route","_router","path","levels","d","setOptions","setSearch","str","updateZones","z","navigate","relativeTo","queryParams","zone_ids","join","_this","_asyncToGenerator","initialised","pipe","first","toPromise","queryParamMap","params","has","split","level","levelWithID","building","buildings","bld","filter","zone","lvl","push","NavigationEnd","_updatePath","editUser","_this2","take","undefined","Date","now","allow_time_changes","timeout","parts","url","i3","i4","i5","ParkingTopbarComponent_button_8_Template","ParkingTopbarComponent_button_9_Template","ParkingTopbarComponent_button_10_Template","ParkingTopbarComponent_mat_option_14_Template","ParkingTopbarComponent_button_17_Template","ParkingTopbarComponent_date_options_18_Template","tmp_2_0","ParkingComponent","startPolling","url_parts","ParkingComponent_div_11_Template","tabPanel_r1","NewParkingComponent","NewParkingComponent_div_5_Template","NewParkingComponent_div_9_Template","row_r2","ctx_r2","data_r4","email","ParkingUsersListComponent_ng_template_6_div_0_Template","ParkingUsersListComponent_ng_template_8_span_2_Template","data_r6","removeUser","ParkingUsersListComponent","new_items","BehaviorSubject","user_list","users","u","ParkingUsersListComponent_ng_template_4_Template","ParkingUsersListComponent_ng_template_6_Template","ParkingUsersListComponent_ng_template_8_Template","ParkingUsersListComponent_ng_template_10_Template","name_template_r9","plate_template_r11","denied_template_r10","action_template_r12","ParkingMapComponent","_explore","_ex_parking","_parking","map_url","styles","map_styles","map_features","actions","map_actions","labels","map_labels","locate","level_list","levelsForBuilding","tags","setLevel","on_book","_ref","zone_id","_x","apply","arguments","ExploreParkingService","ROUTES","component","children","redirectTo","AppParkingModule","$C","G2t","CommonModule","UIModule","FormsModule","ReactiveFormsModule","FormFieldsModule","MatTabsModule","MatProgressBarModule","SharedBookingsModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/parking/parking-bookings-list.component.ts","./apps/concierge/src/app/parking/parking-space-list.component.ts","./apps/concierge/src/app/parking/parking-topbar.component.ts","./apps/concierge/src/app/parking/parking.component.ts","./apps/concierge/src/app/parking/new-parking.component.ts","./apps/concierge/src/app/parking/parking-users-list.component.ts","./apps/concierge/src/app/parking/parking-map.component.ts","./apps/concierge/src/app/parking/parking.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'parking-bookings-list',\n    template: `\n        <mat-progress-bar\n            [class.opacity-0]=\"!(loading | async)?.includes('bookings')\"\n            class=\"sticky left-0 w-full\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[76rem] block text-sm\"\n            [data]=\"events\"\n            [columns]=\"[\n                {\n                    key: 'state',\n                    name: 'In Use',\n                    content: state_template,\n                    size: '4.75rem',\n                    sortable: false,\n                },\n                { key: 'date', name: 'Time', content: date_template },\n                { key: 'asset_name', name: 'Bay Number' },\n                {\n                    key: 'user_name',\n                    name: 'Reserved For',\n                    content: person_template,\n                },\n                {\n                    key: 'booked_by_name',\n                    name: 'Reserved By',\n                    content: host_template,\n                },\n                {\n                    key: 'plate_number',\n                    name: 'Plate Number',\n                    content: plate_template,\n                    size: '10rem',\n                    sortable: false,\n                },\n                {\n                    key: 'status',\n                    name: 'Status',\n                    content: status_template,\n                    size: '9.5rem',\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    size: '3.5rem',\n                    sortable: false,\n                },\n            ]\"\n            [filter]=\"(options | async)?.search\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #date_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                {{\n                    row.all_day || row.duration > 12 * 60\n                        ? 'All Day'\n                        : (row.date | date: time_format) +\n                          ' - ' +\n                          (row.date_end | date: time_format)\n                }}\n            </div>\n        </ng-template>\n        <ng-template #person_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.user_name || row.user_email }}</div>\n                <div\n                    *ngIf=\"row.user_name && row.user_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.user_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.booked_by_name || row.booked_by_email }}</div>\n                <div\n                    *ngIf=\"row.booked_by_name && row.booked_by_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.booked_by_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #state_template let-row=\"row\">\n            <div\n                *ngIf=\"!row?.checked_in && row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-base-300 text-base-100 mx-auto\"\n                [matTooltip]=\"\n                    'Left at ' + (row.checked_out_at * 1000 | date: time_format)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row?.checked_in && !row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n                matTooltip=\"Has not arrived at space\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"row?.checked_in\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n                matTooltip=\"Arrived at space\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #plate_template let-row=\"row\">\n            <div class=\"p-4 font-mono text-sm uppercase\">\n                {{ row?.extension_data?.plate_number }}\n                <span\n                    *ngIf=\"!row?.extension_data?.plate_number\"\n                    class=\"opacity-30\"\n                >\n                    N/A\n                </span>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <div class=\"px-4\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl border-none w-[7.5rem] h-10\"\n                    [class.text-success-content]=\"row?.status === 'approved'\"\n                    [class.bg-success]=\"row?.status === 'approved'\"\n                    [class.text-error-content]=\"row?.status === 'declined'\"\n                    [class.bg-error]=\"row?.status === 'declined'\"\n                    [class.text-neutral-content]=\"row?.status === 'ended'\"\n                    [class.bg-neutral]=\"row?.status === 'ended'\"\n                    [class.opacity-30]=\"row?.status === 'ended'\"\n                    [class.text-warning-content]=\"row?.status === 'tentative'\"\n                    [class.bg-warning]=\"row?.status === 'tentative'\"\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"row?.status === 'ended'\"\n                >\n                    <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                        <div class=\"flex-1 text-left\">\n                            {{\n                                row?.status === 'ended'\n                                    ? 'Ended'\n                                    : row?.status === 'approved'\n                                      ? 'Approved'\n                                      : row?.status === 'declined'\n                                        ? 'Declined'\n                                        : 'Pending'\n                            }}\n                        </div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approve(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_available</app-icon>\n                        <div class=\"pr-2\">Approve Reservation</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"reject(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_busy</app-icon>\n                        <div class=\"pr-2\">Decline Reservation</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center justify-end space-x-2 mx-auto\">\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"\n                        row.checked_in ||\n                        row.state === 'in_progress' ||\n                        row.status === 'ended'\n                    \"\n                    (click)=\"editReservation(row)\"\n                >\n                    <app-icon class=\"text-2xl\">edit</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <div class=\"w-full h-20\"></div>\n    `,\n    styles: [``],\n})\nexport class ParkingBookingsListComponent {\n    public readonly events = this._state.bookings;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly reject = (e) => this._state.rejectBooking(e);\n    public readonly approve = (e) => this._state.approveBooking(e);\n    public readonly editReservation = (e) => this._state.editReservation(e);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: ParkingStateService,\n        private _settings: SettingsService,\n    ) {}\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\nimport { AsyncHandler, notifySuccess } from '@placeos/common';\nimport { combineLatest } from 'rxjs';\nimport { ParkingSpace } from '@placeos/explore';\nimport { Booking } from '@placeos/bookings';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n@Component({\n    selector: 'parking-space-list',\n    template: `\n        <mat-progress-bar\n            [class.opacity-0]=\"!(loading | async)?.includes('spaces')\"\n            class=\"w-full\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[52rem] block text-sm\"\n            [data]=\"spaces\"\n            [columns]=\"[\n                { key: 'name', name: 'Parking Bay', content: name_template },\n                {\n                    key: 'assigned_to',\n                    name: 'Assigned',\n                    content: assigned_template,\n                },\n                { key: 'notes', name: 'Notes' },\n                {\n                    key: 'status',\n                    name: 'Status',\n                    content: status_template,\n                    sortable: false,\n                    size: '4.5rem',\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    sortable: false,\n                    size: '6.5rem',\n                },\n            ]\"\n            [filter]=\"(options | async)?.search\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #status_template let-row=\"row\">\n            <div\n                class=\"flex items-center justify-center h-8 w-8 rounded  mx-auto\"\n                [class.bg-warning]=\"\n                    !space_status[row.id]?.includes('free') &&\n                    !space_status[row.id]?.includes('busy')\n                \"\n                [class.text-warning-content]=\"\n                    !space_status[row.id]?.includes('free') &&\n                    !space_status[row.id]?.includes('busy')\n                \"\n                [class.bg-success]=\"space_status[row.id]?.includes('free')\"\n                [class.text-success-content]=\"\n                    space_status[row.id]?.includes('free')\n                \"\n                [class.bg-error]=\"space_status[row.id]?.includes('busy')\"\n                [class.text-error-content]=\"\n                    space_status[row.id]?.includes('busy')\n                \"\n                [matTooltip]=\"statusTooltip(space_status[row.id])\"\n                matTooltipPosition=\"left\"\n            >\n                <app-icon class=\"text-2xl\">\n                    {{\n                        space_status[row.id]?.includes('assigned')\n                            ? 'person'\n                            : space_status[row.id]?.includes('reuse')\n                              ? 'event_available'\n                              : 'question_mark'\n                    }}\n                </app-icon>\n            </div>\n        </ng-template>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <button\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(row.id)\"\n            >\n                <div class=\"\">{{ data }}</div>\n                <div class=\"text-[0.625rem] opacity-30 font-mono\">\n                    {{ row.id }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #assigned_template let-row=\"row\" let-data=\"data\">\n            <div *ngIf=\"!data\" class=\"p-4 opacity-30\">No Assigned User</div>\n            <button\n                *ngIf=\"data\"\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(data, 'assigned')\"\n            >\n                <div class=\"\">{{ row.assigned_name || data }}</div>\n                <div\n                    *ngIf=\"row.assigned_name\"\n                    class=\"text-[0.625rem] opacity-30 font-mono\"\n                >\n                    {{ data }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2 mx-auto\">\n                <button\n                    icon\n                    matRipple\n                    (click)=\"editSpace(row)\"\n                    matTooltip=\"Edit Parking Space\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"text-error\"\n                    matTooltip=\"Remove Parking Space\"\n                    (click)=\"removeSpace(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <div class=\"w-full h-20\"></div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceListComponent extends AsyncHandler {\n    public readonly spaces = this._state.spaces;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n    public readonly bookings = this._state.bookings;\n\n    public readonly space_status: Record<string, string> = {};\n\n    public readonly editSpace = (s?) => this._state.editSpace(s);\n    public readonly removeSpace = (s) => this._state.removeSpace(s);\n\n    constructor(\n        private _state: ParkingStateService,\n        private _clipboard: Clipboard,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'bookings',\n            combineLatest([this.spaces, this.bookings]).subscribe(\n                ([spaces, bookings]) =>\n                    this._updateStatusList(spaces, bookings),\n            ),\n        );\n    }\n\n    public copyToClipboard(id: string, type?: string) {\n        const success = this._clipboard.copy(id);\n        if (success)\n            notifySuccess(\n                type\n                    ? 'Assigned user email copied to clipboard.'\n                    : 'Parking Bay ID copied to clipboard.',\n            );\n    }\n\n    public statusTooltip(status: string) {\n        switch (status) {\n            case 'assigned_free':\n                return 'Space is assigned to a user but available for use';\n            case 'assigned_busy':\n                return 'Space is assigned to a user and in use';\n            case 'reuse_busy':\n                return 'Space is assigned to a user and in use';\n            case 'busy':\n                return 'Space is unassigned and in use';\n            case 'free':\n                return 'Space is unassigned and available for use';\n        }\n        return 'Space is unassigned and available for use';\n    }\n\n    private _updateStatusList(spaces: ParkingSpace[], bookings: Booking[]) {\n        for (const space of spaces) {\n            const booking = bookings.find(\n                (_) =>\n                    _.asset_id === space.id &&\n                    _.status !== 'declined' &&\n                    _.status !== 'cancelled' &&\n                    _.status !== 'ended',\n            );\n            if (space.assigned_to && !booking) {\n                this.space_status[space.id] = 'assigned_free';\n            } else if (\n                space.assigned_to &&\n                booking &&\n                booking.user_email === space.assigned_to\n            ) {\n                this.space_status[space.id] = 'assigned_busy';\n            } else if (\n                space.assigned_to &&\n                booking &&\n                booking.user_email !== space.assigned_to\n            ) {\n                this.space_status[space.id] = 'reuse_busy';\n            } else if (!space.assigned_to && booking) {\n                this.space_status[space.id] = 'busy';\n            } else {\n                this.space_status[space.id] = 'free';\n            }\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ParkingStateService } from './parking-state.service';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'parking-topbar',\n    template: `\n        <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n            <h2 class=\"text-2xl font-medium\">\n                {{\n                    path !== 'events'\n                        ? 'Parking Management'\n                        : 'Parking Reservations'\n                }}\n            </h2>\n            <div class=\"flex-1 w-px\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(options | async)?.search\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <div\n                [matTooltip]=\"\n                    (options | async)?.zones?.length\n                        ? ''\n                        : 'Select a level to add a space'\n                \"\n            >\n                <button\n                    btn\n                    matRipple\n                    *ngIf=\"path === 'manage'\"\n                    class=\"space-x-2 w-40\"\n                    (click)=\"newParkingSpace()\"\n                    [disabled]=\"!(options | async)?.zones?.length\"\n                >\n                    <div class=\"pl-2\">New Space</div>\n                    <app-icon>add</app-icon>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                *ngIf=\"path === 'users'\"\n                class=\"space-x-2 w-40\"\n                (click)=\"newParkingUser()\"\n            >\n                <div class=\"pl-2\">New User</div>\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                matRipple\n                *ngIf=\"path === 'events'\"\n                class=\"space-x-2 w-48\"\n                (click)=\"newReservation()\"\n            >\n                <div class=\"pl-2\">New Reservation</div>\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n        <div class=\"flex items-center bg-base-100 px-8 mb-2 h-14\">\n            <mat-form-field appearance=\"outline\" class=\"w-56 no-subscript\">\n                <mat-select\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                    multiple\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"text-xs opacity-30\" *ngIf=\"use_region\">\n                                {{ (level.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>{{ level.display_name || level.name }}</div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-0\"></div>\n            <button\n                icon\n                matRipple\n                class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Parking Restrictions\"\n                *ngIf=\"path !== 'events' && path !== 'map'\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <date-options\n                *ngIf=\"path === 'events' || path === 'map'\"\n                (dateChange)=\"setDate($event)\"\n            ></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class ParkingTopbarComponent extends AsyncHandler implements OnInit {\n    public path = '';\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n    /** Options set for week view */\n    public readonly options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setOptions({ date: d });\n    /** Set filter string */\n    public readonly setSearch = (str) =>\n        this._state.setOptions({ search: str });\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setOptions({ zones: z });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'parking' },\n        });\n    }\n\n    constructor(\n        private _state: ParkingStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id,\n                        );\n                        this._state.setOptions({ zones: zones });\n                    }\n                }\n            }),\n        );\n        this.subscription(\n            'levels',\n            this._state.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone),\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            }),\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) this._updatePath();\n            }),\n        );\n        this._updatePath();\n    }\n\n    public newParkingSpace() {\n        this._state.editSpace();\n    }\n\n    public newParkingUser() {\n        this._state.editUser();\n    }\n\n    public async newReservation() {\n        const { date } = await this.options.pipe(take(1)).toPromise();\n        this._state.editReservation(undefined, {\n            date: date || Date.now(),\n            allow_time_changes: true,\n        });\n    }\n\n    private _updatePath() {\n        this.timeout(\n            'update_path',\n            () => {\n                const parts = this._router.url?.split('/') || [''];\n                this.path = parts[parts.length - 1].split('?')[0];\n            },\n            50,\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-parking',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden bg-base-100\">\n            <parking-topbar></parking-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'spaces']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'spaces'\"\n                    >\n                        Manage Spaces\n                    </a>\n                    <!-- <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Make Booking\n                    </a> -->\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-4\">\n                <router-outlet></router-outlet>\n            </div>\n            <div\n                *ngIf=\"!(levels | async)?.length\"\n                class=\"absolute inset-0 flex flex-col items-center justify-center z-50\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-50 z-0\"></div>\n                <p>No parking floors for the currently selected building</p>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class ParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-new-parking',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full relative\">\n                <parking-topbar></parking-topbar>\n                <div class=\"px-8 pb-2\" *ngIf=\"path !== 'events'\">\n                    <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n                        <a\n                            mat-tab-link\n                            [routerLink]=\"['/book', 'parking', 'new', 'manage']\"\n                            [active]=\"path === 'manage'\"\n                        >\n                            Spaces\n                        </a>\n                        <a\n                            mat-tab-link\n                            [routerLink]=\"[\n                                '/book',\n                                'parking',\n                                'new',\n                                'manage',\n                                'users'\n                            ]\"\n                            [active]=\"path === 'users'\"\n                        >\n                            Users\n                        </a>\n                        <a\n                            mat-tab-link\n                            [routerLink]=\"[\n                                '/book',\n                                'parking',\n                                'new',\n                                'manage',\n                                'map'\n                            ]\"\n                            [active]=\"path === 'map'\"\n                        >\n                            Map\n                        </a>\n                    </nav>\n                    <mat-tab-nav-panel #tabPanel></mat-tab-nav-panel>\n                </div>\n                <div class=\"relative flex-1 h-1/2 w-full overflow-auto px-8\">\n                    <div class=\"w-full h-full overflow-auto\">\n                        <router-outlet></router-outlet>\n                    </div>\n                </div>\n                <div\n                    *ngIf=\"!(levels | async)?.length\"\n                    class=\"absolute inset-0 flex flex-col items-center justify-center z-50\"\n                >\n                    <div\n                        class=\"absolute inset-0 bg-base-100 opacity-80 z-0\"\n                    ></div>\n                    <p class=\"z-10 opacity-60\">\n                        No parking floors for the currently selected building\n                    </p>\n                </div>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class NewParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) this._updatePath();\n            })\n        );\n        this._updatePath();\n    }\n\n    private _updatePath() {\n        this.timeout(\n            'update_path',\n            () => {\n                const parts = this._router.url?.split('/') || [''];\n                this.path = parts[parts.length - 1].split('?')[0];\n            },\n            50\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'parking-users-list',\n    template: `\n        <mat-progress-bar\n            [class.opacity-0]=\"!(loading | async)?.includes('users')\"\n            class=\"w-full\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[68rem] block text-sm\"\n            [data]=\"user_list\"\n            [columns]=\"[\n                { key: 'name', name: 'User', content: name_template },\n                { key: 'car_color', name: 'Car Colour' },\n                {\n                    key: 'plate_number',\n                    name: 'Plate Number',\n                    content: plate_template,\n                },\n                { key: 'notes', name: 'Notes' },\n                {\n                    key: 'deny',\n                    name: 'Deny',\n                    size: '4.5rem',\n                    content: denied_template,\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    sortable: false,\n                    size: '6.5rem',\n                },\n            ]\"\n            [filter]=\"(options | async)?.search\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <button\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(row.id)\"\n            >\n                <div class=\"\">{{ data }}</div>\n                <div class=\"text-[0.625rem] opacity-30 font-mono\">\n                    {{ row.email }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #denied_template let-data=\"data\">\n            <div\n                *ngIf=\"data\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-error text-error-content mx-auto\"\n            >\n                <app-icon>close</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #plate_template let-data=\"data\">\n            <div class=\"p-4 font-mono text-sm uppercase\">\n                {{ data }}\n                <span *ngIf=\"!data\" class=\"opacity-30\">N/A</span>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2 mx-auto\">\n                <button\n                    icon\n                    matRipple\n                    (click)=\"editUser(row)\"\n                    matTooltip=\"Edit User\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    (click)=\"removeUser(row)\"\n                    class=\"text-error\"\n                    matTooltip=\"Remove User\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <div class=\"w-full h-20\"></div>\n    `,\n    styles: [``],\n})\nexport class ParkingUsersListComponent {\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly new_items = new BehaviorSubject<FormGroup[]>([]);\n    public readonly user_list = this._state.users;\n\n    public readonly editUser = (u?) => this._state.editUser(u);\n    public readonly removeUser = (u) => this._state.removeUser(u);\n\n    constructor(private _state: ParkingStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { ExploreParkingService, ExploreStateService } from '@placeos/explore';\nimport { ParkingStateService } from './parking-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'parking-map',\n    template: `\n        <div\n            class=\"relative w-full h-[calc(100%-1.5rem)] my-2 bg-base-200 rounded-xl shadow\"\n        >\n            <interactive-map\n                [src]=\"url | async\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [labels]=\"labels | async\"\n                [options]=\"{ controls: true }\"\n                [focus]=\"locate\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [``],\n    providers: [ExploreParkingService],\n})\nexport class ParkingMapComponent extends AsyncHandler {\n    public url = this._explore.map_url;\n    public styles = this._explore.map_styles;\n    public features = this._explore.map_features;\n    public actions = this._explore.map_actions;\n    public labels = this._explore.map_labels;\n\n    public locate = '';\n\n    constructor(\n        private _explore: ExploreStateService,\n        private _ex_parking: ExploreParkingService,\n        private _parking: ParkingStateService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'parking_level',\n            this._parking.options.subscribe((_) => {\n                const level_list = this._org.levelsForBuilding();\n                const zone =\n                    _.zones[0] ||\n                    level_list.find((_) => _.tags.includes('parking'))?.id;\n                this._explore.setLevel(zone);\n            }),\n        );\n        this.subscription('parking_poll', this._ex_parking.startPolling());\n        this.subscription(\n            'parking_options',\n            this._parking.options.subscribe((_) => {\n                this._ex_parking.setOptions(_);\n            }),\n        );\n        this._ex_parking.on_book = async (space) => {\n            const options = await this._parking.options\n                .pipe(take(1))\n                .toPromise();\n            await this._parking.editReservation(undefined, {\n                space: {\n                    ...space,\n                    zone: this._org.levelWithID([space.zone_id || space.zone]),\n                },\n                date: options.date,\n            });\n        };\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { UIModule } from '../ui/ui.module';\n\nimport { ParkingBookingsListComponent } from './parking-bookings-list.component';\nimport { ParkingSpaceListComponent } from './parking-space-list.component';\nimport { ParkingSpaceModalComponent } from './parking-space-modal.component';\nimport { ParkingTopbarComponent } from './parking-topbar.component';\nimport { ParkingComponent } from './parking.component';\nimport { NewParkingComponent } from './new-parking.component';\nimport { ParkingUsersListComponent } from './parking-users-list.component';\nimport { ParkingUserModalComponent } from './parking-user-modal.component';\nimport { ParkingMapComponent } from './parking-map.component';\nimport { ParkingBookingModalComponent } from './parking-booking-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\n\nconst COMPONENTS = [\n    NewParkingComponent,\n    ParkingComponent,\n    ParkingBookingsListComponent,\n    ParkingBookingModalComponent,\n    ParkingSpaceListComponent,\n    ParkingUsersListComponent,\n    ParkingTopbarComponent,\n    ParkingSpaceModalComponent,\n    ParkingUserModalComponent,\n    ParkingMapComponent,\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'manage/users', component: ParkingUsersListComponent },\n            { path: 'manage/map', component: ParkingMapComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: ParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'users', component: ParkingUsersListComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FormFieldsModule,\n        MatTabsModule,\n        MatProgressBarModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppParkingModule {}\n"],"x_google_ignoreList":[]}