{"version":3,"file":"apps_concierge_src_app_parking_parking_module_ts.js","mappings":"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","names":["i0","row_r1","user_email","ParkingBookingsListComponent_ng_template_4_div_3_Template","user_name","row_r2","booked_by_email","ParkingBookingsListComponent_ng_template_6_div_3_Template","booked_by_name","row_r3","checked_out_at","ctx_r3","time_format","ParkingBookingsListComponent_ng_template_8_div_0_Template","ParkingBookingsListComponent_ng_template_8_div_1_Template","ParkingBookingsListComponent_ng_template_8_div_2_Template","checked_in","ParkingBookingsListComponent_ng_template_10_span_2_Template","row_r5","extension_data","plate_number","row_r7","_r6","row","approve","reject","status","menu_r8","ParkingBookingsListComponent","constructor","_state","this","events","bookings","options","loading","e","rejectBooking","approveBooking","static","t","i1","core","VBU","selectors","decls","vars","consts","template","rf","ctx","ParkingBookingsListComponent_ng_template_4_Template","ParkingBookingsListComponent_ng_template_6_Template","ParkingBookingsListComponent_ng_template_8_Template","ParkingBookingsListComponent_ng_template_10_Template","ParkingBookingsListComponent_ng_template_12_Template","tmp_5_0","includes","_c6","_c0","state_template_r11","_c1","_c2","person_template_r9","_c3","host_template_r10","_c4","plate_template_r12","_c5","status_template_r13","tmp_8_0","search","ctx_r1","space_status","id","statusTooltip","row_r4","_r3","copyToClipboard","data_r5","data_r7","data","ParkingSpaceListComponent_ng_template_8_button_1_div_3_Template","row_r9","assigned_name","ParkingSpaceListComponent_ng_template_8_div_0_Template","ParkingSpaceListComponent_ng_template_8_button_1_Template","row_r11","_r10","editSpace","removeSpace","ParkingSpaceListComponent","AsyncHandler","_clipboard","super","spaces","s","ngOnInit","subscription","combineLatest","subscribe","_updateStatusList","type","copy","notifySuccess","space","booking","find","_","asset_id","assigned_to","i2","features","ParkingSpaceListComponent_ng_template_4_Template","ParkingSpaceListComponent_ng_template_6_Template","ParkingSpaceListComponent_ng_template_8_Template","ParkingSpaceListComponent_ng_template_10_Template","tmp_4_0","name_template_r13","assigned_template_r14","status_template_r12","action_template_r15","tmp_7_0","_r1","newParkingSpace","newParkingUser","_r4","newReservation","tmp_3_0","level_r5","parent_id","display_name","ParkingTopbarComponent_mat_option_12_div_2_Template","use_region","name","$event","setDate","ParkingTopbarComponent","_settings","get","_org","_route","_router","path","zones","levels","d","setOptions","date","setSearch","str","updateZones","z","navigate","relativeTo","queryParams","zone_ids","join","_this","_asyncToGenerator","initialised","pipe","first","toPromise","queryParamMap","params","has","split","length","level","levelWithID","building","buildings","bld","filter","zone","lvl","push","NavigationEnd","_updatePath","editUser","editReservation","timeout","parts","url","i3","i4","ParkingTopbarComponent_button_6_Template","ParkingTopbarComponent_button_7_Template","ParkingTopbarComponent_button_8_Template","ParkingTopbarComponent_mat_option_12_Template","ParkingTopbarComponent_date_options_15_Template","tmp_1_0","ParkingComponent","startPolling","url_parts","ParkingComponent_div_11_Template","tabPanel_r1","NewParkingComponent","NewParkingComponent_div_5_Template","NewParkingComponent_div_9_Template","ctx_r2","data_r4","email","ParkingUsersListComponent_ng_template_6_div_0_Template","ParkingUsersListComponent_ng_template_8_span_2_Template","data_r6","row_r8","_r7","removeUser","ParkingUsersListComponent","new_items","BehaviorSubject","user_list","users","u","ParkingUsersListComponent_ng_template_4_Template","ParkingUsersListComponent_ng_template_6_Template","ParkingUsersListComponent_ng_template_8_Template","ParkingUsersListComponent_ng_template_10_Template","_c7","name_template_r9","plate_template_r11","denied_template_r10","action_template_r12","ParkingMapComponent","_explore","_ex_parking","_parking","map_url","styles","map_styles","map_features","actions","map_actions","labels","map_labels","locate","levelsForBuilding","setLevel","on_book","undefined","ExploreParkingService","ROUTES","component","children","redirectTo","AppParkingModule","$C","G2t","CommonModule","UIModule","FormsModule","ReactiveFormsModule","FormFieldsModule","MatTabsModule","MatProgressBarModule","SharedBookingsModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/parking/parking-bookings-list.component.ts","./apps/concierge/src/app/parking/parking-space-list.component.ts","./apps/concierge/src/app/parking/parking-topbar.component.ts","./apps/concierge/src/app/parking/parking.component.ts","./apps/concierge/src/app/parking/new-parking.component.ts","./apps/concierge/src/app/parking/parking-users-list.component.ts","./apps/concierge/src/app/parking/parking-map.component.ts","./apps/concierge/src/app/parking/parking.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'parking-bookings-list',\n    template: `\n        <mat-progress-bar\n            [class.opacity-0]=\"!(loading | async)?.includes('bookings')\"\n            class=\"w-full\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[76rem] block text-sm\"\n            [data]=\"events\"\n            [columns]=\"[\n                {\n                    key: 'state',\n                    name: 'In Use',\n                    content: state_template,\n                    size: '4.75rem',\n                    sortable: false\n                },\n                { key: 'description', name: 'Bay Number' },\n                {\n                    key: 'user_name',\n                    name: 'Reserved For',\n                    content: person_template\n                },\n                {\n                    key: 'booked_by_name',\n                    name: 'Reserved By',\n                    content: host_template\n                },\n                {\n                    key: 'plate_number',\n                    name: 'Plate Number',\n                    content: plate_template,\n                    size: '10rem',\n                    sortable: false\n                },\n                {\n                    key: 'status',\n                    name: 'Status',\n                    content: status_template,\n                    size: '9.5rem'\n                }\n            ]\"\n            [filter]=\"(options | async)?.search\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #person_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.user_name || row.user_email }}</div>\n                <div\n                    *ngIf=\"row.user_name && row.user_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.user_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.booked_by_name || row.booked_by_email }}</div>\n                <div\n                    *ngIf=\"row.booked_by_name && row.booked_by_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.booked_by_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #state_template let-row=\"row\">\n            <div\n                *ngIf=\"!row?.checked_in && row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-base-300 text-base-100 mx-auto\"\n                [matTooltip]=\"\n                    'Left at ' + (row.checked_out_at | date: time_format)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row?.checked_in && !row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n                matTooltip=\"Has not arrived at space\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"row?.checked_in\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-error text-error-content mx-auto\"\n                matTooltip=\"Arrived at space\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #plate_template let-row=\"row\">\n            <div class=\"p-4 font-mono text-sm\">\n                {{ row?.extension_data?.plate_number }}\n                <span\n                    *ngIf=\"!row?.extension_data?.plate_number\"\n                    class=\"opacity-30\"\n                >\n                    N/A\n                </span>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <div class=\"px-4\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl bg-warning text-warning-content border-none w-[7.5rem] h-10\"\n                    [class.!text-success-content]=\"row?.status === 'approved'\"\n                    [class.!bg-success]=\"row?.status === 'approved'\"\n                    [class.!text-error-content]=\"row?.status === 'declined'\"\n                    [class.!bg-error]=\"row?.status === 'declined'\"\n                    [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                    [class.!bg-neutral]=\"row?.status === 'ended'\"\n                    [class.opacity-30]=\"row?.status === 'ended'\"\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"row?.status === 'ended'\"\n                >\n                    <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                        <div class=\"flex-1 text-left\">\n                            {{\n                                row?.status === 'ended'\n                                    ? 'Ended'\n                                    : row?.status === 'approved'\n                                    ? 'Approved'\n                                    : row?.status === 'declined'\n                                    ? 'Declined'\n                                    : 'Pending'\n                            }}\n                        </div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approve(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_available</app-icon>\n                        <div class=\"pr-2\">Approve Reservation</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"reject(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_busy</app-icon>\n                        <div class=\"pr-2\">Decline Reservation</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n        <div class=\"w-full h-20\"></div>\n    `,\n    styles: [``],\n})\nexport class ParkingBookingsListComponent {\n    public readonly events = this._state.bookings;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly reject = (e) => this._state.rejectBooking(e);\n    public readonly approve = (e) => this._state.approveBooking(e);\n\n    constructor(private _state: ParkingStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\nimport { AsyncHandler, notifySuccess } from '@placeos/common';\nimport { combineLatest } from 'rxjs';\nimport { ParkingSpace } from '@placeos/explore';\nimport { Booking } from '@placeos/bookings';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\n@Component({\n    selector: 'parking-space-list',\n    template: `\n        <mat-progress-bar\n            [class.opacity-0]=\"!(loading | async)?.includes('spaces')\"\n            class=\"w-full\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[52rem] block text-sm\"\n            [data]=\"spaces\"\n            [columns]=\"[\n                { key: 'name', name: 'Parking Bay', content: name_template },\n                {\n                    key: 'assigned_to',\n                    name: 'Assigned',\n                    content: assigned_template\n                },\n                { key: 'notes', name: 'Notes' },\n                {\n                    key: 'status',\n                    name: 'Status',\n                    content: status_template,\n                    sortable: false,\n                    size: '4.5rem'\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    sortable: false,\n                    size: '6.5rem'\n                }\n            ]\"\n            [filter]=\"(options | async)?.search\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #status_template let-row=\"row\">\n            <div\n                class=\"flex items-center justify-center h-8 w-8 rounded bg-warning text-warning-content mx-auto\"\n                [class.!bg-success]=\"space_status[row.id]?.includes('free')\"\n                [class.!text-success-content]=\"\n                    space_status[row.id]?.includes('free')\n                \"\n                [class.!bg-error]=\"space_status[row.id]?.includes('busy')\"\n                [class.!text-error-content]=\"\n                    space_status[row.id]?.includes('busy')\n                \"\n                [matTooltip]=\"statusTooltip(space_status[row.id])\"\n                matTooltipPosition=\"left\"\n            >\n                <app-icon class=\"text-2xl\">\n                    {{\n                        space_status[row.id]?.includes('assigned')\n                            ? 'person'\n                            : space_status[row.id]?.includes('reuse')\n                            ? 'alert'\n                            : 'question_mark'\n                    }}\n                </app-icon>\n            </div>\n        </ng-template>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <button\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(row.id)\"\n            >\n                <div class=\"\">{{ data }}</div>\n                <div class=\"text-[0.625rem] opacity-30 font-mono\">\n                    {{ row.id }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #assigned_template let-row=\"row\" let-data=\"data\">\n            <div *ngIf=\"!data\" class=\"p-4 opacity-30\">No Assigned User</div>\n            <button\n                *ngIf=\"data\"\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(data, 'assigned')\"\n            >\n                <div class=\"\">{{ row.assigned_name || data }}</div>\n                <div\n                    *ngIf=\"row.assigned_name\"\n                    class=\"text-[0.625rem] opacity-30 font-mono\"\n                >\n                    {{ data }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2 mx-auto\">\n                <button\n                    icon\n                    matRipple\n                    (click)=\"editSpace(row)\"\n                    matTooltip=\"Edit Parking Space\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"text-error\"\n                    matTooltip=\"Remove Parking Space\"\n                    (click)=\"removeSpace(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <div class=\"w-full h-20\"></div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceListComponent extends AsyncHandler {\n    public readonly spaces = this._state.spaces;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n    public readonly bookings = this._state.bookings;\n\n    public readonly space_status: Record<string, string> = {};\n\n    public readonly editSpace = (s?) => this._state.editSpace(s);\n    public readonly removeSpace = (s) => this._state.removeSpace(s);\n\n    constructor(\n        private _state: ParkingStateService,\n        private _clipboard: Clipboard\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'bookings',\n            combineLatest([this.spaces, this.bookings]).subscribe(\n                ([spaces, bookings]) => this._updateStatusList(spaces, bookings)\n            )\n        );\n    }\n\n    public copyToClipboard(id: string, type?: string) {\n        const success = this._clipboard.copy(id);\n        if (success)\n            notifySuccess(\n                type\n                    ? 'Assigned user email copied to clipboard.'\n                    : 'Parking Bay ID copied to clipboard.'\n            );\n    }\n\n    public statusTooltip(status: string) {\n        switch (status) {\n            case 'assigned_free':\n                return 'Space is assigned to a user but available for use';\n            case 'assigned_busy':\n                return 'Space is assigned to a user and in use';\n            case 'reuse_busy':\n                return 'Space is assigned to a user and in use';\n            case 'busy':\n                return 'Space is unassigned and in use';\n            case 'free':\n                return 'Space is unassigned and available for use';\n        }\n        return 'Space is unassigned and available for use';\n    }\n\n    private _updateStatusList(spaces: ParkingSpace[], bookings: Booking[]) {\n        for (const space of spaces) {\n            const booking = bookings.find(\n                (_) =>\n                    _.asset_id === space.id &&\n                    _.status !== 'declined' &&\n                    _.status !== 'cancelled'\n            );\n            if (space.assigned_to && !booking) {\n                this.space_status[space.id] = 'assigned_free';\n            } else if (\n                space.assigned_to &&\n                booking &&\n                booking.user_email === space.assigned_to\n            ) {\n                this.space_status[space.id] = 'assigned_busy';\n            } else if (\n                space.assigned_to &&\n                booking &&\n                booking.user_email !== space.assigned_to\n            ) {\n                this.space_status[space.id] = 'reuse_busy';\n            } else if (!space.assigned_to && booking) {\n                this.space_status[space.id] = 'busy';\n            } else {\n                this.space_status[space.id] = 'free';\n            }\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'parking-topbar',\n    template: `\n        <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n            <h2 class=\"text-2xl font-medium\">\n                {{\n                    path !== 'events'\n                        ? 'Parking Management'\n                        : 'Parking Reservations'\n                }}\n            </h2>\n            <div class=\"flex-1 w-px\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(options | async)?.search\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <button\n                btn\n                matRipple\n                *ngIf=\"path === 'manage'\"\n                class=\"space-x-2 w-40\"\n                (click)=\"newParkingSpace()\"\n            >\n                <div class=\"pl-2\">New Space</div>\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                matRipple\n                *ngIf=\"path === 'users'\"\n                class=\"space-x-2 w-40\"\n                (click)=\"newParkingUser()\"\n            >\n                <div class=\"pl-2\">New User</div>\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                matRipple\n                *ngIf=\"path === 'events'\"\n                class=\"space-x-2 w-48\"\n                (click)=\"newReservation()\"\n            >\n                <div class=\"pl-2\">New Reservation</div>\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n        <div class=\"flex items-center bg-base-100 px-8 mb-2 h-14\">\n            <mat-form-field appearance=\"outline\" class=\"w-56 no-subscript\">\n                <mat-select\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                    multiple\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"text-xs opacity-30\" *ngIf=\"use_region\">\n                                {{ (level.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>{{ level.display_name || level.name }}</div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-0\"></div>\n            <date-options\n                *ngIf=\"path === 'events' || path === 'map'\"\n                (dateChange)=\"setDate($event)\"\n            ></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class ParkingTopbarComponent extends AsyncHandler implements OnInit {\n    public path = '';\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n    /** Options set for week view */\n    public readonly options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setOptions({ date: d });\n    /** Set filter string */\n    public readonly setSearch = (str) =>\n        this._state.setOptions({ search: str });\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setOptions({ zones: z });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: ParkingStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._state.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) this._updatePath();\n            })\n        );\n        this._updatePath();\n    }\n\n    public newParkingSpace() {\n        this._state.editSpace();\n    }\n\n    public newParkingUser() {\n        this._state.editUser();\n    }\n\n    public newReservation() {\n        this._state.editReservation();\n    }\n\n    private _updatePath() {\n        this.timeout(\n            'update_path',\n            () => {\n                const parts = this._router.url?.split('/') || [''];\n                this.path = parts[parts.length - 1].split('?')[0];\n            },\n            50\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-parking',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden bg-base-100\">\n            <parking-topbar></parking-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'spaces']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'spaces'\"\n                    >\n                        Manage Spaces\n                    </a>\n                    <!-- <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Make Booking\n                    </a> -->\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-4\">\n                <router-outlet></router-outlet>\n            </div>\n            <div\n                *ngIf=\"!(levels | async)?.length\"\n                class=\"absolute inset-0 flex flex-col items-center justify-center z-50\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-50 z-0\"></div>\n                <p>No parking floors for the currently selected building</p>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class ParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-new-parking',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full relative\">\n                <parking-topbar></parking-topbar>\n                <div class=\"px-8 pb-2\" *ngIf=\"path !== 'events'\">\n                    <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n                        <a\n                            mat-tab-link\n                            [routerLink]=\"['/book', 'parking', 'new', 'manage']\"\n                            [active]=\"path === 'manage'\"\n                        >\n                            Spaces\n                        </a>\n                        <a\n                            mat-tab-link\n                            [routerLink]=\"[\n                                '/book',\n                                'parking',\n                                'new',\n                                'manage',\n                                'users'\n                            ]\"\n                            [active]=\"path === 'users'\"\n                        >\n                            Users\n                        </a>\n                        <a\n                            mat-tab-link\n                            [routerLink]=\"[\n                                '/book',\n                                'parking',\n                                'new',\n                                'manage',\n                                'map'\n                            ]\"\n                            [active]=\"path === 'map'\"\n                        >\n                            Map\n                        </a>\n                    </nav>\n                    <mat-tab-nav-panel #tabPanel></mat-tab-nav-panel>\n                </div>\n                <div class=\"relative flex-1 h-1/2 w-full overflow-auto px-8\">\n                    <div class=\"w-full h-full overflow-auto\">\n                        <router-outlet></router-outlet>\n                    </div>\n                </div>\n                <div\n                    *ngIf=\"!(levels | async)?.length\"\n                    class=\"absolute inset-0 flex flex-col items-center justify-center z-50\"\n                >\n                    <div\n                        class=\"absolute inset-0 bg-base-100 opacity-80 z-0\"\n                    ></div>\n                    <p class=\"z-10 opacity-60\">\n                        No parking floors for the currently selected building\n                    </p>\n                </div>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class NewParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) this._updatePath();\n            })\n        );\n        this._updatePath();\n    }\n\n    private _updatePath() {\n        this.timeout(\n            'update_path',\n            () => {\n                const parts = this._router.url?.split('/') || [''];\n                this.path = parts[parts.length - 1].split('?')[0];\n            },\n            50\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'parking-users-list',\n    template: `\n        <mat-progress-bar\n            [class.opacity-0]=\"!(loading | async)?.includes('users')\"\n            class=\"w-full\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[68rem] block text-sm\"\n            [data]=\"user_list\"\n            [columns]=\"[\n                { key: 'name', name: 'User', content: name_template },\n                { key: 'car_color', name: 'Car Colour' },\n                {\n                    key: 'plate_number',\n                    name: 'Plate Number',\n                    content: plate_template\n                },\n                { key: 'phone', name: 'Phone' },\n                { key: 'notes', name: 'Notes' },\n                {\n                    key: 'deny',\n                    name: 'Deny',\n                    size: '4.5rem',\n                    content: denied_template\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    sortable: false,\n                    size: '6.5rem'\n                }\n            ]\"\n            [filter]=\"(options | async)?.search\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <button\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(row.id)\"\n            >\n                <div class=\"\">{{ data }}</div>\n                <div class=\"text-[0.625rem] opacity-30 font-mono\">\n                    {{ row.email }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #denied_template let-data=\"data\">\n            <div\n                *ngIf=\"data\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-error text-error-content mx-auto\"\n            >\n                <app-icon>close</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #plate_template let-data=\"data\">\n            <div class=\"p-4 font-mono text-sm\">\n                {{ data }}\n                <span *ngIf=\"!data\" class=\"opacity-30\">N/A</span>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center space-x-2 mx-auto\">\n                <button\n                    icon\n                    matRipple\n                    (click)=\"editUser(row)\"\n                    matTooltip=\"Edit User\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    (click)=\"removeUser(row)\"\n                    class=\"text-error\"\n                    matTooltip=\"Remove User\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <div class=\"w-full h-20\"></div>\n    `,\n    styles: [``],\n})\nexport class ParkingUsersListComponent {\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly new_items = new BehaviorSubject<FormGroup[]>([]);\n    public readonly user_list = this._state.users;\n\n    public readonly editUser = (u?) => this._state.editUser(u);\n    public readonly removeUser = (u) => this._state.removeUser(u);\n\n    constructor(private _state: ParkingStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { ExploreParkingService, ExploreStateService } from '@placeos/explore';\nimport { ParkingStateService } from './parking-state.service';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'parking-map',\n    template: `\n        <div\n            class=\"relative w-full h-[calc(100%-1.5rem)] my-2 bg-base-200 rounded-xl shadow\"\n        >\n            <interactive-map\n                [src]=\"url | async\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [labels]=\"labels | async\"\n                [options]=\"{ controls: true }\"\n                [focus]=\"locate\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [``],\n    providers: [ExploreParkingService],\n})\nexport class ParkingMapComponent extends AsyncHandler {\n    public url = this._explore.map_url;\n    public styles = this._explore.map_styles;\n    public features = this._explore.map_features;\n    public actions = this._explore.map_actions;\n    public labels = this._explore.map_labels;\n\n    public locate = '';\n\n    constructor(\n        private _explore: ExploreStateService,\n        private _ex_parking: ExploreParkingService,\n        private _parking: ParkingStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'parking_level',\n            this._parking.options.subscribe((_) => {\n                const zone = _.zones[0] || this._org.levelsForBuilding()[0].id;\n                this._explore.setLevel(_.zones[0]);\n            })\n        );\n        this.subscription('parking_poll', this._ex_parking.startPolling());\n        this._ex_parking.on_book = (space) =>\n            this._parking.editReservation(undefined, { space });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { UIModule } from '../ui/ui.module';\n\nimport { ParkingBookingsListComponent } from './parking-bookings-list.component';\nimport { ParkingSpaceListComponent } from './parking-space-list.component';\nimport { ParkingSpaceModalComponent } from './parking-space-modal.component';\nimport { ParkingTopbarComponent } from './parking-topbar.component';\nimport { ParkingComponent } from './parking.component';\nimport { NewParkingComponent } from './new-parking.component';\nimport { ParkingUsersListComponent } from './parking-users-list.component';\nimport { ParkingUserModalComponent } from './parking-user-modal.component';\nimport { ParkingMapComponent } from './parking-map.component';\nimport { ParkingBookingModalComponent } from './parking-booking-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\n\nconst COMPONENTS = [\n    NewParkingComponent,\n    ParkingComponent,\n    ParkingBookingsListComponent,\n    ParkingBookingModalComponent,\n    ParkingSpaceListComponent,\n    ParkingUsersListComponent,\n    ParkingTopbarComponent,\n    ParkingSpaceModalComponent,\n    ParkingUserModalComponent,\n    ParkingMapComponent,\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'manage/users', component: ParkingUsersListComponent },\n            { path: 'manage/map', component: ParkingMapComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: ParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'users', component: ParkingUsersListComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FormFieldsModule,\n        MatTabsModule,\n        MatProgressBarModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppParkingModule {}\n"],"x_google_ignoreList":[]}