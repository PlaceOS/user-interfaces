{"version":3,"sources":["./src/app/desks/desk-map-view.component.ts","./src/app/desks/desks-state.service.ts","../workplace/src/app/bookings/desk-flow/desk-flow-confirm-modal.component.ts","./src/app/desks/desks.module.ts","./src/app/desks/desks-topbar.component.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","./src/app/desks/desks.component.ts","./src/app/desks/desk-details.component.ts","./src/app/desks/desk-list-modal.component.ts","../workplace/src/app/bookings/desk-flow/desk-flow-questions-modal.component.ts","../workplace/src/app/bookings/desk-flow/desk-flow-state.service.ts","./src/app/desks/desk-listings.component.ts"],"names":[],"mappings":"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QAHI,6OAGJ;;6FA2BK,oBAAoB;cAvDhC,uDAAS;eAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8BT;gBACD,MAAM,EAAE;oBACJ;;;;;;;;;;;;;;;;;;SAkBC;iBACJ;aACJ;;;;;;;;;;;;;;AC9DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4P;AAC/I;AAC5D;AACmC;AACf;AAClB;AAC0B;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACI;AACO;AACF;;AAEjD;AACA,yBAAyB,SAAS,sBAAsB;AACxD;AACA,sCAAsC,4DAAc;AACpD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,+DAAwB,CAAC,+DAAwB,GAAG;AAC5J,0BAA0B,+DAAwB,EAAE,oCAAoC,iJAAiJ,YAAY,mBAAmB,EAAE;AAC1Q;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,cAAc,OAAO,oDAAM,EAAE;AAC7B,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB,KAAK,gBAAgB,UAAU,OAAO,+DAAwB,EAAE,EAAE,EAAE,GAAG;AACvE,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA,wDAAwD,uDAAuD;AAC/G,qBAAqB,+DAAwB,EAAE,kIAAkI;AACjL,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,mGAAmG,gEAAyB;AACnI;AACA,aAAa,uDAAuD;AACpE,YAAY,wEAAiC,GAAG;AAChD;AACA,eAAe,OAAO,6DAAe,SAAS,gEAAU,yBAAyB,oBAAoB,IAAI;AACzG;AACA,iDAAiD,mEAA4B;AAC7E,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAuD;AAC5E;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,UAAU;AACf,kBAAkB,6DAAe;AACjC,mBAAmB,gEAAU,yBAAyB,oBAAoB;AAC1E,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iFAAkB,CAAC,4EAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,eAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,4BAA4B,kFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,gCAAgC,mFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mFAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AAC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","file":"desks-desks-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ExploreStateService } from '@user-interfaces/explore';\n\nimport { DesksStateService } from './desks-state.service';\nimport { DeskFlowStateService } from '../../../../workplace/src/app/bookings/desk-flow/desk-flow-state.service';\nimport { BaseClass } from '@user-interfaces/common';\n\n@Component({\n    selector: 'desk-map-view',\n    template: `\n        <div map class=\"h-full w-full relative\">\n            <i-map\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async).zoom\"\n                [center]=\"(positions | async).center\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n            <explore-zoom-controls\n                class=\"absolute bottom-0 right-0\"\n            ></explore-zoom-controls>\n            <div class=\"absolute top-0 left-0 p-2 text-black\">\n                <a-user-search-field [ngModel]=\"null\" (ngModelChange)=\"setHost($event)\" placeholder=\"User for bookings...\"></a-user-search-field>\n            </div>\n            <div\n                info\n                class=\"absolute bottom-0 rounded p-2 m-2 bg-white shadow text-center\"\n            >\n                Click/Tap an available desk to book it.\n            </div>\n            <ng-container *ngIf=\"loading | async\">\n                <div\n                    load-state\n                    class=\"absolute inset-0 flex flex-col justify-center items-center\"\n                >\n                    <mat-spinner [diameter]=\"48\"></mat-spinner>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [info] {\n                left: 50%;\n                transform: translateX(-50%);\n            }\n        `,\n    ],\n})\nexport class DeskMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the active map */\n    public readonly loading = this._flow.loading;\n    /** Observable for the active map */\n    public readonly options = this._flow.options;\n\n    public readonly setHost = (u) => this._flow.setHost(u)\n\n    constructor(\n        private _state: ExploreStateService,\n        private _desk: DesksStateService,\n        private _flow: DeskFlowStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'date',\n            this._desk.filters.subscribe((opts) =>\n                this._flow.setOptions({ date: opts.date, zones: opts.zones })\n            )\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, timer } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    first,\n    map,\n    share,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nimport { Booking, BookingsService } from '@user-interfaces/bookings';\nimport { BaseClass, notifyError, notifyInfo, notifySuccess } from '@user-interfaces/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Desk, OrganisationService } from '@user-interfaces/organisation';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmModalComponent } from '@user-interfaces/components';\nimport { DeskListModalComponent } from './desk-list-modal.component';\n\nexport interface DeskFilters {\n    date?: number;\n    zones?: string[];\n    show_map?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksStateService extends BaseClass {\n    private _filters = new BehaviorSubject<DeskFilters>({});\n    private _desk_bookings: Booking[] = [];\n    private _desks: Desk[] = []\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly desks: Observable<Desk[]> = combineLatest([this._filters]).pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        switchMap((details) => {\n            const [filters] = details;\n            if (!filters.zones?.length) return [];\n            return showMetadata(filters.zones[0] || this._org.building.id, {\n                name: 'desks',\n            }).pipe(map((m) => m.details));\n        }),\n        map(list => {\n            if (!(list instanceof Array)) list = [];\n            list.sort((a, b) => a.name.localeCompare(b.name));\n            this._desks = list.map(i => new Desk(i));\n            return list;\n        }),\n        share()\n    );\n\n    public readonly bookings = combineLatest([this._filters]).pipe(\n        debounceTime(500),\n        switchMap((details) => {\n            this._loading.next(true);\n            const [filters] = details;\n            const date = filters.date ? new Date(filters.date) : new Date();\n            return this._bookings.query({\n                period_start: Math.floor(startOfDay(date).valueOf() / 1000),\n                period_end: Math.floor(endOfDay(date).valueOf() / 1000),\n                type: 'desk',\n                zones: (filters.zones || []).join(','),\n            });\n        }),\n        map(list => {\n            list.sort((a, b) => a.date - b.date);\n            this._desk_bookings = list;\n            this._loading.next(false);\n            return list;\n        }),\n        shareReplay()\n    );\n\n    constructor(\n        private _bookings: BookingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public setFilters(filters: DeskFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval(\n            'poll',\n            () => this.setFilters(this._filters.getValue()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkinDesk(desk: Booking) {\n        const success = await this._bookings.checkIn(desk, true).catch(_ => 'failed');\n        success === 'failed'\n            ? notifyError('Error checking in desk booking')\n            : notifySuccess(`Checked in ${desk.user_name}.`)\n    }\n\n    public async approveDesk(desk: Booking) {\n        const success = await this._bookings.approve(desk.id).catch(_ => 'failed');\n        success === 'failed'\n            ? notifyError('Error approving in desk booking')\n            : notifySuccess(`Approved desk booking for ${desk.user_name}.`)\n    }\n\n    public async rejectDesk(desk: Booking) {\n        const success = await this._bookings.reject(desk.id).catch(_ => 'failed');\n        success === 'failed'\n            ? notifyError('Error rejecting in desk booking')\n            : notifySuccess(`Rejected desk booking for ${desk.user_name}.`)\n    }\n\n    public async rejectAllDesks() {\n        const list = this._desk_bookings || [];\n        if (list.length > 0) {\n            const ref = this._dialog.open(ConfirmModalComponent, {\n                data: {\n                    title: 'Cancel all desk bookings',\n                    content: 'Are you sure you want to cancel all bookings for the selected date?',\n                    icon: {\n                        type: 'icon',\n                        class: 'material-icons',\n                        content: 'delete',\n                    },\n                },\n            });\n            return new Promise(async (resolve, reject) => {\n                let success = false;\n                ref.componentInstance.event.pipe(first(_ => _.reason === 'done')).subscribe(async() => {\n                    ref.componentInstance.loading = 'Rejecting all desks for selected date...';\n                    success = true;\n                    await Promise.all(list.map(desk => this._bookings.reject(desk.id)));\n                    resolve();\n                    notifySuccess('Successfull rejected all desk bookings for selected date.');\n                    ref.close();\n                });\n                await ref.afterClosed().toPromise();\n                if (!success) {\n                    reject();\n                }\n            });\n        } else {\n            notifyInfo('No desks to reject for the selected date');\n        }\n    }\n\n    public async updateDesks() {\n        const ref = this._dialog.open(DeskListModalComponent, {\n            data: {\n                level: this._org.levelWithID(this._filters.getValue().zones) || this._org.level_list[0],\n                building: this._org.building,\n                desks: this._desks\n            },\n        });\n        await ref.afterClosed().toPromise();\n        this._desks = ref.componentInstance.desks$.getValue();\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent } from '@user-interfaces/common';\nimport { BuildingLevel, Desk } from '@user-interfaces/organisation';\n\nexport interface DeskFlowConfirmModalData {\n    desk: Desk;\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <app-icon className=\"material-icons\">close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div class=\"mb-4\">\n                    <label>Date</label>\n                    <div>{{ date | date: 'mediumDate' }}</div>\n                </div>\n                <div class=\"mb-4\">\n                    <label>Reason</label>\n                    <div>{{ reason || '~No set reason~' }}</div>\n                </div>\n                <p>\n                    Your desk will be {{ desk?.name }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button mat-button (click)=\"confirm()\">Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskFlowConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desk = this._data.desk;\n\n    public readonly date = this._data.date;\n\n    public readonly reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskFlowConfirmModalData\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { DesksComponent } from './desks.component';\nimport { DeskListingsComponent } from './desk-listings.component';\nimport { DeskDetailsComponent } from './desk-details.component';\nimport { DesksTopbarComponent } from './desks-topbar.component';\nimport { DeskListModalComponent } from './desk-list-modal.component';\nimport { DeskMapViewComponent } from './desk-map-view.component';\nimport { SharedExploreModule } from '@user-interfaces/explore';\nimport { DeskFlowConfirmModalComponent } from 'apps/workplace/src/app/bookings/desk-flow/desk-flow-confirm-modal.component';\nimport { DeskFlowQuestionsModalComponent } from 'apps/workplace/src/app/bookings/desk-flow/desk-flow-questions-modal.component';\n\nconst ROUTES: Route[] = [{ path: '', component: DesksComponent }];\n\n@NgModule({\n    declarations: [\n        DesksComponent,\n        DeskListingsComponent,\n        DeskDetailsComponent,\n        DesksTopbarComponent,\n        DeskListModalComponent,\n        DeskMapViewComponent,\n        DeskFlowConfirmModalComponent,\n        DeskFlowQuestionsModalComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        MatRadioModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DesksModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: 'desks-topbar',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                [ngModel]=\"zones[0]\"\n                (ngModelChange)=\"updateZones([$event]); zones = [$event]\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <a\n            button\n            mat-button\n            [routerLink]=\"['/desks']\"\n            [queryParams]=\"{ show_map: !(filters | async)?.show_map }\"\n            queryParamsHandling=\"merge\"\n            (click)=\"toggleMapShow()\"\n        >\n            {{\n                (filters | async)?.show_map ? 'Show List View' : 'Show Map View'\n            }}\n        </a>\n        <div class=\"flex-1 w-2\"></div>\n        <!-- <searchbar class=\"mr-2\"></searchbar> -->\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: 0.5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class DesksTopbarComponent extends BaseClass implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly filters = this._desks.filters;\n    /** Set filtered date */\n    public readonly toggleMapShow = () => {\n        this._desks.setFilters({ show_map: !this.show_map });\n        this.show_map = !this.show_map;\n    };\n    /** Set filtered date */\n    public readonly setDate = (date) => this._desks.setFilters({ date });\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge'\n        });\n        this._desks.setFilters({ zones });\n    };\n\n    public show_map: boolean;\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n                this.show_map =\n                    params.has('show_map') && params.get('show_map') === 'true';\n                this._desks.setFilters({ show_map: this.show_map });\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n    }\n}\n","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return ɵMatRadioGroup_BaseFactory(t || MatRadioGroup); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\nconst ɵMatRadioGroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined },\n    { type: String }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }, { type: String }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", -1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelement(3, \"span\", 3);\n        ɵngcc0.ɵɵelement(4, \"span\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"span\", 7);\n        ɵngcc0.ɵɵelement(8, \"span\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"span\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map","import { Component } from '@angular/core';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: 'app-desks',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex-1 flex flex-col\">\n            <desks-topbar class=\"w-full\"></desks-topbar>\n            <desk-listings class=\"w-full flex-1 h-0\"></desk-listings>\n            <mat-progress-bar class=\"w-full\" *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DesksComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: DesksStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { Booking } from '@user-interfaces/bookings';\nimport { DesksStateService } from './desks-state.service';\n\nexport interface DeskBooking extends Booking {\n    los: string;\n}\n\n@Component({\n    selector: 'desk-details',\n    template: `\n        <div class=\"w-32 p-2 bg\">{{ desk?.user_name }}</div>\n        <div class=\"w-32 p-2\">{{ desk?.los }}</div>\n        <div class=\"w-24 p-2\">{{ desk.date | date: 'shortTime' }}</div>\n        <div flex class=\"p-2 flex-1 truncate\">{{ desk?.description }}</div>\n        <div [class]=\"'w-24 p-2 capitalize text-red-600 ' + desk?.status\">\n            {{ desk?.status }}\n        </div>\n        <div class=\"w-32 p-2\">{{ desk?.approver_name }}</div>\n        <div class=\"w-32 p-2\">{{ desk?.checked_in ? 'Yes' : 'No' }}</div>\n        <div class=\"w-32 p-2 flex items-center\">\n            <action-icon\n                mat-icon-button\n                className=\"material-icons\"\n                (click)=\"checkin()\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"desk?.checked_in ? 'success' : ''\"\n                content=\"how_to_reg\"\n            ></action-icon>\n            <action-icon\n                mat-icon-button\n                className=\"material-icons\"\n                (click)=\"approve()\"\n                [loading]=\"loading === 'approve'\"\n                [state]=\"desk?.approved ? 'success' : ''\"\n                content=\"event_available\"\n            ></action-icon>\n            <action-icon\n                mat-icon-button\n                className=\"material-icons\"\n                (click)=\"reject()\"\n                [loading]=\"loading === 'reject'\"\n                [state]=\"desk?.status === 'declined' ? 'success' : ''\"\n                content=\"event_busy\"\n            ></action-icon>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                display: flex;\n                align-items: center;\n                padding: 0 0.5rem;\n                background-color: #f8f8f8;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host:hover {\n                background-color: #f0f0f0;\n            }\n\n            .tentative {\n                color: #ffa000;\n            }\n\n            .approved {\n                color: #388e3c;\n            }\n        `,\n    ],\n})\nexport class DeskDetailsComponent {\n    @Input() public desk: DeskBooking;\n\n    public loading: string;\n\n    public readonly checkin = () =>\n        this.runMethod('checkin', async () =>\n            this._state.checkinDesk(this.desk)\n        );\n    public readonly approve = () =>\n        this.runMethod('approve', async () =>\n            this._state.approveDesk(this.desk)\n        );\n    public readonly reject = () =>\n        this.runMethod('reject', async () =>\n            this._state.rejectDesk(this.desk)\n        );\n\n    constructor(private _state: DesksStateService) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { updateMetadata } from '@placeos/ts-client';\nimport {\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n} from '@user-interfaces/common';\nimport { Building, BuildingLevel, Desk } from '@user-interfaces/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface DeskListModalData {\n    building: Building;\n    level: BuildingLevel;\n    desks: Desk[];\n}\n\n@Component({\n    selector: 'desk-list-modal',\n    template: `\n        <header class=\"flex items-center\">\n            <h2 style=\"margin-right: 1rem;\">\n                <strong>List of Desks</strong> -\n                {{ building.display_name || building.name }},\n                {{ level.display_name || level.name }}\n            </h2>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon className=\"material-icons\">close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"flex flex-col\">\n                <div\n                    class=\"flex items-center p-2 space-x-2 w-full border-b border-gray-300\"\n                >\n                    <searchbar [model]=\"filter$ | async\" (modelChange)=\"filter$.next($event)\"></searchbar>\n                    <div class=\"flex-1 w-0\"></div>\n                    <button mat-button class=\"relative\">\n                        Upload List\n                        <input\n                            type=\"file\"\n                            class=\"absolute inset-0 opacity-0\"\n                            (change)=\"upload($event)\"\n                        />\n                    </button>\n                    <button mat-button (click)=\"download()\">\n                        Download List\n                    </button>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full\">\n                    <div\n                        class=\"flex items-center p-2 border-b border-gray-300 font-medium\"\n                    >\n                        <div class=\"w-40 p-1 flex-1\" flex>ID</div>\n                        <div class=\"w-32 p-1\">Name</div>\n                        <div class=\"w-32 p-1\">Safe</div>\n                        <div class=\"w-32 p-1\">LoS</div>\n                    </div>\n                    <div table class=\"flex-1 overflow-auto\">\n                        <div\n                            class=\"flex item-center p-2 border-b border-gray-200\"\n                            *ngFor=\"let desk of desk_list | async\"\n                        >\n                            <div class=\"w-40 p-1 flex-1\" flex>\n                                {{ desk.id }}\n                            </div>\n                            <div class=\"w-32 p-1\">{{ desk.name }}</div>\n                            <div class=\"w-32 p-1\">\n                                <mat-checkbox\n                                    [(ngModel)]=\"desk.bookable\"\n                                ></mat-checkbox>\n                            </div>\n                            <div class=\"w-32\">\n                                <input\n                                    class=\"border-none bg-none w-full p-1\"\n                                    [(ngModel)]=\"desk.group\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n            <footer\n                class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-300\"\n            >\n                <button mat-button class=\"w-32\" (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 mx-auto flex flex-col items-center justify-center\"\n            >\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                max-height: 65vh;\n            }\n\n            [table] {\n                height: 1px;\n                max-height: 50vh;\n            }\n        `,\n    ],\n})\nexport class DeskListModalComponent {\n    public readonly building = this._data.building;\n    public readonly level = this._data.level;\n    public readonly desks$ = new BehaviorSubject(this._data.desks);\n    public readonly filter$ = new BehaviorSubject('');\n\n    public loading: string;\n\n    public desk_list = combineLatest([this.filter$, this.desks$]).pipe(\n        map((details) => {\n            const [filter, desks] = details;\n            return desks.filter(\n                (desk) =>\n                    desk.name.toLowerCase().includes(filter.toLowerCase()) ||\n                    desk.id.toLowerCase().includes(filter.toLowerCase())\n            );\n        })\n    );\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: DeskListModalData, private _dialog_ref: MatDialogRef<DeskListModalComponent>) {}\n\n    /** Download Desks list */\n    public download() {\n        const data = this.desks$.getValue().map((i) => i.format());\n        const csv = jsonToCsv(data);\n        const name = this.level.display_name.split(' ').join('-').toLowerCase();\n        downloadFile(`desks_${name}.csv`, csv);\n    }\n\n    /** Upload Desks list from csv */\n    public upload(event) {\n        if (event.target) {\n            const file = event.target.files[0];\n            if (file) {\n                this.loading = 'Uploading...';\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.onload = () => {\n                    this.processCSV(reader.result as string);\n                    this.loading = '';\n                };\n                reader.onerror = (evt) => {\n                    this.loading = '';\n                    notifyError('Error reading file.');\n                };\n            }\n        }\n    }\n\n    public async save() {\n        this.loading = 'Saving changes to desks...';\n        await updateMetadata(this.level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: this.desks$.getValue(),\n        }).toPromise().catch(e => {\n            this.loading = '';\n            notifyError(`Error saving desk data. Error: ${e.message || e}`);\n            throw e;\n        });\n        notifySuccess(\n            'Successfully updated desks'\n        );\n        this.loading = '';\n        this._dialog_ref.close();\n    }\n\n    /** Process csv */\n    private processCSV(csv: string) {\n        const data = csvToJson(csv);\n        this.desks$.next(data.map((i) => new Desk(i)));\n        notifySuccess(\n            'Upload was sucessful. Click Save Button to save the changes'\n        );\n    }\n\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@user-interfaces/common';\n\n@Component({\n    selector: 'desk-flow-question',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\">COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Have you travelled overseas within the last 14 days?\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>\n                        Have you had contact with anyone with suspected\n                        COVID-19?\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button mat-button (click)=\"submit()\">Submit</button>\n            </footer>\n            <button close mat-icon-button mat-dialog-close>\n                <app-icon className=\"material-icons\">close</app-icon>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main class=\"pt-8 relative\">\n                <p class=\"p-4\">\n                    Your request to work from the office has been rejected based on\n                    your response to the compulsory Covid-19 questions. Please feel\n                    free to submit a new request when circumstances change in a way\n                    that changes your answer to the questions.\n                </p>\n                <button close mat-icon-button mat-dialog-close>\n                    <app-icon className=\"material-icons\">close</app-icon>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskFlowQuestionsModalComponent implements OnInit {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form: FormGroup;\n    public failure: boolean;\n\n    public ngOnInit() {\n        this.form = new FormGroup({\n            travelled: new FormControl('', [Validators.required]),\n            unwell: new FormControl('', [Validators.required]),\n            contact: new FormControl('', [Validators.required]),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            notifyError('All the questions must be answered');\n            return;\n        } else if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { showMetadata, listChildMetadata } from '@placeos/ts-client';\nimport { Booking, BookingsService } from '@user-interfaces/bookings';\nimport {\n    BaseClass,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@user-interfaces/common';\nimport { DEFAULT_COLOURS, ExploreStateService } from '@user-interfaces/explore';\nimport { Desk, OrganisationService } from '@user-interfaces/organisation';\nimport { StaffService, User } from '@user-interfaces/users';\nimport { endOfDay, startOfDay } from 'date-fns';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BehaviorSubject, combineLatest, timer } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { DeskFlowConfirmModalComponent } from './desk-flow-confirm-modal.component';\nimport { DeskFlowQuestionsModalComponent } from './desk-flow-questions-modal.component';\n\nexport interface DeskFlowState {\n    date?: number;\n    zones?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DeskFlowStateService extends BaseClass {\n    private _options = new BehaviorSubject<DeskFlowState>({\n        date: new Date().valueOf(),\n        zones: [],\n    });\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    private _host: User;\n\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly desk_list = this._options.pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        switchMap((opts) => {\n            const { zones } = opts;\n            if (zones.length) {\n                const level = this._org.levelWithID(zones);\n                if (level) {\n                    return showMetadata(level.id, { name: 'desks' }).pipe(\n                        map((m) =>\n                            m.details.map(\n                                (i) => new Desk({ ...i, zone: level })\n                            )\n                        )\n                    );\n                }\n                return listChildMetadata(zones[0], { name: 'desks' }).pipe(\n                    map((d) =>\n                        d.reduce(\n                            (l, m) =>\n                                l.concat(\n                                    m.metadata.desks.details instanceof Array\n                                        ? m.metadata.desks.details.map(\n                                              (i) =>\n                                                  new Desk({\n                                                      ...i,\n                                                      zone: m.zone,\n                                                  })\n                                          )\n                                        : []\n                                ),\n                            []\n                        )\n                    )\n                );\n            }\n            return Promise.resolve([]);\n        }),\n        shareReplay()\n    );\n\n    public readonly desk_availability = combineLatest([\n        this._options,\n        this.desk_list,\n    ]).pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        switchMap(async (details) => {\n            this._loading.next(true);\n            const [options, desks] = details;\n            const date = startOfDay(\n                options.date ? new Date(options.date) : new Date()\n            );\n            return [\n                desks,\n                await this._bookings\n                    .query({\n                        period_start: Math.floor(date.valueOf() / 1000),\n                        period_end: Math.floor(endOfDay(date).valueOf() / 1000),\n                        type: 'desk',\n                        zones: (options.zones || [])[0],\n                    })\n                    .catch((_) => []),\n            ];\n        }),\n        map((details) => {\n            const [desks, bookings] = details;\n            const active_bookings = bookings.filter(\n                (bkn) => bkn.status !== 'declined'\n            );\n            const user_groups = this._staff.current.groups;\n            const bookable_desks = desks.filter(\n                (i) =>\n                    i.bookable &&\n                    (!i.group ||\n                        user_groups.includes((i.group || '').toLowerCase()))\n            );\n            this.processDeskBookings(details);\n            this._loading.next(false);\n            return bookable_desks.filter(\n                (desk) =>\n                    !active_bookings.find((bkn) => bkn.asset_id === desk.id)\n            );\n        }),\n        shareReplay()\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _bookings: BookingsService,\n        private _staff: StaffService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._state.level.subscribe((lvl) =>\n                lvl ? this.setOptions({ zones: [lvl.id] }) : ''\n            )\n        );\n        this.subscription(\n            'availability',\n            combineLatest([this.desk_availability, this.desk_list])\n                .pipe(debounceTime(500))\n                .subscribe((details) => this.handleDeskAvailability(details))\n        );\n    }\n\n    public startPolling(delay: number = 5000) {\n        this.interval(\n            'poll',\n            () => this._options.next({ ...this._options.getValue() }),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(state: DeskFlowState) {\n        this._options.next({ ...this._options.getValue(), ...state });\n    }\n\n    public setHost(host: User) {\n        this._host = host;\n    }\n\n    public async bookDesk(desk: Desk, reason: string = '') {\n        if (!this._host) {\n            return notifyError('A host needs to be set before booking a desk.');\n        }\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskFlowQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        const options = this._options.getValue();\n        ref = this._dialog.open(DeskFlowConfirmModalComponent, {\n            data: {\n                desk,\n                date: options.date || new Date().valueOf(),\n                reason,\n                level,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.componentInstance.loading = 'Checking for existing desk bookings...';\n        const desks = await this._bookings.query({\n            type: 'desk',\n            period_start: Math.floor(startOfDay(options.date || new Date()).valueOf() / 1000),\n            period_end: Math.floor(endOfDay(options.date || new Date()).valueOf() / 1000),\n        });\n        if (!desks?.length) return notifyError('You currently already have a desk booked for the selected date.');\n        ref.componentInstance.loading = 'Booking desk...';\n        await this.makeDeskBooking(\n            desk,\n            options.date || new Date().valueOf(),\n            reason\n        );\n        notifySuccess('Successfully booked desk');\n        ref.close();\n    }\n\n    private async makeDeskBooking(desk: Desk, date: number, reason: string) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const options = this._options.getValue();\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id || options.zones[0]]\n            : [level?.parent_id || options.zones[0]];\n        const booking_data = {\n            booking_start: Math.floor(\n                startOfDay(options.date).valueOf() / 1000\n            ),\n            user_id: this._host.id,\n            user_name: this._host.name,\n            user_email: this._host.email,\n            booking_end: Math.floor(endOfDay(options.date).valueOf() / 1000),\n            asset_id: desk.id,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                group: desk.group,\n            },\n        };\n        return this._bookings.save(booking_data);\n    }\n\n    private handleDeskAvailability(details: [Desk[], Desk[]]) {\n        const [available, desks] = details;\n        const style_map = {};\n        const actions = [];\n        const user_groups = this._staff.current.groups as any[];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk of desks) {\n            const status =\n                !desk.bookable ||\n                (desk.group &&\n                    user_groups.includes((desk.group || '').toLowerCase()))\n                    ? 'not-bookable'\n                    : available.find((d) => d.id === desk.id)\n                    ? 'free'\n                    : 'busy';\n            style_map[`#${desk.id}`] = {\n                fill:\n                    colours[`desk-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (status === 'free') {\n                actions.push({\n                    id: desk.id,\n                    action: 'click',\n                    zone: false,\n                    callback: () => this.bookDesk(desk),\n                });\n                actions.push({\n                    id: desk.id,\n                    action: 'touchend',\n                    zone: false,\n                    callback: () => this.bookDesk(desk),\n                });\n            }\n        }\n        console.log('Styles:', style_map, available, desks);\n        this._state.setStyles('desks', style_map);\n        this._state.setActions('desks', actions);\n    }\n\n    private processDeskBookings(details) {\n        const [desks, bookings] = details;\n        const list = [];\n        for (const desk of desks) {\n            const booking: Booking = bookings.find(\n                (bkn) => bkn.asset_id === desk.id\n            );\n            list.push({\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                hover: true,\n                data: {\n                    map_id: desk.name,\n                    user: booking?.user_name,\n                    start: booking?.date,\n                    end: booking?.date + booking?.duration * 60 * 1000,\n                    status: booking ? 'busy' : 'free',\n                },\n            });\n        }\n        this._state.setFeatures('desks', list);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: 'desk-listings',\n    template: `\n        <ng-container *ngIf=\"!(filters | async)?.show_map; else map_state\">\n            <div\n                details\n                class=\"w-full bg-gray-900 text-white flex items-center px-2\"\n            >\n                <div class=\"flex-1 w-0\"></div>\n                <div class=\"p-2\">\n                    Requests: {{ (bookings | async)?.length || '0' }}\n                </div>\n                <div class=\"px-8\">\n                    Free Desks:\n                    {{\n                        ((desks | async)?.length || 0) -\n                            ((bookings | async)?.length || 0)\n                    }}\n                </div>\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                    <app-icon className=\"material-icons\">more_vert</app-icon>\n                </button>\n            </div>\n            <div class=\"w-full flex-1 text-sm\">\n                <div\n                    class=\"w-full flex items-center bg-white border-b border-gray-500 p-2 font-medium\"\n                >\n                    <div class=\"w-32 p-2\">Person</div>\n                    <div class=\"w-32 p-2\">LoS</div>\n                    <div class=\"w-24 p-2\">Date</div>\n                    <div flex class=\"p-2 flex-1\">Desk</div>\n                    <div class=\"w-24 p-2\">Status</div>\n                    <div class=\"w-32 p-2\">Approver</div>\n                    <div class=\"w-32 p-2\">Checked In</div>\n                    <div class=\"w-32 p-2\"></div>\n                </div>\n                <div class=\"w-full flex-1 overflow-auto\">\n                    <ng-container\n                        *ngIf=\"(bookings | async)?.length; else empty_state\"\n                    >\n                        <desk-details\n                            *ngFor=\"let desk of bookings | async\"\n                            [desk]=\"desk\"\n                        ></desk-details>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no desks for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateDesks()\">\n                <div class=\"flex items-center\">\n                    <app-icon className=\"material-icons\">edit</app-icon>\n                    <span class=\"pl-2\">Edit Desks</span>\n                </div>\n            </button>\n            <button mat-menu-item (click)=\"rejectAll()\">\n                <div class=\"flex items-center\">\n                    <app-icon className=\"material-icons\">event_busy</app-icon>\n                    <span class=\"pl-2\">Reject All</span>\n                </div>\n            </button>\n        </mat-menu>\n        <ng-template #map_state>\n            <div  class=\"absolute inset-0\"><desk-map-view></desk-map-view></div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                overflow: hidden;\n            }\n\n            [details] {\n                height: 3.5rem;\n            }\n\n            [flex] {\n                min-width: 8rem;\n            }\n        `,\n    ],\n})\nexport class DeskListingsComponent {\n    public readonly filters = this._state.filters;\n\n    public readonly desks = this._state.desks;\n\n    public readonly bookings = this._state.bookings;\n\n    public readonly rejectAll = () => this._state.rejectAllDesks();\n    public readonly updateDesks = () => this._state.updateDesks();\n\n    constructor(private _state: DesksStateService) {}\n}\n"],"sourceRoot":"webpack:///"}