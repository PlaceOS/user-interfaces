{"version":3,"file":"apps_visitor-kiosk_src_app_explore_explore_module_ts.js","mappings":"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","names":["i0","bld_r3","display_name","name","$event","_r5","ctx_r4","setBuilding","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","ctx_r0","building","buildings","lvl_r7","_r9","ctx_r8","setLevel","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","tmp_0_0","ctx_r1","length","level","levels","ExploreMapControlComponent","AsyncHandler","constructor","_org","_state","_router","_route","super","this","active_buildings","active_building","active_levels","lvl","setFeatures","timeout","navigate","relativeTo","queryParams","zone","id","bld","ngOnInit","_this","_asyncToGenerator","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","get","t","i1","i2","i3","core","Xpm","selectors","features","decls","vars","consts","i18n_0","$localize","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","ctx","tmp_1_0","temp","humidity","ExploreSensorInfoComponent","_details","MAP_FEATURE_DATA","template","rf","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","ExploreZonesService","_settings","_statuses","_location","_capacity","_draw","_points","_features","_bind","map","system_id","binding","getModule","listen","d","parseData","bind","init","zone_metadata","Promise","all","showMetadata","areas","details","area","capacity","hide_label","label_location","draw_polygon","properties","coordinates","geometry","getCenterPoint","updateStatus","data","value","labels","filled","count","area_id","content","temperature","people_count","people_count_sum","queue_size","counter","push","location","z_index","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","track_id","MapPolygonComponent","color","points","fill","opacity","setStyles","Yz7","factory","ɵfac","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","resource","map_id","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","_r4","ctx_r3","form","patchValue","date","host","book_until","_c0","use_24hr_time","tmp_7_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","ctx_r2","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_1","ExploreDeviceInfoComponent_ng_template_5_Template","_r1","ExploreDesksService","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_users","_departments","_checked_in","booking_rules","filter","switchMap","catchError","of","Array","shareReplay","desk_list","debounceTime","i","j","Desk","e","tap","processBindingChange","_booking_list","combineLatest","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","zones","bookings","next","asset_id","checked_in","_state_change","_ref","desks","in_use","presence","signs","restrictions","take","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","rulesForResource","currentUser","parent_id","hidden","processDesks","_x","apply","arguments","_this2","setOptions","enable_booking","options","getValue","devices","v","at_location","signs_of_life","departments","desk","staff_name","department","processDevices","desk_id","list","device","map_width","map_height","coordinates_from","_this3","actions","ExploreDeskInfoComponent","full_size","no_scale","status","book_fn","_ref2","notifyError","groups","find","newForm","all_day","_setBookingTime","custom","user_email","email","resources","asset_name","description","booking_type","confirmPost","console","log","message","error","notifySuccess","action","priority","callback","setActions","_this4","addDays","open","afterClosed","i4","i5","ExploreParkingService","_poll","asObservable","l","tags","events","startOfMinute","endOfMinute","existing_event","week_events","spaces","forkJoin","s","flatten","active_spaces","available_spaces","week_availablility","availability","day","day_events","isSameDay","available","_updateParkingSpaces","interval","styles","space","can_book","zoom_level","active_level","ExploreLockersService","_lockers","_explore","_status","lockers$","filtered_lockers$","sys_id","locker_status","lockers_banks$","locker_banks","lockers","map_status","banks","unique","level_id","bank","bank_lockers","bank_id","in_use_count","locker","locker_id","allocated","bank_info","ExploreLockerBankInfoComponent","locker_count","in_use_percent","providedIn","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","_r6","updateZoom","updateCenter","url","tmp_2_0","toggleZones","disable","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","legend","ExploreMapViewComponent","enabled","show_legend","_s","_desks","_zones","_parking","_spaces","_space_pipe","_maps","map_url","map_styles","map_positions","map_features","map_actions","map_labels","o","use_mapsindoors$","is_initialised$","locateSpace","showStaff","locateUser","_locateFeature","has_coordinates","parts","split","feature","parseFloat","MapPinComponent","transform","levelWithID","locate_details","module","locations","MapLocation","sort","a","b","indexOf","pos","MapRadiusComponent","radius","i6","i7","i8","i9","i10","i11","i12","ExploreSpacesService","SpacePipe","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","item_r2","dark","item_r3","icon","FooterLegendComponent","icon_list","src","show","FooterLegendComponent_div_9_Template","FooterLegendComponent_div_11_Template","ExploreComponent","reset_delay","onMouse","resetKiosk","onTouch","title","localStorage","getItem","emergency_phone","phone_numbers","emergency","document","activeElement","blur","closeAll","post","hostBindings","ROUTES","path","component","AppExploreModule","RouterModule","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/visitor-kiosk/src/app/explore/footer-legend.component.ts","./apps/visitor-kiosk/src/app/explore/explore.component.ts","./apps/visitor-kiosk/src/app/explore/explore.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => !events.find((e) => e.asset_id === _.id))\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n            [custom_coordinates]=\"{\n                latitude: 30.3603774 ,\n                longitude:  -97.7426772,\n            }\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.is_initialised$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@placeos/common';\n\n@Component({\n    selector: 'a-footer-legend',\n    template: `\n        <div class=\"relative bg-white shadow w-full\">\n            <div\n                class=\"absolute top-0 left-1/2 transform -translate-y-full -translate-x-1/2 px-2 pt-2 overflow-hidden\"\n            >\n                <button\n                    matRipple\n                    class=\"flex items-center justify-center bg-white shadow rounded-t w-32 h-8 border-none text-black\"\n                    (click)=\"show = !show\"\n                >\n                    <app-icon>keyboard_arrow_up</app-icon>\n                </button>\n            </div>\n            <div class=\"flex items-center px-2 py-1 text-xl\">\n                <div class=\"flex-1\">Keys</div>\n            </div>\n            <div\n                class=\"flex items-center justify-center p-2 border border-gray-100 space-x-2\"\n            >\n                <div\n                    class=\"colour px-4 py-2 rounded shadow flex-1 text-center\"\n                    *ngFor=\"let item of colours\"\n                    [class.dark]=\"item.dark\"\n                    [style.background-color]=\"item.colour\"\n                >\n                    {{ item.name }}\n                </div>\n            </div>\n            <div\n                icon-legend\n                class=\"flex justify-center flex-wrap h-0 w-full border border-gray-100 overflow-auto max-h-[25vh]\"\n                [class.show]=\"show\"\n            >\n                <div\n                    class=\"flex flex-col items-center justify-center h-[12.4vw] w-[12.4vw] text-[2vw] border border-gray-100 flex-grow\"\n                    *ngFor=\"let item of icon_list\"\n                >\n                    <app-icon class=\"text-[3em]\" [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text-[0.625em] font-normal\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                z-index: 10;\n                font-size: 1.25em;\n            }\n\n            .colour.dark {\n                color: #fff;\n            }\n\n            [icon-legend] {\n                transition: height 200ms;\n            }\n\n            [icon-legend].show {\n                height: 37.5vw !important;\n            }\n        `,\n    ],\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        {\n            id: 'not-bookable',\n            name: 'Not Bookable',\n            colour: '#7D7D7D',\n            dark: true,\n        },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' },\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        {\n            id: '',\n            name: 'Lifts Up/Down',\n            icon: { type: 'img', src: 'assets/img/lift.svg' },\n        },\n        {\n            id: '',\n            name: 'Fire Extinguisher',\n            icon: { type: 'img', src: 'assets/img/fireExt.svg' },\n        },\n        {\n            id: '',\n            name: 'First Aid & AED',\n            icon: { type: 'img', src: 'assets/img/aid.svg' },\n        },\n        {\n            id: '',\n            name: 'Cafe/Service',\n            icon: { type: 'img', src: 'assets/img/Cafe.svg' },\n        },\n        {\n            id: '',\n            name: 'Mail/Noticeboard',\n            icon: { type: 'img', src: 'assets/img/mail.svg' },\n        },\n        {\n            id: '',\n            name: 'Restrooms M/F',\n            icon: { type: 'img', src: 'assets/img/Restrooms.svg' },\n        },\n        {\n            id: '',\n            name: 'Map Kiosk',\n            icon: { type: 'img', src: 'assets/img/kiosk.svg' },\n        },\n        {\n            id: '',\n            name: 'Screen',\n            icon: { type: 'img', src: 'assets/img/Screen.svg' },\n        },\n        {\n            id: '',\n            name: 'Projector',\n            icon: { type: 'img', src: 'assets/img/Projector.svg' },\n        },\n        {\n            id: '',\n            name: 'Showers',\n            icon: { type: 'img', src: 'assets/img/shower.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair2.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table1.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table3.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table4.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table5.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table6.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table7.svg' },\n        },\n        {\n            id: '',\n            name: 'Funzone Games',\n            icon: { type: 'img', src: 'assets/img/Tennis.svg' },\n        },\n        {\n            id: '',\n            name: 'Concierge Pods',\n            icon: { type: 'img', src: 'assets/img/Pod.svg' },\n        },\n        {\n            id: '',\n            name: 'Phone Booths',\n            icon: { type: 'img', src: 'assets/img/booth.svg' },\n        },\n    ];\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { AsyncHandler, log, SettingsService } from '@placeos/common';\nimport { ExploreStateService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n                background: #eee;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        const level = localStorage?.getItem('KIOSK.level');\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n            return;\n        }\n        this._state.setLevel(level);\n        this.onMouse();\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public resetKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', Date.now());\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { ExploreComponent } from './explore.component';\nimport { FooterLegendComponent } from './footer-legend.component';\nimport { FiltersComponent } from './filters.component';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [ExploreComponent, FooterLegendComponent, FiltersComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ]\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}