{"version":3,"sources":["./libs/explore/src/lib/explore-space-info.component.ts","./node_modules/date-fns/esm/formatDuration/index.js","./libs/form-fields/src/lib/duration-field.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/booking-form.service.ts","./node_modules/rxjs/_esm2015/internal/operators/distinctUntilKeyChanged.js","./libs/bookings/src/lib/booking.utilities.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-map-control.component.ts","./node_modules/@angular/material/fesm2015/slide-toggle.js","./libs/explore/src/lib/explore-map-view.component.ts","./apps/visitor-kiosk/src/app/explore/footer-legend/footer-legend.component.html","./apps/visitor-kiosk/src/app/explore/footer-legend/footer-legend.component.ts","./apps/visitor-kiosk/src/app/explore/explore.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/visitor-kiosk/src/app/explore/explore.module.ts"],"names":["ExploreSpaceInfoComponent","_details","_element","space","this","events","status","tries","setTimeout","parent","nativeElement","parentElement","ngOnInit","position","parseInt","style","top","left","y_pos","x_pos","defaultFormat","formatDuration","duration","options","arguments","length","undefined","TypeError","concat","format","locale","zero","delimiter","result","reduce","acc","unit","token","replace","m","toUpperCase","formatDistance","join","DurationFieldComponent","max","min","step","specialPreprops","duration_options","generateDurationOptions","changes","time","new_value","_onChange","value","disabled","fn","_onTouch","blocks","date","option","push","id","name","add","hours","Math","floor","minutes","provide","useExisting","multi","setValue","ExploreBookingModalComponent","_data","_dialog_ref","loading","booking","attendees","resource","form","markAllAsTouched","on_error","msg","disableClose","valid","list","key","controls","invalid","system_ids","resources","map","s","period_start","period_end","toPromise","catch","e","display_name","close","ExploreStateService","_org","_spaces","_settings","super","_level","_positions","zoom","center","x","y","_styles","_features","_actions","_labels","_options","_message","level","asObservable","message","spaces","combineLatest","pipe","filter","zones","includes","map_url","lvl","map_id","map_positions","map_features","debounceTime","features","disable","disable_features","map_actions","actions","disable_actions","map_labels","labels","disable_labels","map_styles","styles","style_mappings","text","display","disable_styles","init","getValue","initialised","_","active_building","subscribe","bld","level_list","levelsForBuilding","find","setLevel","get","setOptions","next","zone_id","levelWithID","style_map","feature_map","actions_map","labels_map","DEFAULT_COLOURS","free","pending","reserved","busy","unknown","ExploreSpacesService","_state","_dialog","_bookings","_statuses","_bind","console","log","unsubWith","mod","binding","subscription","listen","d","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","bookable","open","data","bookings","i","timeout","clearTimeout","updateStatus","colours","fill","opacity","setStyles","location","hover","content","setFeatures","action","callback","bookSpace","setActions","ExploreZonesService","_location","_capacity","building","buildings","parent_id","system_id","bindings","area_management","organisation","parseData","zone_metadata","Promise","all","levels","zone","areas","details","area","properties","capacity","label_location","filled","count","area_id","ambient_temp","people_count","humidity","queue_size","counter","setLabels","FormFieldsModule","DeskQuestionsModalComponent","event","travelled","unwell","contact","Object","keys","failure","emit","reason","asset_id","booking_start","roundToNearestMinutes","Date","nearestTo","booking_end","booking_type","type","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","user_email","user_id","user_name","title","description","checked_in","rejected","approved","approver_id","approver_email","approver_name","extension_data","access","all_day","isSameDay","start","end","addHours","isAfter","BOOKINGS_ENDPOINT","q","query","item","BOOKING_URLS","BookingFormService","_router","_view","_form","_form_value","_booking","_loading","last_success","JSON","parse","sessionStorage","getItem","shareReplay","assets","distinctUntilChanged","switchMap","of","metadata","desks","tap","asset","forEach","sort","a","b","localeCompare","available_assets","every","bkn","grouped_availability","groups","asset_list","members","group","pop","url","clearForm","user","booked_by","booked_by_id","booked_by_email","valueChanges","v","booker","patchValue","email","emitEvent","generateBookingForm","storeForm","newForm","removeItem","setItem","stringify","checkQuestions","icon","postForm","method","encodeURIComponent","updateBooking","createBooking","setView","ref","race","componentInstance","afterClosed","ExploreDeviceInfoComponent","_overlay","username","mac","manufacturer","os","ssid","variance","toFixed","diameter","bg_color","distance_color","overlay_ref","onEnter","loadUser","onLeave","onClick","onTouch","formatDistanceToNow","last_seen","addSuffix","distance","system","execute","assigned_to","_portal","create","positionStrategy","flexibleConnectedTo","_dot","withPositions","originX","originY","overlayX","overlayY","attach","dispose","ExploreDeskInfoComponent","ExploreDesksService","_in_use","_desks","_reserved","_poll","_desk_bookings","desk_list","Array","j","catchError","processBindingChange","_state_change","in_use","is_used","some","is_reserved","processDesks","enable_booking","delay","interval","valueOf","clearInterval","devices","at_location","processDevices","desk_id","device","map_width","map_height","coordinates_from","desk","book_fn","host","confirmPost","ExploreZoomControlComponent","zoomIn","setPositions","positions","zoomOut","reset","ExploreMapControlComponent","_route","building_list","active_levels","navigate","relativeTo","queryParams","setBuilding","queryParamMap","params","has","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","source","checked","MatSlideToggleBase","_elementRef","_MatSlideToggleMixinBase","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","_animationMode","_onTouched","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","markForCheck","monitor","focusOrigin","_inputElement","focus","resolve","then","stopMonitoring","stopPropagation","_emitChangeEvent","isDisabled","origin","focusVia","detectChanges","ɵfac","t","ɵcmp","selectors","viewQuery","rf","ctx","_t","_thumbEl","first","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","required","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","$event","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","textContent","trim","toString","directives","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","ExploreMapViewComponent","_s","_zones","o","enabled","take","toggleZones","locateSpace","locateUser","feature","locate_details","location_services","module","locations","priority","indexOf","pos","radius","FooterLegendComponent","colour","dark","icon_list","src","ExploreComponent","localStorage","refreshKiosk","level_id","phone_numbers","emergency","closeAll","post","getTime","SharedExploreModule","ROUTES","path","component","AppExploreModule"],"mappings":"wXAmCgB,kBACI,gBAAM,sBAAU,QAAO,SAE3B,S,sBAF2B,oF,yBAYvB,kBACI,SACJ,S,sBADI,2C,yBAMA,iBAII,SACJ,S,yBADI,2B,yBAPZ,kBACI,gBAAqB,yBAAa,QAClC,iBACI,uBAMJ,QACJ,S,sBALgC,4C,yBApCxC,iBAWI,iBACA,iBACI,gBAAqB,SAAsC,QAC3D,uBAIA,iBACI,iBAMI,SACJ,QACA,uBAGJ,QACA,wBAWJ,QACJ,S,qBAvCI,gFADA,uBAUyB,mDACU,2CAOvB,mEAIA,iCAEkB,iDAIX,gFAgDxB,Y,MAAMA,EAYT,YACsCC,EAC1BC,GAD0B,KAAAD,WAC1B,KAAAC,WAZI,KAAAC,MAAQC,KAAKH,SAASE,MAEtB,KAAAE,OAASD,KAAKH,SAASI,OAEvB,KAAAC,OAASF,KAAKH,SAASK,OAWhC,SAASC,EAAgB,GACxBA,EAAQ,IACZC,WAAW,K,MACP,MAAMC,EAAkD,QAAzC,EAAAL,KAAKF,SAASQ,cAAcC,qBAAa,eAClDA,cACN,IAAKF,EAAQ,OAAOL,KAAKQ,WAAWL,GACpC,MAAMM,EACCC,SAASL,EAAOM,MAAMC,IAAK,IAAM,IADlCH,EAECC,SAASL,EAAOM,MAAME,KAAM,IAAM,IAEzCb,KAAKc,MAAQL,GAAc,GAAM,SAAW,MAC5CT,KAAKe,MAAQN,GAAc,GAAM,QAAU,QAC5C,KAGP,sBACI,MAAO,I,6CAjCFb,GAAyB,MAatB,MAAgB,e,wBAbnBA,EAAyB,2eA/E9B,yB,KACK,uB,wcA8EN,G,uECnGHoB,EAAgB,CAAC,QAAS,SAAU,QAAS,OAAQ,QAAS,UAAW,WAiE9D,SAASC,EAAeC,GACrC,IAAIC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAElF,GAAIA,UAAUC,OAAS,EACrB,MAAM,IAAIE,UAAU,iCAAiCC,OAAOJ,UAAUC,OAAQ,aAGhF,IAAII,EAASN,EAAQM,QAAUT,EAC3BU,EAASP,EAAQO,QAAU,IAC3BC,EAAOR,EAAQQ,OAAQ,EACvBC,EAAYT,EAAQS,WAAa,IACjCC,EAASJ,EAAOK,OAAO,SAAUC,EAAKC,GACxC,IAAIC,EAAQ,IAAIT,OAAOQ,EAAKE,QAAQ,OAAQ,SAAUC,GACpD,OAAOA,EAAEC,iBAGX,MADyC,iBAAnBlB,EAASc,KAAuBL,GAAQT,EAASc,IACrDD,EAAIP,OAAOE,EAAOW,eAAeJ,EAAOf,EAASc,KAAUD,GAC5E,IAAIO,KAAKV,GACZ,OAAOC,E,2DChEW,wBACI,SACJ,S,yBAFoD,oBAChD,gC,cA0BjB,Y,MAAMU,EAvCb,cAyCoB,KAAAC,IAAM,IAEN,KAAAC,IAAM,GAEN,KAAAC,KAAO,GAMP,KAAAC,gBAAiC,GAE1C,KAAAzB,SAAW,GASX,WACHlB,KAAK4C,iBAAmB5C,KAAK6C,wBAAwB7C,KAAKwC,IAAKxC,KAAKyC,IAAKzC,KAAK0C,MAG3E,YAAYI,IAEXA,EAAQN,KAAOM,EAAQL,KAAOK,EAAQJ,MAAQI,EAAQC,QACtD/C,KAAK4C,iBAAmB5C,KAAK6C,wBAAwB7C,KAAKwC,IAAKxC,KAAKyC,IAAKzC,KAAK0C,OAQ/E,SAASM,GACZhD,KAAKkB,SAAW8B,EAEZhD,KAAKiD,WACLjD,KAAKiD,WAAWD,GASjB,WAAWE,GACdlD,KAAKkB,SAAWgC,EAGb,iBAAiBC,GACpBnD,KAAKmD,SAAWA,EAQb,iBAAiBC,GACpBpD,KAAKiD,UAAYG,EAQd,kBAAkBA,GACrBpD,KAAKqD,SAAWD,EAGZ,wBAAwBZ,EAAaC,EAAaC,GACtD,MAAMY,EAAqB,GAC3B,IAAIP,EAAON,EACX,MAAMc,EAAOvD,KAAK+C,KAAO,EAAM/C,KAAK+C,MAAQ,KAG5C,IAAK,MAAMS,KAAUxD,KAAK2C,gBACtBW,EAAOG,KAAK,CACRC,GAAIF,EACJG,KAAMJ,EACA,GAAGA,EAAKK,IAAIJ,EAAQ,KAAK/B,OAAO,cAAcR,EAAe,CACzD4C,MAAOC,KAAKC,MAAMP,EAAS,IAC3BQ,QAASR,EAAS,QAEtB,GAAGvC,EAAe,CAAE4C,MAAOC,KAAKC,MAAMP,EAAS,IAAKQ,QAASR,EAAS,SAIpF,KAAOT,GAAQP,GACXc,EAAOG,KAAK,CACRC,GAAIX,EACJY,KAAMJ,EACA,GAAGA,EAAKK,IAAIb,EAAM,KAAKtB,OAAO,cAAcR,EAAe,CACvD4C,MAAOC,KAAKC,MAAMhB,EAAO,IACzBiB,QAASjB,EAAO,QAEpB,GAAG9B,EAAe,CAAE4C,MAAOC,KAAKC,MAAMhB,EAAO,IAAKiB,QAASjB,EAAO,SAE5EA,GAAQL,EAEZ,OAAOY,G,6CA3GFf,I,wBAAAA,EAAsB,4JARpB,CACP,CACI0B,QAAS,KACTC,aAAa,SAAW,IAAM3B,GAC9B4B,OAAO,KAEd,4O,QAlCG,iBACI,4BACI,0BAKI,uCAAe,EAAAC,SAAA,KAEf,8BAGJ,QACA,qBAAW,SAAyB,QACxC,QACJ,S,MAf4B,6BAIhB,mCAAkB,sBAAlB,CAAkB,qCAKa,+C,sHA2B5C,G,oCC7BK,oBACI,oBAAU,iBAAK,QACnB,S,yBA0BQ,iBACI,iBAAO,iBAAK,QACZ,kBACI,S,gBACJ,QACJ,S,sBAFQ,wG,sBAGR,iBACI,iBAAO,qBAAS,QAChB,+BAGJ,S,yBAlCR,kBACI,iBACI,oBAAmB,iBAAK,gBAAM,aAAC,QAAO,aAAC,QACvC,6BACI,oBAMA,qBAAW,sCAAyB,QACxC,QACJ,QACA,kBACI,kBAAO,mBAAM,QACb,mBACI,UAIJ,QACJ,QACA,mBACI,yBAMA,yBAMJ,QACJ,S,sBApCmB,0BAgBP,oRAOwB,4CAMA,iD,wCA9BxC,SACI,yBAqCA,oBACI,oBAAmB,0DAAiB,gBAAI,QAC5C,QACJ,Q,wBAxCW,+B,yBA0CP,kBACI,0BACA,aAAG,SAAa,QACpB,S,qBAF6B,8BACtB,2BAiBZ,Y,MAAMC,EAKT,YACqCC,EACzBC,GADyB,KAAAD,QACzB,KAAAC,cAJL,KAAAC,QAAU,GAOV,WACHxE,KAAKyE,QAAU,IAAI,KAAc,CAC7BC,UAAW,CAAC,+BAAM1E,KAAKsE,MAAMvE,OAAS,IAAG,CAAE4E,UAAU,OAEzD3E,KAAK4E,MAAO,QAAkB5E,KAAKyE,SAG1B,O,oDACTzE,KAAK4E,KAAKC,mBACV,MAAMC,EAAYC,IACd/E,KAAKwE,QAAU,IACf,QAAYO,GACZ/E,KAAKuE,YAAYS,cAAe,GAEpC,IAAKhF,KAAK4E,KAAKK,MAAO,CAClB,MAAMC,EAAO,GACb,IAAK,MAAMC,KAAOnF,KAAK4E,KAAKQ,SACpBpF,KAAK4E,KAAKQ,SAASD,GAAKE,SACxBH,EAAKzB,KAAK0B,GAGlB,MAAML,EACF,oCAAoCI,EAAK5C,KAAK,UAqBtD,GAlBAtC,KAAKuE,YAAYS,cAAe,EAChChF,KAAKwE,QAAU,wCACM,QAAuB,CACxCc,WAA8C,QAAlC,EAAAtF,KAAK4E,KAAKQ,SAASG,UAAUrC,aAAK,eACxCsC,IAAKC,GAAMA,EAAE/B,IACdpB,KAAK,KACVoD,aAAc5B,KAAKC,MAAM/D,KAAK4E,KAAK1B,MAAMK,KAAO,KAChDoC,WACI7B,KAAKC,MAAM/D,KAAK4E,KAAK1B,MAAMK,KAAO,KACP,GAA3BvD,KAAK4E,KAAK1B,MAAMhC,WAEnB0E,YACAC,MAAOC,IAIJ,MAHAhB,EACI,0DAEEgB,KAEHzE,QAAU,EACjB,OAAOyD,EACH,0DAGR9E,KAAKwE,QAAU,4BACT,QAAU,IAAI,KAAcxE,KAAK4E,KAAK1B,QACvC0C,YACAC,MAAOC,IAEJ,MADAhB,EAAS,2BACHgB,KAEd,QACI,mCACI9F,KAAKsE,MAAMvE,MAAMgG,cAAgB/F,KAAKsE,MAAMvE,MAAM4D,QAG1D3D,KAAKuE,YAAYyB,W,6CAtEZ3B,GAA4B,MAMzB,MAAe,c,wBANlBA,EAA4B,4xB,GAAA,MArEjC,kBACI,cAAI,uBAAW,QACf,iBACA,0BAGJ,QACA,gCA0CA,2C,sBA9Ca,kCAIE,kCAAgB,gB,sOA8DhC,G,sDCrDA,Y,MAAM4B,UAA4B,KAmIrC,YACYC,EACAC,EACAC,GAERC,QAJQ,KAAAH,OACA,KAAAC,UACA,KAAAC,YApIJ,KAAAE,OAAS,IAAI,IAA+B,MAE5C,KAAAC,WAAa,IAAI,IAAiD,CACtEC,KAAM,EACNC,OAAQ,CAAEC,EAAG,GAAKC,EAAG,MAGjB,KAAAC,QAAU,IAAI,IAAuC,IAErD,KAAAC,UAAY,IAAI,IAA0C,IAE1D,KAAAC,SAAW,IAAI,IAAuC,IAEtD,KAAAC,QAAU,IAAI,IAAwC,IAEtD,KAAAC,SAAW,IAAI,IAA4B,IAE3C,KAAAC,SAAW,IAAI,IAAwB,IAG/B,KAAAC,MAAQlH,KAAKsG,OAAOa,eAEpB,KAAAC,QAAUpH,KAAKiH,SAASE,eAExB,KAAAE,QAAS,EAAAC,EAAA,IAAc,CACnCtH,KAAKsG,OACLtG,KAAKmG,QAAQjB,OACdqC,MACC,OAAI,EAAEL,EAAOG,KACTA,EAAOG,OAAQzH,GAAUA,EAAM0H,MAAMC,SAASR,aAAK,EAALA,EAAOxD,OAI7C,KAAAiE,QAAU3H,KAAKsG,OAAOiB,MAClC,OAAKK,IAASA,EAAMA,EAAIC,OAAS,KAAO,KAG5B,KAAAC,cAAgB9H,KAAKuG,WAAWY,eAEhC,KAAAY,cAAe,EAAAT,EAAA,IAAc,CACzCtH,KAAK6G,UACL7G,KAAKgH,WACNO,MACC,EAAAS,EAAA,GAAa,MACb,OAAI,EAAEC,EAAU9G,M,QACZ,IAAI+D,EAAO,GACX,IAAK,MAAMC,KAAO8C,GAEK,QAAf,EAAA9G,EAAQ+G,eAAO,eAAER,SAASvC,MACF,QAAxB,EAAAhE,EAAQgH,wBAAgB,eAAET,SAASvC,MAGvCD,EAAOA,EAAK1D,OAAOyG,EAAS9C,KAEhC,OAAOD,KAIC,KAAAkD,aAAc,EAAAd,EAAA,IAAc,CACxCtH,KAAK8G,SACL9G,KAAKgH,WACNO,MACC,EAAAS,EAAA,GAAa,MACb,OAAI,EAAEK,EAASlH,M,QACX,IAAI+D,EAAO,GACX,IAAK,MAAMC,KAAOkD,GAEK,QAAf,EAAAlH,EAAQ+G,eAAO,eAAER,SAASvC,MACH,QAAvB,EAAAhE,EAAQmH,uBAAe,eAAEZ,SAASvC,MAGtCD,EAAOA,EAAK1D,OAAO6G,EAAQlD,KAE/B,OAAOD,KAIC,KAAAqD,YAAa,EAAAjB,EAAA,IAAc,CACvCtH,KAAK+G,QACL/G,KAAKgH,WACNO,MACC,EAAAS,EAAA,GAAa,MACb,OAAI,EAAEQ,EAAQrH,M,QACV,IAAI+D,EAAO,GACX,IAAK,MAAMC,KAAOqD,GAEK,QAAf,EAAArH,EAAQ+G,eAAO,eAAER,SAASvC,MACJ,QAAtB,EAAAhE,EAAQsH,sBAAc,eAAEf,SAASvC,MAGrCD,EAAOA,EAAK1D,OAAOgH,EAAOrD,KAE9B,OAAOD,KAIC,KAAAwD,YAAa,EAAApB,EAAA,IAAc,CACvCtH,KAAK4G,QACL5G,KAAKgH,WACNO,MACC,EAAAS,EAAA,GAAa,MACb,OAAI,EAAEW,EAAQxH,M,UACV,IAAIyH,EAAiB,CAAEC,KAAM,CAAEC,QAAS,SACxC,IAAK,MAAM3D,KAAOwD,GAEK,QAAf,EAAAxH,EAAQ+G,eAAO,eAAER,SAASvC,MACJ,QAAtB,EAAAhE,EAAQ4H,sBAAc,eAAErB,SAASvC,MAGrCyD,EAAiB,OAAH,wBAAQA,GAAmBD,EAAOxD,KAMpD,OAJoB,QAAf,EAAAhE,EAAQ+G,eAAO,eAAER,SAAS,YAC3BkB,EAAe,UAAY,CAAEE,QAAS,QACtCF,EAAe,UAAY,CAAEE,QAAS,SAEnCF,KAIC,KAAAzH,QAAUnB,KAAKgH,SAASG,eAgBpCnH,KAAKgJ,OAdT,gBACI,OAAOhJ,KAAKuG,WAAW0C,WAG3B,mBACI,OAAOjJ,KAAKsG,OAAO2C,WAYV,O,oDACHjJ,KAAKkG,KAAKgD,YAAY3B,MAAK,OAAO4B,GAAMA,IAAIvD,YAClD5F,KAAKkG,KAAKkD,gBAAgB7B,MAAK,EAAAC,EAAA,GAAQ2B,KAAQA,IAAIE,UAAWC,IAC1D,MAAMpC,EAAQlH,KAAKsG,OAAO2C,WACpBM,EAAavJ,KAAKkG,KAAKsD,kBAAkBF,IAC7BC,EAAWE,KAAM7B,IAAQV,aAAK,EAALA,EAAOxD,MAAOkE,EAAIlE,KAC3C6F,EAAWlI,QACzBrB,KAAK0J,SAASH,EAAW,GAAG7F,KAE0B,IAAtD1D,KAAKoG,UAAUuD,IAAI,gCACnB3J,KAAK4J,WAAW,CAAE1B,QAAS,CAAC,aAE5BlI,KAAKoG,UAAUuD,IAAI,gCACnB3J,KAAK4J,WAAW,CACZtB,gBAAiBtI,KAAKoG,UAAUuD,IAC5B,iCAIR3J,KAAKoG,UAAUuD,IAAI,+BACnB3J,KAAK4J,WAAW,CACZnB,eAAgBzI,KAAKoG,UAAUuD,IAC3B,gCAIR3J,KAAKoG,UAAUuD,IAAI,iCACnB3J,KAAK4J,WAAW,CACZzB,iBAAkBnI,KAAKoG,UAAUuD,IAC7B,kCAIR3J,KAAKoG,UAAUuD,IAAI,+BACnB3J,KAAK4J,WAAW,CACZb,eAAgB/I,KAAKoG,UAAUuD,IAC3B,oCAOb,WAAWxI,GACdnB,KAAKgH,SAAS6C,KAAK,OAAD,wBAAM7J,KAAKgH,SAASiC,YAAe9H,IAGlD,SAAS2I,GACZ,MAAMlC,EAAM5H,KAAKkG,KAAK6D,YAAY,CAACD,IAC/BlC,GACA5H,KAAKsG,OAAOuD,KAAKjC,GAIlB,UAAUjE,EAAcgF,GAC3B,MAAMqB,EAAYhK,KAAK4G,QAAQqC,WAC/Be,EAAUrG,GAAQgF,EAClB3I,KAAK4G,QAAQiD,KAAKG,GAGf,YAAYrG,EAAcsE,GAC7B,MAAMgC,EAAcjK,KAAK6G,UAAUoC,WACnCgB,EAAYtG,GAAQsE,EACpBjI,KAAK6G,UAAUgD,KAAKI,GAGjB,WAAWtG,EAAc0E,GAC5B,MAAM6B,EAAclK,KAAK8G,SAASmC,WAClCiB,EAAYvG,GAAQ0E,EACpBrI,KAAK8G,SAAS+C,KAAKK,GAGhB,UAAUvG,EAAc6E,GAC3B,MAAM2B,EAAanK,KAAK+G,QAAQkC,WAChCkB,EAAWxG,GAAQ6E,EACnBxI,KAAK+G,QAAQ8C,KAAKM,GAGf,aAAa3D,EAAcC,GAC9BzG,KAAKuG,WAAWsD,KAAK,CAAErD,OAAMC,Y,6CA3NxBR,GAAmB,sC,0BAAnBA,EAAmB,QAAnBA,EAAmB,qBAFhB,S,GAET,GCZA,MAAMmE,EAAkB,CAC3BC,KAAM,UACNC,QAAS,UACTC,SAAU,UACVC,KAAM,UACN,eAAgB,UAChBC,QAAS,WAIN,a,MAAMC,UAA6B,KAuCtC,YACYC,EACAvE,EACAwE,GAERvE,QAJQ,KAAAsE,SACA,KAAAvE,YACA,KAAAwE,UAzCJ,KAAAC,UAAsC,GACtC,KAAAC,UAA6B,GAE7B,KAAAC,MAAQ/K,KAAK2K,OAAOtD,OAAOE,MAC/B,OAAKrC,IAKD,GAJA8F,QAAQC,IAAI,UAAW/F,GACvBlF,KAAKkL,UAAU,MACflL,KAAKkL,UAAU,MACflL,KAAK8K,UAAY,GACZ5F,aAAI,EAAJA,EAAM7D,OAAX,CACA,IAAK,MAAMtB,KAASmF,EAAM,CACtB,MAAMiG,GAAM,SAAUpL,EAAM2D,GAAI,YAChC,IAAI0H,EAAUD,EAAIC,QAAQ,YAC1BpL,KAAKqL,aACD,KAAKtL,EAAM2D,KACX0H,EACKE,SACAjC,UAAWkC,GACRvL,KAAKwL,qBAAqBtG,EAAMnF,EAAOwL,KAGnDvL,KAAKqL,aAAa,UAAUtL,EAAM2D,KAAM0H,EAAQK,QAChDL,EAAUD,EAAIC,QAAQ,UACtBpL,KAAKqL,aACD,KAAKtL,EAAM2D,KACX0H,EACKE,SACAjC,UAAWkC,GACRvL,KAAK0L,mBAAmBxG,EAAMnF,EAAOwL,KAGjDvL,KAAKqL,aAAa,UAAUtL,EAAM2D,KAAM0H,EAAQK,QAEpDzL,KAAK2L,cAAczG,GACnBlF,KAAK4L,oBAAoB1G,OAU7BlF,KAAKqL,aAAa,SAAUrL,KAAK+K,MAAM1B,aAGpC,UAAUtJ,GACb,GAAiC,SAA7BC,KAAK8K,UAAU/K,EAAM2D,MAAmB3D,EAAM8L,SAC9C,OAAO,QACH,GACI9L,EAAMgG,cAAgBhG,EAAM4D,2CAIxC3D,KAAK4K,QAAQkB,KAAKzH,EAA8B,CAC5C0H,KAAM,CAAEhM,WAIT,qBACHsH,EACAtH,EACAiM,GAEKA,IACLhM,KAAK6K,UAAU9K,EAAM2D,IAAMsI,EAASxG,IAAKyG,GAAM,IAAI,KAAcA,IACjEjM,KAAKkM,QACD,mBACA,IAAMlM,KAAK4L,oBAAoBvE,GAC/B,MAID,mBAAmBA,EAAiBtH,EAAcG,GACrDF,KAAK8K,UAAU/K,EAAM2D,IAAM3D,EAAM8L,SAC3B3L,GAAU,OACV,eACNF,KAAKkM,QACD,kBACA,KACIlM,KAAKmM,aAAa,oBAClBnM,KAAKoM,aAAa/E,GAClBrH,KAAK4L,oBAAoBvE,IAE7B,KAIA,aAAaA,GACjB,MAAM2C,EAAY,GACZqC,EAAUrM,KAAKoG,UAAUuD,IAAI,uBAAyB,GAC5D,IAAK,MAAM5J,KAASsH,EAAQ,CACxB,MAAMnH,EAASF,KAAK8K,UAAU/K,EAAM2D,KAAO,eAC3CsG,EAAU,IAAIjK,EAAM8H,UAAY,CAC5ByE,KACID,EAAQ,SAASnM,MACjBmM,EAAQ,GAAGnM,MACXkK,EAAgB,GAAGlK,KACvBqM,QAAS,IAGjBvM,KAAK2K,OAAO6B,UAAU,SAAUxC,GAG5B,oBAAoB3C,GACxB,MAAMY,EAA4B,GAClC,IAAK,MAAMlI,KAASsH,EAChBY,EAASxE,KAAK,CACVgJ,SAAU1M,EAAM8H,OAChB6E,OAAO,EACPC,QAAS/M,EACTmM,KAAM,CACFhM,QACAE,OAAQD,KAAK6K,UAAU9K,EAAM2D,IAC7BxD,OAAQF,KAAK8K,UAAU/K,EAAM2D,OAIzC1D,KAAK2K,OAAOiC,YAAY,SAAU3E,GAG9B,cAAcZ,GAClB,MAAMgB,EAAwB,GAC9B,IAAK,MAAMtI,KAASsH,EAChBgB,EAAQ5E,KAAK,CACTC,GAAI3D,EAAM8H,OACVgF,OAAQ,QACRC,SAAU,IAAM9M,KAAK+M,UAAUhN,KAEnCsI,EAAQ5E,KAAK,CACTC,GAAI3D,EAAM8H,OACVgF,OAAQ,WACRC,SAAU,IAAM9M,KAAK+M,UAAUhN,KAGvCC,KAAK2K,OAAOqC,WAAW,SAAU3E,I,6CAzI5BqC,GAAoB,mC,0BAApBA,EAAoB,QAApBA,EAAoB,Y,GAA1B,GCFA,S,MAAMuC,UAA4B,KA8BrC,YACYtC,EACAzE,EACAE,GAERC,QAJQ,KAAAsE,SACA,KAAAzE,OACA,KAAAE,YAhCJ,KAAA0E,UAA6B,GAC7B,KAAA/D,QAAgC,GAChC,KAAAmG,UAA4B,GAC5B,KAAAC,UAA6B,GAE7B,KAAApC,MAAQ/K,KAAK2K,OAAOzD,MAAMK,MAC9B,OAAKK,IACD,IAAKA,EAAK,OACV5H,KAAK8K,UAAY,GACjB,MAAMsC,EAAWpN,KAAKkG,KAAKmH,UAAU5D,KAChCH,GAAQA,EAAI5F,KAAOkE,EAAI0F,WAE5B,IAAKF,EAAU,OACf,MAAMG,EACFH,EAASI,SAASC,iBAClBzN,KAAKkG,KAAKwH,aAAaF,SAASC,gBACpC,IAAKF,EAAW,OAChB,MAAMnC,GAAU,SAAUmC,EAAW,kBAAkBnC,QACnD,GAAGxD,EAAIlE,YAEXsH,QAAQC,IAAI,QAASG,GACrBpL,KAAKqL,aACD,QACAD,EAAQE,SAASjC,UAAWkC,GAAMvL,KAAK2N,UAAUpC,KAErDvL,KAAKqL,aAAa,UAAWD,EAAQK,WAUzCzL,KAAKgJ,OAGI,O,8DACHhJ,KAAKkG,KAAKgD,YAAY3B,MAAK,OAAO4B,GAAMA,IAAIvD,YAClD,MAAMgI,QAAsBC,QAAQC,IAChC9N,KAAKkG,KAAK6H,OAAOvI,IAAK8D,IAClB,SAAaA,EAAI5F,GAAI,CAAEC,KAAM,gBAAiBiC,cAGtD,IAAK,MAAMoI,KAAQJ,EAAe,CAC9B,MAAMK,EAA8B,QAArB,EAAAD,aAAI,EAAJA,EAAME,eAAe,eAAED,MACtC,GAAIA,EACA,IAAK,MAAME,KAAQF,EACfjO,KAAKmN,UAAUgB,EAAKzK,KAAqB,QAAf,EAAAyK,EAAKC,kBAAU,eAAEC,WAAY,IACvDrO,KAAKkN,UAAUiB,EAAKzK,KACD,QAAf,EAAAyK,EAAKC,kBAAU,eAAEE,iBAAkB,KAInDtO,KAAKqL,aAAa,OAAQrL,KAAK+K,MAAM1B,eAGlC,UAAU0C,GACb,MAAM7I,GAAQ6I,aAAI,EAAJA,EAAM7I,QAAS,GACvBsF,EAAS,GACf,IAAK,MAAMwF,KAAQ9K,EAAO,CACtB,MAAMqL,EAASP,EAAKQ,OAASxO,KAAKmN,UAAUa,EAAKS,UAAY,KAG7D,GAFAzO,KAAK8K,UAAUkD,EAAKS,SAChBF,EAAS,GAAM,OAASA,EAAS,IAAO,UAAY,QACnDvO,KAAKkN,UAAUc,EAAKS,SAAU,SACnC,IAAI9B,EAAU,GAAGqB,EAAKQ,OAAS,KACZ,IAAfR,EAAKQ,MAAc,SAAW,cAE9BR,EAAKU,eACL/B,GAAW,iBAAiBqB,EAAKU,0BACjCV,EAAKW,aAAe,IACpBhC,GAAW,GAAGqB,EAAKW,gBACO,IAAtBX,EAAKW,aAAqB,SAAW,cAEzCX,EAAKY,WAAUjC,GAAW,aAAaqB,EAAKY,eAC5CZ,EAAKa,aAAYlC,GAAW,eAAeqB,EAAKa,iBAChDb,EAAKc,UAASnC,GAAW,UAAUqB,EAAKa,gBAC5C7O,KAAK+G,QAAQiH,EAAKS,SAAW,CACzBhC,SAAUzM,KAAKkN,UAAUc,EAAKS,SAC9B9B,WAEJnE,EAAO/E,KAAKzD,KAAK+G,QAAQiH,EAAKS,UAElCzO,KAAK2K,OAAOoE,UAAU,QAASvG,GAC/BxI,KAAKkM,QAAQ,SAAU,IAAMlM,KAAKoM,eAAgB,KAG9C,eACJ,MAAMpC,EAAY,GACZqC,EAAUrM,KAAKoG,UAAUuD,IAAI,uBAAyB,GAC5D,IAAK,MAAMG,KAAW9J,KAAK8K,UAClB9K,KAAK8K,UAAUhB,KACpBE,EAAU,IAAIF,KAAa,CACvBwC,KACID,EAAQ,QAAQrM,KAAK8K,UAAUhB,OAC/BuC,EAAQ,GAAGrM,KAAK8K,UAAUhB,OAC1BM,EAAgB,GAAGpK,KAAK8K,UAAUhB,MACtCyC,QAAS,KAGjBvM,KAAK2K,OAAO6B,UAAU,QAASxC,I,6CAtG1BiD,GAAmB,mC,0BAAnBA,EAAmB,QAAnBA,EAAmB,Y,GAAzB,G,2SC6BA,a,MAAM+B,G,6CAAAA,I,wBAAAA,I,4BAdA,CACL,KACA,KACA,KACA,KACA,IACA,KACA,MACA,MACA,MACA,S,GAID,G,wDCjDC,iBACI,gBAAwB,kCAAsB,QAC9C,kBACI,iBACI,iBACI,iEACK,gBAAM,aAAC,QAChB,QACA,6BAII,+BAAiC,gBAAG,QACpC,+BAAkC,eAAE,QACxC,QACJ,QACA,kBACI,kBACI,2EACS,iBAAM,cAAC,QACpB,QACA,8BACI,+BAAiC,gBAAG,QACpC,+BAAkC,eAAE,QACxC,QACJ,QACA,kBACI,kBACI,uEACS,iBAAM,cAAC,QACpB,QACA,+BAII,+BAAiC,gBAAG,QACpC,+BAAkC,eAAE,QACxC,QACJ,QACJ,QACA,sBACI,sBAAmB,4DAAmB,mBAAM,QAChD,QACA,sBACI,iBAA0B,kBAAK,QACnC,QACJ,Q,wBA5CsB,mCAUY,2BACA,2BASA,2BACA,2BAYA,2BACA,4B,uBAY9B,mBACI,gBACI,wPAIJ,QACA,qBACI,gBAA0B,iBAAK,QACnC,QACJ,SAkBL,a,MAAMC,EA/Eb,cAgFqB,KAAAC,MAAQ,IAAI,MAKtB,WACHlP,KAAK4E,KAAO,IAAI,KAAU,CACtBuK,UAAW,IAAI,KAAY,GAAI,CAAC,gBAChCC,OAAQ,IAAI,KAAY,GAAI,CAAC,gBAC7BC,QAAS,IAAI,KAAY,GAAI,CAAC,kBAI/B,SACHrP,KAAK4E,KAAKC,mBACL7E,KAAK4E,KAAKK,MAIXqK,OAAOC,KAAKvP,KAAK4E,KAAK1B,OAAOuG,KACxBtE,IAC4B,IAAzBnF,KAAK4E,KAAK1B,MAAMiC,IACS,SAAzBnF,KAAK4E,KAAK1B,MAAMiC,IAGxBnF,KAAKwP,SAAU,EAGnBxP,KAAKkP,MAAMO,KAAK,CAAEC,OAAQ,UAZtB,QAAY,uC,6CAjBXT,I,wBAAAA,EAA2B,4mB,GAAA,MA5EhC,yBA+CA,4C,sBA/CM,yBAAgB,gB,kNA4EvB,G,gDCtEA,MAAM,GA0DT,YAAYlD,EAAyB,I,QACjC/L,KAAK0D,GAAKqI,EAAKrI,IAAM,GACrB1D,KAAK2P,SAAW5D,EAAK4D,UAAY,GACjC3P,KAAKyH,MAAQsE,EAAKtE,OAAS,GAC3BzH,KAAK4P,cACD7D,EAAK6D,gBACL,QACI7D,EAAKxI,OACD,EAAAsM,GAAA,IAAsB,QAAW,IAAIC,KAAQ,GAAI,CAC7CC,UAAW,KAG3B/P,KAAKgQ,YACDjE,EAAKiE,cACL,SAAY,QAAgC,IAArBhQ,KAAK4P,cAAsB7D,EAAK7K,UAAY,KACvElB,KAAKiQ,aAAelE,EAAKkE,cAAgB,GACzCjQ,KAAKkQ,KAAOnE,EAAKmE,MAAQ,UACzBlQ,KAAKuD,KAAOwI,EAAKxI,MAA6B,IAArBvD,KAAK4P,cAC9B5P,KAAKkB,SACD6K,EAAK7K,UACL4C,KAAKqM,KAAI,EAAAC,GAAA,GACgB,IAArBpQ,KAAK4P,cACc,IAAnB5P,KAAKgQ,cAEbhQ,KAAKqQ,SACDtE,EAAKsE,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SAC7DzQ,KAAK0Q,WAAa3E,EAAK2E,YAAc,GACrC1Q,KAAK2Q,QAAU5E,EAAK4E,SAAW,GAC/B3Q,KAAK4Q,UAAY7E,EAAK6E,WAAa,GACnC5Q,KAAK6Q,MAAQ9E,EAAK8E,OAAS,eAC3B7Q,KAAK8Q,YAAc/E,EAAK+E,aAAe,GACvC9Q,KAAK+Q,aAAehF,EAAKgF,WACzB/Q,KAAKgR,WAAajF,EAAKiF,SACvBhR,KAAKiR,WAAalF,EAAKkF,SACvBjR,KAAKkR,YAAcnF,EAAKmF,aAAe,GACvClR,KAAKmR,eAAiBpF,EAAKoF,gBAAkB,GAC7CnR,KAAKoR,cAAgBrF,EAAKqF,eAAiB,GAC3CpR,KAAKqR,eAAiBtF,EAAKsF,gBAAkB,GAC7CrR,KAAKsR,UAA8B,QAAnB,EAAAvF,EAAKsF,sBAAc,eAAEC,QACrCtR,KAAKuR,QAAsB,QAAZ,EAAAxF,EAAKwF,eAAO,SAC3BvR,KAAKE,OAASF,KAAKgR,SACb,WACAhR,KAAKiR,SACL,WACA,YACN,IAAK,MAAM9L,KAAO4G,EACR5G,KAAOnF,OACTA,KAAKqR,eAAelM,GAChB4G,EAAK5G,IAAQnF,KAAKqR,eAAelM,IAK1C,SACH,MAAM4G,EAAO,OAAH,UAAQ/L,MAIlB,OAHKA,KAAK0D,WAAWqI,EAAKrI,UACnBqI,EAAKxI,YACLwI,EAAK7K,SACL6K,EAGX,eACI,OAAO/L,KAAK8Q,YAIhB,eACI,OAAO,EAAAU,GAAA,GAAUxR,KAAKuD,KAAM,IAAIuM,MAIpC,cACI,MAAM2B,EAAQ,IAAI3B,KACZ4B,EAAM1R,KAAKuR,SACX,EAAAI,GAAA,GAAS3R,KAAKuD,KAAM,KACpB,QAAWvD,KAAKuD,KAAMvD,KAAKkB,UACjC,OAAO,EAAA0Q,GAAA,GAAQH,EAAOC,I,eC7H9B,MAAMG,GAAoB,yBAMnB,SAAS,GAAcC,GAC1B,MAAMC,GAAQ,QAAcD,GAC5B,OAAO,SAAI,GAAGD,KAAoBE,EAAQ,IAAMA,EAAQ,MAAMxK,MAC1D,OAAKrC,GAASA,EAAKM,IAAKwM,GAAS,IAAI,GAAQA,MA+C9C,MC3CDC,GAAe,CAAC,cA+Bf,a,MAAMC,UAA2B,KAoJpC,YACYC,EACAjM,EACA0E,GCxNT,IAAiCzF,ED0NhCkB,QAJQ,KAAA8L,UACA,KAAAjM,OACA,KAAA0E,UAtJJ,KAAAwH,MAAQ,IAAI,IAAiC,QAC7C,KAAApL,SAAW,IAAI,IAAoC,CACvDkJ,KAAM,SAEF,KAAAmC,MAAQ,IAAI,IAA2B,MACvC,KAAAC,YAAc,IAAI,IAAkC,IACpD,KAAAC,SAAW,IAAI,IAAyB,MACxC,KAAAC,SAAW,IAAI,IAAwB,IAExC,KAAAC,aAAwB,IAAI,GAC/BC,KAAKC,MACDC,eAAeC,QAAQ,gCAAkC,OAGjD,KAAArO,QAAUxE,KAAKwS,SAASrL,eACxB,KAAAhG,QAAUnB,KAAKgH,SAASO,MAAK,EAAAuL,GAAA,GAAY,IAEzC,KAAAC,OAAqC/S,KAAKmB,QAAQoG,MCnF9BpC,EDoFR,WCnFrB,EAAA6N,GAAA,GAAqB,CAACtM,EAAGC,IAA0CD,EAAEvB,KAASwB,EAAExB,MDoFnF,EAAA8N,GAAA,GAAU,EAAG/C,WACT,IAAKlQ,KAAKkG,KAAKkH,SAAU,OAAO,EAAA8F,OAAG,IACnC,OAAQhD,GACJ,IAAK,OAED,OADAlQ,KAAKwS,SAAS3I,KAAK,qBACZ,SAAkB7J,KAAKkG,KAAKkH,SAAS1J,GAAI,CAC5CC,KAAM,UACP4D,MACC,OAAKwE,IACD,QACIA,EAAKvG,IAAK2D,I,MACN,QACoB,QAAhB,EAAAA,EAAEgK,SAASC,aAAK,eAAElF,UAAW,IAC/B1I,IAAK+F,GAAO,OAAD,wBAAMA,GAAC,CAAEyC,KAAM7E,EAAE6E,aAMtD,OAAO,EAAAkF,OAAG,OAEd,EAAAG,GAAA,GAAI,IAAMrT,KAAKwS,SAAS3I,KAAK,MAC7B,EAAAiJ,GAAA,GAAY,IAGA,KAAA7K,SAAiCjI,KAAK+S,OAAOxL,MACzD,OAAKwL,I,MACD,MAAM7N,EAAiB,GACvB,IAAK,MAAMoO,KAASP,EACF,QAAd,EAAAO,EAAMrL,gBAAQ,SAAEsL,QAASpK,GAAMjE,EAAKzB,KAAK0F,IAE7C,OAAO,QAAOjE,GAAMsO,KAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAcD,OAEvD,EAAAZ,GAAA,GAAY,IAGA,KAAAc,kBAAmB,EAAAtM,EAAA,IAAc,CAC7CtH,KAAKmB,QACLnB,KAAK+S,OACL/S,KAAKsS,cACN/K,MACC,EAAAS,EAAA,GAAa,MACb,EAAAqL,GAAA,GAAI,GAAInD,WACJlQ,KAAKwS,SAAS3I,KAAK,YAAYqG,uBAEnC,EAAA+C,GAAA,GAAU,EAAE9R,EAAS4R,EAAQnO,KACzB,GAAc,CACVc,cAAc,QAAYd,EAAKrB,MAC/BoC,YAAY,SACR,QAAWf,EAAKrB,KAAMqB,EAAK1D,UAAY,OAE3CgP,KAAM/O,EAAQ+O,KACdzI,MAAOtG,EAAQ2I,UAChBvC,MACC,OAAKyE,GACD+G,EAAOvL,OACF8L,I,UACG,OAAmB,IAAnBA,EAAMzH,YACJ1K,EAAQ8G,WACU,QAAhB,EAAA9G,EAAQ8G,gBAAQ,eAAE4L,MAAO1K,GACrBmK,EAAMrL,SAASP,SAASyB,SAE9BhI,EAAQ2I,SACN3I,EAAQ2I,WAAsB,QAAV,EAAAwJ,EAAMtF,YAAI,eAAEtK,KAChCvC,EAAQ2I,WAAsB,QAAV,EAAAwJ,EAAMtF,YAAI,eAAEV,cACnCtB,EAASvC,KAAMqK,GAAQA,EAAInE,WAAa2D,EAAM5P,UAKnE,EAAA2P,GAAA,GAAI,IAAMrT,KAAKwS,SAAS3I,KAAK,MAC7B,EAAAiJ,GAAA,GAAY,IAGA,KAAAiB,sBAAuB,EAAAzM,EAAA,IAAc,CACjDtH,KAAKmB,QACLnB,KAAK4T,mBACNrM,MACC,OAAI,EAAEpG,EAAS4R,M,MACX,MAAMiB,EAAS,GACTC,EAAa,IAAIlB,GAAQS,KAAK,CAACC,EAAGC,KAAK,UACzC,OAAU,QAAV,EAAM,QAAN,EAAAD,EAAEzF,YAAI,eAAEtK,UAAE,eAAEiQ,cAAoB,QAAN,EAAAD,EAAE1F,YAAI,eAAEtK,MAEhCwQ,GAAyB,QAAf,EAAA/S,EAAQ+S,eAAO,eAAE7S,QAC3BF,EAAQ+S,QACR,EAAC,WACP,KAAOD,EAAW5S,QAAQ,CACtB,MAAM8S,EAAQ,GACd,IAAIb,EAAQW,EAAWG,MACvB,KAAOD,EAAM9S,OAAS6S,EAAQ7S,UAEtB8S,EAAM9S,QACL8S,EAAM1K,KAAMN,IAAK,QAAC,OAAM,QAAN,EAAAA,EAAE6E,YAAI,eAAEtK,OAAiB,QAAV,EAAA4P,EAAMtF,YAAI,eAAEtK,QAIlDyQ,EAAM1Q,KAAK6P,GACXA,EAAQW,EAAWG,MAEnBD,EAAM9S,OAAS6S,EAAQ7S,QAC3B2S,EAAOvQ,KAAK0Q,GAEhB,OAAOH,KAgCXhU,KAAKqL,aACD,kBACArL,KAAKmS,QAAQlS,OAAOoJ,UAAW5E,IAEvBA,aAAmB,OAClBwN,GAAaxI,KAAMN,GAAM1E,EAAQ4P,IAAI3M,SAASyB,KAE/CnJ,KAAKsU,eAIjBtU,KAAKkG,KAAKgD,YACL3B,MAAK,OAAO4B,GAAMA,IAClBE,UAAU,IAAMrJ,KAAK4J,WAAW,KAzCzC,WACI,OAAO5J,KAAKoS,MAAMnJ,WAGtB,WACI,OAAOjJ,KAAKqS,MAAMpJ,WAGtB,cACI,OAAOjJ,KAAKuS,SAAStJ,WAGlB,QAAQxE,EAAmB,IAAI,IAClCzE,KAAKqS,MAAMxI,KEzMZ,SAA6BpF,GAChC,MAAMG,EAAO,IAAI,KAAU,CACvBlB,GAAI,IAAI,KAAYe,EAAQf,IAAM,IAClCH,KAAM,IAAI,KAAYkB,EAAQlB,KAAM,IACpCrC,SAAU,IAAI,KAAYuD,EAAQvD,UAClC+O,aAAc,IAAI,KAAYxL,EAAQwL,cACtCxI,MAAO,IAAI,KAAYhD,EAAQgD,OAC/BoJ,MAAO,IAAI,KAAYpM,EAAQoM,OAC/BC,YAAa,IAAI,KAAYrM,EAAQqM,aACrCnB,SAAU,IAAI,KAAYlL,EAAQkL,UAClC4E,KAAM,IAAI,MAAY,WACtB5D,QAAS,IAAI,KAAYlM,EAAQkM,SACjCD,WAAY,IAAI,KAAYjM,EAAQiM,YACpC8D,UAAW,IAAI,MAAY,WAC3BC,aAAc,IAAI,KAAYhQ,EAAQgQ,cACtCC,gBAAiB,IAAI,KAAYjQ,EAAQiQ,mBAiB7C,OAfA9P,EAAK+P,aAAatL,UAAWuL,IACzB,MAAML,EAAOK,EAAEL,KACTM,EAASD,EAAEJ,WACjBK,GAAUN,IACJ3P,EAAKkQ,WACD,CACInE,QAAS4D,EAAK7Q,IAAMmR,EAAOnR,GAC3BgN,WAAY6D,EAAKQ,OAASF,EAAOnR,GACjC+Q,aAAcI,EAAOnR,GACrBgR,gBAAiBG,EAAOE,OAE5B,CAAEC,WAAW,MAIpBpQ,EFyKaqQ,CAAoBxQ,IACpCzE,KAAKqL,aACD,cACArL,KAAKqS,MAAMpJ,WAAW0L,aAAatL,UAAU,IAAMrJ,KAAKkV,cAE5DlV,KAAKuS,SAAS1I,KAAKpF,GACnBzE,KAAKgH,SAAS6C,KAAK,CAAEqG,KAAMlQ,KAAKgH,SAASiC,WAAWiH,OAyBjD,QAAQhN,GACXlD,KAAKoS,MAAMvI,KAAK3G,GAGb,WAAWA,GACdlD,KAAKgH,SAAS6C,KAAK,OAAD,wBAAM7J,KAAKgH,SAASiC,YAAe/F,IAGlD,YACElD,KAAKqS,MAAMpJ,YAAYjJ,KAAKmV,UACjC,MAAM1Q,EAAUzE,KAAKuS,SAAStJ,WAC9BjJ,KAAKqS,MAAMpJ,WAAW6L,WAAW,OAAD,wBACxBrQ,GAAW,KACXA,aAAO,EAAPA,EAAS4M,iBAAkB,KAEnCrR,KAAKgH,SAAS6C,KAAK,CAAEqG,KAAMlQ,KAAKgH,SAASiC,WAAWiH,OAGjD,YACH0C,eAAewC,WAAW,wBAC1BxC,eAAewC,WAAW,gCAC1BpV,KAAKmV,UAGF,Y,QACHvC,eAAeyC,QACX,uBACA3C,KAAK4C,WAA+B,QAArB,EAAAtV,KAAKqS,MAAMpJ,kBAAU,eAAE/F,QAAS,KAEnD0P,eAAeyC,QACX,+BACA3C,KAAK4C,UAAUtV,KAAKgH,SAASiC,YAAc,KAE/CjJ,KAAKsS,YAAYzI,MAA0B,QAArB,EAAA7J,KAAKqS,MAAMpJ,kBAAU,eAAE/F,QAAS,IAGnD,WACElD,KAAKqS,MAAMpJ,YAAYjJ,KAAKmV,UACjCnV,KAAKqS,MAAMpJ,WAAW6L,WAAW,OAAD,UACzBpC,KAAKC,MACJC,eAAeC,QAAQ,yBAA2B,QAG1D7S,KAAK4J,WAAW,OAAD,QACXE,QAAS9J,KAAKkG,KAAKkH,SAAS1J,IACzBgP,KAAKC,MACJC,eAAeC,QAAQ,iCAAmC,QAKzD,c,oDACH7S,KAAKuV,iBACX,MAAMpU,EAAUnB,KAAKgH,SAASiC,WACxBrE,EAAO5E,KAAKqS,MAAMpJ,WAClBiF,QAAgB,QAClB,CACI2C,MAAO,QAAQ1P,EAAQ+O,OACvBvD,QAAS,8BAA8BxL,EAAQ+O,QAC3CtL,EAAK+E,IAAI,YAAYzG,cACjB,EAAAzB,GAAA,GAAOmD,EAAK+E,IAAI,QAAQzG,MAAO,iBACvCsS,KAAM,CAAE7I,QAAS,oBAErB3M,KAAK4K,SAEe,UAApBsD,aAAO,EAAPA,EAASwB,UACbxB,EAAQ1J,QAAQ,uCACVxE,KAAKyV,WAAW5P,MAAOsD,IAGzB,MAFA,QAAYA,GACZ+E,EAAQlI,QACFmD,IAEV+E,EAAQlI,WAGC,W,8CACT,MAAMpB,EAAO5E,KAAKqS,MAAMpJ,WACxB,IAAKrE,EAAM,KAAM,sBACjB,IAAKA,EAAKK,MACN,KAAM,mCAAkC,QAAiBL,GAAMtC,KAC3D,SAER,MAAMqN,EAAW/K,EAAK+E,IAAI,YAAYzG,MAChC8I,QAAiB,GAAc,CACjCtG,cAAc,QAAYd,EAAK+E,IAAI,QAAQzG,OAC3CyC,YAAY,QACRf,EAAK+E,IAAI,QAAQzG,MAAqC,GAA7B0B,EAAK+E,IAAI,YAAYzG,MAAa,KAE/DgN,KAAMlQ,KAAKgH,SAASiC,WAAWiH,OAChCtK,YACH,GAAIoG,EAASvC,KAAMN,GAAMA,EAAEwG,WAAaA,GACpC,KAAM,GAAGA,0CACb,GACI3D,EAASvC,KACJN,I,MACG,OAAAA,EAAEuH,cACD9L,EAAK1B,MAAMwN,aAA2B,QAAb,oBAAa,eAAEqE,UAGjD,KAAM,iCACV,MAAMlT,QDlQckK,ECkQa,IAAI,GAAQnH,EAAK1B,ODjQtD6I,EAAKrI,GAjBF,SACHA,EACAqI,EACA2J,EAA0B,SAE1B,OAAmB,UAAXA,EAAqB,MAAQ,OACjC,GAAG7D,MAAqB8D,mBAAmBjS,KAC3CqI,GACFxE,MAAK,OAAKyK,GAAS,IAAI,GAAQA,KASvB4D,CAAc7J,EAAKrI,GAAIqI,GA7B9B,SAAuBA,GAC1B,OAAO,SAAK,GAAG8F,KAAqB9F,GAAMxE,MACtC,OAAKyK,GAAS,IAAI,GAAQA,KA2BW6D,CAAc9J,ICiQOnG,YDlQvC,IAACmG,EC0QpB,OAPA/L,KAAKsU,YACLtU,KAAKyS,aAAe5Q,EACpB+Q,eAAeyC,QACX,8BACA3C,KAAK4C,UAAUzT,IAEnB7B,KAAK8V,QAAQ,WACNjU,IAGG,iB,8CACV,MAAMkU,EAAM/V,KAAK4K,QAAQkB,KAAK,IACxBjK,QAAegM,QAAQmI,KAAK,CAC9BD,EAAIE,kBAAkB/G,MACjB3H,MAAK,OAAO4B,GAAmB,SAAbA,EAAEuG,SACpB9J,YACLmQ,EAAIG,cAActQ,cAEtB,GAAuB,UAAnB/D,aAAM,EAANA,EAAQ6N,QAAmB,KAAM,iBACrC,MAAM9K,EAAOmR,EAAIE,kBAAkBrR,KAAK1B,MACxC,IAAK,MAAMiC,KAAOP,EACd,GAAIA,EAAKO,GAAM,KAAM,2BAEzB4Q,EAAI/P,W,6CAtSCkM,GAAkB,sC,0BAAlBA,EAAkB,QAAlBA,EAAkB,qBAFf,S,GAET,G,8GGda,gBACI,iBAAO,yBAAa,QAAS,SACjC,S,sBADiC,wC,0BAEjC,gBAAiB,iBAAO,eAAG,QAAS,SAAQ,S,sBAAR,6B,0BACpC,gBAAqB,iBAAO,iBAAK,QAAS,SAAU,S,sBAAV,+B,0BAC1C,gBACI,iBAAO,qBAAS,QAChB,SACJ,S,sBADI,0G,0BAEJ,gBACI,iBAAO,iBAAK,QAAS,SACzB,S,sBADyB,qC,yCApBjC,iBAGI,gEAEA,iBACA,iBACI,aAAG,iBAAO,gBAAI,QAAS,SAAS,QAChC,aAAG,iBAAO,qBAAS,QAAS,UAAe,QAC3C,cAAG,kBAAO,uBAAU,QAAS,UAAe,QAC5C,uBAGA,uBACA,uBACA,wBAIA,wBAGJ,QACJ,Q,wBAhB+B,6BACK,mCACC,mCACpB,sCAGF,4BACE,8BACI,kCAIJ,+BA6BtB,a,MAAMiE,EAwDT,YACsCtW,EAC1BC,EACAsW,G,MAF0B,KAAAvW,WAC1B,KAAAC,WACA,KAAAsW,WAzDL,KAAAC,SAAW,GAEF,KAAA9B,KAAOvU,KAAKH,SAAS0U,KAErB,KAAA+B,IAAMtW,KAAKH,SAASyW,IAEpB,KAAAC,aAAevW,KAAKH,SAAS0W,aAE7B,KAAAC,GAAKxW,KAAKH,SAAS2W,GAEnB,KAAAC,KAAOzW,KAAKH,SAAS4W,KAErB,KAAAC,SAAiC,QAAtB,EAAA1W,KAAKH,SAAS6W,gBAAQ,eAAEC,QAAQ,GAE3C,KAAAC,SAAoC,IAAzB5W,KAAKH,SAAS6W,SAEzB,KAAAG,SAAW7W,KAAKH,SAASgX,UAAY7W,KAAK8W,eAEnD,KAAAC,YAA0B,KA+BE,KAAAC,QAAU,IAAMhX,KAAKiX,WACrB,KAAAC,QAAU,IAAMlX,KAAKgG,QAC1B,KAAAmR,QAAU,IAAMnX,KAAKiX,WAClB,KAAAG,QAAU,IAAMpX,KAAKiX,WAhCtD,gBACI,OAAO,EAAAI,GAAA,GAAqD,KAAhCrX,KAAKH,SAASyX,WAAa,GAAW,CAC9DC,WAAW,IAOnB,eACI,OAAOzT,KAAKqM,KACR,EAAAC,GAAA,GACqC,KAAhCpQ,KAAKH,SAASyX,WAAa,GAC5B,IAAIxH,OAKhB,qBACI,OAAO9P,KAAKwX,SAAW,GACjB,UACAxX,KAAKwX,SAAW,GAChB,UACA,UAiBH,SAASrX,EAAgB,GACxBA,EAAQ,IACZC,WAAW,K,MACP,MAAMC,EAAkD,QAAzC,EAAAL,KAAKF,SAASQ,cAAcC,qBAAa,eAClDA,cACN,IAAKF,EAAQ,OAAOL,KAAKQ,WAAWL,GACpC,MAAMM,EACCC,SAASL,EAAOM,MAAMC,IAAK,IAAM,IADlCH,EAECC,SAASL,EAAOM,MAAME,KAAM,IAAM,IAEzCb,KAAKc,MAAQL,GAAc,GAAM,SAAW,MAC5CT,KAAKe,MAAQN,GAAc,GAAM,MAAQ,SAC1C,KAGM,W,8CAET,GADAT,KAAK8L,OACD9L,KAAKqW,SAAU,OACnB,MAAMlL,GAAM,SAAUnL,KAAKH,SAAS4X,OAAQ,oBAC5C,GAAItM,EAAK,CACLnL,KAAKqW,SAAW,aAChB,MAAMnI,QAAgB/C,EACjBuM,QAAQ,qBAAsB,CAAC1X,KAAKsW,MACpCzQ,MAAOsD,GAAM,MAClBnJ,KAAKqW,SACDnI,GAAWA,EAAQyJ,YAAczJ,EAAQyJ,YAAc,MAI5D,OACC3X,KAAK+W,aAAa/W,KAAKgG,QACtBhG,KAAK4X,UACV5X,KAAK+W,YAAc/W,KAAKoW,SAASyB,OAAO,CACpCC,iBAAkB9X,KAAKoW,SAClB3V,WACAsX,oBAAoB/X,KAAKgY,MACzBC,cAAc,CACX,CACIC,QAAwB,UAAflY,KAAKe,MAAoB,MAAQ,QAC1CoX,QAAwB,QAAfnY,KAAKc,MAAkB,SAAW,MAC3CsX,SAAUpY,KAAKe,OAAS,MACxBsX,SAAUrY,KAAKc,OAAS,cAIxCd,KAAK+W,YAAYuB,OAAOtY,KAAK4X,UAG1B,QACC5X,KAAK+W,cACL/W,KAAK+W,YAAYwB,UACjBvY,KAAK+W,YAAc,O,6CAjHlBZ,GAA0B,MAyDvB,MAAgB,4B,wBAzDnBA,EAA0B,kE,GAAA,M,KAgDxB,MAAS,G,uKAhDX,a,CAAS,+BAAT,a,CAAS,0BAAT,a,CAAS,6BAAT,e,ipBA9DL,iBAEI,qCAAc,EAAAc,aAGjB,QACD,mBAOA,kC,MATI,0DAMA,gD,kTAoDL,G,0BC9DS,eAA0C,SAAU,S,qBAAV,wB,0BAC1C,eACI,S,gCAEJ,S,qBAFI,gGAwCb,a,MAAMuB,EAWT,YACsC3Y,EAC1BC,GAD0B,KAAAD,WAC1B,KAAAC,WAXI,KAAA+H,OAAS7H,KAAKH,SAASgI,OACvB,KAAA0M,KAAOvU,KAAKH,SAAS0U,KACrB,KAAA9C,MAAQzR,KAAKH,SAAS4R,MACtB,KAAAC,IAAM1R,KAAKH,SAAS6R,IAW7B,SAASvR,EAAgB,GACxBA,EAAQ,IACZC,WAAW,K,MACP,MAAMC,EAAkD,QAAzC,EAAAL,KAAKF,SAASQ,cAAcC,qBAAa,eAClDA,cACN,IAAKF,EAAQ,OAAOL,KAAKQ,WAAWL,GACpC,MAAMM,EACCC,SAASL,EAAOM,MAAMC,IAAK,IAAM,IADlCH,EAECC,SAASL,EAAOM,MAAME,KAAM,IAAM,IAEzCb,KAAKc,MAAQL,GAAc,GAAM,SAAW,MAC5CT,KAAKe,MAAQN,GAAc,GAAM,QAAU,QAC5C,KAGP,sBACI,MAAO,I,6CAhCF+X,GAAwB,MAYrB,MAAgB,e,wBAZnBA,EAAwB,0UAvD7B,iBAUI,iBACA,iBACI,gBAAmC,SAAY,QAC/C,sBACA,sBAIJ,QACJ,S,MAhBI,gFADA,qBAUuC,yBACL,8BACC,iC,oeAyCxC,GC/BA,S,MAAMC,UAA4B,KA+FrC,YACY9N,EACAzE,EACAE,EACAyE,GAERxE,QALQ,KAAAsE,SACA,KAAAzE,OACA,KAAAE,YACA,KAAAyE,YAlGJ,KAAA6N,QAAU,IAAI,IAA0B,IACxC,KAAA1R,SAAW,IAAI,IAA6B,IAC5C,KAAA2R,OAAS,IAAI,IAA0B,IACvC,KAAAC,UAAY,IAAI,IAA0B,IAC1C,KAAA9N,UAA6B,GAC7B,KAAA+N,MAAQ,IAAI,IAAwB,GAEpC,KAAAC,gBAAiB,EAAAxR,EAAA,IAAc,CACnCtH,KAAK2K,OAAOzD,MACZlH,KAAK6Y,QACNtR,MACC,EAAA0L,GAAA,GAAU,EAAErL,KACR,GAAc,CACVlC,cAAc,SAAY,QAAW,IAAIoK,OACzCnK,YAAY,SAAY,QAAS,IAAImK,OACrCI,KAAM,OACNzI,MAAOG,EAAIlE,OAKP,KAAAqV,UAAY/Y,KAAK2K,OAAOzD,MAAMK,MAC1C,EAAA0L,GAAA,GAAWrL,IACP,SAAaA,EAAIlE,GAAI,CAAEC,KAAM,UAAW4D,MACpC,OAAK0E,IACAA,EAAEiC,mBAAmB8K,MAAQ/M,EAAEiC,QAAU,IAAI1I,IACzCyT,GAAe,IAAI,KAAK,OAAD,wBAAMA,GAAC,CAAEjL,KAAMpG,UAKvD,EAAAsR,GAAA,GAAYpT,GAAM,KAGd,KAAAiF,MAAQ/K,KAAK2K,OAAOzD,MAAMK,MAC9B,OAAKK,I,QAGD,GAFA5H,KAAK8K,UAAY,GACjB9K,KAAKkL,UAAU,QACVtD,EAAK,OACV,MAAMwF,EAAWpN,KAAKkG,KAAKmH,UAAU5D,KAChCH,GAAQA,EAAI5F,KAAOkE,EAAI0F,WAE5B,IAAKF,EAAU,OACf,MAAMG,GACe,QAAjB,EAAAH,EAASI,gBAAQ,eAAEC,mBACY,QAA/B,EAAAzN,KAAKkG,KAAKwH,aAAaF,gBAAQ,eAAEC,iBACrC,IAAKF,EAAW,OAChB,IAAInC,GAAU,SAAUmC,EAAW,kBAAkBnC,QACjDxD,EAAIlE,IAER1D,KAAKqL,aACD,aACAD,EACKE,SACAjC,UAAWkC,GACRvL,KAAKmZ,qBAAqB5N,GAAK,GAAIgC,KAG/CvN,KAAKqL,aAAa,kBAAmBD,EAAQK,QAC7CL,GAAU,SAAUmC,EAAW,kBAAkBnC,QAC7C,GAAGxD,EAAIlE,eAEX1D,KAAKqL,aACD,iBACAD,EAAQE,SAASjC,UAAWkC,GAAMvL,KAAK2Y,OAAO9O,KAAK0B,GAAK,MAE5DvL,KAAKqL,aAAa,qBAAsBD,EAAQK,WAIhD,KAAA2N,eAAgB,EAAA9R,EAAA,IAAc,CAClCtH,KAAK+Y,UACL/Y,KAAK0Y,QACL1Y,KAAK4Y,UACL5Y,KAAKgH,WACNO,MAEC,OAAI,EAAE6L,EAAOiG,EAAQ9O,MACjBvK,KAAK8K,UAAY,GACjB,IAAK,MAAM,GAAEpH,EAAE,SAAEmI,KAAcuH,EAAO,CAClC,MAAMkG,EAAUD,EAAOE,KAAMtN,GAAMvI,IAAOuI,GACpCuN,EAAcjP,EAASgP,KAAMtN,GAAMvI,IAAOuI,GAChDjM,KAAK8K,UAAUpH,GAAMmI,EACdyN,EAEGE,EACA,WACA,OAHA,OAIJ,eAEVxZ,KAAKyZ,aAAarG,MAWtBpT,KAAKgJ,OAGI,O,oDACHhJ,KAAKkG,KAAKgD,YAAY3B,MAAK,OAAO4B,GAAMA,IAAIvD,YAClD5F,KAAK4J,WAAW,CACZ8P,gBAA4D,IAA5C1Z,KAAKoG,UAAUuD,IAAI,uBAEvC3J,KAAKqL,aAAa,OAAQrL,KAAK+K,MAAM1B,aACrCrJ,KAAKqL,aAAa,UAAWrL,KAAKoZ,cAAc/P,aAChDrJ,KAAKqL,aACD,QACArL,KAAK+Y,UAAU1P,UAAW+J,GAAUpT,KAAKyZ,aAAarG,OAIvD,aAAauG,EAAgB,KAChC3Z,KAAKqL,aACD,wBACArL,KAAK8Y,eAAezP,UAAWF,GAC3BnJ,KAAK0Y,QAAQ7O,KAAKV,EAAE3D,IAAKyG,GAAMA,EAAE0D,aAGzC3P,KAAK4Z,SACD,OACA,IAAM5Z,KAAK6Y,MAAMhP,MAAK,IAAIiG,MAAO+J,WACjCF,GAID,cACH3Z,KAAK8Z,cAAc,QAGhB,WAAW3Y,GACdnB,KAAKgH,SAAS6C,KAAK,OAAD,wBAAM7J,KAAKgH,SAASiC,YAAe9H,IAGlD,sBACH,MAAE+B,GACFqK,GAEA,MAAMwM,GAAW7W,GAAS,IAAIsE,OACzBoN,IAAO,CAAC,OAAQ,WAAWlN,SAASkN,EAAEnI,WAErC2G,GAASlQ,GAAS,IAAIsE,OACvBoN,GACkB,SAAfA,EAAEnI,UACc,YAAfmI,EAAEnI,UAAqC,SAAXmI,EAAE1E,MAEvClQ,KAAK0Y,QAAQ7O,KAAKuJ,EAAM5N,IAAKoP,GAAMA,EAAE/M,QAAU+M,EAAEjF,WACjD3P,KAAK4Y,UAAU/O,KACXuJ,EACK5L,OAAQoN,IAAOA,EAAEoF,aACjBxU,IAAKoP,GAAMA,EAAE/M,QAAU+M,EAAEjF,WAElC3P,KAAKia,eAAeF,EAASxM,GAC7BvN,KAAKkM,QAAQ,SAAU,IAAMlM,KAAKoM,eAAgB,KAG9C,eACJ,MAAMpC,EAAY,GACZqC,EAAUrM,KAAKoG,UAAUuD,IAAI,uBAAyB,GAC5D,IAAK,MAAMuQ,KAAWla,KAAK8K,UAClB9K,KAAK8K,UAAUoP,KACpBlQ,EAAU,IAAIkQ,KAAa,CACvB5N,KACID,EAAQ,QAAQrM,KAAK8K,UAAUoP,OAC/B7N,EAAQ,GAAGrM,KAAK8K,UAAUoP,OAC1B9P,EAAgB,GAAGpK,KAAK8K,UAAUoP,MACtC3N,QAAS,KAGjBvM,KAAK2K,OAAO6B,UAAU,QAASxC,GAG3B,eAAe+P,EAAoBxM,G,QACvC,MAAMrI,EAAO,GACb,IAAK,MAAMiV,KAAUJ,EAAS,CAC1B,MAAMrT,EAAIyT,EAAOzT,EAAIyT,EAAOC,UACtBzT,EAAIwT,EAAOxT,EAAIwT,EAAOE,WAC5BnV,EAAKzB,KAAK,CACNgJ,SAAU,CACN/F,GAA0B,QAAvB,EAAAyT,EAAOG,wBAAgB,eAAE5S,SAAS,UAAW,EAAIhB,EAAIA,EACxDC,GAA0B,QAAvB,EAAAwT,EAAOG,wBAAgB,eAAE5S,SAAS,WAAY,EAAIf,EAAIA,GAE7DgG,QAASwJ,GACTpK,KAAM,OAAF,wBAAOoO,GAAM,CAAE1C,OAAQlK,MAGnCvN,KAAK2K,OAAOiC,YAAY,UAAW1H,GAG/B,aAAakO,GACjB,MAAMlO,EAAO,GACPmD,EAAU,GACVlH,EAAUnB,KAAKgH,SAASiC,WAC9B,IAAK,MAAMsR,KAAQnH,EAAO,CACtBlO,EAAKzB,KAAK,CACNgJ,SAAU8N,EAAK7W,GACfiJ,QAAS6L,GACT9L,OAAO,EACPX,KAAM,CACFlE,OAAQ0S,EAAK5W,KACbzD,OAAQF,KAAK8K,UAAUyP,EAAK1S,WAGpC,MAAM2S,EAAU,KAAY,QAAD,+BACvBxa,KAAK6K,UAAUsK,UACfnV,KAAK6K,UAAUjG,KAAKkQ,WAAW,CAC3BnF,SAAU4K,EAAK7W,GACf6Q,KAAMpT,EAAQsZ,OAAQ,UACtBxK,aAAc,eAEZjQ,KAAK6K,UAAU6P,eACrB,QACI,2BAA2BH,EAAK5W,MAAQ4W,EAAK7W,QAGrD2E,EAAQ5E,KAAK,CACTC,GAAI6W,EAAK7W,GACTmJ,OAAQ,QACRC,SAAU0N,IAEdnS,EAAQ5E,KAAK,CACTC,GAAI6W,EAAK7W,GACTmJ,OAAQ,WACRC,SAAU0N,IAGlBxa,KAAK2K,OAAOqC,WACR,QACAhN,KAAKgH,SAASiC,WAAWyQ,eAAiBrR,EAAU,IAExDrI,KAAK2K,OAAOiC,YAAY,QAAS1H,GACjClF,KAAKkM,QAAQ,SAAU,IAAMlM,KAAKoM,eAAgB,M,6CA7O7CqM,GAAmB,6C,0BAAnBA,EAAmB,QAAnBA,EAAmB,Y,GAAzB,G,eCEA,a,MAAMkC,EAcT,YAAoBhQ,GAAA,KAAAA,SAbJ,KAAAiQ,OAAS,IACrB5a,KAAK2K,OAAOkQ,aACR/W,KAAKrB,IAAI,GAAiC,IAA7BzC,KAAK2K,OAAOmQ,UAAUtU,MACnCxG,KAAK2K,OAAOmQ,UAAUrU,QAEd,KAAAsU,QAAU,IACtB/a,KAAK2K,OAAOkQ,aACR/W,KAAKtB,IAAI,EAAGxC,KAAK2K,OAAOmQ,UAAUtU,MAAQ,EAAI,MAC9CxG,KAAK2K,OAAOmQ,UAAUrU,QAEd,KAAAuU,MAAQ,IACpBhb,KAAK2K,OAAOkQ,aAAa,EAAG,CAAEnU,EAAG,GAAKC,EAAG,M,6CAZpCgU,GAA2B,W,wBAA3BA,EAA2B,qQAnChC,oBAA8C,gCAAS,EAAAC,WACnD,oBAAU,eAAG,QACjB,QACA,oBAA+C,gCAAS,EAAAG,YACpD,oBAAU,kBAAM,QACpB,QACA,oBAA+C,gCAAS,EAAAC,UACpD,oBAAU,qBAAS,QACvB,U,uVA2BD,G,0BChBa,wBAII,SACJ,S,yBAHI,iBAEA,gD,yCAjBZ,4BAQI,wBAGI,2E,iBAEA,+B,iBAMJ,QACJ,Q,wBAVQ,gDAIoB,kD,0BAoBpB,wBAII,SACJ,S,yBAHI,iBAEA,gD,yCAjBZ,4B,iBAQI,wBAGI,wE,iBAEA,+B,iBAMJ,QACJ,Q,8BAhBI,oEAMI,6CAIoB,+CA6BjC,a,MAAMC,UAAmC,KAyB5C,YACY/U,EACAyE,EACAwH,EACA+I,GAER7U,QALQ,KAAAH,OACA,KAAAyE,SACA,KAAAwH,UACA,KAAA+I,SA3BI,KAAA7N,UAAYrN,KAAKkG,KAAKiV,cAEtB,KAAA/N,SAAWpN,KAAKkG,KAAKkD,gBAErB,KAAA2E,OAAS/N,KAAKkG,KAAKkV,cAEnB,KAAAlU,MAAQlH,KAAK2K,OAAOzD,MAEpB,KAAAwC,SAAY9B,IACxB5H,KAAK2K,OAAOiC,YAAY,WAAY,IACpC5M,KAAKkM,QACD,YACA,IACIlM,KAAKmS,QAAQkJ,SAAS,GAAI,CACtBC,WAAYtb,KAAKkb,OACjBK,YAAa,CAAEvN,KAAMpG,EAAIlE,MAEjC,MAIQ,KAAA8X,YAAelS,GAAStJ,KAAKkG,KAAKkH,SAAW9D,EAWhD,W,oDACHtJ,KAAKkG,KAAKgD,YAAY3B,MAAK,OAAO4B,GAAMA,IAAIvD,YAClD5F,KAAKqL,aACD,cACArL,KAAKkb,OAAOO,cAAcpS,UAAWqS,GACjCA,EAAOC,IAAI,QACL3b,KAAK2K,OAAOjB,SAASgS,EAAO/R,IAAI,SAChC,Q,6CAzCTsR,GAA0B,+C,wBAA1BA,EAA0B,imB,GAAA,MAjE/B,iBACI,mC,iBAqBA,mC,iBAqBJ,S,aArCS,0EAqBA,qE,qUAsCV,G;;;;;;;;ACvDP,MAAM,GAAM,CAAC,kBACP,GAAM,CAAC,aACPW,GAAM,CAAC,SACPC,GAAM,WAAc,MAAO,CAAEC,cAAe,MAC5CC,GAAM,CAAC,KACPC,GAAmC,IAAI,MAAe,mCAAoC,CAC5FC,WAAY,OACZC,QAAS,KAAM,CAAGC,oBAAoB;;;;;;;;AAW1C,IAAIC,GAAe,EAEnB,MAAMC,GAAkC,CACpCpY,QAAS,KACTC,aAAa,SAAW,IAAMoY,IAC9BnY,OAAO,GAGX,MAAMoY,GACF,YAEAC,EAEAC,GACIzc,KAAKwc,OAASA,EACdxc,KAAKyc,QAAUA,GAKvB,MAAMC,GACF,YAAYC,GACR3c,KAAK2c,YAAcA,GAG3B,MAAMC,IAA2B,SAAc,SAAW,SAAmB,QAAcF,KAAsB,W,mBAE3GJ,UAAuBM,GACzB,YAAYC,EAAYC,EAAeC,EAAoBC,EAAUC,EAAUC,GAC3E7W,MAAMwW,GACN7c,KAAK8c,cAAgBA,EACrB9c,KAAK+c,mBAAqBA,EAC1B/c,KAAKid,SAAWA,EAChBjd,KAAKkd,eAAiBA,EACtBld,KAAKiD,UAAakG,MAClBnJ,KAAKmd,WAAa,OAClBnd,KAAKod,UAAY,uBAAsBhB,GACvCpc,KAAKqd,WAAY,EACjBrd,KAAKsd,UAAW,EAEhBtd,KAAK2D,KAAO,KAEZ3D,KAAK0D,GAAK1D,KAAKod,UAEfpd,KAAKud,cAAgB,QAErBvd,KAAKwd,UAAY,KAEjBxd,KAAKyd,eAAiB,KAEtBzd,KAAK0d,OAAS,IAAI,MAMlB1d,KAAK2d,aAAe,IAAI,MACxB3d,KAAKgd,SAAWtc,SAASsc,IAAa,EAG1C,eAAiB,OAAOhd,KAAKqd,UAC7B,aAAana,GAASlD,KAAKqd,WAAY,SAAsBna,GAE7D,cAAgB,OAAOlD,KAAKsd,SAC5B,YAAYpa,GACRlD,KAAKsd,UAAW,SAAsBpa,GACtClD,KAAK+c,mBAAmBa,eAG5B,cAAgB,MAAO,GAAG5d,KAAK0D,IAAM1D,KAAKod,kBAC1C,qBACIpd,KAAK8c,cACAe,QAAQ7d,KAAK2c,aAAa,GAC1BtT,UAAUyU,IAKS,aAAhBA,GAA8C,YAAhBA,EAC9B9d,KAAK+d,cAAczd,cAAc0d,QAE3BF,GAMNjQ,QAAQoQ,UAAUC,KAAK,IAAMle,KAAKmd,gBAI9C,cACInd,KAAK8c,cAAcqB,eAAene,KAAK2c,aAG3C,eAAezN,GAIXA,EAAMkP,kBACNpe,KAAK2d,aAAalO,OAIdzP,KAAKid,SAASd,mBACdnc,KAAK+d,cAAczd,cAAcmc,QAAUzc,KAAKyc,SAIpDzc,KAAKyc,QAAUzc,KAAK+d,cAAczd,cAAcmc,QAGhDzc,KAAKqe,oBAGT,cAAcnP,GAQVA,EAAMkP,kBAGV,WAAWlb,GACPlD,KAAKyc,UAAYvZ,EAGrB,iBAAiBE,GACbpD,KAAKiD,UAAYG,EAGrB,kBAAkBA,GACdpD,KAAKmd,WAAa/Z,EAGtB,iBAAiBkb,GACbte,KAAKmD,SAAWmb,EAChBte,KAAK+c,mBAAmBa,eAG5B,MAAMzc,EAASod,GACPA,EACAve,KAAK8c,cAAc0B,SAASxe,KAAK+d,cAAeQ,EAAQpd,GAGxDnB,KAAK+d,cAAczd,cAAc0d,MAAM7c,GAI/C,SACInB,KAAKyc,SAAWzc,KAAKyc,QACrBzc,KAAKiD,UAAUjD,KAAKyc,SAKxB,mBACIzc,KAAKiD,UAAUjD,KAAKyc,SACpBzc,KAAK0d,OAAOjO,KAAK,IAAI8M,GAAqBvc,KAAMA,KAAKyc,UAGzD,qBAMIzc,KAAK+c,mBAAmB0B,iB,OAGhCnC,EAAeoC,UAAO,SAAgCC,GAAK,OAAO,IAAKA,GAAKrC,GAAgB,MAAyB,OAAoB,MAAyB,OAAsB,MAAyB,OAA2B,MAAyB,YAAa,MAAyBN,IAAmC,MAAyB,MAAuB,KAC9XM,EAAesC,UAAqB,MAAyB,CAAE1O,KAAMoM,EAAgBuC,UAAW,CAAC,CAAC,qBAAsBC,UAAW,SAA8BC,EAAIC,GAI/J,GAJ+K,EAALD,IACxK,KAAmB,GAAK,GACxB,KAAmB,GAAK,GACxB,KAAmBnD,GAAK,IACjB,EAALmD,EAAQ,CACV,IAAIE,EACJ,MAAsBA,EAAK,WAA0BD,EAAIE,SAAWD,EAAGE,OACvE,MAAsBF,EAAK,WAA0BD,EAAII,YAAcH,EAAGE,OAC1E,MAAsBF,EAAK,WAA0BD,EAAIjB,cAAgBkB,EAAGE,SAC3EE,UAAW,CAAC,EAAG,oBAAqBC,SAAU,GAAIC,aAAc,SAAqCR,EAAIC,GAAgB,EAALD,IACrH,MAAsB,KAAMC,EAAItb,IAChC,MAAmB,WAAYsb,EAAI7b,SAAW,MAAQ,EAAtD,CAAyD,aAAc,KAAvE,CAA6E,kBAAmB,MAChG,MAAmB,cAAe6b,EAAIvC,QAAtC,CAA+C,eAAgBuC,EAAI7b,SAAnE,CAA6E,gCAAsD,UAArB6b,EAAIzB,cAAlH,CAA6I,0BAAkD,mBAAvByB,EAAI9B,kBAC3KsC,OAAQ,CAAErc,SAAU,WAAYsc,cAAe,gBAAiBC,MAAO,QAAS1C,SAAU,WAAYrZ,KAAM,OAAQD,GAAI,KAAM6Z,cAAe,gBAAiBC,UAAW,CAAC,aAAc,aAAcC,eAAgB,CAAC,kBAAmB,kBAAmBkC,SAAU,WAAYlD,QAAS,WAAamD,QAAS,CAAElC,OAAQ,SAAUC,aAAc,gBAAkBkC,SAAU,CAAC,kBAAmB5X,SAAU,CAAC,MAA0B,CAACoU,KAAmC,OAAoCyD,mBAAoB/D,GAAKgE,MAAO,GAAIC,KAAM,GAAIC,OAAQ,CAAC,CAAC,EAAG,0BAA2B,CAAC,QAAS,IAAK,CAAC,EAAG,wBAAyB,CAAC,YAAa,IAAK,CAAC,OAAQ,WAAY,OAAQ,SAAU,EAAG,yBAA0B,sBAAuB,EAAG,KAAM,WAAY,WAAY,UAAW,WAAY,SAAU,SAAU,CAAC,QAAS,IAAK,CAAC,EAAG,oCAAqC,CAAC,iBAAkB,IAAK,CAAC,EAAG,0BAA2B,CAAC,aAAc,GAAI,EAAG,0BAA2B,sBAAuB,EAAG,mBAAoB,oBAAqB,oBAAqB,kBAAmB,sBAAuB,CAAC,EAAG,qBAAsB,sCAAuC,CAAC,EAAG,2BAA4B,EAAG,qBAAsB,CAAC,eAAgB,IAAK,CAAC,EAAG,UAAW,SAAUC,SAAU,SAAiCnB,EAAIC,GAsB1yC,GAtB0zC,EAALD,IACnzC,QACA,MAAsB,EAAG,QAAS,EAAG,GACrC,MAAsB,EAAG,MAAO,EAAG,GACnC,MAAsB,EAAG,QAAS,EAAG,GACrC,MAAkB,SAAU,SAAyDoB,GAAU,OAAOnB,EAAIoB,eAAeD,IAAzH,CAAqI,QAAS,SAAwDA,GAAU,OAAOnB,EAAIqB,cAAcF,KACzO,QACA,MAAsB,EAAG,MAAO,EAAG,GACnC,MAAiB,EAAG,MAAO,GAC3B,MAAsB,EAAG,MAAO,GAChC,MAAiB,GAAI,MAAO,IAC5B,QACA,QACA,QACA,MAAsB,GAAI,OAAQ,GAAI,IACtC,MAAkB,oBAAqB,WAAwE,OAAOnB,EAAIsB,uBAC1H,MAAsB,GAAI,OAAQ,IAClC,MAAc,GAAI,QAClB,QACA,MAAoB,IACpB,QACA,SACO,EAALvB,EAAQ,CACV,MAAMwB,EAAM,MAAmB,GACzBC,EAAM,MAAmB,IAC/B,MAAmB,MAAOxB,EAAIyB,SAC9B,MAAiB,GACjB,MAAmB,uCAAwCD,EAAIE,cAAgBF,EAAIE,YAAYC,QAC/F,MAAiB,GACjB,MAAkB,KAAM3B,EAAIyB,QAA5B,CAAqC,WAAYzB,EAAIW,SAArD,CAA+D,WAAYX,EAAIhC,SAA/E,CAAyF,UAAWgC,EAAIvC,QAAxG,CAAiH,WAAYuC,EAAI7b,UACjI,MAAmB,OAAQ6b,EAAIrb,KAA/B,CAAqC,eAAgBqb,EAAIvC,QAAQmE,WAAjE,CAA6E,aAAc5B,EAAIxB,UAA/F,CAA0G,kBAAmBwB,EAAIvB,gBACjI,MAAiB,GACjB,MAAkB,mBAAoB8C,EAAtC,CAA2C,oBAAqBvB,EAAIS,eAAiBT,EAAI7b,SAAzF,CAAmG,qBAAqB,EAAxH,CAA8H,kBAAmB,GAAjJ,CAAqJ,qBAAsB,MAAuB,GAAI0Y,OACrMgF,WAAY,CAAC,KAAkB,OAA2BlY,OAAQ,CAAC,w7FAAy7FmY,cAAe,EAAGC,gBAAiB,I,qBAkIliGC,G,OAENA,EAAuCtC,UAAO,SAAwDC,GAAK,OAAO,IAAKA,GAAKqC,IAC5HA,EAAuCC,UAAqB,MAAwB,CAAE/Q,KAAM8Q,IAC5FA,EAAuCE,UAAqB,MAAwB,I,qBAS9EC,G,OAENA,EAAqBzC,UAAO,SAAsCC,GAAK,OAAO,IAAKA,GAAKwC,IACxFA,EAAqBF,UAAqB,MAAwB,CAAE/Q,KAAMiR,IAC1EA,EAAqBD,UAAqB,MAAwB,CAAEE,QAAS,CAAC,CAClEJ,GACA,KACA,KACA,OACDA,GAAwC,Q,MCxV5C,S,MAAMK,UAAgC,KA6BzC,YACY1W,EACA2W,EACA3I,EACA4I,EACArG,EACA/I,EACAhM,EACAD,EACAE,GAERC,QAVQ,KAAAsE,SACA,KAAA2W,KACA,KAAA3I,SACA,KAAA4I,SACA,KAAArG,SACA,KAAA/I,UACA,KAAAhM,UACA,KAAAD,OACA,KAAAE,YApCI,KAAAiO,IAAMrU,KAAK2K,OAAOhD,QAElB,KAAAgB,OAAS3I,KAAK2K,OAAOjC,WAErB,KAAAoS,UAAY9a,KAAK2K,OAAO7C,cAExB,KAAAG,SAAWjI,KAAK2K,OAAO5C,aAEvB,KAAAM,QAAUrI,KAAK2K,OAAOvC,YAEtB,KAAAI,OAASxI,KAAK2K,OAAOpC,WAErB,KAAApH,QAAUnB,KAAK2K,OAAOxJ,QAEtB,KAAAiG,QAAUpH,KAAK2K,OAAOvD,QAEtB,KAAAwC,WAAc4X,GAAMxhB,KAAK2K,OAAOf,WAAW4X,GAE9C,YAAYC,G,8CACrB,MAAMtgB,QAAgBnB,KAAKmB,QAAQoG,MAAK,EAAAma,EAAA,GAAK,IAAI9b,YAC3CsC,EAAWuZ,EAEXtgB,EAAQ+G,QAAQV,OAAQ2B,GAAY,UAANA,GAAuB,YAANA,IAC/C,IAFA,QAAO,IAAKhI,EAAQ+G,SAAW,GAAK,QAAS,YAGnDlI,KAAK4J,WAAW,CAAE1B,cAiBT,W,oDACHlI,KAAKmG,QAAQ+C,YAAY3B,MAAK,OAAO4B,GAAMA,IAAIvD,YACrD5F,KAAK2hB,aAAY,GACjB3hB,KAAKqL,aACD,cACArL,KAAKkb,OAAOO,cAAcpS,UAAiBqS,IAAW,QAAD,+BAKjD,GAJIA,EAAOC,IAAI,UACX3b,KAAK2K,OAAOjB,SAASgS,EAAO/R,IAAI,UAEpC3J,KAAK2K,OAAOiC,YAAY,WAAY,IAChC8O,EAAOC,IAAI,SAAU,CACrB,MAAM5b,EAAQC,KAAKmG,QAAQsD,KAAKiS,EAAO/R,IAAI,UAC3C,IAAK5J,EAAO,OACZC,KAAK4hB,YAAY7hB,QACd,GAAI2b,EAAOC,IAAI,QAAS,CAC3B,IAAIpH,EAAOvU,KAAKoG,UAAUlD,MAAM,eAKhC,GAJKqR,GAAQmH,EAAO/R,IAAI,UAAY4K,EAAKQ,QACrCR,EAAO,KACPA,QAAa,QAAUmH,EAAO/R,IAAI,SAAS/D,cAE1C2O,EACD,OAAO,QACH,8BAA8BmH,EAAO/R,IAAI,WAEjD3J,KAAK6hB,WACDtN,aAAgByE,MAAQzE,EAAK,GAAKA,GACpC1O,MAAOsD,KACL,QAAY,oBAAoBuS,EAAO/R,IAAI,WAC3C3J,KAAKmS,QAAQkJ,SAAS,GAAI,CACtBC,WAAYtb,KAAKkb,OACjBK,YAAa,YAIrBvb,KAAKkM,QAAQ,kBAAmB,KAC5BlM,KAAK2K,OAAOiC,YAAY,WAAY,YAOhD,YAAY7M,G,MAChBC,KAAK2K,OAAOjB,SAA2C,QAAlC,EAAA1J,KAAKkG,KAAK6D,YAAYhK,EAAM0H,cAAM,eAAE/D,IACzD,MAAMoe,EAAe,CACjBrV,SAAU1M,EAAM8H,OAChB8E,QAAS,KACTZ,KAAM,CACF3E,QAAS,GAAGrH,EAAMgG,cAAgBhG,EAAM4D,iBAGhD3D,KAAKkM,QAAQ,kBAAmB,IAC5BlM,KAAK2K,OAAOiC,YAAY,WAAY,CAACkV,KAI/B,WAAWvN,G,sDACrB,IAAIwN,EAAsB/hB,KAAKkG,KAAKwH,aAAaF,SAC5CwU,kBACL,IAAKD,EAAgB,OACS,iBAAnBA,IACPA,EAAiB,CACbxU,UAAWwU,EACXE,OAAQ,qBAGhB,MAAM9W,GAAM,SAAU4W,EAAexU,UAAWwU,EAAeE,QACzDC,SACI/W,EAAIuM,QAAQ,cAAe,CAACnD,EAAKQ,MAAOR,EAAK7Q,MACrD8B,IAAKyG,GAAM,IAAI,IAAYA,IAM7B,GALAiW,EAAU1O,KACN,CAACC,EAAGC,IACAqO,EAAeI,SAASC,QAAQ3O,EAAEvD,MAClC6R,EAAeI,SAASC,QAAQ1O,EAAExD,SAErCgS,aAAS,EAATA,EAAW7gB,QACZ,KAAM,kCAEVrB,KAAK2K,OAAOjB,SAAqD,QAA5C,EAAA1J,KAAKkG,KAAK6D,YAAY,CAAa,QAAZ,EAAAmY,EAAU,UAAE,eAAEhb,eAAO,eAAExD,IACnE,MAAM2e,EAAMH,EAAU,GAAGzhB,UACnB,iBAAE6Z,GAAqB4H,EAAU,GACjCJ,EAAe,CACjBrV,SAC0B,aAAtByV,EAAU,GAAGhS,KACP,CACIxJ,GAAG4T,aAAgB,EAAhBA,EAAkB5S,SAAS,UACxB,EAAI2a,EAAI3b,EACR2b,EAAI3b,EACVC,GAAG2T,aAAgB,EAAhBA,EAAkB5S,SAAS,WACxB,EAAI2a,EAAI1b,EACR0b,EAAI1b,GAEd0b,EACV1V,QAC0B,aAAtBuV,EAAU,GAAGhS,KACP,KACA,KACVnE,KAAM,CACF3E,QAAS,GAAGmN,EAAK5Q,eACjB2e,OAAQJ,EAAU,GAAGxL,SACrBY,UAAW4K,EAAU,GAAG5K,YAGhCtX,KAAKkM,QAAQ,kBAAmB,KAC5BlM,KAAK2K,OAAOiC,YAAY,WAAY,CAACkV,S,6CAnJpCT,GAAuB,qG,wBAAvBA,EAAuB,iDAFrB,CAAC3W,GAAsB+N,GAAqBxL,KAAoB,6V,GAAA,MAzCvE,mB,uHASA,mCAGA,kCAIA,kBAII,oBACA,+BAGI,yCAAiB,EAAA0U,YAAA,K,kBACpB,QACL,S,eAzBI,8BAAmB,qDAAnB,CAAmB,yDAAnB,CAAmB,8BAAnB,CAAmB,kCAAnB,CAAmB,gCAAnB,CAAmB,+BAsBf,+G,2KAoBT;;;;;;;6BCzDC,kBACI,SACJ,S,yBAF0E,mCAAzB,qBAC7C,gC,0BAIJ,kBACI,sBACA,iBAAkB,SAAe,QACrC,S,yBAFc,8BACQ,wB,gFCRvB,a,MAAMY,EALb,cASoB,KAAAlW,QAA+B,CAC3C,CAAE3I,GAAI,SAAUC,KAAM,SAAU6e,OAAQ,UAAWC,MAAM,GACzD,CAAE/e,GAAI,YAAaC,KAAM,YAAa6e,OAAQ,UAAWC,MAAM,GAC/D,CAAE/e,GAAI,eAAgBC,KAAM,eAAgB6e,OAAQ,UAAWC,MAAM,GACrE,CAAE/e,GAAI,SAAUC,KAAM,gBAAiB6e,OAAQ,WAC/C,CAAE9e,GAAI,QAASC,KAAM,QAAS6e,OAAQ,YAG1B,KAAAE,UAAiC,CAC7C,CAAEhf,GAAI,GAAIC,KAAM,gBAAiB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,wBAC3D,CAAEjf,GAAI,GAAIC,KAAM,oBAAqB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,2BAC/D,CAAEjf,GAAI,GAAIC,KAAM,kBAAmB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,uBAC7D,CAAEjf,GAAI,GAAIC,KAAM,eAAgB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,wBAC1D,CAAEjf,GAAI,GAAIC,KAAM,mBAAoB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,wBAC9D,CAAEjf,GAAI,GAAIC,KAAM,gBAAiB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,6BAC3D,CAAEjf,GAAI,GAAIC,KAAM,YAAa6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,yBACvD,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACpD,CAAEjf,GAAI,GAAIC,KAAM,YAAa6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,6BACvD,CAAEjf,GAAI,GAAIC,KAAM,UAAW6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACrD,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,yBACpD,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACpD,CAAEjf,GAAI,GAAIC,KAAM,eAAgB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,yBAC1D,CAAEjf,GAAI,GAAIC,KAAM,eAAgB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BAC1D,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACpD,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACpD,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACpD,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACpD,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACpD,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACpD,CAAEjf,GAAI,GAAIC,KAAM,SAAU6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BACpD,CAAEjf,GAAI,GAAIC,KAAM,gBAAiB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,0BAC3D,CAAEjf,GAAI,GAAIC,KAAM,iBAAkB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,uBAC5D,CAAEjf,GAAI,GAAIC,KAAM,eAAgB6R,KAAM,CAAEtF,KAAM,MAAOyS,IAAK,2B,6CApCrDJ,I,wBAAAA,EAAqB,qWDTlC,iBACI,iBAAiB,iDACb,oBACI,sBACJ,QACJ,QACA,iBACI,iBAAkB,gBAAI,QAC1B,QACA,iBACI,wBAGJ,QACA,iBACI,yBAIJ,QACJ,S,MAjBsB,mCAOuB,oCAIhB,8BACc,wC,svECNpC,GC2BA,S,MAAMK,UAAyB,KAIlC,YACY1c,EACAE,EACA+L,EACAvH,GAERvE,QALQ,KAAAH,OACA,KAAAE,YACA,KAAA+L,UACA,KAAAvH,UAKL,WACH5K,KAAKoG,UAAUyK,MAAQ,UACvB,IAAI3J,EAAQ,GACR2b,eACA3b,EAAQ2b,aAAahQ,QAAQ,gBAE5B3L,GACDlH,KAAKmS,QAAQkJ,SAAS,CAAC,eAE3Brb,KAAKkM,QAAQ,UAAW,IAAMlM,KAAK8iB,eAAgB,MAGvD,sBACI,MAAMC,EAAWF,aAAahQ,QAAQ,eAChC3L,EAAQlH,KAAKkG,KAAK6D,YAAY,CAACgZ,IACrC,IAAK7b,EACD,OAEJ,MAAMkG,EAAWpN,KAAKkG,KAAKmH,UAAU5D,KACjCH,GAAOA,EAAI5F,KAAOwD,EAAMoG,WAE5B,OAAKF,EAGEA,EAAS4V,cAAcC,WAAa,QAH3C,EASG,eACHjjB,KAAKkM,QAAQ,UAAW,IAAMlM,KAAK8iB,eAAgB,MAMhD,gBACH,QAAI,UAAW,uBACf9iB,KAAK4K,QAAQsY,WACb,IAAIhc,EAAQ,GACR2b,eACA3b,EAAQ2b,aAAahQ,QAAQ,gBAE5B3L,EAGDlH,KAAKmS,QAAQkJ,SAAS,CAAC,WAAY,QAAS,CAAEE,YAAa,CAAErU,WAF7DlH,KAAKmS,QAAQkJ,SAAS,CAAC,eAI3Brb,KAAK4K,QAAQsY,WACbljB,KAAKoG,UAAU+c,KAAK,eAAe,IAAIrT,MAAOsT,Y,6CA/DzCR,GAAgB,kD,wBAAhBA,EAAgB,8JAzBrB,kBACI,2BACJ,QACA,kBACI,4BACJ,QACA,oBACI,2BACJ,U,4JAiBD,G,eCSA,a,MAAMS,G,6CAAAA,I,wBAAAA,I,4BAZA,CACL,KACA,KACA,KACA,KACAlC,GACA,MACA,MACA,O,GAID,GChCP,MAAMmC,GAAkB,CACpB,CAAEC,KAAM,GAAIC,UAAWZ,IACvB,CAAEW,KAAM,eAAgBC,UAAWZ,KAqBhC,a,MAAMa,G,6CAAAA,I,wBAAAA,I,4BAZA,CACL,KACA,cAAsBH,IACtB,KACA,KACA,KACAD,O,GAMD","file":"apps_visitor-kiosk_src_app_explore_explore_module_ts.js","sourcesContent":["import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            *ngIf=\"space\"\n            name=\"space-info\"\n            [id]=\"space.id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 mb-2\">{{ space.display_name || space.name }}</h4>\n                <div capacity class=\"text-sm\" *ngIf=\"space.capacity >= 0\">\n                    <span>Capacity: </span>{{ space.capacity }}\n                    {{ space.capacity === 1 ? 'person' : 'people' }}\n                </div>\n                <div class=\"flex flex-wrap my-2 text-sm\">\n                    <div\n                        status\n                        [class]=\"\n                            'capitalize rounded p-1 px-2 text-light ' + status\n                        \"\n                    >\n                        {{ status }}\n                    </div>\n                    <div available-until *ngIf=\"status !== 'not-bookable'\">\n                        {{ available_until }}\n                    </div>\n                </div>\n                <div features *ngIf=\"space.features?.length > 0\">\n                    <h4 class=\"m-0 mb-2\">Room Features</h4>\n                    <ul class=\"pl-2\">\n                        <li\n                            class=\"text-sm\"\n                            *ngFor=\"let feature of space.features\"\n                        >\n                            {{ feature }}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import defaultLocale from \"../locale/en-US/index.js\";\nvar defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\n/**\n * @name formatDuration\n * @category Common Helpers\n * @summary Formats a duration in human-readable format\n *\n * @description\n * Return human-readable duration string i.e. \"9 months 2 days\"\n *\n * @param {Duration} duration - the duration to format\n * @param {Object} [options] - an object with options.\n\n * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format\n * @param {boolean} [options.zero=false] - should be zeros be included in the output?\n * @param {string} [options.delimiter=' '] - delimiter string\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {string} the formatted date string\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Format full duration\n * formatDuration({\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds\n *\n * @example\n * // Format partial duration\n * formatDuration({ months: 9, days: 2 })\n * //=> '9 months 2 days'\n *\n * @example\n * // Customize the format\n * formatDuration(\n *   {\n *     years: 2,\n *     months: 9,\n *     weeks: 1,\n *     days: 7,\n *     hours: 5,\n *     minutes: 9,\n *     seconds: 30\n *   },\n *   { format: ['months', 'weeks'] }\n * ) === '9 months 1 week'\n *\n * @example\n * // Customize the zeros presence\n * formatDuration({ years: 0, months: 9 })\n * //=> '9 months'\n * formatDuration({ years: 0, months: 9 }, null, { zero: true })\n * //=> '0 years 9 months'\n *\n * @example\n * // Customize the delimiter\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\n * //=> '2 years, 9 months, 3 weeks'\n */\n\nexport default function formatDuration(duration) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var format = options.format || defaultFormat;\n  var locale = options.locale || defaultLocale;\n  var zero = options.zero || false;\n  var delimiter = options.delimiter || ' ';\n  var result = format.reduce(function (acc, unit) {\n    var token = \"x\".concat(unit.replace(/(^.)/, function (m) {\n      return m.toUpperCase();\n    }));\n    var addChunk = typeof duration[unit] === 'number' && (zero || duration[unit]);\n    return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;\n  }, []).join(delimiter);\n  return result;\n}","import { Component, forwardRef, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Identity } from '@placeos/common';\nimport { formatDuration } from 'date-fns';\nimport * as dayjs from 'dayjs';\n\n\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                        {{ option.name }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        const date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for (const option of this.specialPreprops) {\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(option / 60),\n                          minutes: option % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(option / 60), minutes: option % 60 })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(time / 60),\n                          minutes: time % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(time / 60), minutes: time % 60 })}`,\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { CalendarEvent, generateEventForm, saveEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { querySpaceAvailability } from '@placeos/calendar';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                        />\n                        <mat-error>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.duration\">\n                        <label>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button mat-button (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public booking: CalendarEvent;\n    public form: FormGroup;\n    public loading = '';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.booking = new CalendarEvent({\n            attendees: [{ ...(this._data.space || {}), resource: true } as any],\n        });\n        this.form = generateEventForm(this.booking);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        const on_error = (msg) => {\n            this.loading = '';\n            notifyError(msg);\n            this._dialog_ref.disableClose = false;\n        };\n        if (!this.form.valid) {\n            const list = [];\n            for (const key in this.form.controls) {\n                if (this.form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            throw on_error(\n                `Some form fields are not valid: [${list.join(', ')}]`\n            );\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = 'Checking space availability...';\n        const spaces = await querySpaceAvailability({\n            system_ids: this.form.controls.resources.value\n                ?.map((s) => s.id)\n                .join(','),\n            period_start: Math.floor(this.form.value.date / 1000),\n            period_end:\n                Math.floor(this.form.value.date / 1000) +\n                this.form.value.duration * 60,\n        })\n            .toPromise()\n            .catch((e) => {\n                on_error(\n                    'Space is unavailble for the selected time and duration'\n                );\n                throw e;\n            });\n        if (spaces.length <= 0) {\n            return on_error(\n                'Space is unavailble for the selected time and duration'\n            );\n        }\n        this.loading = 'Creating booking...';\n        await saveEvent(new CalendarEvent(this.form.value))\n            .toPromise()\n            .catch((e) => {\n                on_error('Error creating booking.');\n                throw e;\n            });\n        notifySuccess(\n            `Successfully created booking in ${\n                this._data.space.display_name || this._data.space.name\n            }`\n        );\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({});\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._spaces.list,\n    ]).pipe(\n        map(([level, spaces]) =>\n            spaces.filter((space) => space.zones.includes(level?.id))\n        )\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (!options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            if (this._settings.get('app.explore.display_devices') !== false) {\n                this.setOptions({ disable: ['devices'] });\n            }\n            if (this._settings.get('app.explore.disable_actions')) {\n                this.setOptions({\n                    disable_actions: this._settings.get(\n                        'app.explore.disable_actions'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_labels')) {\n                this.setOptions({\n                    disable_labels: this._settings.get(\n                        'app.explore.disable_labels'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_features')) {\n                this.setOptions({\n                    disable_features: this._settings.get(\n                        'app.explore.disable_features'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_styles')) {\n                this.setOptions({\n                    disable_styles: this._settings.get(\n                        'app.explore.disable_styles'\n                    ),\n                });\n            }\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) {\n            this._level.next(lvl);\n        }\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    HashMap,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            console.log('Spaces:', list);\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] === 'busy' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._dialog.open(ExploreBookingModalComponent, {\n            data: { space },\n        });\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            features.push({\n                location: space.map_id,\n                hover: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    ambient_temp: number;\n    people_count: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends BaseClass {\n    private _statuses: HashMap<string> = {};\n    private _labels: HashMap<ViewerLabel> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings.area_management ||\n                this._org.organisation.bindings.area_management;\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            console.log('Bind:', binding);\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, { name: 'map_regions' }).toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (areas) {\n                for (const area of areas) {\n                    this._capacity[area.id] = area.properties?.capacity || 100;\n                    this._location[area.id] =\n                        area.properties?.label_location || null;\n                }\n            }\n        }\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = `${zone.count || 0} ${\n                zone.count === 1 ? 'Device' : 'Devices'\n            }\\n`;\n            if (zone.ambient_temp)\n                content += `Ambient Temp: ${zone.ambient_temp} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count} ${\n                    zone.people_count === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.queue_size}\\n`;\n            this._labels[zone.area_id] = {\n                location: this._location[zone.area_id],\n                content,\n            };\n            labels.push(this._labels[zone.area_id]);\n        }\n        this._state.setLabels('zones', labels);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            if (!this._statuses[zone_id]) continue;\n            style_map[`#${zone_id}`] = {\n                fill:\n                    colours[`zone-${this._statuses[zone_id]}`] ||\n                    colours[`${this._statuses[zone_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[zone_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('zones', style_map);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { ComponentsModule } from '@placeos/components';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nexport * from './action-field.component';\nexport * from './counter.component';\nexport * from './date-field.component';\nexport * from './duration-field.component';\nexport * from './time-field.component';\nexport * from './user-list-field.component';\nexport * from './user-search-field.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\">COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button mat-button (click)=\"submit()\">Submit</button>\n            </footer>\n            <button close mat-icon-button mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\">\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close mat-icon-button mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent implements OnInit {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form: FormGroup;\n    public failure: boolean;\n\n    public ngOnInit() {\n        this.form = new FormGroup({\n            travelled: new FormControl('', [Validators.required]),\n            unwell: new FormControl('', [Validators.required]),\n            contact: new FormControl('', [Validators.required]),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            notifyError('All the questions must be answered');\n            return;\n        } else if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes\n} from 'date-fns';\n\nexport type BookingType = 'desk' | 'parking' | 'locker' | '';\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n\n    constructor(data: Partial<Booking> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            data.booking_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 2), {\n                        nearestTo: 5,\n                    })\n            );\n        this.booking_end =\n            data.booking_end ||\n            getUnixTime(addMinutes(this.booking_start * 1000, data.duration || 60));\n        this.booking_type = data.booking_type || '';\n        this.type = data.type || 'booking';\n        this.date = data.date || this.booking_start * 1000;\n        this.duration =\n            data.duration ||\n            Math.abs(differenceInMinutes(\n                this.booking_start * 1000,\n                this.booking_end * 1000\n            ));\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title = data.title || 'Desk booking';\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.all_day = data.all_day ?? true;\n        this.status = this.rejected\n            ? 'declined'\n            : this.approved\n            ? 'approved'\n            : 'tentative';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        return isAfter(start, end);\n    }\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking } from './booking.class';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item)))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>) {\n    return post(`${BOOKINGS_ENDPOINT}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    BaseClass,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { listChildMetadata, PlaceZone } from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilKeyChanged,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = ['book/desks'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: 'desk' | 'parking';\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends BaseClass {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _form = new BehaviorSubject<FormGroup>(null);\n    private _form_value = new BehaviorSubject<Partial<Booking>>({});\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n\n    public readonly assets: Observable<BookingAsset[]> = this.options.pipe(\n        distinctUntilKeyChanged('zone_id'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return listChildMetadata(this._org.building.id, {\n                        name: 'desks',\n                    }).pipe(\n                        map((data) =>\n                            flatten(\n                                data.map((_) =>\n                                    (\n                                        _.metadata.desks?.details || []\n                                    ).map((d) => ({ ...d, zone: _.zone }))\n                                )\n                            )\n                        )\n                    );\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.assets.pipe(\n        map((assets) => {\n            const list: string[] = [];\n            for (const asset of assets) {\n                asset.features?.forEach((_) => list.push(_));\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_assets = combineLatest([\n        this.options,\n        this.assets,\n        this._form_value,\n    ]).pipe(\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, assets, form]) =>\n            queryBookings({\n                period_start: getUnixTime(form.date),\n                period_end: getUnixTime(\n                    addMinutes(form.date, form.duration || 24 * 60)\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) =>\n                    assets.filter(\n                        (asset) =>\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find((bkn) => bkn.asset_id === asset.id)\n                    )\n                )\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_assets,\n    ]).pipe(\n        map(([options, assets]) => {\n            const groups = [];\n            const asset_list = [...assets].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get form() {\n        return this._form.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this._form.next(generateBookingForm(booking));\n        this.subscription(\n            'form_change',\n            this._form.getValue().valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public resetForm() {\n        if (!this._form.getValue()) this.newForm();\n        const booking = this._booking.getValue();\n        this._form.getValue().patchValue({\n            ...(booking || {}),\n            ...(booking?.extension_data || {}),\n        });\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this._form.getValue()?.value || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n        this._form_value.next(this._form.getValue()?.value || {});\n    }\n\n    public loadForm() {\n        if (!this._form.getValue()) this.newForm();\n        this._form.getValue().patchValue({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n            ),\n        });\n        this.setOptions({\n            zone_id: this._org.building.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const form = this._form.getValue();\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content: `Would you like to book the ${options.type} ${\n                    form.get('asset_id').value\n                } for ${format(form.get('date').value, 'dd MMM yyyy')}`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') return;\n        details.loading('Performing booking request...');\n        await this.postForm().catch((_) => {\n            notifyError(_);\n            details.close();\n            throw _;\n        });\n        details.close();\n    }\n\n    public async postForm() {\n        const form = this._form.getValue();\n        if (!form) throw 'No form for booking';\n        if (!form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(form).join(\n                ', '\n            )}]`;\n        const asset_id = form.get('asset_id').value;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(form.get('date').value),\n            period_end: getUnixTime(\n                form.get('date').value + form.get('duration').value * 60 * 1000\n            ),\n            type: this._options.getValue().type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id))\n            throw `${asset_id} is not available at the selected time`;\n        if (\n            bookings.find(\n                (_) =>\n                    _.user_email ===\n                    (form.value.user_email || currentUser()?.email)\n            )\n        )\n            throw `You already have a desk booked`;\n        const result = await saveBooking(new Booking(form.value)).toPromise();\n        this.clearForm();\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    private async checkQuestions() {\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.value;\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged((x, y) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map","import { FormControl, FormGroup } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, []),\n        duration: new FormControl(booking.duration),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        asset_id: new FormControl(booking.asset_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by;\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user.id || booker.id,\n                      user_email: user.email || booker.id,\n                      booked_by_id: booker.id,\n                      booked_by_email: booker.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    return form;\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n}\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            (mouseenter)=\"loadUser()\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-4 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-2 w-2 absolute center rounded-full pointer-events-auto shadow\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n\n        <ng-template cdk-portal>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white p-4 top-0 left-0 shadow pointer-events-none\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p><label>MAC:</label> {{ mac }}</p>\n                    <p><label>Accuracy:</label> {{ variance }}m</p>\n                    <p><label>Last Seen:</label> {{ last_seen }}</p>\n                    <p type *ngIf=\"manufacturer\">\n                        <label>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                    <p ssid *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                    <p username *ngIf=\"username\">\n                        <label>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user\">\n                        <label>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Diameter of the radius circle */\n    public readonly diameter = this._details.variance * 100;\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public overlay_ref: OverlayRef = null;\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n    @ViewChild('dot') private _dot: ElementRef<HTMLDivElement>;\n\n    @HostListener('mouseenter') public onEnter = () => this.loadUser();\n    @HostListener('mouseleave') public onLeave = () => this.close();\n    @HostListener('click') public onClick = () => this.loadUser();\n    @HostListener('touchend') public onTouch = () => this.loadUser();\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n        }, 200);\n    }\n\n    public async loadUser() {\n        this.open();\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (mod) {\n            this.username = 'Loading...';\n            const details = await mod\n                .execute('check_ownership_of', [this.mac])\n                .catch((_) => null);\n            this.username =\n                details && details.assigned_to ? details.assigned_to : '';\n        }\n    }\n\n    public open() {\n        if (this.overlay_ref) this.close();\n        if (!this._portal) return;\n        this.overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._dot)\n                .withPositions([\n                    {\n                        originX: this.x_pos === 'start' ? 'end' : 'start',\n                        originY: this.y_pos === 'top' ? 'bottom' : 'top',\n                        overlayX: this.x_pos || 'end',\n                        overlayY: this.y_pos || 'bottom',\n                    },\n                ]),\n        });\n        this.overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this.overlay_ref) {\n            this.overlay_ref.dispose();\n            this.overlay_ref = null;\n        }\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface DeskInfoData {\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            name=\"space-info\"\n            [id]=\"map_id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 map-id class=\"m-0 font-medium\">{{ map_id }}</h4>\n                <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                    {{ start | date: 'shortTime' }} &ndash;\n                    {{ end | date: 'shortTime' }}\n                </p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { catchError, first, map, switchMap } from 'rxjs/operators';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nimport {\n    BaseClass,\n    currentUser,\n    HashMap,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    BookingFormService,\n    DesksService,\n    queryBookings,\n} from '@placeos/bookings';\nimport { StaffUser } from '@placeos/users';\nimport { Desk, OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _desks = new BehaviorSubject<string[]>([]);\n    private _reserved = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._poll,\n    ]).pipe(\n        switchMap(([lvl]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(new Date())),\n                period_end: getUnixTime(endOfDay(new Date())),\n                type: 'desk',\n                zones: lvl.id,\n            })\n        )\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, { name: 'desks' }).pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: HashMap) => new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => [])\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings?.area_management ||\n                this._org.organisation.bindings?.area_management;\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n            binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:desk_ids`\n            );\n            this.subscription(\n                `lvl-desks_list`,\n                binding.listen().subscribe((d) => this._desks.next(d || []))\n            );\n            this.subscription('lvl-desk_list_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._reserved,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, reserved]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const is_reserved = reserved.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used\n                        ? 'free'\n                        : is_reserved\n                        ? 'reserved'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking: this._settings.get('app.desks.enabled') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) =>\n                this._in_use.next(_.map((i) => i.asset_id))\n            )\n        );\n        this.interval(\n            'poll',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._reserved.next(\n            desks\n                .filter((v) => !v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                hover: true,\n                data: {\n                    map_id: desk.name,\n                    status: this._statuses[desk.map_id],\n                },\n            });\n            const book_fn = async () => {\n                this._bookings.newForm();\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    user: options.host || currentUser(),\n                    booking_type: 'desk',\n                });\n                await this._bookings.confirmPost();\n                notifySuccess(\n                    `Successfull booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button z-in mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon>add</app-icon>\n        </button>\n        <button z-out mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon>remove</app-icon>\n        </button>\n        <button reset mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: 0.5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 0.5rem;\n            }\n\n            mat-form-field {\n                min-width: 10rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends BaseClass implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = /*@__PURE__*/ function () { let ɵMatSlideToggleRequiredValidator_BaseFactory; return function MatSlideToggleRequiredValidator_Factory(t) { return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator); }; }();\nMatSlideToggleRequiredValidator.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); };\n_MatSlideToggleRequiredValidatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); };\nMatSlideToggleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { MapPinComponent, MapRadiusComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-0 right-0\"\n        ></explore-zoom-controls>\n        <explore-map-controls\n            class=\"absolute top-0 left-0\"\n        ></explore-map-controls>\n        <!-- <explore-search class=\"absolute top-0 right-0\"></explore-search> -->\n        <div\n            name=\"zones\"\n            class=\"p-2 bg-white border border-gray-400 absolute left-0 m-2 rounded flex items-center\"\n        >\n            Zones\n            <mat-slide-toggle\n                class=\"ml-2\"\n                [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                (ngModelChange)=\"toggleZones($event)\"\n            ></mat-slide-toggle>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            [name='zones'] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService, ExploreDesksService, ExploreZonesService],\n})\nexport class ExploreMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    const space = this._spaces.find(params.get('space'));\n                    if (!space) return;\n                    this.locateSpace(space);\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private locateSpace(space: Space) {\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.organisation.bindings\n            .location_services;\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [user.email, user.id])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","<div class=\"footer-legend\">\n    <div class=\"tag\" (click)=\"show = !show\">\n        <button mat-button class=\"content\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_up' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"header\">\n        <div class=\"text\">Keys</div>\n    </div>\n    <div class=\"colour-legend\">\n        <div class=\"colour\" *ngFor=\"let item of colours\" [class.dark]=\"item.dark\" [style.background-color]=\"item.colour\">\n            {{ item.name }}\n        </div>\n    </div>\n    <div class=\"icon-legend\" [class.show]=\"show\">\n        <div class=\"icon\" *ngFor=\"let item of icon_list\">\n            <app-icon [icon]=\"item.icon\"></app-icon>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@placeos/common';\n\n@Component({\n  selector: 'a-footer-legend',\n  templateUrl: './footer-legend.component.html',\n  styleUrls: ['./footer-legend.component.scss']\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        { id: 'not-bookable', name: 'Not Bookable', colour: '#7D7D7D', dark: true },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' }\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        { id: '', name: 'Lifts Up/Down', icon: { type: 'img', src: 'assets/img/lift.svg' } },\n        { id: '', name: 'Fire Extinguisher', icon: { type: 'img', src: 'assets/img/fireExt.svg' } },\n        { id: '', name: 'First Aid & AED', icon: { type: 'img', src: 'assets/img/aid.svg' } },\n        { id: '', name: 'Cafe/Service', icon: { type: 'img', src: 'assets/img/Cafe.svg' } },\n        { id: '', name: 'Mail/Noticeboard', icon: { type: 'img', src: 'assets/img/mail.svg' } },\n        { id: '', name: 'Restrooms M/F', icon: { type: 'img', src: 'assets/img/Restrooms.svg' } },\n        { id: '', name: 'Map Kiosk', icon: { type: 'img', src: 'assets/img/kiosk.svg' } },\n        { id: '', name: 'Screen', icon: { type: 'img', src: 'assets/img/Screen.svg' } },\n        { id: '', name: 'Projector', icon: { type: 'img', src: 'assets/img/Projector.svg' } },\n        { id: '', name: 'Showers', icon: { type: 'img', src: 'assets/img/shower.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair2.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table1.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table3.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table4.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table5.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table6.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table7.svg' } },\n        { id: '', name: 'Funzone Games', icon: { type: 'img', src: 'assets/img/Tennis.svg' } },\n        { id: '', name: 'Concierge Pods', icon: { type: 'img', src: 'assets/img/Pod.svg' } },\n        { id: '', name: 'Phone Booths', icon: { type: 'img', src: 'assets/img/booth.svg' } }\n    ];\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseClass, log, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends BaseClass implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        }\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            bld => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Reset the timeout for refreshing the kiosk view\n     */\n    public resetRefresh() {\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public refreshKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        this._dialog.closeAll();\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        } else {\n            this._router.navigate(['/explore', 'none'], { queryParams: { level } });\n        }\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', new Date().getTime());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from '../ui/shared.module';\nimport { FooterLegendComponent } from './footer-legend/footer-legend.component';\nimport { FiltersComponent } from './filters/filters.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        FooterLegendComponent,\n        FiltersComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ComponentsModule,\n        FormsModule,\n        SharedExploreModule\n    ],\n    entryComponents: [\n        FiltersComponent\n    ]\n})\nexport class AppExploreModule {}\n"],"sourceRoot":"webpack:///"}