{"version":3,"file":"apps_visitor-kiosk_src_app_explore_explore_module_ts.js","mappings":"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","names":["i0","bld_r3","display_name","name","$event","_r5","ctx_r4","setBuilding","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","ctx_r0","building","buildings","lvl_r7","_r9","ctx_r8","setLevel","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","tmp_0_0","ctx_r1","length","level","levels","ExploreMapControlComponent","AsyncHandler","constructor","_org","_state","_router","_route","super","this","active_buildings","active_building","active_levels","lvl","setFeatures","timeout","navigate","relativeTo","queryParams","zone","id","bld","ngOnInit","_this","_asyncToGenerator","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","get","t","i1","i2","i3","core","Xpm","selectors","features","decls","vars","consts","i18n_0","$localize","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","ctx","tmp_1_0","temp","humidity","ExploreSensorInfoComponent","_details","MAP_FEATURE_DATA","template","rf","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","ExploreZonesService","_settings","_statuses","_location","_capacity","_draw","_points","_features","_bind","map","system_id","binding","getModule","listen","d","parseData","bind","init","zone_metadata","Promise","all","showMetadata","areas","details","area","capacity","hide_label","label_location","draw_polygon","properties","coordinates","geometry","getCenterPoint","updateStatus","data","value","labels","filled","count","area_id","content","temperature","people_count","people_count_sum","queue_size","counter","push","location","z_index","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","track_id","MapPolygonComponent","color","points","fill","opacity","setStyles","Yz7","factory","ɵfac","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","resource","map_id","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","_r4","ctx_r3","form","patchValue","date","host","book_until","_c0","tmp_6_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","type","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","ctx_r2","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","tries","setTimeout","parent","nativeElement","parentElement","position","parseInt","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_1","ExploreDeviceInfoComponent_ng_template_5_Template","_r1","ExploreDesksService","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_users","_departments","_checked_in","restrictions","debounceTime","switchMap","catchError","of","Array","shareReplay","desk_list","i","j","Desk","e","unsubWith","processBindingChange","_booking_list","combineLatest","filter","use_api","endOfDay","now","valueOf","queryBookings","period_start","getUnixTime","startOfDay","period_end","zones","tap","bookings","next","asset_id","checked_in","_state_change","desks","in_use","presence","signs","bookable","is_used","some","has_presence","has_signs","is_checked_in","is_restricted","assets","find","start","end","processDesks","setOptions","enable_booking","options","getValue","devices","v","at_location","signs_of_life","departments","desk","staff_name","department","processDevices","desk_id","list","device","map_width","map_height","coordinates_from","_this2","actions","ExploreDeskInfoComponent","full_size","no_scale","status","book_fn","_ref","notifyError","groups","currentUser","newForm","all_day","_setBookingTime","custom","user_email","email","asset_name","description","booking_type","parent_id","confirmPost","notifySuccess","apply","arguments","action","priority","callback","setActions","_this3","addDays","open","afterClosed","i4","i5","ExploreParkingService","_poll","asObservable","l","tags","events","existing_event","week_events","spaces","forkJoin","s","flatten","available_spaces","week_availablility","availability","day","day_events","isSameDay","available","_updateParkingSpaces","interval","styles","space","can_book","zoom_level","ExploreLockersService","_lockers","_explore","_status","lockers$","filtered_lockers$","sys_id","locker_status","lockers_banks$","locker_banks","lockers","map_status","banks","unique","level_id","bank","bank_lockers","bank_id","in_use_count","locker","locker_id","allocated","bank_info","ExploreLockerBankInfoComponent","locker_count","in_use_percent","providedIn","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","_r3","toggleZones","disable","pair_r5","ExploreMapViewComponent_div_12_div_3_Template","legend","ExploreMapViewComponent","enabled","take","show_legend","hide_zones","_s","_desks","_zones","_parking","_spaces","_space_pipe","url","map_url","map_styles","map_positions","map_features","map_actions","map_labels","message","o","locateSpace","showStaff","locateUser","_locateFeature","_x","updateZoom","updateCenter","has_coordinates","parts","split","feature","parseFloat","MapPinComponent","transform","levelWithID","_this4","locate_details","module","locations","MapLocation","sort","a","b","indexOf","pos","MapRadiusComponent","radius","i6","i7","i8","i9","i10","i11","ExploreSpacesService","SpacePipe","ExploreMapViewComponent_div_11_Template","ExploreMapViewComponent_div_12_Template","tmp_2_0","SharedExploreModule","oAB","cJS","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","item_r2","dark","item_r3","icon","FooterLegendComponent","icon_list","src","show","FooterLegendComponent_div_9_Template","FooterLegendComponent_div_11_Template","ExploreComponent","reset_delay","onMouse","resetKiosk","onTouch","title","localStorage","getItem","emergency_phone","phone_numbers","emergency","log","document","activeElement","blur","closeAll","post","hostBindings","ROUTES","path","component","AppExploreModule","RouterModule","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/visitor-kiosk/src/app/explore/footer-legend.component.ts","./apps/visitor-kiosk/src/app/explore/explore.component.ts","./apps/visitor-kiosk/src/app/explore/explore.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AssetRestriction,\n    BookingFormService,\n} from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this._org.active_building.pipe(\n            debounceTime(50),\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `desk_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.restrictions,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs, restrictions]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in =\n                    checked_in.some((i) => id === i) ||\n                    (is_used && this._settings.get(`app.desk.auto_checkin`));\n                const restriction_list = restrictions.filter((_) =>\n                    _.assets.includes(id)\n                );\n                const is_restricted = restriction_list.find(\n                    ({ start, end }) => Date.now() >= start && Date.now() < end\n                );\n                this._statuses[id] =\n                    bookable && !is_restricted\n                        ? !is_used && !has_presence && !is_checked_in\n                            ? has_signs\n                                ? 'signs-of-life'\n                                : 'free'\n                            : !has_presence && !is_checked_in\n                            ? 'pending'\n                            : 'busy'\n                        : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('restrictions', this.restrictions.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@placeos/common';\n\n@Component({\n    selector: 'a-footer-legend',\n    template: `\n        <div class=\"relative bg-white shadow w-full\">\n            <div\n                class=\"absolute top-0 left-1/2 transform -translate-y-full -translate-x-1/2 px-2 pt-2 overflow-hidden\"\n            >\n                <button\n                    matRipple\n                    class=\"flex items-center justify-center bg-white shadow rounded-t w-32 h-8 border-none text-black\"\n                    (click)=\"show = !show\"\n                >\n                    <app-icon>keyboard_arrow_up</app-icon>\n                </button>\n            </div>\n            <div class=\"flex items-center px-2 py-1 text-xl\">\n                <div class=\"flex-1\">Keys</div>\n            </div>\n            <div\n                class=\"flex items-center justify-center p-2 border border-gray-100 space-x-2\"\n            >\n                <div\n                    class=\"colour px-4 py-2 rounded shadow flex-1 text-center\"\n                    *ngFor=\"let item of colours\"\n                    [class.dark]=\"item.dark\"\n                    [style.background-color]=\"item.colour\"\n                >\n                    {{ item.name }}\n                </div>\n            </div>\n            <div\n                icon-legend\n                class=\"flex justify-center flex-wrap h-0 w-full border border-gray-100 overflow-auto max-h-[25vh]\"\n                [class.show]=\"show\"\n            >\n                <div\n                    class=\"flex flex-col items-center justify-center h-[12.4vw] w-[12.4vw] text-[2vw] border border-gray-100 flex-grow\"\n                    *ngFor=\"let item of icon_list\"\n                >\n                    <app-icon class=\"text-[3em]\" [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text-[0.625em] font-normal\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                z-index: 10;\n                font-size: 1.25em;\n            }\n\n            .colour.dark {\n                color: #fff;\n            }\n\n            [icon-legend] {\n                transition: height 200ms;\n            }\n\n            [icon-legend].show {\n                height: 37.5vw !important;\n            }\n        `,\n    ],\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        {\n            id: 'not-bookable',\n            name: 'Not Bookable',\n            colour: '#7D7D7D',\n            dark: true,\n        },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' },\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        {\n            id: '',\n            name: 'Lifts Up/Down',\n            icon: { type: 'img', src: 'assets/img/lift.svg' },\n        },\n        {\n            id: '',\n            name: 'Fire Extinguisher',\n            icon: { type: 'img', src: 'assets/img/fireExt.svg' },\n        },\n        {\n            id: '',\n            name: 'First Aid & AED',\n            icon: { type: 'img', src: 'assets/img/aid.svg' },\n        },\n        {\n            id: '',\n            name: 'Cafe/Service',\n            icon: { type: 'img', src: 'assets/img/Cafe.svg' },\n        },\n        {\n            id: '',\n            name: 'Mail/Noticeboard',\n            icon: { type: 'img', src: 'assets/img/mail.svg' },\n        },\n        {\n            id: '',\n            name: 'Restrooms M/F',\n            icon: { type: 'img', src: 'assets/img/Restrooms.svg' },\n        },\n        {\n            id: '',\n            name: 'Map Kiosk',\n            icon: { type: 'img', src: 'assets/img/kiosk.svg' },\n        },\n        {\n            id: '',\n            name: 'Screen',\n            icon: { type: 'img', src: 'assets/img/Screen.svg' },\n        },\n        {\n            id: '',\n            name: 'Projector',\n            icon: { type: 'img', src: 'assets/img/Projector.svg' },\n        },\n        {\n            id: '',\n            name: 'Showers',\n            icon: { type: 'img', src: 'assets/img/shower.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair2.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table1.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table3.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table4.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table5.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table6.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table7.svg' },\n        },\n        {\n            id: '',\n            name: 'Funzone Games',\n            icon: { type: 'img', src: 'assets/img/Tennis.svg' },\n        },\n        {\n            id: '',\n            name: 'Concierge Pods',\n            icon: { type: 'img', src: 'assets/img/Pod.svg' },\n        },\n        {\n            id: '',\n            name: 'Phone Booths',\n            icon: { type: 'img', src: 'assets/img/booth.svg' },\n        },\n    ];\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { AsyncHandler, log, SettingsService } from '@placeos/common';\nimport { ExploreStateService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n                background: #eee;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        const level = localStorage?.getItem('KIOSK.level');\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n            return;\n        }\n        this._state.setLevel(level);\n        this.onMouse();\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public resetKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', Date.now());\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { ExploreComponent } from './explore.component';\nimport { FooterLegendComponent } from './footer-legend.component';\nimport { FiltersComponent } from './filters.component';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [ExploreComponent, FooterLegendComponent, FiltersComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ]\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[]}