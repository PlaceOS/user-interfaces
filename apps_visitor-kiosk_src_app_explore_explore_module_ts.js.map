{"version":3,"sources":["./node_modules/@angular/material/fesm2015/slide-toggle.js","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/booking-form.service.ts","./node_modules/rxjs/_esm2015/internal/operators/distinctUntilKeyChanged.js","./libs/bookings/src/lib/booking.utilities.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/visitor-kiosk/src/app/explore/footer-legend.component.ts","./apps/visitor-kiosk/src/app/explore/explore.component.ts","./apps/visitor-kiosk/src/app/explore/explore.module.ts"],"names":["_c0","_c1","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","MatSlideToggle","multi","MatSlideToggleChange","source","checked","this","MatSlideToggleBase","_elementRef","_MatSlideToggleMixinBase","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","_animationMode","super","_onChange","_","_onTouched","_uniqueId","_required","_checked","name","id","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","parseInt","value","markForCheck","monitor","subscribe","focusOrigin","_inputElement","nativeElement","focus","Promise","resolve","then","stopMonitoring","event","stopPropagation","emit","_emitChangeEvent","fn","isDisabled","disabled","options","origin","focusVia","detectChanges","ɵfac","t","ɵcmp","type","selectors","viewQuery","rf","ctx","_t","_thumbEl","first","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","required","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","$event","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","textContent","trim","toString","directives","styles","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","ExploreStateService","_org","_spaces","_settings","_level","_positions","zoom","center","x","y","_styles","_features","_actions","_labels","_options","disable","_message","level","asObservable","message","spaces","combineLatest","list","pipe","filter","space","zones","includes","map_url","lvl","map_id","map_positions","map_features","debounceTime","key","disable_features","concat","map_actions","actions","disable_actions","map_labels","labels","disable_labels","map_styles","style_mappings","text","display","disable_styles","init","getValue","initialised","toPromise","active_building","bld","level_list","levelsForBuilding","find","length","setLevel","get","setOptions","old_options","next","zone_id","levelWithID","style_map","feature_map","actions_map","labels_map","ExploreMapControlComponent","_state","_router","_route","buildings","building_list","building","levels","active_levels","setFeatures","timeout","navigate","relativeTo","queryParams","zone","setBuilding","subscription","queryParamMap","params","has","ExploreSpaceInfoComponent","_details","_element","events","status","tries","setTimeout","parent","parentElement","ngOnInit","position","style","top","left","y_pos","x_pos","ExploreBookingModalComponent","_data","_dialog_ref","loading","booking","attendees","resource","form","markAllAsTouched","on_error","msg","disableClose","valid","controls","invalid","push","join","system_ids","resources","map","s","period_start","Math","floor","date","period_end","duration","catch","e","display_name","close","DEFAULT_COLOURS","free","pending","reserved","busy","unknown","ExploreSpacesService","_dialog","_bookings","_statuses","_bind","unsubWith","mod","binding","listen","d","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","bookable","open","data","bookings","i","clearTimeout","updateStatus","colours","fill","opacity","setStyles","location","full_size","content","action","callback","bookSpace","setActions","ExploreZonesService","_location","_capacity","_draw","_points","parent_id","system_id","bindings","area_management","organisation","parseData","zone_metadata","all","areas","details","area","properties","capacity","hide_label","label_location","geometry","coordinates","getCenterPoint","draw_polygon","filled","count","area_id","temperature","people_count","humidity","queue_size","counter","z_index","console","log","setLabels","colour","points","diff","reduce","m","x_min","x_max","y_min","y_max","DeskQuestionsModalComponent","travelled","unwell","contact","Object","keys","failure","reason","asset_id","booking_start","Date","now","booking_end","booking_type","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","user_email","user_id","user_name","title","description","checked_in","rejected","approved","approver_id","approver_email","approver_name","extension_data","access","all_day","isSameDay","start","end","addHours","isAfter","BOOKINGS_ENDPOINT","q","query","item","BOOKING_URLS","BookingFormService","_view","_form","_form_value","_booking","_loading","last_success","JSON","parse","sessionStorage","getItem","shareReplay","assets","distinctUntilChanged","switchMap","of","metadata","desks","Array","tap","asset","forEach","sort","a","b","localeCompare","available_assets","every","bkn","grouped_availability","groups","asset_list","members","group","pop","url","clearForm","user","booked_by","booked_by_id","booked_by_email","valueChanges","v","booker","patchValue","email","emitEvent","generateBookingForm","storeForm","newForm","removeItem","setItem","stringify","checkQuestions","format","icon","postForm","allowed_bookings","set","hours","minutes","result","method","encodeURIComponent","updateBooking","createBooking","setView","ref","race","componentInstance","afterClosed","ExploreDeviceInfoComponent","_overlay","username","mac","manufacturer","os","ssid","variance","toFixed","diameter","bg_color","distance_color","overlay_ref","onEnter","loadUser","onLeave","onClick","onTouch","formatDistanceToNow","last_seen","addSuffix","distance","system","execute","assigned_to","_portal","create","positionStrategy","flexibleConnectedTo","_dot","withPositions","originX","originY","overlayX","overlayY","attach","dispose","ExploreDeskInfoComponent","ExploreDesksService","_in_use","_desks","_reserved","_users","_poll","_desk_bookings","desk_list","j","catchError","processBindingChange","_state_change","in_use","is_used","some","is_reserved","processDesks","enable_booking","delay","interval","valueOf","clearInterval","devices","at_location","processDevices","desk_id","device","map_width","map_height","coordinates_from","desk","hover","staff_name","book_fn","host","confirmPost","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","zoomOut","max","reset","ExploreMapViewComponent","_s","_zones","o","enabled","take","toggleZones","locateSpace","locateUser","feature","locate_details","location_services","module","locations","priority","indexOf","pos","radius","SharedExploreModule","FooterLegendComponent","dark","icon_list","src","ExploreComponent","reset_delay","onMouse","resetKiosk","localStorage","level_id","phone_numbers","emergency","document","activeElement","blur","closeAll","post","ROUTES","path","component","AppExploreModule"],"mappings":"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","file":"apps_visitor-kiosk_src_app_explore_explore_module_ts.js","sourcesContent":["import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = /*@__PURE__*/ function () { let ɵMatSlideToggleRequiredValidator_BaseFactory; return function MatSlideToggleRequiredValidator_Factory(t) { return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator); }; }();\nMatSlideToggleRequiredValidator.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); };\n_MatSlideToggleRequiredValidatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); };\nMatSlideToggleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService, unique } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._spaces.list,\n    ]).pipe(\n        map(([level, spaces]) =>\n            spaces.filter((space) => space.zones.includes(level?.id))\n        )\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            if (this._settings.get('app.explore.disable_actions')) {\n                this.setOptions({\n                    disable_actions: this._settings.get(\n                        'app.explore.disable_actions'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_labels')) {\n                this.setOptions({\n                    disable_labels: this._settings.get(\n                        'app.explore.disable_labels'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_features')) {\n                this.setOptions({\n                    disable_features: this._settings.get(\n                        'app.explore.disable_features'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_styles')) {\n                this.setOptions({\n                    disable_styles: this._settings.get(\n                        'app.explore.disable_styles'\n                    ),\n                });\n            }\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) {\n            this._level.next(lvl);\n        }\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 0.5rem;\n            }\n\n            mat-form-field {\n                min-width: 10rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends BaseClass implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            class=\"h-full w-full pointer-events-auto relative\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space.id\"\n                class=\"\n                    absolute rounded bg-white p-4 top-0 left-0 transform shadow pointer-events-none\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 class=\"m-0 mb-2\">\n                        {{ space.display_name || space.name }}\n                    </h4>\n                    <div capacity class=\"text-sm\" *ngIf=\"space.capacity >= 0\">\n                        <span>Capacity: </span>{{ space.capacity }}\n                        {{ space.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                    <div class=\"flex flex-wrap my-2 text-sm\">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light ' +\n                                status\n                            \"\n                        >\n                            {{ status }}\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div features *ngIf=\"space.features?.length > 0\">\n                        <h4 class=\"m-0 mb-2\">Room Features</h4>\n                        <ul class=\"pl-2\">\n                            <li\n                                class=\"text-sm\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { CalendarEvent, generateEventForm, saveEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { querySpaceAvailability } from '@placeos/calendar';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                        />\n                        <mat-error>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.duration\">\n                        <label>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button mat-button (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public booking: CalendarEvent;\n    public form: FormGroup;\n    public loading = '';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.booking = new CalendarEvent({\n            attendees: [{ ...(this._data.space || {}), resource: true } as any],\n        });\n        this.form = generateEventForm(this.booking);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        const on_error = (msg) => {\n            this.loading = '';\n            notifyError(msg);\n            this._dialog_ref.disableClose = false;\n        };\n        if (!this.form.valid) {\n            const list = [];\n            for (const key in this.form.controls) {\n                if (this.form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            throw on_error(\n                `Some form fields are not valid: [${list.join(', ')}]`\n            );\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = 'Checking space availability...';\n        const spaces = await querySpaceAvailability({\n            system_ids: this.form.controls.resources.value\n                ?.map((s) => s.id)\n                .join(','),\n            period_start: Math.floor(this.form.value.date / 1000),\n            period_end:\n                Math.floor(this.form.value.date / 1000) +\n                this.form.value.duration * 60,\n        })\n            .toPromise()\n            .catch((e) => {\n                on_error(\n                    'Space is unavailble for the selected time and duration'\n                );\n                throw e;\n            });\n        if (spaces.length <= 0) {\n            return on_error(\n                'Space is unavailble for the selected time and duration'\n            );\n        }\n        this.loading = 'Creating booking...';\n        await saveEvent(new CalendarEvent(this.form.value))\n            .toPromise()\n            .catch((e) => {\n                on_error('Error creating booking.');\n                throw e;\n            });\n        notifySuccess(\n            `Successfully created booking in ${\n                this._data.space.display_name || this._data.space.name\n            }`\n        );\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    HashMap,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] === 'busy' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._dialog.open(ExploreBookingModalComponent, {\n            data: { space },\n        });\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends BaseClass {\n    private _statuses: HashMap<string> = {};\n    private _labels: HashMap<ViewerLabel> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings.area_management ||\n                this._org.organisation.bindings.area_management;\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, { name: 'map_regions' }).toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (areas) {\n                for (const area of areas) {\n                    this._capacity[area.id] = area.properties?.capacity || 100;\n                    this._location[area.id] = area.properties?.hide_label !== false\n                        ? area.properties?.label_location ||\n                          (area.geometry?.coordinates?.length\n                            ? getCenterPoint(area.geometry?.coordinates)\n                            : null)\n                        : null;\n                    this._draw[area.id] = !!area.properties?.draw_polygon;\n                    this._points[area.id] = area.geometry?.coordinates || [];\n                }\n            }\n        }\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} ${\n                    zone.count === 1 ? 'Device' : 'Devices'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count} ${\n                    zone.people_count === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.queue_size}\\n`;\n            this._labels[zone.area_id] = {\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            };\n            console.log('Zone has Label:', zone.area_id);\n            labels.push(this._labels[zone.area_id]);\n        }\n        console.log('Zone Locations:', this._location);\n        this._state.setLabels('zones', labels);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', features);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\">COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button mat-button (click)=\"submit()\">Submit</button>\n            </footer>\n            <button close mat-icon-button mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\">\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close mat-icon-button mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent implements OnInit {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form: FormGroup;\n    public failure: boolean;\n\n    public ngOnInit() {\n        this.form = new FormGroup({\n            travelled: new FormControl('', [Validators.required]),\n            unwell: new FormControl('', [Validators.required]),\n            contact: new FormControl('', [Validators.required]),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            notifyError('All the questions must be answered');\n            return;\n        } else if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\n\nexport type BookingType = 'desk' | 'parking' | 'locker' | '';\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n\n    constructor(data: Partial<Booking> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            data.date / 1000 ||\n            data.booking_start ||\n            getUnixTime(startOfDay(Date.now()));\n        this.booking_end =\n            (data.date / 1000 + data.duration * 60) ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 24 * 60)\n            );\n        this.booking_type = data.booking_type || '';\n        this.type = data.type || 'booking';\n        this.date = data.date || this.booking_start * 1000;\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            );\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title = data.title || 'Desk booking';\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.all_day = data.all_day ?? this.duration > 12 * 60;\n        this.status = this.rejected\n            ? 'declined'\n            : this.approved\n            ? 'approved'\n            : 'tentative';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        return isAfter(start, end);\n    }\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking } from './booking.class';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item)))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>) {\n    return post(`${BOOKINGS_ENDPOINT}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    BaseClass,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { listChildMetadata, PlaceZone } from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilKeyChanged,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = ['book/desks'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: 'desk' | 'parking';\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends BaseClass {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _form = new BehaviorSubject<FormGroup>(null);\n    private _form_value = new BehaviorSubject<Partial<Booking>>({});\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n\n    public readonly assets: Observable<BookingAsset[]> = this.options.pipe(\n        distinctUntilKeyChanged('zone_id'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return listChildMetadata(this._org.building.id, {\n                        name: 'desks',\n                    }).pipe(\n                        map((data) =>\n                            flatten(\n                                data.map((_) =>\n                                    (_.metadata.desks?.details instanceof Array\n                                        ? _.metadata.desks?.details\n                                        : []\n                                    ).map((d) => ({ ...d, zone: _.zone }))\n                                )\n                            )\n                        )\n                    );\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.assets.pipe(\n        map((assets) => {\n            const list: string[] = [];\n            for (const asset of assets) {\n                asset.features?.forEach((_) => list.push(_));\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_assets = combineLatest([\n        this.options,\n        this.assets,\n        this._form_value,\n    ]).pipe(\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, assets, form]) =>\n            queryBookings({\n                period_start: getUnixTime(form.date),\n                period_end: getUnixTime(\n                    addMinutes(form.date, form.duration || 24 * 60)\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) =>\n                    assets.filter(\n                        (asset) =>\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find((bkn) => bkn.asset_id === asset.id)\n                    )\n                )\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_assets,\n    ]).pipe(\n        map(([options, assets]) => {\n            const groups = [];\n            const asset_list = [...assets].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get form() {\n        return this._form.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this._form.next(generateBookingForm(booking));\n        this.subscription(\n            'form_change',\n            this._form.getValue().valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public resetForm() {\n        if (!this._form.getValue()) this.newForm();\n        const booking = this._booking.getValue();\n        this._form.getValue().patchValue({\n            ...(booking || {}),\n            ...(booking?.extension_data || {}),\n        });\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this._form.getValue()?.value || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n        this._form_value.next(this._form.getValue()?.value || {});\n    }\n\n    public loadForm() {\n        if (!this._form.getValue()) this.newForm();\n        this._form.getValue().patchValue({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n            ),\n        });\n        this.setOptions({\n            zone_id: this._org.building.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const form = this._form.getValue();\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content: `Would you like to book the ${options.type} ${\n                    form.get('asset_id').value\n                } for ${format(form.get('date').value, 'dd MMM yyyy')}`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        await this.postForm().catch((_) => {\n            notifyError(_);\n            details.close();\n            throw _;\n        });\n        details.close();\n    }\n\n    public async postForm() {\n        const form = this._form.getValue();\n        if (!form) throw 'No form for booking';\n        if (!form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(form).join(\n                ', '\n            )}]`;\n        const asset_id = form.get('asset_id').value;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(form.get('date').value),\n            period_end: getUnixTime(\n                form.get('date').value + form.get('duration').value * 60 * 1000\n            ),\n            type: this._options.getValue().type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            throw `${asset_id} is not available at the selected time`;\n        }\n        const allowed_bookings =\n            this._settings.get(\n                `app.booking.allowed_daily_${\n                    this._options.getValue().type\n                }_count`\n            ) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email ===\n                    (form.value.user_email || currentUser()?.email)\n            ).length >= allowed_bookings\n        ) {\n            throw `You already have a desk booked`;\n        }\n        if (form.value.duration > 23 * 60) {\n            form.patchValue({\n                date: set(form.value.date, { hours: 12, minutes: 0 }),\n                duration: 60,\n            });\n        }\n        const result = await saveBooking(new Booking(form.value)).toPromise();\n        this.clearForm();\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    private async checkQuestions() {\n        if (!!this._settings.get('app.desks.ignore_questions')) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.value;\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged((x, y) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map","import { FormControl, FormGroup } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking = {} as any) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, []),\n        duration: new FormControl(booking.duration),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        asset_id: new FormControl(booking.asset_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by;\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user.id || booker.id,\n                      user_email: user.email || booker.id,\n                      booked_by_id: booker.id,\n                      booked_by_email: booker.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    return form;\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n}\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            (mouseenter)=\"loadUser()\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-4 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-2 w-2 absolute center rounded-full pointer-events-auto shadow\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n\n        <ng-template cdk-portal>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white p-4 top-0 left-0 shadow pointer-events-none\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p><label>MAC:</label> {{ mac }}</p>\n                    <p><label>Accuracy:</label> {{ variance }}m</p>\n                    <p><label>Last Seen:</label> {{ last_seen }}</p>\n                    <p type *ngIf=\"manufacturer\">\n                        <label>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                    <p ssid *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                    <p username *ngIf=\"username\">\n                        <label>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user\">\n                        <label>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Diameter of the radius circle */\n    public readonly diameter = this._details.variance * 100;\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public overlay_ref: OverlayRef = null;\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n    @ViewChild('dot') private _dot: ElementRef<HTMLDivElement>;\n\n    @HostListener('mouseenter') public onEnter = () => this.loadUser();\n    @HostListener('mouseleave') public onLeave = () => this.close();\n    @HostListener('click') public onClick = () => this.loadUser();\n    @HostListener('touchend') public onTouch = () => this.loadUser();\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n        }, 200);\n    }\n\n    public async loadUser() {\n        this.open();\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (mod) {\n            this.username = 'Loading...';\n            const details = await mod\n                .execute('check_ownership_of', [this.mac])\n                .catch((_) => null);\n            this.username =\n                details && details.assigned_to ? details.assigned_to : '';\n        }\n    }\n\n    public open() {\n        if (this.overlay_ref) this.close();\n        if (!this._portal) return;\n        this.overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._dot)\n                .withPositions([\n                    {\n                        originX: this.x_pos === 'start' ? 'end' : 'start',\n                        originY: this.y_pos === 'top' ? 'bottom' : 'top',\n                        overlayX: this.x_pos || 'end',\n                        overlayY: this.y_pos || 'bottom',\n                    },\n                ]),\n        });\n        this.overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this.overlay_ref) {\n            this.overlay_ref.dispose();\n            this.overlay_ref = null;\n        }\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface DeskInfoData {\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            name=\"space-info\"\n            [id]=\"map_id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 map-id class=\"m-0 font-medium\">{{ map_id }}</h4>\n                <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                    {{ start | date: 'shortTime' }} &ndash;\n                    {{ end | date: 'shortTime' }}\n                </p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { catchError, first, map, switchMap } from 'rxjs/operators';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nimport {\n    BaseClass,\n    currentUser,\n    HashMap,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    BookingFormService,\n    queryBookings,\n} from '@placeos/bookings';\nimport { StaffUser } from '@placeos/users';\nimport { Desk, OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _desks = new BehaviorSubject<string[]>([]);\n    private _reserved = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _users: HashMap<string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._poll,\n    ]).pipe(\n        switchMap(([lvl]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(new Date())),\n                period_end: getUnixTime(endOfDay(new Date())),\n                type: 'desk',\n                zones: lvl.id,\n            })\n        )\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, { name: 'desks' }).pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: HashMap) => new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => [])\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings?.area_management ||\n                this._org.organisation.bindings?.area_management;\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n            binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:desk_ids`\n            );\n            this.subscription(\n                `lvl-desks_list`,\n                binding.listen().subscribe((d) => this._desks.next(d || []))\n            );\n            this.subscription('lvl-desk_list_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._reserved,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, reserved]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const is_reserved = reserved.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used\n                        ? 'free'\n                        : is_reserved\n                        ? 'reserved'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking: this._settings.get('app.desks.enabled') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) =>\n                this._in_use.next(_.map((i) => i.asset_id))\n            )\n        );\n        this.interval(\n            'poll',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._reserved.next(\n            desks\n                .filter((v) => !v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                hover: true,\n                data: {\n                    map_id: desk.name,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                },\n                z_index: 20\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                this._bookings.newForm();\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    description: desk.name,\n                    user: options.host || currentUser(),\n                    booking_type: 'desk',\n                    zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : []\n                });\n                await this._bookings.confirmPost();\n                notifySuccess(\n                    `Successfull booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button z-in mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon>add</app-icon>\n        </button>\n        <button z-out mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon>remove</app-icon>\n        </button>\n        <button reset mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: 0.5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { MapPinComponent, MapRadiusComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-0 right-0\"\n        ></explore-zoom-controls>\n        <explore-map-controls\n            class=\"absolute top-0 left-0\"\n        ></explore-map-controls>\n        <!-- <explore-search class=\"absolute top-0 right-0\"></explore-search> -->\n        <div\n            zones\n            class=\"p-2 bg-white border border-gray-400 absolute left-0 m-2 rounded flex items-center\"\n        >\n            Zones\n            <mat-slide-toggle\n                class=\"ml-2\"\n                [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                (ngModelChange)=\"toggleZones($event)\"\n            ></mat-slide-toggle>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService, ExploreDesksService, ExploreZonesService],\n})\nexport class ExploreMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    const space = this._spaces.find(params.get('space'));\n                    if (!space) return;\n                    this.locateSpace(space);\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private locateSpace(space: Space) {\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.organisation.bindings\n            .location_services;\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@placeos/common';\n\n@Component({\n    selector: 'a-footer-legend',\n    template: `\n        <div class=\"relative bg-white shadow w-full\">\n            <div\n                class=\"absolute top-0 left-1/2 transform -translate-y-full -translate-x-1/2 px-2 pt-2 overflow-hidden\"\n            >\n                <button\n                    matRipple\n                    class=\"flex items-center justify-center bg-white shadow rounded-t w-32 h-8 border-none text-black\"\n                    (click)=\"show = !show\"\n                >\n                    <app-icon>keyboard_arrow_up</app-icon>\n                </button>\n            </div>\n            <div class=\"flex items-center px-2 py-1 text-xl\">\n                <div class=\"flex-1\">Keys</div>\n            </div>\n            <div\n                class=\"flex items-center justify-center p-2 border border-gray-100 space-x-2\"\n            >\n                <div\n                    class=\"colour px-4 py-2 rounded shadow flex-1 text-center\"\n                    *ngFor=\"let item of colours\"\n                    [class.dark]=\"item.dark\"\n                    [style.background-color]=\"item.colour\"\n                >\n                    {{ item.name }}\n                </div>\n            </div>\n            <div\n                icon-legend\n                class=\"flex justify-center flex-wrap h-0 w-full border border-gray-100 overflow-auto max-h-[25vh]\"\n                [class.show]=\"show\"\n            >\n                <div\n                    class=\"flex flex-col items-center justify-center h-[12.4vw] w-[12.4vw] text-[2vw] border border-gray-100 flex-grow\"\n                    *ngFor=\"let item of icon_list\"\n                >\n                    <app-icon class=\"text-[3em]\" [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text-[0.625em] font-normal\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                z-index: 10;\n                font-size: 1.25em;\n            }\n\n            .colour.dark {\n                color: #fff;\n            }\n\n            [icon-legend] {\n                transition: height 200ms;\n            }\n\n            [icon-legend].show {\n                height: 37.5vw !important;\n            }\n        `,\n    ],\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        {\n            id: 'not-bookable',\n            name: 'Not Bookable',\n            colour: '#7D7D7D',\n            dark: true,\n        },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' },\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        {\n            id: '',\n            name: 'Lifts Up/Down',\n            icon: { type: 'img', src: 'assets/img/lift.svg' },\n        },\n        {\n            id: '',\n            name: 'Fire Extinguisher',\n            icon: { type: 'img', src: 'assets/img/fireExt.svg' },\n        },\n        {\n            id: '',\n            name: 'First Aid & AED',\n            icon: { type: 'img', src: 'assets/img/aid.svg' },\n        },\n        {\n            id: '',\n            name: 'Cafe/Service',\n            icon: { type: 'img', src: 'assets/img/Cafe.svg' },\n        },\n        {\n            id: '',\n            name: 'Mail/Noticeboard',\n            icon: { type: 'img', src: 'assets/img/mail.svg' },\n        },\n        {\n            id: '',\n            name: 'Restrooms M/F',\n            icon: { type: 'img', src: 'assets/img/Restrooms.svg' },\n        },\n        {\n            id: '',\n            name: 'Map Kiosk',\n            icon: { type: 'img', src: 'assets/img/kiosk.svg' },\n        },\n        {\n            id: '',\n            name: 'Screen',\n            icon: { type: 'img', src: 'assets/img/Screen.svg' },\n        },\n        {\n            id: '',\n            name: 'Projector',\n            icon: { type: 'img', src: 'assets/img/Projector.svg' },\n        },\n        {\n            id: '',\n            name: 'Showers',\n            icon: { type: 'img', src: 'assets/img/shower.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair2.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table1.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table3.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table4.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table5.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table6.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table7.svg' },\n        },\n        {\n            id: '',\n            name: 'Funzone Games',\n            icon: { type: 'img', src: 'assets/img/Tennis.svg' },\n        },\n        {\n            id: '',\n            name: 'Concierge Pods',\n            icon: { type: 'img', src: 'assets/img/Pod.svg' },\n        },\n        {\n            id: '',\n            name: 'Phone Booths',\n            icon: { type: 'img', src: 'assets/img/booth.svg' },\n        },\n    ];\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseClass, log, SettingsService } from '@placeos/common';\nimport { ExploreStateService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends BaseClass implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        const level = localStorage?.getItem('KIOSK.level');\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n            return;\n        }\n        this._state.setLevel(level);\n        this.onMouse();\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public resetKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', Date.now());\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { ExploreComponent } from './explore.component';\nimport { FooterLegendComponent } from './footer-legend.component';\nimport { FiltersComponent } from './filters.component';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [ExploreComponent, FooterLegendComponent, FiltersComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ],\n    entryComponents: [FiltersComponent],\n})\nexport class AppExploreModule {}\n"],"sourceRoot":"webpack:///"}