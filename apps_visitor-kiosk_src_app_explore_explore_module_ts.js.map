{"version":3,"file":"apps_visitor-kiosk_src_app_explore_explore_module_ts.js","mappings":"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","names":["_c0","_c1","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","disableToggleValue","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatSlideToggle","multi","MatSlideToggleChange","constructor","source","checked","this","nextUniqueId","_MatSlideToggleMixinBase","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","_elementRef","_MatSlideToggleBase","required","_required","value","coerceBooleanProperty","_checked","_changeDetectorRef","markForCheck","inputId","id","_uniqueId","elementRef","_focusMonitor","tabIndex","defaults","animationMode","idPrefix","super","_onChange","_","_onTouched","name","labelPosition","ariaLabel","ariaLabelledby","change","EventEmitter","toggleChange","parseInt","color","defaultColor","_noopAnimations","ngAfterContentInit","monitor","subscribe","focusOrigin","_focused","Promise","resolve","then","ngOnDestroy","stopMonitoring","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","toggle","_emitChangeEvent","emit","_createChangeEvent","ɵfac","t","i0","ɵdir","type","inputs","ariaDescribedby","outputs","features","buttonId","focusMonitor","changeDetectorRef","_labelId","_handleClick","focus","_switchElement","nativeElement","isChecked","_getAriaLabelledBy","i1","ANIMATION_MODULE_TYPE","ɵcmp","selectors","viewQuery","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","disableRipple","exportAs","ngContentSelectors","decls","vars","consts","template","$event","stopPropagation","_r0","dependencies","i2","styles","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","MatCommonModule","MatRippleModule","CommonModule","bld_r3","display_name","_r5","ctx_r4","setBuilding","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","ctx_r0","building","buildings","lvl_r7","_r9","ctx_r8","setLevel","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","tmp_0_0","ctx_r1","length","level","levels","ExploreMapControlComponent","AsyncHandler","_org","_state","_router","_route","active_buildings","active_building","active_levels","lvl","setFeatures","timeout","navigate","relativeTo","queryParams","zone","bld","ngOnInit","_this","_asyncToGenerator","initialised","pipe","toPromise","subscription","queryParamMap","params","has","get","i3","core","Xpm","i18n_0","$localize","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","tmp_1_0","temp","humidity","ExploreSensorInfoComponent","_details","MAP_FEATURE_DATA","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","ExploreZonesService","_settings","_statuses","_location","_capacity","_draw","_points","_features","_bind","map","system_id","binding","getModule","listen","d","parseData","bind","init","zone_metadata","all","showMetadata","areas","details","area","capacity","hide_label","label_location","draw_polygon","properties","coordinates","geometry","getCenterPoint","updateStatus","data","labels","filled","count","area_id","content","temperature","people_count","people_count_sum","queue_size","counter","push","location","z_index","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","track_id","MapPolygonComponent","points","fill","opacity","setStyles","Yz7","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","resource","map_id","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","_r4","ctx_r3","form","patchValue","date","host","book_until","tmp_6_0","SetDatetimeModalComponent","_data","FormGroup","user","FormControl","duration","until","console","log","MAT_DIALOG_DATA","SetDatetimeModalComponent_main_6_Template","mac","manufacturer","ctx_r5","os","ctx_r6","ssid","ctx_r7","username","_r10","ctx_r9","close","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","ctx_r2","hide_fields","includes","variance","last_seen","EMPTY","ExploreDeviceInfoComponent","formatDistanceToNow","addSuffix","diameter","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","_element","toFixed","bg_color","tries","setTimeout","parent","parentElement","position","style","top","left","y_pos","x_pos","zoom$","loadUser","mod","system","execute","catch","assigned_to","attrs","i18n_1","ExploreDeviceInfoComponent_ng_template_5_Template","_r1","ExploreDesksService","_bookings","_dialog","_in_use","BehaviorSubject","_options","_presence","_signs_of_life","_users","_departments","_poll","_checked_in","_desk_bookings","combineLatest","filter","debounceTime","switchMap","queryBookings","period_start","getUnixTime","startOfMinute","now","period_end","addMinutes","zones","catchError","of","tap","l","forEach","b","departments","asset_id","user_name","extension_data","department","shareReplay","desk_list","i","Array","j","Desk","e","unsubWith","processBindingChange","_state_change","desks","in_use","presence","checked_in","signs","bookable","is_used","some","has_presence","has_signs","is_checked_in","processDesks","setOptions","enable_booking","startPolling","delay","actives","rejected","deleted","current_state","is_done","next","interval","stopPolling","clearInterval","options","getValue","devices","v","at_location","signs_of_life","desk","staff_name","processDevices","desk_id","list","device","map_width","map_height","coordinates_from","_this2","actions","ExploreDeskInfoComponent","full_size","no_scale","status","book_fn","_ref","notifyError","groups","find","currentUser","newForm","_setBookingTime","custom","user_email","email","asset_name","description","booking_type","parent_id","confirmPost","notifySuccess","apply","arguments","action","callback","setActions","_this3","endOfDay","addDays","open","afterClosed","i4","i5","ExploreParkingService","startOfDay","valueOf","asObservable","tags","events","existing_event","week_events","spaces","forkJoin","s","flatten","available_spaces","week_availablility","availability","day","day_events","isSameDay","available","_updateParkingSpaces","space","can_book","zoom_level","ExploreLockersService","_lockers","_explore","_status","lockers$","filtered_lockers$","sys_id","locker_status","lockers_banks$","locker_banks","lockers","map_status","banks","unique","level_id","bank","bank_lockers","bank_id","in_use_count","locker","locker_id","allocated","bank_info","ExploreLockerBankInfoComponent","locker_count","in_use_percent","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","center","zoomOut","max","reset","pair_r2","ExploreMapViewComponent_div_16_div_3_Template","legend","ExploreMapViewComponent","toggleZones","enabled","take","disable","show_legend","_s","_desks","_zones","_parking","_spaces","_space_pipe","url","map_url","map_styles","map_positions","map_features","map_actions","map_labels","message","o","locateSpace","showStaff","locateUser","error","_locateFeature","_x","updateZoom","updateCenter","has_coordinates","parts","split","feature","parseFloat","MapPinComponent","transform","levelWithID","_this4","locate_details","module","priority","locations","MapLocation","sort","a","indexOf","pos","MapRadiusComponent","radius","i6","i7","i8","i9","i10","i11","ExploreSpacesService","SpacePipe","ExploreMapViewComponent_div_16_Template","tmp_2_0","tmp_7_0","SharedExploreModule","oAB","cJS","ComponentsModule","FormsModule","ReactiveFormsModule","OverlayModule","PortalModule","FormFieldsModule","SharedBookingsModule","item_r2","dark","item_r3","icon","FooterLegendComponent","icon_list","src","show","FooterLegendComponent_div_9_Template","FooterLegendComponent_div_11_Template","ExploreComponent","reset_delay","onMouse","resetKiosk","onTouch","title","localStorage","getItem","emergency_phone","phone_numbers","emergency","document","activeElement","blur","closeAll","post","ROUTES","path","component","AppExploreModule","RouterModule","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2022/slide-toggle.mjs","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/visitor-kiosk/src/app/explore/footer-legend.component.ts","./apps/visitor-kiosk/src/app/explore/explore.component.ts","./apps/visitor-kiosk/src/app/explore/explore.module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false }),\n});\n\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true,\n};\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source slide toggle of the event. */\n    source, \n    /** The new `checked` value of the slide toggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\nclass _MatSlideToggleBase extends _MatSlideToggleMixinBase {\n    /** Whether the slide-toggle is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode, idPrefix) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.color = this.defaultColor = defaults.color || 'accent';\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        this.id = this._uniqueId = `${idPrefix}${++nextUniqueId}`;\n    }\n    ngAfterContentInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._focused = true;\n                this._changeDetectorRef.markForCheck();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._focused = false;\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSlideToggleBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: _MatSlideToggleBase, inputs: { name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSlideToggleBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: undefined }, { type: undefined }, { type: undefined }]; }, propDecorators: { name: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], required: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], toggleChange: [{\n                type: Output\n            }] } });\nclass MatSlideToggle extends _MatSlideToggleBase {\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n        return `${this.id || this._uniqueId}-button`;\n    }\n    constructor(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode) {\n        super(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode, 'mat-mdc-slide-toggle-');\n        this._labelId = this._uniqueId + '-label';\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n        this.toggleChange.emit();\n        if (!this.defaults.disableToggleValue) {\n            this.checked = !this.checked;\n            this._onChange(this.checked);\n            this.change.emit(new MatSlideToggleChange(this, this.checked));\n        }\n    }\n    /** Focuses the slide-toggle. */\n    focus() {\n        this._switchElement.nativeElement.focus();\n    }\n    _createChangeEvent(isChecked) {\n        return new MatSlideToggleChange(this, isChecked);\n    }\n    _getAriaLabelledBy() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Even though we have a `label` element with a `for` pointing to the button, we need the\n        // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n        return this.ariaLabel ? null : this._labelId;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSlideToggle, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }, { token: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSlideToggle, selector: \"mat-slide-toggle\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.name\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-mdc-slide-toggle-focused\": \"_focused\", \"class.mat-mdc-slide-toggle-checked\": \"checked\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-mdc-slide-toggle\" }, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_switchElement\", first: true, predicate: [\"switch\"], descendants: true }], exportAs: [\"matSlideToggle\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mdc-switch__track\\\"></div>\\n    <div class=\\\"mdc-switch__handle-track\\\">\\n      <div class=\\\"mdc-switch__handle\\\">\\n        <div class=\\\"mdc-switch__shadow\\\">\\n          <div class=\\\"mdc-elevation-overlay\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__ripple\\\">\\n          <div class=\\\"mat-mdc-slide-toggle-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__icons\\\">\\n          <svg class=\\\"mdc-switch__icon mdc-switch__icon--on\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n          </svg>\\n          <svg class=\\\"mdc-switch__icon mdc-switch__icon--off\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n          </svg>\\n        </div>\\n      </div>\\n    </div>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color, #fff)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mdc-switch{width:var(--mdc-switch-track-width, 36px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color, #616161)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color, #424242)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color, var(--mdc-theme-surface, #fff))}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__focus-ring-wrapper,.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height, 20px)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__handle::after{opacity:var(--mdc-switch-disabled-handle-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape, 10px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width, 20px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width, 20px))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size, 18px);height:var(--mdc-switch-selected-icon-size, 18px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size, 18px);height:var(--mdc-switch-unselected-icon-size, 18px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity, 0.04)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity, 0.04)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size, 48px);width:var(--mdc-switch-state-layer-size, 48px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height, 14px)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color, #424242)}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color, #424242)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape, 7px)}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'], host: {\n                        'class': 'mat-mdc-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.name]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-mdc-slide-toggle-focused]': '_focused',\n                        '[class.mat-mdc-slide-toggle-checked]': 'checked',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, exportAs: 'matSlideToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mdc-switch__track\\\"></div>\\n    <div class=\\\"mdc-switch__handle-track\\\">\\n      <div class=\\\"mdc-switch__handle\\\">\\n        <div class=\\\"mdc-switch__shadow\\\">\\n          <div class=\\\"mdc-elevation-overlay\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__ripple\\\">\\n          <div class=\\\"mat-mdc-slide-toggle-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__icons\\\">\\n          <svg class=\\\"mdc-switch__icon mdc-switch__icon--on\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n          </svg>\\n          <svg class=\\\"mdc-switch__icon mdc-switch__icon--off\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n          </svg>\\n        </div>\\n      </div>\\n    </div>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color, #fff)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mdc-switch{width:var(--mdc-switch-track-width, 36px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color, #616161)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color, #424242)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color, var(--mdc-theme-surface, #fff))}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__focus-ring-wrapper,.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height, 20px)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__handle::after{opacity:var(--mdc-switch-disabled-handle-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape, 10px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width, 20px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width, 20px))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size, 18px);height:var(--mdc-switch-selected-icon-size, 18px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size, 18px);height:var(--mdc-switch-unselected-icon-size, 18px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity, 0.04)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity, 0.04)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size, 48px);width:var(--mdc-switch-state-layer-size, 48px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height, 14px)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color, #424242)}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color, #424242)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape, 7px)}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _switchElement: [{\n                type: ViewChild,\n                args: ['switch']\n            }] } });\n\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSlideToggleRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSlideToggleRequiredValidator, selector: \"mat-slide-toggle[required][formControlName],\\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]\", providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSlideToggleRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                    providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatSlideToggleRequiredValidator],\n                    declarations: [MatSlideToggleRequiredValidator],\n                }]\n        }] });\nclass MatSlideToggleModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSlideToggleModule, declarations: [MatSlideToggle], imports: [_MatSlideToggleRequiredValidatorModule, MatCommonModule, MatRippleModule, CommonModule], exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSlideToggleModule, imports: [_MatSlideToggleRequiredValidatorModule, MatCommonModule, MatRippleModule, CommonModule, _MatSlideToggleRequiredValidatorModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [_MatSlideToggleRequiredValidatorModule, MatCommonModule, MatRippleModule, CommonModule],\n                    exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule],\n                    declarations: [MatSlideToggle],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleBase, _MatSlideToggleRequiredValidatorModule };\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {\n        console.log('Data:', this._data);\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    addMinutes,\n    endOfDay,\n    getUnixTime,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._options,\n        this._poll,\n    ]).pipe(\n        filter(([lvl]) => !!lvl),\n        debounceTime(600),\n        switchMap(([lvl, { date }]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(date || Date.now())),\n                period_end: getUnixTime(addMinutes(date || Date.now(), 60)),\n                type: 'desk',\n                zones: lvl.id,\n            }).pipe(catchError(() => of([] as Booking[])))\n        ),\n        tap((l) => {\n            this._users = {};\n            this._departments = {};\n            l.forEach((b) => {\n                const departments =\n                    this._settings.get('app.department_map') || {};\n                this._users[b.asset_id] = b.user_name;\n                this._departments[b.asset_id] =\n                    departments[b.extension_data.department] || '';\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in = checked_in.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used && !has_presence && !is_checked_in\n                        ? has_signs\n                            ? 'signs-of-life'\n                            : 'free'\n                        : !has_presence && !is_checked_in\n                        ? 'pending'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) => {\n                const actives = _.filter(\n                    (e) =>\n                        !(\n                            e.rejected ||\n                            e.deleted ||\n                            e.extension_data.current_state === 'ended' ||\n                            e.is_done\n                        )\n                );\n                this._in_use.next(actives.map((i) => i.asset_id));\n                this._checked_in.next(\n                    actives.filter((e) => e.checked_in).map((i) => i.asset_id)\n                );\n            })\n        );\n        this._poll.next(Date.now());\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n        if (options.date) this._poll.next(Date.now());\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this._signs_of_life.next(\n            desks\n                .filter((v) => v.signs_of_life)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        console.log('Spaces:', spaces, available);\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe(({ value }) =>\n                        this._status.next(\n                            value?.filter((_) => _.location === 'locker') || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            console.log('Features:', features);\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        console.log('ExploreLockersService');\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        console.error(_);\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@placeos/common';\n\n@Component({\n    selector: 'a-footer-legend',\n    template: `\n        <div class=\"relative bg-white shadow w-full\">\n            <div\n                class=\"absolute top-0 left-1/2 transform -translate-y-full -translate-x-1/2 px-2 pt-2 overflow-hidden\"\n            >\n                <button\n                    matRipple\n                    class=\"flex items-center justify-center bg-white shadow rounded-t w-32 h-8 border-none text-black\"\n                    (click)=\"show = !show\"\n                >\n                    <app-icon>keyboard_arrow_up</app-icon>\n                </button>\n            </div>\n            <div class=\"flex items-center px-2 py-1 text-xl\">\n                <div class=\"flex-1\">Keys</div>\n            </div>\n            <div\n                class=\"flex items-center justify-center p-2 border border-gray-100 space-x-2\"\n            >\n                <div\n                    class=\"colour px-4 py-2 rounded shadow flex-1 text-center\"\n                    *ngFor=\"let item of colours\"\n                    [class.dark]=\"item.dark\"\n                    [style.background-color]=\"item.colour\"\n                >\n                    {{ item.name }}\n                </div>\n            </div>\n            <div\n                icon-legend\n                class=\"flex justify-center flex-wrap h-0 w-full border border-gray-100 overflow-auto max-h-[25vh]\"\n                [class.show]=\"show\"\n            >\n                <div\n                    class=\"flex flex-col items-center justify-center h-[12.4vw] w-[12.4vw] text-[2vw] border border-gray-100 flex-grow\"\n                    *ngFor=\"let item of icon_list\"\n                >\n                    <app-icon class=\"text-[3em]\" [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text-[0.625em] font-normal\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                z-index: 10;\n                font-size: 1.25em;\n            }\n\n            .colour.dark {\n                color: #fff;\n            }\n\n            [icon-legend] {\n                transition: height 200ms;\n            }\n\n            [icon-legend].show {\n                height: 37.5vw !important;\n            }\n        `,\n    ],\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        {\n            id: 'not-bookable',\n            name: 'Not Bookable',\n            colour: '#7D7D7D',\n            dark: true,\n        },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' },\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        {\n            id: '',\n            name: 'Lifts Up/Down',\n            icon: { type: 'img', src: 'assets/img/lift.svg' },\n        },\n        {\n            id: '',\n            name: 'Fire Extinguisher',\n            icon: { type: 'img', src: 'assets/img/fireExt.svg' },\n        },\n        {\n            id: '',\n            name: 'First Aid & AED',\n            icon: { type: 'img', src: 'assets/img/aid.svg' },\n        },\n        {\n            id: '',\n            name: 'Cafe/Service',\n            icon: { type: 'img', src: 'assets/img/Cafe.svg' },\n        },\n        {\n            id: '',\n            name: 'Mail/Noticeboard',\n            icon: { type: 'img', src: 'assets/img/mail.svg' },\n        },\n        {\n            id: '',\n            name: 'Restrooms M/F',\n            icon: { type: 'img', src: 'assets/img/Restrooms.svg' },\n        },\n        {\n            id: '',\n            name: 'Map Kiosk',\n            icon: { type: 'img', src: 'assets/img/kiosk.svg' },\n        },\n        {\n            id: '',\n            name: 'Screen',\n            icon: { type: 'img', src: 'assets/img/Screen.svg' },\n        },\n        {\n            id: '',\n            name: 'Projector',\n            icon: { type: 'img', src: 'assets/img/Projector.svg' },\n        },\n        {\n            id: '',\n            name: 'Showers',\n            icon: { type: 'img', src: 'assets/img/shower.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair2.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table1.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table3.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table4.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table5.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table6.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table7.svg' },\n        },\n        {\n            id: '',\n            name: 'Funzone Games',\n            icon: { type: 'img', src: 'assets/img/Tennis.svg' },\n        },\n        {\n            id: '',\n            name: 'Concierge Pods',\n            icon: { type: 'img', src: 'assets/img/Pod.svg' },\n        },\n        {\n            id: '',\n            name: 'Phone Booths',\n            icon: { type: 'img', src: 'assets/img/booth.svg' },\n        },\n    ];\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { AsyncHandler, log, SettingsService } from '@placeos/common';\nimport { ExploreStateService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        const level = localStorage?.getItem('KIOSK.level');\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n            return;\n        }\n        this._state.setLevel(level);\n        this.onMouse();\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public resetKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', Date.now());\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { ExploreComponent } from './explore.component';\nimport { FooterLegendComponent } from './footer-legend.component';\nimport { FiltersComponent } from './filters.component';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [ExploreComponent, FooterLegendComponent, FiltersComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ]\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[0]}