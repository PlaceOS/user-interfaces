{"version":3,"file":"apps_visitor-kiosk_src_app_explore_explore_module_ts.js","mappings":"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","names":["MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","disableToggleValue","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatSlideToggle","multi","MatSlideToggleChange","constructor","source","checked","this","nextUniqueId","_MatSlideToggleMixinBase","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","_elementRef","_MatSlideToggleBase","required","_required","value","coerceBooleanProperty","_checked","_changeDetectorRef","markForCheck","inputId","id","_uniqueId","elementRef","_focusMonitor","tabIndex","defaults","animationMode","idPrefix","super","_onChange","_","_onTouched","name","labelPosition","ariaLabel","ariaLabelledby","change","EventEmitter","toggleChange","parseInt","color","defaultColor","_noopAnimations","ngAfterContentInit","monitor","subscribe","focusOrigin","_focused","Promise","resolve","then","ngOnDestroy","stopMonitoring","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","toggle","_emitChangeEvent","emit","_createChangeEvent","ɵfac","i0","ɵdir","inputs","buttonId","focusMonitor","changeDetectorRef","_labelId","_handleClick","focus","_switchElement","nativeElement","isChecked","_getAriaLabelledBy","i1","ANIMATION_MODULE_TYPE","ɵcmp","selectors","_c0","_t","ctx","ngContentSelectors","$event","i2","styles","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","MatCommonModule","MatRippleModule","CommonModule","ExploreMapControlComponent","AsyncHandler","_org","_state","_router","_route","active_buildings","active_building","active_levels","level","lvl","setFeatures","timeout","navigate","relativeTo","queryParams","zone","bld","building","ngOnInit","_this","initialised","pipe","first","toPromise","subscription","queryParamMap","params","has","setLevel","get","core","$localize","ExploreSensorInfoComponent","_details","temp","humidity","MAP_FEATURE_DATA","ExploreZonesService","_settings","map","_statuses","system_id","binding","getModule","listen","d","parseData","bind","init","zone_metadata","all","levels","showMetadata","areas","details","area","capacity","hide_label","label_location","draw_polygon","properties","coordinates","geometry","_capacity","_location","length","getCenterPoint","_draw","_points","updateStatus","_bind","data","labels","features","filled","count","area_id","content","temperature","people_count","people_count_sum","queue_size","counter","push","location","z_index","_features","setLabels","style_map","colours","zone_id","colour","DEFAULT_COLOURS","track_id","MapPolygonComponent","points","fill","opacity","setStyles","diff","reduce","m","x","y","x_min","x_max","y_min","y_max","SetDatetimeModalComponent","_data","host","FormGroup","user","FormControl","date","duration","until","MAT_DIALOG_DATA","ExploreDeskInfoComponent","_element","map_id","start","end","status","department","tries","setTimeout","parent","parentElement","position","style","top","left","y_pos","x_pos","available_until","EMPTY","ExploreDeviceInfoComponent","hide_fields","last_seen","formatDistanceToNow","addSuffix","diameter","variance","zoom","distance","Math","abs","differenceInMinutes","Date","distance_color","mac","manufacturer","os","ssid","toFixed","bg_color","zoom$","loadUser","username","mod","system","execute","catch","assigned_to","ExploreDesksService","_bookings","_dialog","BehaviorSubject","combineLatest","_poll","switchMap","queryBookings","period_start","getUnixTime","startOfMinute","period_end","addMinutes","type","zones","tap","l","_users","_departments","forEach","b","departments","asset_id","user_name","extension_data","shareReplay","i","Array","j","Desk","catchError","e","unsubWith","processBindingChange","desk_list","_in_use","_presence","_checked_in","_signs_of_life","_options","desks","in_use","presence","checked_in","signs","bookable","is_used","some","has_presence","has_signs","is_checked_in","processDesks","setOptions","enable_booking","_state_change","startPolling","delay","_desk_bookings","actives","filter","rejected","deleted","current_state","is_done","next","interval","valueOf","stopPolling","clearInterval","options","getValue","devices","v","includes","at_location","signs_of_life","desk","staff_name","processDevices","desk_id","list","device","map_width","map_height","coordinates_from","actions","full_size","no_scale","book_fn","_this2","notifyError","newForm","_setBookingTime","form","custom","patchValue","asset_name","description","currentUser","booking_type","parent_id","confirmPost","notifySuccess","action","callback","setActions","_this3","endOfDay","addDays","now","open","afterClosed","ExploreParkingService","startOfDay","asObservable","tags","email","forkJoin","s","flatten","events","spaces","find","week_events","availability","day","day_events","isSameDay","available_spaces","available","_updateParkingSpaces","console","log","space","can_book","ExploreLockerBankInfoComponent","bank","in_use_count","ExploreLockersService","_lockers","_explore","filtered_lockers$","sys_id","of","_status","lockers_banks$","lockers$","locker_banks","lockers","map_status","banks","unique","bank_id","bank_lockers","locker","locker_id","allocated","bank_info","locker_count","in_use_percent","locker_status","ExploreZoomControlComponent","setPositions","min","positions","center","max","ExploreMapViewComponent","toggleZones","enabled","take","disable","show_legend","legend","_s","_desks","_zones","_parking","_spaces","_space_pipe","map_url","map_styles","map_positions","map_features","map_actions","map_labels","message","o","reset","locateSpace","showStaff","locateUser","error","_locateFeature","updateZoom","updateCenter","has_coordinates","parts","split","feature","parseFloat","MapPinComponent","transform","levelWithID","display_name","locate_details","_this4","module","priority","locations","MapLocation","sort","a","indexOf","pos","MapRadiusComponent","radius","ExploreSpacesService","SpacePipe","ExploreSearchService","_emergency_contacts","_filter","debounceTime","_loading","q","search_fn","querySystems","organisation","Space","_space_search","_user_search","users","contacts","search","toLowerCase","results","u","localeCompare","queryUsers","authority_id","authority","searchStaff","search_results","contacts_map","setFilter","str","ExploreSearchComponent","checkClick","event","_el","contains","target","show","_input_el","blur","_search","loading","Object","select","showSearch","closeSearch","search_str","item","query","SharedExploreModule","ComponentsModule","FormsModule","ReactiveFormsModule","OverlayModule","PortalModule","FormFieldsModule","FooterLegendComponent","dark","icon","src","ExploreComponent","resetKiosk","reset_delay","title","localStorage","getItem","onMouse","emergency_phone","level_id","buildings","phone_numbers","emergency","document","activeElement","closeAll","post","ROUTES","path","component","AppExploreModule","RouterModule","SharedSpacesModule","SharedComponentsModule"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2020/slide-toggle.mjs","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/visitor-kiosk/src/app/explore/footer-legend.component.ts","./apps/visitor-kiosk/src/app/explore/explore.component.ts","./apps/visitor-kiosk/src/app/explore/explore.module.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false }),\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true,\n};\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source slide toggle of the event. */\n    source, \n    /** The new `checked` value of the slide toggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\nclass _MatSlideToggleBase extends _MatSlideToggleMixinBase {\n    /** Whether the slide-toggle is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode, idPrefix) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.color = this.defaultColor = defaults.color || 'accent';\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        this.id = this._uniqueId = `${idPrefix}${++nextUniqueId}`;\n    }\n    ngAfterContentInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._focused = true;\n                this._changeDetectorRef.markForCheck();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._focused = false;\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n    }\n}\n_MatSlideToggleBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSlideToggleBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatSlideToggleBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: _MatSlideToggleBase, inputs: { name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSlideToggleBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: undefined }, { type: undefined }, { type: undefined }]; }, propDecorators: { name: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], required: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], toggleChange: [{\n                type: Output\n            }] } });\nclass MatSlideToggle extends _MatSlideToggleBase {\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n        return `${this.id || this._uniqueId}-button`;\n    }\n    constructor(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode) {\n        super(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode, 'mat-mdc-slide-toggle-');\n        this._labelId = this._uniqueId + '-label';\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n        this.toggleChange.emit();\n        if (!this.defaults.disableToggleValue) {\n            this.checked = !this.checked;\n            this._onChange(this.checked);\n            this.change.emit(new MatSlideToggleChange(this, this.checked));\n        }\n    }\n    /** Focuses the slide-toggle. */\n    focus() {\n        this._switchElement.nativeElement.focus();\n    }\n    _createChangeEvent(isChecked) {\n        return new MatSlideToggleChange(this, isChecked);\n    }\n    _getAriaLabelledBy() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Even though we have a `label` element with a `for` pointing to the button, we need the\n        // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n        return this.ariaLabel ? null : this._labelId;\n    }\n}\nMatSlideToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSlideToggle, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }, { token: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlideToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatSlideToggle, selector: \"mat-slide-toggle\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.name\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-mdc-slide-toggle-focused\": \"_focused\", \"class.mat-mdc-slide-toggle-checked\": \"checked\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-mdc-slide-toggle\" }, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_switchElement\", first: true, predicate: [\"switch\"], descendants: true }], exportAs: [\"matSlideToggle\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mdc-switch__track\\\"></div>\\n    <div class=\\\"mdc-switch__handle-track\\\">\\n      <div class=\\\"mdc-switch__handle\\\">\\n        <div class=\\\"mdc-switch__shadow\\\">\\n          <div class=\\\"mdc-elevation-overlay\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__ripple\\\">\\n          <div class=\\\"mat-mdc-slide-toggle-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__icons\\\">\\n          <svg class=\\\"mdc-switch__icon mdc-switch__icon--on\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n          </svg>\\n          <svg class=\\\"mdc-switch__icon mdc-switch__icon--off\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n          </svg>\\n        </div>\\n      </div>\\n    </div>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color, #fff)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mdc-switch{width:var(--mdc-switch-track-width, 36px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color, #616161)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color, #424242)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color, var(--mdc-theme-surface, #fff))}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__focus-ring-wrapper,.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height, 20px)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__handle::after{opacity:var(--mdc-switch-disabled-handle-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape, 10px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width, 20px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width, 20px))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size, 18px);height:var(--mdc-switch-selected-icon-size, 18px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size, 18px);height:var(--mdc-switch-unselected-icon-size, 18px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity, 0.04)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity, 0.04)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size, 48px);width:var(--mdc-switch-state-layer-size, 48px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height, 14px)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color, #424242)}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color, #424242)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape, 7px)}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'], host: {\n                        'class': 'mat-mdc-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.name]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-mdc-slide-toggle-focused]': '_focused',\n                        '[class.mat-mdc-slide-toggle-checked]': 'checked',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, exportAs: 'matSlideToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], template: \"<div class=\\\"mdc-form-field\\\"\\n     [class.mdc-form-field--align-end]=\\\"labelPosition == 'before'\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mdc-switch__track\\\"></div>\\n    <div class=\\\"mdc-switch__handle-track\\\">\\n      <div class=\\\"mdc-switch__handle\\\">\\n        <div class=\\\"mdc-switch__shadow\\\">\\n          <div class=\\\"mdc-elevation-overlay\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__ripple\\\">\\n          <div class=\\\"mat-mdc-slide-toggle-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__icons\\\">\\n          <svg class=\\\"mdc-switch__icon mdc-switch__icon--on\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n          </svg>\\n          <svg class=\\\"mdc-switch__icon mdc-switch__icon--off\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n          </svg>\\n        </div>\\n      </div>\\n    </div>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color, #fff)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mdc-switch{width:var(--mdc-switch-track-width, 36px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color, #310077)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color, #616161)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color, #212121)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color, #424242)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color, var(--mdc-theme-surface, #fff))}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__focus-ring-wrapper,.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height, 20px)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__handle::after{opacity:var(--mdc-switch-disabled-handle-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape, 10px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width, 20px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width, 20px))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size, 18px);height:var(--mdc-switch-selected-icon-size, 18px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size, 18px);height:var(--mdc-switch-unselected-icon-size, 18px)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color, #424242)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity, 0.04)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity, 0.04)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, 0.1)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size, 48px);width:var(--mdc-switch-state-layer-size, 48px)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height, 14px)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity, 0.12)}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color, #d7bbff)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color, #424242)}.mat-mdc-slide-toggle .mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color, #e0e0e0)}.mat-mdc-slide-toggle .mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color, #424242)}.mat-mdc-slide-toggle .mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape, 7px)}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _switchElement: [{\n                type: ViewChild,\n                args: ['switch']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSlideToggleRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatSlideToggleRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatSlideToggleRequiredValidator, selector: \"mat-slide-toggle[required][formControlName],\\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]\", providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSlideToggleRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                    providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n_MatSlideToggleRequiredValidatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] });\n_MatSlideToggleRequiredValidatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatSlideToggleRequiredValidator],\n                    declarations: [MatSlideToggleRequiredValidator],\n                }]\n        }] });\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSlideToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSlideToggleModule, declarations: [MatSlideToggle], imports: [_MatSlideToggleRequiredValidatorModule, MatCommonModule, MatRippleModule, CommonModule], exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule] });\nMatSlideToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSlideToggleModule, imports: [_MatSlideToggleRequiredValidatorModule, MatCommonModule, MatRippleModule, CommonModule, _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [_MatSlideToggleRequiredValidatorModule, MatCommonModule, MatRippleModule, CommonModule],\n                    exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule],\n                    declarations: [MatSlideToggle],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleBase, _MatSlideToggleRequiredValidatorModule };\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: string;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\">\n            <div class=\"flex items-center space-x-2 whitespace-nowrap pr-2\" *ngIf=\"temp\">\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div class=\"flex items-center space-x-2 whitespace-nowrap pr-2\" *ngIf=\"humidity\">\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div *ngIf=\"temp > 82\" class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\">\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n        }\n    ) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [class.hidden]=\"status === 'free'\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    addMinutes,\n    endOfDay,\n    getUnixTime,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    catchError,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._poll,\n    ]).pipe(\n        switchMap(([lvl]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(new Date())),\n                period_end: getUnixTime(addMinutes(new Date(), 60)),\n                type: 'desk',\n                zones: lvl.id,\n            })\n        ),\n        tap((l) => {\n            this._users = {};\n            this._departments = {};\n            l.forEach((b) => {\n                const departments =\n                    this._settings.get('app.department_map') || {};\n                this._users[b.asset_id] = b.user_name;\n                this._departments[b.asset_id] =\n                    departments[b.extension_data.department] || '';\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in = checked_in.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used && !has_presence && !is_checked_in\n                        ? has_signs\n                            ? 'signs-of-life'\n                            : 'free'\n                        : !has_presence && !is_checked_in\n                        ? 'pending'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) => {\n                const actives = _.filter(\n                    (e) =>\n                        !(\n                            e.rejected ||\n                            e.deleted ||\n                            e.extension_data.current_state === 'ended' ||\n                            e.is_done\n                        )\n                );\n                this._in_use.next(actives.map((i) => i.asset_id));\n                this._checked_in.next(\n                    actives.filter((e) => e.checked_in).map((i) => i.asset_id)\n                );\n            })\n        );\n        this.interval(\n            'poll',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this._signs_of_life.next(\n            desks\n                .filter((v) => v.signs_of_life)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Record<string, any>[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free')\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                const { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false\n                );\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user: user || options.host || currentUser(),\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        console.log('Spaces:', spaces, available);\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { getModule } from '@placeos/ts-client';\nimport { LockerBank } from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3>{{ bank.name }}</h3>\n                <p>\n                    {{ in_use_count }} lockers in use of {{ bank.locker_count }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this._status.next(\n                            d.filter((_) => _.location === 'locker')\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([locker_banks, lockers, status]) => {\n            const features = [];\n            const map_status = {};\n            const actions = [];\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(lockers.map((_) => _.bank_id));\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[bank_info.map_id] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setActions('lockers', actions);\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        console.log('ExploreLockersService');\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        console.error(_);\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    authority,\n    getModule,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) => (q?.length > 2 ? this.search_fn(q) : of([]))),\n        catchError(() => [])\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._filter,\n    ]).pipe(\n        map(([spaces, users, contacts, filter]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map((u) => ({\n                            id: u.email,\n                            type: (u as any).type || 'contact',\n                            name: u.name,\n                            description: u.email,\n                        }))\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        let sys_id: any = this._org.binding('location_services');\n        if (!sys_id) return;\n        const mod = getModule(sys_id, 'LocationServices');\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div class=\"flex items-center leading-tight\">\n                        <div class=\"flex-1 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@placeos/common';\n\n@Component({\n    selector: 'a-footer-legend',\n    template: `\n        <div class=\"relative bg-white shadow w-full\">\n            <div\n                class=\"absolute top-0 left-1/2 transform -translate-y-full -translate-x-1/2 px-2 pt-2 overflow-hidden\"\n            >\n                <button\n                    matRipple\n                    class=\"flex items-center justify-center bg-white shadow rounded-t w-32 h-8 border-none text-black\"\n                    (click)=\"show = !show\"\n                >\n                    <app-icon>keyboard_arrow_up</app-icon>\n                </button>\n            </div>\n            <div class=\"flex items-center px-2 py-1 text-xl\">\n                <div class=\"flex-1\">Keys</div>\n            </div>\n            <div\n                class=\"flex items-center justify-center p-2 border border-gray-100 space-x-2\"\n            >\n                <div\n                    class=\"colour px-4 py-2 rounded shadow flex-1 text-center\"\n                    *ngFor=\"let item of colours\"\n                    [class.dark]=\"item.dark\"\n                    [style.background-color]=\"item.colour\"\n                >\n                    {{ item.name }}\n                </div>\n            </div>\n            <div\n                icon-legend\n                class=\"flex justify-center flex-wrap h-0 w-full border border-gray-100 overflow-auto max-h-[25vh]\"\n                [class.show]=\"show\"\n            >\n                <div\n                    class=\"flex flex-col items-center justify-center h-[12.4vw] w-[12.4vw] text-[2vw] border border-gray-100 flex-grow\"\n                    *ngFor=\"let item of icon_list\"\n                >\n                    <app-icon class=\"text-[3em]\" [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text-[0.625em] font-normal\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                z-index: 10;\n                font-size: 1.25em;\n            }\n\n            .colour.dark {\n                color: #fff;\n            }\n\n            [icon-legend] {\n                transition: height 200ms;\n            }\n\n            [icon-legend].show {\n                height: 37.5vw !important;\n            }\n        `,\n    ],\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        {\n            id: 'not-bookable',\n            name: 'Not Bookable',\n            colour: '#7D7D7D',\n            dark: true,\n        },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' },\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        {\n            id: '',\n            name: 'Lifts Up/Down',\n            icon: { type: 'img', src: 'assets/img/lift.svg' },\n        },\n        {\n            id: '',\n            name: 'Fire Extinguisher',\n            icon: { type: 'img', src: 'assets/img/fireExt.svg' },\n        },\n        {\n            id: '',\n            name: 'First Aid & AED',\n            icon: { type: 'img', src: 'assets/img/aid.svg' },\n        },\n        {\n            id: '',\n            name: 'Cafe/Service',\n            icon: { type: 'img', src: 'assets/img/Cafe.svg' },\n        },\n        {\n            id: '',\n            name: 'Mail/Noticeboard',\n            icon: { type: 'img', src: 'assets/img/mail.svg' },\n        },\n        {\n            id: '',\n            name: 'Restrooms M/F',\n            icon: { type: 'img', src: 'assets/img/Restrooms.svg' },\n        },\n        {\n            id: '',\n            name: 'Map Kiosk',\n            icon: { type: 'img', src: 'assets/img/kiosk.svg' },\n        },\n        {\n            id: '',\n            name: 'Screen',\n            icon: { type: 'img', src: 'assets/img/Screen.svg' },\n        },\n        {\n            id: '',\n            name: 'Projector',\n            icon: { type: 'img', src: 'assets/img/Projector.svg' },\n        },\n        {\n            id: '',\n            name: 'Showers',\n            icon: { type: 'img', src: 'assets/img/shower.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair2.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table1.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table3.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table4.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table5.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table6.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table7.svg' },\n        },\n        {\n            id: '',\n            name: 'Funzone Games',\n            icon: { type: 'img', src: 'assets/img/Tennis.svg' },\n        },\n        {\n            id: '',\n            name: 'Concierge Pods',\n            icon: { type: 'img', src: 'assets/img/Pod.svg' },\n        },\n        {\n            id: '',\n            name: 'Phone Booths',\n            icon: { type: 'img', src: 'assets/img/booth.svg' },\n        },\n    ];\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { AsyncHandler, log, SettingsService } from '@placeos/common';\nimport { ExploreStateService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends AsyncHandler implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        const level = localStorage?.getItem('KIOSK.level');\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n            return;\n        }\n        this._state.setLevel(level);\n        this.onMouse();\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public resetKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', Date.now());\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { ExploreComponent } from './explore.component';\nimport { FooterLegendComponent } from './footer-legend.component';\nimport { FiltersComponent } from './filters.component';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [ExploreComponent, FooterLegendComponent, FiltersComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ]\n})\nexport class AppExploreModule {}\n"],"x_google_ignoreList":[0]}