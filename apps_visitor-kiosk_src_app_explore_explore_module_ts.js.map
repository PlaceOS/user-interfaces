{"version":3,"mappings":"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GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIjB,EAAUE,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKF,EAAUC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,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","names":["MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatSlideToggle","multi","constructor","source","checked","this","_MatSlideToggleBase","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","_elementRef","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","animationMode","super","_onChange","_","_onTouched","_uniqueId","_required","_checked","name","id","labelPosition","ariaLabel","ariaLabelledby","change","EventEmitter","toggleChange","parseInt","color","defaultColor","_noopAnimations","required","value","coerceBooleanProperty","markForCheck","inputId","ngAfterContentInit","monitor","subscribe","focusOrigin","Promise","resolve","then","ngOnDestroy","stopMonitoring","_onChangeEvent","event","stopPropagation","emit","_inputElement","nativeElement","_emitChangeEvent","_onInputClick","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","focus","options","origin","focusVia","toggle","MatSlideToggleChange","_onLabelTextChange","detectChanges","ɵfac","i0","i1","ANIMATION_MODULE_TYPE","ɵcmp","selectors","He","Ke","We","i","o","ngContentSelectors","directives","i2","i3","styles","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","MatRippleModule","MatCommonModule","ObserversModule","ExploreStateService","BaseClass","_org","_spaces","_settings","BehaviorSubject","zoom","center","x","y","disable","_level","asObservable","_message","combineLatest","list","pipe","map","level","spaces","filter","space","zones","includes","a","lvl","map_id","_positions","_features","_options","debounceTime","features","key","p","_a","u","disable_features","_b","concat","_actions","actions","disable_actions","_labels","labels","disable_labels","_styles","style_mappings","text","display","disable_styles","Object","d","_c","init","positions","getValue","active_level","initialised","first","toPromise","active_building","bld","level_list","levelsForBuilding","find","length","setLevel","get","setOptions","old_options","unique","next","reset","setPositions","zone_id","levelWithID","setStyles","style_map","setFeatures","feature_map","setActions","actions_map","setLabels","labels_map","ctx_r4","ctx_r8","ExploreMapControlComponent","_state","_router","_route","building_list","active_levels","timeout","navigate","relativeTo","queryParams","zone","building","ngOnInit","subscription","queryParamMap","params","has","ExploreSpaceInfoComponent","_details","_element","events","status","show_features","tries","setTimeout","parent","parentElement","position","style","top","left","y_pos","x_pos","available_until","MAP_FEATURE_DATA","ctx_r7","ExploreBookingModalComponent","_data","_dialog_ref","max_duration","booking","CalendarEvent","attendees","resource","form","generateEventForm","save","markAllAsTouched","on_error","msg","loading","notifyError","disableClose","valid","controls","invalid","push","join","querySpaceAvailability","system_ids","t","resources","s","period_start","Math","floor","date","period_end","duration","catch","e","saveEvent","notifySuccess","display_name","close","MAT_DIALOG_DATA","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","url","size","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","n","l","f","c","g","h","v","m","b","VanillaQR","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","width","height","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","console","log","toImage","Error","Image","src","toDataURL","ExploreBookQrComponent","code","qr","generateQRCode","location","replace","email","DEFAULT_COLOURS","free","pending","reserved","busy","unknown","ExploreSpacesService","_dialog","unsubWith","_statuses","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","_bind","bookSpace","bookable","open","data","bookings","_bookings","clearTimeout","updateStatus","colours","fill","opacity","full_size","no_scale","content","Space","action","callback","ExploreZonesService","buildings","parent_id","system_id","bindings","area_management","organisation","parseData","zone_metadata","all","levels","showMetadata","areas","details","area","capacity","hide_label","label_location","draw_polygon","properties","coordinates","geometry","_capacity","_location","getCenterPoint","_draw","_points","filled","count","area_id","temperature","people_count","people_count_sum","humidity","queue_size","counter","z_index","colour","MapPolygonComponent","points","diff","reduce","x_min","x_max","y_min","y_max","ctx_r3","DeskQuestionsModalComponent","FormGroup","travelled","FormControl","Validators","unwell","contact","submit","keys","failure","reason","asset_id","asset_name","extension_data","booking_start","getUnixTime","roundToNearestMinutes","addMinutes","Date","now","nearestTo","booking_end","booking_type","type","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","user_email","user_id","user_name","title","description","checked_in","rejected","approved","booked_by_id","booked_by_name","booked_by_email","approver_id","approver_email","approver_name","access","all_day","toJSON","is_today","isSameDay","is_done","start","end","addHours","isAfter","map_url","centered_at","desk_ids","element","body","createViewer","viewer","getViewer","point","mappings","dist","closest","desk","sqrt","removeChild","removeViewer","BOOKINGS_ENDPOINT","q","query","toQueryString","item","Booking","BOOKING_URLS","BookingFormService","JSON","parse","sessionStorage","getItem","_loading","shareReplay","compare","distinctUntilChanged","distinctUntilKeyChanged","switchMap","listChildMetadata","flatten","metadata","desks","Array","of","tap","assets","asset","forEach","sort","localeCompare","_form_value","queryBookings","every","Z","bkn","available_assets","groups","asset_list","members","currentUser","group","pop","NavigationEnd","clearForm","view","_view","_form","_booking","newForm","user","booked_by","valueChanges","booker","patchValue","emitEvent","generateBookingForm","storeForm","setView","resetForm","removeItem","setItem","stringify","loadForm","confirmPost","checkQuestions","format","openConfirmModal","icon","postFormForGroup","postForm","ignore_check","getInvalidFields","checkResourceAvailable","set","hours","minutes","result","method","patch","put","encodeURIComponent","updateBooking","post","createBooking","saveBooking","last_success","extra_members","take","active_asset","_getNearbyResources","group_members","idx","S","ref","race","componentInstance","afterClosed","allowed_bookings","current","nearby_assets","findNearbyFeature","ExploreDeviceInfoComponent","mac","manufacturer","os","ssid","variance","toFixed","bg_color","distance_color","last_seen","formatDistanceToNow","addSuffix","diameter","distance","zoom$","loadUser","username","system","execute","assigned_to","ctx","ExploreDeskInfoComponent","ctx_r1","oxw","SetDatetimeModalComponent","until","ExploreDesksService","_poll","startOfDay","endOfDay","j","Desk","catchError","processBindingChange","_desks","desk_list","_in_use","_reserved","in_use","is_used","some","has_presence","processDesks","enable_booking","_state_change","startPolling","delay","_desk_bookings","interval","valueOf","stopPolling","clearInterval","devices","at_location","processDevices","desk_id","device","map_width","map_height","coordinates_from","_users","staff_name","book_fn","__awaiter","_setBookingTime","host","addDays","ExploreZoomControlComponent","min","max","ExploreMapViewComponent","_s","_zones","map_styles","map_positions","map_features","map_actions","map_labels","message","toggleZones","enabled","locateSpace","showStaff","locateUser","_locateFeature","has_coordinates","parts","split","feature","track_id","parseFloat","MapPinComponent","locate_details","location_services","module","locations","MapLocation","priority","indexOf","pos","MapRadiusComponent","radius","SharedExploreModule","CommonModule","ComponentsModule","FormsModule","ReactiveFormsModule","OverlayModule","PortalModule","FormFieldsModule","FooterLegendComponent","dark","ExploreComponent","resetKiosk","reset_delay","localStorage","onMouse","emergency_phone","level_id","phone_numbers","emergency","activeElement","blur","closeAll","ROUTES","path","component","AppExploreModule","RouterModule","SharedSpacesModule","SharedComponentsModule"],"sources":["./node_modules/@angular/material/fesm2015/slide-toggle.mjs","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/booking-form.service.ts","./node_modules/rxjs/_esm2015/internal/operators/distinctUntilKeyChanged.js","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore.module.ts","./apps/visitor-kiosk/src/app/explore/footer-legend.component.ts","./apps/visitor-kiosk/src/app/explore/explore.component.ts","./apps/visitor-kiosk/src/app/explore/explore.module.ts"],"sourcesContent":["import * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false }),\n});\n\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true,\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nconst _MatSlideToggleBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.color = this.defaultColor = defaults.color || 'accent';\n        this._noopAnimations = animationMode === 'NoopAnimations';\n    }\n    /** Whether the slide-toggle is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    ngAfterContentInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: MatSlideToggle, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }, { token: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlideToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", type: MatSlideToggle, selector: \"mat-slide-toggle\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-checked\": \"checked\", \"class.mat-disabled\": \"disabled\", \"class.mat-slide-toggle-label-before\": \"labelPosition == \\\"before\\\"\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-slide-toggle\" }, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_thumbEl\", first: true, predicate: [\"thumbContainer\"], descendants: true }, { propertyName: \"_thumbBarEl\", first: true, predicate: [\"toggleBar\"], descendants: true }, { propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }], exportAs: [\"matSlideToggle\"], usesInheritance: true, ngImport: i0, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <span #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <span class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <span class=\\\"mat-slide-toggle-thumb\\\"></span>\\n      <span class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n        <span class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></span>\\n      </span>\\n    </span>\\n\\n  </span>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;-moz-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;display:block}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: MatSlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', exportAs: 'matSlideToggle', host: {\n                        'class': 'mat-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-checked]': 'checked',\n                        '[class.mat-disabled]': 'disabled',\n                        '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <span #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <span class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <span class=\\\"mat-slide-toggle-thumb\\\"></span>\\n      <span class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n        <span class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></span>\\n      </span>\\n    </span>\\n\\n  </span>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;-moz-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;display:block}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _thumbEl: [{\n                type: ViewChild,\n                args: ['thumbContainer']\n            }], _thumbBarEl: [{\n                type: ViewChild,\n                args: ['toggleBar']\n            }], name: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], required: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], toggleChange: [{\n                type: Output\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: MatSlideToggleRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatSlideToggleRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", type: MatSlideToggleRequiredValidator, selector: \"mat-slide-toggle[required][formControlName],\\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]\", providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: MatSlideToggleRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                    providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n_MatSlideToggleRequiredValidatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] });\n_MatSlideToggleRequiredValidatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatSlideToggleRequiredValidator],\n                    declarations: [MatSlideToggleRequiredValidator],\n                }]\n        }] });\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: MatSlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSlideToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: MatSlideToggleModule, declarations: [MatSlideToggle], imports: [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule], exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule] });\nMatSlideToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: MatSlideToggleModule, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0-rc.1\", ngImport: i0, type: MatSlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        _MatSlideToggleRequiredValidatorModule,\n                        MatRippleModule,\n                        MatCommonModule,\n                        ObserversModule,\n                    ],\n                    exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule],\n                    declarations: [MatSlideToggle],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService, unique } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { SpacesService } from '@placeos/spaces';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._spaces.list,\n    ]).pipe(\n        map(([level, spaces]) =>\n            spaces.filter((space) => space.zones.includes(level?.id))\n        )\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            if (this._settings.get('app.explore.disable_actions')) {\n                this.setOptions({\n                    disable_actions: this._settings.get(\n                        'app.explore.disable_actions'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_labels')) {\n                this.setOptions({\n                    disable_labels: this._settings.get(\n                        'app.explore.disable_labels'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_features')) {\n                this.setOptions({\n                    disable_features: this._settings.get(\n                        'app.explore.disable_features'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_styles')) {\n                this.setOptions({\n                    disable_styles: this._settings.get(\n                        'app.explore.disable_styles'\n                    ),\n                });\n            }\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this.setPositions(1, { x: .5, y: .5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 0.5rem;\n            }\n\n            mat-form-field {\n                min-width: 10rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends BaseClass implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            *ngIf=\"space\"\n            class=\"h-full w-full pointer-events-auto relative\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white p-4 top-0 left-0 transform shadow pointer-events-none\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 class=\"m-0 mb-2\">\n                        {{ space.display_name || space.name }}\n                    </h4>\n                    <div capacity class=\"text-sm\" *ngIf=\"space.capacity >= 0\">\n                        <span>Capacity: </span>{{ space.capacity }}\n                        {{ space.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                    <div class=\"flex flex-wrap my-2 text-sm\">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light ' +\n                                status\n                            \"\n                        >\n                            {{ status }}\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div features *ngIf=\"space.features?.length > 0 && show_features\">\n                        <h4 class=\"m-0 mb-2\">Room Features</h4>\n                        <ul class=\"pl-2\">\n                            <li\n                                class=\"text-sm\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { CalendarEvent, generateEventForm, saveEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { querySpaceAvailability } from '@placeos/calendar';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                        />\n                        <mat-error>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.duration\">\n                        <label>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button mat-button (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public booking: CalendarEvent;\n    public form: FormGroup;\n    public loading = '';\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.booking = new CalendarEvent({\n            attendees: [{ ...(this._data.space || {}), resource: true } as any],\n        });\n        this.form = generateEventForm(this.booking);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        const on_error = (msg) => {\n            this.loading = '';\n            notifyError(msg);\n            this._dialog_ref.disableClose = false;\n        };\n        if (!this.form.valid) {\n            const list = [];\n            for (const key in this.form.controls) {\n                if (this.form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            throw on_error(\n                `Some form fields are not valid: [${list.join(', ')}]`\n            );\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = 'Checking space availability...';\n        const spaces = await querySpaceAvailability({\n            system_ids: this.form.controls.resources.value\n                ?.map((s) => s.id)\n                .join(','),\n            period_start: Math.floor(this.form.value.date / 1000),\n            period_end:\n                Math.floor(this.form.value.date / 1000) +\n                this.form.value.duration * 60,\n        })\n            .toPromise()\n            .catch((e) => {\n                on_error(\n                    'Space is unavailble for the selected time and duration'\n                );\n                throw e;\n            });\n        if (spaces.length <= 0) {\n            return on_error(\n                'Space is unavailble for the selected time and duration'\n            );\n        }\n        this.loading = 'Creating booking...';\n        await saveEvent(new CalendarEvent(this.form.value))\n            .toPromise()\n            .catch((e) => {\n                on_error('Error creating booking.');\n                throw e;\n            });\n        notifySuccess(\n            `Successfully created booking in ${\n                this._data.space.display_name || this._data.space.name\n            }`\n        );\n        this._dialog_ref.close();\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Space } from '@placeos/spaces';\n\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\">Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    HashMap,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Space } from '@placeos/spaces';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] === 'busy' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._dialog.open(\n            (this._settings.get('app.show_qr_for_booking')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        console.log('Features:', features);\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends BaseClass {\n    private _statuses: HashMap<string> = {};\n    private _labels: HashMap<ViewerLabel> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings.area_management ||\n                this._org.organisation.bindings.area_management;\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                            (coordinates?.length\n                                ? getCenterPoint(coordinates)\n                                : null)\n                        : null;\n                this._draw[area.id] = !!draw_polygon;\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            this._labels[zone.area_id] = {\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            };\n            labels.push(this._labels[zone.area_id]);\n        }\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', features);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\">COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button mat-button (click)=\"submit()\">Submit</button>\n            </footer>\n            <button close mat-icon-button mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\">\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close mat-icon-button mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent implements OnInit {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form: FormGroup;\n    public failure: boolean;\n\n    public ngOnInit() {\n        this.form = new FormGroup({\n            travelled: new FormControl('', [Validators.required]),\n            unwell: new FormControl('', [Validators.required]),\n            contact: new FormControl('', [Validators.required]),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            notifyError('All the questions must be answered');\n            return;\n        } else if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\n\nexport type BookingType = 'desk' | 'parking' | 'locker' | '';\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n\n    constructor(data: Partial<Booking> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name = data.asset_name || data.extension_data?.asset_name || '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            data.date / 1000 ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            data.date / 1000 + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || '';\n        this.type = data.type || 'booking';\n        this.date = data.date || this.booking_start * 1000;\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            );\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title = data.title || 'Desk booking';\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.all_day = data.all_day ?? this.duration > 12 * 60;\n        this.status = this.rejected\n            ? 'declined'\n            : this.approved\n            ? 'approved'\n            : 'tentative';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        return isAfter(start, end);\n    }\n}\n","import { FormControl, FormGroup } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { createViewer, getViewer, Point, removeViewer } from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking = {} as any) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, []),\n        all_day: new FormControl(booking.all_day ?? false),\n        duration: new FormControl(booking.duration),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        asset_id: new FormControl(booking.asset_id),\n        asset_name: new FormControl(booking.description),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by;\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user.id || booker.id,\n                      user_email: user.email || booker.id,\n                      booked_by_id: booker.id,\n                      booked_by_email: booker.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    return form;\n}\n\nexport async function findNearbyFeature(map_url: string, centered_at: Point | string, desk_ids: string[] = []): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string' ? viewer.mappings[centered_at] : centered_at) || { x: .5, y: .5 };\n    let dist = 10;\n    let closest = '';\n    console.log(`Desks:`, desk_ids);\n    console.log(`Mappings:`, viewer.mappings);\n    console.log(`Point:`, point);\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt((x - point.x) * (x - point.x) + (y - point.y) * (y - point.y));\n        console.log(`Desk ${desk}:`, viewer.mappings[desk], d);\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking } from './booking.class';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item)))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>) {\n    return post(`${BOOKINGS_ENDPOINT}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    BaseClass,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { listChildMetadata, PlaceZone } from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilKeyChanged,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from '..';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = ['book/desks'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: 'desk' | 'parking';\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends BaseClass {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _form = new BehaviorSubject<FormGroup>(null);\n    private _form_value = new BehaviorSubject<Partial<Booking>>({});\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n\n    public readonly assets: Observable<BookingAsset[]> = this.options.pipe(\n        distinctUntilKeyChanged('zone_id'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return listChildMetadata(this._org.building.id, {\n                        name: 'desks',\n                    }).pipe(\n                        map((data) =>\n                            flatten(\n                                data.map((_) =>\n                                    (_.metadata.desks?.details instanceof Array\n                                        ? _.metadata.desks?.details\n                                        : []\n                                    ).map((d) => ({ ...d, zone: _.zone }))\n                                )\n                            )\n                        )\n                    );\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.assets.pipe(\n        map((assets) => {\n            const list: string[] = [];\n            for (const asset of assets) {\n                asset.features?.forEach((_) => list.push(_));\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_assets = combineLatest([\n        this.options,\n        this.assets,\n        this._form_value,\n    ]).pipe(\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, assets, form]) =>\n            queryBookings({\n                period_start: getUnixTime(form.date),\n                period_end: getUnixTime(\n                    addMinutes(form.date, form.duration || 24 * 60)\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) =>\n                    assets.filter(\n                        (asset) =>\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    )\n                )\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_assets,\n    ]).pipe(\n        map(([options, assets]) => {\n            const groups = [];\n            const asset_list = [...assets].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get form() {\n        return this._form.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this._form.next(generateBookingForm(booking));\n        this.subscription(\n            'form_change',\n            this._form.getValue().valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public resetForm() {\n        if (!this._form.getValue()) this.newForm();\n        const booking = this._booking.getValue();\n        this._form.getValue().patchValue({\n            ...(booking || {}),\n            ...(booking?.extension_data || {}),\n        });\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this._form.getValue()?.value || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n        this._form_value.next(this._form.getValue()?.value || {});\n    }\n\n    public loadForm() {\n        if (!this._form.getValue()) this.newForm();\n        this._form.getValue().patchValue({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n            ),\n        });\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const form = this._form.getValue();\n        let content = `Would you like to book the ${options.type} ${\n            form.value.asset_name\n        } for ${format(form.value.date, 'dd MMM yyyy')}${\n            form.value.duration < 12 * 60\n                ? ' at ' + format(form.value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(_);\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(_);\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        const form = this._form.getValue();\n        if (!form) throw 'No form for booking';\n        if (!form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(form).join(\n                ', '\n            )}]`;\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                form.value,\n                this._options.getValue().type\n            );\n        }\n        if (form.value.duration > 23 * 60 || form.value.all_day) {\n            form.patchValue({\n                date: set(form.value.date, { hours: 12, minutes: 0 }),\n                duration: 60,\n            });\n        }\n        const result = await saveBooking(new Booking(form.value)).toPromise();\n        const { booking_type } = form.value;\n        this.clearForm();\n        this._form.getValue()?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this._form.getValue().value;\n        const asset_list = await this.available_assets\n            .pipe(take(1))\n            .toPromise();\n        const active_asset = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_asset.zone?.id]);\n        const assets = [\n            active_asset,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        console.log('Selected Assets:', assets);\n        const group_members = [currentUser(), ...extra_members];\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: assets[idx].map_id || assets[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = assets[i];\n            this._form\n                .getValue()\n                .patchValue({\n                    ...form,\n                    user,\n                    asset_id: asset?.id,\n                    asset_name: asset.name,\n                    map_id: asset?.map_id || asset?.id,\n                    description: asset.name,\n                    zones: asset.zone\n                        ? [asset.zone?.parent_id, asset.zone?.id]\n                        : [],\n                });\n            console.log('Form Value:', this._form.getValue().value);\n            this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.value;\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: string\n    ) {\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            throw `${asset_id} is not available at the selected time`;\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined'\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser().email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a desk booked`;\n        }\n        return true;\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        assets: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_assets = [];\n        let asset_list = assets.filter((_) => _.id !== id && _.map_id !== id);\n        console.log('Assets:', assets, asset_list, id);\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_assets.push(\n                    assets.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n            console.log('Asset List:', asset_list);\n        }\n        return nearby_assets;\n    }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged((x, y) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { BaseClass } from '@placeos/common';\nimport { Observable } from 'rxjs';\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div shadow class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p class=\"break-words\"><label>MAC:</label> {{ mac }}</p>\n                    <p><label>Accuracy:</label> {{ variance }}m</p>\n                    <p><label>Last Seen:</label> {{ last_seen }}</p>\n                    <p type *ngIf=\"manufacturer\">\n                        <label>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                    <p ssid *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                    <p username *ngIf=\"username\">\n                        <label>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user\">\n                        <label>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends BaseClass implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription('zoom', this._details.zoom$.subscribe(_ => this.zoom = _));\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [attr.id]=\"id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">{{ map_id }}</h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"form\" [formGroup]=\"form\" class=\"w-[24rem] pt-4\">\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\">\n            <button mat-button [mat-dialog-close]=\"form.value\" class=\"w-32\">Continue</button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public form: FormGroup;\n\n    public readonly book_until = this._data.until\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { date: number; duration: number, until: number }\n    ) {\n        this.form = new FormGroup({\n            date: new FormControl(_data.date),\n            duration: new FormControl(_data.duration),\n        });\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { catchError, first, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nimport {\n    BaseClass,\n    currentUser,\n    HashMap,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { BookingFormService, queryBookings } from '@placeos/bookings';\nimport { StaffUser } from '@placeos/users';\nimport { Desk, OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _desks = new BehaviorSubject<string[]>([]);\n    private _reserved = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _users: HashMap<string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._poll,\n    ]).pipe(\n        switchMap(([lvl]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(new Date())),\n                period_end: getUnixTime(endOfDay(new Date())),\n                type: 'desk',\n                zones: lvl.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: HashMap) => new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const building = this._org.buildings.find(\n                (bld) => bld.id === lvl.parent_id\n            );\n            if (!building) return;\n            const system_id =\n                building.bindings?.area_management ||\n                this._org.organisation.bindings?.area_management;\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement').binding(\n                lvl.id\n            );\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n            binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:desk_ids`\n            );\n            this.subscription(\n                `lvl-desks_list`,\n                binding.listen().subscribe((d) => this._desks.next(d || []))\n            );\n            this.subscription('lvl-desk_list_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._reserved,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, reserved]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = !reserved.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used && !has_presence\n                        ? 'free'\n                        : !has_presence\n                        ? 'pending'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking: this._settings.get('app.desks.enabled') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) =>\n                this._in_use.next(_.map((i) => i.asset_id))\n            )\n        );\n        this.interval(\n            'poll',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._reserved.next(\n            desks\n                .filter((v) => !v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,            \n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                this._bookings.newForm();\n                const { date, duration } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration\n                );\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user: options.host || currentUser(),\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (options.host || currentUser())?.name;\n                notifySuccess(\n                    `Successfull booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(date: number, duration: number) {\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n        }\n        return { date, duration };\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button z-in mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon>add</app-icon>\n        </button>\n        <button z-out mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon>remove</app-icon>\n        </button>\n        <button reset mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: 0.5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { MapLocation, showStaff, User } from '@placeos/users';\nimport { MapPinComponent, MapRadiusComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-0 right-0\"\n        ></explore-zoom-controls>\n        <explore-map-controls\n            class=\"absolute top-0 left-0\"\n        ></explore-map-controls>\n        <!-- <explore-search class=\"absolute top-0 right-0\"></explore-search> -->\n        <div\n            zones\n            class=\"p-2 bg-white border border-gray-400 absolute left-0 m-2 rounded flex items-center\"\n        >\n            Zones\n            <mat-slide-toggle\n                class=\"ml-2\"\n                [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                (ngModelChange)=\"toggleZones($event)\"\n            ></mat-slide-toggle>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService, ExploreDesksService, ExploreZonesService],\n})\nexport class ExploreMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable.filter((_) => _ !== 'zones' && _ !== 'devices') ||\n              [];\n        this.setOptions({ disable });\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    const space = this._spaces.find(params.get('space'));\n                    if (!space) return;\n                    this.locateSpace(space);\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private locateSpace(space: Space) {\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any =\n            this._org.building?.bindings.location_services ||\n            this._org.organisation.bindings.location_services;\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@placeos/common';\n\n@Component({\n    selector: 'a-footer-legend',\n    template: `\n        <div class=\"relative bg-white shadow w-full\">\n            <div\n                class=\"absolute top-0 left-1/2 transform -translate-y-full -translate-x-1/2 px-2 pt-2 overflow-hidden\"\n            >\n                <button\n                    matRipple\n                    class=\"flex items-center justify-center bg-white shadow rounded-t w-32 h-8 border-none text-black\"\n                    (click)=\"show = !show\"\n                >\n                    <app-icon>keyboard_arrow_up</app-icon>\n                </button>\n            </div>\n            <div class=\"flex items-center px-2 py-1 text-xl\">\n                <div class=\"flex-1\">Keys</div>\n            </div>\n            <div\n                class=\"flex items-center justify-center p-2 border border-gray-100 space-x-2\"\n            >\n                <div\n                    class=\"colour px-4 py-2 rounded shadow flex-1 text-center\"\n                    *ngFor=\"let item of colours\"\n                    [class.dark]=\"item.dark\"\n                    [style.background-color]=\"item.colour\"\n                >\n                    {{ item.name }}\n                </div>\n            </div>\n            <div\n                icon-legend\n                class=\"flex justify-center flex-wrap h-0 w-full border border-gray-100 overflow-auto max-h-[25vh]\"\n                [class.show]=\"show\"\n            >\n                <div\n                    class=\"flex flex-col items-center justify-center h-[12.4vw] w-[12.4vw] text-[2vw] border border-gray-100 flex-grow\"\n                    *ngFor=\"let item of icon_list\"\n                >\n                    <app-icon class=\"text-[3em]\" [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text-[0.625em] font-normal\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                z-index: 10;\n                font-size: 1.25em;\n            }\n\n            .colour.dark {\n                color: #fff;\n            }\n\n            [icon-legend] {\n                transition: height 200ms;\n            }\n\n            [icon-legend].show {\n                height: 37.5vw !important;\n            }\n        `,\n    ],\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        {\n            id: 'not-bookable',\n            name: 'Not Bookable',\n            colour: '#7D7D7D',\n            dark: true,\n        },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' },\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        {\n            id: '',\n            name: 'Lifts Up/Down',\n            icon: { type: 'img', src: 'assets/img/lift.svg' },\n        },\n        {\n            id: '',\n            name: 'Fire Extinguisher',\n            icon: { type: 'img', src: 'assets/img/fireExt.svg' },\n        },\n        {\n            id: '',\n            name: 'First Aid & AED',\n            icon: { type: 'img', src: 'assets/img/aid.svg' },\n        },\n        {\n            id: '',\n            name: 'Cafe/Service',\n            icon: { type: 'img', src: 'assets/img/Cafe.svg' },\n        },\n        {\n            id: '',\n            name: 'Mail/Noticeboard',\n            icon: { type: 'img', src: 'assets/img/mail.svg' },\n        },\n        {\n            id: '',\n            name: 'Restrooms M/F',\n            icon: { type: 'img', src: 'assets/img/Restrooms.svg' },\n        },\n        {\n            id: '',\n            name: 'Map Kiosk',\n            icon: { type: 'img', src: 'assets/img/kiosk.svg' },\n        },\n        {\n            id: '',\n            name: 'Screen',\n            icon: { type: 'img', src: 'assets/img/Screen.svg' },\n        },\n        {\n            id: '',\n            name: 'Projector',\n            icon: { type: 'img', src: 'assets/img/Projector.svg' },\n        },\n        {\n            id: '',\n            name: 'Showers',\n            icon: { type: 'img', src: 'assets/img/shower.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs',\n            icon: { type: 'img', src: 'assets/img/chair2.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch.svg' },\n        },\n        {\n            id: '',\n            name: 'Chairs/Couch',\n            icon: { type: 'img', src: 'assets/img/couch2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table1.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table2.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table3.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table4.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table5.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table6.svg' },\n        },\n        {\n            id: '',\n            name: 'Tables',\n            icon: { type: 'img', src: 'assets/img/Table7.svg' },\n        },\n        {\n            id: '',\n            name: 'Funzone Games',\n            icon: { type: 'img', src: 'assets/img/Tennis.svg' },\n        },\n        {\n            id: '',\n            name: 'Concierge Pods',\n            icon: { type: 'img', src: 'assets/img/Pod.svg' },\n        },\n        {\n            id: '',\n            name: 'Phone Booths',\n            icon: { type: 'img', src: 'assets/img/booth.svg' },\n        },\n    ];\n}\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseClass, log, SettingsService } from '@placeos/common';\nimport { ExploreStateService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends BaseClass implements OnInit {\n    /** Number of seconds after a user action to reset the kiosk state */\n    public reset_delay = 180;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    @HostListener('window:mousedown') public onMouse = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n    @HostListener('window:touchstart') public onTouch = () =>\n        this.timeout('reset', () => this.resetKiosk(), this.reset_delay * 1000);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        this.reset_delay =\n            this._settings.get('app.inactivity_timeout_secs') || 180;\n        const level = localStorage?.getItem('KIOSK.level');\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n            return;\n        }\n        this._state.setLevel(level);\n        this.onMouse();\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public resetKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        if ((document.activeElement as any)?.blur)\n            (document.activeElement as any)?.blur();\n        const level = localStorage.getItem('KIOSK.level');\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n        if (level) this._state.setLevel(level);\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', Date.now());\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComponentsModule } from '@placeos/components';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { ExploreComponent } from './explore.component';\nimport { FooterLegendComponent } from './footer-legend.component';\nimport { FiltersComponent } from './filters.component';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent },\n];\n\n@NgModule({\n    declarations: [ExploreComponent, FooterLegendComponent, FiltersComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        ComponentsModule,\n        SharedSpacesModule,\n        SharedComponentsModule,\n        FormsModule,\n        SharedExploreModule,\n    ]\n})\nexport class AppExploreModule {}\n"],"sourceRoot":"webpack:///","file":"apps_visitor-kiosk_src_app_explore_explore_module_ts.js"}