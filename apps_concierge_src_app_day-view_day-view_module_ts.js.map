{"version":3,"file":"apps_concierge_src_app_day-view_day-view_module_ts.js","mappings":"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","names":["i0","level_r2","id","display_name","name","type_r3","DayviewTopbarComponent","AsyncHandler","updateUIOptions","options","this","_state","setUIOptions","constructor","_org","_route","_router","super","zones","types","type_list","map","i","levels","active_levels","ui_options","setDate","d","newBooking","updateZones","z","navigate","relativeTo","queryParams","zone_ids","join","setZones","updateTypes","setFilters","hide_type","reduce","list","item","includes","push","ngOnInit","_this","_asyncToGenerator","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","get","split","length","level","levelWithID","building","buildings","find","bld","parent_id","filter","zone","lvl","t","i1","i2","i3","core","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","$event","DayviewTopbarComponent_mat_option_8_Template","DayviewTopbarComponent_mat_option_14_Template","show_overflow","_c0","tmp_5_0","ctx_r0","type","overflow_top","overflow_height","ctx_r3","event","title","ctx_r4","time","ctx_r5","attendees","_r7","ctx_r6","view","DayviewEventComponent_div_2_div_3_Template","DayviewEventComponent_div_2_div_4_Template","DayviewEventComponent_div_2_div_5_Template","ctx_r1","top","height","organiser","duration","ctx_r2","ext","event_end","DAY_IN_MINUTES","DayviewEventComponent","date","Date","format","addMinutes","guests","status","e","setEvent","ngOnChanges","changes","start","startOfDay","diff","differenceInMinutes","inputs","DayviewEventComponent_div_0_Template","DayviewEventComponent_div_2_Template","DayviewEventComponent_div_3_Template","tmp_0_0","tmp_2_0","show_cleaning","DayviewSpaceComponent_ng_container_0_dayview_event_1_Template","events","DayviewSpaceComponent","filtered","bookings","bkn","resources","space","email","DayviewSpaceComponent_ng_container_0_Template","scroll","y","time_r7","x","space_r8","space_list","i_r11","HOUR_BLOCKS","Array","fill","idx","DayviewTimelineComponent","blocks","loading","spaces","active_building","switchMap","querySystems","zone_id","limit","catchError","of","data","Space","shareReplay","combineLatest","startPolling","ngOnDestroy","stopPolling","onScroll","requestAnimationFrame","srcElement","scrollLeft","scrollTop","DayviewTimelineComponent_div_4_Template","DayviewTimelineComponent_div_8_Template","DayviewTimelineComponent_dayview_space_12_Template","DayviewTimelineComponent_div_14_Template","DayviewTimelineComponent_mat_progress_bar_15_Template","DayviewTimelineComponent_view_event_details_17_Template","DayViewComponent","links","_settings","route","attrs","value_r9","timeToOffset","now","offset_y","ctx_r16","endToOffset","event_r15","_r19","$implicit","ctx_r18","viewEvent","RoomBookingsTimelineComponent_ng_container_37_div_1_div_1_Template","i_r13","ctx_r14","tmp_3_0","state","hjost","RoomBookingsTimelineComponent_ng_container_37_div_1_Template","ctx_r7","space_r12","_c1","RoomBookingsTimelineComponent","startOfMinute","valueOf","is_today","isSameDay","_dialog","offset_x","w_slots","h_slots","hours","from","edit","resetDate","previousDate","addDays","nextDate","console","log","onResize","Math","floor","window","innerWidth","innerHeight","_scroll_container","nativeElement","ref","open","EventDetailsModalComponent","componentInstance","remove","action","SetupBreakdownModalComponent","content","resp","openConfirmModal","icon","CalendarEvent","creator","mailbox","queryEvents","period_start","event_start","period_end","ical_uid","reason","removeEvent","calendar","host","system_id","system","catch","notifyError","close","notifySuccess","closeAll","viewQuery","RoomBookingsTimelineComponent_div_12_Template","RoomBookingsTimelineComponent_div_20_Template","RoomBookingsTimelineComponent_div_25_Template","RoomBookingsTimelineComponent_div_29_Template","RoomBookingsTimelineComponent_div_31_Template","RoomBookingsTimelineComponent_div_32_Template","RoomBookingsTimelineComponent_ng_container_37_Template","tmp_14_0","event_r4","_r6","approve","reject","images","_r9","ctx_r8","show","RoomBookingsApprovalsComponent","pending","binding","mod","getModule","execute","_this2","RoomBookingsApprovalsComponent_div_12_Template","RoomBookingsApprovalsComponent_div_14_Template","RoomBookingsApprovalsComponent_div_16_Template","RoomBookingsApprovalsComponent_button_17_Template","tmp_1_0","level_r5","type_r6","_r8","setFilter","_r13","type_r9","ctx_r11","color","RoomBookingsComponent_ng_container_31_div_1_Template","EMPTY","RoomBookingsComponent","filters","has_approvals","o","_ref","take","_x","apply","arguments","value","RoomBookingsComponent_mat_option_13_Template","RoomBookingsComponent_mat_checkbox_30_Template","RoomBookingsComponent_ng_container_31_Template","RoomBookingsComponent_room_bookings_approvals_34_Template","_r1","ROUTES","path","component","NewDayViewComponent","DayViewModule","oAB","cJS","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","SharedCateringModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/day-view/dayview-topbar.component.ts","./apps/concierge/src/app/day-view/dayview-event.component.ts","./apps/concierge/src/app/day-view/dayview-space.component.ts","./apps/concierge/src/app/day-view/dayview-timeline.component.ts","./apps/concierge/src/app/day-view/day-view.component.ts","./apps/concierge/src/app/day-view/room-timeline.component.ts","./apps/concierge/src/app/day-view/room-approvals.component.ts","./apps/concierge/src/app/day-view/room-bookings.component.ts","./apps/concierge/src/app/day-view/day-view.module.ts","./apps/concierge/src/app/day-view/new-dayview.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BookingUIOptions, EventsStateService } from './events-state.service';\n\n@Component({\n    selector: 'dayview-topbar',\n    template: `\n        <div\n            class=\"flex items-center px-4 h-20 bg-white dark:bg-neutral-700 border-b border-gray-200 dark:border-neutral-500\"\n        >\n            <button\n                btn\n                matRipple\n                new\n                class=\"w-12 xl:w-auto overflow-hidden\"\n                (click)=\"newBooking()\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon\n                        class=\"mr-2\"\n                        [icon]=\"{ class: 'material-icons', content: 'add' }\"\n                    ></app-icon>\n                    <div class=\"hidden xl:block\">New Booking</div>\n                </div>\n            </button>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"type_list\"\n                    (ngModelChange)=\"updateTypes($event)\"\n                    placeholder=\"No Events\"\n                >\n                    <mat-select-trigger>Legend</mat-select-trigger>\n                    <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(ui_options | async)?.show_overflow\"\n                (ngModelChange)=\"updateUIOptions({ show_overflow: $event })\"\n                ><div class=\"text-xs\">Setup / Breakdown</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-0\"></div>\n            <!-- <searchbar class=\"mr-2\"></searchbar> -->\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n                margin-left: 1em;\n            }\n\n            mat-slide-toggle div {\n                width: 5.5em;\n                white-space: initial;\n                line-height: 1.2em;\n            }\n        `,\n    ],\n})\nexport class DayviewTopbarComponent extends AsyncHandler {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly ui_options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setDate(d);\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    /** List of levels for the active building */\n    public readonly updateTypes = (types) =>\n        this._state.setFilters({\n            hide_type: this.types.reduce((list, item) => {\n                !types.includes(item.id) ? list.push(item) : '';\n                return list;\n            }, []),\n        });\n\n    public updateUIOptions(options: BookingUIOptions) {\n        this._state.setUIOptions(options);\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.zones = zones;\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.updateTypes(this.type_list);\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { startOfDay, differenceInMinutes, format, addMinutes } from 'date-fns';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { EventsStateService } from './events-state.service';\n\nconst DAY_IN_MINUTES = 24 * 60;\n\n@Component({\n    selector: 'dayview-event',\n    template: `\n        <div\n            *ngIf=\"(ui_options | async)?.show_overflow\"\n            [class]=\"\n                'overflow-block absolute rounded overflow-hidden w-full ' + type\n            \"\n            [style.top]=\"overflow_top * 100 + '%'\"\n            [style.height]=\"overflow_height * 100 + '%'\"\n        ></div>\n        <div\n            event\n            matRipple\n            [class]=\"\n                'absolute rounded overflow-hidden text-sm border border-gray-200 shadow-sm z-10 hover:z-30 ' +\n                type\n            \"\n            *ngIf=\"event\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n            (click)=\"view(event)\"\n        >\n            <div class=\"px-2 py-1 font-medium\">{{ event.organiser?.name }}</div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 30\">\n                <app-icon class=\"mx-2\">title</app-icon>\n                {{ event.title }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 60\">\n                <app-icon class=\"mx-2\">schedule</app-icon>\n                {{ time }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 90\">\n                <app-icon class=\"mx-2\">people</app-icon>\n                {{ event.attendees.length }} Attendee{{\n                    event.attendees.length === 1 ? '' : 's'\n                }}\n            </div>\n        </div>\n        <div\n            *ngIf=\"event && (ui_options | async)?.show_cleaning\"\n            cleaning\n            class=\"absolute rounded overflow-hidden flex w-full shadow p-2 bg-white z-20 hover:!h-48\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n        >\n            <div\n                [class]=\"\n                    'icon flex items-center justify-center mr-2 text-3xl rounded h-12 w-12 text-pending ' +\n                    event.ext('cleaning_status')\n                \"\n            >\n                <app-icon>{{\n                    event.ext('cleaning_status') === 'done' ? 'done' : 'warning'\n                }}</app-icon>\n            </div>\n            <div class=\"flex-1 w-1/2\">\n                {{\n                    event.ext('cleaning_status') === 'done'\n                        ? 'Finished'\n                        : 'Scheduled to'\n                }}\n                clean at\n                {{\n                    event.ext('cleaning_time') || event.event_end * 1000\n                        | date: 'shortTime'\n                }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [event] {\n                background-color: #ccc;\n                width: 12rem;\n                z-index: 100;\n                transition: box-shadow 200ms;\n            }\n\n            [event]:hover {\n                box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.2),\n                    0 1px 1px 0 rgba(0, 0, 0, 0.14),\n                    0 2px 1px -1px rgba(0, 0, 0, 0.12) !important;\n                cursor: pointer;\n            }\n\n            .overflow-block {\n                opacity: 0.3;\n                width: 12rem;\n            }\n\n            .internal {\n                background-color: #1565c0;\n                color: #fff;\n            }\n\n            .icon {\n                background-color: #f0f0f0;\n            }\n\n            .icon.done {\n                color: #21a453;\n            }\n\n            .external {\n                background-color: #ad1457;\n                color: #fff;\n            }\n\n            .cancelled {\n                background-color: #ccc;\n            }\n        `,\n    ],\n})\nexport class DayviewEventComponent implements OnChanges {\n    /** Event to display */\n    @Input() public event: CalendarEvent;\n    /** Top position for the event */\n    public top = -999;\n    /** Height of the event on the calendar */\n    public height = 0;\n    /** Top position for the event */\n    public overflow_top = -999;\n    /** Height of the event on the calendar */\n    public overflow_height = 0;\n\n    public readonly ui_options = this._state.options;\n\n    public readonly view = (e) => this._state.setEvent(e);\n\n    public get time() {\n        const date = new Date(this.event.date);\n        return (\n            format(date, 'h:mm a') +\n            ' - ' +\n            format(addMinutes(date, this.event.duration), 'h:mm a')\n        );\n    }\n\n    public get type() {\n        return this.event.guests.length\n            ? 'external'\n            : this.event.status === 'declined'\n            ? 'cancelled'\n            : 'internal';\n    }\n\n    constructor(private _state: EventsStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            const start = startOfDay(new Date(this.event.date));\n            const diff = differenceInMinutes(new Date(this.event.date), start);\n            this.top = diff / DAY_IN_MINUTES;\n            this.height = this.event.duration / DAY_IN_MINUTES;\n            this.overflow_top =\n                (diff - (this.event.ext('setup') || 0)) / DAY_IN_MINUTES;\n            this.overflow_height =\n                (this.event.duration +\n                    (this.event.ext('setup') || 0) +\n                    (this.event.ext('breakdown') || 0)) /\n                DAY_IN_MINUTES;\n        }\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'dayview-space',\n    template: `\n        <ng-container *ngIf=\"space\">\n            <dayview-event\n                *ngFor=\"let event of events | async\"\n                [event]=\"event\"\n            ></dayview-event>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class DayviewSpaceComponent extends AsyncHandler implements OnInit {\n    /** Space to display events for */\n    @Input() public space: Space;\n\n    public shown_event: CalendarEvent;\n    /** List of events for the selected space */\n    public readonly events = this._state.filtered.pipe(\n        map((bookings) => {\n            return bookings.filter((bkn) =>\n                bkn.resources.find((space) => this.space.email === space.email)\n            );\n        })\n    );\n\n    constructor(private _state: EventsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('events', this._state.filtered.subscribe());\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\n\nconst HOUR_BLOCKS = new Array(24).fill(0).map((_, idx) => {\n    return (idx % 12 === 0 ? 12 : idx % 12) + (idx >= 12 ? ' PM' : ' AM');\n});\n\n@Component({\n    selector: 'dayview-timeline',\n    template: `\n        <div class=\"absolute inset-0 flex\">\n            <div\n                class=\"time h-full w-24 overflow-hidden bg-blue-100/20 dark:bg-neutral-700 relative\"\n            >\n                <div header class=\"relative h-16 z-50\">\n                    <div\n                        class=\"bg-blue-100/20 dark:bg-neutral-700 absolute top-0 left-0 right-0 bottom-8\"\n                    ></div>\n                </div>\n                <div\n                    *ngFor=\"let time of blocks\"\n                    change-transform\n                    class=\"relative h-16 border-r border-gray-300 dark:border-neutral-500 z-10\"\n                    [style.transform]=\"'translateY(-' + scroll.y + 'px)'\"\n                >\n                    <div\n                        class=\"absolute text-center w-full text-xs top-0 transform -translate-y-1/2 opacity-40\"\n                    >\n                        {{ time }}\n                    </div>\n                    <div\n                        class=\"absolute h-px w-2 top-0 right-0 bg-gray-300 dark:bg-neutral-500\"\n                    ></div>\n                </div>\n                <div\n                    class=\"absolute h-8 w-px top-8 right-0 bg-gray-300 dark:bg-neutral-500\"\n                ></div>\n            </div>\n            <div class=\"h-full flex-1 flex flex-col w-1/2\">\n                <div\n                    header\n                    class=\"flex relative overflow-hidden border-b border-gray-300 dark:border-neutral-500 border-opacity-50 bg-blue-100/20 dark:bg-neutral-700 h-16 w-full\"\n                >\n                    <div\n                        *ngFor=\"let space of space_list | async\"\n                        change-transform\n                        class=\"relative h-16 w-48 min-w-[12rem]\"\n                        [style.transform]=\"'translateX(-' + scroll.x + 'px)'\"\n                    >\n                        <div\n                            bar\n                            class=\"absolute h-8 w-px bottom-0 -left-px bg-gray-300 dark:bg-neutral-500\"\n                        ></div>\n                        <div class=\"name m-2 text-center\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    #scroll_el\n                    content\n                    class=\"relative flex flex-1 overflow-auto\"\n                    (scroll)=\"onScroll($event)\"\n                >\n                    <dayview-space\n                        *ngFor=\"let space of space_list | async\"\n                        [space]=\"space\"\n                        class=\"w-48 min-w-[12rem] h-[96rem] border-r border-gray-300 dark:border-neutral-500\"\n                    ></dayview-space>\n                    <div\n                        *ngFor=\"let time of blocks; let i = index\"\n                        class=\"absolute bg-gray-300 dark:bg-neutral-500 h-px min-w-full left-0\"\n                        [style.width]=\"\n                            (space_list | async)?.length * 12 + 'rem'\n                        \"\n                        [style.top]=\"i * 4 + 'rem'\"\n                    ></div>\n                </div>\n            </div>\n            <mat-progress-bar\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n                class=\"absolute bottom-0 left-0 right-0\"\n            ></mat-progress-bar>\n            <view-event-details\n                *ngIf=\"event | async\"\n                [event]=\"event | async\"\n            ></view-event-details>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [change-transform] {\n                will-change: transform;\n            }\n        `,\n    ],\n})\nexport class DayviewTimelineComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    /** Time blocks to display */\n    public readonly blocks: string[] = HOUR_BLOCKS;\n    /** Current scroll position of the content */\n    public scroll: { x: number; y: number } = { x: 0, y: 0 };\n    /** Whether event data is loading */\n    public readonly loading = this._state.loading;\n    /** Event to show more details about */\n    public readonly event = this._state.event;\n\n    public readonly spaces = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap(({ id }) =>\n            querySystems({ zone_id: id, limit: 1000 }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map(({ data }) =>\n            data.map(\n                (_) =>\n                    new Space({\n                        ..._,\n                        level: this._org.levelWithID(_.zones),\n                    } as any)\n            )\n        ),\n        shareReplay(1)\n    );\n    /** List of spaces to display */\n    public readonly space_list = combineLatest([\n        this.spaces,\n        this._state.zones,\n    ]).pipe(\n        map(\n            ([spaces, zones]) =>\n                spaces.filter(\n                    (space) =>\n                        !zones?.length ||\n                        space.zones.find((z) => zones.includes(z))\n                ) || []\n        )\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventsStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n\n    public onScroll(e) {\n        requestAnimationFrame(\n            () =>\n                (this.scroll = {\n                    x: e.srcElement.scrollLeft,\n                    y: e.srcElement.scrollTop,\n                })\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApplicationLinkInternal, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-dayview]',\n    template: `\n        <sidebar class=\"h-full\"></sidebar>\n        <main\n            class=\"relative overflow-hidden flex flex-col flex-1 w-1/2 h-full bg-gray-200 dark:bg-neutral-600\"\n        >\n            <dayview-topbar></dayview-topbar>\n            <dayview-timeline></dayview-timeline>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DayViewComponent implements OnInit {\n    public get links(): ApplicationLinkInternal[] {\n        return this._settings.get('app.general.menu') || [];\n    }\n\n    constructor(private _settings: SettingsService, private _router: Router) {}\n\n    public ngOnInit() {\n        if (!this.links.find((_) => _.route.includes('day-view'))) {\n            this._router.navigate([`/${this.links[0].route}`]);\n        }\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport {\n    add,\n    addDays,\n    differenceInMinutes,\n    format,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { EventsStateService } from './events-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    CalendarEvent,\n    EventDetailsModalComponent,\n    SetupBreakdownModalComponent,\n    queryEvents,\n    removeEvent,\n} from '@placeos/events';\nimport { time } from 'console';\n\n@Component({\n    selector: 'room-bookings-timeline',\n    template: `\n        <div\n            class=\"relative flex items-center justify-center p-2 space-x-2 border-b border-gray-200\"\n        >\n            <app-icon class=\"text-2xl\">event</app-icon>\n            <h3 (dblclick)=\"resetDate()\">\n                {{ date | date: 'mediumDate' }}\n            </h3>\n            <button btn icon matRipple (click)=\"previousDate()\">\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button btn icon matRipple (click)=\"nextDate()\">\n                <app-icon>chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 left-4 text-blue-500 text-sm\"\n                *ngIf=\"is_today\"\n            >\n                Today\n            </div>\n        </div>\n        <div\n            class=\"flex flex-col w-full flex-1 overflow-hidden\"\n            (window:resize)=\"onResize()\"\n        >\n            <div header class=\"flex items-center w-full h-16\">\n                <div\n                    times\n                    class=\"w-16 h-full flex flex-col items-center justify-end text-xs pb-2 opacity-60\"\n                >\n                    {{ date | date: 'z' }}\n                </div>\n                <div\n                    spaces\n                    class=\"relative flex-1 h-full overflow-hidden border-r border-gray-200\"\n                >\n                    <div\n                        class=\"flex absolute inset-y-0\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        <div\n                            class=\"flex flex-col items-center justify-center h-full w-56\"\n                            *ngFor=\"let space of spaces | async\"\n                        >\n                            {{ space.display_name || space.name }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div content class=\"flex w-full flex-1 h-px\">\n                <div\n                    times\n                    class=\"relative w-16 h-full overflow-y-hidden overflow-x-visible border-r border-gray-200\"\n                >\n                    <div\n                        class=\"absolute inset-x-0\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <div\n                            class=\"relative block h-12\"\n                            *ngFor=\"let value of hours\"\n                        >\n                            <div\n                                class=\"absolute top-0 right-0 w-2 h-px bg-gray-200\"\n                            ></div>\n                            <div\n                                class=\"absolute top-0 right-3 -translate-y-1/2 text-xs opacity-60\"\n                            >\n                                {{ value % 12 ? value % 12 : '12'\n                                }}{{ value >= 12 ? 'PM' : 'AM' }}\n                            </div>\n                        </div>\n                        <div\n                            class=\"absolute bg-primary right-0 translate-x-1/2 -translate-y-1/2 h-2 w-2 rounded-full z-30\"\n                            [style.top]=\"timeToOffset(now) + 'px'\"\n                        ></div>\n                    </div>\n                </div>\n                <div spaces class=\"relative flex-1 h-full overflow-hidden w-px\">\n                    <div\n                        class=\"absolute top-0 flex h-full pointer-events-none\"\n                        [style.left]=\"-(offset_x % 224) + 'px'\"\n                    >\n                        <div\n                            *ngFor=\"let _ of w_slots\"\n                            class=\"w-56 h-full border-r border-gray-200\"\n                        ></div>\n                    </div>\n                    <div\n                        class=\"absolute left-0 w-full pointer-events-none\"\n                        [style.top]=\"-(offset_y % 48) + 'px'\"\n                    >\n                        <div\n                            *ngFor=\"let _ of h_slots\"\n                            class=\"h-12 w-full border-t border-gray-200\"\n                        ></div>\n                        <div\n                            *ngIf=\"is_today\"\n                            class=\"absolute inset-x-0 -translate-y-px h-0.5 bg-primary z-30\"\n                            [style.top]=\"\n                                timeToOffset(now) -\n                                offset_y -\n                                (48 - (offset_y % 48)) +\n                                48 +\n                                'px'\n                            \"\n                        >\n                            <div\n                                class=\"absolute bg-primary top-1/2 left-0 -translate-x-1/2 -translate-y-1/2 h-2 w-2 rounded-full\"\n                            ></div>\n                        </div>\n                    </div>\n                    <div\n                        #scroll_container\n                        class=\"relative w-full h-full overflow-auto z-10\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <div\n                            class=\"overflow-hidden relative\"\n                            [style.height]=\"24 * 3 + 'rem'\"\n                            [style.width]=\"\n                                (spaces | async)?.length * 14 + 'rem'\n                            \"\n                        >\n                            <ng-container\n                                *ngFor=\"\n                                    let space of spaces | async;\n                                    let i = index\n                                \"\n                            >\n                                <div\n                                    event\n                                    *ngFor=\"\n                                        let event of (events | async)[\n                                            space.id\n                                        ] || []\n                                    \"\n                                    class=\"absolute w-[13.625rem] hover:opacity-90\"\n                                    [style.left]=\"i * 14 + 0.125 + 'rem'\"\n                                    [style.top]=\"\n                                        timeToOffset(event.date) + 'px'\n                                    \"\n                                    [style.height]=\"\n                                        endToOffset(event.duration) + 'px'\n                                    \"\n                                    (click)=\"viewEvent(event)\"\n                                >\n                                    <div\n                                        class=\"absolute bg-pink-600/50 border border-pink-600 rounded-lg w-full\"\n                                        [style.height]=\"\n                                            endToOffset(\n                                                event.duration +\n                                                    (event.ext('setup') || 0) +\n                                                    (event.ext('breakdown') ||\n                                                        0)\n                                            ) + 'px'\n                                        \"\n                                        [style.top]=\"\n                                            -(\n                                                ((event.ext('setup') || 0) /\n                                                    60) *\n                                                48\n                                            ) + 'px'\n                                        \"\n                                        *ngIf=\"\n                                            (ui_options | async)\n                                                ?.show_overflow &&\n                                            (event.ext('setup') ||\n                                                event.ext('breakdown')) &&\n                                            endToOffset(\n                                                event.duration +\n                                                    (event.ext('setup') || 0) +\n                                                    (event.ext('breakdown') ||\n                                                        0)\n                                            )\n                                        \"\n                                    ></div>\n                                    <div\n                                        class=\"relative w-full h-full shadow bg-gray-100 hover:bg-gray-200 rounded-lg overflow-hidden px-3 py-1 text-xs\"\n                                        [class.opacity-60]=\"\n                                            event.state === 'done'\n                                        \"\n                                    >\n                                        <div\n                                            class=\"absolute left-0 inset-y-0 w-1 \"\n                                            [class.bg-pink-600]=\"\n                                                event.status !== 'cancelled'\n                                            \"\n                                            [class.bg-red-600]=\"\n                                                event.status === 'cancelled'\n                                            \"\n                                        ></div>\n                                        <p\n                                            class=\"truncate\"\n                                            [class.opacity-60]=\"\n                                                event.status === 'cancelled'\n                                            \"\n                                        >\n                                            {{ event.date | date: 'shortTime' }}\n                                            &ndash;\n                                            {{\n                                                event.organiser?.name ||\n                                                    event.hjost\n                                            }}\n                                        </p>\n                                        <p\n                                            class=\"truncate\"\n                                            [class.opacity-60]=\"\n                                                event.status === 'cancelled'\n                                            \"\n                                        >\n                                            {{ event.title }}\n                                        </p>\n                                    </div>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class RoomBookingsTimelineComponent extends AsyncHandler {\n    public date = Date.now();\n    public offset_x = 0;\n    public offset_y = 0;\n    public w_slots = [];\n    public h_slots = [];\n    public hours = Array.from({ length: 24 }, (_, i) => i);\n    public readonly ui_options = this._state.options;\n    public readonly spaces = this._state.spaces;\n    public readonly events = combineLatest([\n        this._state.spaces,\n        this._state.filtered,\n    ]).pipe(\n        map(([spaces, events]) => {\n            const map = {};\n            for (const space of spaces) {\n                map[space.id] = events.filter((event) =>\n                    event.resources.find(\n                        (item) =>\n                            item.id === space.id || item.email === space.email\n                    )\n                );\n            }\n            return map;\n        }),\n        shareReplay(1)\n    );\n\n    public get now() {\n        return startOfMinute(Date.now()).valueOf();\n    }\n\n    public readonly edit = (e) => this._state.newBooking(e);\n    public readonly resetDate = () => {\n        this.date = Date.now();\n        this._state.setDate(this.date);\n    };\n    public readonly previousDate = () => {\n        this.date = addDays(this.date, -1).valueOf();\n        this._state.setDate(this.date);\n    };\n    public readonly nextDate = () => {\n        this.date = addDays(this.date, 1).valueOf();\n        this._state.setDate(this.date);\n    };\n\n    public get is_today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    @ViewChild('scroll_container', { static: true })\n    private _scroll_container: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _state: EventsStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription('poll', this._state.startPolling());\n        const date = Date.now();\n        console.log(\n            'Date Offset:',\n            this.timeToOffset(date),\n            new Date(),\n            differenceInMinutes(date, startOfDay(date))\n        );\n        this.onResize();\n    }\n\n    public timeToOffset(date: number) {\n        const diff = differenceInMinutes(date, startOfDay(date));\n        return (diff / 60) * 48;\n    }\n\n    public endToOffset(duration: number) {\n        return (duration / 60) * 48;\n    }\n\n    public onResize() {\n        const w_slots = Math.floor(window.innerWidth / 224) + 1;\n        const h_slots = Math.floor(window.innerHeight / 48);\n        this.w_slots = Array.from({ length: w_slots }, (_, i) => i);\n        this.h_slots = Array.from({ length: h_slots }, (_, i) => i);\n    }\n\n    public onScroll() {\n        this.offset_x = this._scroll_container.nativeElement.scrollLeft;\n        this.offset_y = this._scroll_container.nativeElement.scrollTop;\n    }\n\n    public viewEvent(event: CalendarEvent) {\n        const ref = this._dialog.open(EventDetailsModalComponent, {\n            data: event,\n        });\n        this.subscription(\n            'edit',\n            ref.componentInstance.edit.subscribe(() => this.edit(event))\n        );\n        this.subscription(\n            'remove',\n            ref.componentInstance.remove.subscribe(() => this.remove(event))\n        );\n        this.subscription(\n            'actions',\n            ref.componentInstance.action.subscribe((action) => {\n                if (action.includes('breakdown')) {\n                    this._dialog.open(SetupBreakdownModalComponent, {\n                        data: event,\n                    });\n                }\n            })\n        );\n    }\n\n    public async remove(item: CalendarEvent) {\n        const time = `${format(item.date, 'dd MMM yyyy h:mma')}`;\n        const resource_name = item.space?.display_name;\n        const content = `Delete the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n        if (item instanceof CalendarEvent && item.creator !== item.mailbox) {\n            item =\n                (\n                    await queryEvents({\n                        period_start: item.event_start,\n                        period_end: item.event_end,\n                        ical_uid: item.ical_uid,\n                    }).toPromise()\n                ).find((_) => _.ical_uid === (item as any).ical_uid) || item;\n        }\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await removeEvent(item.id, {\n            calendar: item.host,\n            system_id: (item as any).system?.id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(`Unable to delete booking. ${e}`);\n                resp.close();\n                throw e;\n            });\n        notifySuccess('Successfully deleted booking.');\n        this._dialog.closeAll();\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventsStateService } from './events-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { CalendarEvent } from '@placeos/events';\n\n@Component({\n    selector: 'room-bookings-approvals',\n    template: `\n        <div\n            class=\"flex flex-col h-full overflow-hidden border-l border-gray-200\"\n            [style.width]=\"show ? '' : '0px'\"\n        >\n            <div\n                class=\"flex items-center p-2 border-b border-gray-200 space-x-2\"\n            >\n                <button\n                    btn\n                    icon\n                    matRipple\n                    class=\"bg-gray-200\"\n                    (click)=\"show = !show\"\n                >\n                    <app-icon>chevron_right</app-icon>\n                </button>\n                <h3 class=\"flex-1\">\n                    Pending Approval ({{ (pending | async)?.length || '0' }})\n                </h3>\n                <button btn icon matRipple>\n                    <app-icon>search</app-icon>\n                </button>\n            </div>\n            <div class=\"flex-1 overflow-auto p-2 space-y-2\">\n                <div\n                    *ngIf=\"!(pending | async)?.length\"\n                    class=\"w-full h-full flex flex-col items-center justify-center space-y-2\"\n                >\n                    <img src=\"assets/icons/no-pending.svg\" />\n                    <p>No pending requests</p>\n                </div>\n                <div\n                    *ngFor=\"let event of pending | async\"\n                    class=\"relative border border-gray-200 p-2 w-full rounded\"\n                >\n                    <h3>{{ event.title }}</h3>\n                    <p class=\"opacity-30 text-xs mb-2\">\n                        {{ event.date | date: 'medium' }}\n                    </p>\n                    <div class=\"w-64 h-32 overflow-hidden mb-2\">\n                        <img\n                            class=\"object-cover min-w-full min-h-full\"\n                            [src]=\"\n                                (event.resources[0].email | space | async)\n                                    ?.images[0]\n                            \"\n                        />\n                    </div>\n                    <div class=\"flex items-center space-x-2 mb-2\">\n                        <div\n                            class=\"h-8 w-8 bg-gray-100 rounded-full flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-xl\">place</app-icon>\n                        </div>\n                        <div class=\"flex-1 text-xs\">\n                            {{\n                                (event.resources[0].email | space | async)\n                                    ?.display_name ||\n                                    (event.resources[0].email | space | async)\n                                        ?.name ||\n                                    'No Location'\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2 mb-2\">\n                        <div\n                            class=\"h-8 w-8 bg-gray-100 rounded-full flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-xl\">person</app-icon>\n                        </div>\n                        <div class=\"flex-1 text-xs\">\n                            {{ event.organiser?.name || event.host }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <button\n                            btn\n                            matRipple\n                            class=\"border-green-600 bg-green-600/30 flex items-center space-x-2 text-black\"\n                            (click)=\"approve(event)\"\n                        >\n                            <div>Approve</div>\n                            <app-icon class=\"text-green-600\">done</app-icon>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"border-red-600 bg-red-600/30 flex items-center space-x-2 text-black\"\n                            (click)=\"reject(event)\"\n                        >\n                            <div>Decline</div>\n                            <app-icon class=\"text-red-600\">close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"absolute bottom-0 left-0 right-0 top-14 p-2 flex flex-col items-center justify-center bg-white/80 space-y-2\"\n                *ngIf=\"loading\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Processing...</p>\n            </div>\n        </div>\n        <button\n            btn\n            icon\n            matRipple\n            class=\"bg-pending absolute top-2 -left-8 shadow text-white\"\n            *ngIf=\"!show\"\n            (click)=\"show = !show\"\n        >\n            <app-icon>chevron_left</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                position: relative;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class RoomBookingsApprovalsComponent {\n    public show = true;\n    public loading = false;\n    public readonly pending = this._state.pending;\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async approve(event: CalendarEvent) {\n        const system_id = this._org.binding('approvals');\n        if (!system_id) return;\n        const mod = getModule(system_id, 'RoomBookingApproval');\n        if (!mod) return;\n        this.loading = true;\n        await mod.execute('approve_event', [event.host, event.id]).catch();\n        this.loading = false;\n    }\n\n    public async reject(event: CalendarEvent) {\n        const system_id = this._org.binding('approvals');\n        if (!system_id) return;\n        const mod = getModule(system_id, 'RoomBookingApproval');\n        if (!mod) return;\n        this.loading = true;\n        await mod.execute('decline_event', [event.host, event.id]).catch();\n        this.loading = false;\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@placeos/organisation';\nimport { EventsStateService } from './events-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { take } from 'rxjs/operators';\n\nconst EMPTY = [];\n@Component({\n    selector: 'room-bookings',\n    template: `\n        <div class=\"absolute inset-0 flex flex-col overflow-hidden pl-8\">\n            <div class=\"flex items-center justify-between w-full py-4 pr-8\">\n                <h2 class=\"text-2xl font-medium\">Room Bookings</h2>\n                <button btn matRipple class=\"space-x-2\" (click)=\"newBooking()\">\n                    <div>New Booking</div>\n                    <app-icon>add</app-icon>\n                </button>\n            </div>\n            <div class=\"w-full flex items-center\">\n                <mat-form-field appearance=\"outline\" class=\"h-[3.5rem]\">\n                    <mat-select\n                        multiple\n                        [ngModel]=\"zones | async\"\n                        (ngModelChange)=\"updateZones($event)\"\n                        placeholder=\"All Levels\"\n                    >\n                        <mat-option\n                            *ngFor=\"let level of levels | async\"\n                            [value]=\"level.id\"\n                        >\n                            {{ level.display_name || level.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <div class=\"border-l h-full ml-8 mr-4\"></div>\n                <mat-slide-toggle\n                    class=\"m-2\"\n                    [ngModel]=\"(ui_options | async)?.show_overflow\"\n                    (ngModelChange)=\"updateUIOptions({ show_overflow: $event })\"\n                >\n                    <div class=\"text-xs\">Setup / Breakdown</div>\n                </mat-slide-toggle>\n                <div class=\"border-l h-full ml-8 mr-4\"></div>\n                <div class=\"flex items-center space-x-2\">\n                    <button btn matRipple class=\"inverse\" [matMenuTriggerFor]=\"menu\">\n                        <app-icon>filter_list</app-icon>\n                        <div class=\"mx-2\">Filters</div>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" class=\"\">\n                        <div class=\"flex flex-col space-y-2 overflow-hidden w-48\">\n                            <mat-checkbox \n                                *ngFor=\"let type of types\" \n                                [ngModel]=\"!type_list.includes(type.id)\" \n                                (ngModelChange)=\"setFilter(type.id, !$event)\"\n                            >\n                                {{ type.name }}\n                            </mat-checkbox>\n                        </div>\n                    </mat-menu>\n                    <ng-container *ngFor=\"let type of types\">\n                        <div class=\"flex items-center border border-gray-200 rounded-3xl\" *ngIf=\"!type_list.includes(type.id)\">\n                            <div class=\"h-4 w-4 m-2 rounded-full\" [style.background-color]=\"type.color\"></div>\n                            <div>{{ type.name }}</div>\n                            <button icon matRipple (click)=\"setFilter(type.id, true)\">\n                                <app-icon>close</app-icon>\n                            </button>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n            <div class=\"flex w-full flex-1 h-px border-t mt-4 border-gray-200\">\n                <room-bookings-timeline class=\"flex-1\"/>\n                <room-bookings-approvals *ngIf=\"has_approvals\"/>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RoomBookingsComponent extends AsyncHandler {\n    public readonly zones = this._state.zones;\n    public readonly ui_options = this._state.options;\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    public readonly updateUIOptions = (o) => this._state.setUIOptions(o);\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n\n    public readonly types: any[] = [\n        { id: 'internal', name: 'Internal', color: '#D81B60' },\n        { id: 'external', name: 'External', color: '#1E88E5' },\n        { id: 'cancelled', name: 'Cancelled', color: '#eeeeee' },\n    ];\n\n    public get type_list() {\n        return this._state.filters.hide_type || EMPTY;\n    }\n\n    public get has_approvals() {\n        return this._org.binding('approvals');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventsStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const zones = (\n                    await this.zones.pipe(take(1)).toPromise()\n                ).filter((zone) => levels.find((lvl) => lvl.id === zone));\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n    }\n\n    public setFilter(id: string, value: boolean) {\n        const filters = this._state.filters;\n        let hide_type = filters.hide_type || [];\n        hide_type = hide_type.filter((i) => i !== id);\n        if (value) hide_type.push(id as any);\n        this._state.setFilters({ hide_type });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayviewTopbarComponent } from './dayview-topbar.component';\nimport { DayviewTimelineComponent } from './dayview-timeline.component';\nimport { DayviewSpaceComponent } from './dayview-space.component';\nimport { DayviewEventComponent } from './dayview-event.component';\n\nimport { BookingModalComponent } from './booking-modal.component';\nimport { EventFormComponent } from './event-form.component';\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { RoomBookingsComponent } from './room-bookings.component';\nimport { RoomBookingsTimelineComponent } from './room-timeline.component';\nimport { RoomBookingsApprovalsComponent } from './room-approvals.component';\nimport { NewDayViewComponent } from './new-dayview.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: 'new', component: NewDayViewComponent },\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayviewTopbarComponent,\n        DayviewTimelineComponent,\n        DayviewSpaceComponent,\n        DayviewEventComponent,\n        NewDayViewComponent,\n\n        BookingModalComponent,\n        EventFormComponent,\n\n        RoomBookingsComponent,\n        RoomBookingsTimelineComponent,\n        RoomBookingsApprovalsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        SharedCateringModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DayViewModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-new-dayview]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"relative flex flex-col flex-1 w-1/2 h-full\">\n                <room-bookings></room-bookings>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: #fff;\n            }\n        `,\n    ],\n})\nexport class NewDayViewComponent {}\n"],"x_google_ignoreList":[]}