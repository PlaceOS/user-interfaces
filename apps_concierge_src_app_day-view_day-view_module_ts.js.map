{"version":3,"file":"apps_concierge_src_app_day-view_day-view_module_ts.js","mappings":"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","names":["i0","DayviewTopbarComponent","BaseClass","constructor","_state","_org","_route","_router","super","this","id","name","types","map","i","active_levels","options","d","setDate","newBooking","z","navigate","relativeTo","queryParams","zone_ids","join","setZones","setFilters","hide_type","reduce","list","item","includes","push","updateUIOptions","setUIOptions","ngOnInit","t","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","zones","get","split","length","level","levelWithID","building","buildings","find","bld","parent_id","levels","filter","zone","lvl","updateZones","updateTypes","type_list","selectors","ctx","DAY_IN_MINUTES","DayviewEventComponent","e","setEvent","time","date","Date","event","format","addMinutes","duration","type","guests","status","ngOnChanges","changes","start","startOfDay","diff","differenceInMinutes","top","height","overflow_top","ext","overflow_height","DayviewSpaceComponent","filtered","bookings","bkn","resources","space","email","HOUR_BLOCKS","Array","fill","idx","DayviewTimelineComponent","x","y","loading","active_building","switchMap","querySystems","zone_id","limit","catchError","of","data","Space","shareReplay","combineLatest","spaces","startPolling","ngOnDestroy","stopPolling","onScroll","requestAnimationFrame","scroll","srcElement","scrollLeft","scrollTop","DayViewComponent","_settings","links","route","ROUTES","path","component","DayViewModule","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/day-view/dayview-topbar.component.ts","./apps/concierge/src/app/day-view/dayview-event.component.ts","./apps/concierge/src/app/day-view/dayview-space.component.ts","./apps/concierge/src/app/day-view/dayview-timeline.component.ts","./apps/concierge/src/app/day-view/day-view.component.ts","./apps/concierge/src/app/day-view/day-view.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass, Identity } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BookingUIOptions, EventsStateService } from './events-state.service';\n\n@Component({\n    selector: 'dayview-topbar',\n    template: `\n        <div class=\"flex items-center px-4 h-20 bg-white dark:bg-neutral-700 border-b border-gray-200 dark:border-neutral-500\">\n            <button\n                mat-button\n                new\n                class=\"w-12 xl:w-auto overflow-hidden\"\n                (click)=\"newBooking()\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon\n                        class=\"mr-2\"\n                        [icon]=\"{ class: 'material-icons', content: 'add' }\"\n                    ></app-icon>\n                    <div class=\"hidden xl:block\">New Booking</div>\n                </div>\n            </button>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"type_list\"\n                    (ngModelChange)=\"updateTypes($event)\"\n                    placeholder=\"No Events\"\n                >\n                    <mat-select-trigger>Legend</mat-select-trigger>\n                    <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(ui_options | async)?.show_overflow\"\n                (ngModelChange)=\"updateUIOptions({ show_overflow: $event })\"\n                ><div class=\"text-xs\">Setup / Breakdown</div></mat-slide-toggle\n            >\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(ui_options | async)?.show_cleaning\"\n                (ngModelChange)=\"updateUIOptions({ show_cleaning: $event })\"\n                ><div class=\"text-xs\">Cleaners View</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-0\"></div>\n            <!-- <searchbar class=\"mr-2\"></searchbar> -->\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n                margin-left: 1em;\n            }\n\n            mat-slide-toggle div {\n                width: 5.5em;\n                white-space: initial;\n                line-height: 1.2em;\n            }\n        `,\n    ],\n})\nexport class DayviewTopbarComponent extends BaseClass {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly ui_options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setDate(d);\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    /** List of levels for the active building */\n    public readonly updateTypes = (types) =>\n        this._state.setFilters({\n            hide_type: this.types.reduce((list, item) => {\n                !types.includes(item.id) ? list.push(item) : '';\n                return list;\n            }, []),\n        });\n\n    public updateUIOptions(options: BookingUIOptions) {\n        this._state.setUIOptions(options);\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.zones = zones;\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.updateTypes(this.type_list);\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { startOfDay, differenceInMinutes, format, addMinutes } from 'date-fns';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { EventsStateService } from './events-state.service';\n\nconst DAY_IN_MINUTES = 24 * 60;\n\n@Component({\n    selector: 'dayview-event',\n    template: `\n        <div\n            *ngIf=\"(ui_options | async)?.show_overflow\"\n            [class]=\"\n                'overflow-block absolute rounded overflow-hidden w-full ' + type\n            \"\n            [style.top]=\"overflow_top * 100 + '%'\"\n            [style.height]=\"overflow_height * 100 + '%'\"\n        ></div>\n        <div\n            event\n            matRipple\n            [class]=\"\n                'absolute rounded overflow-hidden text-sm border border-gray-200 shadow-sm z-10 hover:z-30 ' +\n                type\n            \"\n            *ngIf=\"event\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n            (click)=\"view(event)\"\n        >\n            <div class=\"px-2 py-1 font-medium\">{{ event.organiser?.name }}</div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 30\">\n                <app-icon class=\"mx-2\">title</app-icon>\n                {{ event.title }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 60\">\n                <app-icon class=\"mx-2\">schedule</app-icon>\n                {{ time }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 90\">\n                <app-icon class=\"mx-2\">people</app-icon>\n                {{ event.attendees.length }} Attendee{{\n                    event.attendees.length === 1 ? '' : 's'\n                }}\n            </div>\n        </div>\n        <div\n            *ngIf=\"event && (ui_options | async)?.show_cleaning\"\n            cleaning\n            class=\"absolute rounded overflow-hidden flex w-full shadow p-2 bg-white z-20\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n        >\n            <div\n                [class]=\"\n                    'icon flex items-center justify-center mr-2 text-3xl rounded h-12 w-12 text-pending ' +\n                    event.ext('cleaning_status')\n                \"\n            >\n                <app-icon>{{\n                    event.ext('cleaning_status') === 'done' ? 'done' : 'warning'\n                }}</app-icon>\n            </div>\n            <div class=\"flex-1 w-1/2\">\n                {{\n                    event.ext('cleaning_status') === 'done'\n                        ? 'Finished'\n                        : 'Scheduled to'\n                }}\n                clean at\n                {{\n                    event.ext('cleaning_time') || event.event_end * 1000\n                        | date: 'shortTime'\n                }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [event] {\n                background-color: #ccc;\n                width: 12rem;\n                z-index: 100;\n                transition: box-shadow 200ms;\n            }\n\n            [event]:hover {\n                box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.2),\n                    0 1px 1px 0 rgba(0, 0, 0, 0.14),\n                    0 2px 1px -1px rgba(0, 0, 0, 0.12) !important;\n                cursor: pointer;\n            }\n\n            .overflow-block {\n                opacity: 0.3;\n                width: 12rem;\n            }\n\n            .internal {\n                background-color: #1565c0;\n                color: #fff;\n            }\n\n            .icon {\n                background-color: #f0f0f0;\n            }\n\n            .icon.done {\n                color: #21a453;\n            }\n\n            .external {\n                background-color: #ad1457;\n                color: #fff;\n            }\n\n            .cancelled {\n                background-color: #ccc;\n            }\n        `,\n    ],\n})\nexport class DayviewEventComponent implements OnChanges {\n    /** Event to display */\n    @Input() public event: CalendarEvent;\n    /** Top position for the event */\n    public top = -999;\n    /** Height of the event on the calendar */\n    public height = 0;\n    /** Top position for the event */\n    public overflow_top = -999;\n    /** Height of the event on the calendar */\n    public overflow_height = 0;\n\n    public readonly ui_options = this._state.options;\n\n    public readonly view = (e) => this._state.setEvent(e);\n\n    public get time() {\n        const date = new Date(this.event.date);\n        return (\n            format(date, 'h:mm a') +\n            ' - ' +\n            format(addMinutes(date, this.event.duration), 'h:mm a')\n        );\n    }\n\n    public get type() {\n        return this.event.guests.length\n            ? 'external'\n            : this.event.status === 'declined'\n            ? 'cancelled'\n            : 'internal';\n    }\n\n    constructor(private _state: EventsStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            const start = startOfDay(new Date(this.event.date));\n            const diff = differenceInMinutes(new Date(this.event.date), start);\n            this.top = diff / DAY_IN_MINUTES;\n            this.height = this.event.duration / DAY_IN_MINUTES;\n            this.overflow_top =\n                (diff - this.event.ext('setup')) / DAY_IN_MINUTES;\n            this.overflow_height =\n                (this.event.duration +\n                    this.event.ext('setup') +\n                    this.event.ext('breakdown')) /\n                DAY_IN_MINUTES;\n        }\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\nimport { BaseClass } from '@placeos/common';\n\n@Component({\n    selector: 'dayview-space',\n    template: `\n        <ng-container *ngIf=\"space\">\n            <dayview-event\n                *ngFor=\"let event of events | async\"\n                [event]=\"event\"\n            ></dayview-event>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class DayviewSpaceComponent extends BaseClass implements OnInit {\n    /** Space to display events for */\n    @Input() public space: Space;\n\n    public shown_event: CalendarEvent;\n    /** List of events for the selected space */\n    public readonly events = this._state.filtered.pipe(\n        map((bookings) =>{\n            return bookings.filter((bkn) =>\n                bkn.resources.find((space) => this.space.email === space.email)\n            )\n        })\n    );\n\n    constructor(private _state: EventsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('events', this._state.filtered.subscribe());\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\n\nconst HOUR_BLOCKS = new Array(24).fill(0).map((_, idx) => {\n    return (idx % 12 === 0 ? 12 : idx % 12) + (idx >= 12 ? ' PM' : ' AM');\n});\n\n@Component({\n    selector: 'dayview-timeline',\n    template: `\n        <div class=\"absolute inset-0 flex\">\n            <div\n                class=\"time h-full w-24 overflow-hidden bg-blue-100/20 dark:bg-neutral-700 relative\"\n            >\n                <div header class=\"relative h-16 z-50\">\n                    <div\n                        class=\"bg-blue-100/20 dark:bg-neutral-700 absolute top-0 left-0 right-0 bottom-8\"\n                    ></div>\n                </div>\n                <div\n                    *ngFor=\"let time of blocks\"\n                    change-transform\n                    class=\"relative h-16 border-r border-gray-300 dark:border-neutral-500 z-10\"\n                    [style.transform]=\"'translateY(-' + scroll.y + 'px)'\"\n                >\n                    <div\n                        class=\"absolute text-center w-full text-xs top-0 transform -translate-y-1/2 opacity-40\"\n                    >\n                        {{ time }}\n                    </div>\n                    <div\n                        class=\"absolute h-px w-2 top-0 right-0 bg-gray-300 dark:bg-neutral-500\"\n                    ></div>\n                </div>\n                <div class=\"absolute h-8 w-px top-8 right-0 bg-gray-300 dark:bg-neutral-500\"></div>\n            </div>\n            <div class=\"h-full flex-1 flex flex-col w-1/2\">\n                <div\n                    header\n                    class=\"flex relative overflow-hidden border-b border-gray-300 dark:border-neutral-500 border-opacity-50 bg-blue-100/20 dark:bg-neutral-700 h-16 w-full\"\n                >\n                    <div\n                        *ngFor=\"let space of space_list | async\"\n                        change-transform\n                        class=\"relative h-16 w-48 min-w-[12rem]\"\n                        [style.transform]=\"'translateX(-' + scroll.x + 'px)'\"\n                    >\n                        <div\n                            bar\n                            class=\"absolute h-8 w-px bottom-0 -left-px bg-gray-300 dark:bg-neutral-500\"\n                        ></div>\n                        <div class=\"name m-2 text-center\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    #scroll_el\n                    content\n                    class=\"relative flex flex-1 overflow-auto\"\n                    (scroll)=\"onScroll($event)\"\n                >\n                    <dayview-space\n                        *ngFor=\"let space of space_list | async\"\n                        [space]=\"space\"\n                        class=\"w-48 min-w-[12rem] h-[96rem] border-r border-gray-300 dark:border-neutral-500\"\n                    ></dayview-space>\n                    <div\n                        *ngFor=\"let time of blocks; let i = index\"\n                        class=\"absolute bg-gray-300 dark:bg-neutral-500 h-px min-w-full left-0\"\n                        [style.width]=\"(space_list | async)?.length * 12 + 'rem'\"\n                        [style.top]=\"i * 4 + 'rem'\"\n                    ></div>\n                </div>\n            </div>\n            <mat-progress-bar\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n                class=\"absolute bottom-0 left-0 right-0\"\n            ></mat-progress-bar>\n            <view-event-details\n                *ngIf=\"event | async\"\n                [event]=\"event | async\"\n            ></view-event-details>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [change-transform] {\n                will-change: transform;\n            }\n        `,\n    ],\n})\nexport class DayviewTimelineComponent\n    extends BaseClass\n    implements OnInit, OnDestroy\n{\n    /** Time blocks to display */\n    public readonly blocks: string[] = HOUR_BLOCKS;\n    /** Current scroll position of the content */\n    public scroll: { x: number; y: number } = { x: 0, y: 0 };\n    /** Whether event data is loading */\n    public readonly loading = this._state.loading;\n    /** Whether event data is loading */\n    public readonly event = this._state.event;\n\n    public readonly spaces = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap(({ id }) =>\n            querySystems({ zone_id: id, limit: 1000 }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map(({ data }) => data.map((_) => new Space({ ..._, level: this._org.levelWithID(_.zones)} as any))),\n        shareReplay(1)\n    );\n    /** List of spaces to display */\n    public readonly space_list = combineLatest([\n        this.spaces,\n        this._state.zones,\n    ]).pipe(\n        map(\n            ([spaces, zones]) =>\n                spaces.filter(\n                    (space) =>\n                        !zones?.length ||\n                        space.zones.find((z) => zones.includes(z))\n                ) || []\n        )\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventsStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n\n    public onScroll(e) {\n        requestAnimationFrame(\n            () =>\n                (this.scroll = {\n                    x: e.srcElement.scrollLeft,\n                    y: e.srcElement.scrollTop,\n                })\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApplicationLinkInternal, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-dayview]',\n    template: `\n        <sidebar class=\"h-full\"></sidebar>\n        <main\n            class=\"relative overflow-hidden flex flex-col flex-1 w-1/2 h-full bg-gray-200 dark:bg-neutral-600\"\n        >\n            <dayview-topbar></dayview-topbar>\n            <dayview-timeline></dayview-timeline>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DayViewComponent implements OnInit {\n\n    public get links(): ApplicationLinkInternal[] {\n        return this._settings.get('app.general.menu') || [];\n    }\n\n    constructor(private _settings: SettingsService, private _router: Router) {}\n\n    public ngOnInit() {\n        if (!this.links.find(_ => _.route.includes('day-view'))) {\n            this._router.navigate([`/${this.links[0].route}`]);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayviewTopbarComponent } from './dayview-topbar.component';\nimport { DayviewTimelineComponent } from './dayview-timeline.component';\nimport { DayviewSpaceComponent } from './dayview-space.component';\nimport { DayviewEventComponent } from './dayview-event.component';\n\nimport { BookingModalComponent } from './booking-modal.component';\nimport { EventFormComponent } from './event-form.component';\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nconst ROUTES: Route[] = [{ path: '', component: DayViewComponent }];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayviewTopbarComponent,\n        DayviewTimelineComponent,\n        DayviewSpaceComponent,\n        DayviewEventComponent,\n\n        BookingModalComponent,\n        EventFormComponent\n    ],\n    imports: [CommonModule, FormsModule, UIModule, SharedSpacesModule, SharedUsersModule, RouterModule.forChild(ROUTES)],\n})\nexport class DayViewModule {}\n"],"x_google_ignoreList":[]}