{"version":3,"file":"apps_concierge_src_app_day-view_day-view_module_ts.js","mappings":"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","names":["i0","level_r3","id","display_name","name","type_r4","$event","_r6","ctx_r5","updateUIOptions","show_overflow","tmp_0_0","ctx_r2","ui_options","DayviewTopbarComponent","AsyncHandler","options","this","_state","setUIOptions","allow_setup_breakdown","_settings","get","constructor","_org","_route","_router","super","zones","types","type_list","map","i","levels","active_levels","setDate","d","newBooking","updateZones","z","navigate","relativeTo","queryParams","zone_ids","join","setZones","updateTypes","setFilters","hide_type","reduce","list","item","includes","push","ngOnInit","_this","_asyncToGenerator","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","split","length","level","levelWithID","building","buildings","find","bld","parent_id","filter","zone","lvl","static","t","i1","i2","i3","i4","core","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","DayviewTopbarComponent_mat_option_8_Template","DayviewTopbarComponent_mat_option_14_Template","DayviewTopbarComponent_mat_slide_toggle_15_Template","_c0","ctx_r0","type","overflow_top","overflow_height","ctx_r3","event","title","ctx_r4","time","attendees","_r7","ctx_r6","view","DayviewEventComponent_div_2_div_3_Template","DayviewEventComponent_div_2_div_4_Template","DayviewEventComponent_div_2_div_5_Template","ctx_r1","top","height","organiser","duration","ext","event_end","time_format","DAY_IN_MINUTES","DayviewEventComponent","date","Date","format","addMinutes","guests","status","e","setEvent","ngOnChanges","changes","start","startOfDay","diff","differenceInMinutes","setup_time","breakdown_time","inputs","DayviewEventComponent_div_0_Template","DayviewEventComponent_div_2_Template","DayviewEventComponent_div_3_Template","tmp_2_0","show_cleaning","DayviewSpaceComponent_ng_container_0_dayview_event_1_Template","events","DayviewSpaceComponent","filtered","bookings","bkn","resources","space","email","DayviewSpaceComponent_ng_container_0_Template","scroll","y","time_r7","x","space_r8","space_list","i_r11","HOUR_BLOCKS","Array","fill","idx","DayviewTimelineComponent","blocks","loading","spaces","active_building","switchMap","querySystems","zone_id","limit","catchError","of","data","Space","shareReplay","combineLatest","startPolling","ngOnDestroy","stopPolling","onScroll","requestAnimationFrame","srcElement","scrollLeft","scrollTop","DayviewTimelineComponent_div_4_Template","DayviewTimelineComponent_div_8_Template","DayviewTimelineComponent_dayview_space_12_Template","DayviewTimelineComponent_div_14_Template","DayviewTimelineComponent_mat_progress_bar_15_Template","DayviewTimelineComponent_view_event_details_17_Template","DayViewComponent","links","route","attrs","space_r9","formatHour","value_r10","timeToOffset","now","offset_y","ctx_r17","endToOffset","event_r16","_r20","$implicit","space_r13","ctx_r19","viewEvent","RoomBookingsTimelineComponent_ng_container_32_div_1_div_1_Template","i_r14","ctx_r15","tmp_3_0","state","all_day","hjost","RoomBookingsTimelineComponent_ng_container_32_div_1_Template","ctx_r8","_c1","RoomBookingsTimelineComponent","startOfMinute","valueOf","_dialog","offset_x","w_slots","h_slots","hours","from","is_today","isSameDay","system","edit","hour","setHours","onResize","Math","max","min","floor","window","innerWidth","innerHeight","_scroll_container","nativeElement","space_id","ref","open","EventDetailsModalComponent","componentInstance","hide_edit","remove","action","_ref","SetupBreakdownModalComponent","afterClosed","replace","_x","apply","arguments","_this2","content","resp","openConfirmModal","icon","reason","declineEvent","calendar","mailbox","host","system_id","catch","notifyError","close","notifySuccess","closeAll","viewQuery","RoomBookingsTimelineComponent_div_3_Template","RoomBookingsTimelineComponent_div_13_Template","RoomBookingsTimelineComponent_div_18_Template","RoomBookingsTimelineComponent_div_19_Template","RoomBookingsTimelineComponent_div_23_Template","RoomBookingsTimelineComponent_div_25_Template","RoomBookingsTimelineComponent_div_26_Template","RoomBookingsTimelineComponent_ng_container_32_Template","tmp_15_0","event_r4","images","RoomBookingsApprovalsComponent_div_14_img_7_Template","_r8","ctx_r7","approve","ctx_r9","reject","_r11","ctx_r10","show","RoomBookingsApprovalsComponent","pending","binding","mod","getModule","execute","RoomBookingsApprovalsComponent_div_12_Template","RoomBookingsApprovalsComponent_div_14_Template","RoomBookingsApprovalsComponent_div_16_Template","RoomBookingsApprovalsComponent_button_17_Template","tmp_1_0","level_r6","type_r9","setFilter","_r16","type_r12","ctx_r14","color","RoomBookingsComponent_ng_container_27_div_1_Template","EMPTY","RoomBookingsComponent","filters","has_approvals","o","take","value","RoomBookingsComponent_mat_option_13_Template","RoomBookingsComponent_ng_container_15_Template","RoomBookingsComponent_mat_checkbox_26_Template","RoomBookingsComponent_ng_container_27_Template","RoomBookingsComponent_room_bookings_approvals_30_Template","_r2","ROUTES","path","component","NewDayViewComponent","DayViewModule","oAB","cJS","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","SharedCateringModule","RouterModule","forChild"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/day-view/dayview-topbar.component.ts","./apps/concierge/src/app/day-view/dayview-event.component.ts","./apps/concierge/src/app/day-view/dayview-space.component.ts","./apps/concierge/src/app/day-view/dayview-timeline.component.ts","./apps/concierge/src/app/day-view/day-view.component.ts","./apps/concierge/src/app/day-view/room-timeline.component.ts","./apps/concierge/src/app/day-view/room-approvals.component.ts","./apps/concierge/src/app/day-view/room-bookings.component.ts","./apps/concierge/src/app/day-view/day-view.module.ts","./apps/concierge/src/app/day-view/new-dayview.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, Identity, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BookingUIOptions, EventsStateService } from './events-state.service';\n\n@Component({\n    selector: 'dayview-topbar',\n    template: `\n        <div\n            class=\"flex items-center px-4 h-20 bg-base-100 border-b border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                new\n                class=\"w-12 xl:w-auto overflow-hidden\"\n                (click)=\"newBooking()\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon\n                        class=\"mr-2\"\n                        [icon]=\"{ class: 'material-icons', content: 'add' }\"\n                    ></app-icon>\n                    <div class=\"hidden xl:block\">New Booking</div>\n                </div>\n            </button>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"type_list\"\n                    (ngModelChange)=\"updateTypes($event)\"\n                    placeholder=\"No Events\"\n                >\n                    <mat-select-trigger>Legend</mat-select-trigger>\n                    <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(ui_options | async)?.show_overflow\"\n                (ngModelChange)=\"updateUIOptions({ show_overflow: $event })\"\n                *ngIf=\"allow_setup_breakdown\"\n            >\n                <div class=\"text-xs\">Setup / Breakdown</div>\n            </mat-slide-toggle>\n            <div class=\"flex-1 w-0\"></div>\n            <!-- <searchbar class=\"mr-2\"></searchbar> -->\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n                margin-left: 1em;\n            }\n\n            mat-slide-toggle div {\n                width: 5.5em;\n                white-space: initial;\n                line-height: 1.2em;\n            }\n        `,\n    ],\n})\nexport class DayviewTopbarComponent extends AsyncHandler {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly ui_options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setDate(d);\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    /** List of levels for the active building */\n    public readonly updateTypes = (types) =>\n        this._state.setFilters({\n            hide_type: this.types.reduce((list, item) => {\n                !types.includes(item.id) ? list.push(item) : '';\n                return list;\n            }, []),\n        });\n\n    public updateUIOptions(options: BookingUIOptions) {\n        this._state.setUIOptions(options);\n    }\n\n    public get allow_setup_breakdown() {\n        return this._settings.get('app.events.allow_setup_breakdown');\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.zones = zones;\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.updateTypes(this.type_list);\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { startOfDay, differenceInMinutes, format, addMinutes } from 'date-fns';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { EventsStateService } from './events-state.service';\nimport { SettingsService } from '@placeos/common';\n\nconst DAY_IN_MINUTES = 24 * 60;\n\n@Component({\n    selector: 'dayview-event',\n    template: `\n        <div\n            *ngIf=\"(ui_options | async)?.show_overflow\"\n            [class]=\"\n                'overflow-block absolute rounded overflow-hidden w-full ' + type\n            \"\n            [style.top]=\"overflow_top * 100 + '%'\"\n            [style.height]=\"overflow_height * 100 + '%'\"\n        ></div>\n        <div\n            event\n            matRipple\n            [class]=\"\n                'absolute rounded overflow-hidden text-sm border border-base-200 shadow-sm z-10 hover:z-30 ' +\n                type\n            \"\n            *ngIf=\"event\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n            (click)=\"view(event)\"\n        >\n            <div class=\"px-2 py-1 font-medium\">{{ event.organiser?.name }}</div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 30\">\n                <app-icon class=\"mx-2\">title</app-icon>\n                {{ event.title }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 60\">\n                <app-icon class=\"mx-2\">schedule</app-icon>\n                {{ time }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 90\">\n                <app-icon class=\"mx-2\">people</app-icon>\n                {{ event.attendees.length }} Attendee{{\n                    event.attendees.length === 1 ? '' : 's'\n                }}\n            </div>\n        </div>\n        <div\n            *ngIf=\"event && (ui_options | async)?.show_cleaning\"\n            cleaning\n            class=\"absolute rounded overflow-hidden flex w-full shadow p-2 bg-base-100 z-20 hover:!h-48\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n        >\n            <div\n                [class]=\"\n                    'icon flex items-center justify-center mr-2 text-3xl rounded h-12 w-12 text-pending ' +\n                    event.ext('cleaning_status')\n                \"\n            >\n                <app-icon>{{\n                    event.ext('cleaning_status') === 'done' ? 'done' : 'warning'\n                }}</app-icon>\n            </div>\n            <div class=\"flex-1 w-1/2\">\n                {{\n                    event.ext('cleaning_status') === 'done'\n                        ? 'Finished'\n                        : 'Scheduled to'\n                }}\n                clean at\n                {{\n                    event.ext('cleaning_time') || event.event_end * 1000\n                        | date: time_format\n                }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [event] {\n                background-color: #ccc;\n                width: 12rem;\n                z-index: 100;\n                transition: box-shadow 200ms;\n            }\n\n            [event]:hover {\n                box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.2),\n                    0 1px 1px 0 rgba(0, 0, 0, 0.14),\n                    0 2px 1px -1px rgba(0, 0, 0, 0.12) !important;\n                cursor: pointer;\n            }\n\n            .overflow-block {\n                opacity: 0.3;\n                width: 12rem;\n            }\n\n            .internal {\n                background-color: #1565c0;\n                color: #fff;\n            }\n\n            .icon {\n                background-color: #f0f0f0;\n            }\n\n            .icon.done {\n                color: #21a453;\n            }\n\n            .external {\n                background-color: #ad1457;\n                color: #fff;\n            }\n\n            .cancelled {\n                background-color: #ccc;\n            }\n        `,\n    ],\n})\nexport class DayviewEventComponent implements OnChanges {\n    /** Event to display */\n    @Input() public event: CalendarEvent;\n    /** Top position for the event */\n    public top = -999;\n    /** Height of the event on the calendar */\n    public height = 0;\n    /** Top position for the event */\n    public overflow_top = -999;\n    /** Height of the event on the calendar */\n    public overflow_height = 0;\n\n    public readonly ui_options = this._state.options;\n\n    public readonly view = (e) => this._state.setEvent(e);\n\n    public get time() {\n        const date = new Date(this.event.date);\n        return (\n            format(date, this.time_format) +\n            ' - ' +\n            format(addMinutes(date, this.event.duration), this.time_format)\n        );\n    }\n\n    public get type() {\n        return this.event.guests.length\n            ? 'external'\n            : this.event.status === 'declined'\n            ? 'cancelled'\n            : 'internal';\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            const start = startOfDay(new Date(this.event.date));\n            const diff = differenceInMinutes(new Date(this.event.date), start);\n            this.top = diff / DAY_IN_MINUTES;\n            this.height = this.event.duration / DAY_IN_MINUTES;\n            this.overflow_top =\n                (diff - (this.event.setup_time || 0)) / DAY_IN_MINUTES;\n            this.overflow_height =\n                (this.event.duration +\n                    (this.event.setup_time || 0) +\n                    (this.event.breakdown_time || 0)) /\n                DAY_IN_MINUTES;\n        }\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'dayview-space',\n    template: `\n        <ng-container *ngIf=\"space\">\n            <dayview-event\n                *ngFor=\"let event of events | async\"\n                [event]=\"event\"\n            ></dayview-event>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class DayviewSpaceComponent extends AsyncHandler implements OnInit {\n    /** Space to display events for */\n    @Input() public space: Space;\n\n    public shown_event: CalendarEvent;\n    /** List of events for the selected space */\n    public readonly events = this._state.filtered.pipe(\n        map((bookings) => {\n            return bookings.filter((bkn) =>\n                bkn.resources.find((space) => this.space.email === space.email)\n            );\n        })\n    );\n\n    constructor(private _state: EventsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('events', this._state.filtered.subscribe());\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\n\nconst HOUR_BLOCKS = new Array(24).fill(0).map((_, idx) => {\n    return (idx % 12 === 0 ? 12 : idx % 12) + (idx >= 12 ? ' PM' : ' AM');\n});\n\n@Component({\n    selector: 'dayview-timeline',\n    template: `\n        <div class=\"absolute inset-0 flex\">\n            <div class=\"time h-full w-24 overflow-hidden bg-base-100 relative\">\n                <div header class=\"relative h-16 z-50\">\n                    <div\n                        class=\"bg-base-100 absolute top-0 left-0 right-0 bottom-8\"\n                    ></div>\n                </div>\n                <div\n                    *ngFor=\"let time of blocks\"\n                    change-transform\n                    class=\"relative h-16 border-r border-base-300 z-10\"\n                    [style.transform]=\"'translateY(-' + scroll.y + 'px)'\"\n                >\n                    <div\n                        class=\"absolute text-center w-full text-xs top-0 transform -translate-y-1/2 opacity-40\"\n                    >\n                        {{ time }}\n                    </div>\n                    <div\n                        class=\"absolute h-px w-2 top-0 right-0 bg-base-300\"\n                    ></div>\n                </div>\n                <div class=\"absolute h-8 w-px top-8 right-0 bg-base-300\"></div>\n            </div>\n            <div class=\"h-full flex-1 flex flex-col w-1/2\">\n                <div\n                    header\n                    class=\"flex relative overflow-hidden border-b border-base-300 border-opacity-50 bg-base-100 h-16 w-full\"\n                >\n                    <div\n                        *ngFor=\"let space of space_list | async\"\n                        change-transform\n                        class=\"relative h-16 w-48 min-w-[12rem]\"\n                        [style.transform]=\"'translateX(-' + scroll.x + 'px)'\"\n                    >\n                        <div\n                            bar\n                            class=\"absolute h-8 w-px bottom-0 -left-px bg-base-300\"\n                        ></div>\n                        <div class=\"name m-2 text-center\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    #scroll_el\n                    content\n                    class=\"relative flex flex-1 overflow-auto\"\n                    (scroll)=\"onScroll($event)\"\n                >\n                    <dayview-space\n                        *ngFor=\"let space of space_list | async\"\n                        [space]=\"space\"\n                        class=\"w-48 min-w-[12rem] h-[96rem] border-r border-base-300\"\n                    ></dayview-space>\n                    <div\n                        *ngFor=\"let time of blocks; let i = index\"\n                        class=\"absolute bg-base-300 h-px min-w-full left-0\"\n                        [style.width]=\"\n                            (space_list | async)?.length * 12 + 'rem'\n                        \"\n                        [style.top]=\"i * 4 + 'rem'\"\n                    ></div>\n                </div>\n            </div>\n            <mat-progress-bar\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n                class=\"absolute bottom-0 left-0 right-0\"\n            ></mat-progress-bar>\n            <view-event-details\n                *ngIf=\"event | async\"\n                [event]=\"event | async\"\n            ></view-event-details>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [change-transform] {\n                will-change: transform;\n            }\n        `,\n    ],\n})\nexport class DayviewTimelineComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    /** Time blocks to display */\n    public readonly blocks: string[] = HOUR_BLOCKS;\n    /** Current scroll position of the content */\n    public scroll: { x: number; y: number } = { x: 0, y: 0 };\n    /** Whether event data is loading */\n    public readonly loading = this._state.loading;\n    /** Event to show more details about */\n    public readonly event = this._state.event;\n\n    public readonly spaces = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap(({ id }) =>\n            querySystems({ zone_id: id, limit: 1000 }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map(({ data }) =>\n            data.map(\n                (_) =>\n                    new Space({\n                        ..._,\n                        level: this._org.levelWithID(_.zones),\n                    } as any)\n            )\n        ),\n        shareReplay(1)\n    );\n    /** List of spaces to display */\n    public readonly space_list = combineLatest([\n        this.spaces,\n        this._state.zones,\n    ]).pipe(\n        map(\n            ([spaces, zones]) =>\n                spaces.filter(\n                    (space) =>\n                        !zones?.length ||\n                        space.zones.find((z) => zones.includes(z))\n                ) || []\n        )\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventsStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n\n    public onScroll(e) {\n        requestAnimationFrame(\n            () =>\n                (this.scroll = {\n                    x: e.srcElement.scrollLeft,\n                    y: e.srcElement.scrollTop,\n                })\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApplicationLinkInternal, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-dayview]',\n    template: `\n        <sidebar class=\"h-full\"></sidebar>\n        <main\n            class=\"relative overflow-hidden flex flex-col flex-1 w-1/2 h-full bg-base-200\"\n        >\n            <dayview-topbar></dayview-topbar>\n            <dayview-timeline></dayview-timeline>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DayViewComponent implements OnInit {\n    public get links(): ApplicationLinkInternal[] {\n        return this._settings.get('app.general.menu') || [];\n    }\n\n    constructor(private _settings: SettingsService, private _router: Router) {}\n\n    public ngOnInit() {\n        if (!this.links.find((_) => _.route.includes('day-view'))) {\n            this._router.navigate([`/${this.links[0].route}`]);\n        }\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport {\n    addDays,\n    differenceInMinutes,\n    format,\n    isSameDay,\n    setHours,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { EventsStateService } from './events-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    CalendarEvent,\n    EventDetailsModalComponent,\n    SetupBreakdownModalComponent,\n    declineEvent,\n} from '@placeos/events';\n\n@Component({\n    selector: 'room-bookings-timeline',\n    template: `\n        <div\n            class=\"relative flex items-center justify-center p-2 space-x-2 border-b border-base-200\"\n        >\n            <date-options\n                [date]=\"date | async\"\n                (dateChange)=\"setDate($event)\"\n                [is_new]=\"true\"\n            ></date-options>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 left-4 text-info text-sm\"\n                *ngIf=\"is_today | async\"\n            >\n                Today\n            </div>\n        </div>\n        <div\n            class=\"flex flex-col w-full flex-1 overflow-hidden\"\n            (window:resize)=\"onResize()\"\n        >\n            <div header class=\"flex items-center w-full h-16\">\n                <div\n                    times\n                    class=\"w-16 h-full flex flex-col items-center justify-end text-xs pb-2 opacity-60\"\n                >\n                    {{ date | async | date: 'z' }}\n                </div>\n                <div\n                    spaces\n                    class=\"relative flex-1 h-full overflow-hidden border-r border-base-200\"\n                >\n                    <div\n                        class=\"flex absolute inset-y-0\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        <div\n                            class=\"flex flex-col items-center justify-center h-full w-56\"\n                            *ngFor=\"let space of spaces | async\"\n                        >\n                            {{ space.display_name || space.name }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div content class=\"flex w-full flex-1 h-px\">\n                <div\n                    times\n                    class=\"relative w-16 h-full overflow-y-hidden overflow-x-visible border-r border-base-200\"\n                >\n                    <div\n                        class=\"absolute inset-x-0\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <div\n                            class=\"relative block h-12\"\n                            *ngFor=\"let value of hours\"\n                        >\n                            <div\n                                class=\"absolute top-0 right-0 w-2 h-px bg-base-200\"\n                            ></div>\n                            <div\n                                class=\"absolute top-0 right-3 -translate-y-1/2 text-xs opacity-60\"\n                            >\n                                {{ formatHour(value) }}\n                            </div>\n                        </div>\n                        <div\n                            class=\"absolute bg-secondary right-0 translate-x-1/2 -translate-y-1/2 h-2 w-2 rounded-full z-30\"\n                            [style.top]=\"timeToOffset(now) + 'px'\"\n                            *ngIf=\"is_today | async\"\n                        ></div>\n                    </div>\n                </div>\n                <div spaces class=\"relative flex-1 h-full overflow-hidden w-px\">\n                    <div\n                        class=\"absolute top-0 flex h-full pointer-events-none\"\n                        [style.left]=\"-(offset_x % 224) + 'px'\"\n                    >\n                        <div\n                            *ngFor=\"let _ of w_slots\"\n                            class=\"w-56 h-full border-r border-base-200\"\n                        ></div>\n                    </div>\n                    <div\n                        class=\"absolute left-0 w-full pointer-events-none\"\n                        [style.top]=\"-(offset_y % 48) + 'px'\"\n                    >\n                        <div\n                            *ngFor=\"let _ of h_slots\"\n                            class=\"h-12 w-full border-t border-base-200\"\n                        ></div>\n                        <div\n                            *ngIf=\"is_today | async\"\n                            class=\"absolute inset-x-0 -translate-y-px h-0.5 bg-secondary z-30\"\n                            [style.top]=\"\n                                timeToOffset(now) -\n                                offset_y -\n                                (48 - (offset_y % 48)) +\n                                48 +\n                                'px'\n                            \"\n                        >\n                            <div\n                                class=\"absolute bg-secondary top-1/2 left-0 -translate-x-1/2 -translate-y-1/2 h-2 w-2 rounded-full\"\n                            ></div>\n                        </div>\n                    </div>\n                    <div\n                        #scroll_container\n                        class=\"relative w-full h-full overflow-auto z-10\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <div\n                            class=\"overflow-hidden relative\"\n                            [style.height]=\"24 * 3 + 'rem'\"\n                            [style.width]=\"\n                                (spaces | async)?.length * 14 + 'rem'\n                            \"\n                        >\n                            <ng-container\n                                *ngFor=\"\n                                    let space of spaces | async;\n                                    let i = index\n                                \"\n                            >\n                                <div\n                                    event\n                                    *ngFor=\"\n                                        let event of (events | async)[\n                                            space.id\n                                        ] || []\n                                    \"\n                                    class=\"absolute w-[13.625rem] hover:opacity-90\"\n                                    [style.left]=\"i * 14 + 0.125 + 'rem'\"\n                                    [style.top]=\"\n                                        timeToOffset(event.date) + 'px'\n                                    \"\n                                    [style.height]=\"\n                                        endToOffset(event.duration) + 'px'\n                                    \"\n                                    (click)=\"viewEvent(event, space.id)\"\n                                >\n                                    <div\n                                        class=\"absolute bg-pink-600/50 border border-pink-600 rounded-lg w-full\"\n                                        [style.height]=\"\n                                            endToOffset(\n                                                event.duration +\n                                                    (event.ext('setup') || 0) +\n                                                    (event.ext('breakdown') ||\n                                                        0)\n                                            ) + 'px'\n                                        \"\n                                        [style.top]=\"\n                                            -(\n                                                ((event.ext('setup') || 0) /\n                                                    60) *\n                                                48\n                                            ) + 'px'\n                                        \"\n                                        *ngIf=\"\n                                            (ui_options | async)\n                                                ?.show_overflow &&\n                                            (event.ext('setup') ||\n                                                event.ext('breakdown')) &&\n                                            endToOffset(\n                                                event.duration +\n                                                    (event.ext('setup') || 0) +\n                                                    (event.ext('breakdown') ||\n                                                        0)\n                                            )\n                                        \"\n                                    ></div>\n                                    <div\n                                        class=\"relative w-full h-full shadow bg-base-200 hover:bg-base-200 rounded-lg overflow-hidden px-3 py-1 text-xs\"\n                                        [class.opacity-60]=\"\n                                            event.state === 'done'\n                                        \"\n                                    >\n                                        <div\n                                            class=\"absolute left-0 inset-y-0 w-1 \"\n                                            [class.bg-pink-600]=\"\n                                                event.status !== 'cancelled'\n                                            \"\n                                            [class.bg-error]=\"\n                                                event.status === 'cancelled'\n                                            \"\n                                        ></div>\n                                        <p\n                                            class=\"truncate\"\n                                            [class.opacity-60]=\"\n                                                event.status === 'cancelled'\n                                            \"\n                                        >\n                                            {{\n                                                event.all_day\n                                                    ? 'All Day'\n                                                    : (event.date\n                                                      | date: time_format)\n                                            }}\n                                            &ndash;\n                                            {{\n                                                event.organiser?.name ||\n                                                    event.hjost\n                                            }}\n                                        </p>\n                                        <p\n                                            class=\"truncate\"\n                                            [class.opacity-60]=\"\n                                                event.status === 'cancelled'\n                                            \"\n                                        >\n                                            {{ event.title }}\n                                        </p>\n                                    </div>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class RoomBookingsTimelineComponent extends AsyncHandler {\n    public offset_x = 0;\n    public offset_y = 0;\n    public w_slots = [];\n    public h_slots = [];\n    public hours = Array.from({ length: 24 }, (_, i) => i);\n    public readonly ui_options = this._state.options;\n    public readonly spaces = this._state.spaces;\n    public readonly date = this._state.date;\n    public readonly is_today = this.date.pipe(\n        map((d) => isSameDay(d, Date.now()))\n    );\n    public readonly events = combineLatest([\n        this._state.spaces,\n        this._state.filtered,\n    ]).pipe(\n        map(([spaces, events]) => {\n            const map = {};\n            for (const space of spaces) {\n                map[space.id] = events.filter(\n                    (event) =>\n                        event.resources.find(\n                            (item) =>\n                                item.id === space.id ||\n                                item.email === space.email\n                        ) ||\n                        event.system?.id === space.id ||\n                        event.system?.email === space.email\n                );\n            }\n            return map;\n        }),\n        shareReplay(1)\n    );\n\n    public get now() {\n        return startOfMinute(Date.now()).valueOf();\n    }\n\n    public readonly edit = (e) => this._state.newBooking(e);\n    public readonly setDate = (d) => this._state.setDate(d);\n\n    @ViewChild('scroll_container', { static: true })\n    private _scroll_container: ElementRef<HTMLDivElement>;\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public formatHour(hour: number) {\n        const date = setHours(Date.now(), hour);\n        return this._settings.get('app.use_24_hour_time')\n            ? format(date, 'HH:00')\n            : format(date, 'h a');\n    }\n\n    public ngOnInit() {\n        this.subscription('poll', this._state.startPolling());\n        const date = Date.now();\n        this.onResize();\n    }\n\n    public timeToOffset(date: number) {\n        const diff = differenceInMinutes(date, startOfDay(date));\n        return Math.max(0, diff / 60) * 48;\n    }\n\n    public endToOffset(duration: number) {\n        return Math.min(24, duration / 60) * 48;\n    }\n\n    public onResize() {\n        const w_slots = Math.floor(window.innerWidth / 224) + 1;\n        const h_slots = Math.floor(window.innerHeight / 48);\n        this.w_slots = Array.from({ length: w_slots }, (_, i) => i);\n        this.h_slots = Array.from({ length: h_slots }, (_, i) => i);\n    }\n\n    public onScroll() {\n        this.offset_x = this._scroll_container.nativeElement.scrollLeft;\n        this.offset_y = this._scroll_container.nativeElement.scrollTop;\n    }\n\n    public viewEvent(event: CalendarEvent, space_id: string) {\n        const ref = this._dialog.open(EventDetailsModalComponent, {\n            data: event,\n        });\n        ref.componentInstance.hide_edit = true;\n        this.subscription(\n            'remove',\n            ref.componentInstance.remove.subscribe(() =>\n                this.remove(event, space_id)\n            )\n        );\n        this.subscription(\n            'actions',\n            ref.componentInstance.action.subscribe(async (action) => {\n                if (!action.includes('breakdown')) return;\n                const ref = this._dialog.open(SetupBreakdownModalComponent, {\n                    data: event,\n                });\n                const data = await ref.afterClosed().toPromise();\n                if (data) this._state.replace(data);\n            })\n        );\n    }\n\n    public async remove(item: CalendarEvent, space_id: string) {\n        const time = `${format(item.date, 'dd MMM yyyy ' + this.time_format)}`;\n        const resource_name = item.space?.display_name;\n        const content = `Delete the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await declineEvent(item.id, {\n            calendar: item.calendar || item.mailbox || item.host,\n            system_id: space_id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(`Unable to delete booking. ${e}`);\n                resp.close();\n                throw e;\n            });\n        notifySuccess('Successfully deleted booking.');\n        this._dialog.closeAll();\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventsStateService } from './events-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { CalendarEvent } from '@placeos/events';\n\n@Component({\n    selector: 'room-bookings-approvals',\n    template: `\n        <div\n            class=\"flex flex-col h-full overflow-hidden border-l border-base-200\"\n            [style.width]=\"show ? '' : '0px'\"\n        >\n            <div\n                class=\"flex items-center p-2 border-b border-base-200 space-x-2\"\n            >\n                <button\n                    btn\n                    icon\n                    matRipple\n                    class=\"bg-base-200\"\n                    (click)=\"show = !show\"\n                >\n                    <app-icon>chevron_right</app-icon>\n                </button>\n                <h3 class=\"flex-1\">\n                    Pending Approval ({{ (pending | async)?.length || '0' }})\n                </h3>\n                <button btn icon matRipple>\n                    <app-icon>search</app-icon>\n                </button>\n            </div>\n            <div class=\"flex-1 overflow-auto p-2 space-y-2\">\n                <div\n                    *ngIf=\"!(pending | async)?.length\"\n                    class=\"w-full h-full flex flex-col items-center justify-center space-y-2\"\n                >\n                    <img src=\"assets/icons/no-pending.svg\" />\n                    <p>No pending requests</p>\n                </div>\n                <div\n                    *ngFor=\"let event of pending | async\"\n                    class=\"relative border border-base-200 p-2 w-full rounded\"\n                >\n                    <h3>{{ event.title }}</h3>\n                    <p class=\"opacity-30 text-xs mb-2\">\n                        {{ event.date | date: 'medium' }}\n                    </p>\n                    <div class=\"w-64 h-32 overflow-hidden mb-2 bg-base-200\">\n                        <img\n                            auth\n                            class=\"object-cover min-w-full min-h-full\"\n                            [source]=\"\n                                (event.resources[0]?.email | space | async)\n                                    ?.images[0]\n                            \"\n                            *ngIf=\"event.resources.length\"\n                        />\n                    </div>\n                    <div class=\"flex items-center space-x-2 mb-2\">\n                        <div\n                            class=\"h-8 w-8 bg-base-200 rounded-full flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-xl\">place</app-icon>\n                        </div>\n                        <div class=\"flex-1 text-xs\">\n                            {{\n                                (\n                                    event.resources.length &&\n                                    (event.resources[0]?.email | space | async)\n                                )?.display_name ||\n                                    (event.resources[0]?.email | space | async)\n                                        ?.name ||\n                                    'No Location'\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2 mb-2\">\n                        <div\n                            class=\"h-8 w-8 bg-base-200 rounded-full flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-xl\">person</app-icon>\n                        </div>\n                        <div class=\"flex-1 text-xs\">\n                            {{ event.organiser?.name || event.host }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <button\n                            btn\n                            matRipple\n                            class=\"border-success bg-success-light text-black flex flex-1 items-center space-x-2\"\n                            [disabled]=\"status[event.id] === 'accept'\"\n                            (click)=\"approve(event)\"\n                        >\n                            <div>\n                                {{\n                                    status[event.id] === 'accept'\n                                        ? 'Approved'\n                                        : 'Approve'\n                                }}\n                            </div>\n                            <app-icon class=\"text-success\">done</app-icon>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"border-error bg-error-light text-black flex flex-1 items-center space-x-2 \"\n                            [disabled]=\"status[event.id] === 'decline'\"\n                            (click)=\"reject(event)\"\n                        >\n                            <div>\n                                {{\n                                    status[event.id] === 'decline'\n                                        ? 'Declined'\n                                        : 'Decline'\n                                }}\n                            </div>\n                            <app-icon class=\"text-error\">close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"absolute bottom-0 left-0 right-0 top-14 p-2 flex flex-col items-center justify-center space-y-2\"\n                *ngIf=\"loading\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-80 z-0\"></div>\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"relative z-10\">Processing...</p>\n            </div>\n        </div>\n        <button\n            btn\n            icon\n            matRipple\n            class=\"bg-warning absolute top-2 -left-8 shadow text-warning-content\"\n            *ngIf=\"!show\"\n            (click)=\"show = !show\"\n        >\n            <app-icon>chevron_left</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                position: relative;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class RoomBookingsApprovalsComponent {\n    public show = true;\n    public loading = false;\n    public status: Record<string, 'accept' | 'decline' | undefined> = {};\n    public readonly pending = this._state.pending;\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async approve(event: CalendarEvent) {\n        const system_id = this._org.binding('approvals');\n        if (!system_id) return;\n        const mod = getModule(system_id, 'RoomBookingApproval', 1);\n        if (!mod) return;\n        this.loading = true;\n        await mod.execute('accept_event', [event.mailbox, event.id]).catch();\n        this.loading = false;\n        this.status[event.id] = 'accept';\n    }\n\n    public async reject(event: CalendarEvent) {\n        const system_id = this._org.binding('approvals');\n        if (!system_id) return;\n        const mod = getModule(system_id, 'RoomBookingApproval', 1);\n        if (!mod) return;\n        this.loading = true;\n        await mod.execute('decline_event', [event.mailbox, event.id]).catch();\n        this.loading = false;\n        this.status[event.id] = 'decline';\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@placeos/organisation';\nimport { EventsStateService } from './events-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { take } from 'rxjs/operators';\n\nconst EMPTY = [];\n@Component({\n    selector: 'room-bookings',\n    template: `\n        <div class=\"absolute inset-0 flex flex-col overflow-hidden pl-8\">\n            <div class=\"flex items-center justify-between w-full py-4 pr-8\">\n                <h2 class=\"text-2xl font-medium\">Room Bookings</h2>\n                <button btn matRipple class=\"space-x-2\" (click)=\"newBooking()\">\n                    <div>New Booking</div>\n                    <app-icon>add</app-icon>\n                </button>\n            </div>\n            <div class=\"w-full flex items-center\">\n                <mat-form-field appearance=\"outline\" class=\"h-[3.5rem]\">\n                    <mat-select\n                        multiple\n                        [ngModel]=\"zones | async\"\n                        (ngModelChange)=\"updateZones($event)\"\n                        placeholder=\"All Levels\"\n                    >\n                        <mat-option\n                            *ngFor=\"let level of levels | async\"\n                            [value]=\"level.id\"\n                        >\n                            {{ level.display_name || level.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <ng-container *ngIf=\"allow_setup_breakdown\">\n                <div class=\"border-l h-full ml-8 mr-4\"></div>\n                <mat-slide-toggle\n                    class=\"m-2\"\n                    [ngModel]=\"(ui_options | async)?.show_overflow\"\n                    (ngModelChange)=\"updateUIOptions({ show_overflow: $event })\"\n                >\n                    <div class=\"text-xs\">Setup / Breakdown</div>\n                </mat-slide-toggle>\n</ng-container>\n                <div class=\"border-l h-full ml-8 mr-4\"></div>\n                <div class=\"flex items-center space-x-2\">\n                    <button btn matRipple class=\"inverse\" [matMenuTriggerFor]=\"menu\">\n                        <app-icon>filter_list</app-icon>\n                        <div class=\"mx-2\">Filters</div>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" class=\"\">\n                        <div class=\"flex flex-col space-y-2 overflow-hidden w-48\">\n                            <mat-checkbox \n                                *ngFor=\"let type of types\" \n                                [ngModel]=\"!type_list.includes(type.id)\" \n                                (ngModelChange)=\"setFilter(type.id, !$event)\"\n                            >\n                                {{ type.name }}\n                            </mat-checkbox>\n                        </div>\n                    </mat-menu>\n                    <ng-container *ngFor=\"let type of types\">\n                        <div class=\"flex items-center border border-base-200 rounded-3xl\" *ngIf=\"!type_list.includes(type.id)\">\n                            <div class=\"h-4 w-4 m-2 rounded-full\" [style.background-color]=\"type.color\"></div>\n                            <div>{{ type.name }}</div>\n                            <button icon matRipple (click)=\"setFilter(type.id, true)\">\n                                <app-icon>close</app-icon>\n                            </button>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n            <div class=\"flex w-full flex-1 h-px border-t mt-4 border-base-200\">\n                <room-bookings-timeline class=\"flex-1\"/>\n                <room-bookings-approvals *ngIf=\"has_approvals\"/>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RoomBookingsComponent extends AsyncHandler {\n    public readonly zones = this._state.zones;\n    public readonly ui_options = this._state.options;\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    public readonly updateUIOptions = (o) => this._state.setUIOptions(o);\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n\n    public readonly types: any[] = [\n        { id: 'internal', name: 'Internal', color: '#D81B60' },\n        { id: 'external', name: 'External', color: '#1E88E5' },\n        { id: 'cancelled', name: 'Cancelled', color: '#eeeeee' },\n    ];\n\n    public get type_list() {\n        return this._state.filters.hide_type || EMPTY;\n    }\n\n    public get has_approvals() {\n        return this._org.binding('approvals');\n    }\n\n    public get allow_setup_breakdown() {\n        return this._settings.get('app.events.allow_setup_breakdown');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventsStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const zones = (\n                    await this.zones.pipe(take(1)).toPromise()\n                ).filter((zone) => levels.find((lvl) => lvl.id === zone));\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n    }\n\n    public setFilter(id: string, value: boolean) {\n        const filters = this._state.filters;\n        let hide_type = filters.hide_type || [];\n        hide_type = hide_type.filter((i) => i !== id);\n        if (value) hide_type.push(id as any);\n        this._state.setFilters({ hide_type });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayviewTopbarComponent } from './dayview-topbar.component';\nimport { DayviewTimelineComponent } from './dayview-timeline.component';\nimport { DayviewSpaceComponent } from './dayview-space.component';\nimport { DayviewEventComponent } from './dayview-event.component';\n\nimport { BookingModalComponent } from './booking-modal.component';\nimport { EventFormComponent } from './event-form.component';\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { RoomBookingsComponent } from './room-bookings.component';\nimport { RoomBookingsTimelineComponent } from './room-timeline.component';\nimport { RoomBookingsApprovalsComponent } from './room-approvals.component';\nimport { NewDayViewComponent } from './new-dayview.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: 'new', component: NewDayViewComponent },\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayviewTopbarComponent,\n        DayviewTimelineComponent,\n        DayviewSpaceComponent,\n        DayviewEventComponent,\n        NewDayViewComponent,\n\n        BookingModalComponent,\n        EventFormComponent,\n\n        RoomBookingsComponent,\n        RoomBookingsTimelineComponent,\n        RoomBookingsApprovalsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        SharedCateringModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DayViewModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-new-dayview]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"relative flex flex-col flex-1 w-1/2 h-full\">\n                <room-bookings></room-bookings>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewDayViewComponent {}\n"],"x_google_ignoreList":[]}