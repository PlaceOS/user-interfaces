{"version":3,"file":"apps_concierge_src_app_day-view_day-view_module_ts.js","mappings":"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","names":["i0","level_r2","id","display_name","name","type_r3","DayviewTopbarComponent","AsyncHandler","updateUIOptions","options","this","_state","setUIOptions","constructor","_org","_route","_router","super","zones","types","type_list","map","i","levels","active_levels","ui_options","setDate","d","newBooking","updateZones","z","navigate","relativeTo","queryParams","zone_ids","join","setZones","updateTypes","setFilters","hide_type","reduce","list","item","includes","push","ngOnInit","_this","_asyncToGenerator","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","get","split","length","level","levelWithID","building","buildings","find","bld","parent_id","filter","zone","lvl","t","i1","i2","i3","core","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","$event","DayviewTopbarComponent_mat_option_8_Template","DayviewTopbarComponent_mat_option_14_Template","show_overflow","_c0","tmp_5_0","ctx_r0","type","overflow_top","overflow_height","ctx_r3","event","title","ctx_r4","time","ctx_r5","attendees","_r7","ctx_r6","view","DayviewEventComponent_div_2_div_3_Template","DayviewEventComponent_div_2_div_4_Template","DayviewEventComponent_div_2_div_5_Template","ctx_r1","top","height","organiser","duration","ctx_r2","ext","event_end","DAY_IN_MINUTES","DayviewEventComponent","date","Date","format","addMinutes","guests","status","e","setEvent","ngOnChanges","changes","start","startOfDay","diff","differenceInMinutes","inputs","DayviewEventComponent_div_0_Template","DayviewEventComponent_div_2_Template","DayviewEventComponent_div_3_Template","tmp_0_0","tmp_2_0","show_cleaning","DayviewSpaceComponent_ng_container_0_dayview_event_1_Template","events","DayviewSpaceComponent","filtered","bookings","bkn","resources","space","email","DayviewSpaceComponent_ng_container_0_Template","scroll","y","time_r7","x","space_r8","space_list","i_r11","HOUR_BLOCKS","Array","fill","idx","DayviewTimelineComponent","blocks","loading","spaces","active_building","switchMap","querySystems","zone_id","limit","catchError","of","data","Space","shareReplay","combineLatest","startPolling","ngOnDestroy","stopPolling","onScroll","requestAnimationFrame","srcElement","scrollLeft","scrollTop","DayviewTimelineComponent_div_4_Template","DayviewTimelineComponent_div_8_Template","DayviewTimelineComponent_dayview_space_12_Template","DayviewTimelineComponent_div_14_Template","DayviewTimelineComponent_mat_progress_bar_15_Template","DayviewTimelineComponent_view_event_details_17_Template","DayViewComponent","links","_settings","route","attrs","ROUTES","path","component","DayViewModule","oAB","cJS","CommonModule","FormsModule","UIModule","SharedSpacesModule","SharedUsersModule","SharedCateringModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/day-view/dayview-topbar.component.ts","./apps/concierge/src/app/day-view/dayview-event.component.ts","./apps/concierge/src/app/day-view/dayview-space.component.ts","./apps/concierge/src/app/day-view/dayview-timeline.component.ts","./apps/concierge/src/app/day-view/day-view.component.ts","./apps/concierge/src/app/day-view/day-view.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BookingUIOptions, EventsStateService } from './events-state.service';\n\n@Component({\n    selector: 'dayview-topbar',\n    template: `\n        <div\n            class=\"flex items-center px-4 h-20 bg-white dark:bg-neutral-700 border-b border-gray-200 dark:border-neutral-500\"\n        >\n            <button\n                btn\n                matRipple\n                new\n                class=\"w-12 xl:w-auto overflow-hidden\"\n                (click)=\"newBooking()\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon\n                        class=\"mr-2\"\n                        [icon]=\"{ class: 'material-icons', content: 'add' }\"\n                    ></app-icon>\n                    <div class=\"hidden xl:block\">New Booking</div>\n                </div>\n            </button>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"type_list\"\n                    (ngModelChange)=\"updateTypes($event)\"\n                    placeholder=\"No Events\"\n                >\n                    <mat-select-trigger>Legend</mat-select-trigger>\n                    <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(ui_options | async)?.show_overflow\"\n                (ngModelChange)=\"updateUIOptions({ show_overflow: $event })\"\n                ><div class=\"text-xs\">Setup / Breakdown</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-0\"></div>\n            <!-- <searchbar class=\"mr-2\"></searchbar> -->\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n                margin-left: 1em;\n            }\n\n            mat-slide-toggle div {\n                width: 5.5em;\n                white-space: initial;\n                line-height: 1.2em;\n            }\n        `,\n    ],\n})\nexport class DayviewTopbarComponent extends AsyncHandler {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly ui_options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setDate(d);\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    /** List of levels for the active building */\n    public readonly updateTypes = (types) =>\n        this._state.setFilters({\n            hide_type: this.types.reduce((list, item) => {\n                !types.includes(item.id) ? list.push(item) : '';\n                return list;\n            }, []),\n        });\n\n    public updateUIOptions(options: BookingUIOptions) {\n        this._state.setUIOptions(options);\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.zones = zones;\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.updateTypes(this.type_list);\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { startOfDay, differenceInMinutes, format, addMinutes } from 'date-fns';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { EventsStateService } from './events-state.service';\n\nconst DAY_IN_MINUTES = 24 * 60;\n\n@Component({\n    selector: 'dayview-event',\n    template: `\n        <div\n            *ngIf=\"(ui_options | async)?.show_overflow\"\n            [class]=\"\n                'overflow-block absolute rounded overflow-hidden w-full ' + type\n            \"\n            [style.top]=\"overflow_top * 100 + '%'\"\n            [style.height]=\"overflow_height * 100 + '%'\"\n        ></div>\n        <div\n            event\n            matRipple\n            [class]=\"\n                'absolute rounded overflow-hidden text-sm border border-gray-200 shadow-sm z-10 hover:z-30 ' +\n                type\n            \"\n            *ngIf=\"event\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n            (click)=\"view(event)\"\n        >\n            <div class=\"px-2 py-1 font-medium\">{{ event.organiser?.name }}</div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 30\">\n                <app-icon class=\"mx-2\">title</app-icon>\n                {{ event.title }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 60\">\n                <app-icon class=\"mx-2\">schedule</app-icon>\n                {{ time }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 90\">\n                <app-icon class=\"mx-2\">people</app-icon>\n                {{ event.attendees.length }} Attendee{{\n                    event.attendees.length === 1 ? '' : 's'\n                }}\n            </div>\n        </div>\n        <div\n            *ngIf=\"event && (ui_options | async)?.show_cleaning\"\n            cleaning\n            class=\"absolute rounded overflow-hidden flex w-full shadow p-2 bg-white z-20 hover:!h-48\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n        >\n            <div\n                [class]=\"\n                    'icon flex items-center justify-center mr-2 text-3xl rounded h-12 w-12 text-pending ' +\n                    event.ext('cleaning_status')\n                \"\n            >\n                <app-icon>{{\n                    event.ext('cleaning_status') === 'done' ? 'done' : 'warning'\n                }}</app-icon>\n            </div>\n            <div class=\"flex-1 w-1/2\">\n                {{\n                    event.ext('cleaning_status') === 'done'\n                        ? 'Finished'\n                        : 'Scheduled to'\n                }}\n                clean at\n                {{\n                    event.ext('cleaning_time') || event.event_end * 1000\n                        | date: 'shortTime'\n                }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [event] {\n                background-color: #ccc;\n                width: 12rem;\n                z-index: 100;\n                transition: box-shadow 200ms;\n            }\n\n            [event]:hover {\n                box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.2),\n                    0 1px 1px 0 rgba(0, 0, 0, 0.14),\n                    0 2px 1px -1px rgba(0, 0, 0, 0.12) !important;\n                cursor: pointer;\n            }\n\n            .overflow-block {\n                opacity: 0.3;\n                width: 12rem;\n            }\n\n            .internal {\n                background-color: #1565c0;\n                color: #fff;\n            }\n\n            .icon {\n                background-color: #f0f0f0;\n            }\n\n            .icon.done {\n                color: #21a453;\n            }\n\n            .external {\n                background-color: #ad1457;\n                color: #fff;\n            }\n\n            .cancelled {\n                background-color: #ccc;\n            }\n        `,\n    ],\n})\nexport class DayviewEventComponent implements OnChanges {\n    /** Event to display */\n    @Input() public event: CalendarEvent;\n    /** Top position for the event */\n    public top = -999;\n    /** Height of the event on the calendar */\n    public height = 0;\n    /** Top position for the event */\n    public overflow_top = -999;\n    /** Height of the event on the calendar */\n    public overflow_height = 0;\n\n    public readonly ui_options = this._state.options;\n\n    public readonly view = (e) => this._state.setEvent(e);\n\n    public get time() {\n        const date = new Date(this.event.date);\n        return (\n            format(date, 'h:mm a') +\n            ' - ' +\n            format(addMinutes(date, this.event.duration), 'h:mm a')\n        );\n    }\n\n    public get type() {\n        return this.event.guests.length\n            ? 'external'\n            : this.event.status === 'declined'\n            ? 'cancelled'\n            : 'internal';\n    }\n\n    constructor(private _state: EventsStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            const start = startOfDay(new Date(this.event.date));\n            const diff = differenceInMinutes(new Date(this.event.date), start);\n            this.top = diff / DAY_IN_MINUTES;\n            this.height = this.event.duration / DAY_IN_MINUTES;\n            this.overflow_top =\n                (diff - this.event.ext('setup')) / DAY_IN_MINUTES;\n            this.overflow_height =\n                (this.event.duration +\n                    this.event.ext('setup') +\n                    this.event.ext('breakdown')) /\n                DAY_IN_MINUTES;\n        }\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'dayview-space',\n    template: `\n        <ng-container *ngIf=\"space\">\n            <dayview-event\n                *ngFor=\"let event of events | async\"\n                [event]=\"event\"\n            ></dayview-event>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class DayviewSpaceComponent extends AsyncHandler implements OnInit {\n    /** Space to display events for */\n    @Input() public space: Space;\n\n    public shown_event: CalendarEvent;\n    /** List of events for the selected space */\n    public readonly events = this._state.filtered.pipe(\n        map((bookings) => {\n            return bookings.filter((bkn) =>\n                bkn.resources.find((space) => this.space.email === space.email)\n            );\n        })\n    );\n\n    constructor(private _state: EventsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('events', this._state.filtered.subscribe());\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\n\nconst HOUR_BLOCKS = new Array(24).fill(0).map((_, idx) => {\n    return (idx % 12 === 0 ? 12 : idx % 12) + (idx >= 12 ? ' PM' : ' AM');\n});\n\n@Component({\n    selector: 'dayview-timeline',\n    template: `\n        <div class=\"absolute inset-0 flex\">\n            <div\n                class=\"time h-full w-24 overflow-hidden bg-blue-100/20 dark:bg-neutral-700 relative\"\n            >\n                <div header class=\"relative h-16 z-50\">\n                    <div\n                        class=\"bg-blue-100/20 dark:bg-neutral-700 absolute top-0 left-0 right-0 bottom-8\"\n                    ></div>\n                </div>\n                <div\n                    *ngFor=\"let time of blocks\"\n                    change-transform\n                    class=\"relative h-16 border-r border-gray-300 dark:border-neutral-500 z-10\"\n                    [style.transform]=\"'translateY(-' + scroll.y + 'px)'\"\n                >\n                    <div\n                        class=\"absolute text-center w-full text-xs top-0 transform -translate-y-1/2 opacity-40\"\n                    >\n                        {{ time }}\n                    </div>\n                    <div\n                        class=\"absolute h-px w-2 top-0 right-0 bg-gray-300 dark:bg-neutral-500\"\n                    ></div>\n                </div>\n                <div\n                    class=\"absolute h-8 w-px top-8 right-0 bg-gray-300 dark:bg-neutral-500\"\n                ></div>\n            </div>\n            <div class=\"h-full flex-1 flex flex-col w-1/2\">\n                <div\n                    header\n                    class=\"flex relative overflow-hidden border-b border-gray-300 dark:border-neutral-500 border-opacity-50 bg-blue-100/20 dark:bg-neutral-700 h-16 w-full\"\n                >\n                    <div\n                        *ngFor=\"let space of space_list | async\"\n                        change-transform\n                        class=\"relative h-16 w-48 min-w-[12rem]\"\n                        [style.transform]=\"'translateX(-' + scroll.x + 'px)'\"\n                    >\n                        <div\n                            bar\n                            class=\"absolute h-8 w-px bottom-0 -left-px bg-gray-300 dark:bg-neutral-500\"\n                        ></div>\n                        <div class=\"name m-2 text-center\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    #scroll_el\n                    content\n                    class=\"relative flex flex-1 overflow-auto\"\n                    (scroll)=\"onScroll($event)\"\n                >\n                    <dayview-space\n                        *ngFor=\"let space of space_list | async\"\n                        [space]=\"space\"\n                        class=\"w-48 min-w-[12rem] h-[96rem] border-r border-gray-300 dark:border-neutral-500\"\n                    ></dayview-space>\n                    <div\n                        *ngFor=\"let time of blocks; let i = index\"\n                        class=\"absolute bg-gray-300 dark:bg-neutral-500 h-px min-w-full left-0\"\n                        [style.width]=\"\n                            (space_list | async)?.length * 12 + 'rem'\n                        \"\n                        [style.top]=\"i * 4 + 'rem'\"\n                    ></div>\n                </div>\n            </div>\n            <mat-progress-bar\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n                class=\"absolute bottom-0 left-0 right-0\"\n            ></mat-progress-bar>\n            <view-event-details\n                *ngIf=\"event | async\"\n                [event]=\"event | async\"\n            ></view-event-details>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [change-transform] {\n                will-change: transform;\n            }\n        `,\n    ],\n})\nexport class DayviewTimelineComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    /** Time blocks to display */\n    public readonly blocks: string[] = HOUR_BLOCKS;\n    /** Current scroll position of the content */\n    public scroll: { x: number; y: number } = { x: 0, y: 0 };\n    /** Whether event data is loading */\n    public readonly loading = this._state.loading;\n    /** Event to show more details about */\n    public readonly event = this._state.event;\n\n    public readonly spaces = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap(({ id }) =>\n            querySystems({ zone_id: id, limit: 1000 }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map(({ data }) =>\n            data.map(\n                (_) =>\n                    new Space({\n                        ..._,\n                        level: this._org.levelWithID(_.zones),\n                    } as any)\n            )\n        ),\n        shareReplay(1)\n    );\n    /** List of spaces to display */\n    public readonly space_list = combineLatest([\n        this.spaces,\n        this._state.zones,\n    ]).pipe(\n        map(\n            ([spaces, zones]) =>\n                spaces.filter(\n                    (space) =>\n                        !zones?.length ||\n                        space.zones.find((z) => zones.includes(z))\n                ) || []\n        )\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventsStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n\n    public onScroll(e) {\n        requestAnimationFrame(\n            () =>\n                (this.scroll = {\n                    x: e.srcElement.scrollLeft,\n                    y: e.srcElement.scrollTop,\n                })\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApplicationLinkInternal, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-dayview]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <dayview-topbar></dayview-topbar>\n                <dayview-timeline></dayview-timeline>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: #fff;\n            }\n        `,\n    ],\n})\nexport class DayViewComponent implements OnInit {\n    public get links(): ApplicationLinkInternal[] {\n        return this._settings.get('app.general.menu') || [];\n    }\n\n    constructor(private _settings: SettingsService, private _router: Router) {}\n\n    public ngOnInit() {\n        if (!this.links.find((_) => _.route.includes('day-view'))) {\n            this._router.navigate([`/${this.links[0].route}`]);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayviewTopbarComponent } from './dayview-topbar.component';\nimport { DayviewTimelineComponent } from './dayview-timeline.component';\nimport { DayviewSpaceComponent } from './dayview-space.component';\nimport { DayviewEventComponent } from './dayview-event.component';\n\nimport { BookingModalComponent } from './booking-modal.component';\nimport { EventFormComponent } from './event-form.component';\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\nimport { SharedCateringModule } from '@placeos/catering';\n\nconst ROUTES: Route[] = [{ path: '', component: DayViewComponent }];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayviewTopbarComponent,\n        DayviewTimelineComponent,\n        DayviewSpaceComponent,\n        DayviewEventComponent,\n\n        BookingModalComponent,\n        EventFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        SharedCateringModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DayViewModule {}\n"],"x_google_ignoreList":[]}