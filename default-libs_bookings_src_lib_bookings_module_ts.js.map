{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","time_format","ctx_r5","type","ctx_r6","location","_r9","ctx_r8","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","_c0","_c1","ctx_r1","id","title","is_done","status","period","_r2","description","asset_id","for_current_user","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","emit","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","ctx_r9","checked_in","_r13","ctx_r12","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","_r10","BookingDetailsModalComponent_div_14_button_1_Template","ctx_r2","auto_checkin","state","_r5","ctx_r14","item_r15","BookingDetailsModalComponent_ng_container_40_div_5_Template","ctx_r3","event","assets","length","_c6","map_id","_c7","_r17","ctx_r16","_r19","ctx_r18","building","buildings","find","bld","includes","is_in_progress","ts","booking_start","booking_end","all_day","_booking","hide_map","content","MapPinComponent","has_assets","linked_bookings","_","booking_type","_this","_asyncToGenerator","checkinBooking","toPromise","catch","notifyError","notifySuccess","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","BookingDetailsModalComponent_ng_container_40_Template","BookingDetailsModalComponent_interactive_map_42_Template","BookingDetailsModalComponent_button_53_Template","BookingDetailsModalComponent_button_54_Template","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","restrictions","showMetadata","catchError","details","available_resources","merge","timer","filter","startOfDay","valueOf","queryBookings","period_start","getUnixTime","period_end","zone_id","bookings","user_name","asset","items","rest","groups","some","grp","bookable","every","zone","parent_id","bkn","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","user","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","set","booking_asset","result","saveBooking","user_id","department","booking_id","error","updateAssetRequestsForResource","host","booked_by_email","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","Promise","all","idx","unavailable","group_name","i","organisation","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","listChildMetadata","flatten","metadata","d","lockers","bank_id","map_url","count","nearby_resources","findNearbyFeature","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_33__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_3__","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","$event","_r11","ctx_r10","ctx_r7","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","$implicit","selected_features","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","_r12","ctx_r11","changeResources","ctx_r13","removeResource","toggleFavourite","_r4","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r1","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","ngOnChanges","changes","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_3","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r2","_r6","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_4_0","tmp_5_0","_r7","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","_r16","ctx_r15","DeskFiltersComponent_div_12_mat_option_6_Template","tmp_0_0","levels","feat_r18","_r20","ctx_r19","tmp_1_0","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","ctx_r21","allow_time_changes","allow_all_day","end_date","addDays","use_24hr","_bsheet_ref","can_close","active_buildings","active_levels","all_day_time","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_5__","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","tmp_2_0","tmp_3_0","tmp_11_0","tmp_20_0","tmp_22_0","desk_r7","_r14","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_r3","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r1","DeskMapComponent","is_displayed","zoom","center","x","y","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","setZoom","new_zoom","max","min","resetMap","_angular_core__WEBPACK_IMPORTED_MODULE_6__","DeskMapComponent_mat_option_3_Template","displayed","selected_ids","_r8","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","ctx_r20","setVisitor","company","item_r22","_r24","ctx_r23","_r26","ctx_r25","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","sent","InviteVisitorFormComponent","_service","done","last_count","visitors","initFormZone","setValidators","Validators","split","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","_angular_core__WEBPACK_IMPORTED_MODULE_8__","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","zone_ids","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","max_duration","lvl","tags","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","available_spaces","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","n","c","g","h","v","m","u","p","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","init","tableWrite","canvasWrite","generateQRCode","code","toImage","src","prototype","getContext","lineWidth","round","canvas","width","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","console","log","Error","Image","toDataURL","ExploreBookQrComponent","qr_code","origin","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","can_book_for_others","controls","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","organiser","app_name","navigate","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r0","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","pos","getBoundingClientRect","body","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","free","pending","reserved","busy","unknown","ExploreSpacesService","_bookings","_statuses","_restrictions","_bind","unsubWith","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","_updateHoverElements","bookSpace","hidden","rulesForSpace","booking_rules","openEventLinkModal","CalendarEvent","clearTimeout","_updateStatus","style_map","opacity","setStyles","Space","setFeatures","priority","setActions","_angular_core__WEBPACK_IMPORTED_MODULE_21__"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-2 rounded-2xl text-white px-3 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-pending]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'pending'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    ResourceRestriction,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<ResourceRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const restriction_list = restrictions.filter(\n                                (_) =>\n                                    _.items?.includes(asset.id) ||\n                                    (_ as any).assets?.includes(asset.id)\n                            );\n                            const is_restricted = restriction_list.find(\n                                (rest) =>\n                                    (start >= rest.start && start < rest.end) ||\n                                    (end <= rest.end && end > rest.start)\n                            );\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        if (value.all_day) {\n            value.date = set(value.date, { hours: 6, minutes: 0 }).valueOf();\n            value.duration = 12 * 60;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [force_time]=\"\n                                form.value.all_day ? all_day_time : ''\n                            \"\n                            [use_24hr]=\"use_24hr\"\n                            [disabled]=\"form.value.all_day\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n    public readonly all_day_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    ResourceRestriction,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _restrictions: Observable<ResourceRestriction[]> =\n        this._org.active_building.pipe(\n            debounceTime(50),\n            filter((_) => !!_),\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `desk_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space, force: boolean = false) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        const restrictions =\n            (await this._restrictions.pipe(take(1)).toPromise()) || [];\n        for (const space of spaces) {\n            const restriction_list = restrictions.filter((_) =>\n                _.items?.includes(space.id)\n            );\n            const is_restricted = restriction_list.find(\n                ({ start, end }) => Date.now() >= start && Date.now() < end\n            );\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n"],"x_google_ignoreList":[]}