{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"yVAeYA,MAAA,YAA2BA,MAAA,GAAgBA,+BAAhBA,MAAA,GAAAA,MAAA,GAAAC,EAAAC,IAAA,mCAD/BF,MAAA,UACIA,MAAA,EAAAG,EAAA,cACAH,MAAA,mBACAA,MAAA,YAA2BA,MAAA,mBAAiCA,gCAFrDA,MAAA,GAAAA,MAAA,OAAAI,EAAAC,UACPL,MAAA,GAAAA,MAAA,IAAAA,MAAA,UAAAI,EAAAE,QAAA,KAAAF,EAAAE,QAAAC,KAAAH,EAAAI,aAAA,KAC2BR,MAAA,GAAAA,MAAA,IAAAA,MAAA,UAAAI,EAAAE,QAAA,KAAAF,EAAAE,QAAAC,KAAA,oCAqBfP,MAAA,cAAkDA,MAAA,GAEhDA,+BAFgDA,MAAA,GAAAA,MAAAS,EAAAC,gCAOtDV,MAAA,WAAAA,CAAqD,cACvCA,MAAA,WAAKA,QACfA,MAAA,YAA2BA,MAAA,GAAcA,iCAAdA,MAAA,GAAAA,MAAAW,EAAAC,iCAQnCZ,MAAA,YAIIA,MAAA,iBACJA,mHAzCRA,MAAA,SAKIA,MAAA,mBAAAA,MAAAa,GAAA,MAAAC,EAAAd,QAAA,OAASA,MAAAc,EAAAC,cAAa,GAGtBf,MAAA,UAAAA,CAEC,UAC4BA,MAAA,GAAoBA,QAC7CA,MAAA,WAAAA,CAA4B,oBACOA,MAAA,GAAYA,UAE/CA,MAAA,WAAAA,CAEC,YAEOA,MAAA,EAAAgB,EAAA,mBAGAhB,MAAA,aACIA,MAAA,IACJA,UAEJA,MAAA,GAAAiB,EAAA,cAIJjB,QACAA,MAAA,kBAGIA,MAAA,sBACJA,QACAA,MAAA,GAAAkB,EAAA,cAMJlB,6CAvCAA,MAAA,aAAAA,MAAA,GAAAmB,GAAAnB,CAAqB,cAAAA,MAAA,GAAAoB,EAAA,MAAAC,EAAAf,QAAA,KAAAe,EAAAf,QAAAgB,KAQQtB,MAAA,GAAAA,MAAA,MAAAqB,EAAAf,QAAA,KAAAe,EAAAf,QAAAiB,OAERvB,MAAA,GAAAA,MAAA,SAAAqB,EAAAG,QAAkBxB,MAAA,GAAAA,MAAAqB,EAAAI,QAMhBzB,MAAA,GAAAA,MAAA,gBAAAqB,EAAAX,KAAAV,CAAuB,WAAA0B,GAI9B1B,MAAA,GAAAA,MAAA,WAAAqB,EAAAf,QAAA,KAAAe,EAAAf,QAAAqB,eAAA,MAAAN,EAAAf,QAAA,KAAAe,EAAAf,QAAAsB,UAAA,KAG6B5B,MAAA,GAAAA,MAAA,OAAAqB,EAAAT,UAYpCZ,MAAA,GAAAA,MAAA,QAAAqB,EAAAQ,wCAOT7B,MAAA,YAaL,IAAM8B,EAAqB,MAA5B,MAAOA,UAA6BC,IAOtC,oBAAWF,GACP,OACIG,KAAK1B,SAAS2B,WAAWC,iBAAW,EACpCC,SAAeC,MAAMF,aAE7B,CAEA,eAAW1B,GACP,OAAOwB,KAAKK,UAAU7B,WAC1B,CAEA,UAAWgB,GACP,OAAIQ,KAAK1B,SAASgC,QAAgB,UACL,aAAzBN,KAAK1B,SAASkB,OAA8B,UACnB,aAAzBQ,KAAK1B,SAASkB,OAA8B,QACC,SAErD,CAEAe,YACYC,EACAC,EACAC,EACAL,GAERM,QALQX,KAAAQ,UACAR,KAAAS,SACAT,KAAAU,OACAV,KAAAK,YA5BIL,KAAA3B,UAAoB,EACnB2B,KAAAY,KAAO,IAAIC,MACXb,KAAAc,OAAS,IAAID,MACbb,KAAAe,IAAM,IAAIF,KA4B3B,CAEOG,WACHhB,KAAKiB,aACD,cACAjB,KAAKS,OAAOS,cAAcC,UAAWC,GACjCA,EAAOC,IAAI,YACXrB,KAAK1B,SAASgB,KAAO8B,EAAOE,IAAI,SAC1BtB,KAAKjB,cACL,IAGlB,CAEA,QAAWL,GACP,MAA2B,SAAvBsB,KAAK1B,SAASI,KAAwB,OACf,YAAvBsB,KAAK1B,SAASI,KAA2B,YACtC,MACX,CAEA,OAAWR,GACP,MAAMK,EAAOyB,KAAK1B,SAASC,MAAQgD,KAAKC,MAExC,MAAO,MADUC,KAAUF,KAAKC,MAAOjD,GAClB,WAAUmD,KAAOnD,EAAM,SAChD,CAEA,YAAWK,GACP,MAAM+C,EAAQ3B,KAAKU,KAAKkB,YAAY5B,KAAK1B,SAASuD,OAAS,IAC3D,MAAO,GAAGF,GAAOG,cAAgBH,GAAOI,MAAQ,IACpD,CAEA,UAAWtC,GACP,GAAIO,KAAK1B,SAAS0D,WAAY,MAAO,UACrC,MAAMC,EAAQjC,KAAK1B,SAASC,MAAQgD,KAAKC,MACnCU,EAAWlC,KAAK1B,SAAS4D,UAAY,GACrCnB,KAAMoB,KAAWF,EAAOC,GACxBE,KAAMC,KAAe,CACvBC,MAAOC,KAAKC,MAAMN,EAAW,IAC7BO,QAASP,EAAW,KAEnBQ,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,MAAO,MAAGhB,KAAOO,EAAOjC,KAAKxB,mBAAY,EAAMkD,KAC3CX,EACAf,KAAKxB,iBACH4D,IACV,CAEOrD,cACEiB,KAAK1B,SACV0B,KAAK2C,QAAQ,OAAQ,KACjB,MAAMC,EAAM5C,KAAKQ,QAAQqC,KAAKC,IAA8B,CACxDC,KAAM/C,KAAK1B,UAEf0B,KAAKiB,aACD,OACA2B,EAAII,kBAAkBpC,KAAKO,UAAU,IAAMnB,KAAKY,KAAKqC,SAEzDjD,KAAKiB,aACD,SACA2B,EAAII,kBAAkBlC,OAAOK,UAAU,IAAMnB,KAAKc,OAAOmC,SAE7DjD,KAAKiB,aACD,MACA2B,EAAII,kBAAkBjC,IAAII,UAAU,IAAMnB,KAAKe,IAAIkC,QAAO,EAGtE,CAACC,SAAAlD,KAAA,mBAAAmD,iBApGQrD,GAAoB9B,MAAAoF,MAAApF,MAAAqF,MAAArF,MAAAsF,KAAAtF,MAAAuF,MAAA,EAAAL,SAAAlD,KAAA,UAAAwD,EAAAC,IAAA,MAApB3D,EAAoB4D,UAAA,mBAAAC,OAAA,CAAArF,QAAA,UAAAD,SAAA,YAAAuF,QAAA,CAAAhD,KAAA,OAAAE,OAAA,SAAAC,IAAA,OAAA8C,SAAA,CAAA7F,OAAA8F,MAAA,EAAAC,KAAA,EAAAC,OAAA,qkCAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/DzBlG,MAAA,EAAAoG,EAAA,YAKApG,MAAA,EAAAqG,EAAA,aA4CArG,MAAA,EAAAsG,EAAA,yBAAAtG,cAjDoCA,MAAA,OAAAmG,EAAA7F,SAW/BN,MAAA,GAAAA,MAAA,OAAAmG,EAAA7F,4MAoDAwB,CAAqB,uQCzDlB9B,MAAA,qCAIAA,MAAA,YAIIA,MAAA,uBAIJA,8BAHQA,MAAA,GAAAA,MAAA,eAAAqB,EAAAf,SAAA,MAAAe,EAAAf,QAAAiG,eAAA,KAAAlF,EAAAf,QAAAiG,eAAAC,kCAqCIxG,MAAA,WAAAA,CAGC,cACaA,MAAA,GAERA,QACFA,MAAA,YACIA,MAAA,GAKJA,iCATUA,MAAA,GAAAA,MAAAyG,EAAAnG,QAAAoG,WAAA,qBAIN1G,MAAA,GAAAA,MAAA,IAAAyG,EAAAnG,QAAAoG,WAAA,mDAQJ1G,MAAA,yBAEIA,MAAA,uDAjCZA,MAAA,eAaIA,MAAA,mBAAAA,MAAA2G,GAAA,MAAAC,EAAA5G,MAAA,UAASA,MAAA4G,EAAAC,kBAAiB,GAE1B7G,MAAA,EAAA8G,EAAA,cAeA9G,MAAA,EAAA+G,EAAA,0BAAA/G,OAMJA,4CAhCIA,MAAA,aAAAc,EAAAR,QAAAoG,YACA1G,MAAA,WAAAc,EAAAkG,aAYKhH,MAAA,GAAAA,MAAA,QAAAc,EAAAkG,YAAAhH,CAAoB,WAAAiH,6BAtBjCjH,MAAA,YAKIA,MAAA,EAAAkH,EAAA,iBAqCAlH,MAAA,cAAAA,CAKC,cACaA,MAAA,gBAAUA,8CArCnBA,MAAA,GAAAA,MAAA,SAAAmH,EAAA7G,QAAA8G,gBAAAD,EAAAE,aAAAF,EAAAG,cAAA,aAAAH,EAAA7G,QAAAiH,OAAA,gBAAAJ,EAAA7G,QAAAiH,QAkCDvH,MAAA,GAAAA,MAAA,oBAAAwH,6BAkDAxH,MAAA,WAAAA,CAiBC,cACaA,MAAA,GAMRA,QACFA,MAAA,YACIA,MAAA,GACJA,+CAxBAA,MAAA,0BAAAyH,EAAAjG,OAAAkG,EAAApG,IAAAtB,CAEC,wBAAAyH,EAAAjG,OAAAkG,EAAApG,IAFDtB,CAEC,0BAAAyH,EAAAjG,OAAAkG,EAAApG,KAAA,aAAAmG,EAAAjG,OAAAkG,EAAApG,KAaStB,MAAA,GAAAA,MAAA,aAAAyH,EAAAjG,OAAAkG,EAAApG,IAAA,oBAAAmG,EAAAjG,OAAAkG,EAAApG,IAAA,mBAQNtB,MAAA,GAAAA,MAAA,IAAA0H,EAAA3D,KAAA,4DApCpB/D,MAAA,GACIA,MAAA,WAAAA,CAEC,WACGA,MAAA,MAIAA,QACAA,MAAA,YACIA,MAAA,EAAA2H,EAAA,cA6BJ3H,UAERA,8BAjCQA,MAAA,GAAAA,OAAA,MAAA4H,EAAAC,MAAAtB,eAAAuB,OAAA,KAAAF,EAAAC,MAAAtB,eAAAuB,OAAAC,SAAA,GAAA/H,MAAA,GAiBrBA,MAAA,GAAAA,MAAA,UAAA4H,EAAAC,MAAAtB,eAAAuB,QAAA9H,MAAA,EAAAgI,wFAsBiBhI,MAAA,6CAGIA,MAAA,YAAAC,EAAA0D,MAAA,KAAA1D,EAAA0D,MAAAsE,OAAAjI,CAAqB,WAAAC,EAAA4F,SAArB7F,CAAqB,UAAAA,MAAA,EAAAkI,6CAyBjClI,MAAA,eAIIA,MAAA,mBAAAA,MAAAmI,GAAA,MAAAC,EAAApI,QAAA,OAASA,MAAAoI,EAAAtF,OAAAmC,OAAa,GAEtBjF,MAAA,cAAUA,MAAA,YAAMA,QAChBA,MAAA,SAAAA,MAAA,MAAwBA,mDAE5BA,MAAA,eAIIA,MAAA,mBAAAA,MAAAqI,GAAA,MAAAC,EAAAtI,QAAA,OAASA,MAAAsI,EAAAvF,IAAAkC,OAAU,GAEnBjF,MAAA,cAAUA,MAAA,YAAMA,QAChBA,MAAA,SAAAA,MAAA,MAAqBA,WAM9B,IAAM8E,EAA4B,MAAnC,MAAOA,EAkBT,SAAWnB,GACP,OAAO3B,KAAKU,KAAKkB,YAAY5B,KAAK1B,SAASuD,OAAS,GACxD,CAEA,YAAW0E,GACP,OAAOvG,KAAKU,KAAK8F,UAAUC,KAAMC,IAC5B1G,KAAK1B,SAASuD,OAAS,IAAI8E,SAASD,EAAIpH,IAEjD,CAEA,gBAAWgG,GACP,OAAOtF,KAAKK,UAAUiB,IAClB,OAAOtB,KAAK1B,SAASI,MAAQ,0BAErC,CAEA,kBAAWkI,GACP,MAAMC,EAAKtF,KAAKC,MACVS,EAAsC,IAA9BjC,KAAK1B,SAASwI,cACtB/F,EAAkC,IAA5Bf,KAAK1B,SAASyI,YAC1B,OAAI/G,KAAK1B,SAAS0I,QAAgB/E,GAAS4E,EACpC5E,GAAS4E,GAAMA,GAAM9F,CAChC,CAEA,eAAWvC,GACP,OAAOwB,KAAKK,UAAU7B,WAC1B,CAEA,kBAAWyI,GACP,OAAIjH,KAAK1B,SAASgC,QAAgB,UACL,aAAzBN,KAAK1B,SAASkB,OAA8B,UACnB,aAAzBQ,KAAK1B,SAASkB,OAA8B,QACC,SAErD,CAEAe,YACqC2G,EACzB7G,EACAK,EACAF,GAHyBR,KAAAkH,WACzBlH,KAAAK,YACAL,KAAAU,OACAV,KAAAQ,UAzDKR,KAAAY,KAAO,IAAIC,MACXb,KAAAc,OAAS,IAAID,MACbb,KAAAe,IAAM,IAAIF,MACXb,KAAA1B,QAAU0B,KAAKkH,SACxBlH,KAAAmH,UAAW,EACXnH,KAAAqF,aAAc,EACdrF,KAAAgF,aAAc,EACLhF,KAAA6D,SAAW,CACvB,CACIjF,SAAUoB,KAAK1B,SAASsB,SACxBwH,QAASC,MAGDrH,KAAAsH,aAAetH,KAAK1B,SAASiJ,iBAAiBd,KACzDe,GAAyB,kBAAnBA,EAAEC,aA4CV,CAEH,UAAWhI,GACP,GAAIO,KAAK1B,SAAS0D,WAAY,MAAO,UACrC,MAAMC,EAAQjC,KAAK1B,SAASC,MAAQgD,KAAKC,MACnCU,EAAWlC,KAAK1B,SAAS4D,UAAY,GACrCnB,KAAMoB,KAAWF,EAAOC,GACxBE,KAAMC,KAAe,CACvBC,MAAOC,KAAKC,MAAMN,EAAW,IAC7BO,QAASP,EAAW,KAEnBQ,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,MAAO,MAAGhB,KAAOO,EAAOjC,KAAKxB,mBAAY,EAAMkD,KAC3CX,EACAf,KAAKxB,iBACH4D,IACV,CAEayC,kBAAe,IAAA6C,EAAA1H,KAAA,SAAA2H,KAAA,YACxBD,EAAK1C,aAAc,QACnB,EAAM4C,MAAeF,EAAKpJ,QAAQgB,IAAKoI,EAAKpJ,QAAQoG,YAC/CmD,YACAC,MAAON,IACJO,cAAY,6BACZL,EAAK1C,aAAc,EACbwC,IAEbE,EAAKpJ,QAAgBoG,YAAcgD,EAAKpJ,QAAQoG,WACjDgD,EAAKrC,aAAeqC,EAAKpJ,QAAQoG,cACjCsD,MACI,iBACIN,EAAKpJ,QAAQoG,WAAa,aAAe,kBAGjDgD,EAAK1C,aAAc,CAAM,EAhBD,EAiB5B,CAEOxF,OAAOF,GACV,MAAMhB,EAAU0B,KAAK1B,QAAQiJ,gBAAgBd,KACxCe,GAAMA,EAAE5H,WAAaN,GAE1B,OAAIhB,EAAQkB,OAAelB,EAAQkB,OAC5BlB,EACDA,EAAQ2J,SACJ,WACA3J,EAAQ4J,SACR,WACA,UACJ,SACV,CAEOC,eACHnI,KAAKmH,UAAW,EACJnH,KAAKQ,QAAQqC,KAAKuF,IAAyB,CACnDC,SAAU,OACVC,UAAW,OACXvF,KAAM,CACFwF,KAAM,CACFjJ,GAAIU,KAAKkH,SAAStH,SAClBmC,KAAM/B,KAAKkH,SAASsB,WACpBvC,OACIjG,KAAKkH,SAAS3C,eAAe0B,QAC7BjG,KAAK1B,QAAQsB,SACjB+B,MAAO3B,KAAK2B,UAIpB8G,cAActH,UAAU,IAAOnB,KAAKmH,UAAW,EACvD,CAACjE,SAAAlD,KAAA,mBAAAmD,iBAhIQL,GAA4B9E,MAuDzB0K,MAAe1K,MAAAoF,MAAApF,MAAAqF,KAAArF,MAAAsF,MAAA,EAAAJ,SAAAlD,KAAA,UAAA2I,EAAAlF,IAAA,MAvDlBX,EAA4BY,UAAA,4BAAAE,QAAA,CAAAhD,KAAA,OAAAE,OAAA,SAAAC,IAAA,OAAA+C,MAAA,GAAAC,KAAA,GAAAC,OAAA,eAAA4E,mBA7H+BC,sFAqG9CA,yFArE6CA,oFACnC,qCA6EVA,2FASAA,27FAhNlB7K,MAAA,UAAAA,CAEC,WAIOA,MAAA,EAAA8K,EAAA,aAIA9K,MAAA,EAAA+K,EAAA,aASA/K,MAAA,UAKIA,MAAA,GACJA,QACAA,MAAA,UAAAA,CAAyD,UAAzDA,CAAyD,mBAG7CA,MAAA,GACJA,UAEJA,MAAA,GAAAgL,EAAA,aAmDJhL,UAEJA,MAAA,WAAAA,CAAwC,YAAxCA,CAAwC,YAIhCA,MAAA,OAEAA,QACAA,MAAA,YAAAA,CAA8C,eAChCA,MAAA,YAAKA,QACfA,MAAA,UAAKA,MAAA,qBAA4CA,UAErDA,MAAA,YAAAA,CAA8C,eAChCA,MAAA,eAAQA,QAClBA,MAAA,UAAKA,MAAA,IAAYA,UAErBA,MAAA,YAAAA,CAA8C,eAChCA,MAAA,UAAGA,QACbA,MAAA,UACIA,MAAA,IAEJA,UAEJA,MAAA,YAAAA,CAA8C,eAChCA,MAAA,YAAKA,QACfA,MAAA,UACIA,MAAA,IAIJA,YAGRA,MAAA,GAAAiL,EAAA,uBA0CAjL,MAAA,gBAGIA,MAAA,0BAASmG,EAAAgE,cAAc,GAEvBnK,MAAA,GAAAkL,EAAA,0BAOJlL,UAEJA,MAAA,eAAAA,CAKC,eACaA,MAAA,YAAKA,YAGvBA,MAAA,oBAAAA,CAA6C,gBAKrCA,MAAA,0BAASmG,EAAAvD,KAAAqC,MAAW,GAEpBjF,MAAA,eAAUA,MAAA,WAAIA,QACdA,MAAA,UAAAA,MAAA,OAAsBA,UAE1BA,MAAA,GAAAmL,EAAA,iBASAnL,MAAA,GAAAoL,EAAA,iBASJpL,eA1MaA,MAAA,GAAAA,MAAA,eAAAmG,EAAA7F,SAAA,MAAA6F,EAAA7F,QAAAiG,gBAAA,MAAAJ,EAAA7F,QAAAiG,eAAAC,QAAAL,EAAA7F,QAAAiG,eAAAC,OAAAuB,SAIA/H,MAAA,GAAAA,MAAA,aAAAmG,EAAA7F,SAAA,MAAA6F,EAAA7F,QAAAiG,gBAAA,MAAAJ,EAAA7F,QAAAiG,eAAAC,OAAA,KAAAL,EAAA7F,QAAAiG,eAAAC,OAAAuB,QAUD/H,MAAA,GAAAA,MAAA,eAAAmG,EAAA7F,SAAA,MAAA6F,EAAA7F,QAAAiG,gBAAAJ,EAAA7F,QAAAiG,eAAAC,SAEAxG,MAAA,GAAAA,MAAA,IAAAmG,EAAA7F,QAAAiB,MAAA,KAIiBvB,MAAA,GAAAA,MAAA,SAAAmG,EAAA8C,gBACTjJ,MAAA,GAAAA,MAAA,IAAAmG,EAAA1E,OAAA,KAMHzB,MAAA,GAAAA,MAAA,QAAAmG,EAAA7F,QAAAgC,SA2DItC,MAAA,GAAAA,YAAA,MAAAmG,EAAA7F,QAAAC,KAAA,oBAIAP,MAAA,GAAAA,MAAAmG,EAAA1E,QAKDzB,MAAA,GAAAA,MAAA,WAAAmG,EAAAxC,MAAA,KAAAwC,EAAAxC,MAAAG,gBAAA,MAAAqC,EAAAxC,MAAA,KAAAwC,EAAAxC,MAAAI,MAAA,KAAAoC,EAAA7F,QAAAkK,YAAArE,EAAA7F,QAAAsB,SAAA,KAOA5B,MAAA,GAAAA,MAAA,WAAAmG,EAAAoC,SAAA,KAAApC,EAAAoC,SAAAzE,gBAAA,MAAAqC,EAAAoC,SAAA,KAAApC,EAAAoC,SAAAxE,MAAA,UAAAoC,EAAAoC,UAAApC,EAAAoC,SAAA8C,QAAA,KAAAlF,EAAAoC,SAAA8C,QAAA,QAOGrL,MAAA,GAAAA,MAAA,OAAAmG,EAAAmD,YAgDNtJ,MAAA,GAAAA,MAAA,QAAAmG,EAAAgD,UA6BRnJ,MAAA,IAAAA,MAAA,QAAAmG,EAAAyC,gBASA5I,MAAA,GAAAA,MAAA,OAAAmG,EAAAyC,uGAWJ9D,CAA4B,6XC1KzC,MAAMwG,EAAgB,CAAC,OAAQ,WAkCxB,IAAMC,EAAmB,MAA1B,MAAOA,UAA2BxJ,KAqLpC,QAAWyJ,GACP,OAAOxJ,KAAKyJ,MAAMC,UACtB,CAEA,WAAWpL,GACP,OAAO0B,KAAKkH,SAASwC,UACzB,CAEOC,iBAAiBrK,GACpB,OAAOU,KAAK4J,cAActK,EAC9B,CAEOuK,QACHvL,EAAmB,IAAIwL,IAAQ,CAC3B9C,QAAShH,KAAKK,UAAUiB,IAAI,mCAGhCtB,KAAK+J,KAAKC,QACVhK,KAAK+J,KAAKE,cACNC,OACI,IACO5L,KACAA,EAAQiG,gBAEf,CAAC,UAAM4F,EAAW,MAG1BnK,KAAKiB,aACD,cACAjB,KAAK+J,KAAKK,aAAajJ,UAAU,KAC7B,MAAQ5C,OAAM2D,YAAalC,KAAK+J,KAAKM,cACrCrK,KAAKsK,QAAQC,WAAW,CAAEhM,OAAM2D,aAChClC,KAAKwK,WAAS,IAGtBxK,KAAK2C,QAAQ,OAAQ,KACjB3C,KAAK+J,KAAKE,WAAW,CACjB1L,KAAMD,EAAQC,KACd2D,SAAU5D,EAAQ4D,UACrB,GAELlC,KAAKkH,SAASuD,KAAK,IAAIX,IAAQxL,IAC/B0B,KAAK0K,SAASD,KAAK,CAAE/L,KAAMsB,KAAK0K,SAAShB,WAAWhL,MACxD,CAEA6B,YACYoK,EACAtK,EACAK,EACAF,EACAoK,EACAN,GAER3J,QAPQX,KAAA2K,UACA3K,KAAAK,YACAL,KAAAU,OACAV,KAAAQ,UACAR,KAAA4K,YACA5K,KAAAsK,UAvOJtK,KAAAyJ,MAAQ,IAAIoB,IAAiC,QAC7C7K,KAAA0K,SAAW,IAAIG,IAAoC,CACvDnM,KAAM,SAEFsB,KAAAkH,SAAW,IAAI2D,IAAyB,MACxC7K,KAAA4J,cAAwC,GACxC5J,KAAA8K,SAAW,IAAID,IAAwB,IAExC7K,KAAA+K,aAAwB,IAAIjB,IAC/BkB,KAAKC,MACDC,eAAeC,QAAQ,gCAAkC,OAGjDnL,KAAAoL,QAAUpL,KAAK8K,SAASO,eACxBrL,KAAAsL,QAAUtL,KAAK0K,SAASa,QAAKC,KAAY,IACzCxL,KAAA+J,QAAO0B,QAEPzL,KAAA0L,aAAwCC,MAAc,CAClE3L,KAAKU,KAAKkL,gBACV5L,KAAKsL,QAAQC,QAAKM,KAAwB,WAC3CN,QACCO,KAAa,MAAG,EAChBC,KAAU,EAAErF,GAAOhI,aACf,IAAKgI,EAAK,SAAOsF,MAAG,IACpB,OAAQtN,IACJ,IAAK,OACD,OAAAsB,KAAK8K,SAASL,KAAK,oBACZzK,KAAKiM,iBAAiB,SACjC,IAAK,UACD,OAAAjM,KAAK8K,SAASL,KAAK,6BACZzK,KAAKiM,iBAAiB,kBACjC,IAAK,SACD,OAAAjM,KAAK8K,SAASL,KAAK,sBACZzK,KAAKiM,iBAAiB,WAErC,SAAOD,MAAG,GAAE,IACf,EACDE,KAAI,IAAMlM,KAAK8K,SAASL,KAAK,MAAG,EAChCe,KAAY,IAGAxL,KAAA6D,SAAiC7D,KAAK0L,UAAUH,QAC5DY,KAAKC,IACD,MAAMC,GAAiB,GACvB,UAAaxI,eAAcuI,EACvBvI,cAAoByI,OACdzI,GAAS0I,QAAS/E,IAAM6E,GAAKG,KAAKhF,KAG5C,SAAOiF,MAAOJ,IAAMK,KAAK,CAACC,GAAGC,KAAMD,GAAEE,cAAcD,IAAE,IACxD,EACDpB,KAAY,IAGAxL,KAAA8M,cACZ9M,KAAKsL,QAAQC,QACTQ,KAAU,EAAGrN,WAAI,EACNqO,OACH/M,KAAKU,KAAK6F,SAASjH,GACnB,GAAGZ,mBACL6M,QAAKyB,KAAW,OAAMhB,MAAG,CAAEiB,QAAS,SACzC,EACDd,KAAK3E,GAAOA,GAAGyF,mBAAmBX,MAAQ9E,EAAEyF,QAAU,KAAG,EACzDzB,KAAY,IAGJxL,KAAAkN,uBAAsBvB,MAAc,CAChD3L,KAAKsL,QACLtL,KAAK0L,UACL1L,KAAK8M,iBACLK,KAAMnN,KAAK+J,KAAKzI,IAAI,QAAQ8I,gBAAcgD,KAAM,OAAK,EACrDD,KAAMnN,KAAK+J,KAAKzI,IAAI,YAAY8I,gBAAcgD,KAAM,QACrD7B,QACC8B,KACI,IACIrN,KAAK+J,KAAKM,cAAc9L,KAAO,GAC/ByB,KAAK+J,KAAKM,cAAcnI,SAAW,IAAC,EAE5C4J,KAAa,MAAG,EAChBI,KAAI,GAAIxN,WACJsB,KAAK8K,SAASL,KAAK,YAAY/L,uBAAuB,EAE1DqN,KAAU,EAAET,EAASI,GAAW4B,OAC5B,IAAMtG,WAASzI,QAAM2D,YAAUqL,SAASvN,KAAK+J,KAAKM,cAClD,OAAIrD,KACAzI,MAAOiP,KAAWjP,IAAMkP,UACxBvL,GAAW,OAAU,EAElBwL,MAAc,CACjBC,gBAAcC,KAAYrP,IAC1BsP,cAAYD,QAAYzL,KAAW5D,GAAM2D,KACzCxD,KAAM4M,EAAQ5M,KACdmD,MAAOyJ,EAAQwC,UAChBvC,QACCY,KACK4B,KACG,MAAM9L,GAAQjC,KAAK+J,KAAKM,cAAc9L,KAKtC,OAJMwC,EAAMoB,KACRF,GACAjC,KAAK+J,KAAKM,cAAcnI,UAC1BuL,UACFzN,KAAK4J,cAAgB,GACrBmE,GAASxB,QACJ/E,IACIxH,KAAK4J,cAAcpC,GAAE5H,UAAY4H,GAAEwG,WAE1BtC,GAAU2B,OAAQY,MAW5B,EAVkBC,MAClB,CACI3P,QACA2D,YACAkK,SAAU6B,GACVE,KAAMZ,OAAQpN,SAElBmN,IACFc,UAGIH,GAAMI,QAAQtI,QACZkI,GAAMI,OAAOC,KAAMC,OACfpO,QAAckO,OAAO1H,SAAS4H,QAEnB,IAAnBN,GAAMO,YACJlD,EAAQzH,UACNyH,EAAQzH,UAAU4K,MAAOjH,IACrByG,GAAMpK,SAAS8C,SAASa,SAE9B8D,EAAQwC,SACNxC,EAAQwC,UAAYG,GAAMS,MAAMpP,IAChCgM,EAAQwC,UACJG,GAAMS,MAAMC,aACnBZ,GAAStH,KACLmI,IACGA,GAAIhP,WAAaqO,GAAM3O,IACR,aAAfsP,GAAIpP,QAGnB,GAEL,EACAwN,KAAYxF,OAAMwE,MAAG,MACxB,IAER,EACDE,KAAK1E,GAAMxH,KAAK8K,SAASL,KAAK,MAAG,EACjCe,KAAY,IAGAxL,KAAA6O,wBAAuBlD,MAAc,CACjD3L,KAAKsL,QACLtL,KAAKkN,sBACN3B,QACCY,KAAI,EAAEb,EAASc,OACX,MAAMiC,GAAS,GACTS,GAAa,IAAI1C,IAAUM,KAAK,CAACC,GAAGC,KACtCD,GAAE+B,MAAMpP,IAAIuN,cAAcD,GAAE8B,MAAMpP,KAEhCyP,GAAUzD,EAAQyD,SAAShJ,OAC3BuF,EAAQyD,QACR,IAAC5O,SACP,KAAO2O,GAAW/I,QAAQ,CACtB,MAAMiJ,GAAQ,GACd,IAAIf,GAAQa,GAAWG,MACvB,KAAOD,GAAMjJ,OAASgJ,GAAQhJ,UAEtBiJ,GAAMjJ,QACLiJ,GAAMvI,KAAMe,IAAMA,GAAEkH,MAAMpP,KAAO2O,GAAMS,MAAMpP,MAIlD0P,GAAMxC,KAAKyB,IACXA,GAAQa,GAAWG,MAEnBD,GAAMjJ,OAASgJ,GAAQhJ,QAC3BsI,GAAO7B,KAAKwC,IAEhB,OAAOX,MA0DXrO,KAAKiB,aACD,kBACAjB,KAAK2K,QAAQuE,OAAO/N,UAAW7C,IAEvBA,aAAmB6Q,QACjB7Q,EAAQ8Q,IAAIzI,SAAS,UAClB2C,EAAc7C,KAAMe,IAAMlJ,EAAQ8Q,IAAIzI,SAASa,OAEpDxH,KAAKqP,WAAS,IAI1BrP,KAAKU,KAAK4O,YACL/D,QAAKgE,KAAO/H,GAAMA,IAClBrG,UAAU,IAAMnB,KAAKuK,WAAW,IACzC,CAEOiF,QAAQC,GACXzP,KAAKyJ,MAAMgB,KAAKgF,EACpB,CAEOlF,WAAWkF,GACdzP,KAAK0K,SAASD,KAAK,IAAKzK,KAAK0K,SAAShB,cAAe+F,GACzD,CAEOC,WAAWC,EAAiBC,GAC/B,IAAKD,GAAS5J,OAAQ,OACtB,MAAMlC,EAAW7D,KAAK0K,SAAShB,YAAY7F,UAAY,GACnD+L,IAAW/L,EAAS8C,SAASgJ,IAAU9L,EAAS2I,KAAKmD,IACpDC,GAAU/L,EAAS8C,SAASgJ,IAC7B9L,EAASgM,OACLhM,EAASiM,UAAWC,GAAMA,IAAMJ,GAChC,GAER3P,KAAKuK,WAAW,CAAE1G,YACtB,CAEOmM,YACH,IAAK9E,eAAeC,QAAQ,wBACxB,OAAOnL,KAAK6J,UAEhB,MAAMvL,EAAU0B,KAAKkH,SAASwC,WAC9B1J,KAAK+J,KAAKC,MAAM,CAAEuD,QAAMpN,QAAe8P,aAAW9P,UAClDH,KAAK+J,KAAKE,cACNC,OACI,IACQ5L,GAAW,MACXA,GAASiG,gBAAkB,IAEnC,CAAC,UAAM4F,EAAW,MAG1BnK,KAAK0K,SAASD,KAAK,CAAE/L,KAAMsB,KAAK0K,SAAShB,WAAWhL,MACxD,CAEO2Q,YACHnE,eAAegF,WAAW,wBAC1BhF,eAAegF,WAAW,gCAC1BlQ,KAAK6J,SACT,CAEOW,YACHU,eAAeiF,QACX,uBACAnF,KAAKoF,UAAU,IACRpQ,KAAKkH,SAASwC,eACjB,EAAGQ,OAAYlK,KAAK+J,KAAKM,eAAiB,GAAI,CAC1C,UACAF,EACA,QAIZe,eAAeiF,QACX,+BACAnF,KAAKoF,UAAUpQ,KAAK0K,SAAShB,YAAc,IAEnD,CAEO2G,WACHrQ,KAAK+J,KAAKC,MAAM,CAAEuD,QAAMpN,QAAe8P,aAAW9P,UAClD,MAAM4C,EAAOiI,KAAKC,MACdC,eAAeC,QAAQ,yBAA2B,MAEhD7M,EAAU,IAAIwL,IAAQ/G,GAC5B/C,KAAKkH,SAASuD,KAAKnM,GACnB,MAAMgS,KAAepG,OACjB,IACOnH,KACCzE,GAAW,MACXA,GAASiG,gBAAkB,IAEnC,CAAC,UAAM4F,EAAW,KAEtBnK,KAAK+J,KAAKE,WAAWqG,GACrBtQ,KAAKuK,WAAW,CACZuD,QAAS9N,KAAKU,KAAK6F,UAAUjH,MAC1B0L,KAAKC,MACJC,eAAeC,QAAQ,iCAAmC,OAGtE,CAEOoF,gBACHrF,eAAegF,WAAW,+BAC1BlQ,KAAK+K,aAAe,IAAIjB,GAC5B,CAEO0G,qBAAqBC,GAAiB,GAEzC,GADAzQ,KAAK+J,KAAK2G,oBACL1Q,KAAK+J,KAAK4G,QAAUF,EAAO,OAChC,MAAM5K,EAAQ,IAAIiE,IAAQ,IACnB9J,KAAK1B,WACL0B,KAAK+J,KAAKM,gBAEjBrK,KAAKQ,QAAQqC,KAAK+N,IAA2B,CAAE7N,KAAM8C,GACzD,CAEagL,cAAW,IAAAnJ,EAAA1H,KAAA,SAAA2H,KAAA,kBACdD,EAAKoJ,iBACX,MAAMxF,EAAU5D,EAAKgD,SAAShB,WACxB+F,EAAQ/H,EAAKqC,KAAKM,cACxB,IAAIjD,EAAU,8BAA8BkE,EAAQ5M,QAChD+Q,EAAMjH,mBACV,EAAQ9G,KAAO+N,EAAMlR,KAAM,iBACvBkR,EAAMvN,SAAW,IACX,UAASR,KAAO+N,EAAMlR,KAAM,UAC5B,KAEN+M,EAAQ0D,QACR5H,EAAU,GAAGA,6EAEjB,MAAM6F,QAAO,EAAS8D,MAClB,CACIxR,MAAO,QAAQ+L,EAAQ5M,OACvB0I,UACA4J,KAAM,CAAE5J,QAAS,oBAErBM,EAAKlH,SAET,GAAwB,SAApByM,GAASgE,OAAmB,KAAM,iBACtChE,EAAQ7B,QAAQ,iCACZE,EAAQ0D,YACFtH,EAAKwJ,mBAAmBpJ,MAAON,IACjCO,cAAYiD,KAAKoF,UAAU5I,IAC3ByF,EAAQkE,QACF3J,UAGJE,EAAK0J,WAAWtJ,MAAON,IACzBO,cAAYiD,KAAKoF,UAAU5I,IAC3ByF,EAAQkE,QACF3J,IAEdyF,EAAQkE,OAAQ,EApCI,EAqCxB,CAEaC,SAASC,GAAe,GAAK,IAAAC,EAAAtR,KAAA,SAAA2H,KAAA,YACtC,IAAK2J,EAAKvH,KAAM,KAAM,sBACtB,IAAKuH,EAAKvH,KAAK4G,MACX,KAAM,qCAAkCY,MACpCD,EAAKvH,MACPyH,KAAK,SACXF,EAAKvH,KAAKE,WAAW,CACjBxC,aACI6J,EAAKvH,KAAKM,cAAc5C,cACxB6J,EAAK5G,SAAShB,WAAWhL,OAEjC,IAAI+Q,EAAQ6B,EAAKvH,KAAKM,cAClB/L,EAAUgT,EAAKpK,SAASwC,YAAc,IAAII,IAO9C,GANKuH,UACKC,EAAKG,uBACP,IAAKnT,KAAYmR,GACjB6B,EAAK5G,SAAShB,WAAWhL,OAG7B4S,EAAK1G,UAAU8G,eAAgB,CAC/B,MAAMC,QAAgBL,EAAK1G,UAAUgH,YAAY,CAC7ClT,KAAM4S,EAAK5G,SAAShB,WAAWhL,KAC/BmT,cAAepC,EAAMjH,WACrBjK,KAAMkR,EAAMlR,KACZ2D,SAAUuN,EAAMvN,SAChB8E,QAASyI,EAAMzI,UAEnB,IAAK2K,GAASG,QAAS,OACtBrC,EAAclL,eAAiB,CAC5BwN,QAASJ,EACTK,WAAYL,EAAQK,aAGvBvC,EAAM5N,OAAOkE,QAAUuL,EAAKpK,SAASwC,WAAW7H,OAAOkE,SACxD0J,EAAM5N,MAAQyP,EAAKpK,SAASwC,WAAW7H,OAE3CyP,EAAKxG,SAASL,KAAK,yBACZgF,EAAMwC,cACTxC,EAAMzI,UACNyI,EAAMlR,QAAOiP,KAAWiC,EAAMlR,MAAMkP,UACpCgC,EAAMvN,SAAW,MAErB,MAAMgQ,QAAM,EAASC,MACjB,IAAIrI,IAAQ,IACLwH,EAAK5G,SAAShB,cACd+F,EACH9P,YAAa8P,EAAMjH,YAAciH,EAAM9P,YACvCqO,UAAWyB,EAAMlC,MAAMxL,KACvBqQ,SACM3C,EAAMlC,MAAMjO,IAAIqH,SAAS,KAAyB,GAAlB8I,GAAOlC,MAAMjO,QAC/Ca,SAAeb,GACnBiF,eAAgB,IACPkL,EAAclL,gBAAkB,GACrC8N,WACI5C,EAAMlC,MAAM8E,eAAclS,SAAekS,YAEjDpK,UAAWqJ,EAAKjR,UAAUiB,IAAI,8BAElCmO,EAAMd,UAAY,CAAE2D,WAAY7C,EAAMd,WAAc,IAEnD9G,YACAC,MAAOiI,IACJuB,QAAKxG,SAASL,KAAK,IACbsF,GAAGwC,OAASxC,KAEtBN,EAAM3J,QAAQC,QAAUzH,EAAQiG,eAAeuB,QAAQC,gBACvD,EAAMyM,MACF,IAAKN,EAAQO,cAAc,GAC3B,CACIlU,KAAMkR,EAAMlR,KACZ2D,SAAUuN,EAAMvN,SAChBiM,KAAMsB,EAAMiD,iBAEhBjD,EAAM3J,OACNxH,EAAQiG,eAAeuB,QACzBgC,MAAOiI,IACLuB,QAAKxG,SAASL,KAAK,IACbsF,GAAGwC,OAASxC,KAG1BuB,EAAKxG,SAASL,KAAK,IACnB,MAAQhD,gBAAiBgI,EACzB6B,SAAKjC,YACLiC,EAAKvH,MAAME,WAAW,CAAExC,iBACxB6J,EAAKvG,aAAemH,EACpBhH,eAAeiF,QACX,8BACAnF,KAAKoF,UAAU8B,IAEnBZ,EAAK9B,QAAQ,WACN0C,CAAO,EA1FwB,EA2F1C,CAEahB,mBAAgB,IAAAyB,EAAA3S,KAAA,SAAA2H,KAAA,YACzB,MAAQoH,UAASC,QAAOtQ,QAASiU,EAAKjI,SAAShB,WAC/C,IAAKsF,EAAO,KAAM,iCAClB,MAAM4D,EAAgB7D,EAAQ1B,OACzB7F,IAAMA,GAAEpH,WAAUD,QAAcC,OAErC,GAAIwS,EAAc7M,QAAU,EACxB,KAAM,wCACV,MAAMgE,EAAO4I,EAAK5I,KAAKM,cACjByE,QAAmB6D,EAAKzF,oBACzB3B,QAAKsH,KAAK,IACVhL,YACCiL,GAAkBhE,EAAWrI,KAC9Be,IAAMA,GAAElI,KAAOyK,EAAKnK,UAAY4H,GAAEvB,SAAW8D,EAAKnK,UAEjD+B,GAAQgR,EAAKjS,KAAKkB,YAAY,CAACkR,GAAgBpE,MAAMpP,KACrDoM,GAAY,CACdoH,YACUH,EAAKI,oBACXpR,GAAMsE,OACN8D,EAAKnK,SACLkP,EACA8D,EAAc7M,SAGhBiN,MAAgBvG,MAClB,IAACtM,WAAkByS,GACnB,SAEEK,SAAkBC,QAAQC,IAC5BH,GAAc7G,IAAI,CAAC3E,GAAG4L,KAClBT,EAAKlB,uBACD,IACO1H,EACHnK,SAAU8L,GAAU0H,IAAKnN,QAAUyF,GAAU0H,IAAK9T,GAClDW,WAAYuH,GAAEpH,OAElB1B,KAIN2U,GAAcL,GAAc3F,OAAO,CAAC7F,GAAG4L,MAASH,GAAUG,KAC1DE,GAAa,MAAGnT,QAAcC,UAAK,EAAIsB,KACzCH,KAAKC,MACL,iBAEJ,IAAIlC,GAAK,GACT,QAASiU,GAAI,EAAGA,GAAIP,GAAcjN,OAAQwN,KAAK,CAC3C,IAAKN,GAAUM,IAAI,SACnB,MAAMhG,GAAOyF,GAAcO,IACrBtF,GAAQvC,GAAU6H,IACxBZ,EAAK5I,KAAKE,WAAW,IACdF,EACH4E,UAAWrP,GACXiO,KAAMA,GACNtN,WAAYsN,GAAKnN,MACjBgS,QAAS7E,GAAKjO,GACdM,SAAUqO,IAAO3O,GACjBkJ,WAAYyF,GAAMlM,KAClBpC,YAAasO,GAAMlM,KACnBkE,OAAQgI,IAAOhI,QAAUgI,IAAO3O,GAChC0P,MAAOsE,GACPzR,MAAOoM,GAAMS,QACPjC,MAAO,CACHkG,EAAKjS,KAAK8S,aAAalU,GACvB2O,GAAMS,MAAMC,UACZV,GAAMS,MAAMpP,KAEhB,CAACqT,EAAKjS,KAAK8S,aAAalU,MAElC,MAAMsP,SAAY+D,EAAKvB,UAAS,GAC5BxC,GAAItP,KAAOA,KAAIA,GAAKsP,GAAItP,IAE5B+T,GAAYtN,WACZ0N,MACI,4DAA4DJ,GACvDlH,IAAK3E,IAAMA,GAAEzF,MAAQyF,GAAEpH,QACtBoR,KAAK,SAElB,EA/EwB,EAgF7B,CAEcV,iBAAc,IAAA4C,EAAA1T,KAAA,SAAA2H,KAAA,YACxB,IAAyD,IAArD+L,EAAKrT,UAAUiB,IAAI,8BAAyC,OAChE,MAAMsB,EAAM8Q,EAAKlT,QAAQqC,KAAK8Q,KAO9B,GAAuB,gBANFT,QAAQU,KAAK,CAC9BhR,EAAII,kBAAkB6C,MACjB0F,QAAKgE,KAAO/H,GAAmB,SAAbA,EAAEyJ,SACpBpJ,YACLjF,EAAI6F,cAAcZ,gBAEVoJ,OAAmB,KAAM,iBACrC,MAAMlH,EAAOnH,EAAII,kBAAkB+G,KAAKM,cACxC,UAAWwJ,KAAO9J,EACd,GAAIA,EAAK8J,GAAM,KAAM,2BAEzBjR,EAAIuO,OAAQ,EAdY,EAe5B,CAGcM,wBACRnS,KAAIM,WAAUrB,OAAM2D,WAAUjC,cAChCvB,GAAiB,IAAAoV,EAAA9T,KAAA,SAAA2H,KAAA,YAEjB,IAAK1H,EAAY,KAAM,mCACvB,MAAM8N,SAAQ,EAASL,MAAc,CACjCC,gBAAcC,KAAYrP,GAC1BsP,cAAYD,KAAYrP,EAAkB,GAAX2D,EAAgB,KAC/CxD,OACA0B,MAAOH,IACR4H,YACH,GAAIkG,GAAStH,KAAMe,IAAMA,GAAE5H,WAAaA,GAAYN,IAAOkI,GAAElI,IACzD,MAAIM,EAAS+G,SAAS,KACZ,GAAG/G,gDAEH,GAAGA,0CAGjB,MAAMmU,GACFD,EAAKzT,UAAUiB,IAAI,8BAA8B5C,YAAiB,EACtE,GACIqV,GAAmB,GACnBhG,GAASV,OACJ7F,IACGA,GAAEvH,WAAWC,iBACRD,MAAcE,SAAeC,OAAOF,eAC5B,aAAbsH,GAAEhI,QACFgI,GAAElI,KAAOA,GACfyG,QAAUgO,GACd,CACE,MAAMC,GAAU/T,OAAeE,SAAeC,MAC9C,KAAM,GAAG4T,GAAU,MAAQ/T,aACvB+T,GAAU,OAAS,WACjBtV,WAEV,OAAO,CAAK,EAjCK,EAkCrB,CAEOuN,iBAAiBvN,GACpB,SAAOuV,OAAkBjU,KAAKU,KAAK6F,SAASjH,GAAI,CAC5CyC,KAAMrD,IACP6M,QACCY,KAAKpJ,MACDmR,MACInR,EAAKoJ,IAAK3E,IACLA,GAAG2M,SAASzV,IAAOuO,mBAAmBX,MACjC9E,EAAE2M,SAASzV,IAAOuO,QAClB,IACJd,IAAKiI,GACe,YAAjB1V,EACK,IACO0V,EACH9U,GAAI8U,EAAE9U,IAAM8U,EAAEnO,OACdyI,KAAMlH,EAAEkH,MAEZ0F,EAAEC,SAASlI,IAAK3E,QACTA,EACH8M,QAASF,EAAE9U,GACXoP,KAAMlH,EAAEkH,SACL,OAMrC,CAEcqE,oBACVwB,EACAjV,EACAoM,EACA8I,GAAa,SAAA7M,KAAA,YAEb,MAAM8M,EAAmB,GACzB,IAAI3F,EAAapD,EAAU2B,OACtB7F,GAAMA,EAAElI,KAAOA,GAAMkI,EAAEvB,SAAW3G,GAEvC,QAASiU,EAAI,EAAGA,EAAIiB,EAAOjB,IAAK,CAC5B,MAAMhL,SAAI,EAASmM,MACfH,EACAjV,EACAwP,EAAW3C,IAAK3E,IAAMA,GAAEvB,QAAUuB,GAAElI,KAEpCiJ,KACAkM,EAAiBjI,KACbd,EAAUjF,KAAMe,IAAMA,GAAElI,KAAOiJ,IAAQf,GAAEvB,SAAWsC,KAExDuG,EAAaA,EAAWzB,OACnB7F,IAAMA,GAAElI,KAAOiJ,IAAQf,GAAEvB,SAAWsC,KAIjD,OAAOkM,CAAiB,EArBX,EAsBjB,CAACvR,SAAAlD,KAAA,mBAAAmD,iBAtqBQoG,GAAkBvL,MAAAoF,MAAApF,MAAAqF,MAAArF,MAAAsF,KAAAtF,MAAAuF,MAAAvF,MAAA2W,KAAA3W,MAAA4W,KAAA,EAAA1R,SAAAlD,KAAA,WAAA6U,EAAAC,IAAA,OAAlBvL,EAAkBwL,QAAlBxL,EAAkByL,UAAAC,WAFf,gBAEH1L,CAAmB,oIC/BzB,IAAMqH,EAAyB,MAAhC,MAAOA,EASTrQ,YACqC2U,EACzB7U,GADyBL,KAAAkV,SACzBlV,KAAAK,YAVIL,KAAAmV,gBAAeC,MAC3BpV,KAAKkV,QAEOlV,KAAAqV,eAAcC,MAC1BtV,KAAKkV,QAEOlV,KAAAuV,aAAYC,MAAyBxV,KAAKkV,OAKvD,CAAChS,SAAAlD,KAAA,mBAAAmD,iBAZKyN,GAAyB5S,MAUtB0K,MAAe1K,MAAAoF,KAAA,EAAAF,SAAAlD,KAAA,UAAAwD,EAAAC,IAAA,MAVlBmN,EAAyBlN,UAAA,yBAAAI,MAAA,GAAAC,KAAA,GAAAC,OAAA,eAAA4E,eArCXC,8FAWAA,sGAWAA,giBAjCnB7K,MAAA,WAA6BA,MAAA,gCAA0BA,QACvDA,MAAA,UAAAA,CAA+D,6BASvDA,MAAA,WACAA,MAAA,UAAAA,MAAA,KAA4BA,UAEhCA,MAAA,6BAQIA,MAAA,YACAA,MAAA,WAAAA,MAAA,MAAoCA,UAExCA,MAAA,2BAQIA,MAAA,iBAA0BA,MAAA,eAAQA,QAClCA,MAAA,WAAAA,MAAA,MAA6BA,YAGrCA,MAAA,cAAAA,CAA6D,eAC/CA,MAAA,YAAKA,iBA/BXA,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAAmG,EAAAgR,aAAA,OAAAnX,OAWAA,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAAmG,EAAAkR,YAAA,OAAArX,OAWAA,MAAA,GAAAA,MAAA,OAAAA,MAAA,KAAAmG,EAAAoR,UAAA,OAAAvX,2LAoBH4S,CAAyB,whBC4C/B,IAAM6E,GAAoB,MAA3B,MAAOA,EAAoBvS,SAAAlD,KAAA,mBAAAmD,iBAApBsS,EAAoB,EAAAvS,SAAAlD,KAAA,UAAA0V,EAAAC,IAAA,MAApBF,IAAoBvS,SAAAlD,KAAA,UAAA0V,EAAAE,IAAA,WAHlB,CAACC,MAAoBC,QAAA,CAjB5BC,KACAC,KACAH,KACAI,KACAC,IACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IACAC,IACAC,KACAC,eAKKpB,CAAoB,4KCjFrBzX,MAAA,aAAAA,CAA+C,SACjBA,MAAA,WAAKA,mDAK/BA,MAAA,WAAAA,CAAqD,WACjDA,MAAA,MAAgBA,QAChBA,MAAA,4BACIA,MAAA,yBAAA8Y,GAAA9Y,MAAAa,GAAA,MAAAC,EAAAd,MAAA,UAAAA,MAAAc,EAAAqP,KAAA2I,EAAA,GACH9Y,mCADGA,MAAA,GAAAA,MAAA,UAAAC,EAAAkQ,gCAKJnQ,MAAA,SACIA,MAAA,mBACJA,+BADIA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAS,EAAAF,KAAA,4DAEJP,MAAA,qBAEIA,MAAA,yBAAA8Y,GAAA9Y,MAAA+Y,GAAA,MAAAC,EAAAhZ,MAAA,UAAAA,MAAAgZ,EAAAzY,KAAAuY,EAAA,GACH9Y,iCADGA,MAAA,UAAAW,EAAAJ,+CAGRP,MAAA,WAAAA,CAA4D,WACxDA,MAAA,MAAkBA,QAClBA,MAAA,sBAAAA,CAAqC,cAG7BA,MAAA,yBAAA8Y,GAAA9Y,MAAA2G,GAAA,MAAAC,EAAA5G,MAAA,UAAAA,MAAA4G,EAAAqM,OAAA6F,EAAA,GAFJ9Y,qCAEIA,MAAA,GAAAA,MAAA,UAAAiZ,EAAAhG,iDAvBpBjT,MAAA,GACIA,MAAA,YACIA,MAAA,EAAAkZ,EAAA,aAMAlZ,MAAA,UAAAA,CAAuB,WACnBA,MAAA,MAAgBA,QAChBA,MAAA,EAAAmZ,EAAA,cAGAnZ,MAAA,EAAAoZ,EAAA,uBAIJpZ,QACAA,MAAA,EAAAqZ,EAAA,cAUArZ,MAAA,OAAAA,MAAA,OAIAA,UAEJA,MAAA,eAAAA,CAAqD,gBAC3BA,MAAA,mBAAAA,MAAAsZ,GAAA,MAAA7R,EAAAzH,QAAA,OAASA,MAAAyH,EAAA8R,UAAS,GAAxCvZ,MAAA,OAAsDA,UAE9DA,gCAnCyCA,MAAA,GAAAA,MAAA,OAAAqB,EAAAmY,cAQvBxZ,MAAA,GAAAA,MAAA,QAAAqB,EAAAoY,cAIDzZ,MAAA,GAAAA,MAAA,OAAAqB,EAAAoY,cAI+BzZ,MAAA,GAAAA,MAAA,QAAAqB,EAAAqY,aAcxC1Z,MAAA,GAAAA,MAAA,IAAAqB,EAAAsY,MAAA5R,OAAA,OAAA/H,CAAIqB,EAAAuY,UAAJ5Z,EAAI,MAAAqB,EAAAsC,MAAA,KAAAtC,EAAAsC,MAAAG,gBAAA,MAAAzC,EAAAsC,MAAA,KAAAtC,EAAAsC,MAAAI,OAAJ/D,MAAA,8BAOJA,MAAA,aACIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,GAAaA,gCADHA,MAAA,GAAAA,MAAA,eACVA,MAAA,GAAAA,MAAA4H,EAAAwF,UAaZ,IAAMyM,EAAyB,MAAhC,MAAOA,EAgBT,aAAWD,GACP,OAAO5X,KAAK2X,MAAMxL,IAAK3E,GAAMA,EAAEzF,MAAMyP,KAAK,KAC9C,CAEA,eAAWkG,GACP,QAAS1X,KAAKK,UAAUiB,IAAI,wBAChC,CAEA,gBAAWkW,GACP,QAASxX,KAAKK,UAAUiB,IAAI,gCAChC,CAEAf,YACqCuX,EACzBzX,GADyBL,KAAA8X,QACzB9X,KAAAK,YA7BKL,KAAA6F,MAAQ,IAAIhF,MAEbb,KAAA2X,MAAQ3X,KAAK8X,MAAMH,OAAS,GAErC3X,KAAAzB,KAAOyB,KAAK8X,MAAMvZ,KAClByB,KAAAmO,KAAOnO,KAAK8X,MAAM3J,KAETnO,KAAAyX,aAAezX,KAAK8X,MAAML,aAEnCzX,KAAAiR,OAASjR,KAAK8X,MAAM7G,OAEXjR,KAAA2B,MAAQ3B,KAAK8X,MAAMnW,KAmBhC,CAEI4V,UACHvX,KAAKoL,QAAU,6BACfpL,KAAK6F,MAAM5C,KAAK,CAAEgO,OAAQ,QAC9B,CAAC/N,SAAAlD,KAAA,mBAAAmD,iBApCQ0U,GAAyB7Z,MA6BtB0K,MAAe1K,MAAAoF,MAAA,EAAAF,SAAAlD,KAAA,UAAA+X,EAAAtU,IAAA,MA7BlBoU,EAAyBnU,UAAA,wCAAAE,QAAA,CAAAiC,MAAA,SAAA/B,MAAA,EAAAC,KAAA,EAAAC,OAAA,eAAA4E,qBA5DjBC,4FAeWA,iFAmBRA,qFACK,0CACT,uCACA,sCAI2CA,oFAhC/BA,iFAgBAA,g0BA1BxB7K,MAAA,WAAAA,CAAQ,QACJA,MAAA,KAAwBA,QACxBA,MAAA,WACAA,MAAA,EAAAga,EAAA,gBAGJha,QACAA,MAAA,EAAAia,EAAA,uBAsCAja,MAAA,EAAAka,EAAA,yBAAAla,8BA1CmCA,MAAA,GAAAA,MAAA,QAAAmG,EAAAiH,SAIpBpN,MAAA,GAAAA,MAAA,QAAAmG,EAAAiH,QAAApN,CAAgB,WAAA0B,2PAsD1BmY,CAAyB,uPCzDd7Z,MAAA,qBAGIA,MAAA,yBAAA8Y,GAAA,MAAAqB,EAAAna,MAAAa,GAAAuZ,UAAAtZ,EAAAd,MAAA,UAAiBA,MAAAc,EAAA4Q,WAAAyI,EAAArB,GAAuB,GAGxC9Y,MAAA,GACJA,+CALIA,MAAA,WAAAW,EAAA0Z,mBAAAra,MAAA,EAAAgI,IAAAW,SAAAwR,GAAAna,CAAmD,iBAAAA,MAAA,EAAAkI,IAInDlI,MAAA,GAAAA,MAAA,IAAAma,EAAA,+BATZna,MAAA,WAAAA,CAAoD,cAC7BA,MAAA,UAAIA,QACvBA,MAAA,YACIA,MAAA,EAAAsa,EAAA,uBAQJta,iCAPwBA,MAAA,GAAAA,MAAA,UAAAmH,EAAAtB,mCAYxB7F,MAAA,2CAGIA,MAAA,SAAAua,EAAA/T,OAAA,0BAIAxG,MAAA,oDA5BZA,MAAA,WAKIA,MAAA,EAAAwa,EAAA,aAaAxa,MAAA,WAGIA,MAAA,EAAAya,EAAA,cAMAza,MAAA,EAAA0a,EAAA,0BAAA1a,OAMJA,QACAA,MAAA,WAAAA,CAA4B,YAEpBA,MAAA,GACJA,QACAA,MAAA,WAAAA,CAAiD,kBACbA,MAAA,YAAKA,QACrCA,MAAA,QAAGA,MAAA,IAAgDA,UAEvDA,MAAA,YAAAA,CAEC,gBAMOA,MAAA,yBAAAua,EAAAva,MAAA2a,GAAAP,UAAAQ,EAAA5a,QAAA,OAASA,MAAA4a,EAAAC,gBAAAN,GAAqB,GAE9Bva,MAAA,aAAAA,MAAA,OACIA,MAAA,eAEJA,kBAEJA,MAAA,gBAKIA,MAAA,yBAAAua,EAAAva,MAAA2a,GAAAP,UAAAU,EAAA9a,QAAA,OAASA,MAAA8a,EAAAC,eAAAR,GAAoB,GAE7Bva,MAAA,aAAAA,MAAA,OACIA,MAAA,eAEJA,sBAIZA,MAAA,gBAMIA,MAAA,yBAAAua,EAAAva,MAAA2a,GAAAP,UAAA3S,EAAAzH,QAAA,OAASA,MAAAyH,EAAAuT,gBAAAT,GAAqB,GAE9Bva,MAAA,eAAUA,MAAA,IAIRA,6DA9EAA,MAAA,GAAAA,MAAA,aAAAI,EAAAyF,SAAA,KAAAzF,EAAAyF,SAAAkC,QAkBG/H,MAAA,GAAAA,MAAA,aAAAua,EAAA/T,OAAA,KAAA+T,EAAA/T,OAAAuB,OAAA/H,CAA2B,WAAAib,GAa5Bjb,MAAA,GAAAA,MAAA,IAAAua,EAAAxW,MAAAwW,EAAAjZ,IAAAiZ,EAAAtS,QAAA,YAIGjI,MAAA,GAAAA,OAAA,MAAAua,EAAA7J,KAAA,KAAA6J,EAAA7J,KAAA5M,gBAAA,MAAAyW,EAAA7J,KAAA,KAAA6J,EAAA7J,KAAA3M,OAoCP/D,MAAA,IAAAA,MAAA,gBAAAI,EAAA8a,UAAAvS,SAAA,MAAA4R,EAAA,KAAAA,EAAAjZ,KAGUtB,MAAA,GAAAA,MAAAI,EAAA8a,UAAAvS,SAAA,MAAA4R,EAAA,KAAAA,EAAAjZ,IAAA,+BArF9B,MAAM6Z,EAAuB,GAsHtB,IAAMC,EAAsB,MAA7B,MAAOA,EAUT,aAAWF,GACP,OAAOlZ,KAAKK,UAAUiB,IAAc+X,MAAiBF,CACzD,CAEA5Y,YACYF,EACAG,GADAR,KAAAK,YACAL,KAAAQ,UAfIR,KAAA6D,SAAqB,GAC9B7D,KAAAsZ,UAAY,EACZtZ,KAAAuZ,MAAwB,GACxBvZ,KAAAwZ,UAAW,EACXxZ,KAAAqY,kBAA8B,GAoDrBrY,KAAAyZ,iBAAoBC,GAC/B1Z,KAAK2Z,UAAYD,EAEN1Z,KAAA4Z,kBAAqBF,GAChC1Z,KAAK6Z,SAAWH,EACL1Z,KAAA8Z,iBAAoBC,GAAgB/Z,KAAKwZ,SAAWO,CA7CjE,CAGIlB,kBACH,MAAMjW,EAAM5C,KAAKQ,QAAQqC,KAAKmX,IAA0B,CACpDjX,KAAM,CACFwW,MAAOvZ,KAAKuZ,MACZjO,QAAS,CAAE2O,SAAUja,KAAKsZ,cAGlC1W,EAAI6F,cAActH,UAAWoY,IACpBA,IAAOA,EAAQ3W,EAAII,kBAAkBkX,UAC1Cla,KAAKma,SAASZ,EAAK,EAE3B,CAGOR,eAAeqB,GAClBpa,KAAKma,SAASna,KAAKuZ,MAAMlM,OAAQ7F,GAAMA,EAAElI,KAAO8a,EAAM9a,IAC1D,CAMO6a,SAASE,GACZra,KAAKuZ,MAAQc,EACTra,KAAK2Z,WAAW3Z,KAAK2Z,UAAU3Z,KAAKuZ,MAC5C,CAOOe,WAAW7K,GACdzP,KAAKuZ,MAAQ9J,GAAS,EAC1B,CAUOuJ,gBAAgBoB,GACnB,IAAKA,GAAO9a,GAAI,OAChB,MAAMib,EAAWva,KAAKkZ,UACHqB,EAAS5T,SAASyT,EAAM9a,IAOvCU,KAAKK,UAAUma,gBACXnB,IACAkB,EAASlN,OAAQ7F,GAAMA,IAAM4S,EAAM9a,KAPvCU,KAAKK,UAAUma,gBAAgBnB,IAAc,IACtCkB,EACHH,EAAM9a,IAQlB,CAAC4D,SAAAlD,KAAA,mBAAAmD,iBA/EQiW,GAAsBpb,MAAAoF,KAAApF,MAAAqF,MAAA,EAAAH,SAAAlD,KAAA,UAAA+X,EAAAtU,IAAA,MAAtB2V,EAAsB1V,UAAA,sBAAAC,OAAA,CAAAE,SAAA,YAAAA,SAAA,CAAA7F,MARpB,CACP,CACIyc,QAASC,KACTC,eAAaC,OAAW,IAAMxB,GAC9ByB,OAAO,MAEd/W,MAAA,GAAAC,KAAA,EAAAC,OAAA,eAAA4E,eAdsBC,qFA3CKA,0EAAA,4CAAc,mDAYdA,2EAAA,6CAAe,ukDAlEvC7K,MAAA,WACIA,MAAA,EAAA8c,EAAA,cAsFJ9c,QACAA,MAAA,cAKIA,MAAA,0BAASmG,EAAA0U,iBAAiB,GAE1B7a,MAAA,UAAAA,CAAwD,cAC1CA,MAAA,YAAMA,QAChBA,MAAA,UAAAA,MAAA,KAAmBA,YAG3BA,MAAA,WACIA,MAAA,WACJA,eAlGyBA,MAAA,GAAAA,MAAA,UAAAmG,EAAAoV,uEA6GpBH,CAAsB,wJC1H3Bpb,MAAA,UAAAA,CAAwD,UACpDA,MAAA,KAAmDA,QACnDA,MAAA,WAAAA,CAAqC,UAArCA,CAAqC,WAE7BA,MAAA,KAESA,MAAA,UACTA,gBACAA,MAAA,sBAAAA,CAGC,wBACoCA,MAAA,UAAGA,QACpCA,MAAA,yBAAkCA,MAAA,SAAEA,YAG5CA,MAAA,WAAAA,CAAgC,YAC5BA,MAAA,OAEaA,MAAA,WACbA,gBACAA,MAAA,wBAAAA,CAA4D,yBACvBA,MAAA,UAAGA,QACpCA,MAAA,yBAAkCA,MAAA,SAAEA,YAG5CA,MAAA,YAAAA,CAA2B,YACvBA,MAAA,OAEaA,MAAA,WACbA,gBACAA,MAAA,wBAAAA,CAGC,yBACoCA,MAAA,UAAGA,QACpCA,MAAA,yBAAkCA,MAAA,SAAEA,cAIhDA,MAAA,eAAAA,CAAqD,gBAC3BA,MAAA,mBAAAA,MAAAib,GAAA,MAAArT,EAAA5H,QAAA,OAASA,MAAA4H,EAAAmV,SAAQ,GAAvC/c,MAAA,OAAoDA,UAExDA,MAAA,eAAAA,CAA8C,WAChBA,MAAA,YAAKA,oCA1CjBA,MAAA,GAAAA,MAAA,YAAAI,EAAA2L,MAUY/L,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YASAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,YAYAA,MAAA,GAAAA,MAAA,YACAA,MAAA,GAAAA,MAAA,mCAY9BA,MAAA,YAAAA,CAAoC,UAChCA,MAAA,MAKAA,QACAA,MAAA,cAAAA,CAA8C,UAChBA,MAAA,WAAKA,aAoB5C,IAAM2V,EAA2B,MAAlC,MAAOA,EA/EbpT,cAgFqBP,KAAA6F,MAAQ,IAAIhF,MAEtBb,KAAA+J,KAAO,IAAIiR,KAAU,CACxBC,UAAW,IAAIC,MAAY,GAC3BC,OAAQ,IAAID,MAAY,GACxBE,QAAS,IAAIF,MAAY,KAItBH,SACH/a,KAAK+J,KAAK2G,mBAEN2K,OAAOC,KAAKtb,KAAK+J,KAAK0F,OAAOhJ,KACxBoN,IAC4B,IAAzB7T,KAAK+J,KAAK0F,MAAMoE,IACS,SAAzB7T,KAAK+J,KAAK0F,MAAMoE,IAGxB7T,KAAKub,SAAU,EAGnBvb,KAAK6F,MAAM5C,KAAK,CAAEgO,OAAQ,QAC9B,CAAC/N,SAAAlD,KAAA,mBAAAmD,iBAvBQwQ,EAA2B,EAAAzQ,SAAAlD,KAAA,UAAAwb,EAAA/X,IAAA,MAA3BkQ,EAA2BjQ,UAAA,0BAAAE,QAAA,CAAAiC,MAAA,SAAA/B,MAAA,EAAAC,KAAA,EAAAC,OAAA,eAAA4E,qBA3ECC,kGAGTA,gIAEH,oCAAO,sCAWJA,yIAEC,qCAAO,uCAQRA,oIAEC,qCAAO,uCAYsBA,kFAQ1BA,m3BAjD5B7K,MAAA,EAAAyd,EAAA,cA+CAzd,MAAA,EAAA0d,EAAA,yBAAA1d,8BA/CMA,MAAA,QAAAmG,EAAAoX,QAAAvd,CAAgB,WAAA2d,kTA4EjBhI,CAA2B,wIC7CxB3V,MAAA,6CACIA,MAAA,SAAA4H,EAAAgW,KAAApX,kCA0DAxG,MAAA,WAAAA,CAGC,YACwCA,MAAA,GAAUA,oCAAVA,MAAA,GAAAA,MAAA6d,0DAV7C7d,MAAA,eAAAA,CAIC,WACGA,MAAA,MAA+CA,QAC/CA,MAAA,EAAA8d,EAAA,cAMJ9d,+BALyBA,MAAA,GAAAA,MAAA,UAAAC,EAAA2d,KAAA/X,UAAA7F,MAAA,EAAA+d,yFAMzB/d,MAAA,gBAKIA,MAAA,wBAMJA,+BAJQA,MAAA,GAAAA,MAAA,MAAAS,EAAA8V,QAAAvW,CAAe,WAAAS,EAAAoF,SAAf7F,CAAe,UAAAA,MAAA,EAAAge,6CAnF/Bhe,MAAA,GACIA,MAAA,eASIA,MAAA,EAAAie,EAAA,wBAKAje,MAAA,cAIIA,MAAA,mBAAAA,MAAAa,GAAA,MAAAC,EAAAd,QAAA,OAASA,MAAAc,EAAAqS,MAAAlO,OAAY,GAGrBjF,MAAA,cAAUA,MAAA,gBAAUA,UAExBA,MAAA,cAMIA,MAAA,mBAAAA,MAAAa,GAAA,MAAAmY,EAAAhZ,QAAA,OAASA,MAAAgZ,EAAAkF,UAAAjZ,OAAgB,GAGzBjF,MAAA,cAAUA,MAAA,GAERA,YAGVA,MAAA,UAAAA,CAEC,eAFDA,CAEC,WAGWA,MAAA,IACJA,UAEJA,MAAA,eAAAA,CAAiD,YACbA,MAAA,cAAOA,QACvCA,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,aAAMA,QAChBA,MAAA,QAAAA,MAAA,OAAmBA,UAEvBA,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,WAAIA,QACdA,MAAA,QACIA,MAAA,IACJA,UAEJA,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,YAAKA,QACfA,MAAA,QAAGA,MAAA,IAAgDA,YAG3DA,MAAA,GAAAme,EAAA,kBAaAne,MAAA,GAAAoe,EAAA,kBAYJpe,QACAA,MAAA,YAAAA,CAEC,gBAOOA,MAAA,mBAAAA,MAAAa,GAAA,MAAA+Z,EAAA5a,QAAA4a,SAAAyD,QAAAzD,EAAAyD,OAA2Bre,MAAA4a,EAAA0D,aAAArZ,KAAA2V,EAAAyD,QAAyB,GAEpDre,MAAA,YAAAA,CAA8C,kBACfA,MAAA,IAEzBA,QACFA,MAAA,QAAAA,MAAA,OAGAA,cAIhBA,gCA3GQA,MAAA,GAAAA,MAAA,gBAAAI,EAAAwd,KAAApX,OAAA,KAAApG,EAAAwd,KAAApX,OAAAuB,OAAA/H,CAAqC,aAAAI,EAAAwd,KAAApX,OAAA,KAAApG,EAAAwd,KAAApX,OAAAuB,OAArC/H,CAAqC,iBAAAI,EAAAwd,KAAApX,QAAApG,EAAAwd,KAAApX,OAAAuB,QAArC/H,CAAqC,eAAAI,EAAAwd,KAAApX,QAAApG,EAAAwd,KAAApX,OAAAuB,QAArC/H,CAAqC,0BAAAI,EAAAwd,KAAApX,QAAApG,EAAAwd,KAAApX,OAAAuB,SAQhC/H,MAAA,GAAAA,MAAA,aAAAI,EAAAwd,KAAApX,OAAA,KAAApG,EAAAwd,KAAApX,OAAAuB,QAgBD/H,MAAA,GAAAA,MAAA,oBAAAI,EAAAme,IAAAve,CAA+B,WAAAI,EAAAme,KAKrBve,MAAA,GAAAA,MAAAI,EAAAme,IAAA,8BAUNve,MAAA,GAAAA,MAAA,IAAAI,EAAAwd,KAAA9Z,cAAA1D,EAAAwd,KAAA7Z,MAAA3D,EAAAwd,KAAAtc,GAAA,KAYItB,MAAA,IAAAA,MAAA,IAAAI,EAAAwd,KAAA9Z,cAAA1D,EAAAwd,KAAA7Z,MAAA3D,EAAAwd,KAAAtc,GAAA,KAKDtB,MAAA,GAAAA,OAAA,MAAAI,EAAAwd,KAAAlN,KAAA,KAAAtQ,EAAAwd,KAAAlN,KAAA5M,gBAAA,MAAA1D,EAAAwd,KAAAlN,KAAA,KAAAtQ,EAAAwd,KAAAlN,KAAA3M,OAKN/D,MAAA,GAAAA,MAAA,aAAAI,EAAAwd,KAAA/X,SAAA,KAAAzF,EAAAwd,KAAA/X,SAAAkC,QAcA/H,MAAA,GAAAA,MAAA,QAAAI,EAAA+I,UAiBDnJ,MAAA,GAAAA,MAAA,UAAAI,EAAAie,QAK+Bre,MAAA,GAAAA,MAAAI,EAAAie,OAAA,gBAM3Bre,MAAA,GAAAA,MAAAI,EAAAie,QAAAre,MAAA,2BAMZA,MAAA,WAAAA,CAGC,UACGA,MAAA,MAEAA,WAKT,IAAMwe,EAAoB,MAA3B,MAAOA,EA5Ibjc,cA8IoBP,KAAAuc,KAAe,EACfvc,KAAAqc,QAAkB,EAClBrc,KAAAmH,UAAoB,EAEnBnH,KAAAmR,MAAQ,IAAItQ,MACZb,KAAAkc,UAAY,IAAIrb,MAChBb,KAAAsc,aAAe,IAAIzb,MAE7Bb,KAAAuU,QAAU,GACVvU,KAAA6D,SAA4B,GAE5B4Y,YAAYC,GACXA,EAAQd,MAAQ5b,KAAK4b,MACrB5b,KAAK2c,eAEb,CAEQA,gBACJ3c,KAAKuU,QAAUvU,KAAK4b,KAAKlN,KAAKzI,OAC9BjG,KAAK6D,SAAW,CACZ,CACIjF,SAAUoB,KAAK4b,KAAK3V,QAAUjG,KAAK4b,KAAKtc,GACxC8H,QAASC,KAGrB,CAACnE,SAAAlD,KAAA,mBAAAmD,iBA3BQqZ,EAAoB,EAAAtZ,SAAAlD,KAAA,UAAA4c,EAAAnZ,IAAA,MAApB+Y,EAAoB9Y,UAAA,mBAAAC,OAAA,CAAAiY,KAAA,OAAAW,IAAA,MAAAF,OAAA,SAAAlV,SAAA,YAAAvD,QAAA,CAAAuN,MAAA,QAAA+K,UAAA,YAAAI,aAAA,gBAAAzY,SAAA,CAAA7F,OAAA8F,MAAA,EAAAC,KAAA,EAAAC,OAAA,eAAA4E,mBA1EDC,wFAuDJA,8LADIA,4EACJgU,YArC6BhU,uFAiDFA,2sDArH/C7K,MAAA,EAAA8e,EAAA,wBAgHA9e,MAAA,EAAA+e,EAAA,yBAAA/e,8BAhHeA,MAAA,OAAAmG,EAAAyX,KAAA5d,CAAY,WAAA2d,8QA4HtBa,CAAoB,6JC3EjBxe,MAAA,GACIA,MAAA,mCAEJA,8BAFIA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAI,EAAA6D,MAAA7D,EAAAI,aAAA,WAAAR,MAAA,IAAAI,EAAA2C,IAAA3C,EAAAI,aAAA,4BAGJR,MAAA,GAA8BA,MAAA,aAAOA,iDAEzCA,MAAA,WAAAA,CAIC,OACMA,MAAA,GAAUA,QACbA,MAAA,eAKIA,MAAA,yBAAAgf,EAAAhf,MAAAif,GAAA7E,UAAA3Z,EAAAT,QAAA,OAASA,MAAAS,EAAAiR,WAAAsN,GAAiB,GAAM,GAEhChf,MAAA,cAAUA,MAAA,WAAKA,wCARhBA,MAAA,GAAAA,MAAAgf,4CAWPhf,MAAA,WAAAA,CAAqD,UACjDA,MAAA,MAA0BA,QAC1BA,MAAA,eAKIA,MAAA,mBAAAA,MAAAkf,GAAA,MAAAjG,EAAAjZ,QAAA,OAASA,MAAAiZ,EAAA1M,WAAA,CAAA4S,UAAuB,IAAQ,GAExCnf,MAAA,cAAUA,MAAA,WAAKA,0CAM5B,IAAMof,EAA4B,MAAnC,MAAOA,UAAoCrd,KAO7C,WAAWiH,GACP,OAAOhH,KAAKqd,OAAOtT,KAAK0F,MAAMzI,OAClC,CAEA,SAAW/E,GACP,OAAOjC,KAAKqd,OAAOtT,KAAK0F,MAAMlR,IAClC,CAEA,OAAWwC,GACP,MAAQxC,OAAM2D,WAAU8E,WAAYhH,KAAKqd,OAAOtT,KAAK0F,MACrD,OAAIzI,KAAgBsW,KAAS/e,GACtBA,EAAkB,GAAX2D,EAAgB,GAClC,CAEA,eAAW1D,GACP,OAAOwB,KAAKK,UAAU7B,WAC1B,CAIA+B,YACYgd,EACAF,EACAhd,GAERM,QAJQX,KAAAud,UACAvd,KAAAqd,SACArd,KAAAK,YA7BIL,KAAAwJ,KAAuB,OACtBxJ,KAAAwd,WAAa,IAAI3c,MAClBb,KAAAsL,QAAUtL,KAAKqd,OAAO/R,QACtBtL,KAAAuK,WAAckT,GAAMzd,KAAKqd,OAAO9S,WAAWkT,GAC3Czd,KAAA0P,WAAa,CAACgO,EAAG3N,IAAM/P,KAAKqd,OAAO3N,WAAWgO,EAAG3N,GAoBjD/P,KAAA2d,WAAa,IAAM3d,KAAKud,QAAQ1a,KAAK+a,IAQrD,CAAC1a,SAAAlD,KAAA,mBAAAmD,iBAjCQia,GAA2Bpf,MAAAoF,MAAApF,MAAAqF,KAAArF,MAAAsF,MAAA,EAAAJ,SAAAlD,KAAA,UAAA+X,EAAAtU,IAAA,MAA3B2Z,EAA2B1Z,UAAA,2BAAAC,OAAA,CAAA6F,KAAA,QAAA5F,QAAA,CAAA4Z,WAAA,cAAA3Z,SAAA,CAAA7F,OAAA8F,MAAA,GAAAC,KAAA,GAAAC,OAAA,eAAA4E,iBArE3BC,sFAYIA,kFAWAA,mFAgCUA,o5BAlEnB7K,MAAA,cAAAA,CAGC,cAMOA,MAAA,0BAASmG,EAAAwZ,YAAY,GALzB3f,MAAA,KASAA,QACAA,MAAA,UAAAA,CAA+B,cAOvBA,MAAA,mBAAAmG,SAAAqF,KAAgB,MAAOrF,EAAAqZ,WAAAva,KAAAkB,EAAAqF,KAAqB,GANhDxL,MAAA,KAUAA,QACAA,MAAA,cAMIA,MAAA,mBAAAmG,SAAAqF,KAAgB,OAAQrF,EAAAqZ,WAAAva,KAAAkB,EAAAqF,KAAqB,GANjDxL,MAAA,KAUAA,YAGRA,MAAA,cAAAA,CAAyD,WAE/BA,MAAA,qBAAgCA,QACtDA,MAAA,aACIA,MAAA,GAAA6f,EAAA,uBAIA7f,MAAA,GAAA8f,EAAA,uBACJ9f,QACAA,MAAA,GAAA+f,EAAA,gCAgBA/f,MAAA,GAAAggB,EAAA,gCAYJhgB,sBAzDYA,MAAA,GAAAA,MAAA,kBAAAmG,EAAAqF,MAWAxL,MAAA,GAAAA,MAAA,mBAAAmG,EAAAqF,MAUcxL,MAAA,GAAAA,YAAA,KAAAmG,EAAAlC,MAAA,eAEHjE,MAAA,GAAAA,MAAA,QAAAmG,EAAA6C,SAIAhJ,MAAA,GAAAA,MAAA,OAAAmG,EAAA6C,SAKEhJ,MAAA,GAAAA,MAAA,kBAAAigB,EAAAjgB,MAAA,MAAAmG,EAAAmH,UAAA,KAAA2S,EAAApa,WAAA7F,MAAA,GAAA+d,IAaH/d,MAAA,GAAAA,MAAA,cAAAkgB,EAAAlgB,MAAA,MAAAmG,EAAAmH,UAAA,KAAA4S,EAAAf,ihBAejBC,CAA4B,qQCzFzBpf,MAAA,eAMIA,MAAA,mBAAAA,MAAAkf,GAAA,MAAAjG,EAAAjZ,QAAA,OAASA,MAAAiZ,EAAA9F,QAAO,GAEhBnT,MAAA,cAAUA,MAAA,yBAAmBA,oCA8BrBA,MAAA,mBAIIA,MAAA,GACJA,kCAHIA,MAAA,QAAAmgB,GAEAngB,MAAA,GAAAA,MAAA,IAAAmgB,EAAArc,cAAAqc,EAAApc,KAAA,wFArBhB/D,MAAA,WAAAA,CAGC,WACGA,MAAA,MAAoBA,QACpBA,MAAA,sBAAAA,CAAoD,mBAI5CA,MAAA,yBAAA8Y,GAAA9Y,MAAA2a,GAAA,MAAAC,EAAA5a,QAAA,OAAAA,MAAA4a,EAAArS,SAAAuQ,EAAA,EAAA9Y,CAAsB,yBAAA8Y,GAAA9Y,MAAA2a,GAAA,MAAAG,EAAA9a,QAAA,OAG9BA,MAAA8a,EAAAvO,WAAA,CAAAuD,QAAA,MAAAgJ,EAAA,KAAAA,EAAAxX,KAGlB,GAE0BtB,MAAA,EAAAogB,EAAA,sCAMJpgB,oCAdIA,MAAA,GAAAA,MAAA,UAAAqB,EAAAkH,SAAAvI,CAAsB,iBAAAA,MAAA,EAAAqgB,IASFrgB,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAqB,EAAAmH,sCA0BpBxI,MAAA,mBAIIA,MAAA,GACJA,kCAHIA,MAAA,QAAAsgB,EAAAhf,IAEAtB,MAAA,GAAAA,MAAA,IAAAsgB,EAAAxc,cAAAwc,EAAAvc,KAAA,8CArBhB/D,MAAA,WAAAA,CAGC,WACUA,MAAA,WAAKA,QACZA,MAAA,sBAAAA,CAAqC,mBAK7BA,MAAA,yBAAA8Y,GAAA9Y,MAAAmI,GAAA,MAAAC,EAAApI,QAAA,OAERA,MAAAoI,EAAAmE,WAAA,CAAAuD,QAAAgJ,GAAA1Q,EAAAG,SAAAjH,KAGlB,oBAE0BtB,MAAA,EAAAugB,EAAA,sCAMJvgB,0CAfIA,MAAA,GAAAA,MAAA,iBAAAwgB,EAAAxgB,MAAA,IAAAmH,EAAAmG,UAAA,KAAAkT,EAAA1Q,QAAA9P,CAAsC,YAAAmH,EAAAoB,SAAtCvI,CAAsC,iBAAAA,MAAA,EAAAqgB,IAUlBrgB,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAmH,EAAAsZ,gCAqBhCzgB,MAAA,WAAAA,CAA+D,qBAC3DA,MAAA,MAEAA,mDAGJA,MAAA,WAAAA,CAGC,WAHDA,CAGC,WAEOA,MAAA,MAAsBA,QACtBA,MAAA,qBAGIA,MAAA,yBAAA8Y,GAAA9Y,MAAAqI,GAAA,MAAAC,EAAAtI,QAAA,OAAiBA,MAAAsI,EAAAyD,KAAAE,WAAA,CAAA1L,KAAAuY,IAAiC,GAGrD9Y,UAELA,MAAA,WAAAA,CAA0B,WACtBA,MAAA,MAAoBA,QACpBA,MAAA,yBASJA,wCAjBQA,MAAA,GAAAA,MAAA,UAAAC,EAAA8L,KAAA0F,MAAAlR,KAAAP,CAA2B,iBAAAA,MAAA,EAAAqgB,GAA3BrgB,CAA2B,WAAAC,EAAAygB,UAU3B1gB,MAAA,GAAAA,MAAA,cAAA2gB,EAAA1gB,EAAA8L,KAAAzI,IAAA,cAAAqd,EAAAlP,MAAAzR,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,UAAhCA,CAAgC,WAAAC,EAAAygB,gFAiC5C1gB,MAAA,WAAAA,CAGC,YACwCA,MAAA,GAAUA,QAC/CA,MAAA,qBAIIA,MAAA,yBAAA8Y,GAAA,MAAA8H,EAAA5gB,MAAA6gB,GAAAzG,UAAA0G,EAAA9gB,MAAA,UAAiBA,MAAA8gB,EAAApP,WAAAkP,EAAA9H,GAAwB,oBAE5C9Y,uDAPoCA,MAAA,GAAAA,MAAA4gB,GAEjC5gB,MAAA,GAAAA,MAAA,mBAAA+gB,EAAA/gB,MAAA,IAAAghB,EAAA1T,UAAA,KAAAyT,EAAAlb,WAAA7F,MAAA,EAAAihB,IAAAtY,SAAAiY,GAAA5gB,CAEC,iBAAAA,MAAA,EAAAqgB,8BAdbrgB,MAAA,eAAAA,CAIC,UACGA,MAAA,MAAyCA,QACzCA,MAAA,EAAAkhB,EAAA,+BAaJlhB,8BAZyBA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAS,EAAAoF,oDAc7B7F,MAAA,WAAAA,CAGC,eAMOA,MAAA,mBAAAA,MAAAmhB,GAAA,MAAAC,EAAAphB,QAAA,OAASA,MAAAohB,EAAAjO,QAAO,GALpBnT,MAAA,MASAA,WAIL,IAAM4f,EAAoB,MAA3B,MAAOA,EAQT,YAAWrX,GACP,OAAOvG,KAAKU,KAAK6F,QACrB,CACA,YAAWA,CAASG,GAChB1G,KAAKU,KAAK6F,SAAWG,CACzB,CAOA,sBAAW2Y,GACP,QAASrf,KAAKK,UAAUiB,IAAI,+BAChC,CACA,iBAAWge,GACP,OACItf,KAAKqf,sBACHrf,KAAKK,UAAUiB,IAAI,0BAE7B,CAEA,YAAWie,GACP,SAAOjC,QACHkC,KACIje,KAAKC,MACLxB,KAAKK,UAAUiB,IAAI,+BAAiC,IAGhE,CAEA,YAAWod,GACP,OAAO1e,KAAKK,UAAUiB,IAAI,uBAC9B,CAEAf,YAEYkf,EACApC,EACA3c,EACAL,GAHAL,KAAAyf,cACAzf,KAAAqd,SACArd,KAAAU,OACAV,KAAAK,YA/CLL,KAAA0f,WAAY,EACH1f,KAAAsL,QAAUtL,KAAKqd,OAAO/R,QACtBtL,KAAA6D,SAAW7D,KAAKqd,OAAOxZ,SACvB7D,KAAAwG,UAAYxG,KAAKU,KAAKif,iBACtB3f,KAAAye,OAASze,KAAKU,KAAKkf,cACnB5f,KAAA+J,KAAO/J,KAAKqd,OAAOtT,KASnB/J,KAAAmR,MAAQ,IAAMnR,KAAKyf,YAAYI,UAC/B7f,KAAAuK,WAAckT,GAAMzd,KAAKqd,OAAO9S,WAAWkT,GAC3Czd,KAAA0P,WAAa,CAACgO,EAAG3N,IAAM/P,KAAKqd,OAAO3N,WAAWgO,EAAG3N,GACjD/P,KAAA8f,SAAYC,MAgCxB/f,KAAK0f,YAAc1f,KAAKyf,WAC5B,CAACvc,SAAAlD,KAAA,mBAAAmD,iBAnDQya,GAAoB5f,MAAAoF,KAAA,GAAApF,MAAAqF,KAAArF,MAAAsF,KAAAtF,MAAAuF,MAAA,EAAAL,SAAAlD,KAAA,UAAAggB,EAAAvc,IAAA,MAApBma,EAAoBla,UAAA,mBAAAI,MAAA,GAAAC,KAAA,GAAAC,OAAA,eAAA4E,+BArK2BC,yFAQPA,oFA0DrBA,iFA6CqBA,4EACjC,oCAGyCA,4EACrC,oCAtGQA,qFA+DiCA,qFAU7BA,uFAUAA,qFAmCiBA,iFA2BxCA,ulEA9KL7K,MAAA,UAAAA,CAEC,WAEOA,MAAA,EAAAiiB,EAAA,gBAUJjiB,QACAA,MAAA,UAAAA,MAAA,KAA4DA,QAC5DA,MAAA,WACJA,QACAA,MAAA,WAAAA,CAGC,cAHDA,CAGC,UAEOA,MAAA,KAA4CA,QAE5CA,MAAA,GAAAkiB,EAAA,gCA2BAliB,MAAA,GAAAmiB,EAAA,gCA4BAniB,MAAA,YAAAA,CAAkC,YAC9BA,MAAA,OAAgBA,QAChBA,MAAA,sBAKIA,MAAA,0BACJA,UAGJA,MAAA,GAAAoiB,EAAA,cAMApiB,MAAA,GAAAqiB,EAAA,cA2BJriB,QACAA,MAAA,gBAAAA,CAAqC,WACjCA,MAAA,6BAEAA,QACAA,MAAA,YAAAA,CAA+B,aAC3BA,MAAA,6BAEAA,QACAA,MAAA,sBAGIA,MAAA,yBAAA8Y,GAAA,OAAiB3S,EAAAoG,WAAA,CAAA4S,SAAArG,GAAgC,qBAGrD9Y,YAGRA,MAAA,GAAAsiB,EAAA,oCAoBJtiB,QACAA,MAAA,GAAAuiB,EAAA,gCA1JaviB,MAAA,GAAAA,MAAA,OAAAmG,EAAAub,WAWT1hB,MAAA,GAAAA,MAAA,YAAAmG,EAAA4F,MAMS/L,MAAA,GAAAA,MAAA,cAAAwiB,EAAAxiB,MAAA,MAAAmG,EAAAqC,YAAA,KAAAga,EAAAza,QA2BA/H,MAAA,GAAAA,MAAA,eAAA2gB,EAAA3gB,MAAA,MAAAmG,EAAAsa,SAAA,KAAAE,EAAA5Y,QAAA,GAgCG/H,MAAA,GAAAA,MAAA,KAAAmG,EAAAob,UAEAvhB,MAAA,GAAAA,MAAA,IAAAA,MAAA,8BAIFA,MAAA,GAAAA,MAAA,OAAAmG,EAAAmb,eAQDthB,MAAA,GAAAA,MAAA,QAAAmG,EAAA4F,KAAA0F,MAAAzI,SA6BLhJ,MAAA,GAAAA,YAAA,4BAAAA,MAAA,IAIIA,MAAA,GAAAA,YAAA,gCAAAA,MAAA,IAGIA,MAAA,GAAAA,MAAA,iBAAAyiB,EAAAziB,MAAA,MAAAmG,EAAAmH,UAAA,KAAAmV,EAAAtD,SAAAnf,CAAuC,iBAAAA,MAAA,GAAAqgB,IAU9CrgB,MAAA,GAAAA,MAAA,cAAA0iB,EAAA1iB,MAAA,MAAAmG,EAAAN,WAAA,KAAA6c,EAAA3a,QAoBJ/H,MAAA,GAAAA,MAAA,OAAAmG,EAAAub,ySAeA9B,CAAoB,0JC9JL5f,MAAA,WAAAA,CAGC,cACaA,MAAA,UAAIA,mCAElBA,MAAA,2CAIIA,MAAA,SAAA2iB,EAAAnc,OAAA,0BAGAxG,MAAA,oDA5BhBA,MAAA,UAAAA,CAKC,eAKOA,MAAA,yBAAA2iB,EAAA3iB,MAAA4iB,GAAAxI,UAAAU,EAAA9a,MAAA,UAASA,MAAA8a,EAAA+H,WAAAF,GAAgB,GAEzB3iB,MAAA,YAGIA,MAAA,EAAA8iB,EAAA,cAMA9iB,MAAA,EAAA+iB,EAAA,cAMA/iB,MAAA,EAAAgjB,EAAA,0BAAAhjB,OAMJA,QACAA,MAAA,WAAAA,CAA6C,aAErCA,MAAA,GACJA,QACAA,MAAA,YAAAA,CAAiD,kBACjBA,MAAA,YAAKA,QACjCA,MAAA,WACIA,MAAA,IAKJA,cAIZA,MAAA,gBAMIA,MAAA,yBAAA2iB,EAAA3iB,MAAA4iB,GAAAxI,UAAA6I,EAAAjjB,MAAA,UAASA,MAAAijB,EAAA/E,UAAAjZ,KAAA0d,GAAoB,GAE7B3iB,MAAA,eAAUA,MAAA,IAIRA,8DA1DNA,MAAA,eAAAW,EAAA0d,SAAAsE,EAAArhB,IAaatB,MAAA,GAAAA,MAAA,OAAAW,EAAAub,SAAAvT,SAAAga,EAAArhB,KAMAtB,MAAA,GAAAA,MAAA,aAAA2iB,EAAAnc,OAAA,KAAAmc,EAAAnc,OAAAuB,OAAA/H,CAA2B,WAAAiH,GAa5BjH,MAAA,GAAAA,MAAA,IAAA2iB,EAAA5e,MAAA4e,EAAArhB,IAAA,YAKItB,MAAA,GAAAA,MAAA,WAAA2iB,EAAAjS,KAAA,KAAAiS,EAAAjS,KAAA5M,gBAAA,MAAA6e,EAAAjS,KAAA,KAAAiS,EAAAjS,KAAA3M,OAAA,kBAcZ/D,MAAA,GAAAA,MAAA,YAAAW,EAAAuiB,YAAAP,EAAArhB,KAGUtB,MAAA,GAAAA,MAAAW,EAAAuiB,YAAAP,EAAArhB,IAAA,wDA9DtBtB,MAAA,UAIIA,MAAA,EAAAmjB,EAAA,+BAiEJnjB,+BA/DyBA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAS,EAAAkZ,kCAP7B3Z,MAAA,GACIA,MAAA,EAAAojB,EAAA,6BAsEJpjB,gDApESA,MAAA,GAAAA,MAAA,cAAAwgB,EAAAxgB,MAAA,IAAAI,EAAAuZ,QAAA,KAAA6G,EAAAzY,OAAA/H,CAA+B,WAAAqjB,0BAsEpCrjB,MAAA,YAIIA,MAAA,oBACAA,MAAA,UAAsBA,MAAA,gCAA0BA,iBADnCA,MAAA,GAAAA,MAAA,sCAKjBA,MAAA,WAAAA,CAGC,UAEOA,MAAA,0DACJA,WAKT,IAAMsjB,EAAiB,MAAxB,MAAOA,EAiBT/gB,YAAoB8c,GAAArd,KAAAqd,SAhBJrd,KAAAqc,OAAiB,GACjBrc,KAAAka,SAAmB,GACnBla,KAAAkZ,UAAsB,GACrBlZ,KAAAuhB,SAAW,IAAI1gB,MACfb,KAAAkc,UAAY,IAAIrb,MAEjBb,KAAA2X,SAAQhM,MAAc,CAClC3L,KAAKqd,OAAO/R,QACZtL,KAAKqd,OAAOnQ,sBACb3B,QACCY,KAAI,GAAIgR,YAAY3V,KAChBA,EAAE6F,OAAQkG,IAAO4J,GAAYnd,KAAKkhB,YAAY3N,EAAEjU,OAGxCU,KAAAoL,QAAUpL,KAAKqd,OAAOjS,OAEW,CAE1C8V,YAAYM,GACf,OAAOxhB,KAAKkZ,UAAUvS,SAAS6a,EACnC,CAEOX,WAAWjF,GACd5b,KAAKuhB,SAASte,KAAK2Y,EACvB,CAAC1Y,SAAAlD,KAAA,mBAAAmD,iBAzBQme,GAAiBtjB,MAAAoF,KAAA,EAAAF,SAAAlD,KAAA,UAAA4c,EAAAnZ,IAAA,MAAjB6d,EAAiB5d,UAAA,gBAAAC,OAAA,CAAA0Y,OAAA,SAAAnC,SAAA,WAAAhB,UAAA,aAAAtV,QAAA,CAAA2d,SAAA,WAAArF,UAAA,aAAApY,MAAA,GAAAC,KAAA,EAAAC,OAAA,eAAA4E,aAjGKC,oFACmBA,4EAC1C,wqDAFJ7K,MAAA,UAAAA,MAAA,KAAkCA,QAClCA,MAAA,SAAAA,MAAA,sBAEAA,QACAA,MAAA,EAAAyjB,EAAA,uCAwEAzjB,MAAA,EAAA0jB,EAAA,yBAAA1jB,OASAA,MAAA,EAAA2jB,EAAA,yBAAA3jB,sCAlFAA,MAAA,GAAAA,OAAA,OAAAwgB,EAAAxgB,MAAA,IAAAmG,EAAAwT,QAAA,KAAA6G,EAAAzY,SAAA,GAAA/H,MAAA,GACeA,MAAA,GAAAA,MAAA,gBAAA+gB,EAAA/gB,MAAA,IAAAmG,EAAAiH,WAAA2T,EAAAhZ,QAAA/H,CAAkC,WAAA2d,uPA6F5C2F,CAAiB,gOCtEVtjB,MAAA,mBAIIA,MAAA,GACJA,kCAHIA,MAAA,QAAA4jB,GAEA5jB,MAAA,GAAAA,MAAA,IAAA4jB,EAAA9f,cAAA8f,EAAA7f,KAAA,gDAiCjB,IAAM8f,EAAiB,MAAxB,MAAOA,UAAyB9hB,KAiBlC,WAAWwU,GACP,OAAOvU,KAAK2B,OAAOsE,QAAU,EACjC,CAgEA1F,YACY8c,EACAhd,EACAK,GAERC,QAJQX,KAAAqd,SACArd,KAAAK,YACAL,KAAAU,OArFIV,KAAA8hB,cAAwB,EACxB9hB,KAAAqc,OAAS,GACRrc,KAAAuhB,SAAW,IAAI1gB,MAEhBb,KAAA2X,MAAQ3X,KAAKqd,OAAOnQ,oBACpBlN,KAAAoL,QAAUpL,KAAKqd,OAAOjS,QAE/BpL,KAAA+hB,KAAO,EACP/hB,KAAAgiB,OAAS,CAAEC,EAAG,GAAKC,EAAG,IAGrBliB,KAAAmiB,QAAU,IAAItX,IAAgB,GAEtB7K,KAAAye,OAASze,KAAKU,KAAKkf,cACnB5f,KAAAuK,WAAckT,GAAMzd,KAAKqd,OAAO9S,WAAWkT,GAM3Czd,KAAAoiB,QAAUpiB,KAAKqd,OAAOnQ,oBAAoB3B,QACtDY,KAAKwL,GACDA,EAAMxL,IAAKyP,KACPtc,GAAIsc,EAAK3V,QAAU2V,EAAKtc,GACxB+iB,OAAQ,CAAC,WAAY,WACrBC,SAAUA,IAAMtiB,KAAK6gB,WAAWjF,QAK5B5b,KAAA6D,YAAW8H,MAAc,CACrC3L,KAAKqd,OAAO3R,UACZ1L,KAAKqd,OAAOnQ,sBACb3B,QACCY,KAAI,EAAEwL,KACK3X,KAAKK,UAAUiB,IAAI,uBACpB,GACAqW,EAAMxL,IAAKyP,KACPhd,SAAUgd,EAAKtc,GACf8H,QAASmb,IACTC,WAAW,EACXC,UAAU,EACV1f,KAAM,CACFzD,GAAIsc,EAAK3V,QAAU2V,EAAKtc,GACxB2G,OAAQ2V,EAAK7Z,KACbA,KAAM6Z,EAAK7Z,MAAQ6Z,EAAK3V,OACxBsH,KAAMvN,KAAKqd,OAAO1T,iBAAiBiS,EAAKtc,KAE5CojB,QAAS,QAKX1iB,KAAA2iB,UAAShX,MAAc,CACnC3L,KAAKqd,OAAO3R,UACZ1L,KAAKqd,OAAOnQ,oBACZlN,KAAKmiB,UACN5W,QACCY,KAAI,EAAEwL,EAAOiL,KACTjL,EAAMkL,OAAO,CAACF,EAAQ/G,KAClB,MAAMkH,EAAU9iB,KAAKK,UAAUiB,IAAI,uBAAyB,GACtD9B,EACFQ,KAAKqc,SAAWT,EAAKtc,GACf,SACAsjB,EAAWnc,KAAMe,GAAMA,EAAElI,KAAOsc,EAAKtc,IACrC,OACAU,KAAKqd,OAAO1T,iBAAiBiS,EAAKtc,IAClC,OACA,eACVqjB,SAAO,IAAI/G,EAAK3V,QAAU2V,EAAKtc,MAAQ,CACnCyjB,KACe,WAAXvjB,EACM,UACAsjB,EAAQ,QAAQtjB,MAChBsjB,EAAQ,GAAGtjB,MACXwjB,IAAgB,GAAGxjB,MAE1BmjB,GACR,KAUX,CAEO3hB,WACHhB,KAAKiB,aACD,iBACAjB,KAAKqd,OAAO/R,QAAQnK,UAAU,EAAG2M,cACzBA,GAAWA,IAAY9N,KAAK2B,OAAOrC,KACnCU,KAAK2B,MAAQ3B,KAAKU,KAAK+d,OAAOhY,KAAMe,GAAMA,EAAElI,KAAOwO,GAAO,IAItE9N,KAAKiB,aACD,gBACAjB,KAAKye,OAAOtd,UAAWsd,IACdA,EAAOhY,KAAMe,GAAMA,EAAElI,KAAOU,KAAK2B,OAAOrC,MACzCU,KAAK2B,MAAQ8c,EAAO,GACpBze,KAAKuK,WAAW,CAAEuD,QAAS9N,KAAK2B,OAAOrC,KAAI,GAI3D,CAEOmd,YAAYC,GACXA,EAAQL,QAAQrc,KAAKmiB,QAAQ1X,KAAKlJ,KAAKC,MAC/C,CAEOqf,WAAWjF,GACd5b,KAAKuhB,SAASte,KAAK2Y,EACvB,CAEOqH,QAAQC,GACXljB,KAAK+hB,KAAOxf,KAAK4gB,IAAI,GAAK5gB,KAAK6gB,IAAI,GAAIF,GAC3C,CAEOG,WACHrjB,KAAK+hB,KAAO,EACZ/hB,KAAKgiB,OAAS,CAAEC,EAAG,GAAKC,EAAG,GAC/B,CAAChf,SAAAlD,KAAA,mBAAAmD,iBA9HQ0e,GAAgB7jB,MAAAoF,KAAApF,MAAAqF,MAAArF,MAAAsF,MAAA,EAAAJ,SAAAlD,KAAA,UAAAsjB,EAAA7f,IAAA,MAAhBoe,EAAgBne,UAAA,eAAAC,OAAA,CAAAme,aAAA,eAAAzF,OAAA,UAAAzY,QAAA,CAAA2d,SAAA,YAAA1d,SAAA,CAAA7F,aAAA8F,MAAA,GAAAC,KAAA,GAAAC,OAAA,qpBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAhDrBlG,MAAA,UAAAA,CAA6D,qBAA7DA,CAA6D,kBAOjDA,MAAA,yBAAA8Y,GAAA,OAAA3S,EAAAxC,MAAAmV,CAAA,EAAA9Y,CAAmB,yBAAA8Y,GAAA,OAEF3S,EAAAoG,WAAA,CAAAuD,QAAAgJ,EAAAxX,IAAkC,GAEnDtB,MAAA,EAAAulB,EAAA,qCAMJvlB,YAGRA,MAAA,UAAAA,CAAoC,aAG5BA,MAAA,sBAAA8Y,GAAA,OAAA3S,EAAA4d,KAAAjL,CAAA,EAAA9Y,CAAe,wBAAA8Y,GAAA,OAAA3S,EAAA6d,OAAAlL,CAAA,sDAKlB9Y,UAELA,MAAA,WAAAA,CAGC,eACkCA,MAAA,0BAASmG,EAAA8e,QAAe,IAAf9e,EAAA4d,KAAmB,GACvD/jB,MAAA,eAAUA,MAAA,cAAOA,UAErBA,MAAA,YACAA,MAAA,eAAgCA,MAAA,0BAASmG,EAAA8e,QAAA9e,EAAA4d,MAAgB,EAAI,KAAK,GAC9D/jB,MAAA,eAAUA,MAAA,eAAQA,UAEtBA,MAAA,YACAA,MAAA,gBAA6BA,MAAA,0BAASmG,EAAAkf,UAAU,GAC5CrlB,MAAA,eAAUA,MAAA,cAAOA,mBApCbA,MAAA,GAAAA,MAAA,UAAAmG,EAAAxC,MAAA3D,CAAmB,iBAAAA,MAAA,GAAAmB,IAKCnB,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAmG,EAAAsa,SAUxBzgB,MAAA,GAAAA,MAAA,MAAAmG,EAAAoQ,QAAAvW,CAAe,OAAAmG,EAAA4d,KAAf/jB,CAAe,SAAAmG,EAAA6d,OAAfhkB,CAAe,WAAAA,MAAA,KAAAmG,EAAAN,UAAf7F,CAAe,SAAAA,MAAA,KAAAmG,EAAAwe,QAAf3kB,CAAe,UAAAA,MAAA,KAAAmG,EAAAie,sTA0BlBP,CAAiB,kNCxBV7jB,MAAA,kBAKIA,MAAA,qBAAA8Y,GAAA9Y,MAAAwH,GAAA,MAAAvH,EAAAD,QAAA,OAAaA,MAAAC,EAAA+a,gBAAAlC,GAAuB,EAApC9Y,CAAqC,oBAAA8Y,GAAA9Y,MAAAwH,GAAA,MAAA7G,EAAAX,QAAA,OAAAA,MAAAW,EAAA6kB,UAAA1M,EAAA,GAGxC9Y,gCANGA,MAAA,eAAAI,EAAAolB,UAAA,KAAAplB,EAAAolB,UAAAlkB,GAAAtB,CAAwB,WAAAI,EAAAqlB,aAAxBzlB,CAAwB,YAAAI,EAAA8a,oDAwBhClb,MAAA,eAMIA,MAAA,mBAAAA,MAAAkf,GAAA,MAAAjG,EAAAjZ,QAAA,OAAAA,MAAAiZ,EAAAuM,UAAqB,KAAI,GAN7BxlB,MAAA,MAUAA,iDAuDJA,MAAA,iBAIIA,MAAA,oBAAA8Y,GAAA9Y,MAAAiH,GAAA,MAAAR,EAAAzG,QAAA,OAAAA,MAAAyG,EAAA+e,UAAA1M,EAAA,GAEJ9Y,gCAJIA,MAAA,iBAAA4H,EAAA4d,UAAAxlB,CAA4B,eAAA4H,EAAA4d,UAAA,KAAA5d,EAAA4d,UAAAlkB,KA/IrC,MAAM+Z,EAAe,kBAuJrB,IAAMW,EAAwB,MAA/B,MAAOA,EAKT,gBAAWyJ,GACP,OAAOzjB,KAAKka,SAAS/N,IAAK3E,GAAMA,EAAElI,IAAIkS,KAAK,IAC/C,CAEA,aAAW0H,GACP,OAAOlZ,KAAKK,UAAUiB,IAAc+X,IAAiB,EACzD,CAEA9Y,YACYmjB,EACArjB,EACAsjB,EAEA7L,GAJA9X,KAAA0jB,cACA1jB,KAAAK,YACAL,KAAA2jB,cAEA3jB,KAAA8X,QAhBL9X,KAAAka,SAA2B,GAC3Bla,KAAAwJ,KAAO,OAoBVxJ,KAAKka,SAAW,IAAKpC,EAAMyB,OAAS,IACpCvZ,KAAK2jB,YAAYpZ,WAAWuN,EAAMxM,QACtC,CAEOsY,WAAWtkB,GACd,OAAOA,GAAMU,KAAKyjB,aAAa9c,SAASrH,EAC5C,CAEOukB,YAAYtb,EAAoBhD,GACnC,MAAM8G,EAAOrM,KAAKka,SAAS7M,OAAQ7F,GAAMA,EAAElI,KAAOiJ,EAAKjJ,IACnDiG,GAAO8G,EAAKG,KAAKjE,GACrBvI,KAAKka,SAAW7N,GACXrM,KAAK8X,MAAMxM,QAAQ0D,OAASzJ,GAAOvF,KAAK0jB,YAAYvS,MAAM,CAAC5I,GACpE,CAEOyQ,gBAAgBzQ,GACnB,MAAMgS,EAAWva,KAAKkZ,UACHqB,EAAS5T,SAAS4B,EAAKjJ,IAOtCU,KAAKK,UAAUma,gBACXnB,EACAkB,EAASlN,OAAQ7F,GAAMA,IAAMe,EAAKjJ,KAPtCU,KAAKK,UAAUma,gBAAgBnB,EAAc,IACtCkB,EACHhS,EAAKjJ,IAQjB,CAAC4D,SAAAlD,KAAA,mBAAAmD,iBApDQ6W,GAAwBhc,MAAAoF,MAAApF,MAAAqF,MAAArF,MAAAsF,KAAAtF,MAiBrB0K,MAAe,EAAAxF,SAAAlD,KAAA,UAAA2I,EAAAlF,IAAA,MAjBlBuW,EAAwBtW,UAAA,wBAAAI,MAAA,GAAAC,KAAA,GAAAC,OAAA,eAAA4E,qBA1IZC,sFAkFRA,wFAgBwCA,wFAGNA,4EAC/B,kDAc2BA,4EACnB,oCA9CXA,8mEA9ET7K,MAAA,UAAAA,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,MAAA,WAAKA,UAEnBA,MAAA,QAAAA,MAAA,KAAkBA,QAClBA,MAAA,UAAAA,CAA4D,cAOpDA,MAAA,0BAAAmG,EAAAqF,KAAgB,KAAK,GAErBxL,MAAA,WACJA,QACAA,MAAA,eAMIA,MAAA,0BAAAmG,EAAAqF,KAAgB,MAAM,GAEtBxL,MAAA,aACJA,YAGRA,MAAA,aAGIA,MAAA,qBAGAA,MAAA,WAAAA,CAEC,8BAGOA,MAAA,sBAAA8Y,GAAA,OAAA3S,EAAAqF,KAAAsN,CAAA,GACH9Y,QACDA,MAAA,GAAA8lB,EAAA,oBASJ9lB,QACAA,MAAA,sBAOIA,MAAA,wBAAA8Y,GAAA,OAAgB3S,EAAA0f,YAAA1f,EAAAqf,UAAA1M,EAA8B,EAA9C9Y,CAA+C,8BAElCmG,EAAA6U,gBAAA7U,EAAAqf,UAA0B,EAFvCxlB,CAA+C,0BAAAmG,EAAAqf,UAG1B,IAAI,GAC5BxlB,UAELA,MAAA,gBAGIA,MAAA,GAAA+lB,EAAA,iBAWA/lB,MAAA,gBAAAA,MAAA,OAUAA,UAEJA,MAAA,eAAAA,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBASqCA,MAAA,iBAAUA,QACpCA,MAAA,aAAAA,MAAA,OAA6CA,YAGrDA,MAAA,WAAAA,MAAA,OAEAA,QACAA,MAAA,gBAMIA,MAAA,0BAASmG,EAAA0f,YAAA1f,EAAAqf,WAAwBrf,EAAAyf,WAAA,MAAAzf,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,IAA0B,GAE3DtB,MAAA,YAAAA,CAA+B,kBACDA,MAAA,IAExBA,QACFA,MAAA,aAAAA,MAAA,OAMAA,gBAKhBA,MAAA,GAAAgmB,EAAA,0BAAAhmB,+BAxHgBA,MAAA,GAAAA,MAAA,kBAAAmG,EAAAqF,MAUAxL,MAAA,GAAAA,MAAA,mBAAAmG,EAAAqF,MAkBAxL,MAAA,GAAAA,MAAA,OAAAmG,EAAAqF,MAGCxL,MAAA,GAAAA,MAAA,gBAAAmG,EAAAqF,KAAAxL,CAAuB,WAAA0B,GAY5B1B,MAAA,GAAAA,MAAA,UAAAmG,EAAAqf,UAAAxlB,CAA2B,UAAAmG,EAAAqf,WAF3BxlB,MAAA,OAAAmG,EAAAqf,UAAAxlB,CAAkB,SAAAmG,EAAAsf,aAAA9c,SAAA,MAAAxC,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,IAAlBtB,CAAkB,mBAAAmG,EAAAqF,KAAlBxL,CAAkB,MAAAmG,EAAAqf,WAAArf,EAAA+U,UAAAvS,SAAA,MAAAxC,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,KAoBjBtB,MAAA,GAAAA,MAAA,OAAAmG,EAAAqf,WAWDxlB,MAAA,GAAAA,MAAA,OAAAmG,EAAAqf,WADAxlB,MAAA,mBAAAmG,EAAA+V,UAeAlc,MAAA,GAAAA,MAAA,mBAAAmG,EAAA+V,UAUJlc,MAAA,GAAAA,MAAAmG,EAAA+V,SAAAnU,QAAA/H,MAAA,IAMIA,MAAA,GAAAA,MAAA,UAAAmG,EAAAyf,WAAA,MAAAzf,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,KADAtB,MAAA,YAAAmG,EAAAqf,WAK8BxlB,MAAA,GAAAA,MAAAmG,EAAAyf,WAAA,MAAAzf,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,IAAA,gBAS1BtB,MAAA,GAAAA,MAAAmG,EAAAyf,WAAA,MAAAzf,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,IAAA,wCAAAtB,MAAA,qFAgBXgc,CAAwB,mRCrHLhc,MAAA,mBAIIA,MAAA,GACJA,kCAHIA,MAAA,QAAAimB,EAAA3kB,IAEAtB,MAAA,GAAAA,MAAA,IAAAimB,EAAAniB,cAAAmiB,EAAAliB,KAAA,wFAnBhB/D,MAAA,WAAAA,CAAyD,cACrDA,MAAA,MACYA,MAAA,UACZA,gBACAA,MAAA,sBAAAA,CAAqC,mBAG7BA,MAAA,yBAAA8Y,GAAA9Y,MAAA4iB,GAAA,MAAA9H,EAAA9a,MAAA,UAEhCA,MAAA8a,EAAA/O,KAAAE,WAAA,CAAApI,MAAA,CAAAiV,KACE,GAK8B9Y,MAAA,EAAAkmB,EAAA,sCAMJlmB,qCAfIA,MAAA,GAAAA,MAAA,UAAAyG,EAAAsF,KAAA0F,MAAA5N,MAAA,GAAA7D,CAA+B,iBAAAA,MAAA,EAAAmmB,IAUXnmB,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAyG,EAAA+B,qDA6DpBxI,MAAA,mBAGIA,MAAA,yBAAAomB,EAAApmB,MAAAqmB,GAAAjM,UAAA4G,EAAAhhB,MAAA,UAASA,MAAAghB,EAAAsF,WAAAF,GAAgB,GAEzBpmB,MAAA,WAAAA,CAAyC,SAChCA,MAAA,GAAeA,QACpBA,MAAA,YACIA,MAAA,GAMJA,wCAZJA,MAAA,QAAAomB,EAAAriB,MAIS/D,MAAA,GAAAA,MAAAomB,EAAAriB,MAED/D,MAAA,GAAAA,MAAA,IAAAomB,EAAAhkB,MAAA,IAAAgkB,EAAAG,QAAA,KAAAH,EAAAG,QAAA,iDAgCZvmB,MAAA,mBAGIA,MAAA,yBAAAwmB,EAAAxmB,MAAAymB,GAAArM,UAAAsM,EAAA1mB,MAAA,UAASA,MAAA0mB,EAAAJ,WAAAE,GAAgB,GAEzBxmB,MAAA,WAAAA,CAAyC,SAChCA,MAAA,GAAeA,QACpBA,MAAA,YACIA,MAAA,GAMJA,wCAZJA,MAAA,QAAAwmB,EAAApkB,OAISpC,MAAA,GAAAA,MAAAwmB,EAAAziB,MAED/D,MAAA,GAAAA,MAAA,IAAAwmB,EAAApkB,MAAA,IAAAokB,EAAAD,QAAA,KAAAC,EAAAD,QAAA,iDAlExBvmB,MAAA,GACIA,MAAA,WAAAA,CAA2B,cACvBA,MAAA,MACiBA,MAAA,UAAcA,gBAE/BA,MAAA,sBAAAA,CAAqC,cAM7BA,MAAA,mBAAAA,MAAA2mB,GAAA,MAAAC,EAAA5mB,MAAA,UAEjCA,MAAA4mB,EAAAC,eAAAD,EAAA7a,KAAA0F,MAAAjH,YACD,GAR8BxK,UAWJA,MAAA,8BACIA,MAAA,EAAA8mB,EAAA,qBAiBJ9mB,UAEJA,MAAA,YAAAA,CAA2B,eACvBA,MAAA,OACiBA,MAAA,WACjBA,gBACAA,MAAA,uBAAAA,CAAqC,eAO7BA,MAAA,mBAAAA,MAAA2mB,GAAA,MAAAI,EAAA/mB,MAAA,UAE/BA,MAAA+mB,EAAAF,eAAAE,EAAAhb,KAAA0F,MAAA7P,UACH,GAT8B5B,QAWAA,MAAA,gBAAAA,MAAA,OAC8BA,UAGlCA,MAAA,+BACIA,MAAA,GAAAgnB,EAAA,qBAiBJhnB,UAEJA,MAAA,YAAAA,CAA2B,eACvBA,MAAA,OAAsCA,QACtCA,MAAA,wBACIA,MAAA,eAMJA,UAERA,wDA1EgBA,MAAA,GAAAA,MAAA,kBAAAsZ,GAKiBtZ,MAAA,GAAAA,MAAA,UAAAgZ,EAAAiO,mBAgCjBjnB,MAAA,GAAAA,MAAA,kBAAAmI,GAQiBnI,MAAA,GAAAA,MAAA,UAAAgZ,EAAAiO,4DA3HrCjnB,MAAA,aAKIA,MAAA,EAAAknB,EAAA,cAwBAlnB,MAAA,WAAAA,CAA2B,cACvBA,MAAA,MAA2BA,MAAA,UAAcA,gBACzCA,MAAA,qBAIJA,QACAA,MAAA,WAAAA,CAAyC,WAAzCA,CAAyC,cAEjCA,MAAA,OACcA,MAAA,WACdA,gBACAA,MAAA,sBAGIA,MAAA,yBAAA8Y,GAAA9Y,MAAAmnB,GAAA,MAAAC,EAAApnB,MAAA,UAE7BA,MAAAonB,EAAArb,KAAAE,WAAA,CAAA1L,KAAAuY,IACD,GAG2B9Y,UAELA,MAAA,YAAAA,CAAwC,eACpCA,MAAA,OACaA,MAAA,WAAcA,gBAE3BA,MAAA,0BAMJA,UAEJA,MAAA,GAAAqnB,EAAA,uBAyFArnB,MAAA,YAAAA,CAA2B,eACvBA,MAAA,OAAyCA,QACzCA,MAAA,wBACIA,MAAA,eAMJA,gDAhKJA,MAAA,YAAAc,EAAAiL,MAG4B/L,MAAA,GAAAA,MAAA,cAAAc,EAAA0H,UAAA,KAAA1H,EAAA0H,UAAAT,QAAA,GAsChB/H,MAAA,IAAAA,MAAA,UAAAc,EAAAiL,KAAA0F,MAAAlR,KAAAP,CAA2B,iBAAAA,MAAA,GAAAmmB,GAA3BnmB,CAA2B,WAAAc,EAAAiL,KAAA0F,MAAAzI,QAA3BhJ,CAA2B,WAAAc,EAAA4f,UAgB3B1gB,MAAA,GAAAA,MAAA,OAAAc,EAAAiL,KAAA0F,MAAAlR,KAAAP,CAAwB,WAAAc,EAAA4f,UAKrB1gB,MAAA,GAAAA,MAAA,QAAAc,EAAAwmB,SAAAtnB,CAAiB,WAAAwH,4CAvExCxH,MAAA,UAAAA,CAGC,UAHDA,CAGC,UAEOA,MAAA,KAAoDA,UAExDA,MAAA,EAAAunB,EAAA,gBAqKAvnB,MAAA,WAAAA,CAEC,eAMOA,MAAA,mBAAAA,MAAAwnB,GAAA,MAAAC,EAAAznB,MAAA,UAASA,MAAAynB,EAAAC,aAAY,GALzB1nB,MAAA,MASAA,qCAhLCA,MAAA,GAAAA,MAAA,OAAAiZ,EAAAlN,gCATb/L,MAAA,GACIA,MAAA,EAAA2nB,EAAA,8BA2LJ3nB,yCAzLSA,MAAA,GAAAA,MAAA,QAAAA,MAAA,IAAAI,EAAAgN,WAAAhN,EAAAwnB,aAAA5nB,CAA2C,WAAAqjB,2CAkMpCrjB,MAAA,8MAMAA,MAAA,wIAUIA,MAAA,8MAMAA,MAAA,yIA7BhBA,MAAA,WAAAA,CAGC,WAHDA,CAGC,WAEOA,MAAA,MAEIA,MAAA,EAAA6nB,EAAA,uBAMA7nB,MAAA,EAAA8nB,EAAA,uBAKJ9nB,gBACAA,MAAA,YACAA,MAAA,OAAAA,MAAA,MAEIA,MAAA,OACIA,MAAA,GAAA+nB,EAAA,uBAMA/nB,MAAA,GAAAgoB,EAAA,uBAKJhoB,0CAKJA,kBAEJA,MAAA,YAAAA,CAAiD,YAAjDA,CAAiD,gBAQrCA,MAAA,mBAAAA,MAAAioB,GAAA,MAAAC,EAAAloB,QAAA,OAASA,MAAAkoB,EAAAC,SAAQ,GAJrBnoB,MAAA,OAQAA,QACAA,MAAA,gBAIIA,MAAA,mBAAAA,MAAAioB,GAAA,MAAAG,EAAApoB,QAAA,OAAAA,MAAAooB,EAAAC,MAAgB,EAAK,GAJzBroB,MAAA,OAQAA,sCAvDeA,MAAA,GAAAA,MAAA,QAAAmH,EAAAmgB,UAMAtnB,MAAA,GAAAA,MAAA,OAAAmH,EAAAmgB,UAUItnB,MAAA,GAAAA,MAAA,QAAAmH,EAAAmgB,UAMAtnB,MAAA,GAAAA,MAAA,OAAAmH,EAAAmgB,UAUvBtnB,MAAA,GAAAA,OAAA,MAAAmH,EAAAoB,SAAA,KAAApB,EAAAoB,SAAAzE,gBAAA,MAAAqD,EAAAoB,SAAA,KAAApB,EAAAoB,SAAAxE,MAAA/D,CAAIA,MAAA,WAAAmH,EAAA4F,aAAA,KAAA5F,EAAA4F,aAAAxM,KAAA,cAAJP,CAAIA,MAAA,YAAAmH,EAAA4F,aAAA,KAAA5F,EAAA4F,aAAAxM,KAAA4G,EAAA3G,cAAJR,MAAA,0BA6BRA,MAAA,YAIIA,MAAA,oBACAA,MAAA,OAAAA,MAAA,MAA6BA,iBADhBA,MAAA,GAAAA,MAAA,yCAKjBA,MAAA,WAAAA,CAA8C,cAC1CA,MAAA,MAAuCA,MAAA,UAAcA,gBACrDA,MAAA,0BAIJA,8BAN2BA,MAAA,YAAAW,EAAAoL,MAInB/L,MAAA,GAAAA,MAAA,mBAOb,IAAMsoB,EAA2B,MAAlC,MAAOA,UAAmCvmB,KAa5C,YAAWulB,GACP,OAAOtlB,KAAKK,UAAUiB,IAAI,iCAC9B,CAEA,YAAWiF,GACP,OAAOvG,KAAKU,KAAK6F,QACrB,CAEA,QAAWwD,GACP,OAAO/J,KAAKumB,SAASxc,IACzB,CAEA,eAAWvL,GACP,OAAOwB,KAAKK,UAAU7B,WAC1B,CAEA,YAAWkgB,GACP,OAAO1e,KAAKK,UAAUiB,IAAI,uBAC9B,CAEAf,YACYgmB,EACAlmB,EACAK,GAERC,QAJQX,KAAAumB,WACAvmB,KAAAK,YACAL,KAAAU,OAnCKV,KAAAwmB,KAAO,IAAI3lB,MAErBb,KAAAqmB,MAAO,EAEErmB,KAAAoL,QAAUpL,KAAKumB,SAASnb,QACjCpL,KAAA4lB,cAAe,EACN5lB,KAAAwG,UAAYxG,KAAKU,KAAKif,iBAC/B3f,KAAA+K,aAAe/K,KAAKumB,SAASxb,aAC7B/K,KAAAymB,WAAa,EACbzmB,KAAA0mB,SAAW,GACX1mB,KAAAilB,kBAAoB,EA4B3B,CAEajkB,WAAQ,IAAA0G,EAAA1H,KAAA,SAAA2H,KAAA,YACjBD,EAAK2e,MAAO,EACZ3e,EAAK6e,SAAShW,sBACR7I,EAAKif,eACXjf,EAAKqC,KACAzI,IAAI,YACJslB,cAAc,CAACC,KAAWC,SAAUD,KAAWzmB,QACpD,MAAMsmB,EAAWhf,EAAKrH,UAAUiB,IAAI,qBAAuB,GAC3D,UAAWiH,KAAQme,EAAU,CACzB,MAAOtmB,EAAO2B,EAAMwiB,IAAWhc,EAAKwe,MAAM,KAC1Crf,EAAKgf,SAASla,KAAK,CAAEpM,QAAO2B,OAAMwiB,aAEtC7c,EAAKmd,eAAe,IACpBnd,EAAKzG,aACD,QACAyG,EAAKqC,KACAzI,IAAI,YACJ8I,aAAajJ,UAAWqG,GAAME,EAAKmd,eAAerd,KAE3DE,EAAKzG,aACD,OACAyG,EAAKqC,KACAzI,IAAI,cACJ8I,aAAajJ,UAAWqG,GAAME,EAAKmd,eAAerd,KAEvDE,EAAK4d,UACL5d,EAAKqC,KAAKE,WAAW,CAAErK,SAAU,uBAAyB,EA1B7C,EA2BrB,CAEO0kB,WAAW/b,GACdvI,KAAK+J,KAAKE,WAAW,CACjBrK,SAAU2I,EAAKnI,MACfoI,WAAYD,EAAKxG,KACjBwiB,QAAShc,EAAKgc,SAEtB,CAEOM,eAAexX,GAClB,MAAM0M,GAAK1M,GAAU,IAAInN,cACzBF,KAAKilB,kBAAoBjlB,KAAK0mB,SAASrZ,OACnC,EAAGjN,QAAO2B,OAAMwiB,aACZnkB,EAAMF,cAAcyG,SAASoT,IAC7BhY,EAAK7B,cAAcyG,SAASoT,IAC5BwK,EAAQrkB,cAAcyG,SAASoT,GAE3C,CAEOoM,SACHnmB,KAAKwmB,KAAKvjB,OACVjD,KAAKqmB,MAAO,CAChB,CAEaX,aAAU,IAAApU,EAAAtR,KAAA,SAAA2H,KAAA,YAEnB,GADA2J,EAAKvH,KAAK2G,oBAELY,EAAKvH,KAAK4G,OACVW,EAAKgU,WAAahU,EAAKvH,KAAK0F,MAAM3J,OAAOC,OAE1C,SAAOgC,MACH,gCACIwJ,MAAiBD,EAAKvH,MAAMyH,KAAK,OAAS,eAItD,MAAQ5R,WAAU4I,aAAY+b,WAAoBjT,EAAKvH,KAAK0F,MACtDuX,GAAkB,GAAGpnB,KAAY4I,KAAc+b,IAC/C0C,GAAe3V,EAAKjR,UAAUiB,IAAI,qBAAuB,GAC/DgQ,EAAKjR,UAAUma,gBAAgB,mBAAoB,IAC5CyM,GAAa5Z,OAAQ7F,KAAOA,GAAEb,SAAS/G,IAC1ConB,WAEG1V,EAAKgU,SAAWhU,EAAK4V,eAAiB5V,EAAK6V,cAClD7V,EAAKvG,aAAeuG,EAAKiV,SAASxb,mBAC5BuG,EAAKqV,eACXrV,EAAK+U,MAAO,CAAK,EAtBE,EAuBvB,CAEcM,eAAY,IAAAhU,EAAA3S,KAAA,SAAA2H,KAAA,kBAChBgL,EAAKjS,KAAK4O,YAAY/D,QAAKgE,KAAO/H,GAAMA,IAAIK,YAClD8K,EAAK4T,SAAShc,WAAW,CAAE7L,KAAM,YACjCiU,EAAK5I,KAAKE,WAAW,CACjBxC,aAAc,UACd5F,MAAO,CAAC8Q,EAAKjS,KAAK6F,UAAUjH,MAE5BqT,EAAK2S,UACL3S,EAAK5I,KAAKE,WAAW,CAAErK,SAAU,uBAAyB,EARxC,EAS1B,CAEcunB,cAAW,IAAAzT,EAAA1T,KAAA,SAAA2H,KAAA,YACrB,MAAM8H,EAAQiE,EAAK3J,KAAK0F,MACxBiE,EAAK3J,KAAKE,WAAW,CACjBlI,KAAM0N,EAAMjH,WACZ4e,UAAW,CACP,IAAIC,KAAK,CACLtlB,KAAM0N,EAAMjH,WACZpI,MAAOqP,EAAM7P,SACb4T,aAAc/D,EAAM8U,mBAI1B7Q,EAAK6S,SAASnV,WAAWtJ,MAAOiI,IAClChI,cAAYgI,GACNA,GACP,EAfkB,EAgBzB,CAEcmX,eAAY,IAAApT,EAAA9T,KAAA,SAAA2H,KAAA,YACtBmM,EAAK8R,cAAe,EACpB,MAAM5W,EAAQ,UAAOsY,MAAa,KAC5B7X,EAAQqE,EAAK/J,KAAK0F,MAClB3J,EAAS2J,EAAM3J,OACrBgO,EAAK2S,WAAa3gB,EAAOC,OACzB,UAAWwH,KAAQzH,EACVyH,EAAKnN,QACV0T,EAAK/J,KAAKE,WAAW,IACdwF,EACHhI,aAAc,UACd7H,SAAU2N,EAAKnN,MACfoI,WAAY+E,EAAKxL,KACjBwL,QAAMpN,QACNR,YAAaqP,EACbjN,KAAMwL,EAAKxL,KACX+D,OAAQ,GACRshB,UAAW,CACP,IAAIC,KAAK,CACLtlB,KAAMwL,EAAKxL,KACX3B,MAAOmN,EAAKnN,MACZoT,aAAcjG,EAAKgX,SAAWhX,EAAKiG,wBAIzCM,EAAKyS,SAASnV,WAAWtJ,MAAOiI,KAClChI,cAAYgI,IACZ+D,EAAK8R,cAAe,EACd7V,MAGd+D,EAAK8R,cAAe,CAAM,EA/BJ,EAgC1B,CAAC1iB,SAAAlD,KAAA,mBAAAmD,iBAnLQmjB,GAA0BtoB,MAAAoF,KAAApF,MAAAqF,MAAArF,MAAAsF,KAAA,EAAAJ,SAAAlD,KAAA,UAAAunB,EAAA9jB,IAAA,MAA1B6iB,EAA0B5iB,UAAA,0BAAAE,QAAA,CAAA4iB,KAAA,QAAA3iB,SAAA,CAAA7F,OAAA8F,MAAA,EAAAC,KAAA,EAAAC,OAAA,eAAA4E,0DAhRmBC,2FAiLrCA,iGAjJ0BA,+EAAI,oCAAO,sCAQDA,qFACf,qCAAO,uCAehBA,mFAAQ,qCAAO,wCAoGCA,6FApJEA,oFACf,oCAAO,uCAUEA,6FAkDZA,uFAAY,oCAAO,uCAmCQA,wFACf,qCAAO,wCAefA,uGAwBsBA,qFA2FlCA,6FASAA,oGAvDqBA,mGAEtB,8DACI,oCAIJ,oGACA,gEACI,6CAAwB,sCAG5B,oHAGIA,mGAEJ,sCACI,+DACI,oCAIJ,sGACA,iEACI,6CAAwB,sCAG5B,sGACJ,kDAEA,yCACA,uCACA,oDAmCAA,mGAKuBA,mFAAQ,oCAAO,qmFA5QtD7K,MAAA,EAAAwpB,EAAA,sBA6LAxpB,MAAA,EAAAypB,EAAA,2BAAAzpB,OAoEAA,MAAA,EAAA0pB,EAAA,yBAAA1pB,OASAA,MAAA,EAAA2pB,EAAA,yBAAA3pB,8BA1QeA,MAAA,QAAAmG,EAAAkiB,KAAAroB,CAAa,WAAA2d,gJAsRvB2K,CAA2B,6ICrR5BtoB,MAAA,cAcIA,MAAA,yBAAA4pB,EAAA5pB,MAAAqjB,GAAAjJ,UAAAjT,EAAAnH,QAAA,OAASA,MAAAmH,EAAA0iB,QAAA5kB,KAAA2kB,GAAoB,GAE7B5pB,MAAA,UAAAA,CAGO,UAHPA,CAGO,UAHPA,CAGO,WAaPA,MAAA,WAGIA,MAAA,GACJA,QAEAA,MAAA,WACJA,8CAlCIA,MAAA,oBAAA4pB,EAAAE,SAAA,KAAA9pB,CAAkD,iBAAA4pB,EAAAE,SAAA,KAAlD9pB,CAAkD,kBAAA4pB,EAAAE,SAAA,IAAAF,EAAAG,KAAA,MAAlD/pB,CAAkD,mBAAAI,EAAAoB,OAAAooB,GAAlD5pB,CAAkD,eAAA4pB,EAAAE,SAAA,IAAAF,EAAAG,KAAA,OADlD/pB,MAAA,aAAAI,EAAA8b,UAAA9b,EAAA8b,WAAA0N,EAAAtoB,IAQAtB,MAAA,aAAA4pB,EAAA7lB,KAAA/D,CAA0B,gBAAA4pB,EAAApZ,UAuBtBxQ,MAAA,GAAAA,MAAA,IAAA4pB,EAAA7lB,KAAA,mCAsBb,IAAMimB,EAAmB,MAA1B,MAAOA,EAST,WAAWC,GACP,IAAIA,EAAU,EACd,UAAWC,KAAUloB,KAAKmoB,MAAM9T,SAAW,GAAI,CAC3C,MAAM4N,EAAIiG,EAAOJ,SAAS,GAAKI,EAAOH,KAAK,GACvC9F,EAAIgG,IAASA,EAAUhG,GAE/B,OAAOgG,CACX,CAEA1nB,YAAoBF,GAAAL,KAAAK,YAhBJL,KAAAooB,YAAsC,CAClD,GAAM,OACN,EAAK,WAEOpoB,KAAAka,SAAW,GACVla,KAAA6nB,QAAU,IAAIhnB,KAWkB,CAE1CrB,OAAO0oB,GACV,MAAMpF,EAAU9iB,KAAKK,UAAUiB,IAAI,uBAAyB,GACtDmO,EAAQzP,KAAKooB,YAAYF,EAAO5oB,KAAO,OAC7C,OACIwjB,EAAQ,WAAWrT,MACnBqT,EAAQ,GAAGrT,MACXuT,IAAgB,GAAGvT,IAE3B,CAACvM,SAAAlD,KAAA,mBAAAmD,iBA5BQ6kB,GAAmBhqB,MAAAoF,MAAA,EAAAF,SAAAlD,KAAA,UAAA4c,EAAAnZ,IAAA,MAAnBukB,EAAmBtkB,UAAA,kBAAAC,OAAA,CAAAwkB,KAAA,OAAAC,YAAA,cAAAlO,SAAA,YAAAtW,QAAA,CAAAikB,QAAA,WAAA/jB,MAAA,EAAAC,KAAA,EAAAC,OAAA,oiCAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjExBlG,MAAA,WACIA,MAAA,GACJA,QACAA,MAAA,WAKIA,MAAA,EAAAqqB,EAAA,iBAwCJrqB,eA/CIA,MAAA,GAAAA,MAAA,UAAAmG,EAAAgkB,KAAA,KAAAhkB,EAAAgkB,KAAApmB,KAAA,KAIA/D,MAAA,GAAAA,MAAA,kCAAAmG,EAAA8jB,QAAA,SAAAjqB,CAA8D,sCAAAmG,EAAAgkB,KAAA,KAAAhkB,EAAAgkB,KAAAG,QAAA,UAIvCtqB,MAAA,GAAAA,MAAA,iBAAAmG,EAAAgkB,KAAA,KAAAhkB,EAAAgkB,KAAA9T,UAAArW,MAAA,EAAAmB,2SAwDtB6oB,CAAmB,2KC5BzB,IAAMO,EAAc,MAArB,MAAOA,EA2DFzI,SAASne,GACZ3B,KAAKwoB,OAAO/d,KAAK9I,EACrB,CAEApB,YAAoBG,GAAAV,KAAAU,OA9DZV,KAAAwoB,OAAS,IAAI3d,IAAgB,IAC7B7K,KAAAmiB,QAAU,IAAItX,IAAgB,GACtB7K,KAAAyoB,kBAA2C9c,MAAc,CACrE3L,KAAKU,KAAKkL,gBACV5L,KAAKmiB,UACN5W,QACC8B,KAAO,EAAE3G,OAAWA,IAAG,EACvBqF,KAAU,EAAErF,MAAG,EACXuN,OAAkBvN,EAAIpH,GAAI,CAAEyC,KAAM,YAAawJ,QAC3CyB,KAAW,OAAMhB,MAAG,IAAI0c,WAC3B,EAELvc,KAAK3E,MACD0M,MACI1M,EAAE2E,IAAK3E,GACHA,EAAE2M,SAASE,SAASpH,mBAAmBX,MACjC9E,EAAE2M,SAASE,SAASpH,QAAQd,IAAKgc,QAC1BA,EACHzZ,KAAMlH,EAAEkH,QAEZ,OAEb,EAELlD,KAAY,IAGAxL,KAAA2oB,SAAW3oB,KAAKyoB,eAAeld,QAC3CY,KAAKyc,IACD,MAAMvU,EAAoB,GAC1B,UAAW8T,KAAQS,EACfvU,EAAQ7H,QACD2b,EAAK9T,QAAQlI,IACX3E,QAEUA,EACH8M,QAAS6T,EAAK7oB,GACd2G,OAAQkiB,EAAKliB,OACb4iB,SAAUV,EAAKzZ,KAAKpP,OAKxC,OAAO+U,KAICrU,KAAA8oB,qBAAoBnd,MAAc,CAC9C3L,KAAKwoB,OACLxoB,KAAK2oB,WACNpd,QACCY,KAAI,EAAExK,EAAO0S,KACTA,EAAQhH,OACH7F,KAAQ7F,GAAS6F,EAAEqhB,WAAalnB,IAAU6F,EAAEgH,WAST,CAEnCua,YAAY1U,GAAqB,IAAA3M,EAAA1H,KAAA,SAAA2H,KAAA,kBAC1C,EAAMqhB,OAAethB,EAAKhH,KAAK6F,SAASjH,GAAI,CACxCyC,KAAM,UACNpC,YAAa,GACbsN,QAASoH,IAEb3M,EAAKya,QAAQ1X,KAAKlJ,KAAKC,MAAO,EANY,EAO9C,CAAC0B,SAAAlD,KAAA,mBAAAmD,iBAxEQolB,GAAcvqB,MAAAoF,KAAA,EAAAF,SAAAlD,KAAA,WAAAipB,EAAAnU,IAAA,OAAdyT,EAAcxT,QAAdwT,EAAcvT,UAAAC,WAFX,gBAEHsT,CAAc,kJCpBXvqB,MAAA,6CACIA,MAAA,SAAA4H,EAAAwU,MAAA5V,4GAXZxG,MAAA,GACIA,MAAA,eASIA,MAAA,EAAAkrB,EAAA,wBAKAlrB,MAAA,cAIIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAvH,EAAAD,QAAA,OAASA,MAAAC,EAAAkT,MAAAlO,OAAY,GAGrBjF,MAAA,cAAUA,MAAA,gBAAUA,UAExBA,MAAA,cAMIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAA7G,EAAAX,QAAA,OAASA,MAAAW,EAAAud,UAAAjZ,OAAgB,GAGzBjF,MAAA,cAAUA,MAAA,GAERA,YAGVA,MAAA,UAAAA,CAAsD,eAAtDA,CAAsD,WAG1CA,MAAA,IACJA,UAEJA,MAAA,SACAA,MAAA,eAAAA,CAAmC,YAC/BA,MAAA,OAA4CA,QAC5CA,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,aAAMA,QAChBA,MAAA,QAAAA,MAAA,OAAmCA,UAEvCA,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,mBAAYA,QACtBA,MAAA,QACIA,MAAA,IACJA,UAEJA,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,YAAKA,QACfA,MAAA,QACIA,MAAA,IAKJA,YAGRA,MAAA,SACAA,MAAA,gBAAAA,CAAsC,YAClCA,MAAA,OAAoDA,QACpDA,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,aAAMA,QAChBA,MAAA,QAAAA,MAAA,OAAsBA,UAE1BA,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,iBAAUA,QACpBA,MAAA,QAAAA,MAAA,OAA0BA,UAE9BA,MAAA,YAAAA,CAAyC,eAC3BA,MAAA,WAAIA,QACdA,MAAA,QAAAA,MAAA,OAAkBA,YAG1BA,MAAA,iBAIIA,MAAA,yBAMJA,UAEJA,MAAA,YAAAA,CAA2D,gBAMnDA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAyR,EAAAjZ,QAAAiZ,SAAAoF,QAAApF,EAAAoF,OAA2Bre,MAAAiZ,EAAAqF,aAAArZ,KAAAgU,EAAAoF,QAAyB,GAEpDre,MAAA,YAAAA,CAA8C,kBACfA,MAAA,IAEzBA,QACFA,MAAA,QACIA,MAAA,IACJA,cAIhBA,gCA9GQA,MAAA,GAAAA,MAAA,gBAAAI,EAAAgc,MAAA5V,OAAA,KAAApG,EAAAgc,MAAA5V,OAAAuB,OAAA/H,CAAsC,aAAAI,EAAAgc,MAAA5V,OAAA,KAAApG,EAAAgc,MAAA5V,OAAAuB,OAAtC/H,CAAsC,iBAAAI,EAAAgc,MAAA5V,QAAApG,EAAAgc,MAAA5V,OAAAuB,QAAtC/H,CAAsC,eAAAI,EAAAgc,MAAA5V,QAAApG,EAAAgc,MAAA5V,OAAAuB,QAAtC/H,CAAsC,0BAAAI,EAAAgc,MAAA5V,QAAApG,EAAAgc,MAAA5V,OAAAuB,SAQjC/H,MAAA,GAAAA,MAAA,aAAAI,EAAAgc,MAAA5V,OAAA,KAAApG,EAAAgc,MAAA5V,OAAAuB,QAgBD/H,MAAA,GAAAA,MAAA,oBAAAI,EAAAme,IAAAve,CAA+B,WAAAI,EAAAme,KAKrBve,MAAA,GAAAA,MAAAI,EAAAme,IAAA,8BAQNve,MAAA,GAAAA,MAAA,IAAAI,EAAAgc,MAAAtY,cAAA1D,EAAAgc,MAAArY,KAAA,KAQmC/D,MAAA,GAAAA,MAAAI,EAAAgc,MAAAH,UAAAjc,MAAA,IAK/BA,MAAA,GAAAA,MAAA,WAAAI,EAAAuD,MAAA,KAAAvD,EAAAuD,MAAAG,gBAAA,MAAA1D,EAAAuD,MAAA,KAAAvD,EAAAuD,MAAAI,MAAA,KAMA/D,MAAA,GAAAA,MAAA,WAAAI,EAAAmI,SAAA,KAAAnI,EAAAmI,SAAA8C,WAAA,MAAAjL,EAAAmI,SAAA,KAAAnI,EAAAmI,SAAAzE,gBAAA,MAAA1D,EAAAmI,SAAA,KAAAnI,EAAAmI,SAAAxE,MAAA,KA8BJ/D,MAAA,IAAAA,MAAA,MAAAI,EAAAmW,QAAAvW,CAAe,WAAAI,EAAAyF,SAAf7F,CAAe,UAAAA,MAAA,GAAAqgB,IAUnBrgB,MAAA,GAAAA,MAAA,UAAAI,EAAAie,QAK+Bre,MAAA,GAAAA,MAAAI,EAAAie,OAAA,gBAIvBre,MAAA,GAAAA,MAAA,IAAAI,EAAAie,OAAA,+DAOhBre,MAAA,WAAAA,CAGC,UACGA,MAAA,MAEAA,WAiBT,IAAMmrB,EAA4B,MAAnC,MAAOA,EAYT,SAAWxnB,GACP,OAAO3B,KAAKU,KAAKkB,YAAY,CAAC5B,KAAKoa,OAAO1L,KAAKpP,MAAQU,KAAKoa,OAAO1L,IACvE,CAEA,YAAWnI,GACP,OAAOvG,KAAKU,KAAK8F,UAAUC,KACtBe,GACGxH,KAAKoa,OAAO1L,KAAKpP,KAAOkI,EAAElI,IAC1BU,KAAKoa,OAAO1L,KAAKC,YAAcnH,EAAElI,GAE7C,CAEAiB,YAAoBG,GAAAV,KAAAU,OAtBJV,KAAAuc,KAAe,EACfvc,KAAAqc,QAAkB,EAEjBrc,KAAAsc,aAAe,IAAIzb,MACnBb,KAAAmR,MAAQ,IAAItQ,MACZb,KAAAkc,UAAY,IAAIrb,MAE1Bb,KAAAuU,QAAU,GACVvU,KAAA6D,SAA4B,EAca,CAEzC4Y,YAAYC,GACXA,EAAQtC,OAASpa,KAAKoa,OACtBpa,KAAKopB,gBAEb,CAEQA,iBACJppB,KAAKuU,QAAUvU,KAAK2B,OAAOsE,OAC3BjG,KAAK6D,SAAW,CACZ,CACIjF,SAAUoB,KAAKoa,OAAOnU,OACtBmB,QAASC,MAGrB,CAACnE,SAAAlD,KAAA,mBAAAmD,iBAxCQgmB,GAA4BnrB,MAAAoF,MAAA,EAAAF,SAAAlD,KAAA,UAAA+X,EAAAtU,IAAA,MAA5B0lB,EAA4BzlB,UAAA,4BAAAC,OAAA,CAAAyW,MAAA,QAAAmC,IAAA,MAAAF,OAAA,UAAAzY,QAAA,CAAA0Y,aAAA,eAAAnL,MAAA,QAAA+K,UAAA,aAAArY,SAAA,CAAA7F,OAAA8F,MAAA,EAAAC,KAAA,EAAAC,OAAA,eAAA4E,uBA7FgBC,oFAGzBA,2EAAA,0CAqByBA,4FAGzBA,2FAIAA,+FAIAA,uFAuCuBA,4sCAxH/C7K,MAAA,EAAAqrB,EAAA,wBAmHArrB,MAAA,EAAAsrB,EAAA,yBAAAtrB,8BAnHeA,MAAA,OAAAmG,EAAAiW,MAAApc,CAAa,WAAA2d,2PA2IvBwN,CAA4B,gLC7G7BnrB,MAAA,YAMIA,MAAA,GACJA,8BADIA,MAAA,GAAAA,MAAA,IAAAI,EAAAQ,SAAA,8CAYJZ,MAAA,WAAAA,CAAkE,OAC3DA,MAAA,GAAUA,QACbA,MAAA,eAIIA,MAAA,yBAAAurB,EAAAvrB,MAAAib,GAAAb,UAAAxS,EAAA5H,QAAA,OAASA,MAAA4H,EAAA4jB,cAAAD,GAAmB,GAE5BvrB,MAAA,cAAUA,MAAA,WAAKA,wCAPhBA,MAAA,GAAAA,MAAAurB,IAoCZ,IAAME,EAAoC,MAA3C,MAAOA,UAA4C1pB,KAMrD,SAAWkC,GACP,OAAOjC,KAAK2jB,YAAY5Z,KAAK0F,MAAMlR,IACvC,CAEA,OAAWwC,GACP,MAAQxC,OAAM2D,YAAalC,KAAK2jB,YAAY5Z,KAAK0F,MACjD,OAAOlR,EAAkB,GAAX2D,EAAgB,GAClC,CAKA,eAAW1D,GACP,OAAOwB,KAAKK,UAAU7B,WAC1B,CAEA+B,YACYgd,EACAoG,EACAjjB,EACAL,GAERM,QALQX,KAAAud,UACAvd,KAAA2jB,cACA3jB,KAAAU,OACAV,KAAAK,YAzBIL,KAAAwJ,KAAuB,OACtBxJ,KAAAwd,WAAa,IAAI3c,MAClBb,KAAAsL,QAAUtL,KAAK2jB,YAAYrY,QACpCtL,KAAApB,SAAmB,GAWVoB,KAAA0pB,YAAc,IAC1B1pB,KAAKud,QAAQ1a,KAAK8mB,IAatB,CAEO3oB,WACHhB,KAAKiB,aACD,OACAjB,KAAKsL,QAAQnK,UAAU,EAAG2M,aACtB9N,KAAK4pB,gBAAgB,CAAC9b,KAGlC,CAEa0b,cAAcK,GAAY,IAAAniB,EAAA1H,KAAA,SAAA2H,KAAA,YACnC,MAAM8H,QAAc/H,EAAKic,YAAYrY,QAAQC,QAAKsH,KAAK,IAAIhL,YAC3DH,EAAKic,YAAYpZ,WAAW,IACrBkF,EACH5L,UAAW4L,EAAM5L,UAAY,IAAIwJ,OAAQ7F,GAAMA,IAAMqiB,IACtD,EALgC,EAMvC,CAEQD,gBAAgBE,EAAqB,IAEzC,MAAMvhB,EADQvI,KAAKU,KAAKkB,YAAYkoB,IACd9pB,KAAKU,KAAK6F,SAChCvG,KAAKpB,SAAW2J,GAAMzG,cAAgByG,GAAMxG,MAAQ,EACxD,CAACmB,SAAAlD,KAAA,mBAAAmD,iBApDQsmB,GAAmCzrB,MAAAoF,MAAApF,MAAAqF,KAAArF,MAAAsF,MAAAtF,MAAAuF,MAAA,EAAAL,SAAAlD,KAAA,UAAAwD,EAAAC,IAAA,MAAnCgmB,EAAmC/lB,UAAA,oCAAAC,OAAA,CAAA6F,KAAA,QAAA5F,QAAA,CAAA4Z,WAAA,cAAA3Z,SAAA,CAAA7F,OAAA8F,MAAA,GAAAC,KAAA,GAAAC,OAAA,eAAA4E,iBAlFnCC,sFAWIA,kFAUAA,mFAqBwDA,iFACpD,y0BAlDb7K,MAAA,cAAAA,CAAmE,cAK3DA,MAAA,0BAASmG,EAAAulB,aAAa,GAJ1B1rB,MAAA,KAQAA,QACAA,MAAA,UAAAA,CAA+B,cAMvBA,MAAA,mBAAAmG,SAAAqF,KAAgB,MAAOrF,EAAAqZ,WAAAva,KAAAkB,EAAAqF,KAAqB,GALhDxL,MAAA,KASAA,QACAA,MAAA,cAKIA,MAAA,mBAAAmG,SAAAqF,KAAgB,OAAQrF,EAAAqZ,WAAAva,KAAAkB,EAAAqF,KAAqB,GALjDxL,MAAA,KASAA,YAGRA,MAAA,eACIA,MAAA,EAAA+rB,EAAA,aAQA/rB,MAAA,aACIA,MAAA,qBACJA,QACAA,MAAA,aACIA,MAAA,sCAEJA,QACAA,MAAA,aAAAA,MAAA,yBAEAA,QACAA,MAAA,GAAAgsB,EAAA,gCAWJhsB,sBAhDYA,MAAA,GAAAA,MAAA,kBAAAmG,EAAAqF,MAUAxL,MAAA,GAAAA,MAAA,mBAAAmG,EAAAqF,MAaHxL,MAAA,GAAAA,MAAA,OAAAmG,EAAAvF,UAKDZ,MAAA,GAAAA,MAAA,IAAAA,MAAA,MAAAmG,EAAAlC,MAAA,mBAGAjE,MAAA,GAAAA,MAAA,IAAAA,MAAA,MAAAmG,EAAAlC,MAAAkC,EAAA3F,aAAA,WAAAR,MAAA,MAAAmG,EAAApD,IAAAoD,EAAA3F,aAAA,KAKJR,MAAA,GAAAA,OAAA,OAAAigB,EAAAjgB,MAAA,MAAAmG,EAAAmH,UAAA,KAAA2S,EAAAgM,WAAA,GAAAjsB,MAAA,IACkCA,MAAA,GAAAA,MAAA,iBAAAkgB,EAAAlgB,MAAA,MAAAmG,EAAAmH,UAAA,KAAA4S,EAAAra,ohBAqCjC4lB,CAAoC,qQCxFjCzrB,MAAA,eAKIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAvH,EAAAD,QAAA,OAASA,MAAAC,EAAAkT,QAAO,GAEhBnT,MAAA,cAAUA,MAAA,yBAAmBA,oCAuBrBA,MAAA,mBAIIA,MAAA,GAEJA,kCAJIA,MAAA,QAAAksB,EAAA5qB,IAEAtB,MAAA,GAAAA,MAAA,IAAAksB,EAAAxjB,IAAA,KAAAwjB,EAAApoB,cAAAooB,EAAAnoB,KAAA,wFA6DhB/D,MAAA,WAAAA,CAGC,YACwCA,MAAA,GAAUA,QAC/CA,MAAA,qBAGIA,MAAA,yBAAA8Y,GAAA,MAAAqT,EAAAnsB,MAAAiH,GAAAmT,UAAA3T,EAAAzG,MAAA,UAAiBA,MAAAyG,EAAA2lB,cAAAD,EAAArT,GAA2B,oBAE/C9Y,uDANoCA,MAAA,GAAAA,MAAAmsB,GAGjCnsB,MAAA,GAAAA,MAAA,iBAAA+gB,EAAA/gB,MAAA,IAAAiZ,EAAA3L,WAAA,MAAAyT,EAAAlb,SAAA,KAAAkb,EAAAlb,SAAA8C,SAAAwjB,GAAAnsB,CAAuD,iBAAAA,MAAA,EAAAqsB,8BAbnErsB,MAAA,eAAAA,CAIC,UACGA,MAAA,MAA+CA,QAC/CA,MAAA,EAAAssB,EAAA,+BAYJtsB,8BAVyBA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAmH,EAAAtB,oDAY7B7F,MAAA,WAAAA,CAGC,eAC8CA,MAAA,mBAAAA,MAAA2a,GAAA,MAAAC,EAAA5a,QAAA,OAASA,MAAA4a,EAAAzH,QAAO,GAA3DnT,MAAA,MAEAA,WAcL,IAAM2rB,EAA4B,MAAnC,MAAOA,EAoBT,OAAWjjB,GACP,OAAO1G,KAAKU,KAAK6F,QACrB,CAEA,QAAWwD,GACP,OAAO/J,KAAKuqB,MAAMxgB,IACtB,CAEA,gBAAWygB,GACP,OAAOxqB,KAAKK,UAAUiB,IAAI,4BAA8B,GAC5D,CAEA,YAAWod,GACP,OAAO1e,KAAKK,UAAUiB,IAAI,uBAC9B,CAEAf,YAEYkf,EACApf,EACAkqB,EACA7pB,GAHAV,KAAAyf,cACAzf,KAAAK,YACAL,KAAAuqB,QACAvqB,KAAAU,OAxCLV,KAAA0f,WAAY,EACH1f,KAAAsL,QAAUtL,KAAKuqB,MAAMjf,QAErBtL,KAAAye,OAASze,KAAKU,KAAKkf,cAAcrU,QAC7CY,KAAK4T,IACD,UAAW0K,KAAO1K,EAAG,CACjB,MAAMrZ,EAAM1G,KAAKU,KAAK8F,UAAUC,KAC3Be,GAAMA,EAAElI,KAAOmrB,EAAI9b,WAEvB8b,EAAY/jB,IAAMA,GAAK5E,cAAgB4E,GAAK3E,MAAQ,GAEzD,OAAOge,EAAE1S,OAAQ7F,GAAMA,EAAEkjB,KAAK/jB,SAAS,WAAU,IAGzC3G,KAAA6D,SAAW7D,KAAKuqB,MAAM1mB,SAEtB7D,KAAAmR,MAAQ,IAAMnR,KAAKyf,YAAYI,UAC/B7f,KAAAuK,WAAckT,GAAMzd,KAAKuqB,MAAMhgB,WAAWkT,GAyBtDzd,KAAK0f,YAAc1f,KAAKyf,WAC5B,CAEa2K,cAAcP,EAActkB,GAAc,IAAAmC,EAAA1H,KAAA,SAAA2H,KAAA,YACnD,MAAQ9D,kBAAmB6D,EAAK4D,QAAQC,QAAKsH,KAAK,IAAIhL,YAChD8iB,GAAY9mB,GAAY,IAAIwJ,OAAQ7F,GAAMqiB,IAASriB,GACrDjC,GAAOolB,EAASne,KAAKqd,GACzBniB,EAAK6C,WAAW,CAAE1G,SAAU8mB,GAAY,EAJW,EAKvD,CAACznB,SAAAlD,KAAA,mBAAAmD,iBAnDQwmB,GAA4B3rB,MAAAoF,KAAA,GAAApF,MAAAqF,MAAArF,MAAAsF,KAAAtF,MAAAuF,MAAA,EAAAL,SAAAlD,KAAA,UAAAggB,EAAAvc,IAAA,MAA5BkmB,EAA4BjmB,UAAA,4BAAAI,MAAA,GAAAC,KAAA,GAAAC,OAAA,eAAA4E,+BAvHmBC,0FAQPA,oFAENA,oFAqBJA,+EAAI,qCAAO,uCACoBA,iHAO7CA,qFAAU,qCAAO,uCAYjBA,mFAAQ,qCAAO,uCAcSA,uFAEQA,wGAiBRA,uFAmByBA,gqDAnHtE7K,MAAA,UAAAA,CAAuE,WAE/DA,MAAA,EAAA4sB,EAAA,gBASJ5sB,QACAA,MAAA,UAAAA,MAAA,KAA6DA,QAC7DA,MAAA,WACJA,QACAA,MAAA,WAAAA,CAGC,cAHDA,CAGC,UAEOA,MAAA,KAA4CA,QAC5CA,MAAA,YAAAA,CAAgD,eAC5CA,MAAA,OAAmCA,QACnCA,MAAA,uBAAAA,CAAoD,oBAI5CA,MAAA,yBAAA8Y,GAAA,OAAiB3S,EAAAoG,WAAA,CAAAuf,SAAAhT,GAAgC,qBAKjD9Y,MAAA,GAAA6sB,EAAA,uCAOJ7sB,YAGRA,MAAA,YAAAA,CAAkC,eAC9BA,MAAA,OAA2BA,MAAA,WAAcA,gBACzCA,MAAA,sBAAAA,MAAA,OAEAA,UAEJA,MAAA,YAAAA,CAAyC,YAAzCA,CAAyC,eAEjCA,MAAA,OACeA,MAAA,WAAcA,gBAE7BA,MAAA,sBAGIA,MAAA,yBAAA8Y,GAAA,OAAiB3S,EAAA4F,KAAAE,WAAA,CAAA1L,KAAAuY,GAAiC,GAGrD9Y,UAELA,MAAA,YAAAA,CAA0B,eACtBA,MAAA,OACaA,MAAA,WAAcA,gBAE3BA,MAAA,0BAQJA,YAGRA,MAAA,gBAAAA,CAAqC,WACjCA,MAAA,OAA+CA,QAC/CA,MAAA,YAAAA,CAA+B,aAC3BA,MAAA,OAEAA,QACAA,MAAA,sBAGIA,MAAA,yBAAA8Y,GAAA,OAAiB3S,EAAAoG,WAAA,CAAA4S,SAAArG,GAAgC,qBAGrD9Y,YAGRA,MAAA,GAAA8sB,EAAA,oCAmBJ9sB,QACAA,MAAA,GAAA+sB,EAAA,8BAzGa/sB,MAAA,GAAAA,MAAA,OAAAmG,EAAAub,WAWT1hB,MAAA,GAAAA,MAAA,YAAAmG,EAAA4F,MASgB/L,MAAA,GAAAA,MAAA,iBAAAwiB,EAAAxiB,MAAA,MAAAmG,EAAAmH,UAAA,KAAAkV,EAAAsJ,SAAA9rB,CAAuC,iBAAAA,MAAA,GAAAqsB,GAAvCrsB,CAAuC,qBAAAmG,EAAAuC,IAAA,KAAAvC,EAAAuC,IAAA5E,gBAAA,MAAAqC,EAAAuC,IAAA,KAAAvC,EAAAuC,IAAA3E,MAAvC/D,CAAuC,eAOnBA,MAAA,GAAAA,MAAA,UAAAA,MAAA,MAAAmG,EAAAsa,SAsBpBzgB,MAAA,IAAAA,MAAA,UAAAmG,EAAA4F,KAAA0F,MAAAlR,KAAAP,CAA2B,iBAAAA,MAAA,GAAAqsB,GAA3BrsB,CAA2B,WAAAmG,EAAAua,UAa3B1gB,MAAA,GAAAA,MAAA,aAAAmG,EAAA4F,MAAA,MAAA5F,EAAA4F,KAAA0F,MAAA,KAAAtL,EAAA4F,KAAA0F,MAAAlR,KAAAP,CAA0B,MAAAmG,EAAAqmB,aAA1BxsB,CAA0B,WAAAmG,EAAAua,UAgB9B1gB,MAAA,GAAAA,MAAA,iBAAAgtB,EAAAhtB,MAAA,MAAAmG,EAAAmH,UAAA,KAAA0f,EAAA7N,SAAAnf,CAAuC,iBAAAA,MAAA,GAAAqsB,IAU9CrsB,MAAA,GAAAA,MAAA,cAAAitB,EAAAjtB,MAAA,MAAAmG,EAAAN,WAAA,KAAAonB,EAAAllB,QAmBJ/H,MAAA,GAAAA,MAAA,OAAAmG,EAAAub,uSAkBAiK,CAA4B,0JC5Gb3rB,MAAA,WAAAA,CAGC,cACaA,MAAA,UAAIA,mCAElBA,MAAA,2CAIIA,MAAA,SAAAktB,EAAA1mB,OAAA,0BAGAxG,MAAA,oDA5BhBA,MAAA,UAAAA,CAKC,eAKOA,MAAA,yBAAAktB,EAAAltB,MAAA4iB,GAAAxI,UAAAU,EAAA9a,MAAA,UAASA,MAAA8a,EAAAqS,YAAAD,GAAkB,GAE3BltB,MAAA,YAGIA,MAAA,EAAAotB,EAAA,cAMAptB,MAAA,EAAAqtB,EAAA,cAMArtB,MAAA,EAAAstB,EAAA,0BAAAttB,OAMJA,QACAA,MAAA,WAAAA,CAAuB,YAEfA,MAAA,GACJA,QACAA,MAAA,YAAAA,CAAiD,kBACjBA,MAAA,YAAKA,QACjCA,MAAA,QACIA,MAAA,IAOJA,UAEJA,MAAA,YAAAA,CAAiD,kBACjBA,MAAA,aAAMA,QAClCA,MAAA,QAAAA,MAAA,OAKAA,cAIZA,MAAA,gBAMIA,MAAA,yBAAAktB,EAAAltB,MAAA4iB,GAAAxI,UAAA6I,EAAAjjB,MAAA,UAASA,MAAAijB,EAAA/E,UAAAjZ,KAAAioB,GAAqB,GAE9BltB,MAAA,eAAUA,MAAA,IAIRA,8DAtENA,MAAA,eAAAW,EAAA0d,SAAA6O,EAAA5rB,IAcatB,MAAA,GAAAA,MAAA,OAAAW,EAAAub,SAAAvT,SAAAukB,EAAA5rB,KAMAtB,MAAA,GAAAA,MAAA,aAAAktB,EAAA1mB,OAAA,KAAA0mB,EAAA1mB,OAAAuB,OAAA/H,CAA4B,WAAAiH,GAa7BjH,MAAA,GAAAA,MAAA,IAAAktB,EAAAnpB,MAAA,qBAKI/D,MAAA,GAAAA,MAAA,IAAAktB,EAAAtsB,WAAA,MAAAssB,EAAAvpB,MAAA,KAAAupB,EAAAvpB,MAAAG,gBAAA,MAAAopB,EAAAvpB,MAAA,KAAAupB,EAAAvpB,MAAAI,QAAA,MAAAmpB,EAAAxc,KAAA,KAAAwc,EAAAxc,KAAA5M,gBAAA,MAAAopB,EAAAxc,KAAA,KAAAwc,EAAAxc,KAAA3M,MAAA,KAgBJ/D,MAAA,GAAAA,MAAAktB,EAAAjR,SAAA,IAAAiR,EAAAjR,UAAAjc,MAAA,IASRA,MAAA,GAAAA,MAAA,YAAAW,EAAAuiB,YAAAgK,EAAA5rB,KAGUtB,MAAA,GAAAA,MAAAW,EAAAuiB,YAAAgK,EAAA5rB,IAAA,wDAzEtBtB,MAAA,UAIIA,MAAA,EAAAutB,EAAA,+BA4EJvtB,+BA1E0BA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAS,EAAAqH,mCAP9B9H,MAAA,GACIA,MAAA,EAAAwtB,EAAA,6BAiFJxtB,+CA/ESA,MAAA,GAAAA,MAAA,cAAAwgB,EAAAxgB,MAAA,IAAAI,EAAA0H,SAAA,KAAA0Y,EAAAzY,OAAA/H,CAAgC,WAAA2d,0BAiFrC3d,MAAA,WAAAA,CAGC,UACGA,MAAA,MAEAA,iCAIJA,MAAA,YAIIA,MAAA,oBACAA,MAAA,UAAAA,MAAA,MAAsDA,iBADzCA,MAAA,GAAAA,MAAA,gBAgBtB,IAAMytB,EAAyB,MAAhC,MAAOA,EAiBTlrB,YAAoBgqB,GAAAvqB,KAAAuqB,QAhBJvqB,KAAAqc,OAAiB,GACjBrc,KAAAka,SAAmB,GACnBla,KAAAkZ,UAAsB,GACrBlZ,KAAAuhB,SAAW,IAAI1gB,MACfb,KAAAkc,UAAY,IAAIrb,MAEjBb,KAAA8F,UAAS6F,MAAc,CACnC3L,KAAKuqB,MAAMjf,QACXtL,KAAKuqB,MAAMrd,sBACZ3B,QACCY,KAAI,GAAIgR,YAAY3V,KAChBA,EAAE6F,OAAQkG,IAAO4J,GAAYnd,KAAKkhB,YAAY3N,EAAEjU,OAGxCU,KAAAoL,QAAUpL,KAAKuqB,MAAMnf,OAEW,CAEzC8V,YAAYwK,GACf,OAAO1rB,KAAKkZ,UAAUvS,SAAS+kB,EACnC,CAEOP,YAAY/Q,GACfpa,KAAKuhB,SAASte,KAAKmX,EACvB,CAAClX,SAAAlD,KAAA,mBAAAmD,iBAzBQsoB,GAAyBztB,MAAAoF,KAAA,EAAAF,SAAAlD,KAAA,UAAA4c,EAAAnZ,IAAA,MAAzBgoB,EAAyB/nB,UAAA,yBAAAC,OAAA,CAAA0Y,OAAA,SAAAnC,SAAA,WAAAhB,UAAA,aAAAtV,QAAA,CAAA2d,SAAA,WAAArF,UAAA,aAAApY,MAAA,GAAAC,KAAA,EAAAC,OAAA,eAAA4E,mBAtHHC,oFACmBA,4EAC1C,oDA2D4BA,4EACJ,2CA8BmBA,mIAWZA,+qDAvGnC7K,MAAA,UAAAA,MAAA,KAAkCA,QAClCA,MAAA,SAAAA,MAAA,sBAEAA,QACAA,MAAA,EAAA2tB,EAAA,uCAmFA3tB,MAAA,EAAA4tB,EAAA,yBAAA5tB,OAUAA,MAAA,EAAA6tB,EAAA,yBAAA7tB,qCA9FAA,MAAA,GAAAA,OAAA,OAAAwgB,EAAAxgB,MAAA,IAAAmG,EAAA2B,SAAA,KAAA0Y,EAAAzY,SAAA,GAAA/H,MAAA,GACeA,MAAA,GAAAA,MAAA,QAAAA,MAAA,IAAAmG,EAAAiH,SAAApN,CAA0B,WAAAqjB,6NAkHpCoK,CAAyB,wGC7DtBztB,MAAA,kCAIAA,MAAA,iBAIIA,MAAA,YACJA,SAMT,IAAM8tB,EAAgC,MAAvC,MAAOA,EACT,YAAW5R,GACP,OAA+B,IAAxBla,KAAK8X,MAAMoC,QACtB,CACA3Z,YAA8CuX,GAAA9X,KAAA8X,OAAa,CAAC5U,SAAAlD,KAAA,mBAAAmD,iBAJnD2oB,GAAgC9tB,MAIrB+tB,MAAgB,EAAA7oB,SAAAlD,KAAA,UAAAwb,EAAA/X,IAAA,MAJ3BqoB,EAAgCpoB,UAAA,iCAAAI,MAAA,GAAAC,KAAA,EAAAC,OAAA,0hEAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3ErClG,MAAA,WACIA,cAAA,UAAAA,CAMC,SAEOA,MAAA,YAMJA,QACAA,MAAA,SAAAA,CAAM,cAUEA,MAAA,cAAAA,CAGE,oBAHFA,CAGE,eAHFA,CAGE,qBAHFA,CAGE,mBAHFA,CAGE,sBAHFA,CAGE,gBAHFA,CAGE,iBAyBNA,YAGRA,cAAA,aAGIA,MAAA,GAAAguB,EAAA,cAIAhuB,MAAA,GAAAiuB,EAAA,mBAMJjuB,iBARSA,MAAA,IAAAA,MAAA,QAAAmG,EAAA+V,UAIAlc,MAAA,GAAAA,MAAA,OAAAmG,EAAA+V,6DASR4R,CAAgC,mNCtErC9tB,MAAA,cAKIA,MAAA,sBAAA8Y,GAAA9Y,MAAAqjB,GAAA,MAAAlc,EAAAnH,QAAA,OAAAA,MAAAmH,EAAA4c,KAAAjL,EAAA,EAAA9Y,CAAe,wBAAA8Y,GAAA9Y,MAAAqjB,GAAA,MAAApjB,EAAAD,QAAA,OAAAA,MAAAC,EAAA+jB,OAAAlL,EAAA,qCAElB9Y,gCALGA,MAAA,MAAAI,EAAAmW,QAAAvW,CAAe,WAAAA,MAAA,IAAAI,EAAAyF,UAAf7F,CAAe,UAAAA,MAAA,IAAAI,EAAAgkB,SAAfpkB,CAAe,OAAAI,EAAA2jB,KAAf/jB,CAAe,SAAAI,EAAA4jB,kCAePhkB,MAAA,mBAIIA,MAAA,GACJA,kCAHIA,MAAA,QAAAkuB,GAEAluB,MAAA,GAAAA,MAAA,IAAAkuB,EAAApqB,cAAAoqB,EAAAnqB,KAAA,MAoCjB,IAAMoqB,EAA+B,MAAtC,MAAOA,UAAuCpsB,KAWhD,WAAWwU,GACP,OAAOvU,KAAK2B,OAAOsE,QAAU,EACjC,CA8BA1F,YAAoBojB,GAChBhjB,QADgBX,KAAA2jB,cA1CJ3jB,KAAAka,SAAqB,GACrBla,KAAA8hB,cAAwB,EACvB9hB,KAAAuhB,SAAW,IAAI1gB,MAEzBb,KAAA+hB,KAAO,EACP/hB,KAAAgiB,OAAS,CAAEC,EAAG,GAAKC,EAAG,IAErBliB,KAAAosB,cAAiBrS,GAAM,IAAM/Z,KAAKuhB,SAASte,KAAK8W,GACjD/Z,KAAA2B,MAAuB,KAMd3B,KAAAye,OAASze,KAAK2jB,YAAY0I,iBAAiB9gB,QACvDY,KAAK3E,MAAMiF,MAAOjF,EAAE2E,IAAI,EAAGxK,WAAYA,MAG3B3B,KAAA6D,SAAW7D,KAAK2jB,YAAY0I,iBAAiB9gB,QACzDO,KAAa,MAAI,EACjBK,KAAK4T,GACDA,EAAE5T,IAAKiO,KACHxb,SAAUwb,EAAMnU,OAChBmB,QAAS0kB,IACT/oB,KAAM,IACCqX,EACHF,SAAUla,KAAKka,SAASvT,SAASyT,EAAM9a,UAMvCU,KAAAoiB,QAAUpiB,KAAK2jB,YAAY0I,iBAAiB9gB,QACxDY,KAAK4T,GACDA,EAAE5T,IAAKiO,KACH9a,GAAI8a,EAAMnU,OACVoc,OAAQ,CAAC,WAAY,WACrBC,SAAUtiB,KAAKosB,cAAchS,OAOzC,CAEOpZ,WACHhB,KAAKiB,aACD,SACAjB,KAAK2jB,YAAY0I,iBAAiBlrB,UAAWqG,KACpCxH,KAAK2B,OAAS6F,EAAEzB,SAAQ/F,KAAK2B,MAAQ6F,EAAE,GAAG7F,SAG3D,CAEOshB,QAAQC,GACXljB,KAAK+hB,KAAOxf,KAAK4gB,IAAI,GAAK5gB,KAAK6gB,IAAI,GAAIF,GAC3C,CAEOG,WACHrjB,KAAK+hB,KAAO,EACZ/hB,KAAKgiB,OAAS,CAAEC,EAAG,GAAKC,EAAG,GAC/B,CAAChf,SAAAlD,KAAA,mBAAAmD,iBA/DQgpB,GAA8BnuB,MAAAoF,MAAA,EAAAF,SAAAlD,KAAA,UAAAwD,EAAAC,IAAA,MAA9B0oB,EAA8BzoB,UAAA,wBAAAC,OAAA,CAAAuW,SAAA,WAAA4H,aAAA,gBAAAle,QAAA,CAAA2d,SAAA,YAAA1d,SAAA,CAAA7F,OAAA8F,MAAA,GAAAC,KAAA,EAAAC,OAAA,osBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAzDnClG,MAAA,EAAAsuB,EAAA,eAQAtuB,MAAA,UAAAA,CAEC,qBAFDA,CAEC,kBAMmBA,MAAA,yBAAA8Y,GAAA,OAAA3S,EAAAxC,MAAAmV,CAAA,GACR9Y,MAAA,EAAAuuB,EAAA,qCAMJvuB,YAGRA,MAAA,UAAAA,CAGC,cACkCA,MAAA,0BAASmG,EAAA8e,QAAe,IAAf9e,EAAA4d,KAAmB,GACvD/jB,MAAA,cAAUA,MAAA,aAAOA,UAErBA,MAAA,YACAA,MAAA,eAAgCA,MAAA,0BAASmG,EAAA8e,QAAA9e,EAAA4d,MAAgB,EAAI,KAAK,GAC9D/jB,MAAA,eAAUA,MAAA,eAAQA,UAEtBA,MAAA,YACAA,MAAA,eAA6BA,MAAA,0BAASmG,EAAAkf,UAAU,GAC5CrlB,MAAA,eAAUA,MAAA,cAAOA,mBAtCpBA,MAAA,QAAAmG,EAAA2d,cAee9jB,MAAA,GAAAA,MAAA,UAAAmG,EAAAxC,OAEY3D,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAAmG,EAAAsa,2SAuC3B0N,CAA+B,iNChCxBnuB,MAAA,2BAKIA,MAAA,qBAAA8Y,GAAA9Y,MAAAwH,GAAA,MAAAvH,EAAAD,QAAA,OAAaA,MAAAC,EAAA+a,gBAAAlC,GAAuB,EAApC9Y,CAAqC,oBAAA8Y,GAAA9Y,MAAAwH,GAAA,MAAA7G,EAAAX,QAAA,OAAAA,MAAAW,EAAA6kB,UAAA1M,EAAA,GAGxC9Y,gCANGA,MAAA,eAAAI,EAAAolB,UAAA,KAAAplB,EAAAolB,UAAAlkB,GAAAtB,CAAwB,WAAAI,EAAAqlB,aAAxBzlB,CAAwB,YAAAI,EAAA8a,oDAuBhClb,MAAA,eAMIA,MAAA,mBAAAA,MAAAkf,GAAA,MAAAjG,EAAAjZ,QAAA,OAAAA,MAAAiZ,EAAAuM,UAAqB,KAAI,GAN7BxlB,MAAA,MAUAA,iDAqDJA,MAAA,0BAIIA,MAAA,oBAAA8Y,GAAA9Y,MAAAiH,GAAA,MAAAR,EAAAzG,QAAA,OAAAA,MAAAyG,EAAA+e,UAAA1M,EAAA,GAEJ9Y,gCAJIA,MAAA,WAAA4H,EAAA6d,aAAAzlB,CAAyB,iBAAA4H,EAAA4d,YArHlC,MAAMgJ,EAAkB,2BA8HxB,IAAMC,EAAgC,MAAvC,MAAOA,EAKT,gBAAWhJ,GACP,OAAOzjB,KAAKka,SAAS/N,IAAK3E,GAAMA,EAAElI,IAAIkS,KAAK,IAC/C,CAEA,aAAW0H,GACP,OAAOlZ,KAAKK,UAAUiB,IAAckrB,IAAoB,EAC5D,CAEAjsB,YACYmjB,EACArjB,EACAsjB,EAEA7L,GAJA9X,KAAA0jB,cACA1jB,KAAAK,YACAL,KAAA2jB,cAEA3jB,KAAA8X,QAhBL9X,KAAAka,SAA2B,GAC3Bla,KAAAwJ,KAAO,OAoBVxJ,KAAKka,SAAW,IAAKpC,EAAM4U,QAAU,IACrC1sB,KAAK2jB,YAAYpZ,WAAWuN,EAAMxM,QACtC,CAEOsY,WAAWtkB,GACd,OAAOA,GAAMU,KAAKyjB,aAAa9c,SAASrH,EAC5C,CAEOukB,YAAYtb,EAAoBhD,GACnC,MAAM8G,EAAOrM,KAAKka,SAAS7M,OAAQ7F,GAAMA,EAAElI,KAAOiJ,EAAKjJ,IACnDiG,GAAO8G,EAAKG,KAAKjE,GACrBvI,KAAKka,SAAW7N,GACXrM,KAAK8X,MAAMxM,QAAQ0D,OAASzJ,GAAOvF,KAAK0jB,YAAYvS,MAAM,CAAC5I,GACpE,CAEOyQ,gBAAgBzQ,GACnB,MAAMgS,EAAWva,KAAKkZ,UACHqB,EAAS5T,SAAS4B,EAAKjJ,IAOtCU,KAAKK,UAAUma,gBACXgS,EACAjS,EAASlN,OAAQ7F,GAAMA,IAAMe,EAAKjJ,KAPtCU,KAAKK,UAAUma,gBAAgBgS,EAAiB,IACzCjS,EACHhS,EAAKjJ,IAQjB,CAAC4D,SAAAlD,KAAA,mBAAAmD,iBApDQspB,GAAgCzuB,MAAAoF,MAAApF,MAAAqF,MAAArF,MAAAsF,KAAAtF,MAiB7B0K,MAAe,EAAAxF,SAAAlD,KAAA,UAAA2I,EAAAlF,IAAA,MAjBlBgpB,EAAgC/oB,UAAA,iCAAAI,MAAA,GAAAC,KAAA,GAAAC,OAAA,eAAA4E,mBAlHpBC,+FA2DRA,wFAewCA,wFAGNA,4EAC/B,iDA9BHA,m1DAvDT7K,MAAA,UAAAA,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,MAAA,WAAKA,UAEnBA,MAAA,QAAAA,MAAA,KAA2BA,UAE/BA,MAAA,YAGIA,MAAA,6BAGAA,MAAA,UAAAA,CAEC,sCAGOA,MAAA,sBAAA8Y,GAAA,OAAA3S,EAAAqF,KAAAsN,CAAA,GACH9Y,QACDA,MAAA,GAAA2uB,EAAA,4BASJ3uB,QACAA,MAAA,8BAMIA,MAAA,wBAAA8Y,GAAA,OAAgB3S,EAAA0f,YAAA1f,EAAAqf,UAAA1M,EAA8B,EAA9C9Y,CAA+C,8BAElCmG,EAAA6U,gBAAA7U,EAAAqf,UAA0B,EAFvCxlB,CAA+C,0BAAAmG,EAAAqf,UAG1B,IAAI,GAC5BxlB,UAELA,MAAA,gBAGIA,MAAA,GAAA4uB,EAAA,iBAWA5uB,MAAA,gBAAAA,MAAA,OAUAA,UAEJA,MAAA,eAAAA,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAQqCA,MAAA,iBAAUA,QACpCA,MAAA,aAAAA,MAAA,OAA6CA,YAGrDA,MAAA,WAAAA,MAAA,OAEAA,QACAA,MAAA,gBAKIA,MAAA,0BAASmG,EAAA0f,YAAA1f,EAAAqf,WAAwBrf,EAAAyf,WAAA,MAAAzf,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,IAA0B,GAE3DtB,MAAA,YAAAA,CAA+B,kBACDA,MAAA,IAExBA,QACFA,MAAA,aACIA,MAAA,IAKJA,gBAKhBA,MAAA,GAAA6uB,EAAA,0BAAA7uB,+BAzFgBA,MAAA,IAAAA,MAAA,OAAAmG,EAAAqF,MAGCxL,MAAA,GAAAA,MAAA,gBAAAmG,EAAAqF,KAAAxL,CAAuB,WAAA0B,GAY5B1B,MAAA,GAAAA,MAAA,UAAAmG,EAAAqf,UAAAxlB,CAA2B,UAAAmG,EAAAqf,WAF3BxlB,MAAA,QAAAmG,EAAAqf,UAAAxlB,CAAmB,SAAAmG,EAAAsf,aAAA9c,SAAA,MAAAxC,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,IAAnBtB,CAAmB,MAAAmG,EAAAqf,WAAArf,EAAA+U,UAAAvS,SAAA,MAAAxC,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,KAmBlBtB,MAAA,GAAAA,MAAA,OAAAmG,EAAAqf,WAWDxlB,MAAA,GAAAA,MAAA,OAAAmG,EAAAqf,WADAxlB,MAAA,mBAAAmG,EAAA+V,UAcAlc,MAAA,GAAAA,MAAA,mBAAAmG,EAAA+V,UAUJlc,MAAA,GAAAA,MAAAmG,EAAA+V,SAAAnU,QAAA/H,MAAA,IAKIA,MAAA,GAAAA,MAAA,UAAAmG,EAAAyf,WAAA,MAAAzf,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,KADAtB,MAAA,YAAAmG,EAAAqf,WAK8BxlB,MAAA,GAAAA,MAAAmG,EAAAyf,WAAA,MAAAzf,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,IAAA,gBAItBtB,MAAA,GAAAA,MAAA,IAAAmG,EAAAyf,WAAA,MAAAzf,EAAAqf,UAAA,KAAArf,EAAAqf,UAAAlkB,IAAA,6GAsBfmtB,CAAgC,sBCrIvC,SAAUK,EAAUC,GAAG,IAAIhd,EAAE/P,KAAK+sB,EAAE,iBAAiBA,EAAEA,EAAE,GAAGhd,EAAEid,SAAS,EAAEjd,EAAEkd,WAAW,CAACC,IAAI,YAAYC,IAAI,YAAYC,KAAK,aAAaC,IAAI,YAAYC,IAAI,YAAY,UAAU,gBAAgBC,KAAK,aAAaC,KAAK,aAAa,SAAS,gBAAgBzd,EAAE0d,QAAQV,EAAEU,QAAQ1d,EAAE2d,WAAW3d,EAAE0d,QAAQE,SAASC,cAAc,OAAOD,SAASC,cAAc,UAAU7d,EAAEX,IAAI2d,EAAE3d,KAAK,GAAGW,EAAEgY,KAAKgF,EAAEhF,MAAM,IAAIhY,EAAE8d,KAAI,EAAG9d,EAAE+d,WAAWf,EAAEe,YAAY,OAAO/d,EAAEge,UAAUhB,EAAEgB,WAAW,OAAOhe,EAAEie,SAASjB,EAAEiB,UAAU,EAAEje,EAAEke,SAASlB,EAAEkB,SAASle,EAAEme,WAAWnB,EAAEmB,YAAY,EAAE,IAAIzQ,EAAE9Q,EAAExJ,EAAEoQ,EAAE4a,EAAEpO,EAAErC,EAAE0Q,EAAE,GAAGrU,EAAE,GAAG3F,EAAE,GAAGia,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,SAASzB,EAAEhd,GAAG,IAAI0N,EAAEsP,EAAEhd,IAAI0N,EAAEsP,EAAEA,EAAEhd,EAAEA,EAAE0N,GAAGA,EAAE1N,EAAE0N,GAAG1N,EAAE0N,GAAG1N,EAAE0N,IAAI,EAAE4Q,EAAE5Q,GAAGsP,GAAG,CAAC,EAAE0B,EAAE,SAAS1B,EAAEhd,GAAG,IAAI0N,EAAE,IAAIrJ,EAAE2Y,EAAE5pB,EAAE4M,GAAG,EAAE0N,GAAE,EAAGA,EAAE,EAAEA,IAAIrJ,EAAE2Y,EAAEtP,EAAEta,GAAG4M,EAAE,IAAI,EAAEqE,EAAE2Y,EAAE,EAAE5pB,GAAG4M,EAAE0N,EAAE,IAAI,EAAErJ,EAAE2Y,EAAE,EAAE5pB,GAAG4M,EAAE0N,IAAI,EAAErJ,EAAE2Y,EAAEtP,EAAE,EAAEta,GAAG4M,EAAE,IAAI,EAAE,IAAI0N,EAAE,EAAEA,EAAE,EAAEA,IAAI+Q,EAAEzB,EAAE,EAAEhd,EAAE0N,GAAG+Q,EAAEzB,EAAE,EAAEhd,EAAE0N,GAAG+Q,EAAEzB,EAAEtP,EAAE1N,EAAE,GAAGye,EAAEzB,EAAEtP,EAAE1N,EAAE,EAAE,EAAE2e,EAAE,SAAS3B,GAAG,KAAKA,GAAG,KAAKA,IAAIA,GAAG,MAAM,IAAI,IAAIA,GAAG,OAAOA,CAAC,EAAEngB,EAAE,SAASmgB,EAAEhd,EAAE0N,EAAE9Q,GAAG,IAAIxJ,EAAEoQ,EAAE4a,EAAEpO,EAAE+M,EAAU6B,KAAKjR,EAAEoP,EAAU8B,KAAK,IAAIzrB,EAAE,EAAEA,EAAEwJ,EAAExJ,IAAIirB,EAAE3Q,EAAEta,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAE4M,EAAE5M,IAAI,CAAC,GAAG,MAAMgrB,EAAEzQ,EAAE0Q,EAAErB,EAAE5pB,GAAGirB,EAAE3Q,KAAK,IAAIlK,EAAE,EAAEA,EAAE5G,EAAE4G,IAAI6a,EAAE3Q,EAAElK,EAAE,GAAG6a,EAAE3Q,EAAElK,GAAGwM,EAAE2O,EAAEP,EAAEI,EAAE5hB,EAAE4G,UAAU,IAAIA,EAAEkK,EAAElK,EAAEkK,EAAE9Q,EAAE4G,IAAI6a,EAAE7a,GAAG6a,EAAE7a,EAAE,GAAG6a,EAAE3Q,EAAE9Q,EAAE,GAAG,KAAKwhB,EAAE,EAAEpO,EAAE2O,EAAEP,EAAEI,EAAE,KAAK,EAAEM,EAAE,SAAS9B,EAAEhd,GAAG,IAAI0N,EAAE,OAAOsP,EAAEhd,IAAI0N,EAAEsP,EAAEA,EAAEhd,EAAEA,EAAE0N,GAAGA,EAAE1N,EAAE0N,GAAG1N,EAAEA,EAAE0N,IAAI,EAAE4Q,EAAE5Q,GAAGsP,EAAE,EAAE+B,EAAE,SAAS/B,GAAG,IAAIhd,EAAE0N,EAAE9Q,EAAE4G,EAAE,OAAOwZ,GAAG,KAAK,EAAE,IAAItP,EAAE,EAAEA,EAAEta,EAAEsa,IAAI,IAAI1N,EAAE,EAAEA,EAAE5M,EAAE4M,IAAIA,EAAE0N,EAAE,GAAGoR,EAAE9e,EAAE0N,KAAKrJ,EAAErE,EAAE0N,EAAEta,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIsa,EAAE,EAAEA,EAAEta,EAAEsa,IAAI,IAAI1N,EAAE,EAAEA,EAAE5M,EAAE4M,IAAI,EAAE0N,GAAGoR,EAAE9e,EAAE0N,KAAKrJ,EAAErE,EAAE0N,EAAEta,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIsa,EAAE,EAAEA,EAAEta,EAAEsa,IAAI,IAAI9Q,EAAE,EAAEoD,EAAE,EAAEA,EAAE5M,EAAE4M,IAAIpD,IAAI,GAAGA,IAAIA,EAAE,GAAGA,GAAGkiB,EAAE9e,EAAE0N,KAAKrJ,EAAErE,EAAE0N,EAAEta,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIoQ,EAAE,EAAEkK,EAAE,EAAEA,EAAEta,EAAEsa,IAAIlK,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAG5G,EAAE4G,EAAExD,EAAE,EAAEA,EAAE5M,EAAE4M,IAAIpD,IAAI,GAAGA,IAAIA,EAAE,GAAGA,GAAGkiB,EAAE9e,EAAE0N,KAAKrJ,EAAErE,EAAE0N,EAAEta,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIsa,EAAE,EAAEA,EAAEta,EAAEsa,IAAI,IAAI9Q,EAAE,EAAE4G,EAAEkK,GAAG,EAAE,EAAE1N,EAAE,EAAEA,EAAE5M,EAAE4M,IAAIpD,IAAI,GAAGA,IAAIA,EAAE,EAAE4G,GAAGA,GAAGA,GAAGsb,EAAE9e,EAAE0N,KAAKrJ,EAAErE,EAAE0N,EAAEta,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIoQ,EAAE,EAAEkK,EAAE,EAAEA,EAAEta,EAAEsa,IAAIlK,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAG5G,EAAE,EAAEoD,EAAE,EAAEA,EAAE5M,EAAE4M,IAAIpD,IAAI,GAAGA,IAAIA,EAAE,IAAIoD,EAAE0N,EAAE,MAAM9Q,GAAG4G,IAAIsb,EAAE9e,EAAE0N,KAAKrJ,EAAErE,EAAE0N,EAAEta,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIoQ,EAAE,EAAEkK,EAAE,EAAEA,EAAEta,EAAEsa,IAAIlK,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAG5G,EAAE,EAAEoD,EAAE,EAAEA,EAAE5M,EAAE4M,IAAIpD,IAAI,GAAGA,IAAIA,EAAE,IAAIoD,EAAE0N,EAAE,IAAI9Q,GAAGA,GAAG4G,GAAG,GAAGsb,EAAE9e,EAAE0N,KAAKrJ,EAAErE,EAAE0N,EAAEta,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIoQ,EAAE,EAAEkK,EAAE,EAAEA,EAAEta,EAAEsa,IAAIlK,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAG5G,EAAE,EAAEoD,EAAE,EAAEA,EAAE5M,EAAE4M,IAAIpD,IAAI,GAAGA,IAAIA,EAAE,IAAIA,GAAGA,GAAG4G,IAAIxD,EAAE0N,EAAE,GAAG,GAAGoR,EAAE9e,EAAE0N,KAAKrJ,EAAErE,EAAE0N,EAAEta,IAAI,GAAG,EAAE4rB,EAAE,SAAShC,GAAG,IAAIhd,EAAE0N,EAAE,EAAE,IAAI1N,EAAE,EAAEA,GAAGgd,EAAEhd,IAAIue,EAAEve,IAAI,IAAI0N,GAAGqP,EAAUkC,GAAGV,EAAEve,GAAG,GAAG,IAAIA,EAAE,EAAEA,EAAEgd,EAAE,EAAEhd,GAAG,EAAEue,EAAEve,EAAE,IAAIue,EAAEve,EAAE,IAAIue,EAAEve,EAAE,IAAIue,EAAEve,EAAE,IAAIue,EAAEve,EAAE,IAAIue,EAAEve,EAAE,IAAI,EAAEue,EAAEve,EAAE,IAAIue,EAAEve,KAAK,GAAGue,EAAEve,EAAE,IAAIA,EAAE,EAAEgd,GAAG,EAAEuB,EAAEve,EAAE,IAAI,EAAEue,EAAEve,IAAI,EAAEue,EAAEve,EAAE,IAAI,EAAEue,EAAEve,MAAM0N,GAAGqP,EAAUmC,IAAI,OAAOxR,CAAC,EAAEyR,EAAE,WAAW,IAAInC,EAAEhd,EAAE0N,EAAE9Q,EAAE4G,EAAE4a,EAAE,EAAEpO,EAAE,EAAE,IAAIhQ,EAAE,EAAEA,EAAE5M,EAAE,EAAE4M,IAAI,IAAIgd,EAAE,EAAEA,EAAE5pB,EAAE,EAAE4pB,KAAK3Y,EAAE2Y,EAAE5pB,EAAE4M,IAAIqE,EAAE2Y,EAAE,EAAE5pB,EAAE4M,IAAIqE,EAAE2Y,EAAE5pB,GAAG4M,EAAE,KAAKqE,EAAE2Y,EAAE,EAAE5pB,GAAG4M,EAAE,OAAOqE,EAAE2Y,EAAE5pB,EAAE4M,IAAIqE,EAAE2Y,EAAE,EAAE5pB,EAAE4M,IAAIqE,EAAE2Y,EAAE5pB,GAAG4M,EAAE,KAAKqE,EAAE2Y,EAAE,EAAE5pB,GAAG4M,EAAE,QAAQoe,GAAGrB,EAAUqC,IAAI,IAAIpf,EAAE,EAAEA,EAAE5M,EAAE4M,IAAI,CAAC,IAAIue,EAAE,GAAG,EAAE7Q,EAAE9Q,EAAEogB,EAAE,EAAEA,EAAE5pB,EAAE4pB,KAAKxZ,EAAEa,EAAE2Y,EAAE5pB,EAAE4M,KAAKpD,EAAE2hB,EAAE7Q,KAAK6Q,IAAI7Q,GAAG,EAAEsC,IAAIpT,EAAE4G,GAAG,GAAE,EAAG4a,GAAGY,EAAEtR,GAAGsC,EAAE,IAAIA,GAAGA,GAAG,IAAIrC,EAAEqC,EAAEqO,EAAE,EAAE,IAAI1Q,GAAGA,GAAG,EAAEA,IAAI,EAAEA,EAAEva,EAAEA,GAAGua,GAAGva,EAAEA,EAAEirB,IAAI,IAAID,GAAGC,EAAEtB,EAAUsC,GAAGrC,EAAE,EAAEA,EAAE5pB,EAAE4pB,IAAI,CAAC,IAAIuB,EAAE,GAAG,EAAE7Q,EAAE9Q,EAAEoD,EAAE,EAAEA,EAAE5M,EAAE4M,KAAKwD,EAAEa,EAAE2Y,EAAE5pB,EAAE4M,KAAKpD,EAAE2hB,EAAE7Q,KAAK6Q,IAAI7Q,GAAG,EAAE9Q,EAAE4G,EAAE4a,GAAGY,EAAEtR,GAAG,OAAO0Q,CAAC,EAAEpe,EAAEsf,SAAS,SAAStC,GAAG,IAAIhd,EAAEue,EAAES,EAAE9M,EAAEqN,EAAEC,EAAEC,EAAEC,EAAEC,EAAE5C,EAAU6C,UAAUzN,EAAE4K,EAAU6B,KAAKiB,EAAE9C,EAAU8B,KAAK3M,EAAE8K,EAAEhnB,OAAO4G,EAAE,EAAE,MAAMA,IAAIoiB,EAAE,GAAGtR,EAAE,GAAG,IAAI9Q,EAAE,GAAG4G,EAAEmc,EAAEX,KAAKZ,EAAEuB,EAAEX,KAAKhP,EAAE2P,EAAEX,KAAKrR,EAAEgS,EAAEX,GAAG9M,IAAI8M,EAAEhP,GAAGxM,EAAE4a,GAAGA,EAAE,GAAGxhB,GAAG,IAAI,YAAYA,EAAE,IAAI,IAAIxJ,EAAE,GAAG,EAAEwJ,EAAE2iB,EAAEvP,GAAGA,EAAErC,IAAInK,EAAE4a,GAAGA,EAAElM,EAAE,EAAEA,EAAEqN,EAAErN,IAAIlI,EAAEkI,GAAG,EAAE,IAAImM,EAAErB,EAAE8C,MAAM,GAAG5N,EAAE,EAAEA,EAAE9e,EAAEA,EAAE8e,IAAI7N,EAAE6N,GAAG,EAAE,IAAIA,EAAE,EAAEA,GAAG9e,GAAGA,EAAE,GAAG,GAAG,EAAE8e,IAAIoM,EAAEpM,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAAC,IAAI8M,EAAE,EAAET,EAAE,EAAE,GAAGrM,IAAI8M,EAAE5rB,EAAE,GAAG,GAAG8e,IAAIqM,EAAEnrB,EAAE,GAAGiR,EAAEka,EAAE,EAAEnrB,GAAG4rB,EAAE,IAAI,EAAEhf,EAAE,EAAEA,EAAE,EAAEA,IAAIqE,EAAEka,EAAEve,EAAE5M,EAAE4rB,GAAG,EAAE3a,EAAEka,EAAEnrB,GAAG4rB,EAAEhf,EAAE,IAAI,EAAEqE,EAAEka,EAAE,EAAEnrB,GAAG4rB,EAAEhf,IAAI,EAAEqE,EAAEka,EAAEve,EAAE,EAAE5M,GAAG4rB,EAAE,IAAI,EAAE,IAAIhf,EAAE,EAAEA,EAAE,EAAEA,IAAIye,EAAEF,EAAEve,EAAEgf,EAAE,GAAGP,EAAEF,EAAE,EAAES,EAAEhf,EAAE,GAAGye,EAAEF,EAAE,EAAES,EAAEhf,GAAGye,EAAEF,EAAEve,EAAE,EAAEgf,EAAE,GAAG,IAAIhf,EAAE,EAAEA,EAAE,EAAEA,IAAIqE,EAAEka,EAAEve,EAAE5M,GAAG4rB,EAAE,IAAI,EAAE3a,EAAEka,EAAE,EAAEnrB,GAAG4rB,EAAEhf,EAAE,IAAI,EAAEqE,EAAEka,EAAE,EAAEnrB,GAAG4rB,EAAEhf,IAAI,EAAEqE,EAAEka,EAAEve,EAAE,EAAE5M,GAAG4rB,EAAE,IAAI,EAAE,GAAGpiB,EAAE,EAAE,IAAIsV,EAAE6K,EAAUgD,OAAOnjB,GAAG2hB,EAAEnrB,EAAE,IAAI,CAAC,IAAI4M,EAAE5M,EAAE,EAAE4M,EAAEkS,EAAE,IAAIwM,EAAE1e,EAAEue,KAAKve,EAAEkS,KAAKlS,GAAGkS,EAAE,GAAGqM,GAAGrM,EAAE,EAAE,MAAMwM,EAAE,EAAEH,GAAGrM,GAAGwM,EAAEH,EAAE,GAAG,IAAIla,EAAE,EAAEjR,GAAGA,EAAE,IAAI,EAAEmrB,EAAE,EAAEA,EAAE,EAAEA,IAAIE,EAAE,EAAEF,GAAGE,EAAErrB,EAAE,EAAEmrB,GAAGE,EAAE,EAAEF,EAAEnrB,EAAE,GAAG,IAAI4M,EAAE,EAAEA,EAAE,EAAEA,IAAIye,EAAEze,EAAE,GAAGye,EAAEze,EAAE5M,EAAE,EAAE,GAAGqrB,EAAEze,EAAE5M,EAAE,GAAG,IAAI4M,EAAE,EAAEA,EAAE,EAAEA,IAAIye,EAAEze,EAAE,GAAG,IAAIA,EAAE,EAAEA,EAAE,EAAEA,IAAIye,EAAEze,EAAE5M,EAAE,EAAE,GAAGqrB,EAAE,EAAEze,GAAG,IAAIue,EAAE,EAAEA,EAAE,EAAEA,IAAIE,EAAE,EAAEF,EAAEnrB,EAAE,GAAG,IAAI4M,EAAE,EAAEA,EAAE5M,EAAE,GAAG4M,IAAI,EAAEA,GAAGye,EAAE,EAAEze,EAAE,GAAGye,EAAE,EAAE,EAAEze,KAAKqE,EAAE,EAAErE,EAAE,EAAE5M,GAAG,EAAEiR,EAAE,EAAEjR,GAAG,EAAE4M,IAAI,GAAG,GAAGpD,EAAE,EAAE,IAAIsV,EAAE6K,EAAUiD,KAAKpjB,EAAE,GAAGoiB,EAAE,GAAGhf,EAAE,EAAEA,EAAE,EAAEA,IAAI,IAAIue,EAAE,EAAEA,EAAE,EAAEA,IAAIS,IAAI,GAAGA,EAAE,GAAGpiB,GAAGoiB,EAAE,GAAG9M,GAAG8M,IAAI3a,EAAE,EAAErE,EAAE5M,GAAG,EAAEmrB,EAAEnrB,EAAE,KAAK,EAAEiR,EAAE,EAAEka,EAAEnrB,EAAE,GAAGA,GAAG,EAAE4M,IAAI,IAAIye,EAAE,EAAEze,EAAE,EAAEue,EAAEnrB,EAAE,IAAIqrB,EAAE,EAAEF,EAAEnrB,EAAE,GAAG,EAAE4M,IAAI,IAAIue,EAAE,EAAEA,EAAEnrB,EAAEmrB,IAAI,IAAIve,EAAE,EAAEA,GAAGue,EAAEve,IAAIqE,EAAErE,EAAE5M,EAAEmrB,IAAIE,EAAEze,EAAEue,GAAG,IAAIgB,EAAElB,EAAEroB,OAAOwpB,EAAE,EAAEA,EAAED,EAAEC,IAAIxV,EAAEwV,GAAGnB,EAAE4B,WAAWT,GAAG,GAAGnB,EAAErU,EAAE8V,MAAM,GAAGP,IAAIvf,EAAEgQ,GAAGxM,EAAE4a,GAAGA,GAAG,IAAImB,EAAEvf,EAAE,EAAEpD,EAAE,GAAG2iB,KAAKC,EAAED,EAAE3iB,EAAE,EAAE,CAAC,IAAIyhB,EAAEmB,EAAE,GAAG,EAAEnB,EAAEmB,EAAE,GAAG,EAAEA,KAAYnB,EAAEmB,EAAE,IAAI,KAAftN,EAAEmM,EAAEmB,KAAkB,EAAEnB,EAAEmB,EAAE,GAAGtN,GAAG,EAAEmM,EAAE,IAAI,IAAIkB,GAAG,EAAElB,EAAE,GAAGkB,GAAG,EAAElB,EAAE,GAAG,GAAGkB,GAAG,OAAO,CAAC,IAAIlB,EAAEmB,EAAE,GAAG,EAAEnB,EAAEmB,EAAE,GAAG,EAAEA,KAAYnB,EAAEmB,EAAE,IAAI,KAAftN,EAAEmM,EAAEmB,KAAkB,EAAEnB,EAAEmB,EAAE,GAAGtN,GAAG,EAAEmM,EAAE,IAAI,IAAIkB,GAAG,EAAElB,EAAE,GAAG,GAAGkB,GAAG,EAAE,IAAIC,EAAED,EAAE,GAAG3iB,EAAE,IAAI4iB,EAAExf,GAAGqe,EAAEmB,KAAK,IAAInB,EAAEmB,KAAK,GAAG,IAAIhB,EAAE,GAAG,EAAEgB,EAAE,EAAEA,EAAE7R,EAAE6R,IAAI,CAAC,IAAIhB,EAAEgB,EAAE,GAAG,EAAEC,EAAED,EAAEC,EAAE,EAAEA,IAAIjB,EAAEiB,GAAGjB,EAAEiB,GAAGjB,EAAEiB,EAAE,GAAGtN,EAAEwM,EAAEkB,EAAErB,EAAEiB,IAAID,IAAIhB,EAAEiB,EAAE,GAAGjB,EAAE,GAAGrM,EAAEwM,EAAEkB,EAAErB,EAAE,IAAIgB,IAAI,IAAIA,EAAE,EAAEA,GAAG7R,EAAE6R,IAAIhB,EAAEgB,GAAGK,EAAErB,EAAEgB,IAAI,IAAIR,EAAEhf,EAAEue,EAAE,EAAEiB,EAAE,EAAEA,EAAEhc,EAAEgc,IAAI3iB,EAAE0hB,EAAEvO,EAAEgP,EAAErR,GAAG4Q,GAAGvO,EAAEgP,GAAGrR,EAAE,IAAI6R,EAAE,EAAEA,EAAEpB,EAAEoB,IAAI3iB,EAAE0hB,EAAEvO,EAAE,EAAEgP,EAAErR,GAAG4Q,GAAGvO,EAAE,EAAEgP,GAAGrR,EAAE,IAAI4Q,EAAE,EAAEiB,EAAE,EAAEA,EAAExP,EAAEwP,IAAI,CAAC,IAAIC,EAAE,EAAEA,EAAEjc,EAAEic,IAAIzV,EAAEuU,KAAKF,EAAEmB,EAAEC,EAAEzP,GAAG,IAAIyP,EAAE,EAAEA,EAAErB,EAAEqB,IAAIzV,EAAEuU,KAAKF,EAAE7a,EAAEwM,EAAEwP,EAAEC,GAAGzP,EAAE,IAAI,IAAIyP,EAAE,EAAEA,EAAErB,EAAEqB,IAAIzV,EAAEuU,KAAKF,EAAE7a,EAAEwM,EAAEwP,EAAEC,GAAGzP,EAAE,IAAI,IAAIwP,EAAE,EAAEA,EAAE7R,EAAE6R,IAAI,IAAIC,EAAE,EAAEA,EAAEjc,EAAE4a,EAAEqB,IAAIzV,EAAEuU,KAAKF,EAAEre,EAAEwf,EAAEC,EAAE9R,GAAG,IAAI0Q,EAAErU,EAAEhK,EAAEue,EAAEnrB,EAAE,EAAE4rB,EAAEO,EAAE,EAAEG,GAAG1P,EAAErC,IAAInK,EAAE4a,GAAGA,EAAEoB,EAAE,EAAEA,EAAEE,EAAEF,IAAI,IAAItN,EAAEmM,EAAEmB,GAAGC,EAAE,EAAEA,EAAE,EAAEA,IAAIvN,IAAI,EAAE,CAAC,IAAIA,IAAI7N,EAAErE,EAAE5M,EAAEmrB,GAAG,GAAG,GAAGgB,EAAEvf,KAAKA,IAAIgf,EAAE,GAAGT,EAAEA,KAAKS,GAAGA,EAAE,IAAIhf,GAAG,KAAKA,IAAIue,EAAE,IAAIA,GAAGnrB,EAAE,EAAEmrB,KAAKS,GAAGA,EAAE,IAAIhf,GAAG,KAAKA,IAAIue,GAAG,KAAKgB,GAAGA,QAAQT,EAAE9e,EAAEue,IAAI,IAAIF,EAAEha,EAAEyb,MAAM,GAAG5N,EAAE,EAAEqM,EAAE,IAAIS,EAAE,EAAEA,EAAE,IAAID,EAAEC,IAAIhf,EAAEmf,KAAKZ,IAAIA,EAAEve,EAAEkS,EAAE8M,GAAG,GAAG9M,GAAG8M,IAAI3a,EAAEga,EAAEyB,MAAM,GAAG,IAAI5N,GAAG8M,GAAGD,EAAE7M,GAAGqM,EAAExB,EAAUmD,QAAQhO,GAAGxE,EAAE,GAAG,IAAIsR,EAAE,EAAEA,EAAE,EAAEA,IAAIT,IAAI,EAAE,EAAEA,IAAIla,EAAEjR,EAAE,EAAE4rB,EAAE,EAAE5rB,GAAG,EAAE4rB,EAAE,EAAE3a,EAAE,EAAEjR,EAAE4rB,GAAG,EAAE3a,EAAE,EAAEjR,GAAG4rB,EAAE,IAAI,GAAG,IAAIA,EAAE,EAAEA,EAAE,EAAEA,IAAIT,IAAI,EAAE,EAAEA,IAAIla,EAAE,EAAEjR,GAAGA,EAAE,EAAE4rB,IAAI,EAAEA,EAAE3a,EAAE,EAAE2a,EAAE,EAAE5rB,GAAG,EAAEiR,EAAE,EAAE,EAAEjR,GAAG,GAAG,OAAOiR,CAAC,EAAErE,EAAEmgB,KAAK,WAAWzS,EAAE1N,EAAEie,SAAS,IAAIjB,EAAEhd,EAAEsf,SAAStf,EAAEX,KAAKW,EAAE0d,QAAQ1d,EAAEogB,WAAWpD,EAAE5pB,GAAG4M,EAAEqgB,YAAYrD,EAAE5pB,EAAE,EAAE4M,EAAEmgB,MAAM,CCChzK,SAAUG,EAAeC,EAAcxC,EAAa,QAASC,EAAY,QAW3E,OAVW,IAAIjB,EAAU,CACrB1d,IAAKkhB,GAAQ,QACbvI,KAAM,IACN+F,aACAC,YACAN,SAAS,EACTO,SAAU,EACVC,UAAU,EACVC,WAAY,KAELqC,QAAQ,YAAYC,GACnC,kBDbuzK1D,EAAU2D,UAAU,CAACL,YAAY,SAASrD,EAAEhd,GAAG,IAAI/P,KAAK6tB,MAAM7tB,KAAK6tB,IAAI7tB,KAAK0wB,WAAW1wB,KAAK0tB,aAAa1tB,KAAK6tB,KAAK,OAAO7tB,KAAKytB,SAAQ,EAAGztB,KAAK0tB,WAAWC,SAASC,cAAc,YAAY5tB,KAAKmwB,WAAWpD,EAAEhd,GAAG,IAAI0N,EAAEzd,KAAK+nB,KAAKpb,EAAE3M,KAAK6tB,IAAIlhB,EAAEgkB,UAAU,EAAE,IAAIxtB,EAAEsa,EAAEta,GAAG4M,EAAE,GAAG5M,EAAEZ,KAAKquB,MAAMztB,EAAE,IAAI,IAAIoQ,EAAE,EAAEvT,KAAKiuB,UAAUthB,EAAEkkB,OAAOC,MAAMnkB,EAAEkkB,OAAOvI,OAAOnlB,EAAE4M,EAAEwD,EAAE,GAAG5G,EAAEkkB,OAAOC,MAAMnkB,EAAEkkB,OAAOvI,OAAO7K,EAAE9Q,EAAEokB,UAAU,EAAE,EAAEtT,EAAEA,GAAG9Q,EAAEqkB,UAAUhxB,KAAK8tB,WAAWnhB,EAAEskB,SAAS,EAAE,EAAE9tB,GAAG4M,EAAE,GAAG5M,GAAG4M,EAAE,IAAIpD,EAAEqkB,UAAUhxB,KAAK+tB,UAAU,QAAQI,EAAE,EAAEA,EAAEpe,EAAEoe,IAAI,QAAQpO,EAAE,EAAEA,EAAEhQ,EAAEgQ,IAAIgN,EAAEhN,EAAEhQ,EAAEoe,IAAIxhB,EAAEskB,SAAS9tB,GAAGoQ,EAAE4a,GAAGhrB,GAAGoQ,EAAEwM,GAAG5c,EAAEA,EAAE,EAAEgtB,WAAW,SAASpD,EAAEhd,GAAG,IAAI0N,EAAEzd,KAAK2M,EAAEpK,KAAKquB,MAAM5wB,KAAK+nB,KAAKhY,EAAE,KAAK,KAAK5M,EAAE4M,GAAG0N,EAAEwQ,SAAS,EAAE,EAAExQ,EAAEyQ,YAAY3a,EAAEkK,EAAEyQ,WAAWC,EAAE,SAASxhB,EAAE,WAAWA,EAAE,IAAIoT,EAAEtC,EAAEqQ,WAAWpQ,EAAED,EAAEsQ,UAAUK,EAAET,SAASC,cAAc,SAASQ,EAAE8C,MAAMC,QAAQ,qCAAqC,QAAQpX,EAAE3F,EAAEuZ,SAASC,cAAc,MAAMS,EAAEV,SAASC,cAAc,MAAMU,EAAE,WAAW,OAAOD,EAAE+C,WAAW,EAAE7C,EAAE,WAAW,IAAIxB,EAAEuB,IAAI,OAAOvB,EAAEmE,MAAMC,QAAQhD,EAAE,cAAcpO,EAAEgN,CAAC,EAAEyB,EAAE,SAASzB,GAAG,QAAQhd,EAAEgd,EAAEsE,WAAW5T,EAAE,EAAEA,EAAElK,EAAEkK,IAAIsP,EAAEuE,aAAa/C,IAAIxe,GAAGgd,EAAEwE,YAAYhD,IAAI,EAAEE,EAAE,EAAEA,EAAE1e,EAAE0e,IAAI,CAAC,IAAIC,EAAEta,EAAEgd,YAAYhD,EAAEmD,YAAY7C,GAAG,QAAQ9hB,EAAE,EAAEA,EAAEmD,EAAEnD,IAAI,GAAG,IAAImgB,EAAE0B,EAAE1e,EAAEnD,GAAG,CAAC,IAAIiiB,GAAG9U,OAAE,GAAQA,EAAEuU,KAAK4C,MAAMC,QAAQhD,EAAE,cAAczQ,EAAE3D,GAAG2U,EAAE6C,YAAY1C,OAAO,CAAC,IAAIC,EAAEP,IAAIG,EAAE6C,YAAYzC,GAAGrR,EAAEwQ,UAAUO,EAAEE,GAAGjR,EAAEwQ,UAAU,SAASlB,GAAG,QAAQhd,EAAEgd,EAAEsE,WAAW1kB,EAAE,EAAEA,EAAE8Q,EAAEyQ,WAAWvhB,IAAI,CAAC,QAAQ4G,EAAEa,EAAEgd,YAAYjD,EAAE,EAAEA,EAAEhrB,EAAEgrB,IAAI,CAAC,IAAIpO,EAAEwO,IAAIhb,EAAEge,YAAYxR,GAAGgN,EAAEwE,YAAYhe,GAAGwZ,EAAEuE,aAAa/d,EAAE6d,WAAU,GAAIrhB,GAAG,CAA9K,CAAgLqe,GAAG3Q,EAAEiQ,WAAW8D,UAAU,GAAG/T,EAAEiQ,WAAW6D,YAAYnD,EAAE,EAAEsC,WAAW,SAAS3D,GAAG,OAAOA,EAAE2D,YAAY3D,EAAE2D,WAAW,MAAM3D,EAAE2D,WAAW,OAAOe,QAAQC,IAAI,4CAA2C,EAAG,EAAEnB,QAAQ,SAASxD,GAAG,GAAG/sB,KAAK6tB,IAAI,CAAC,IAAI9d,EAAE/P,KAAKitB,WAAWF,GAAG,IAAIhd,EAAE,MAAM,IAAI4hB,MAAM5E,EAAE,+BAA+B,IAAItP,EAAE,IAAImU,MAAM,OAAOnU,EAAE+S,IAAIxwB,KAAK0tB,WAAWmE,UAAU9hB,GAAG0N,EAAE,GAAGqP,EAAUgD,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIhD,EAAUiD,KAAK,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMjD,EAAUmD,QAAQ,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,MAAMnkC,GAAG,EAAElC,EAAUqC,GAAG,EAAErC,EAAUmC,GAAG,GAAGnC,EAAUsC,GAAG,2FEuBlwW,IAAM0C,EAAsB,MAA7B,MAAOA,EAOTvxB,YACoCuX,EACxBzX,GADwBL,KAAA8X,QACxB9X,KAAAK,YARIL,KAAAoa,MAAQpa,KAAK8X,MAAMsC,MACnBpa,KAAA+xB,WAAU1B,KACtB,GAAGzxB,SAASozB,UACRhyB,KAAKK,UAAUiB,IAAI,wBAtBV,oCAuBXoB,QAAQ,SAAU1C,KAAK8X,MAAMsC,OAAOha,SAKvC,CAAC8C,SAAAlD,KAAA,mBAAAmD,iBAVK2uB,GAAsB9zB,MAQnB0K,MAAe1K,MAAAoF,KAAA,EAAAF,SAAAlD,KAAA,UAAA4c,EAAAnZ,IAAA,MARlBquB,EAAsBpuB,UAAA,sBAAAI,MAAA,EAAAC,KAAA,EAAAC,OAAA,eAAA4E,WAZGC,iFAAO,8KADrC7K,MAAA,WAAAA,CAAQ,UACJA,MAAA,KAAkDA,QAClDA,MAAA,WACAA,MAAA,aAAAA,CAA8B,cAChBA,MAAA,WAAKA,YAGvBA,MAAA,YACIA,MAAA,WACJA,eARsDA,MAAA,GAAAA,MAAA,MAAAmG,EAAAiW,MAAA,KAAAjW,EAAAiW,MAAArY,MAAA/D,MAAA,GAOpBA,MAAA,GAAAA,MAAA,MAAAmG,EAAA4tB,QAAA/zB,0CAK7B8zB,CAAsB,mNCFvB9zB,MAAA,aAAAA,CAAmE,cACrDA,MAAA,WAAKA,iCAkBfA,MAAA,WAAAA,CAAuD,cACjCA,MAAA,UAAIA,MAAA,UAAMA,MAAA,OAACA,QAAOA,MAAA,OAACA,QACrCA,MAAA,4BAIJA,kCAcIA,MAAA,WAAAA,CAGC,WACGA,MAAA,MAAiBA,QACjBA,MAAA,YAGIA,MAAA,mCAEJA,iCAFIA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAW,EAAAoL,KAAA0F,MAAAlR,KAAA,qBAAAP,MAAA,IAAAW,EAAAoL,KAAA0F,MAAAlR,KAAAI,EAAAH,aAAA,+BAIRR,MAAA,WAAAA,CAGC,WACGA,MAAA,MAAqBA,QACrBA,MAAA,yBAOJA,+BALQA,MAAA,GAAAA,MAAA,OAAAiZ,EAAAlN,KAAA0F,MAAAlR,KAAAP,CAAwB,MAAAiZ,EAAAuT,aAAxBxsB,CAAwB,WAAAiZ,EAAAgb,yCArDxCj0B,MAAA,YAAAA,CAA+D,WAA/DA,CAA+D,cAEpCA,MAAA,WAAKA,MAAA,UAAMA,MAAA,OAACA,QAAOA,MAAA,OAACA,QACvCA,MAAA,uBACIA,MAAA,cAOAA,MAAA,eAAAA,MAAA,OAAyCA,YAGjDA,MAAA,GAAAk0B,EAAA,cAOAl0B,MAAA,YAAAA,CAA2B,YACvBA,MAAA,OAAkBA,QAClBA,MAAA,aAIIA,MAAA,IAIJA,UAEJA,MAAA,aACIA,MAAA,GAAAm0B,EAAA,cAYAn0B,MAAA,GAAAo0B,EAAA,cAaJp0B,iCA3DeA,MAAA,YAAAC,EAAA8L,MAca/L,MAAA,IAAAA,MAAA,OAAAC,EAAAo0B,qBAapBr0B,MAAA,GAAAA,MAAA,WAAAC,EAAA8L,KAAAuoB,SAAA5mB,WAAA,MAAAzN,EAAA8L,KAAAuoB,SAAA5mB,UAAA+D,MAAA,QAAAxR,EAAA8L,KAAAuoB,SAAA5mB,UAAA+D,MAAA,GAAA3N,gBAAA,MAAA7D,EAAA8L,KAAAuoB,SAAA5mB,WAAA,MAAAzN,EAAA8L,KAAAuoB,SAAA5mB,UAAA+D,MAAA,QAAAxR,EAAA8L,KAAAuoB,SAAA5mB,UAAA+D,MAAA,GAAA1N,MAAA,KASC/D,MAAA,GAAAA,MAAA,OAAAC,EAAA8L,KAAAuoB,SAAA/zB,MAYAP,MAAA,GAAAA,MAAA,OAAAC,EAAA8L,KAAAuoB,SAAApwB,mDAjDjBlE,MAAA,GACIA,MAAA,EAAAu0B,EAAA,eA6DAv0B,MAAA,aAAAA,CAAiE,cAC1BA,MAAA,mBAAAA,MAAAa,GAAA,MAAAC,EAAAd,QAAA,OAASA,MAAAc,EAAA0zB,OAAM,GAAlDx0B,MAAA,KAEAA,UAERA,gCAlEWA,MAAA,GAAAA,MAAA,OAAAqB,EAAA0K,gCAoEP/L,MAAA,YACIA,MAAA,oBACAA,MAAA,OAAGA,MAAA,oBAAqBA,gCADCA,MAAA,GAAAA,MAAA,eACtBA,MAAA,GAAAA,YAAA,IAAA4H,EAAAwF,WAiBZ,IAAMqnB,EAA4B,MAAnC,MAAOA,EAGT,QAAW1oB,GACP,OAAO/J,KAAK2jB,YAAY5Z,IAC5B,CAEA,gBAAWygB,GACP,OAAOxqB,KAAKK,UAAUiB,IAAI,4BAA8B,GAC5D,CAEA,uBAAW+wB,GACP,OAAOryB,KAAKK,UAAUiB,IAAI,iCAC9B,CAEA,iBAAW2wB,GACP,OAAOjyB,KAAKK,UAAUiB,IAAI,uBAC9B,CAEA,eAAW9C,GACP,OAAOwB,KAAKK,UAAU7B,WAC1B,CAEA+B,YACqCuX,EACzBzX,EACAsjB,EACAD,EACA/Y,GAJyB3K,KAAA8X,QACzB9X,KAAAK,YACAL,KAAA2jB,cACA3jB,KAAA0jB,cACA1jB,KAAA2K,UA3BI3K,KAAAoL,QAAUpL,KAAK2jB,YAAYvY,OA4BxC,CAEIpK,WACHhB,KAAK2jB,YAAY9Z,UACjB7J,KAAK+J,KAAKE,WAAW,CACjByB,UAAW,CAAC1L,KAAK8X,MAAMsC,OACvBjM,QAAMhO,QAAcC,MACpBsyB,aAAWvyB,SAEnB,CAEaqyB,OAAI,IAAA9qB,EAAA1H,KAAA,SAAA2H,KAAA,kBACPD,EAAKic,YAAYvS,WAAWtJ,MAAON,IACrCO,cAAYP,GACNA,IAENE,EAAKrH,UAAUsyB,SAASzyB,cAAcyG,SAAS,aAC/Ce,EAAKiD,QAAQioB,SAAS,CAAC,QAAS,UAAW,aAAU,EAErD5qB,MAAc,6BAElBN,EAAKgc,YAAYvS,OAAQ,EAVZ,EAWjB,CAACjO,SAAAlD,KAAA,mBAAAmD,iBAnDQsvB,GAA4Bz0B,MAwBzB0K,MAAe1K,MAAAoF,MAAApF,MAAAqF,KAAArF,MAAAsF,MAAAtF,MAAAuF,MAAA,EAAAL,SAAAlD,KAAA,UAAA+X,EAAAtU,IAAA,MAxBlBgvB,EAA4B/uB,UAAA,4BAAAI,MAAA,GAAAC,KAAA,EAAAC,OAAA,eAAA4E,uBA9FpBC,wFAqEoDA,mFAtDhCA,0FAGDA,sGAWRA,mFAgBIA,kFAYAA,qwCA1D5B7K,MAAA,WAAAA,CAAQ,QACJA,MAAA,KAAoBA,QACpBA,MAAA,WACAA,MAAA,EAAA60B,EAAA,iCAGJ70B,QACAA,MAAA,EAAA80B,EAAA,uCAoEA90B,MAAA,EAAA+0B,EAAA,yBAAA/0B,8BAxEaA,MAAA,GAAAA,MAAA,QAAAA,MAAA,IAAAmG,EAAAiH,UAIEpN,MAAA,GAAAA,MAAA,QAAAA,MAAA,IAAAmG,EAAAiH,SAAApN,CAA0B,WAAA0B,4UAwFpC+yB,CAA4B,2GCpErBz0B,MAAA,SAA0CA,MAAA,GAAUA,+BAAVA,MAAA,GAAAA,MAAAmH,EAAAoI,gCAC1CvP,MAAA,UACIA,MAAA,GACJA,+BADIA,MAAA,GAAAA,MAAA,IAAA4H,EAAAyM,WAAA,+BAEJrU,MAAA,UACIA,MAAA,mCAEJA,+BAFIA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAC,EAAAgE,MAAA,wBAAAjE,MAAA,IAAAC,EAAA8C,IAAA,4CApBZ/C,MAAA,WAUIA,MAAA,WACAA,MAAA,UAAAA,CAAqB,UAEbA,MAAA,GACJA,QACAA,MAAA,EAAAg1B,EAAA,WACAh1B,MAAA,EAAAi1B,EAAA,WAGAj1B,MAAA,EAAAk1B,EAAA,WAIJl1B,gCApBAA,MAAA,4EAAAqB,EAAA8zB,MAAA,IAAA9zB,EAAA+zB,OADAp1B,MAAA,KAAAqB,EAAA4G,QAWQjI,MAAA,GAAAA,MAAA,IAAAqB,EAAA0C,MAAA1C,EAAA4G,QAAA5G,EAAAC,GAAA,KAE0BtB,MAAA,GAAAA,MAAA,OAAAqB,EAAAkO,MACAvP,MAAA,GAAAA,MAAA,OAAAqB,EAAAkO,MAAAlO,EAAAgT,YAGCrU,MAAA,GAAAA,MAAA,OAAAqB,EAAA4C,QAiC5C,IAAMsgB,EAAwB,MAA/B,MAAOA,EAeThiB,YACsC8yB,EAC1BC,GAD0BtzB,KAAAqzB,WAC1BrzB,KAAAszB,WAfItzB,KAAAV,GAAKU,KAAKqzB,SAAS/zB,GACnBU,KAAAiG,OAASjG,KAAKqzB,SAASptB,OACvBjG,KAAA+B,KAAO/B,KAAKqzB,SAAStxB,KACrB/B,KAAAuN,KAAOvN,KAAKqzB,SAAS9lB,KACrBvN,KAAAiC,MAAQjC,KAAKqzB,SAASpxB,MACtBjC,KAAAe,IAAMf,KAAKqzB,SAAStyB,IACpBf,KAAAR,OAASQ,KAAKqzB,SAAS7zB,OACvBQ,KAAAqS,WAAarS,KAAKqzB,SAAShhB,UASxC,CAEIrR,SAASuyB,EAAgB,GACxBA,EAAQ,IACZC,WAAW,KACP,MAAMC,EACFzzB,KAAKszB,SAASI,cAAcC,eAAeA,cAC/C,IAAKF,EAAQ,OAAOzzB,KAAKgB,WAAWuyB,GACpC,MAAMzL,IACC8L,SAASH,EAAOvC,MAAM2C,IAAK,IAAM,IADlC/L,IAEC8L,SAASH,EAAOvC,MAAM4C,KAAM,IAAM,IAEzC9zB,KAAKozB,MAAQtL,KAAc,GAAM,SAAW,MAC5C9nB,KAAKmzB,MAAQrL,KAAc,GAAM,QAAU,QAC5C,IACP,CAEA,mBAAWiM,GACP,MAAO,EACX,CAAC7wB,SAAAlD,KAAA,mBAAAmD,iBArCQof,GAAwBvkB,MAgBrB+tB,KAAgB/tB,aAAA,EAAAkF,SAAAlD,KAAA,UAAA4c,EAAAnZ,IAAA,MAhBnB8e,EAAwB7e,UAAA,wBAAAI,MAAA,EAAAC,KAAA,EAAAC,OAAA,oeAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjE7BlG,MAAA,WAYAA,MAAA,EAAAg2B,EAAA,yBAAAh2B,8BAVIA,MAAA,UAAAi2B,EAAAj2B,CAAwB,cAAxBA,CAAwB,qBAAxBA,CAAwB,qBAAxBA,CAAwB,WAAxBA,CAAwB,aAOxBA,MAAA,KAAAmG,EAAA7E,GAAAtB,CAAc,SAAAmG,EAAA8B,mdAwDbsc,CAAwB,qHCpDzBvkB,MAAA,UAAAA,CASC,UAC2BA,MAAA,GAAeA,QACvCA,MAAA,SACIA,MAAA,GAEJA,gCAXAA,MAAA,4EAAAqB,EAAA8zB,MAAA,IAAA9zB,EAAA+zB,OADAp1B,MAAA,KAAAqB,EAAA4G,QAQwBjI,MAAA,GAAAA,MAAAqB,EAAA8oB,KAAApmB,MAEpB/D,MAAA,GAAAA,MAAA,IAAAqB,EAAA60B,aAAA,sBAAA70B,EAAA8oB,KAAA9T,QAAAtO,QAAA,QAQb,IAAMouB,EAA8B,MAArC,MAAOA,EAMT5zB,YACsC8yB,EAC1BC,EACA9yB,GAF0BR,KAAAqzB,WAC1BrzB,KAAAszB,WACAtzB,KAAAQ,UARLR,KAAAmoB,KAAmBnoB,KAAKqzB,SAASlL,KACjCnoB,KAAAk0B,aAAuBl0B,KAAKqzB,SAASa,YAQzC,CAEIlzB,SAASuyB,EAAgB,GACxBA,EAAQ,IACZC,WAAW,KACP,MAAMC,EACFzzB,KAAKszB,SAASI,cAAcC,eAAeA,cAC/C,IAAKF,EAAQ,OAAOzzB,KAAKgB,WAAWuyB,GACpC,MAAMzL,IACC8L,SAASH,EAAOvC,MAAM2C,IAAK,IAAM,IADlC/L,IAEC8L,SAASH,EAAOvC,MAAM4C,KAAM,IAAM,IAEzC9zB,KAAKozB,MAAQtL,KAAc,GAAM,SAAW,MAC5C9nB,KAAKmzB,MAAQrL,KAAc,GAAM,QAAU,QAC5C,IACP,CAEOsM,gBACHp0B,KAAKQ,QAAQqC,KAAKwxB,IAAiC,CAC/CtxB,KAAM,IAAK/C,KAAKqzB,WAExB,CAACnwB,SAAAlD,KAAA,mBAAAmD,iBA/BQgxB,GAA8Bn2B,MAO3B+tB,MAAgB/tB,mBAAAoF,MAAA,EAAAF,SAAAlD,KAAA,UAAA+X,EAAAtU,IAAA,MAPnB0wB,EAA8BzwB,UAAA,+BAAAI,MAAA,EAAAC,KAAA,EAAAC,OAAA,iTAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IApCnClG,MAAA,cAEIA,MAAA,0BAASmG,EAAAiwB,eAAe,GAExBp2B,MAAA,WAUJA,QACAA,MAAA,EAAAs2B,EAAA,yBAAAt2B,8BATQA,MAAA,GAAAA,MAAA,UAAAi2B,EAAAj2B,CAAwB,cAAxBA,CAAwB,qBAAxBA,CAAwB,qBAAxBA,CAAwB,WAAxBA,CAAwB,2CA8B3Bm2B,CAA8B,qGCxBpC,IAAME,EAA+B,MAAtC,MAAOA,EAOT9zB,YAA6CuX,GAAA9X,KAAA8X,QAN7B9X,KAAAmoB,KAAOnoB,KAAK8X,MAAMqQ,KAClBnoB,KAAAqU,QAAUrU,KAAK8X,MAAMzD,QAAQwO,OAAO,CAAC1W,EAAK4T,KACtD5T,EAAI4T,EAAEzgB,IAAM,OACL6M,GACR,GAEuE,CAACjJ,SAAAlD,KAAA,mBAAAmD,iBAPlEkxB,GAA+Br2B,MAOpB0K,MAAe,EAAAxF,SAAAlD,KAAA,UAAA4c,EAAAnZ,IAAA,MAP1B4wB,EAA+B3wB,UAAA,gCAAAI,MAAA,EAAAC,KAAA,EAAAC,OAAA,kJAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAZpClG,MAAA,WAAAA,CAAQ,UAC4BA,MAAA,GAAeA,QAC/CA,MAAA,aAAAA,CAA4C,cAC9BA,MAAA,WAAKA,YAGvBA,MAAA,YACIA,MAAA,mBACJA,eAPoCA,MAAA,GAAAA,MAAAmG,EAAAgkB,KAAApmB,MAMnB/D,MAAA,GAAAA,MAAA,OAAAmG,EAAAgkB,KAAAnqB,CAAa,cAAAmG,EAAAkQ,qDAKzBggB,CAA+B,+HCyBpBr2B,MAAA,kCAGIA,MAAA,SAAA4H,EAAAwU,MAAA5V,OAAA,0BAGJxG,MAAA,qCAiBAA,MAAA,YACIA,MAAA,GACJA,+BADIA,MAAA,GAAAA,MAAA,IAAAS,EAAAs1B,gBAAA,+BAOJ/1B,MAAA,WAAAA,CAIC,UACGA,MAAA,MAAqBA,QAAOA,MAAA,GAEhCA,+BAFgCA,MAAA,GAAAA,MAAA,GAAAW,EAAAyb,MAAAH,SAAA,QAAAtb,EAAAyb,MAAAH,SAAA,iDAO5Bjc,MAAA,WAIIA,MAAA,GACJA,kCADIA,MAAA,GAAAA,MAAA,IAAAu2B,EAAA,+BARRv2B,MAAA,WAIIA,MAAA,EAAAw2B,EAAA,aAMJx2B,+BAJ4BA,MAAA,GAAAA,MAAA,UAAAiZ,EAAAmD,MAAAvW,oCA9DxC7F,MAAA,WASIA,MAAA,WACAA,MAAA,UAAAA,CAAsB,WAOdA,MAAA,EAAAy2B,EAAA,aAMAz2B,MAAA,EAAA02B,EAAA,aAIJ12B,QACAA,MAAA,UAAAA,CAA2D,YAQnDA,MAAA,mBAGJA,MAAA,QAAAA,QACAA,MAAA,GAAA22B,EAAA,cAGJ32B,QACAA,MAAA,YAAAA,CAAqC,YAE7BA,MAAA,IACJA,QACAA,MAAA,GAAA42B,EAAA,cAQA52B,MAAA,GAAA62B,EAAA,aAWJ72B,kCA7DJA,MAAA,4BAAAmH,EAAAguB,MAAAn1B,CAA2C,+BAAAmH,EAAAiuB,OAJ3Cp1B,MAAA,WAAAmH,EAAAiV,MAAA,KAAAjV,EAAAiV,MAAA9a,IAWQtB,MAAA,GAAAA,MAAA,aAAAmH,EAAAiV,MAAA5V,OAAA,GAAAxG,CAAoC,OAAAmH,EAAAiV,MAAA5V,OAAA,GAApCxG,CAAoC,OAAAmH,EAAAiV,MAAA5V,OAAA,IAM/BxG,MAAA,GAAAA,MAAA,OAAAmH,EAAAiV,MAAA5V,OAAA,IAMAxG,MAAA,GAAAA,MAAA,OAAAmH,EAAAiV,MAAA5V,OAAA,IAMDxG,MAAA,GAAAA,MAAA,qEAAAmH,EAAA3F,0CASkBxB,MAAA,GAAAA,MAAA,wBAAAmH,EAAA3F,QAMlBxB,MAAA,GAAAA,MAAA,IAAAmH,EAAAiV,MAAAtY,cAAAqD,EAAAiV,MAAArY,KAAA,KAKC/D,MAAA,GAAAA,MAAA,OAAAmH,EAAAiV,MAAAH,UAAA,GAOAjc,MAAA,GAAAA,MAAA,cAAAmH,EAAAiV,MAAAvW,SAAA,KAAAsB,EAAAiV,MAAAvW,SAAAkC,QAAA,GAAAZ,EAAA2vB,gBAuCtB,IAAMC,EAAyB,MAAhC,MAAOA,EAYT,iBAAWD,GACP,OAAQ90B,KAAKK,UAAUiB,IAAI,2BAC/B,CAEAf,YACsC8yB,EAC1BhzB,EACAizB,GAF0BtzB,KAAAqzB,WAC1BrzB,KAAAK,YACAL,KAAAszB,WAjBItzB,KAAAoa,MAAQpa,KAAKqzB,SAASjZ,MAEtBpa,KAAAkP,OAASlP,KAAKqzB,SAASnkB,OAEvBlP,KAAAR,OAASQ,KAAKqzB,SAAS7zB,MAcpC,CAEIwB,WACHwyB,WAAW,IAAMxzB,KAAKg1B,eAAgB,IAC1C,CAEOA,eACH,MAAMC,EAAMj1B,KAAKszB,SAASI,cAAcwB,wBACxCl1B,KAAKmzB,MAAQ8B,EAAIhT,EAAI0L,SAASwH,KAAKC,YAAc,EAAI,QAAU,MAC/Dp1B,KAAKozB,MAAQ6B,EAAI/S,EAAIyL,SAASwH,KAAKE,aAAe,EAAI,MAAQ,QAClE,CAEA,mBAAWtB,GACP,MAAO,EACX,CAAC7wB,SAAAlD,KAAA,mBAAAmD,iBAlCQ4xB,GAAyB/2B,MAiBtB+tB,KAAgB/tB,MAAAoF,KAAApF,aAAA,EAAAkF,SAAAlD,KAAA,UAAAwD,EAAAC,IAAA,MAjBnBsxB,EAAyBrxB,UAAA,yBAAAI,MAAA,EAAAC,KAAA,EAAAC,OAAA,eAAA4E,aA7DVC,kOAiBWA,i2CAnE/B7K,MAAA,aAUIA,MAAA,+BAAcmG,EAAA6wB,cAAc,GAE/Bh3B,QACDA,MAAA,EAAAs3B,EAAA,2BAAAt3B,8BAVIA,MAAA,UAAA2d,EAAA3d,CAAyB,cAAzBA,CAAyB,qBAAzBA,CAAyB,qBAAzBA,CAAyB,WAAzBA,CAAyB,aAMzBA,MAAA,YAAAmG,EAAAiW,MAAA,KAAAjW,EAAAiW,MAAAnU,UAAA,MAAA9B,EAAAiW,MAAA,KAAAjW,EAAAiW,MAAA9a,icAsGCy1B,CAAyB,iQCpG/B,MAAM/R,EAAkB,CAC3BuS,KAAM,UACNC,QAAS,UACTC,SAAU,UACVC,KAAM,UACN,gBAAiB,UACjB,eAAgB,UAChBC,QAAS,WAIN,IAAMC,EAAqB,MAA5B,MAAOA,UAA6B71B,KAkDtCQ,YACY8c,EACAhd,EACAsjB,EACAnjB,EACAE,GAERC,QANQX,KAAAqd,SACArd,KAAAK,YACAL,KAAA2jB,cACA3jB,KAAAQ,UACAR,KAAAU,OAtDJV,KAAA61B,UAAsC,GACtC71B,KAAA81B,UAA6B,GAErB91B,KAAA8M,cACZ9M,KAAKU,KAAKkL,gBAAgBL,QACtB8B,KAAQ3G,KAAUA,IAAG,EACrBqF,KAAWrF,MACPqG,OAAarG,EAAIpH,GAAI,sBAAsBiM,QACvCyB,KAAW,OAAMhB,MAAG,CAAEiB,QAAS,SAClC,EAELd,KAAK3E,GAAOA,GAAGyF,mBAAmBX,MAAQ9E,EAAEyF,QAAU,KAAG,EACzDzB,KAAY,IAGZxL,KAAA+1B,MAAQ/1B,KAAKqd,OAAOqP,OAAOnhB,QAC/BY,KAAKE,IAID,GAHArM,KAAKg2B,UAAU,MACfh2B,KAAKg2B,UAAU,MACfh2B,KAAK81B,UAAY,GACZzpB,GAAMtG,OACX,WAAWqU,KAAS/N,EAAM,CACtB,MAAM4pB,KAAMC,OAAU9b,EAAM9a,GAAI,YAChC,IAAI62B,EAAUF,EAAIE,QAAQ,YAC1Bn2B,KAAKiB,aACD,KAAKmZ,EAAM9a,KACX62B,EACKC,SACAj1B,UAAWiT,GACRpU,KAAKq2B,qBAAqBhqB,EAAM+N,EAAOhG,KAGnDpU,KAAKiB,aAAa,UAAUmZ,EAAM9a,KAAM62B,EAAQG,QAChDH,EAAUF,EAAIE,QAAQ,UACtBn2B,KAAKiB,aACD,KAAKmZ,EAAM9a,KACX62B,EACKC,SACAj1B,UAAWiT,GACRpU,KAAKu2B,mBAAmBlqB,EAAM+N,EAAOhG,KAGjDpU,KAAKiB,aAAa,UAAUmZ,EAAM9a,KAAM62B,EAAQG,QAEpDt2B,KAAKw2B,cAAcnqB,GACnBrM,KAAKy2B,qBAAqBpqB,EAAI,KAYlCrM,KAAKiB,aAAa,SAAUjB,KAAK+1B,MAAM50B,YAC3C,CAEau1B,UAAUtc,EAAc3J,GAAiB,GAAK,IAAA/I,EAAA1H,KAAA,SAAA2H,KAAA,YACvD,MAAMmF,QAAsBpF,EAAKoF,cAC5BvB,QAAKsH,KAAK,IACVhL,aACGuG,WAAM,EACVF,MACI,CACI3P,KAAMgD,KAAKC,MACXU,SAAU,GACVkK,SAAUgO,EACVjM,QAAMhO,SAEV2M,IACC,GACT,OAAIsB,GACA,EAAOrG,MACH,+DAI0B,SAA7BL,EAAKouB,UAAU1b,EAAM9a,MAAmBmR,IACxC2J,EAAM5L,UAEP,EAAOzG,MACH,GACIqS,EAAMtY,cAAgBsY,EAAMrY,2DAIxC2F,EAAKic,YAAY9Z,UACjBnC,EAAKic,YAAY5Z,KAAKE,WAAW,CAC7BkE,QAAMhO,SAAeC,MACrBsL,UAAW,CAAC0O,KAEZ1S,EAAKrH,UAAUiB,IAAI,kCACZoG,EAAKic,YAAYgT,0BAE5BjvB,EAAKlH,QAAQqC,KACR6E,EAAKrH,UAAUiB,IAAI,+BACdwwB,IACAW,IACN,CACI1vB,KAAM,CAAEqX,WAEd,EA5CqD,EA6C3D,CAEOic,qBACH3J,EACAtS,EACArM,GAEKA,IACL/N,KAAK61B,UAAUzb,EAAM9a,IAAMyO,EAAS5B,IAAKoH,GAAM,IAAIqjB,IAAcrjB,IACjEvT,KAAK2C,QACD,mBACA,IAAM3C,KAAKy2B,qBAAqB/J,GAChC,KAER,CAEO6J,mBAAmB7J,EAAiBtS,EAAc5a,GACrDQ,KAAK81B,UAAU1b,EAAM9a,IAAM8a,EAAM5L,SAC3BhP,GAAU,OACV,eACNQ,KAAK2C,QACD,kBACA,KACI3C,KAAK62B,aAAa,oBAClB72B,KAAK82B,cAAcpK,GACnB1sB,KAAKy2B,qBAAqB/J,EAAM,EAEpC,IAER,CAEcoK,cAAcpK,GAAe,IAAApb,EAAAtR,KAAA,SAAA2H,KAAA,YACvC,MAAMovB,EAAY,GACZjU,EAAUxR,EAAKjR,UAAUiB,IAAI,uBAAyB,GAC5D,UAAW8Y,KAASsS,EAAQ,CACxB,MAAMltB,EAAS8R,EAAKwkB,UAAU1b,EAAM9a,KAAO,eAC3Cy3B,EAAU,IAAI3c,EAAMnU,UAAY,CAC5B8c,KACID,EAAQ,SAAStjB,MACjBsjB,EAAQ,GAAGtjB,MACXwjB,EAAgB,GAAGxjB,KACvBw3B,QAAS,IAGjB1lB,EAAK+L,OAAO4Z,UAAU,SAAUF,EAAW,EAbJ,EAc3C,CAEQN,qBAAqB/J,GACzB,MAAM7oB,EAA4B,GAClC,UAAWuW,KAASsS,EACXtS,EAAMnU,QACXpC,EAAS2I,KAAK,CACV5N,SAAUwb,EAAMnU,OAChBuc,WAAW,EACXC,UAAU,EACVrb,QAAS2tB,IACTrS,QAAS,GACT3f,KAAM,CACFqX,MAAO,IAAI8c,IAAM9c,GACjBlL,OAAQlP,KAAK61B,UAAUzb,EAAM9a,IAC7BE,OAAQQ,KAAK81B,UAAU1b,EAAM9a,OAIzCU,KAAKqd,OAAO8Z,YAAY,SAAUtzB,EACtC,CAEQ2yB,cAAc9J,GAClB,MAAMtK,EAAwB,GAC9B,UAAWhI,KAASsS,EACXtS,EAAMnU,SACXmc,EAAQ5V,KAAK,CACTlN,GAAI8a,EAAMnU,OACVoc,OAAQ,QACR+U,SAAU,EACV9U,SAAUA,IAAMtiB,KAAK02B,UAAUtc,KAEnCgI,EAAQ5V,KAAK,CACTlN,GAAI8a,EAAMnU,OACVoc,OAAQ,WACR+U,SAAU,EACV9U,SAAUA,IAAMtiB,KAAK02B,UAAUtc,MAGvCpa,KAAK2C,QACD,cACA,IAAM3C,KAAKqd,OAAOga,WAAW,SAAUjV,GACvC,GAER,CAAClf,SAAAlD,KAAA,mBAAAmD,iBAnMQyyB,GAAoB53B,MAAAoF,KAAApF,MAAAqF,MAAArF,MAAAsF,KAAAtF,MAAAuF,MAAAvF,MAAA2W,KAAA,EAAAzR,SAAAlD,KAAA,WAAAs3B,EAAAxiB,IAAA,OAApB8gB,EAAoB7gB,QAApB6gB,EAAoB5gB,mBAApB4gB,CAAqB","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","time_format","ctx_r5","type","ctx_r6","location","_r9","ctx_r8","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","_c0","_c1","ctx_r1","id","title","status","period","_r2","description","asset_id","for_current_user","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","is_done","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","emit","static","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","ctx_r9","checked_in","_r13","ctx_r12","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","_r10","BookingDetailsModalComponent_div_10_button_1_Template","ctx_r2","checked_out_at","checked_out","auto_checkin","state","_r5","ctx_r14","item_r15","BookingDetailsModalComponent_ng_container_36_div_5_Template","ctx_r3","event","assets","length","_c6","map_id","_c7","_r17","ctx_r16","_r19","ctx_r18","building","buildings","find","bld","includes","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","hide_map","content","MapPinComponent","has_assets","linked_bookings","_","booking_type","_this","_asyncToGenerator","checkinBooking","toPromise","catch","notifyError","notifySuccess","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","BookingDetailsModalComponent_interactive_map_38_Template","BookingDetailsModalComponent_button_49_Template","BookingDetailsModalComponent_button_50_Template","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","booking_rules","showMetadata","catchError","details","available_resources","merge","timer","filter","restrictions","user","startOfDay","valueOf","queryBookings","period_start","getUnixTime","period_end","zone_id","bookings","user_name","asset","rulesForResource","host","hidden","groups","some","grp","bookable","every","zone","parent_id","bkn","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","result","saveBooking","user_id","department","booking_id","error","updateAssetRequestsForResource","from_booking","booked_by_email","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","Promise","all","idx","unavailable","group_name","i","organisation","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","listChildMetadata","flatten","metadata","d","lockers","bank_id","map_url","count","nearby_resources","findNearbyFeature","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_32__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","$event","_r11","ctx_r10","ctx_r7","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","$implicit","selected_features","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","_r12","ctx_r11","changeResources","ctx_r13","removeResource","toggleFavourite","_r4","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r1","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","ngOnChanges","changes","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_3","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","tmp_0_0","levels","use_24hr","tmp_3_0","feat_r21","_r23","ctx_r22","tmp_1_0","ctx_r20","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","active_levels","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_5__","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","tmp_2_0","tmp_10_0","tmp_12_0","desk_r7","_r14","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ctx_r15","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_r3","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r1","DeskMapComponent","is_displayed","zoom","center","x","y","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","setZoom","new_zoom","max","min","resetMap","_angular_core__WEBPACK_IMPORTED_MODULE_6__","DeskMapComponent_mat_option_3_Template","displayed","selected_ids","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","company","item_r22","_r24","ctx_r23","_r26","ctx_r25","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","sent","InviteVisitorFormComponent","_service","done","last_count","visitors","initFormZone","setValidators","Validators","required","split","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","_angular_core__WEBPACK_IMPORTED_MODULE_8__","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","feat_r2","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","zone_ids","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","max_duration","lvl","tags","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","available_spaces","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","n","c","g","h","v","m","u","p","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","init","tableWrite","canvasWrite","generateQRCode","code","toImage","src","prototype","getContext","lineWidth","round","canvas","width","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","console","log","Error","Image","toDataURL","ExploreBookQrComponent","qr_code","origin","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","can_book_for_others","controls","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","organiser","app_name","navigate","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r0","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","pos","getBoundingClientRect","body","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","free","pending","reserved","busy","unknown","ExploreSpacesService","_bookings","_statuses","_bind","unsubWith","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","_updateHoverElements","bookSpace","openEventLinkModal","CalendarEvent","clearTimeout","_updateStatus","style_map","opacity","setStyles","Space","setFeatures","priority","setActions","_angular_core__WEBPACK_IMPORTED_MODULE_19__"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-2 rounded-2xl text-white px-3 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-warning]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'pending'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { debounceTime, map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n"],"x_google_ignoreList":[]}