{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","time_format","ctx_r5","type","ctx_r6","location","_r9","ctx_r8","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","_c0","_c1","ctx_r1","id","title","status","period","_r3","description","asset_id","for_current_user","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","is_done","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","emit","static","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","ctx_r10","checked_in","_r14","ctx_r13","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","ctx_r9","checking_in","_r12","BookingDetailsModalComponent_div_10_button_1_Template","ctx_r2","checked_out_at","checked_out","auto_checkin","state","_r5","item_r18","quantity","request_r16","_r20","$implicit","ctx_r19","show_request","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","deliver_at","ctx_r15","items","BookingDetailsModalComponent_ng_container_36_div_5_Template","ctx_r3","valid_assets","length","map_id","_r22","ctx_r21","_r24","ctx_r23","_r26","ctx_r25","building","buildings","find","bld","includes","can_edit","booking_type","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","hide_map","content","MapPinComponent","has_assets","linked_bookings","_","_this","_asyncToGenerator","checkinBooking","toPromise","catch","notifyError","notifySuccess","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","booking_rules","building_list","Promise","all","showMetadata","building_rules","rules","details","mapping","available_resources","merge","timer","filter","restrictions","user","startOfDay","valueOf","queryBookings","period_start","getUnixTime","period_end","zone_id","organisation","limit","bookings","user_name","asset","rulesForResource","host","zone","hidden","groups","some","grp","bookable","every","parent_id","bkn","assigned_to","catchError","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","result","saveBooking","user_id","phone","department","booking_id","error","assets","requests","validateAssetRequestsForResource","from_booking","booked_by_email","console","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","idx","unavailable","group_name","i","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","use_region","map_metadata","metadata","d","lockers","bank_id","forkJoin","listChildMetadata","flatten","map_url","count","nearby_resources","findNearbyFeature","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_33__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","$event","_r11","_r13","ctx_r12","ctx_r7","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","ctx_r14","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","selected_features","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","ctx_r11","changeResources","removeResource","toggleFavourite","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","_r4","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r2","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","ngOnChanges","changes","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_2","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r12","setBuilding","DeskFiltersComponent_ng_container_12_mat_form_field_1_mat_option_5_Template","tmp_2_0","lvl_r16","_r18","ctx_r17","DeskFiltersComponent_ng_container_12_mat_form_field_3_mat_option_3_Template","tmp_0_0","levels","DeskFiltersComponent_ng_container_12_mat_form_field_1_Template","DeskFiltersComponent_ng_container_12_mat_form_field_3_Template","hide_levels","reg_r22","setRegion","DeskFiltersComponent_ng_container_13_mat_form_field_1_mat_option_2_Template","region","regions","level_r28","DeskFiltersComponent_ng_container_13_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r26","_r30","ctx_r29","DeskFiltersComponent_ng_container_13_mat_form_field_3_mat_optgroup_5_Template","ctx_r20","region_levels","DeskFiltersComponent_ng_container_13_mat_form_field_1_Template","DeskFiltersComponent_ng_container_13_mat_form_field_3_Template","_r32","ctx_r31","use_24hr","tmp_3_0","feat_r34","_r36","ctx_r35","tmp_1_0","ctx_r33","DeskFiltersComponent_section_32_div_3_Template","_r38","ctx_r37","reg","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","active_levels","region_list","active_region","l","tags","dismiss","setLevel","_angular_core__WEBPACK_IMPORTED_MODULE_5__","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_ng_container_12_Template","DeskFiltersComponent_ng_container_13_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r4","DeskMapComponent_mat_form_field_1_mat_option_2_Template","level_r11","DeskMapComponent_ng_template_2_mat_optgroup_2_mat_option_1_Template","bld_r9","DeskMapComponent_ng_template_2_mat_optgroup_2_Template","DeskMapComponent","is_displayed","zoom","center","x","y","coordinates","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","latitude","longitude","split","parseFloat","setZoom","new_zoom","max","min","resetMap","_angular_core__WEBPACK_IMPORTED_MODULE_6__","DeskMapComponent_mat_form_field_1_Template","DeskMapComponent_ng_template_2_Template","displayed","selected_ids","_r10","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","company","item_r22","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","_r17","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","sent","InviteVisitorFormComponent","_service","done","last_count","visitors","initFormZone","setValidators","Validators","required","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","_angular_core__WEBPACK_IMPORTED_MODULE_8__","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","feat_r2","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","zone_ids","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","bld_r10","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r14","_r16","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r20","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r26","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r24","_r28","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","ctx_r18","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r30","toggleFeature","ParkingSpaceFiltersComponent_section_40_div_3_Template","_r34","_form","max_duration","lvl","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_section_40_Template","ParkingSpaceFiltersComponent_div_42_Template","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","opt_r5","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","available_spaces","setCustomZone","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","style","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r1","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    notifyError,\n    notifySuccess,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                rules[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n                limit: 1000,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[\n                                    asset.zone?.id || this._org.building.id\n                                ] || []\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                ) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || []\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata)))\n                    )\n                )\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <label for=\"location\" i18n>Location</label>\n                <ng-container *ngIf=\"!use_region\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngIf=\"use_region\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option [value]=\"\">Any Level</mat-option>\n                            <mat-optgroup\n                                *ngFor=\"let bld of region_levels | async\"\n                                [label]=\"bld.name\"\n                            >\n                                <mat-option\n                                    [value]=\"level.id\"\n                                    *ngFor=\"let level of bld.levels\"\n                                >\n                                    {{ level.display_name || level.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full no-subscript\"\n                *ngIf=\"!use_region; else region_level_view\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <ng-template #region_level_view>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"level\"\n                        (ngModelChange)=\"setLevel($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Any Level\"\n                        i18n-placeholder\n                    >\n                        <mat-optgroup\n                            *ngFor=\"let bld of region_levels | async\"\n                            [label]=\"bld.name\"\n                        >\n                            <mat-option\n                                [value]=\"level\"\n                                *ngFor=\"let level of bld.levels\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-optgroup>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && !l.tags.includes('parking')\n                ),\n            }));\n            return region_levels;\n        })\n    );\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n"],"x_google_ignoreList":[]}