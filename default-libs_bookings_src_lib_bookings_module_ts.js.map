{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r0","day","BookingCardComponent_h4_0_span_1_Template","show_day","booking","date","time_format","type","location","status","_r2","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_17_Template","_c0","_c1","id","title","period","desk_icon_r3","raw_description","asset_name","asset_id","for_current_user","booking_type","is_reserved_parking_space","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","is_done","constructor","_dialog","_route","_org","_parking","super","edit","EventEmitter","remove","end","assigned_space","pipe","map","space","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","ngOnChanges","changes","removeHtmlTags","description","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","html","DOMParser","parseFromString","body","textContent","timeout","ref","open","GroupEventDetailsModalComponent","BookingDetailsModalComponent","data","concierge","componentInstance","emit","static","t","i1","i2","i3","i4","i5","_angular_core__WEBPACK_IMPORTED_MODULE_6__","VBU","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","ctx_r1","extension_data","images","checked_in","_r3","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","state","menu_r5","item_r8","quantity","request_r7","_r6","$implicit","show_request","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","deliver_at","items","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","length","map_id","_r9","_r10","setDeskHeight","_r11","_r12","building","buildings","find","bld","includes","region","regions","parent_id","can_edit","is_checked_in","desk_height_enabled","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","hide_map","content","MapPinComponent","has_assets","linked_bookings","_","console","log","_this","_asyncToGenerator","checkinBooking","toPromise","catch","notifyError","notifySuccess","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","afterClosed","DeskSettingsModalComponent","asset_ids","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_8__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","_r1","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","BookingDetailsModalComponent_button_47_Template","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","booking_rules","building_list","Promise","all","showMetadata","building_rules","mapping","rules","details","available_resources","merge","timer","filter","restrictions","user","startOfDay","valueOf","bookedResourceList","period_start","getUnixTime","period_end","zone_id","organisation","booked_ids","asset","rulesForResource","host","zone","hidden","groups","some","grp","bookable","every","assigned_to","catchError","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","event_id","result","saveBooking","user_name","user_id","phone","department","ical_uid","booking_id","error","assets","requests","validateAssetRequestsForResource","from_booking","booked_by_email","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","idx","unavailable","group_name","i","bkn","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","active_bookings","queryBookings","limit","allowed_bookings","current","use_region","map_metadata","metadata","d","lockers","bank_id","forkJoin","listChildMetadata","flatten","map_url","count","nearby_resources","findNearbyFeature","i6","_angular_core__WEBPACK_IMPORTED_MODULE_33__","jDH","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_4__","SharedBookingsModule","fesm2022_core","$C","G2t","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","SharedSpacesModule","SharedEventsModule","SharedUsersModule","$event","ctx_r2","_r4","_r5","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","load_state_r6","opt_r3","ctx_r3","selected_features","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r5","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","toggleFavourite","placeholder_r6","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","desk","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_1","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","reg_r4","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","bld_r6","setBuilding","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","tmp_3_0","tmp_4_0","lvl_r8","DeskFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","levels","use_24hr","feat_r11","DeskFiltersComponent_section_36_div_3_Template","reg","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","region_list","active_region","levelsForRegion","levelsForBuilding","lvl","tags","dismiss","setLevel","l","hide_levels","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","tmp_2_0","tmp_13_0","tmp_15_0","desk_r2","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","placeholder_r4","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","empty_state_r5","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","DeskMapComponent","is_displayed","zoom","center","x","y","coordinates","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","latitude","longitude","split","parseFloat","setZoom","new_zoom","max","min","resetMap","_angular_core__WEBPACK_IMPORTED_MODULE_7__","DeskMapComponent_mat_form_field_1_Template","tmp_0_0","displayed","selected_ids","_dialog_ref","_event_form","isSelected","setSelected","setTimeout","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","preset","setPreset","edit_presets","height","updatePreset","formatLabel","toFixed","sitting_height","standing_height","last_height","parseInt","localStorage","new_height","sys_id","binding","getModule","execute","DeskSettingsModalComponent_div_0_Template","DeskSettingsModalComponent_ng_template_1_Template","desk_height_tooltip_r4","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","setVisitor","company","item_r10","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r15","onDone","sent","InviteVisitorFormComponent","_service","done","visitors","initFormZone","setValidators","Validators","required","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","locker_r2","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","empty_state_r3","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","bld_r4","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r6","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","max_duration","feat_r14","_r13","toggleFeature","ParkingSpaceFiltersComponent_section_30_div_3_Template","_form","active_levels","new_list","_angular_core__WEBPACK_IMPORTED_MODULE_5__","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_div_21_Template","ParkingSpaceFiltersComponent_section_30_Template","ParkingSpaceFiltersComponent_div_32_Template","space_r2","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","available_spaces","setCustomZone","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","disable_date","ParkingSpaceListFieldComponent_div_1_Template","ParkingService","level_list","blds","buildingsForRegion","bld_ids","lvls","users","user_details","deny_parking_access","deny","booked_space","booking_list","_angular_core__WEBPACK_IMPORTED_MODULE_17__","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","parent","nativeElement","parentElement","style","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk-settings-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/bookings/src/lib/parking.service.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ParkingService } from './parking.service';\nimport { GroupEventDetailsModalComponent } from '../../../events/src/lib/group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{\n                                raw_description ||\n                                    booking?.asset_name ||\n                                    booking?.asset_id\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"is_reserved_parking_space | async\"\n                >\n                    {{\n                        booking.status !== 'declined' ? 'RESERVED' : 'RELEASED'\n                    }}\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public readonly is_reserved_parking_space =\n        this._parking.assigned_space.pipe(\n            map(\n                (space) =>\n                    this.booking.booking_type === 'parking' &&\n                    space &&\n                    this.booking.asset_id === space.id,\n            ),\n        );\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _parking: ParkingService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : '',\n            ),\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description,\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit()),\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit(),\n                ),\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit()),\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [class.text-success-content]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress') &&\n                                booking.status !== 'declined'\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-12 w-12\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                        'rejected'\n                                                      ? 'close'\n                                                      : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true,\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_checked_in && desk_height_enabled\"\n                (click)=\"setDeskHeight()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon className=\"material-symbols-rounded\">\n                        height\n                    </app-icon>\n                    <div i18n>Set Desk Height</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request',\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        const building = this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id),\n        );\n        if (this._settings.get('app.use_region')) {\n            const region = this._org.regions.find(\n                (region) =>\n                    (this.booking?.zones || []).includes(region.id) ||\n                    region.id === building?.parent_id,\n            );\n            if (region) return region;\n        }\n        return building;\n    }\n\n    public get can_edit() {\n        return (\n            this.booking.booking_type !== 'visitor' &&\n            this.booking.booking_type !== 'parking'\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`,\n        );\n    }\n\n    public get is_checked_in() {\n        return this.booking.checked_in;\n    }\n\n    public get desk_height_enabled() {\n        return (\n            this.booking?.type === 'desk' &&\n            this._settings.get('app.desks.height_enabled')\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {\n        console.log(\n            'Building',\n            this.building,\n            this._settings.get('app.use_region'),\n        );\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`,\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id,\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                  ? 'rejected'\n                  : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n\n    public setDeskHeight() {\n        this._dialog.open(DeskSettingsModalComponent, {\n            data: { id: this.booking.asset_ids[0] || this.booking.asset_id },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { bookedResourceList, queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n    /** Whether to group bookings */\n    disable_date?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}',\n        ),\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1),\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1),\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise(),\n                ),\n            ),\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0,\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`),\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return bookedResourceList({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n            }).pipe(\n                map(\n                    (booked_ids) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration,\n                        ).valueOf();\n                        this._resource_use = {};\n                        for (const id of booked_ids) {\n                            this._resource_use[id] = ' ';\n                        }\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[asset.zone?.id] ||\n                                    restrictions[asset.zone?.parent_id] ||\n                                    restrictions[this._org.building.id] ||\n                                    [],\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp),\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_),\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !booked_ids.includes(asset.id) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([])),\n                ),\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id),\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        }),\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        }),\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            }),\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService,\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            }),\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1,\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            }),\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {}),\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}',\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, ''],\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}',\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form,\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type,\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const resources = value.resources || [];\n        const zones = resources[0]?.zone\n            ? unique([\n                  this._org.organisation.id,\n                  this._org.region?.id,\n                  resources[0]?.zone?.parent_id,\n                  resources[0]?.zone?.id,\n              ])\n            : [this._org.organisation.id, this._org.region?.id];\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    group: value.group,\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n                zones: unique([...zones, ...(value.zones || [])]),\n            }),\n            event_id\n                ? { ical_uid: value.ical_uid, event_id: event_id }\n                : parent_id\n                  ? { booking_id: parent_id }\n                  : {},\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets,\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time',\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result),\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email,\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id,\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length,\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email',\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type,\n                ),\n            ),\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd',\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          this._org.region?.id,\n                          asset?.zone?.parent_id,\n                          asset?.zone?.id,\n                      ])\n                    : [this._org.organisation.id, this._org.region?.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`,\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType,\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        let active_bookings = bookings.filter(\n            (_) =>\n                _.status !== 'declined' &&\n                _.status !== 'cancelled' &&\n                !_.rejected,\n        );\n        if (\n            active_bookings.find((_) => _.asset_id === asset_id && id !== _.id)\n        ) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            active_bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.id !== id,\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || [],\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id,\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata))),\n                    ),\n                ),\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number,\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id,\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id),\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item),\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item,\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        },\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) {\n            this.displayed = null;\n            setTimeout(() => this._dialog_ref.close([item]), 50);\n        }\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id),\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'desk-settings-modal',\n    template: `\n        <div\n            class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\"\n            *ngIf=\"!edit_presets; else desk_height_tooltip\"\n        >\n            <div class=\"text-lg\" i18n>Desk Height</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience\n            </div>\n            <div class=\"flex flex-col mt-2 mb-4\">\n                <label>Presets</label>\n                <div class=\"flex items-center space-x-2 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript flex-1 w-1/2\"\n                    >\n                        <mat-select\n                            placeholder=\"No selected preset\"\n                            [(ngModel)]=\"preset\"\n                            (ngModelChange)=\"setPreset($event)\"\n                        >\n                            <mat-option value=\"\">None</mat-option>\n                            <mat-option value=\"standing\">Standing</mat-option>\n                            <mat-option value=\"sitting\">Seated</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"edit_presets = true\"\n                        class=\"rounded h-12 w-12 bg-secondary text-secondary-content\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                </div>\n                <label>Current Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"height\"\n                            (ngModelChange)=\"updatePreset(height)\"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button btn matRipple (click)=\"setDeskHeight()\" class=\"w-full\">\n                Apply Settings\n            </button>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 right-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <ng-template #desk_height_tooltip>\n            <desk-height-presets\n                [show_close]=\"true\"\n                (close)=\"edit_presets = false\"\n            ></desk-height-presets>\n        </ng-template>\n    `,\n    styles: [],\n})\nexport class DeskSettingsModalComponent {\n    public readonly desk_id = this._data.id;\n    public edit_presets = false;\n    public preset: string;\n    public height = 71;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { id: string },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<DeskSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        const sitting_height = this._settings.get('desk_sitting_height');\n        const standing_height = this._settings.get('desk_standing_height');\n        if (!sitting_height && !standing_height) {\n            this.edit_presets = true;\n        }\n        const last_height = parseInt(\n            localStorage.getItem('PLACEOS.last_desk_height'),\n            10\n        );\n        this.height = last_height || sitting_height || 71;\n        if (this.height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (this.height === standing_height) {\n            this.preset = 'standing';\n        }\n    }\n\n    public updatePreset(new_height: number) {\n        const sitting_height = this._settings.get('desk_sitting_height') || 71;\n        const standing_height =\n            this._settings.get('desk_standing_height') || 102;\n        if (new_height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (new_height === standing_height) {\n            this.preset = 'standing';\n        } else {\n            this.preset = null;\n        }\n    }\n\n    public setPreset(value: string) {\n        console.log('Set preset:', value);\n        switch (value) {\n            case 'standing':\n                this.height = this._settings.get('desk_standing_height') || 102;\n                break;\n            case 'sitting':\n                this.height = this._settings.get('desk_sitting_height') || 71;\n                break;\n            default:\n                this.height = 70;\n                break;\n        }\n    }\n\n    public async setDeskHeight() {\n        const sys_id = this._org.binding('desks');\n        localStorage.setItem('PLACEOS.last_desk_height', `${this.height}`);\n        if (!sys_id) return this._dialog_ref.close();\n        const module = getModule(sys_id, 'DeskControl');\n        await module\n            .execute('set_desk_height', [this.desk_id, this.height])\n            .catch((_) => {\n                notifyError('Error setting desk height.' + _);\n                throw _;\n            });\n        notifySuccess('Successfully set desk height');\n        this._dialog_ref.close();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._settings.get('app.use_region')\n            ? this._org.region\n            : this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"false\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id,\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        }),\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id,\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking'),\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        }),\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    space.level?.display_name ||\n                                    space.level?.name ||\n                                    space.zone?.display_name ||\n                                    space.zone?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity || 1 }} {\n                            (space.capacity < 1 ? 2 : space.capacity || 1),\n                            plural, =1 { Person } other { People } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div>Change</div>\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">close</app-icon>\n                                <div>Remove</div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon class=\"text-2xl\">search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    @Input() public disable_date = false;\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: {\n                    capacity: this.room_size,\n                    disable_date: this.disable_date,\n                },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    flatten,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, forkJoin, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryBookings } from './bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { ca } from 'date-fns/locale';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n}\n\nexport interface ParkingUser {\n    id: string;\n    name: string;\n    email: string;\n    car_model: string;\n    car_colour: string;\n    plate_number: string;\n    phone: string;\n    notes: string;\n    deny: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParkingService extends AsyncHandler {\n    private _loading = new BehaviorSubject<string[]>([]);\n\n    public readonly loading =\n        this._loading.asObservable(); /** List of available parking levels for the current building */\n    public levels = this._org.level_list.pipe(\n        map((_) => {\n            if (!this._settings.get('app.use_region')) {\n                const blds = this._org.buildingsForRegion();\n                const bld_ids = blds.map((bld) => bld.id);\n                const list = _.filter(\n                    (lvl) =>\n                        bld_ids.includes(lvl.parent_id) &&\n                        lvl.tags.includes('parking')\n                );\n                list.map((lvl) => ({\n                    ...lvl,\n                    display_name: `${\n                        blds.find((_) => _.id === lvl.parent_id)?.display_name\n                    } - ${lvl.display_name}`,\n                }));\n                return list;\n            }\n            return _.filter(\n                (lvl) =>\n                    lvl.parent_id === this._org.building.id &&\n                    lvl.tags.includes('parking')\n            );\n        })\n    );\n    /** List of parking spaces for the current building/level */\n    public spaces = combineLatest([this.levels]).pipe(\n        filter(([lvls]) => !!lvls[0]?.id),\n        switchMap(([levels]) => {\n            this._loading.next([...this._loading.getValue(), 'spaces']);\n            return forkJoin(\n                levels.map((lvl) =>\n                    showMetadata(lvl.id, 'parking-spaces').pipe(\n                        map(\n                            (d) =>\n                                (d.details instanceof Array\n                                    ? d.details\n                                    : []\n                                ).map((s) => ({\n                                    ...s,\n                                    zone_id: lvl.id,\n                                })) as ParkingSpace[]\n                        )\n                    )\n                )\n            );\n        }),\n        map((list) => flatten<ParkingSpace>(list)),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'spaces')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the current building/level */\n    public users = combineLatest([this._org.active_building]).pipe(\n        filter(([bld]) => !!bld?.id),\n        switchMap(([bld]) => {\n            this._loading.next([...this._loading.getValue(), 'users']);\n            return showMetadata(bld.id, 'parking-users');\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingUser[]\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'users')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly assigned_space = this.spaces.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.assigned_to?.toLowerCase() ===\n                    currentUser().email?.toLowerCase()\n            )\n        )\n    );\n\n    public readonly user_details = this.users.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.email?.toLowerCase() ===\n                    currentUser().email?.toLowerCase()\n            )\n        )\n    );\n\n    public readonly deny_parking_access = this.user_details.pipe(\n        map((details) => !!details?.deny)\n    );\n\n    public readonly booked_space = combineLatest([\n        this._org.active_building,\n        this.spaces,\n    ]).pipe(\n        map(([_, spaces]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'parking',\n            }).pipe(\n                catchError(() => of([])),\n                map((booking_list) =>\n                    booking_list\n                        .map((booking) =>\n                            spaces.find(\n                                (space) => space.id === booking.asset_id\n                            )\n                        )\n                        .filter((space) => !!space)\n                )\n            )\n        ),\n        map((_) => _[0]),\n        shareReplay(1)\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription('spaces', this.assigned_space.subscribe());\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n"],"x_google_ignoreList":[]}